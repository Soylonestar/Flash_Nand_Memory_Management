
Flash_Memory_Management.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00004a4e  2**0
                  ALLOC, LOAD, DATA
  1 .text         0000017a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000030f  00800200  00800200  00004a4e  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00004a4e  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 00000196  00000000  00000000  00004a7d  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000001c8  00000000  00000000  00004c13  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003341  00000000  00000000  00004ddb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000121c  00000000  00000000  0000811c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001916  00000000  00000000  00009338  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000574  00000000  00000000  0000ac50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000542  00000000  00000000  0000b1c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ded  00000000  00000000  0000b706  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  0000c4f3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  0000498c  0000498c  00004a40  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000c6e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .progmemx.data 00000013  0000069f  0000069f  00000753  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 16 .text.main    0000003e  00004420  00004420  000044d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.USART_Init 00000036  00004546  00004546  000045fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.USART_TX_Data 0000000e  000048ca  000048ca  0000497e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.USART_Data 0000004c  000041fa  000041fa  000042ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.USART_RX_Data 0000000e  000048d8  000048d8  0000498c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.LED_Init 00000016  0000486a  0000486a  0000491e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.LED_Red_Toggle 0000000e  000048e6  000048e6  0000499a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.LED_Green_Toggle 0000000e  000048f4  000048f4  000049a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.VOLTAGE_Translator_Init 00000026  000046ba  000046ba  0000476e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.SLAVE_CS_Deselect 00000062  00004022  00004022  000040d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.FLASH_NAND_CS_ENABLE 0000003a  0000449a  0000449a  0000454e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.FLASH_NAND_CS_DISABLE 0000003a  000044d4  000044d4  00004588  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.Print_To_User 000000ac  000035cc  000035cc  00003680  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .progmemx.data 000003bc  0000017a  0000017a  0000022e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 30 .text.HEX_Verification 000000bc  000033a6  000033a6  0000345a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.ExecuteCommand 00000584  00001c28  00001c28  00001cdc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.UserInput 000000be  000032e8  000032e8  0000339c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.COLUMN_BLOCK_PAGE_ADDRESSER 00000150  0000271c  0000271c  000027d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.NAND_Address_Checker 0000009a  00003a4e  00003a4e  00003b02  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .bss.input_counter 00000002  0080050f  0080050f  00004a4e  2**0
                  ALLOC
 36 .bss.arr_address 00000002  00800511  00800511  00004a4e  2**0
                  ALLOC
 37 .text.CLEAR_ARR 00000060  00004084  00004084  00004138  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.SPI_MASTER_Init 00000024  0000472c  0000472c  000047e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.FLASH_Write_Enable 0000002a  00004640  00004640  000046f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .progmemx.data 000000d4  00000536  00000536  000005ea  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 41 .text.FLASH_ID 0000009a  00003ae8  00003ae8  00003b9c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.FLASH_Die_Selection 00000084  00003dbc  00003dbc  00003e70  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.FLASH_Configuration 00000084  00003e40  00003e40  00003ef4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.FLASH_Block_Lock_Setter 00000084  00003ec4  00003ec4  00003f78  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.FLASH_Block_Lock 000000ba  00003462  00003462  00003516  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.FLASH_Reset 0000002e  00004612  00004612  000046c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.FLASH_MainArray_Address 000000a6  00003678  00003678  0000372c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.FLASH_Column_Address 0000005c  00004142  00004142  000041f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.FLASH_Data_Storage 000000a2  0000390a  0000390a  000039be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.FLASH_Read_From_Cache_x1 0000005c  0000419e  0000419e  00004252  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.FLASH_Status 0000008c  00003ca4  00003ca4  00003d58  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.FLASH_Program_Execute 00000040  000043a0  000043a0  00004454  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.FLASH_Page_Program 00000090  00003c14  00003c14  00003cc8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.FLASH_Page_Read 00000046  0000428e  0000428e  00004342  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.FLASH_Para_Pg 00000070  00003f48  00003f48  00003ffc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.FLASH_Block_Erase 00000044  000042d4  000042d4  00004388  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .progmemx.data 0000007f  0000060a  0000060a  000006be  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 58 .text.Page_Tester 000000c0  00003228  00003228  000032dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.libgcc  0000000e  00004902  00004902  000049b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.__dummy_fini 00000002  00004994  00004994  00004a48  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.__dummy_funcs_on_exit 00000002  00004996  00004996  00004a4a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.__dummy_simulator_exit 00000002  00004998  00004998  00004a4c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.exit    00000016  00004880  00004880  00004934  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.__wrap_sprintf 00000026  000046e0  000046e0  00004794  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .progmemx.data 00000007  000006d2  000006d2  00000786  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 66 .text.__fmt_s 000000ca  0000315e  0000315e  00003212  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.__out   0000006a  00003fb8  00003fb8  0000406c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.__pad   0000010e  00002c24  00002c24  00002cd8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.__fmt_state 000000a4  0000371e  0000371e  000037d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .progmemx.data 00000006  000006d9  000006d9  0000078d  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 71 .text.__printf_core 00000832  000006e0  000006e0  00000794  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .progmemx.data.state_table 00000016  00000689  00000689  0000073d  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 73 .text.fputc   00000092  00003b82  00003b82  00003c36  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.__fmt_d 0000017e  0000242c  0000242c  000024e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.__fmt_o 000000d4  00002ee8  00002ee8  00002f9c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.__cvt_u 0000014a  0000286c  0000286c  00002920  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.__fmt_u 000000b0  0000351c  0000351c  000035d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.__fmt_x 00000280  000021ac  000021ac  00002260  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.__pop_float 00000040  000043e0  000043e0  00004494  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.__pop_int 00000172  000025aa  000025aa  0000265e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text.__pop_ptr 000000d8  00002e10  00002e10  00002ec4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.sprintf 00000026  00004706  00004706  000047ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .text.vsprintf 00000018  0000480a  0000480a  000048be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 .text.atoi    0000008c  00003d30  00003d30  00003de4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 .text.memset  00000012  00004896  00004896  0000494a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 .text.strcmp  00000044  00004318  00004318  000043cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 .text.strlen  00000024  00004750  00004750  00004804  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 .text.tolower 00000010  000048ba  000048ba  0000496e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 .text.toupper 00000012  000048a8  000048a8  0000495c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 .text._Exit   00000004  00004990  00004990  00004a44  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 .text.__vsprintf 00000018  00004822  00004822  000048d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 .text.__vsnprintf 000000a4  000037c2  000037c2  00003876  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 .text.vsnprintf 000000a4  00003866  00003866  0000391a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 .text.vfprintf 00000030  000045b2  000045b2  00004666  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 .text.__vfprintf 00000030  000045e2  000045e2  00004696  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 .progmemx.data 00000010  000006b2  000006b2  00000766  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 97 .text.__fmt_fp 000006ba  00000f12  00000f12  00000fc6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 98 .progmemx.data 00000010  000006c2  000006c2  00000776  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 99 .text.__fmt_a 0000065c  000015cc  000015cc  00001680  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 .text.strcpy  0000001c  000047b6  000047b6  0000486a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 .text.libgcc.div 00000028  0000466a  0000466a  0000471e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 .text.libgcc.div 0000001c  000047d2  000047d2  00004886  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 .text.libgcc.div 000000a2  000039ac  000039ac  00003a60  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 .text.libgcc  00000020  00004796  00004796  0000484a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 .text.libgcc.prologue 00000038  0000450e  0000450e  000045c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 .text.libgcc.prologue 00000036  0000457c  0000457c  00004630  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 .text.libgcc  0000001c  000047ee  000047ee  000048a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 .text.libgcc.builtins 0000003c  0000445e  0000445e  00004512  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 .text.libgcc  00000018  0000483a  0000483a  000048ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 .text.libgcc.div 00000028  00004692  00004692  00004746  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 .text         0000000e  00004910  00004910  000049c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 .text         000000ce  00003090  00003090  00003144  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 .text         0000000a  00004962  00004962  00004a16  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 .text         00000008  00004976  00004976  00004a2a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 .text         000000de  00002d32  00002d32  00002de6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 .text         0000000e  0000491e  0000491e  000049d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 .text         0000005e  000040e4  000040e4  00004198  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 .text         00000048  00004246  00004246  000042fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 .text         0000000c  00004956  00004956  00004a0a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 .text         00000006  00004986  00004986  00004a3a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 .text         0000000e  0000492c  0000492c  000049e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 .text         0000000e  0000493a  0000493a  000049ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 .text         00000022  00004774  00004774  00004828  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 .text         00000044  0000435c  0000435c  00004410  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 .text         0000000e  00004948  00004948  000049fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 .text         0000000a  0000496c  0000496c  00004a20  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 .text         00000008  0000497e  0000497e  00004a32  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 .text         000000d4  00002fbc  00002fbc  00003070  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 .text.floorf  00000132  00002af2  00002af2  00002ba6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 .text.fmaf    0000013c  000029b6  000029b6  00002a6a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 .text.libgcc  00000018  00004852  00004852  00004906  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__ctors_end>
   4:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
   8:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
   c:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  10:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  14:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  18:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  1c:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  20:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  24:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  28:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  2c:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  30:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  34:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  38:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  3c:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  40:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  44:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  48:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  4c:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  50:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  54:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  58:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  5c:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  60:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  64:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  68:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  6c:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  70:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  74:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  78:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  7c:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  80:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  84:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  88:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  8c:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  90:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  94:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  98:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  9c:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  a0:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  a4:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  a8:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  ac:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  b0:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  b4:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  b8:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  bc:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  c0:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  c4:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  c8:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  cc:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  d0:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  d4:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  d8:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  dc:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>
  e0:	0c 94 c6 24 	jmp	0x498c	; 0x498c <__bad_interrupt>

000000e4 <.dinit>:
  e4:	02 00       	.word	0x0002	; ????
  e6:	05 13       	cpse	r16, r21
  e8:	80 00       	.word	0x0080	; ????

000000ea <__trampolines_start>:
  ea:	0c 94 7a 17 	jmp	0x2ef4	; 0x2ef4 <__fmt_o+0xc>
  ee:	0c 94 76 03 	jmp	0x6ec	; 0x6ec <__printf_core+0xc>
  f2:	0c 94 8f 07 	jmp	0xf1e	; 0xf1e <__fmt_fp+0xc>
  f6:	0c 94 dc 10 	jmp	0x21b8	; 0x21b8 <__fmt_x+0xc>
  fa:	0c 94 ec 0a 	jmp	0x15d8	; 0x15d8 <__fmt_a+0xc>
  fe:	0c 94 f7 22 	jmp	0x45ee	; 0x45ee <__vfprintf+0xc>
 102:	0c 94 e1 14 	jmp	0x29c2	; 0x29c2 <fmaf+0xc>
 106:	0c 94 df 22 	jmp	0x45be	; 0x45be <vfprintf+0xc>
 10a:	0c 94 1c 12 	jmp	0x2438	; 0x2438 <__fmt_d+0xc>
 10e:	0c 94 76 23 	jmp	0x46ec	; 0x46ec <_sprintf_cdnopuxX+0xc>
 112:	0c 94 89 23 	jmp	0x4712	; 0x4712 <sprintf+0xc>
 116:	0c 94 3c 14 	jmp	0x2878	; 0x2878 <__cvt_u+0xc>
 11a:	0c 94 94 1a 	jmp	0x3528	; 0x3528 <__fmt_u+0xc>

0000011e <__ctors_end>:
 11e:	11 24       	eor	r1, r1
 120:	1f be       	out	0x3f, r1	; 63
 122:	cf ef       	ldi	r28, 0xFF	; 255
 124:	d1 e2       	ldi	r29, 0x21	; 33
 126:	de bf       	out	0x3e, r29	; 62
 128:	cd bf       	out	0x3d, r28	; 61
 12a:	00 e0       	ldi	r16, 0x00	; 0
 12c:	0c bf       	out	0x3c, r16	; 60

0000012e <__do_copy_data>:
 12e:	e4 ee       	ldi	r30, 0xE4	; 228
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	40 e0       	ldi	r20, 0x00	; 0
 134:	19 c0       	rjmp	.+50     	; 0x168 <__do_clear_bss+0x8>
 136:	b7 91       	elpm	r27, Z+
 138:	a7 91       	elpm	r26, Z+
 13a:	37 91       	elpm	r19, Z+
 13c:	27 91       	elpm	r18, Z+
 13e:	07 91       	elpm	r16, Z+
 140:	07 fd       	sbrc	r16, 7
 142:	0e c0       	rjmp	.+28     	; 0x160 <__do_clear_bss>
 144:	97 91       	elpm	r25, Z+
 146:	87 91       	elpm	r24, Z+
 148:	ef 01       	movw	r28, r30
 14a:	f9 2f       	mov	r31, r25
 14c:	e8 2f       	mov	r30, r24
 14e:	0b bf       	out	0x3b, r16	; 59
 150:	07 90       	elpm	r0, Z+
 152:	0d 92       	st	X+, r0
 154:	a2 17       	cp	r26, r18
 156:	b3 07       	cpc	r27, r19
 158:	d9 f7       	brne	.-10     	; 0x150 <__do_copy_data+0x22>
 15a:	fe 01       	movw	r30, r28
 15c:	1b be       	out	0x3b, r1	; 59
 15e:	04 c0       	rjmp	.+8      	; 0x168 <__do_clear_bss+0x8>

00000160 <__do_clear_bss>:
 160:	1d 92       	st	X+, r1
 162:	a2 17       	cp	r26, r18
 164:	b3 07       	cpc	r27, r19
 166:	e1 f7       	brne	.-8      	; 0x160 <__do_clear_bss>
 168:	e9 3e       	cpi	r30, 0xE9	; 233
 16a:	f4 07       	cpc	r31, r20
 16c:	21 f7       	brne	.-56     	; 0x136 <__do_copy_data+0x8>
 16e:	0e 94 10 22 	call	0x4420	; 0x4420 <main>
 172:	0c 94 40 24 	jmp	0x4880	; 0x4880 <exit>

00000176 <_exit>:
 176:	f8 94       	cli

00000178 <__stop_program>:
 178:	ff cf       	rjmp	.-2      	; 0x178 <__stop_program>

Disassembly of section .text:

0000498c <__bad_interrupt>:
    498c:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00004420 <main>:

#include "main.h" //has everything...

int main(void)
{
	LED_Init();
    4420:	0e 94 35 24 	call	0x486a	; 0x486a <LED_Init>
	VOLTAGE_Translator_Init();
    4424:	0e 94 5d 23 	call	0x46ba	; 0x46ba <VOLTAGE_Translator_Init>
	USART_Init();
    4428:	0e 94 a3 22 	call	0x4546	; 0x4546 <USART_Init>
	SLAVE_CS_Deselect();
    442c:	0e 94 11 20 	call	0x4022	; 0x4022 <SLAVE_CS_Deselect>
	SPI_MASTER_Init();
    4430:	0e 94 96 23 	call	0x472c	; 0x472c <SPI_MASTER_Init>
	LED_Green_Toggle();
    4434:	0e 94 7a 24 	call	0x48f4	; 0x48f4 <LED_Green_Toggle>
	//PORTA &= ~(1 << PA3); //~CS pin set low for selecting slave device
	
    while(1)
    {		
		CLEAR_ARR();
    4438:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
		USART_Data("->Arrays Cleared \n");
    443c:	6f e9       	ldi	r22, 0x9F	; 159
    443e:	76 e0       	ldi	r23, 0x06	; 6
    4440:	80 e0       	ldi	r24, 0x00	; 0
    4442:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		
		UserInput(true); //true therefore command
    4446:	81 e0       	ldi	r24, 0x01	; 1
    4448:	0e 94 74 19 	call	0x32e8	; 0x32e8 <UserInput>
		
		LED_Red_Toggle();
    444c:	0e 94 73 24 	call	0x48e6	; 0x48e6 <LED_Red_Toggle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    4450:	87 ea       	ldi	r24, 0xA7	; 167
    4452:	91 e6       	ldi	r25, 0x61	; 97
    4454:	01 97       	sbiw	r24, 0x01	; 1
    4456:	f1 f7       	brne	.-4      	; 0x4454 <main+0x34>
    4458:	00 c0       	rjmp	.+0      	; 0x445a <main+0x3a>
    445a:	00 00       	nop
    445c:	ed cf       	rjmp	.-38     	; 0x4438 <main+0x18>

Disassembly of section .text.USART_Init:

00004546 <USART_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    4546:	87 e6       	ldi	r24, 0x67	; 103
    4548:	90 e0       	ldi	r25, 0x00	; 0
    454a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
    454e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
    4552:	8d b1       	in	r24, 0x0d	; 13
    4554:	82 60       	ori	r24, 0x02	; 2
    4556:	8d b9       	out	0x0d, r24	; 13
    4558:	e1 ec       	ldi	r30, 0xC1	; 193
    455a:	f0 e0       	ldi	r31, 0x00	; 0
    455c:	80 81       	ld	r24, Z
    455e:	88 60       	ori	r24, 0x08	; 8
    4560:	80 83       	st	Z, r24
    4562:	8d b1       	in	r24, 0x0d	; 13
    4564:	8e 7f       	andi	r24, 0xFE	; 254
    4566:	8d b9       	out	0x0d, r24	; 13
    4568:	80 81       	ld	r24, Z
    456a:	80 61       	ori	r24, 0x10	; 16
    456c:	80 83       	st	Z, r24
    456e:	81 b1       	in	r24, 0x01	; 1
    4570:	84 60       	ori	r24, 0x04	; 4
    4572:	81 b9       	out	0x01, r24	; 1
    4574:	82 b1       	in	r24, 0x02	; 2
    4576:	84 60       	ori	r24, 0x04	; 4
    4578:	82 b9       	out	0x02, r24	; 2
    457a:	08 95       	ret

Disassembly of section .text.USART_TX_Data:

000048ca <USART_TX_Data>:
    48ca:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    48ce:	95 ff       	sbrs	r25, 5
    48d0:	fc cf       	rjmp	.-8      	; 0x48ca <USART_TX_Data>
    48d2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    48d6:	08 95       	ret

Disassembly of section .text.USART_Data:

000041fa <USART_Data>:
    41fa:	cf 92       	push	r12
    41fc:	df 92       	push	r13
    41fe:	ef 92       	push	r14
    4200:	cf 93       	push	r28
    4202:	df 93       	push	r29
    4204:	6b 01       	movw	r12, r22
    4206:	e8 2e       	mov	r14, r24
    4208:	c0 e0       	ldi	r28, 0x00	; 0
    420a:	d0 e0       	ldi	r29, 0x00	; 0
    420c:	0f c0       	rjmp	.+30     	; 0x422c <USART_Data+0x32>
    420e:	ae 2d       	mov	r26, r14
    4210:	c6 01       	movw	r24, r12
    4212:	8c 0f       	add	r24, r28
    4214:	9d 1f       	adc	r25, r29
    4216:	a1 1d       	adc	r26, r1
    4218:	d7 fd       	sbrc	r29, 7
    421a:	aa 95       	dec	r26
    421c:	fc 01       	movw	r30, r24
    421e:	5a 2f       	mov	r21, r26
    4220:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    4224:	86 2f       	mov	r24, r22
    4226:	0e 94 65 24 	call	0x48ca	; 0x48ca <USART_TX_Data>
    422a:	21 96       	adiw	r28, 0x01	; 1
    422c:	8e 2d       	mov	r24, r14
    422e:	b6 01       	movw	r22, r12
    4230:	0e 94 a8 23 	call	0x4750	; 0x4750 <strlen>
    4234:	c8 17       	cp	r28, r24
    4236:	d9 07       	cpc	r29, r25
    4238:	50 f3       	brcs	.-44     	; 0x420e <USART_Data+0x14>
    423a:	df 91       	pop	r29
    423c:	cf 91       	pop	r28
    423e:	ef 90       	pop	r14
    4240:	df 90       	pop	r13
    4242:	cf 90       	pop	r12
    4244:	08 95       	ret

Disassembly of section .text.USART_RX_Data:

000048d8 <USART_RX_Data>:
    48d8:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    48dc:	88 23       	and	r24, r24
    48de:	e4 f7       	brge	.-8      	; 0x48d8 <USART_RX_Data>
    48e0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    48e4:	08 95       	ret

Disassembly of section .text.LED_Init:

0000486a <LED_Init>:
    486a:	e1 e0       	ldi	r30, 0x01	; 1
    486c:	f1 e0       	ldi	r31, 0x01	; 1
    486e:	80 81       	ld	r24, Z
    4870:	80 66       	ori	r24, 0x60	; 96
    4872:	80 83       	st	Z, r24
    4874:	e2 e0       	ldi	r30, 0x02	; 2
    4876:	f1 e0       	ldi	r31, 0x01	; 1
    4878:	80 81       	ld	r24, Z
    487a:	80 66       	ori	r24, 0x60	; 96
    487c:	80 83       	st	Z, r24
    487e:	08 95       	ret

Disassembly of section .text.LED_Red_Toggle:

000048e6 <LED_Red_Toggle>:
}

void LED_Red_Toggle()
{
	PORTH ^= (1 << PH6); //toggle RED_LED (PH6)
    48e6:	e2 e0       	ldi	r30, 0x02	; 2
    48e8:	f1 e0       	ldi	r31, 0x01	; 1
    48ea:	90 81       	ld	r25, Z
    48ec:	80 e4       	ldi	r24, 0x40	; 64
    48ee:	89 27       	eor	r24, r25
    48f0:	80 83       	st	Z, r24
    48f2:	08 95       	ret

Disassembly of section .text.LED_Green_Toggle:

000048f4 <LED_Green_Toggle>:
}

void LED_Green_Toggle()
{
	PORTH ^= (1 << PH5); //toggle GREEN_LED (PH5)
    48f4:	e2 e0       	ldi	r30, 0x02	; 2
    48f6:	f1 e0       	ldi	r31, 0x01	; 1
    48f8:	90 81       	ld	r25, Z
    48fa:	80 e2       	ldi	r24, 0x20	; 32
    48fc:	89 27       	eor	r24, r25
    48fe:	80 83       	st	Z, r24
    4900:	08 95       	ret

Disassembly of section .text.VOLTAGE_Translator_Init:

000046ba <VOLTAGE_Translator_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    46ba:	87 b1       	in	r24, 0x07	; 7
    46bc:	80 64       	ori	r24, 0x40	; 64
    46be:	87 b9       	out	0x07, r24	; 7
    46c0:	88 b1       	in	r24, 0x08	; 8
    46c2:	80 64       	ori	r24, 0x40	; 64
    46c4:	88 b9       	out	0x08, r24	; 8
    46c6:	83 b3       	in	r24, 0x13	; 19
    46c8:	81 60       	ori	r24, 0x01	; 1
    46ca:	83 bb       	out	0x13, r24	; 19
    46cc:	84 b3       	in	r24, 0x14	; 20
    46ce:	81 60       	ori	r24, 0x01	; 1
    46d0:	84 bb       	out	0x14, r24	; 20
    46d2:	83 b3       	in	r24, 0x13	; 19
    46d4:	82 60       	ori	r24, 0x02	; 2
    46d6:	83 bb       	out	0x13, r24	; 19
    46d8:	84 b3       	in	r24, 0x14	; 20
    46da:	82 60       	ori	r24, 0x02	; 2
    46dc:	84 bb       	out	0x14, r24	; 20
    46de:	08 95       	ret

Disassembly of section .text.SLAVE_CS_Deselect:

00004022 <SLAVE_CS_Deselect>:
    4022:	81 b1       	in	r24, 0x01	; 1
    4024:	88 60       	ori	r24, 0x08	; 8
    4026:	81 b9       	out	0x01, r24	; 1
    4028:	82 b1       	in	r24, 0x02	; 2
    402a:	88 60       	ori	r24, 0x08	; 8
    402c:	82 b9       	out	0x02, r24	; 2
    402e:	81 b1       	in	r24, 0x01	; 1
    4030:	80 61       	ori	r24, 0x10	; 16
    4032:	81 b9       	out	0x01, r24	; 1
    4034:	82 b1       	in	r24, 0x02	; 2
    4036:	80 61       	ori	r24, 0x10	; 16
    4038:	82 b9       	out	0x02, r24	; 2
    403a:	81 b1       	in	r24, 0x01	; 1
    403c:	80 62       	ori	r24, 0x20	; 32
    403e:	81 b9       	out	0x01, r24	; 1
    4040:	82 b1       	in	r24, 0x02	; 2
    4042:	80 62       	ori	r24, 0x20	; 32
    4044:	82 b9       	out	0x02, r24	; 2
    4046:	81 b1       	in	r24, 0x01	; 1
    4048:	80 64       	ori	r24, 0x40	; 64
    404a:	81 b9       	out	0x01, r24	; 1
    404c:	82 b1       	in	r24, 0x02	; 2
    404e:	80 64       	ori	r24, 0x40	; 64
    4050:	82 b9       	out	0x02, r24	; 2
    4052:	81 b1       	in	r24, 0x01	; 1
    4054:	80 68       	ori	r24, 0x80	; 128
    4056:	81 b9       	out	0x01, r24	; 1
    4058:	82 b1       	in	r24, 0x02	; 2
    405a:	80 68       	ori	r24, 0x80	; 128
    405c:	82 b9       	out	0x02, r24	; 2
    405e:	81 b1       	in	r24, 0x01	; 1
    4060:	82 60       	ori	r24, 0x02	; 2
    4062:	81 b9       	out	0x01, r24	; 1
    4064:	82 b1       	in	r24, 0x02	; 2
    4066:	82 60       	ori	r24, 0x02	; 2
    4068:	82 b9       	out	0x02, r24	; 2
    406a:	81 b1       	in	r24, 0x01	; 1
    406c:	84 60       	ori	r24, 0x04	; 4
    406e:	81 b9       	out	0x01, r24	; 1
    4070:	82 b1       	in	r24, 0x02	; 2
    4072:	84 60       	ori	r24, 0x04	; 4
    4074:	82 b9       	out	0x02, r24	; 2
    4076:	81 b1       	in	r24, 0x01	; 1
    4078:	88 60       	ori	r24, 0x08	; 8
    407a:	81 b9       	out	0x01, r24	; 1
    407c:	82 b1       	in	r24, 0x02	; 2
    407e:	88 60       	ori	r24, 0x08	; 8
    4080:	82 b9       	out	0x02, r24	; 2
    4082:	08 95       	ret

Disassembly of section .text.FLASH_NAND_CS_ENABLE:

0000449a <FLASH_NAND_CS_ENABLE>:
    449a:	82 30       	cpi	r24, 0x02	; 2
    449c:	91 05       	cpc	r25, r1
    449e:	71 f0       	breq	.+28     	; 0x44bc <FLASH_NAND_CS_ENABLE+0x22>
    44a0:	1c f4       	brge	.+6      	; 0x44a8 <FLASH_NAND_CS_ENABLE+0xe>
    44a2:	01 97       	sbiw	r24, 0x01	; 1
    44a4:	39 f0       	breq	.+14     	; 0x44b4 <FLASH_NAND_CS_ENABLE+0x1a>
    44a6:	08 95       	ret
    44a8:	83 30       	cpi	r24, 0x03	; 3
    44aa:	91 05       	cpc	r25, r1
    44ac:	59 f0       	breq	.+22     	; 0x44c4 <FLASH_NAND_CS_ENABLE+0x2a>
    44ae:	04 97       	sbiw	r24, 0x04	; 4
    44b0:	69 f0       	breq	.+26     	; 0x44cc <FLASH_NAND_CS_ENABLE+0x32>
    44b2:	08 95       	ret
    44b4:	82 b1       	in	r24, 0x02	; 2
    44b6:	87 7f       	andi	r24, 0xF7	; 247
    44b8:	82 b9       	out	0x02, r24	; 2
    44ba:	08 95       	ret
    44bc:	82 b1       	in	r24, 0x02	; 2
    44be:	8f 7e       	andi	r24, 0xEF	; 239
    44c0:	82 b9       	out	0x02, r24	; 2
    44c2:	08 95       	ret
    44c4:	82 b1       	in	r24, 0x02	; 2
    44c6:	8f 7d       	andi	r24, 0xDF	; 223
    44c8:	82 b9       	out	0x02, r24	; 2
    44ca:	08 95       	ret
    44cc:	82 b1       	in	r24, 0x02	; 2
    44ce:	8f 7b       	andi	r24, 0xBF	; 191
    44d0:	82 b9       	out	0x02, r24	; 2
    44d2:	08 95       	ret

Disassembly of section .text.FLASH_NAND_CS_DISABLE:

000044d4 <FLASH_NAND_CS_DISABLE>:
    44d4:	82 30       	cpi	r24, 0x02	; 2
    44d6:	91 05       	cpc	r25, r1
    44d8:	71 f0       	breq	.+28     	; 0x44f6 <FLASH_NAND_CS_DISABLE+0x22>
    44da:	1c f4       	brge	.+6      	; 0x44e2 <FLASH_NAND_CS_DISABLE+0xe>
    44dc:	01 97       	sbiw	r24, 0x01	; 1
    44de:	39 f0       	breq	.+14     	; 0x44ee <FLASH_NAND_CS_DISABLE+0x1a>
    44e0:	08 95       	ret
    44e2:	83 30       	cpi	r24, 0x03	; 3
    44e4:	91 05       	cpc	r25, r1
    44e6:	59 f0       	breq	.+22     	; 0x44fe <FLASH_NAND_CS_DISABLE+0x2a>
    44e8:	04 97       	sbiw	r24, 0x04	; 4
    44ea:	69 f0       	breq	.+26     	; 0x4506 <FLASH_NAND_CS_DISABLE+0x32>
    44ec:	08 95       	ret
    44ee:	82 b1       	in	r24, 0x02	; 2
    44f0:	88 60       	ori	r24, 0x08	; 8
    44f2:	82 b9       	out	0x02, r24	; 2
    44f4:	08 95       	ret
    44f6:	82 b1       	in	r24, 0x02	; 2
    44f8:	80 61       	ori	r24, 0x10	; 16
    44fa:	82 b9       	out	0x02, r24	; 2
    44fc:	08 95       	ret
    44fe:	82 b1       	in	r24, 0x02	; 2
    4500:	80 62       	ori	r24, 0x20	; 32
    4502:	82 b9       	out	0x02, r24	; 2
    4504:	08 95       	ret
    4506:	82 b1       	in	r24, 0x02	; 2
    4508:	80 64       	ori	r24, 0x40	; 64
    450a:	82 b9       	out	0x02, r24	; 2
    450c:	08 95       	ret

Disassembly of section .text.Print_To_User:

000035cc <Print_To_User>:
	if (command)
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
}

void Print_To_User(int num_elements, int offset, const char *msg, const uint8_t *arr_start, uint8_t *arr_dest) //# of elements to print along with message, and to which array
{
    35cc:	3f 92       	push	r3
    35ce:	4f 92       	push	r4
    35d0:	5f 92       	push	r5
    35d2:	6f 92       	push	r6
    35d4:	7f 92       	push	r7
    35d6:	8f 92       	push	r8
    35d8:	9f 92       	push	r9
    35da:	af 92       	push	r10
    35dc:	bf 92       	push	r11
    35de:	cf 92       	push	r12
    35e0:	df 92       	push	r13
    35e2:	ef 92       	push	r14
    35e4:	ff 92       	push	r15
    35e6:	0f 93       	push	r16
    35e8:	1f 93       	push	r17
    35ea:	cf 93       	push	r28
    35ec:	df 93       	push	r29
    35ee:	5c 01       	movw	r10, r24
    35f0:	4b 01       	movw	r8, r22
    35f2:	72 2e       	mov	r7, r18
    35f4:	13 2f       	mov	r17, r19
    35f6:	34 2e       	mov	r3, r20
    35f8:	27 01       	movw	r4, r14
    35fa:	60 2e       	mov	r6, r16
	for (int i = 0; i < num_elements; i++)
    35fc:	c0 e0       	ldi	r28, 0x00	; 0
    35fe:	d0 e0       	ldi	r29, 0x00	; 0
    3600:	26 c0       	rjmp	.+76     	; 0x364e <Print_To_User+0x82>
	{
		sprintf(arr_dest, msg, arr_start[i + offset]);
    3602:	ce 01       	movw	r24, r28
    3604:	88 0d       	add	r24, r8
    3606:	99 1d       	adc	r25, r9
    3608:	46 2d       	mov	r20, r6
    360a:	92 01       	movw	r18, r4
    360c:	28 0f       	add	r18, r24
    360e:	39 1f       	adc	r19, r25
    3610:	41 1d       	adc	r20, r1
    3612:	97 fd       	sbrc	r25, 7
    3614:	4a 95       	dec	r20
    3616:	a4 2f       	mov	r26, r20
    3618:	c9 01       	movw	r24, r18
    361a:	f9 01       	movw	r30, r18
    361c:	5a 2f       	mov	r21, r26
    361e:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    3622:	1f 92       	push	r1
    3624:	6f 93       	push	r22
    3626:	3f 92       	push	r3
    3628:	1f 93       	push	r17
    362a:	7f 92       	push	r7
    362c:	df 92       	push	r13
    362e:	cf 92       	push	r12
    3630:	0e 94 83 23 	call	0x4706	; 0x4706 <sprintf>
		USART_Data(arr_dest);
    3634:	b6 01       	movw	r22, r12
    3636:	80 e8       	ldi	r24, 0x80	; 128
    3638:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
}

void Print_To_User(int num_elements, int offset, const char *msg, const uint8_t *arr_start, uint8_t *arr_dest) //# of elements to print along with message, and to which array
{
	for (int i = 0; i < num_elements; i++)
    363c:	21 96       	adiw	r28, 0x01	; 1
    363e:	8d b7       	in	r24, 0x3d	; 61
    3640:	9e b7       	in	r25, 0x3e	; 62
    3642:	07 96       	adiw	r24, 0x07	; 7
    3644:	0f b6       	in	r0, 0x3f	; 63
    3646:	f8 94       	cli
    3648:	9e bf       	out	0x3e, r25	; 62
    364a:	0f be       	out	0x3f, r0	; 63
    364c:	8d bf       	out	0x3d, r24	; 61
    364e:	ca 15       	cp	r28, r10
    3650:	db 05       	cpc	r29, r11
    3652:	bc f2       	brlt	.-82     	; 0x3602 <Print_To_User+0x36>
	{
		sprintf(arr_dest, msg, arr_start[i + offset]);
		USART_Data(arr_dest);
	}
}
    3654:	df 91       	pop	r29
    3656:	cf 91       	pop	r28
    3658:	1f 91       	pop	r17
    365a:	0f 91       	pop	r16
    365c:	ff 90       	pop	r15
    365e:	ef 90       	pop	r14
    3660:	df 90       	pop	r13
    3662:	cf 90       	pop	r12
    3664:	bf 90       	pop	r11
    3666:	af 90       	pop	r10
    3668:	9f 90       	pop	r9
    366a:	8f 90       	pop	r8
    366c:	7f 90       	pop	r7
    366e:	6f 90       	pop	r6
    3670:	5f 90       	pop	r5
    3672:	4f 90       	pop	r4
    3674:	3f 90       	pop	r3
    3676:	08 95       	ret

Disassembly of section .text.HEX_Verification:

000033a6 <HEX_Verification>:
		}
	}
}

bool HEX_Verification() //verifies uint8_t (ASCII) to Hex validity and allocates in appropriated location
{
    33a6:	cf 92       	push	r12
    33a8:	df 92       	push	r13
    33aa:	ef 92       	push	r14
    33ac:	ff 92       	push	r15
    33ae:	0f 93       	push	r16
	//parse the data into usable hex values
	for (int i = 0; i <= FLASH_NAND_ADDRESS_MAX; i++)
    33b0:	80 e0       	ldi	r24, 0x00	; 0
    33b2:	90 e0       	ldi	r25, 0x00	; 0
    33b4:	45 c0       	rjmp	.+138    	; 0x3440 <HEX_Verification+0x9a>
	{
		if (CommandBuffer[i] >= '0' && CommandBuffer[i] <= '9')
    33b6:	fc 01       	movw	r30, r24
    33b8:	e0 50       	subi	r30, 0x00	; 0
    33ba:	fe 4f       	sbci	r31, 0xFE	; 254
    33bc:	20 81       	ld	r18, Z
    33be:	30 ed       	ldi	r19, 0xD0	; 208
    33c0:	32 0f       	add	r19, r18
    33c2:	3a 30       	cpi	r19, 0x0A	; 10
    33c4:	28 f4       	brcc	.+10     	; 0x33d0 <HEX_Verification+0x2a>
		{
			CommandBuffer[i] = CommandBuffer[i] - '0';
    33c6:	fc 01       	movw	r30, r24
    33c8:	e0 50       	subi	r30, 0x00	; 0
    33ca:	fe 4f       	sbci	r31, 0xFE	; 254
    33cc:	30 83       	st	Z, r19
    33ce:	37 c0       	rjmp	.+110    	; 0x343e <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] >= 'A' && CommandBuffer[i] <= 'F')
    33d0:	3f eb       	ldi	r19, 0xBF	; 191
    33d2:	32 0f       	add	r19, r18
    33d4:	36 30       	cpi	r19, 0x06	; 6
    33d6:	30 f4       	brcc	.+12     	; 0x33e4 <HEX_Verification+0x3e>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'A' + 10;
    33d8:	fc 01       	movw	r30, r24
    33da:	e0 50       	subi	r30, 0x00	; 0
    33dc:	fe 4f       	sbci	r31, 0xFE	; 254
    33de:	27 53       	subi	r18, 0x37	; 55
    33e0:	20 83       	st	Z, r18
    33e2:	2d c0       	rjmp	.+90     	; 0x343e <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] >= 'a' && CommandBuffer[i] <= 'f')
    33e4:	3f e9       	ldi	r19, 0x9F	; 159
    33e6:	32 0f       	add	r19, r18
    33e8:	36 30       	cpi	r19, 0x06	; 6
    33ea:	30 f4       	brcc	.+12     	; 0x33f8 <HEX_Verification+0x52>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'a' + 10;
    33ec:	fc 01       	movw	r30, r24
    33ee:	e0 50       	subi	r30, 0x00	; 0
    33f0:	fe 4f       	sbci	r31, 0xFE	; 254
    33f2:	27 55       	subi	r18, 0x57	; 87
    33f4:	20 83       	st	Z, r18
    33f6:	23 c0       	rjmp	.+70     	; 0x343e <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] == '\r' || CommandBuffer[i] == '\n' || CommandBuffer[i] == '\0')
    33f8:	2d 30       	cpi	r18, 0x0D	; 13
    33fa:	41 f1       	breq	.+80     	; 0x344c <HEX_Verification+0xa6>
    33fc:	2a 30       	cpi	r18, 0x0A	; 10
    33fe:	41 f1       	breq	.+80     	; 0x3450 <HEX_Verification+0xaa>
    3400:	22 23       	and	r18, r18
    3402:	41 f1       	breq	.+80     	; 0x3454 <HEX_Verification+0xae>
		{
			break;
		}
		else
		{
			USART_Data("Wrong Input \nMake sure input is HEX valid [0 - F] \n");
    3404:	6a e7       	ldi	r22, 0x7A	; 122
    3406:	71 e0       	ldi	r23, 0x01	; 1
    3408:	80 e0       	ldi	r24, 0x00	; 0
    340a:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
			Print_To_User(1, 0, "Here is what was inputted: 0x%02X \n", CommandBuffer, status_feature);
    340e:	80 e0       	ldi	r24, 0x00	; 0
    3410:	92 e0       	ldi	r25, 0x02	; 2
    3412:	7c 01       	movw	r14, r24
    3414:	20 e8       	ldi	r18, 0x80	; 128
    3416:	02 2f       	mov	r16, r18
    3418:	0f 2e       	mov	r0, r31
    341a:	f0 e0       	ldi	r31, 0x00	; 0
    341c:	cf 2e       	mov	r12, r31
    341e:	f3 e0       	ldi	r31, 0x03	; 3
    3420:	df 2e       	mov	r13, r31
    3422:	f0 2d       	mov	r31, r0
    3424:	2e ea       	ldi	r18, 0xAE	; 174
    3426:	31 e0       	ldi	r19, 0x01	; 1
    3428:	40 e0       	ldi	r20, 0x00	; 0
    342a:	60 e0       	ldi	r22, 0x00	; 0
    342c:	70 e0       	ldi	r23, 0x00	; 0
    342e:	81 e0       	ldi	r24, 0x01	; 1
    3430:	90 e0       	ldi	r25, 0x00	; 0
    3432:	0e 94 e6 1a 	call	0x35cc	; 0x35cc <Print_To_User>
			CLEAR_ARR();
    3436:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
			return false; //return false, indicating failed test
    343a:	80 e0       	ldi	r24, 0x00	; 0
    343c:	0c c0       	rjmp	.+24     	; 0x3456 <HEX_Verification+0xb0>
}

bool HEX_Verification() //verifies uint8_t (ASCII) to Hex validity and allocates in appropriated location
{
	//parse the data into usable hex values
	for (int i = 0; i <= FLASH_NAND_ADDRESS_MAX; i++)
    343e:	01 96       	adiw	r24, 0x01	; 1
    3440:	86 30       	cpi	r24, 0x06	; 6
    3442:	91 05       	cpc	r25, r1
    3444:	0c f4       	brge	.+2      	; 0x3448 <HEX_Verification+0xa2>
    3446:	b7 cf       	rjmp	.-146    	; 0x33b6 <HEX_Verification+0x10>
			Print_To_User(1, 0, "Here is what was inputted: 0x%02X \n", CommandBuffer, status_feature);
			CLEAR_ARR();
			return false; //return false, indicating failed test
		}
	}
	return true; //return true, indicating passed test
    3448:	81 e0       	ldi	r24, 0x01	; 1
    344a:	05 c0       	rjmp	.+10     	; 0x3456 <HEX_Verification+0xb0>
    344c:	81 e0       	ldi	r24, 0x01	; 1
    344e:	03 c0       	rjmp	.+6      	; 0x3456 <HEX_Verification+0xb0>
    3450:	81 e0       	ldi	r24, 0x01	; 1
    3452:	01 c0       	rjmp	.+2      	; 0x3456 <HEX_Verification+0xb0>
    3454:	81 e0       	ldi	r24, 0x01	; 1
	//Print_To_User(6, 0, "Parsed nibble: 0x%02X\n", CommandBuffer, status_feature); //troubleshooting, verifies if ASCII is converted to hex values
}
    3456:	0f 91       	pop	r16
    3458:	ff 90       	pop	r15
    345a:	ef 90       	pop	r14
    345c:	df 90       	pop	r13
    345e:	cf 90       	pop	r12
    3460:	08 95       	ret

Disassembly of section .text.ExecuteCommand:

00001c28 <ExecuteCommand>:
		Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "0x%02X \n", Byte_Address, status_feature);	
	}
}

void ExecuteCommand(const uint8_t *str) //Execute Command Line function
{
    1c28:	6f 92       	push	r6
    1c2a:	7f 92       	push	r7
    1c2c:	8f 92       	push	r8
    1c2e:	cf 92       	push	r12
    1c30:	df 92       	push	r13
    1c32:	ef 92       	push	r14
    1c34:	ff 92       	push	r15
    1c36:	0f 93       	push	r16
    1c38:	1f 93       	push	r17
    1c3a:	cf 93       	push	r28
    1c3c:	df 93       	push	r29
    1c3e:	6b 01       	movw	r12, r22
    1c40:	e8 2e       	mov	r14, r24
	if (strcmp(str, "Flash ID") == 0) //Flash ID Command
    1c42:	22 ed       	ldi	r18, 0xD2	; 210
    1c44:	31 e0       	ldi	r19, 0x01	; 1
    1c46:	40 e0       	ldi	r20, 0x00	; 0
    1c48:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1c4c:	89 2b       	or	r24, r25
    1c4e:	b9 f4       	brne	.+46     	; 0x1c7e <ExecuteCommand+0x56>
	{
		CLEAR_ARR();
    1c50:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
		d = 1;
    1c54:	c1 e0       	ldi	r28, 0x01	; 1
    1c56:	d0 e0       	ldi	r29, 0x00	; 0
    1c58:	d0 93 02 05 	sts	0x0502, r29	; 0x800502 <d+0x1>
    1c5c:	c0 93 01 05 	sts	0x0501, r28	; 0x800501 <d>
		FLASH_ID(); //reads Device ID #1
    1c60:	0e 94 74 1d 	call	0x3ae8	; 0x3ae8 <FLASH_ID>
		d = 2;
    1c64:	82 e0       	ldi	r24, 0x02	; 2
    1c66:	90 e0       	ldi	r25, 0x00	; 0
    1c68:	90 93 02 05 	sts	0x0502, r25	; 0x800502 <d+0x1>
    1c6c:	80 93 01 05 	sts	0x0501, r24	; 0x800501 <d>
		FLASH_ID(); //reads Device ID #2
    1c70:	0e 94 74 1d 	call	0x3ae8	; 0x3ae8 <FLASH_ID>
		d = 1;
    1c74:	d0 93 02 05 	sts	0x0502, r29	; 0x800502 <d+0x1>
    1c78:	c0 93 01 05 	sts	0x0501, r28	; 0x800501 <d>
    1c7c:	8b c2       	rjmp	.+1302   	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
	}
	
	else if (strcmp(str, "NAND Address") == 0) //Tells user what is Column and Block/Page Addresses
    1c7e:	2b ed       	ldi	r18, 0xDB	; 219
    1c80:	31 e0       	ldi	r19, 0x01	; 1
    1c82:	40 e0       	ldi	r20, 0x00	; 0
    1c84:	8e 2d       	mov	r24, r14
    1c86:	b6 01       	movw	r22, r12
    1c88:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1c8c:	89 2b       	or	r24, r25
    1c8e:	c9 f5       	brne	.+114    	; 0x1d02 <ExecuteCommand+0xda>
	{
		CLEAR_ARR();
    1c90:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
		
		USART_Data("1) Read \n");
    1c94:	68 ee       	ldi	r22, 0xE8	; 232
    1c96:	71 e0       	ldi	r23, 0x01	; 1
    1c98:	80 e0       	ldi	r24, 0x00	; 0
    1c9a:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		USART_Data("2) Write \n");
    1c9e:	62 ef       	ldi	r22, 0xF2	; 242
    1ca0:	71 e0       	ldi	r23, 0x01	; 1
    1ca2:	80 e0       	ldi	r24, 0x00	; 0
    1ca4:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		
		UserInput(false);
    1ca8:	80 e0       	ldi	r24, 0x00	; 0
    1caa:	0e 94 74 19 	call	0x32e8	; 0x32e8 <UserInput>
		
		if (strcmp(CommandBuffer, "Read") == 0)
    1cae:	80 e0       	ldi	r24, 0x00	; 0
    1cb0:	92 e0       	ldi	r25, 0x02	; 2
    1cb2:	6c 01       	movw	r12, r24
    1cb4:	20 e8       	ldi	r18, 0x80	; 128
    1cb6:	e2 2e       	mov	r14, r18
    1cb8:	2d ef       	ldi	r18, 0xFD	; 253
    1cba:	31 e0       	ldi	r19, 0x01	; 1
    1cbc:	40 e0       	ldi	r20, 0x00	; 0
    1cbe:	8e 2d       	mov	r24, r14
    1cc0:	b6 01       	movw	r22, r12
    1cc2:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1cc6:	89 2b       	or	r24, r25
    1cc8:	49 f4       	brne	.+18     	; 0x1cdc <ExecuteCommand+0xb4>
		{
			NAND_Address_Checker(false); //read current NAND addresses
    1cca:	80 e0       	ldi	r24, 0x00	; 0
    1ccc:	0e 94 27 1d 	call	0x3a4e	; 0x3a4e <NAND_Address_Checker>
			ExecuteCommand("NAND Addresses");
    1cd0:	62 e0       	ldi	r22, 0x02	; 2
    1cd2:	72 e0       	ldi	r23, 0x02	; 2
    1cd4:	80 e0       	ldi	r24, 0x00	; 0
    1cd6:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    1cda:	5c c2       	rjmp	.+1208   	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
		}
		else if (strcmp(CommandBuffer, "Write") == 0)
    1cdc:	21 e1       	ldi	r18, 0x11	; 17
    1cde:	32 e0       	ldi	r19, 0x02	; 2
    1ce0:	40 e0       	ldi	r20, 0x00	; 0
    1ce2:	8e 2d       	mov	r24, r14
    1ce4:	b6 01       	movw	r22, r12
    1ce6:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1cea:	89 2b       	or	r24, r25
    1cec:	09 f0       	breq	.+2      	; 0x1cf0 <ExecuteCommand+0xc8>
    1cee:	52 c2       	rjmp	.+1188   	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
		{
			NAND_Address_Checker(true); //write new NAND addresses
    1cf0:	81 e0       	ldi	r24, 0x01	; 1
    1cf2:	0e 94 27 1d 	call	0x3a4e	; 0x3a4e <NAND_Address_Checker>
			ExecuteCommand("NAND Addresses");
    1cf6:	62 e0       	ldi	r22, 0x02	; 2
    1cf8:	72 e0       	ldi	r23, 0x02	; 2
    1cfa:	80 e0       	ldi	r24, 0x00	; 0
    1cfc:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    1d00:	49 c2       	rjmp	.+1170   	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
		}
	}
	
	else if (strcmp(str, "Parameter Page") == 0) //Basic Read Test Command
    1d02:	27 e1       	ldi	r18, 0x17	; 23
    1d04:	32 e0       	ldi	r19, 0x02	; 2
    1d06:	40 e0       	ldi	r20, 0x00	; 0
    1d08:	8e 2d       	mov	r24, r14
    1d0a:	b6 01       	movw	r22, r12
    1d0c:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1d10:	89 2b       	or	r24, r25
    1d12:	99 f5       	brne	.+102    	; 0x1d7a <ExecuteCommand+0x152>
	{
		CLEAR_ARR();
    1d14:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
		s = 1; //sets main array address to the correct place
    1d18:	81 e0       	ldi	r24, 0x01	; 1
    1d1a:	90 e0       	ldi	r25, 0x00	; 0
    1d1c:	90 93 04 05 	sts	0x0504, r25	; 0x800504 <s+0x1>
    1d20:	80 93 03 05 	sts	0x0503, r24	; 0x800503 <s>
		FLASH_Para_Pg();
    1d24:	0e 94 a4 1f 	call	0x3f48	; 0x3f48 <FLASH_Para_Pg>
		
		//reading data from Data array
		//Print_To_User(PARAMETER_PAGE_SIZE, 0, "%i->Data Received: 0x%02X \n", data, status_feature);
		
		for (int i = 0; i < sizeof(data); i++)	//PARAMETER_PAGE_SIZE; i++) //address is incremented automatically after each byte is shifted out
    1d28:	c0 e0       	ldi	r28, 0x00	; 0
    1d2a:	d0 e0       	ldi	r29, 0x00	; 0
    1d2c:	21 c0       	rjmp	.+66     	; 0x1d70 <ExecuteCommand+0x148>
		{
			sprintf(status_feature, "%i->Data Received: 0x%02X \n", i, data[i]); //hex data to string
    1d2e:	fe 01       	movw	r30, r28
    1d30:	ef 5f       	subi	r30, 0xFF	; 255
    1d32:	fb 4f       	sbci	r31, 0xFB	; 251
    1d34:	80 81       	ld	r24, Z
    1d36:	1f 92       	push	r1
    1d38:	8f 93       	push	r24
    1d3a:	df 93       	push	r29
    1d3c:	cf 93       	push	r28
    1d3e:	86 e2       	ldi	r24, 0x26	; 38
    1d40:	92 e0       	ldi	r25, 0x02	; 2
    1d42:	a0 e0       	ldi	r26, 0x00	; 0
    1d44:	af 93       	push	r26
    1d46:	9f 93       	push	r25
    1d48:	8f 93       	push	r24
    1d4a:	00 e0       	ldi	r16, 0x00	; 0
    1d4c:	13 e0       	ldi	r17, 0x03	; 3
    1d4e:	1f 93       	push	r17
    1d50:	0f 93       	push	r16
    1d52:	0e 94 70 23 	call	0x46e0	; 0x46e0 <_sprintf_cdnopuxX>
			USART_Data(status_feature);
    1d56:	b8 01       	movw	r22, r16
    1d58:	80 e8       	ldi	r24, 0x80	; 128
    1d5a:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		FLASH_Para_Pg();
		
		//reading data from Data array
		//Print_To_User(PARAMETER_PAGE_SIZE, 0, "%i->Data Received: 0x%02X \n", data, status_feature);
		
		for (int i = 0; i < sizeof(data); i++)	//PARAMETER_PAGE_SIZE; i++) //address is incremented automatically after each byte is shifted out
    1d5e:	21 96       	adiw	r28, 0x01	; 1
    1d60:	8d b7       	in	r24, 0x3d	; 61
    1d62:	9e b7       	in	r25, 0x3e	; 62
    1d64:	09 96       	adiw	r24, 0x09	; 9
    1d66:	0f b6       	in	r0, 0x3f	; 63
    1d68:	f8 94       	cli
    1d6a:	9e bf       	out	0x3e, r25	; 62
    1d6c:	0f be       	out	0x3f, r0	; 63
    1d6e:	8d bf       	out	0x3d, r24	; 61
    1d70:	cf 3f       	cpi	r28, 0xFF	; 255
    1d72:	d1 05       	cpc	r29, r1
    1d74:	e1 f2       	breq	.-72     	; 0x1d2e <ExecuteCommand+0x106>
    1d76:	d8 f2       	brcs	.-74     	; 0x1d2e <ExecuteCommand+0x106>
    1d78:	0d c2       	rjmp	.+1050   	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
			sprintf(status_feature, "%i->Data Received: 0x%02X \n", i, data[i]); //hex data to string
			USART_Data(status_feature);
		}	
	}
	
	else if (strcmp(str, "Feature Registers") == 0) //leads user to the Feature registers of the device
    1d7a:	22 e4       	ldi	r18, 0x42	; 66
    1d7c:	32 e0       	ldi	r19, 0x02	; 2
    1d7e:	40 e0       	ldi	r20, 0x00	; 0
    1d80:	8e 2d       	mov	r24, r14
    1d82:	b6 01       	movw	r22, r12
    1d84:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1d88:	89 2b       	or	r24, r25
    1d8a:	09 f0       	breq	.+2      	; 0x1d8e <ExecuteCommand+0x166>
    1d8c:	c9 c0       	rjmp	.+402    	; 0x1f20 <ExecuteCommand+0x2f8>
	{
		CLEAR_ARR();
    1d8e:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
		
		USART_Data("1) Block Lock \n");
    1d92:	64 e5       	ldi	r22, 0x54	; 84
    1d94:	72 e0       	ldi	r23, 0x02	; 2
    1d96:	80 e0       	ldi	r24, 0x00	; 0
    1d98:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		USART_Data("2) Configuration \n");
    1d9c:	64 e6       	ldi	r22, 0x64	; 100
    1d9e:	72 e0       	ldi	r23, 0x02	; 2
    1da0:	80 e0       	ldi	r24, 0x00	; 0
    1da2:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		USART_Data("3) Status \n");
    1da6:	67 e7       	ldi	r22, 0x77	; 119
    1da8:	72 e0       	ldi	r23, 0x02	; 2
    1daa:	80 e0       	ldi	r24, 0x00	; 0
    1dac:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		USART_Data("4) Die Select \n");
    1db0:	63 e8       	ldi	r22, 0x83	; 131
    1db2:	72 e0       	ldi	r23, 0x02	; 2
    1db4:	80 e0       	ldi	r24, 0x00	; 0
    1db6:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		
		UserInput(false);
    1dba:	80 e0       	ldi	r24, 0x00	; 0
    1dbc:	0e 94 74 19 	call	0x32e8	; 0x32e8 <UserInput>
		
		if (strcmp(CommandBuffer, "Block Lock") == 0) //goes to Block Lock Register
    1dc0:	80 e0       	ldi	r24, 0x00	; 0
    1dc2:	92 e0       	ldi	r25, 0x02	; 2
    1dc4:	6c 01       	movw	r12, r24
    1dc6:	20 e8       	ldi	r18, 0x80	; 128
    1dc8:	e2 2e       	mov	r14, r18
    1dca:	23 e9       	ldi	r18, 0x93	; 147
    1dcc:	32 e0       	ldi	r19, 0x02	; 2
    1dce:	40 e0       	ldi	r20, 0x00	; 0
    1dd0:	8e 2d       	mov	r24, r14
    1dd2:	b6 01       	movw	r22, r12
    1dd4:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1dd8:	89 2b       	or	r24, r25
    1dda:	09 f0       	breq	.+2      	; 0x1dde <ExecuteCommand+0x1b6>
    1ddc:	67 c0       	rjmp	.+206    	; 0x1eac <ExecuteCommand+0x284>
		{
			CLEAR_ARR();
    1dde:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
			
			USART_Data("1) Lock \n");
    1de2:	6e e9       	ldi	r22, 0x9E	; 158
    1de4:	72 e0       	ldi	r23, 0x02	; 2
    1de6:	80 e0       	ldi	r24, 0x00	; 0
    1de8:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
			USART_Data("2) Unlock \n");
    1dec:	68 ea       	ldi	r22, 0xA8	; 168
    1dee:	72 e0       	ldi	r23, 0x02	; 2
    1df0:	80 e0       	ldi	r24, 0x00	; 0
    1df2:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
			USART_Data("3) Read \n");
    1df6:	64 eb       	ldi	r22, 0xB4	; 180
    1df8:	72 e0       	ldi	r23, 0x02	; 2
    1dfa:	80 e0       	ldi	r24, 0x00	; 0
    1dfc:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
			USART_Data("4) Configure \n");
    1e00:	6e eb       	ldi	r22, 0xBE	; 190
    1e02:	72 e0       	ldi	r23, 0x02	; 2
    1e04:	80 e0       	ldi	r24, 0x00	; 0
    1e06:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
			
			UserInput(false); //User Input is added into an array, which will be written to memory
    1e0a:	80 e0       	ldi	r24, 0x00	; 0
    1e0c:	0e 94 74 19 	call	0x32e8	; 0x32e8 <UserInput>
			
			if (strcmp(CommandBuffer, "Lock") == 0) //Locks Flash Device
    1e10:	2d ec       	ldi	r18, 0xCD	; 205
    1e12:	32 e0       	ldi	r19, 0x02	; 2
    1e14:	40 e0       	ldi	r20, 0x00	; 0
    1e16:	8e 2d       	mov	r24, r14
    1e18:	b6 01       	movw	r22, r12
    1e1a:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1e1e:	89 2b       	or	r24, r25
    1e20:	49 f4       	brne	.+18     	; 0x1e34 <ExecuteCommand+0x20c>
			{
				FLASH_Block_Lock_Setter(true);
    1e22:	81 e0       	ldi	r24, 0x01	; 1
    1e24:	0e 94 62 1f 	call	0x3ec4	; 0x3ec4 <FLASH_Block_Lock_Setter>
				ExecuteCommand("Feature Registers");
    1e28:	62 e4       	ldi	r22, 0x42	; 66
    1e2a:	72 e0       	ldi	r23, 0x02	; 2
    1e2c:	80 e0       	ldi	r24, 0x00	; 0
    1e2e:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    1e32:	b0 c1       	rjmp	.+864    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
			}
			else if (strcmp(CommandBuffer, "Unlock") == 0) //Unlocks Flash Device
    1e34:	22 ed       	ldi	r18, 0xD2	; 210
    1e36:	32 e0       	ldi	r19, 0x02	; 2
    1e38:	40 e0       	ldi	r20, 0x00	; 0
    1e3a:	8e 2d       	mov	r24, r14
    1e3c:	b6 01       	movw	r22, r12
    1e3e:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1e42:	89 2b       	or	r24, r25
    1e44:	49 f4       	brne	.+18     	; 0x1e58 <ExecuteCommand+0x230>
			{
				FLASH_Block_Lock_Setter(false);
    1e46:	80 e0       	ldi	r24, 0x00	; 0
    1e48:	0e 94 62 1f 	call	0x3ec4	; 0x3ec4 <FLASH_Block_Lock_Setter>
				ExecuteCommand("Feature Registers");
    1e4c:	62 e4       	ldi	r22, 0x42	; 66
    1e4e:	72 e0       	ldi	r23, 0x02	; 2
    1e50:	80 e0       	ldi	r24, 0x00	; 0
    1e52:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    1e56:	9e c1       	rjmp	.+828    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
			}
			else if (strcmp(CommandBuffer, "Read") == 0) //Read Block Lock Register
    1e58:	2d ef       	ldi	r18, 0xFD	; 253
    1e5a:	31 e0       	ldi	r19, 0x01	; 1
    1e5c:	40 e0       	ldi	r20, 0x00	; 0
    1e5e:	8e 2d       	mov	r24, r14
    1e60:	b6 01       	movw	r22, r12
    1e62:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1e66:	89 2b       	or	r24, r25
    1e68:	49 f4       	brne	.+18     	; 0x1e7c <ExecuteCommand+0x254>
			{
				FLASH_Block_Lock(false);
    1e6a:	80 e0       	ldi	r24, 0x00	; 0
    1e6c:	0e 94 31 1a 	call	0x3462	; 0x3462 <FLASH_Block_Lock>
				ExecuteCommand("Feature Registers");
    1e70:	62 e4       	ldi	r22, 0x42	; 66
    1e72:	72 e0       	ldi	r23, 0x02	; 2
    1e74:	80 e0       	ldi	r24, 0x00	; 0
    1e76:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    1e7a:	8c c1       	rjmp	.+792    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
			}
			else if (strcmp(CommandBuffer, "Configure") == 0) //Configure Block Lock Register
    1e7c:	29 ed       	ldi	r18, 0xD9	; 217
    1e7e:	32 e0       	ldi	r19, 0x02	; 2
    1e80:	40 e0       	ldi	r20, 0x00	; 0
    1e82:	8e 2d       	mov	r24, r14
    1e84:	b6 01       	movw	r22, r12
    1e86:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1e8a:	89 2b       	or	r24, r25
    1e8c:	49 f4       	brne	.+18     	; 0x1ea0 <ExecuteCommand+0x278>
			{
				FLASH_Block_Lock(true);
    1e8e:	81 e0       	ldi	r24, 0x01	; 1
    1e90:	0e 94 31 1a 	call	0x3462	; 0x3462 <FLASH_Block_Lock>
				ExecuteCommand("Feature Registers");
    1e94:	62 e4       	ldi	r22, 0x42	; 66
    1e96:	72 e0       	ldi	r23, 0x02	; 2
    1e98:	80 e0       	ldi	r24, 0x00	; 0
    1e9a:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    1e9e:	7a c1       	rjmp	.+756    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
			}
			else 
			{
				ExecuteCommand("Feature Registers");
    1ea0:	62 e4       	ldi	r22, 0x42	; 66
    1ea2:	72 e0       	ldi	r23, 0x02	; 2
    1ea4:	80 e0       	ldi	r24, 0x00	; 0
    1ea6:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    1eaa:	74 c1       	rjmp	.+744    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
			}
		}
		
		else if (strcmp(CommandBuffer, "Configuration") == 0) //goes to the Configuration Register
    1eac:	23 ee       	ldi	r18, 0xE3	; 227
    1eae:	32 e0       	ldi	r19, 0x02	; 2
    1eb0:	40 e0       	ldi	r20, 0x00	; 0
    1eb2:	8e 2d       	mov	r24, r14
    1eb4:	b6 01       	movw	r22, r12
    1eb6:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1eba:	89 2b       	or	r24, r25
    1ebc:	51 f4       	brne	.+20     	; 0x1ed2 <ExecuteCommand+0x2aa>
		{
			CLEAR_ARR();
    1ebe:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
			FLASH_Configuration(); //get Configuration Register Data
    1ec2:	0e 94 20 1f 	call	0x3e40	; 0x3e40 <FLASH_Configuration>
			ExecuteCommand("Feature Registers");
    1ec6:	62 e4       	ldi	r22, 0x42	; 66
    1ec8:	72 e0       	ldi	r23, 0x02	; 2
    1eca:	80 e0       	ldi	r24, 0x00	; 0
    1ecc:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    1ed0:	61 c1       	rjmp	.+706    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
		}
		
		else if (strcmp(CommandBuffer, "Status") == 0) //goes to the Status Register
    1ed2:	21 ef       	ldi	r18, 0xF1	; 241
    1ed4:	32 e0       	ldi	r19, 0x02	; 2
    1ed6:	40 e0       	ldi	r20, 0x00	; 0
    1ed8:	8e 2d       	mov	r24, r14
    1eda:	b6 01       	movw	r22, r12
    1edc:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1ee0:	89 2b       	or	r24, r25
    1ee2:	51 f4       	brne	.+20     	; 0x1ef8 <ExecuteCommand+0x2d0>
		{
			CLEAR_ARR();
    1ee4:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
			FLASH_Status(); //reads status register
    1ee8:	0e 94 52 1e 	call	0x3ca4	; 0x3ca4 <FLASH_Status>
			
			ExecuteCommand("Feature Registers");
    1eec:	62 e4       	ldi	r22, 0x42	; 66
    1eee:	72 e0       	ldi	r23, 0x02	; 2
    1ef0:	80 e0       	ldi	r24, 0x00	; 0
    1ef2:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    1ef6:	4e c1       	rjmp	.+668    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
		}
		
		else if (strcmp(CommandBuffer, "Die Select") == 0) //goes to the Die Register
    1ef8:	28 ef       	ldi	r18, 0xF8	; 248
    1efa:	32 e0       	ldi	r19, 0x02	; 2
    1efc:	40 e0       	ldi	r20, 0x00	; 0
    1efe:	8e 2d       	mov	r24, r14
    1f00:	b6 01       	movw	r22, r12
    1f02:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1f06:	89 2b       	or	r24, r25
    1f08:	09 f0       	breq	.+2      	; 0x1f0c <ExecuteCommand+0x2e4>
    1f0a:	44 c1       	rjmp	.+648    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
		{
			CLEAR_ARR();
    1f0c:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
			FLASH_Die_Selection(); //at the moment only reads to this
    1f10:	0e 94 de 1e 	call	0x3dbc	; 0x3dbc <FLASH_Die_Selection>
			ExecuteCommand("Feature Registers");
    1f14:	62 e4       	ldi	r22, 0x42	; 66
    1f16:	72 e0       	ldi	r23, 0x02	; 2
    1f18:	80 e0       	ldi	r24, 0x00	; 0
    1f1a:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    1f1e:	3a c1       	rjmp	.+628    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
		}
	}
	
	else if (strcmp(str, "Test Methods") == 0) //this holds test methods of the device
    1f20:	23 e0       	ldi	r18, 0x03	; 3
    1f22:	33 e0       	ldi	r19, 0x03	; 3
    1f24:	40 e0       	ldi	r20, 0x00	; 0
    1f26:	8e 2d       	mov	r24, r14
    1f28:	b6 01       	movw	r22, r12
    1f2a:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1f2e:	89 2b       	or	r24, r25
    1f30:	09 f0       	breq	.+2      	; 0x1f34 <ExecuteCommand+0x30c>
    1f32:	04 c1       	rjmp	.+520    	; 0x213c <__DATA_REGION_LENGTH__+0x13c>
	{
		CLEAR_ARR();
    1f34:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
		
		USART_Data("1) Write Test \n");
    1f38:	60 e1       	ldi	r22, 0x10	; 16
    1f3a:	73 e0       	ldi	r23, 0x03	; 3
    1f3c:	80 e0       	ldi	r24, 0x00	; 0
    1f3e:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		USART_Data("2) Read Test \n");
    1f42:	60 e2       	ldi	r22, 0x20	; 32
    1f44:	73 e0       	ldi	r23, 0x03	; 3
    1f46:	80 e0       	ldi	r24, 0x00	; 0
    1f48:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		USART_Data("3) Erase Test \n");
    1f4c:	6f e2       	ldi	r22, 0x2F	; 47
    1f4e:	73 e0       	ldi	r23, 0x03	; 3
    1f50:	80 e0       	ldi	r24, 0x00	; 0
    1f52:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		USART_Data("4) Block Checker \n");
    1f56:	6f e3       	ldi	r22, 0x3F	; 63
    1f58:	73 e0       	ldi	r23, 0x03	; 3
    1f5a:	80 e0       	ldi	r24, 0x00	; 0
    1f5c:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		USART_Data("5) Page Checker \n");
    1f60:	62 e5       	ldi	r22, 0x52	; 82
    1f62:	73 e0       	ldi	r23, 0x03	; 3
    1f64:	80 e0       	ldi	r24, 0x00	; 0
    1f66:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		USART_Data("6) NAND Address \n");
    1f6a:	64 e6       	ldi	r22, 0x64	; 100
    1f6c:	73 e0       	ldi	r23, 0x03	; 3
    1f6e:	80 e0       	ldi	r24, 0x00	; 0
    1f70:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		
		UserInput(false);
    1f74:	80 e0       	ldi	r24, 0x00	; 0
    1f76:	0e 94 74 19 	call	0x32e8	; 0x32e8 <UserInput>
		
		if (strcmp(CommandBuffer, "Write Test") == 0) //write to memory test
    1f7a:	80 e0       	ldi	r24, 0x00	; 0
    1f7c:	92 e0       	ldi	r25, 0x02	; 2
    1f7e:	3c 01       	movw	r6, r24
    1f80:	20 e8       	ldi	r18, 0x80	; 128
    1f82:	82 2e       	mov	r8, r18
    1f84:	26 e7       	ldi	r18, 0x76	; 118
    1f86:	33 e0       	ldi	r19, 0x03	; 3
    1f88:	40 e0       	ldi	r20, 0x00	; 0
    1f8a:	88 2d       	mov	r24, r8
    1f8c:	b3 01       	movw	r22, r6
    1f8e:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1f92:	89 2b       	or	r24, r25
    1f94:	29 f5       	brne	.+74     	; 0x1fe0 <ExecuteCommand+0x3b8>
		{
			s = 0;
    1f96:	10 92 04 05 	sts	0x0504, r1	; 0x800504 <s+0x1>
    1f9a:	10 92 03 05 	sts	0x0503, r1	; 0x800503 <s>
			CLEAR_ARR();
    1f9e:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
				
			Print_To_User(FLASH_NAND_ADDRESS_MAX, 0, "Here is our NAND Address: 0x%02X \n", Byte_Address, status_feature);
    1fa2:	85 e0       	ldi	r24, 0x05	; 5
    1fa4:	95 e0       	ldi	r25, 0x05	; 5
    1fa6:	7c 01       	movw	r14, r24
    1fa8:	20 e8       	ldi	r18, 0x80	; 128
    1faa:	02 2f       	mov	r16, r18
    1fac:	0f 2e       	mov	r0, r31
    1fae:	f0 e0       	ldi	r31, 0x00	; 0
    1fb0:	cf 2e       	mov	r12, r31
    1fb2:	f3 e0       	ldi	r31, 0x03	; 3
    1fb4:	df 2e       	mov	r13, r31
    1fb6:	f0 2d       	mov	r31, r0
    1fb8:	21 e8       	ldi	r18, 0x81	; 129
    1fba:	33 e0       	ldi	r19, 0x03	; 3
    1fbc:	40 e0       	ldi	r20, 0x00	; 0
    1fbe:	60 e0       	ldi	r22, 0x00	; 0
    1fc0:	70 e0       	ldi	r23, 0x00	; 0
    1fc2:	85 e0       	ldi	r24, 0x05	; 5
    1fc4:	90 e0       	ldi	r25, 0x00	; 0
    1fc6:	0e 94 e6 1a 	call	0x35cc	; 0x35cc <Print_To_User>
			
			UserInput(false);
    1fca:	80 e0       	ldi	r24, 0x00	; 0
    1fcc:	0e 94 74 19 	call	0x32e8	; 0x32e8 <UserInput>
			
			FLASH_Page_Program(); //adds user input into Flash Write Function, to memory...
    1fd0:	0e 94 0a 1e 	call	0x3c14	; 0x3c14 <FLASH_Page_Program>
			
			ExecuteCommand("Test Methods");
    1fd4:	63 e0       	ldi	r22, 0x03	; 3
    1fd6:	73 e0       	ldi	r23, 0x03	; 3
    1fd8:	80 e0       	ldi	r24, 0x00	; 0
    1fda:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    1fde:	da c0       	rjmp	.+436    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
		}
		
		else if (strcmp(CommandBuffer, "Read Test") == 0) //read from memory test
    1fe0:	24 ea       	ldi	r18, 0xA4	; 164
    1fe2:	33 e0       	ldi	r19, 0x03	; 3
    1fe4:	40 e0       	ldi	r20, 0x00	; 0
    1fe6:	88 2d       	mov	r24, r8
    1fe8:	b3 01       	movw	r22, r6
    1fea:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    1fee:	89 2b       	or	r24, r25
    1ff0:	b1 f4       	brne	.+44     	; 0x201e <__DATA_REGION_LENGTH__+0x1e>
		{
			s = 0; //sets main array to normal operations
    1ff2:	10 92 04 05 	sts	0x0504, r1	; 0x800504 <s+0x1>
    1ff6:	10 92 03 05 	sts	0x0503, r1	; 0x800503 <s>
			CLEAR_ARR();
    1ffa:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
			FLASH_Page_Read();
    1ffe:	0e 94 47 21 	call	0x428e	; 0x428e <FLASH_Page_Read>

			USART_Data(data);
    2002:	61 e0       	ldi	r22, 0x01	; 1
    2004:	74 e0       	ldi	r23, 0x04	; 4
    2006:	80 e8       	ldi	r24, 0x80	; 128
    2008:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
			USART_TX_Data('\n');
    200c:	8a e0       	ldi	r24, 0x0A	; 10
    200e:	0e 94 65 24 	call	0x48ca	; 0x48ca <USART_TX_Data>
			
			ExecuteCommand("Test Methods");
    2012:	63 e0       	ldi	r22, 0x03	; 3
    2014:	73 e0       	ldi	r23, 0x03	; 3
    2016:	80 e0       	ldi	r24, 0x00	; 0
    2018:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    201c:	bb c0       	rjmp	.+374    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
		}
		
		else if (strcmp(CommandBuffer, "Erase Test") == 0) //erases by blocks
    201e:	2e ea       	ldi	r18, 0xAE	; 174
    2020:	33 e0       	ldi	r19, 0x03	; 3
    2022:	40 e0       	ldi	r20, 0x00	; 0
    2024:	88 2d       	mov	r24, r8
    2026:	b3 01       	movw	r22, r6
    2028:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    202c:	89 2b       	or	r24, r25
    202e:	71 f4       	brne	.+28     	; 0x204c <__DATA_REGION_LENGTH__+0x4c>
		{
			s = 0; //sets main array address to normal operation
    2030:	10 92 04 05 	sts	0x0504, r1	; 0x800504 <s+0x1>
    2034:	10 92 03 05 	sts	0x0503, r1	; 0x800503 <s>
			CLEAR_ARR();
    2038:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
			FLASH_Block_Erase(); //Erases Flash Block
    203c:	0e 94 6a 21 	call	0x42d4	; 0x42d4 <FLASH_Block_Erase>
			
			ExecuteCommand("Test Methods");
    2040:	63 e0       	ldi	r22, 0x03	; 3
    2042:	73 e0       	ldi	r23, 0x03	; 3
    2044:	80 e0       	ldi	r24, 0x00	; 0
    2046:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    204a:	a4 c0       	rjmp	.+328    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
		}
		
		//this might stick as part of the main options, but its mostly meant for debugging bad blocks...
		else if (strcmp(CommandBuffer, "Block Checker") == 0) //verifies availability of the block
    204c:	29 eb       	ldi	r18, 0xB9	; 185
    204e:	33 e0       	ldi	r19, 0x03	; 3
    2050:	40 e0       	ldi	r20, 0x00	; 0
    2052:	88 2d       	mov	r24, r8
    2054:	b3 01       	movw	r22, r6
    2056:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    205a:	89 2b       	or	r24, r25
    205c:	e9 f4       	brne	.+58     	; 0x2098 <__DATA_REGION_LENGTH__+0x98>
		{
			s = 0;
    205e:	10 92 04 05 	sts	0x0504, r1	; 0x800504 <s+0x1>
    2062:	10 92 03 05 	sts	0x0503, r1	; 0x800503 <s>
			CLEAR_ARR();
    2066:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
			FLASH_Page_Read();
    206a:	0e 94 47 21 	call	0x428e	; 0x428e <FLASH_Page_Read>

			if (Device_ID[0] != 0xFF)
    206e:	80 91 0a 05 	lds	r24, 0x050A	; 0x80050a <Device_ID>
    2072:	8f 3f       	cpi	r24, 0xFF	; 255
    2074:	31 f0       	breq	.+12     	; 0x2082 <__DATA_REGION_LENGTH__+0x82>
			{
				USART_Data("Block is marked bad\n");
    2076:	67 ec       	ldi	r22, 0xC7	; 199
    2078:	73 e0       	ldi	r23, 0x03	; 3
    207a:	80 e0       	ldi	r24, 0x00	; 0
    207c:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
    2080:	05 c0       	rjmp	.+10     	; 0x208c <__DATA_REGION_LENGTH__+0x8c>
			}
			else
			{
				USART_Data("Block appears clean\n");
    2082:	6c ed       	ldi	r22, 0xDC	; 220
    2084:	73 e0       	ldi	r23, 0x03	; 3
    2086:	80 e0       	ldi	r24, 0x00	; 0
    2088:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
			}
			
			ExecuteCommand("Test Methods");
    208c:	63 e0       	ldi	r22, 0x03	; 3
    208e:	73 e0       	ldi	r23, 0x03	; 3
    2090:	80 e0       	ldi	r24, 0x00	; 0
    2092:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    2096:	7e c0       	rjmp	.+252    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
		}
		
		//meant for debugging bad pages in block...
		else if (strcmp(str, "Page Checker") == 0) //determines if page is good or bad...
    2098:	21 ef       	ldi	r18, 0xF1	; 241
    209a:	33 e0       	ldi	r19, 0x03	; 3
    209c:	40 e0       	ldi	r20, 0x00	; 0
    209e:	8e 2d       	mov	r24, r14
    20a0:	b6 01       	movw	r22, r12
    20a2:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    20a6:	89 2b       	or	r24, r25
    20a8:	61 f4       	brne	.+24     	; 0x20c2 <__DATA_REGION_LENGTH__+0xc2>
		{
			s = 0;
    20aa:	10 92 04 05 	sts	0x0504, r1	; 0x800504 <s+0x1>
    20ae:	10 92 03 05 	sts	0x0503, r1	; 0x800503 <s>
			Page_Tester();
    20b2:	0e 94 14 19 	call	0x3228	; 0x3228 <Page_Tester>
			
			ExecuteCommand("Test Methods");
    20b6:	63 e0       	ldi	r22, 0x03	; 3
    20b8:	73 e0       	ldi	r23, 0x03	; 3
    20ba:	80 e0       	ldi	r24, 0x00	; 0
    20bc:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    20c0:	69 c0       	rjmp	.+210    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
		}
		
		else if (strcmp(str, "NAND Address") == 0) //Tells user what is Column and Block/Page Addresses
    20c2:	2b ed       	ldi	r18, 0xDB	; 219
    20c4:	31 e0       	ldi	r19, 0x01	; 1
    20c6:	40 e0       	ldi	r20, 0x00	; 0
    20c8:	8e 2d       	mov	r24, r14
    20ca:	b6 01       	movw	r22, r12
    20cc:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    20d0:	89 2b       	or	r24, r25
    20d2:	09 f0       	breq	.+2      	; 0x20d6 <__DATA_REGION_LENGTH__+0xd6>
    20d4:	5f c0       	rjmp	.+190    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
		{
			CLEAR_ARR();
    20d6:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
			
			USART_Data("1) Read \n");
    20da:	68 ee       	ldi	r22, 0xE8	; 232
    20dc:	71 e0       	ldi	r23, 0x01	; 1
    20de:	80 e0       	ldi	r24, 0x00	; 0
    20e0:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
			USART_Data("2) Write \n");
    20e4:	62 ef       	ldi	r22, 0xF2	; 242
    20e6:	71 e0       	ldi	r23, 0x01	; 1
    20e8:	80 e0       	ldi	r24, 0x00	; 0
    20ea:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
			
			UserInput(false);
    20ee:	80 e0       	ldi	r24, 0x00	; 0
    20f0:	0e 94 74 19 	call	0x32e8	; 0x32e8 <UserInput>
			
			if (strcmp(CommandBuffer, "Read") == 0)
    20f4:	2d ef       	ldi	r18, 0xFD	; 253
    20f6:	31 e0       	ldi	r19, 0x01	; 1
    20f8:	40 e0       	ldi	r20, 0x00	; 0
    20fa:	88 2d       	mov	r24, r8
    20fc:	b3 01       	movw	r22, r6
    20fe:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    2102:	89 2b       	or	r24, r25
    2104:	49 f4       	brne	.+18     	; 0x2118 <__DATA_REGION_LENGTH__+0x118>
			{
				NAND_Address_Checker(false); //read current NAND addresses
    2106:	80 e0       	ldi	r24, 0x00	; 0
    2108:	0e 94 27 1d 	call	0x3a4e	; 0x3a4e <NAND_Address_Checker>
				ExecuteCommand("Test Methods");
    210c:	63 e0       	ldi	r22, 0x03	; 3
    210e:	73 e0       	ldi	r23, 0x03	; 3
    2110:	80 e0       	ldi	r24, 0x00	; 0
    2112:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    2116:	3e c0       	rjmp	.+124    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
			}
			else if (strcmp(CommandBuffer, "Write") == 0)
    2118:	21 e1       	ldi	r18, 0x11	; 17
    211a:	32 e0       	ldi	r19, 0x02	; 2
    211c:	40 e0       	ldi	r20, 0x00	; 0
    211e:	88 2d       	mov	r24, r8
    2120:	b3 01       	movw	r22, r6
    2122:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    2126:	89 2b       	or	r24, r25
    2128:	a9 f5       	brne	.+106    	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
			{
				NAND_Address_Checker(true); //write new NAND addresses
    212a:	81 e0       	ldi	r24, 0x01	; 1
    212c:	0e 94 27 1d 	call	0x3a4e	; 0x3a4e <NAND_Address_Checker>
				ExecuteCommand("Test Methods");
    2130:	63 e0       	ldi	r22, 0x03	; 3
    2132:	73 e0       	ldi	r23, 0x03	; 3
    2134:	80 e0       	ldi	r24, 0x00	; 0
    2136:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
    213a:	2c c0       	rjmp	.+88     	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
			}
		}
	}
	
	else if (strcmp(str, "Reset") == 0) //Basic Read Test Command
    213c:	2e ef       	ldi	r18, 0xFE	; 254
    213e:	33 e0       	ldi	r19, 0x03	; 3
    2140:	40 e0       	ldi	r20, 0x00	; 0
    2142:	8e 2d       	mov	r24, r14
    2144:	b6 01       	movw	r22, r12
    2146:	0e 94 8c 21 	call	0x4318	; 0x4318 <strcmp>
    214a:	89 2b       	or	r24, r25
    214c:	29 f4       	brne	.+10     	; 0x2158 <__DATA_REGION_LENGTH__+0x158>
	{
		CLEAR_ARR();
    214e:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
		FLASH_Reset();
    2152:	0e 94 09 23 	call	0x4612	; 0x4612 <FLASH_Reset>
    2156:	1e c0       	rjmp	.+60     	; 0x2194 <__DATA_REGION_LENGTH__+0x194>
	}
	
	else
	{
		USART_Data("1) Flash ID \n");
    2158:	64 e0       	ldi	r22, 0x04	; 4
    215a:	74 e0       	ldi	r23, 0x04	; 4
    215c:	80 e0       	ldi	r24, 0x00	; 0
    215e:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		USART_Data("2) NAND Address \n");
    2162:	62 e1       	ldi	r22, 0x12	; 18
    2164:	74 e0       	ldi	r23, 0x04	; 4
    2166:	80 e0       	ldi	r24, 0x00	; 0
    2168:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		USART_Data("3) Parameter Page \n");
    216c:	64 e2       	ldi	r22, 0x24	; 36
    216e:	74 e0       	ldi	r23, 0x04	; 4
    2170:	80 e0       	ldi	r24, 0x00	; 0
    2172:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		USART_Data("4) Feature Registers \n");
    2176:	68 e3       	ldi	r22, 0x38	; 56
    2178:	74 e0       	ldi	r23, 0x04	; 4
    217a:	80 e0       	ldi	r24, 0x00	; 0
    217c:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		USART_Data("5) Test Methods \n");
    2180:	6f e4       	ldi	r22, 0x4F	; 79
    2182:	74 e0       	ldi	r23, 0x04	; 4
    2184:	80 e0       	ldi	r24, 0x00	; 0
    2186:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		USART_Data("6) Reset \n");
    218a:	61 e6       	ldi	r22, 0x61	; 97
    218c:	74 e0       	ldi	r23, 0x04	; 4
    218e:	80 e0       	ldi	r24, 0x00	; 0
    2190:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
	}
}
    2194:	df 91       	pop	r29
    2196:	cf 91       	pop	r28
    2198:	1f 91       	pop	r17
    219a:	0f 91       	pop	r16
    219c:	ff 90       	pop	r15
    219e:	ef 90       	pop	r14
    21a0:	df 90       	pop	r13
    21a2:	cf 90       	pop	r12
    21a4:	8f 90       	pop	r8
    21a6:	7f 90       	pop	r7
    21a8:	6f 90       	pop	r6
    21aa:	08 95       	ret

Disassembly of section .text.UserInput:

000032e8 <UserInput>:

int arr_address = 0; //for CommandBuffer array
int input_counter = 0; //to count the number of input characters 

void UserInput(bool command) //asking for user input
{
    32e8:	cf 92       	push	r12
    32ea:	df 92       	push	r13
    32ec:	ef 92       	push	r14
    32ee:	cf 93       	push	r28
    32f0:	c8 2f       	mov	r28, r24
	USART_Data("->User Input:\n"); //asking for User Input
    32f2:	6c e6       	ldi	r22, 0x6C	; 108
    32f4:	74 e0       	ldi	r23, 0x04	; 4
    32f6:	80 e0       	ldi	r24, 0x00	; 0
    32f8:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
	
	input_counter = 0; //reset input counter
    32fc:	10 92 10 05 	sts	0x0510, r1	; 0x800510 <_end+0x1>
    3300:	10 92 0f 05 	sts	0x050F, r1	; 0x80050f <_end>
	
	c = USART_RX_Data(); //receive user uint8_t data type input
    3304:	0e 94 6c 24 	call	0x48d8	; 0x48d8 <USART_RX_Data>
    3308:	80 93 00 04 	sts	0x0400, r24	; 0x800400 <c>
	
	while ((c != '\r')) //(c != '\n') &&
    330c:	26 c0       	rjmp	.+76     	; 0x335a <UserInput+0x72>
	{
		input_counter++; //increment input counter
    330e:	80 91 0f 05 	lds	r24, 0x050F	; 0x80050f <_end>
    3312:	90 91 10 05 	lds	r25, 0x0510	; 0x800510 <_end+0x1>
    3316:	01 96       	adiw	r24, 0x01	; 1
    3318:	90 93 10 05 	sts	0x0510, r25	; 0x800510 <_end+0x1>
    331c:	80 93 0f 05 	sts	0x050F, r24	; 0x80050f <_end>
		CommandBuffer[arr_address] = c; //adding uint8_t into array at index, creating a string
    3320:	80 91 11 05 	lds	r24, 0x0511	; 0x800511 <arr_address>
    3324:	90 91 12 05 	lds	r25, 0x0512	; 0x800512 <arr_address+0x1>
    3328:	fc 01       	movw	r30, r24
    332a:	e0 50       	subi	r30, 0x00	; 0
    332c:	fe 4f       	sbci	r31, 0xFE	; 254
    332e:	20 83       	st	Z, r18
		if (arr_address >= sizeof(CommandBuffer)) //making this an endless array for command lines
    3330:	8f 3f       	cpi	r24, 0xFF	; 255
    3332:	91 05       	cpc	r25, r1
    3334:	29 f0       	breq	.+10     	; 0x3340 <UserInput+0x58>
    3336:	20 f0       	brcs	.+8      	; 0x3340 <UserInput+0x58>
		{
			arr_address = 0; //resets array at address 0
    3338:	10 92 12 05 	sts	0x0512, r1	; 0x800512 <arr_address+0x1>
    333c:	10 92 11 05 	sts	0x0511, r1	; 0x800511 <arr_address>
		}
		arr_address++;
    3340:	80 91 11 05 	lds	r24, 0x0511	; 0x800511 <arr_address>
    3344:	90 91 12 05 	lds	r25, 0x0512	; 0x800512 <arr_address+0x1>
    3348:	01 96       	adiw	r24, 0x01	; 1
    334a:	90 93 12 05 	sts	0x0512, r25	; 0x800512 <arr_address+0x1>
    334e:	80 93 11 05 	sts	0x0511, r24	; 0x800511 <arr_address>
		c = USART_RX_Data(); //receive user uint8_t data type input
    3352:	0e 94 6c 24 	call	0x48d8	; 0x48d8 <USART_RX_Data>
    3356:	80 93 00 04 	sts	0x0400, r24	; 0x800400 <c>
	
	input_counter = 0; //reset input counter
	
	c = USART_RX_Data(); //receive user uint8_t data type input
	
	while ((c != '\r')) //(c != '\n') &&
    335a:	20 91 00 04 	lds	r18, 0x0400	; 0x800400 <c>
    335e:	2d 30       	cpi	r18, 0x0D	; 13
    3360:	b1 f6       	brne	.-84     	; 0x330e <UserInput+0x26>
		arr_address++;
		c = USART_RX_Data(); //receive user uint8_t data type input
	}
	
	//CommandBuffer[arr_address + 1] = '\r';
	CommandBuffer[arr_address] = '\0'; //adding NULL '\0' to mark end of Command String...; adding carriage return '\r' until I can get NULL to work...
    3362:	e0 91 11 05 	lds	r30, 0x0511	; 0x800511 <arr_address>
    3366:	f0 91 12 05 	lds	r31, 0x0512	; 0x800512 <arr_address+0x1>
    336a:	e0 50       	subi	r30, 0x00	; 0
    336c:	fe 4f       	sbci	r31, 0xFE	; 254
    336e:	10 82       	st	Z, r1
	arr_address = 0; //resets array at address 0
    3370:	10 92 12 05 	sts	0x0512, r1	; 0x800512 <arr_address+0x1>
    3374:	10 92 11 05 	sts	0x0511, r1	; 0x800511 <arr_address>
	
	USART_Data(CommandBuffer); //shows what the user wrote on terminal
    3378:	80 e0       	ldi	r24, 0x00	; 0
    337a:	92 e0       	ldi	r25, 0x02	; 2
    337c:	6c 01       	movw	r12, r24
    337e:	20 e8       	ldi	r18, 0x80	; 128
    3380:	e2 2e       	mov	r14, r18
    3382:	8e 2d       	mov	r24, r14
    3384:	b6 01       	movw	r22, r12
    3386:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
	USART_TX_Data('\n');
    338a:	8a e0       	ldi	r24, 0x0A	; 10
    338c:	0e 94 65 24 	call	0x48ca	; 0x48ca <USART_TX_Data>
	
	if (command)
    3390:	cc 23       	and	r28, r28
    3392:	21 f0       	breq	.+8      	; 0x339c <UserInput+0xb4>
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
    3394:	8e 2d       	mov	r24, r14
    3396:	b6 01       	movw	r22, r12
    3398:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <ExecuteCommand>
}
    339c:	cf 91       	pop	r28
    339e:	ef 90       	pop	r14
    33a0:	df 90       	pop	r13
    33a2:	cf 90       	pop	r12
    33a4:	08 95       	ret

Disassembly of section .text.COLUMN_BLOCK_PAGE_ADDRESSER:

0000271c <COLUMN_BLOCK_PAGE_ADDRESSER>:
		USART_Data(arr_dest);
	}
}

void COLUMN_BLOCK_PAGE_ADDRESSER(bool addr_type) //gets hex number for Column and Block/Page address
{
    271c:	cf 92       	push	r12
    271e:	df 92       	push	r13
    2720:	ef 92       	push	r14
    2722:	ff 92       	push	r15
    2724:	0f 93       	push	r16
    2726:	cf 93       	push	r28
    2728:	c8 2f       	mov	r28, r24
	UserInput(false); //get the hex numbers, false because not command
    272a:	80 e0       	ldi	r24, 0x00	; 0
    272c:	0e 94 74 19 	call	0x32e8	; 0x32e8 <UserInput>
	
	if (addr_type == false) //false, so address type is Column Address
    2730:	c1 11       	cpse	r28, r1
    2732:	4b c0       	rjmp	.+150    	; 0x27ca <COLUMN_BLOCK_PAGE_ADDRESSER+0xae>
	{
		if (input_counter != 4) //has to be 4 inputs
    2734:	80 91 0f 05 	lds	r24, 0x050F	; 0x80050f <_end>
    2738:	90 91 10 05 	lds	r25, 0x0510	; 0x800510 <_end+0x1>
    273c:	04 97       	sbiw	r24, 0x04	; 4
    273e:	41 f0       	breq	.+16     	; 0x2750 <COLUMN_BLOCK_PAGE_ADDRESSER+0x34>
		{
			USART_Data("Make sure only 4 inputs. \n");
    2740:	6b e7       	ldi	r22, 0x7B	; 123
    2742:	74 e0       	ldi	r23, 0x04	; 4
    2744:	80 e0       	ldi	r24, 0x00	; 0
    2746:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
			UserInput(false);
    274a:	80 e0       	ldi	r24, 0x00	; 0
    274c:	0e 94 74 19 	call	0x32e8	; 0x32e8 <UserInput>
		}
		
		if (HEX_Verification()) //if true (valid)
    2750:	0e 94 d3 19 	call	0x33a6	; 0x33a6 <HEX_Verification>
    2754:	81 11       	cpse	r24, r1
    2756:	1b c0       	rjmp	.+54     	; 0x278e <COLUMN_BLOCK_PAGE_ADDRESSER+0x72>
    2758:	34 c0       	rjmp	.+104    	; 0x27c2 <COLUMN_BLOCK_PAGE_ADDRESSER+0xa6>
		{
			for (int i = 0; i < COLUMN_ADDRESS + 1; i+=2)
			{
				Byte_Address[i / 2] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
    275a:	9c 01       	movw	r18, r24
    275c:	99 23       	and	r25, r25
    275e:	14 f4       	brge	.+4      	; 0x2764 <COLUMN_BLOCK_PAGE_ADDRESSER+0x48>
    2760:	2f 5f       	subi	r18, 0xFF	; 255
    2762:	3f 4f       	sbci	r19, 0xFF	; 255
    2764:	35 95       	asr	r19
    2766:	27 95       	ror	r18
    2768:	fc 01       	movw	r30, r24
    276a:	e0 50       	subi	r30, 0x00	; 0
    276c:	fe 4f       	sbci	r31, 0xFE	; 254
    276e:	40 81       	ld	r20, Z
    2770:	60 e1       	ldi	r22, 0x10	; 16
    2772:	46 9f       	mul	r20, r22
    2774:	a0 01       	movw	r20, r0
    2776:	11 24       	eor	r1, r1
    2778:	fc 01       	movw	r30, r24
    277a:	ef 5f       	subi	r30, 0xFF	; 255
    277c:	fd 4f       	sbci	r31, 0xFD	; 253
    277e:	50 81       	ld	r21, Z
    2780:	f9 01       	movw	r30, r18
    2782:	eb 5f       	subi	r30, 0xFB	; 251
    2784:	fa 4f       	sbci	r31, 0xFA	; 250
    2786:	45 2b       	or	r20, r21
    2788:	40 83       	st	Z, r20
			UserInput(false);
		}
		
		if (HEX_Verification()) //if true (valid)
		{
			for (int i = 0; i < COLUMN_ADDRESS + 1; i+=2)
    278a:	02 96       	adiw	r24, 0x02	; 2
    278c:	02 c0       	rjmp	.+4      	; 0x2792 <COLUMN_BLOCK_PAGE_ADDRESSER+0x76>
    278e:	80 e0       	ldi	r24, 0x00	; 0
    2790:	90 e0       	ldi	r25, 0x00	; 0
    2792:	83 30       	cpi	r24, 0x03	; 3
    2794:	91 05       	cpc	r25, r1
    2796:	0c f3       	brlt	.-62     	; 0x275a <COLUMN_BLOCK_PAGE_ADDRESSER+0x3e>
			{
				Byte_Address[i / 2] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
			}
			
			Print_To_User(COLUMN_ADDRESS, 0, "Column Address -> 0x%02X \n", Byte_Address, status_feature);	
    2798:	85 e0       	ldi	r24, 0x05	; 5
    279a:	95 e0       	ldi	r25, 0x05	; 5
    279c:	7c 01       	movw	r14, r24
    279e:	20 e8       	ldi	r18, 0x80	; 128
    27a0:	02 2f       	mov	r16, r18
    27a2:	0f 2e       	mov	r0, r31
    27a4:	f0 e0       	ldi	r31, 0x00	; 0
    27a6:	cf 2e       	mov	r12, r31
    27a8:	f3 e0       	ldi	r31, 0x03	; 3
    27aa:	df 2e       	mov	r13, r31
    27ac:	f0 2d       	mov	r31, r0
    27ae:	26 e9       	ldi	r18, 0x96	; 150
    27b0:	34 e0       	ldi	r19, 0x04	; 4
    27b2:	40 e0       	ldi	r20, 0x00	; 0
    27b4:	60 e0       	ldi	r22, 0x00	; 0
    27b6:	70 e0       	ldi	r23, 0x00	; 0
    27b8:	82 e0       	ldi	r24, 0x02	; 2
    27ba:	90 e0       	ldi	r25, 0x00	; 0
    27bc:	0e 94 e6 1a 	call	0x35cc	; 0x35cc <Print_To_User>
    27c0:	4e c0       	rjmp	.+156    	; 0x285e <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
		else
		{
			COLUMN_BLOCK_PAGE_ADDRESSER(addr_type); //call again
    27c2:	8c 2f       	mov	r24, r28
    27c4:	0e 94 8e 13 	call	0x271c	; 0x271c <COLUMN_BLOCK_PAGE_ADDRESSER>
    27c8:	4a c0       	rjmp	.+148    	; 0x285e <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
	}
	else //true, so address type is Block/Page Address
	{
		if (input_counter != 6) //has to be 6 inputs
    27ca:	80 91 0f 05 	lds	r24, 0x050F	; 0x80050f <_end>
    27ce:	90 91 10 05 	lds	r25, 0x0510	; 0x800510 <_end+0x1>
    27d2:	06 97       	sbiw	r24, 0x06	; 6
    27d4:	41 f0       	breq	.+16     	; 0x27e6 <COLUMN_BLOCK_PAGE_ADDRESSER+0xca>
		{
			USART_Data("Make sure only 6 inputs. \n");
    27d6:	61 eb       	ldi	r22, 0xB1	; 177
    27d8:	74 e0       	ldi	r23, 0x04	; 4
    27da:	80 e0       	ldi	r24, 0x00	; 0
    27dc:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
			UserInput(false);
    27e0:	80 e0       	ldi	r24, 0x00	; 0
    27e2:	0e 94 74 19 	call	0x32e8	; 0x32e8 <UserInput>
		}
		
		if(HEX_Verification()) //if true (valid)
    27e6:	0e 94 d3 19 	call	0x33a6	; 0x33a6 <HEX_Verification>
    27ea:	81 11       	cpse	r24, r1
    27ec:	1b c0       	rjmp	.+54     	; 0x2824 <COLUMN_BLOCK_PAGE_ADDRESSER+0x108>
    27ee:	34 c0       	rjmp	.+104    	; 0x2858 <COLUMN_BLOCK_PAGE_ADDRESSER+0x13c>
		{
			for (int i = 0; i < BLOCK_PAGE_ADDRESS + 2; i+=2)
			{
				Byte_Address[COLUMN_ADDRESS + (i / 2)] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
    27f0:	9c 01       	movw	r18, r24
    27f2:	99 23       	and	r25, r25
    27f4:	14 f4       	brge	.+4      	; 0x27fa <COLUMN_BLOCK_PAGE_ADDRESSER+0xde>
    27f6:	2f 5f       	subi	r18, 0xFF	; 255
    27f8:	3f 4f       	sbci	r19, 0xFF	; 255
    27fa:	35 95       	asr	r19
    27fc:	27 95       	ror	r18
    27fe:	fc 01       	movw	r30, r24
    2800:	e0 50       	subi	r30, 0x00	; 0
    2802:	fe 4f       	sbci	r31, 0xFE	; 254
    2804:	40 81       	ld	r20, Z
    2806:	60 e1       	ldi	r22, 0x10	; 16
    2808:	46 9f       	mul	r20, r22
    280a:	a0 01       	movw	r20, r0
    280c:	11 24       	eor	r1, r1
    280e:	fc 01       	movw	r30, r24
    2810:	ef 5f       	subi	r30, 0xFF	; 255
    2812:	fd 4f       	sbci	r31, 0xFD	; 253
    2814:	50 81       	ld	r21, Z
    2816:	f9 01       	movw	r30, r18
    2818:	e9 5f       	subi	r30, 0xF9	; 249
    281a:	fa 4f       	sbci	r31, 0xFA	; 250
    281c:	45 2b       	or	r20, r21
    281e:	40 83       	st	Z, r20
			UserInput(false);
		}
		
		if(HEX_Verification()) //if true (valid)
		{
			for (int i = 0; i < BLOCK_PAGE_ADDRESS + 2; i+=2)
    2820:	02 96       	adiw	r24, 0x02	; 2
    2822:	02 c0       	rjmp	.+4      	; 0x2828 <COLUMN_BLOCK_PAGE_ADDRESSER+0x10c>
    2824:	80 e0       	ldi	r24, 0x00	; 0
    2826:	90 e0       	ldi	r25, 0x00	; 0
    2828:	85 30       	cpi	r24, 0x05	; 5
    282a:	91 05       	cpc	r25, r1
    282c:	0c f3       	brlt	.-62     	; 0x27f0 <COLUMN_BLOCK_PAGE_ADDRESSER+0xd4>
			{
				Byte_Address[COLUMN_ADDRESS + (i / 2)] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
			}
			
			Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "Block/Page Address -> 0x%02X \n", Byte_Address, status_feature);
    282e:	85 e0       	ldi	r24, 0x05	; 5
    2830:	95 e0       	ldi	r25, 0x05	; 5
    2832:	7c 01       	movw	r14, r24
    2834:	20 e8       	ldi	r18, 0x80	; 128
    2836:	02 2f       	mov	r16, r18
    2838:	0f 2e       	mov	r0, r31
    283a:	f0 e0       	ldi	r31, 0x00	; 0
    283c:	cf 2e       	mov	r12, r31
    283e:	f3 e0       	ldi	r31, 0x03	; 3
    2840:	df 2e       	mov	r13, r31
    2842:	f0 2d       	mov	r31, r0
    2844:	2c ec       	ldi	r18, 0xCC	; 204
    2846:	34 e0       	ldi	r19, 0x04	; 4
    2848:	40 e0       	ldi	r20, 0x00	; 0
    284a:	62 e0       	ldi	r22, 0x02	; 2
    284c:	70 e0       	ldi	r23, 0x00	; 0
    284e:	83 e0       	ldi	r24, 0x03	; 3
    2850:	90 e0       	ldi	r25, 0x00	; 0
    2852:	0e 94 e6 1a 	call	0x35cc	; 0x35cc <Print_To_User>
    2856:	03 c0       	rjmp	.+6      	; 0x285e <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
		else
		{
			COLUMN_BLOCK_PAGE_ADDRESSER(addr_type); //call again
    2858:	8c 2f       	mov	r24, r28
    285a:	0e 94 8e 13 	call	0x271c	; 0x271c <COLUMN_BLOCK_PAGE_ADDRESSER>
		}
	}
}
    285e:	cf 91       	pop	r28
    2860:	0f 91       	pop	r16
    2862:	ff 90       	pop	r15
    2864:	ef 90       	pop	r14
    2866:	df 90       	pop	r13
    2868:	cf 90       	pop	r12
    286a:	08 95       	ret

Disassembly of section .text.NAND_Address_Checker:

00003a4e <NAND_Address_Checker>:
	return true; //return true, indicating passed test
	//Print_To_User(6, 0, "Parsed nibble: 0x%02X\n", CommandBuffer, status_feature); //troubleshooting, verifies if ASCII is converted to hex values
}

void NAND_Address_Checker(bool choice) //returns user the Column and Block/Page Addresses
{
    3a4e:	6f 92       	push	r6
    3a50:	7f 92       	push	r7
    3a52:	8f 92       	push	r8
    3a54:	cf 92       	push	r12
    3a56:	df 92       	push	r13
    3a58:	ef 92       	push	r14
    3a5a:	ff 92       	push	r15
    3a5c:	0f 93       	push	r16
	if(choice) //true so write new address
    3a5e:	88 23       	and	r24, r24
    3a60:	89 f0       	breq	.+34     	; 0x3a84 <NAND_Address_Checker+0x36>
	{	
		USART_Data("---Column Address--- 2 bytes \n");
    3a62:	6b ee       	ldi	r22, 0xEB	; 235
    3a64:	74 e0       	ldi	r23, 0x04	; 4
    3a66:	80 e0       	ldi	r24, 0x00	; 0
    3a68:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		COLUMN_BLOCK_PAGE_ADDRESSER(false);
    3a6c:	80 e0       	ldi	r24, 0x00	; 0
    3a6e:	0e 94 8e 13 	call	0x271c	; 0x271c <COLUMN_BLOCK_PAGE_ADDRESSER>

		USART_Data("---Block/Page Address--- 3 bytes \n");
    3a72:	6a e0       	ldi	r22, 0x0A	; 10
    3a74:	75 e0       	ldi	r23, 0x05	; 5
    3a76:	80 e0       	ldi	r24, 0x00	; 0
    3a78:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		COLUMN_BLOCK_PAGE_ADDRESSER(true);
    3a7c:	81 e0       	ldi	r24, 0x01	; 1
    3a7e:	0e 94 8e 13 	call	0x271c	; 0x271c <COLUMN_BLOCK_PAGE_ADDRESSER>
    3a82:	29 c0       	rjmp	.+82     	; 0x3ad6 <NAND_Address_Checker+0x88>
	}
	else //false so read current address
	{
		USART_Data("---Column Address--- 2 bytes \n");
    3a84:	6b ee       	ldi	r22, 0xEB	; 235
    3a86:	74 e0       	ldi	r23, 0x04	; 4
    3a88:	80 e0       	ldi	r24, 0x00	; 0
    3a8a:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		Print_To_User(COLUMN_ADDRESS, 0, "0x%02X \n", Byte_Address, status_feature);
    3a8e:	85 e0       	ldi	r24, 0x05	; 5
    3a90:	95 e0       	ldi	r25, 0x05	; 5
    3a92:	3c 01       	movw	r6, r24
    3a94:	20 e8       	ldi	r18, 0x80	; 128
    3a96:	82 2e       	mov	r8, r18
    3a98:	0f 2e       	mov	r0, r31
    3a9a:	f0 e0       	ldi	r31, 0x00	; 0
    3a9c:	cf 2e       	mov	r12, r31
    3a9e:	f3 e0       	ldi	r31, 0x03	; 3
    3aa0:	df 2e       	mov	r13, r31
    3aa2:	f0 2d       	mov	r31, r0
    3aa4:	08 2d       	mov	r16, r8
    3aa6:	73 01       	movw	r14, r6
    3aa8:	2d e2       	ldi	r18, 0x2D	; 45
    3aaa:	35 e0       	ldi	r19, 0x05	; 5
    3aac:	40 e0       	ldi	r20, 0x00	; 0
    3aae:	60 e0       	ldi	r22, 0x00	; 0
    3ab0:	70 e0       	ldi	r23, 0x00	; 0
    3ab2:	82 e0       	ldi	r24, 0x02	; 2
    3ab4:	90 e0       	ldi	r25, 0x00	; 0
    3ab6:	0e 94 e6 1a 	call	0x35cc	; 0x35cc <Print_To_User>

		USART_Data("---Block/Page Address--- 3 bytes \n");
    3aba:	6a e0       	ldi	r22, 0x0A	; 10
    3abc:	75 e0       	ldi	r23, 0x05	; 5
    3abe:	80 e0       	ldi	r24, 0x00	; 0
    3ac0:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
		Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "0x%02X \n", Byte_Address, status_feature);	
    3ac4:	2d e2       	ldi	r18, 0x2D	; 45
    3ac6:	35 e0       	ldi	r19, 0x05	; 5
    3ac8:	40 e0       	ldi	r20, 0x00	; 0
    3aca:	62 e0       	ldi	r22, 0x02	; 2
    3acc:	70 e0       	ldi	r23, 0x00	; 0
    3ace:	83 e0       	ldi	r24, 0x03	; 3
    3ad0:	90 e0       	ldi	r25, 0x00	; 0
    3ad2:	0e 94 e6 1a 	call	0x35cc	; 0x35cc <Print_To_User>
	}
}
    3ad6:	0f 91       	pop	r16
    3ad8:	ff 90       	pop	r15
    3ada:	ef 90       	pop	r14
    3adc:	df 90       	pop	r13
    3ade:	cf 90       	pop	r12
    3ae0:	8f 90       	pop	r8
    3ae2:	7f 90       	pop	r7
    3ae4:	6f 90       	pop	r6
    3ae6:	08 95       	ret

Disassembly of section .text.CLEAR_ARR:

00004084 <CLEAR_ARR>:
	FLASH_NAND_CS_DISABLE(d);

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    4084:	80 e0       	ldi	r24, 0x00	; 0
    4086:	90 e0       	ldi	r25, 0x00	; 0
    4088:	05 c0       	rjmp	.+10     	; 0x4094 <CLEAR_ARR+0x10>
    408a:	fc 01       	movw	r30, r24
    408c:	e6 5f       	subi	r30, 0xF6	; 246
    408e:	fa 4f       	sbci	r31, 0xFA	; 250
    4090:	10 82       	st	Z, r1
    4092:	01 96       	adiw	r24, 0x01	; 1
    4094:	82 30       	cpi	r24, 0x02	; 2
    4096:	91 05       	cpc	r25, r1
    4098:	c0 f3       	brcs	.-16     	; 0x408a <CLEAR_ARR+0x6>
    409a:	80 e0       	ldi	r24, 0x00	; 0
    409c:	90 e0       	ldi	r25, 0x00	; 0
    409e:	05 c0       	rjmp	.+10     	; 0x40aa <CLEAR_ARR+0x26>
    40a0:	fc 01       	movw	r30, r24
    40a2:	ef 5f       	subi	r30, 0xFF	; 255
    40a4:	fb 4f       	sbci	r31, 0xFB	; 251
    40a6:	10 82       	st	Z, r1
    40a8:	01 96       	adiw	r24, 0x01	; 1
    40aa:	8f 3f       	cpi	r24, 0xFF	; 255
    40ac:	91 05       	cpc	r25, r1
    40ae:	c1 f3       	breq	.-16     	; 0x40a0 <CLEAR_ARR+0x1c>
    40b0:	b8 f3       	brcs	.-18     	; 0x40a0 <CLEAR_ARR+0x1c>
    40b2:	80 e0       	ldi	r24, 0x00	; 0
    40b4:	90 e0       	ldi	r25, 0x00	; 0
    40b6:	05 c0       	rjmp	.+10     	; 0x40c2 <CLEAR_ARR+0x3e>
    40b8:	fc 01       	movw	r30, r24
    40ba:	e0 50       	subi	r30, 0x00	; 0
    40bc:	fe 4f       	sbci	r31, 0xFE	; 254
    40be:	10 82       	st	Z, r1
    40c0:	01 96       	adiw	r24, 0x01	; 1
    40c2:	8f 3f       	cpi	r24, 0xFF	; 255
    40c4:	91 05       	cpc	r25, r1
    40c6:	c1 f3       	breq	.-16     	; 0x40b8 <CLEAR_ARR+0x34>
    40c8:	b8 f3       	brcs	.-18     	; 0x40b8 <CLEAR_ARR+0x34>
    40ca:	80 e0       	ldi	r24, 0x00	; 0
    40cc:	90 e0       	ldi	r25, 0x00	; 0
    40ce:	05 c0       	rjmp	.+10     	; 0x40da <CLEAR_ARR+0x56>
    40d0:	fc 01       	movw	r30, r24
    40d2:	e0 50       	subi	r30, 0x00	; 0
    40d4:	fd 4f       	sbci	r31, 0xFD	; 253
    40d6:	10 82       	st	Z, r1
    40d8:	01 96       	adiw	r24, 0x01	; 1
    40da:	8f 3f       	cpi	r24, 0xFF	; 255
    40dc:	91 05       	cpc	r25, r1
    40de:	c1 f3       	breq	.-16     	; 0x40d0 <CLEAR_ARR+0x4c>
    40e0:	b8 f3       	brcs	.-18     	; 0x40d0 <CLEAR_ARR+0x4c>
    40e2:	08 95       	ret

Disassembly of section .text.SPI_MASTER_Init:

0000472c <SPI_MASTER_Init>:

//Master Mode (for ATmega 2560) allows full duplex communication between the ATmega 2560 to Flash NAND Memory chip
void SPI_MASTER_Init() //initializes Serial Peripheral Interference (SPI) operations in Master Mode
{
	//DDR pin assignment, ~CS, MOSI, SCK are outputs (1), and MISO is input (0) (in Master Mode)
	DDRB |= (1 << PB2) | (1 << PB1); //setting MASTER_MOSI (PB2) as output; setting MASTER_SCK (PB1) as output;
    472c:	84 b1       	in	r24, 0x04	; 4
    472e:	86 60       	ori	r24, 0x06	; 6
    4730:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << PB3); //setting MASTER_MISO (PB3) as input;
    4732:	84 b1       	in	r24, 0x04	; 4
    4734:	87 7f       	andi	r24, 0xF7	; 247
    4736:	84 b9       	out	0x04, r24	; 4
	
	//MUST set ~SS on the ATmega 2560 in order to get SPI operations working...
	DDRB |= (1 << PB0); //setting ~SS pin (PB0) as output;
    4738:	84 b1       	in	r24, 0x04	; 4
    473a:	81 60       	ori	r24, 0x01	; 1
    473c:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1 << PB0); //setting ~SS pin (PB0) high to "de-select" slave device (not connected to the Flash NAND anyway)
    473e:	85 b1       	in	r24, 0x05	; 5
    4740:	81 60       	ori	r24, 0x01	; 1
    4742:	85 b9       	out	0x05, r24	; 5
	//PORTB &= ~(1 << PB0); //setting ~SS pin (PB0) low to "select" slave device (not connected to the Flash NAND anyway)
	
	SPCR |= (1 << SPE) | (1 << MSTR) | (1 << SPR0); // SPE: enables the SPI; MSTR: sets SPI to Master SPI mode; SPR1 and SPR0: sets the SCK Frequency (divisor of 16);
    4744:	8c b5       	in	r24, 0x2c	; 44
    4746:	81 65       	ori	r24, 0x51	; 81
    4748:	8c bd       	out	0x2c, r24	; 44
	SPCR &= ~(1 << DORD) | ~(1 << CPOL) | ~(1 << CPHA) | ~(1 << SPR1);//DORD, Data order set to MSB transmitted first; SPI Timing Mode is 0, where CPOL and CPHA are both 0
    474a:	8c b5       	in	r24, 0x2c	; 44
    474c:	8c bd       	out	0x2c, r24	; 44
    474e:	08 95       	ret

Disassembly of section .text.FLASH_Write_Enable:

00004640 <FLASH_Write_Enable>:
}

void FLASH_Write_Enable (void) //select Slave device and initializes Write operations onto Flash NAND
{
	FLASH_NAND_CS_ENABLE(d);
    4640:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    4644:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    4648:	0e 94 4d 22 	call	0x449a	; 0x449a <FLASH_NAND_CS_ENABLE>
	
	SPDR = WRITE_ENABLED; //Flash NAND's Write Enable command into SPI Data Register (SPDR)
    464c:	86 e0       	ldi	r24, 0x06	; 6
    464e:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete; waits for SPIF to be logic high
    4650:	0d b4       	in	r0, 0x2d	; 45
    4652:	07 fe       	sbrs	r0, 7
    4654:	fd cf       	rjmp	.-6      	; 0x4650 <FLASH_Write_Enable+0x10>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    4656:	8e b5       	in	r24, 0x2e	; 46
    4658:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
	
	FLASH_NAND_CS_DISABLE(d);
    465c:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    4660:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    4664:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <FLASH_NAND_CS_DISABLE>
    4668:	08 95       	ret

Disassembly of section .text.FLASH_ID:

00003ae8 <FLASH_ID>:
	FLASH_NAND_CS_DISABLE(d);

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3ae8:	cf 93       	push	r28
    3aea:	df 93       	push	r29
    3aec:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3af0:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3af4:	0e 94 4d 22 	call	0x449a	; 0x449a <FLASH_NAND_CS_ENABLE>
    3af8:	8f e9       	ldi	r24, 0x9F	; 159
    3afa:	8e bd       	out	0x2e, r24	; 46
    3afc:	0d b4       	in	r0, 0x2d	; 45
    3afe:	07 fe       	sbrs	r0, 7
    3b00:	fd cf       	rjmp	.-6      	; 0x3afc <FLASH_ID+0x14>
    3b02:	8e b5       	in	r24, 0x2e	; 46
    3b04:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3b08:	1e bc       	out	0x2e, r1	; 46
    3b0a:	0d b4       	in	r0, 0x2d	; 45
    3b0c:	07 fe       	sbrs	r0, 7
    3b0e:	fd cf       	rjmp	.-6      	; 0x3b0a <FLASH_ID+0x22>
    3b10:	8e b5       	in	r24, 0x2e	; 46
    3b12:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3b16:	1e bc       	out	0x2e, r1	; 46
    3b18:	0d b4       	in	r0, 0x2d	; 45
    3b1a:	07 fe       	sbrs	r0, 7
    3b1c:	fd cf       	rjmp	.-6      	; 0x3b18 <FLASH_ID+0x30>
    3b1e:	8e b5       	in	r24, 0x2e	; 46
    3b20:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <Device_ID>
    3b24:	1e bc       	out	0x2e, r1	; 46
    3b26:	0d b4       	in	r0, 0x2d	; 45
    3b28:	07 fe       	sbrs	r0, 7
    3b2a:	fd cf       	rjmp	.-6      	; 0x3b26 <FLASH_ID+0x3e>
    3b2c:	8e b5       	in	r24, 0x2e	; 46
    3b2e:	ca e0       	ldi	r28, 0x0A	; 10
    3b30:	d5 e0       	ldi	r29, 0x05	; 5
    3b32:	89 83       	std	Y+1, r24	; 0x01
    3b34:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3b38:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3b3c:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <FLASH_NAND_CS_DISABLE>
    3b40:	99 81       	ldd	r25, Y+1	; 0x01
    3b42:	88 81       	ld	r24, Y
    3b44:	1f 92       	push	r1
    3b46:	9f 93       	push	r25
    3b48:	1f 92       	push	r1
    3b4a:	8f 93       	push	r24
    3b4c:	86 e3       	ldi	r24, 0x36	; 54
    3b4e:	95 e0       	ldi	r25, 0x05	; 5
    3b50:	a0 e0       	ldi	r26, 0x00	; 0
    3b52:	af 93       	push	r26
    3b54:	9f 93       	push	r25
    3b56:	8f 93       	push	r24
    3b58:	c0 e0       	ldi	r28, 0x00	; 0
    3b5a:	d3 e0       	ldi	r29, 0x03	; 3
    3b5c:	df 93       	push	r29
    3b5e:	cf 93       	push	r28
    3b60:	0e 94 70 23 	call	0x46e0	; 0x46e0 <_sprintf_cdnopuxX>
    3b64:	be 01       	movw	r22, r28
    3b66:	80 e8       	ldi	r24, 0x80	; 128
    3b68:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
    3b6c:	8d b7       	in	r24, 0x3d	; 61
    3b6e:	9e b7       	in	r25, 0x3e	; 62
    3b70:	09 96       	adiw	r24, 0x09	; 9
    3b72:	0f b6       	in	r0, 0x3f	; 63
    3b74:	f8 94       	cli
    3b76:	9e bf       	out	0x3e, r25	; 62
    3b78:	0f be       	out	0x3f, r0	; 63
    3b7a:	8d bf       	out	0x3d, r24	; 61
    3b7c:	df 91       	pop	r29
    3b7e:	cf 91       	pop	r28
    3b80:	08 95       	ret

Disassembly of section .text.FLASH_Die_Selection:

00003dbc <FLASH_Die_Selection>:
    3dbc:	cf 92       	push	r12
    3dbe:	df 92       	push	r13
    3dc0:	ef 92       	push	r14
    3dc2:	ff 92       	push	r15
    3dc4:	0f 93       	push	r16
    3dc6:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3dca:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3dce:	0e 94 4d 22 	call	0x449a	; 0x449a <FLASH_NAND_CS_ENABLE>
    3dd2:	8f e0       	ldi	r24, 0x0F	; 15
    3dd4:	8e bd       	out	0x2e, r24	; 46
    3dd6:	0d b4       	in	r0, 0x2d	; 45
    3dd8:	07 fe       	sbrs	r0, 7
    3dda:	fd cf       	rjmp	.-6      	; 0x3dd6 <FLASH_Die_Selection+0x1a>
    3ddc:	8e b5       	in	r24, 0x2e	; 46
    3dde:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3de2:	80 ed       	ldi	r24, 0xD0	; 208
    3de4:	8e bd       	out	0x2e, r24	; 46
    3de6:	0d b4       	in	r0, 0x2d	; 45
    3de8:	07 fe       	sbrs	r0, 7
    3dea:	fd cf       	rjmp	.-6      	; 0x3de6 <FLASH_Die_Selection+0x2a>
    3dec:	8e b5       	in	r24, 0x2e	; 46
    3dee:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3df2:	1e bc       	out	0x2e, r1	; 46
    3df4:	0d b4       	in	r0, 0x2d	; 45
    3df6:	07 fe       	sbrs	r0, 7
    3df8:	fd cf       	rjmp	.-6      	; 0x3df4 <FLASH_Die_Selection+0x38>
    3dfa:	8e b5       	in	r24, 0x2e	; 46
    3dfc:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3e00:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3e04:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3e08:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <FLASH_NAND_CS_DISABLE>
    3e0c:	8c e0       	ldi	r24, 0x0C	; 12
    3e0e:	95 e0       	ldi	r25, 0x05	; 5
    3e10:	7c 01       	movw	r14, r24
    3e12:	20 e8       	ldi	r18, 0x80	; 128
    3e14:	02 2f       	mov	r16, r18
    3e16:	0f 2e       	mov	r0, r31
    3e18:	f0 e0       	ldi	r31, 0x00	; 0
    3e1a:	cf 2e       	mov	r12, r31
    3e1c:	f3 e0       	ldi	r31, 0x03	; 3
    3e1e:	df 2e       	mov	r13, r31
    3e20:	f0 2d       	mov	r31, r0
    3e22:	2e e6       	ldi	r18, 0x6E	; 110
    3e24:	35 e0       	ldi	r19, 0x05	; 5
    3e26:	40 e0       	ldi	r20, 0x00	; 0
    3e28:	60 e0       	ldi	r22, 0x00	; 0
    3e2a:	70 e0       	ldi	r23, 0x00	; 0
    3e2c:	81 e0       	ldi	r24, 0x01	; 1
    3e2e:	90 e0       	ldi	r25, 0x00	; 0
    3e30:	0e 94 e6 1a 	call	0x35cc	; 0x35cc <Print_To_User>
    3e34:	0f 91       	pop	r16
    3e36:	ff 90       	pop	r15
    3e38:	ef 90       	pop	r14
    3e3a:	df 90       	pop	r13
    3e3c:	cf 90       	pop	r12
    3e3e:	08 95       	ret

Disassembly of section .text.FLASH_Configuration:

00003e40 <FLASH_Configuration>:
    3e40:	cf 92       	push	r12
    3e42:	df 92       	push	r13
    3e44:	ef 92       	push	r14
    3e46:	ff 92       	push	r15
    3e48:	0f 93       	push	r16
    3e4a:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3e4e:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3e52:	0e 94 4d 22 	call	0x449a	; 0x449a <FLASH_NAND_CS_ENABLE>
    3e56:	8f e0       	ldi	r24, 0x0F	; 15
    3e58:	8e bd       	out	0x2e, r24	; 46
    3e5a:	0d b4       	in	r0, 0x2d	; 45
    3e5c:	07 fe       	sbrs	r0, 7
    3e5e:	fd cf       	rjmp	.-6      	; 0x3e5a <FLASH_Configuration+0x1a>
    3e60:	8e b5       	in	r24, 0x2e	; 46
    3e62:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3e66:	80 eb       	ldi	r24, 0xB0	; 176
    3e68:	8e bd       	out	0x2e, r24	; 46
    3e6a:	0d b4       	in	r0, 0x2d	; 45
    3e6c:	07 fe       	sbrs	r0, 7
    3e6e:	fd cf       	rjmp	.-6      	; 0x3e6a <FLASH_Configuration+0x2a>
    3e70:	8e b5       	in	r24, 0x2e	; 46
    3e72:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3e76:	1e bc       	out	0x2e, r1	; 46
    3e78:	0d b4       	in	r0, 0x2d	; 45
    3e7a:	07 fe       	sbrs	r0, 7
    3e7c:	fd cf       	rjmp	.-6      	; 0x3e78 <FLASH_Configuration+0x38>
    3e7e:	8e b5       	in	r24, 0x2e	; 46
    3e80:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3e84:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3e88:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3e8c:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <FLASH_NAND_CS_DISABLE>
    3e90:	8c e0       	ldi	r24, 0x0C	; 12
    3e92:	95 e0       	ldi	r25, 0x05	; 5
    3e94:	7c 01       	movw	r14, r24
    3e96:	20 e8       	ldi	r18, 0x80	; 128
    3e98:	02 2f       	mov	r16, r18
    3e9a:	0f 2e       	mov	r0, r31
    3e9c:	f0 e0       	ldi	r31, 0x00	; 0
    3e9e:	cf 2e       	mov	r12, r31
    3ea0:	f3 e0       	ldi	r31, 0x03	; 3
    3ea2:	df 2e       	mov	r13, r31
    3ea4:	f0 2d       	mov	r31, r0
    3ea6:	2f e8       	ldi	r18, 0x8F	; 143
    3ea8:	35 e0       	ldi	r19, 0x05	; 5
    3eaa:	40 e0       	ldi	r20, 0x00	; 0
    3eac:	60 e0       	ldi	r22, 0x00	; 0
    3eae:	70 e0       	ldi	r23, 0x00	; 0
    3eb0:	81 e0       	ldi	r24, 0x01	; 1
    3eb2:	90 e0       	ldi	r25, 0x00	; 0
    3eb4:	0e 94 e6 1a 	call	0x35cc	; 0x35cc <Print_To_User>
    3eb8:	0f 91       	pop	r16
    3eba:	ff 90       	pop	r15
    3ebc:	ef 90       	pop	r14
    3ebe:	df 90       	pop	r13
    3ec0:	cf 90       	pop	r12
    3ec2:	08 95       	ret

Disassembly of section .text.FLASH_Block_Lock_Setter:

00003ec4 <FLASH_Block_Lock_Setter>:
    3ec4:	cf 93       	push	r28
    3ec6:	c8 2f       	mov	r28, r24
    3ec8:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3ecc:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3ed0:	0e 94 4d 22 	call	0x449a	; 0x449a <FLASH_NAND_CS_ENABLE>
    3ed4:	cc 23       	and	r28, r28
    3ed6:	c9 f0       	breq	.+50     	; 0x3f0a <FLASH_Block_Lock_Setter+0x46>
    3ed8:	8f e1       	ldi	r24, 0x1F	; 31
    3eda:	8e bd       	out	0x2e, r24	; 46
    3edc:	0d b4       	in	r0, 0x2d	; 45
    3ede:	07 fe       	sbrs	r0, 7
    3ee0:	fd cf       	rjmp	.-6      	; 0x3edc <FLASH_Block_Lock_Setter+0x18>
    3ee2:	8e b5       	in	r24, 0x2e	; 46
    3ee4:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3ee8:	80 ea       	ldi	r24, 0xA0	; 160
    3eea:	8e bd       	out	0x2e, r24	; 46
    3eec:	0d b4       	in	r0, 0x2d	; 45
    3eee:	07 fe       	sbrs	r0, 7
    3ef0:	fd cf       	rjmp	.-6      	; 0x3eec <FLASH_Block_Lock_Setter+0x28>
    3ef2:	8e b5       	in	r24, 0x2e	; 46
    3ef4:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3ef8:	8c e7       	ldi	r24, 0x7C	; 124
    3efa:	8e bd       	out	0x2e, r24	; 46
    3efc:	0d b4       	in	r0, 0x2d	; 45
    3efe:	07 fe       	sbrs	r0, 7
    3f00:	fd cf       	rjmp	.-6      	; 0x3efc <FLASH_Block_Lock_Setter+0x38>
    3f02:	8e b5       	in	r24, 0x2e	; 46
    3f04:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3f08:	17 c0       	rjmp	.+46     	; 0x3f38 <FLASH_Block_Lock_Setter+0x74>
    3f0a:	8f e1       	ldi	r24, 0x1F	; 31
    3f0c:	8e bd       	out	0x2e, r24	; 46
    3f0e:	0d b4       	in	r0, 0x2d	; 45
    3f10:	07 fe       	sbrs	r0, 7
    3f12:	fd cf       	rjmp	.-6      	; 0x3f0e <FLASH_Block_Lock_Setter+0x4a>
    3f14:	8e b5       	in	r24, 0x2e	; 46
    3f16:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3f1a:	80 ea       	ldi	r24, 0xA0	; 160
    3f1c:	8e bd       	out	0x2e, r24	; 46
    3f1e:	0d b4       	in	r0, 0x2d	; 45
    3f20:	07 fe       	sbrs	r0, 7
    3f22:	fd cf       	rjmp	.-6      	; 0x3f1e <FLASH_Block_Lock_Setter+0x5a>
    3f24:	8e b5       	in	r24, 0x2e	; 46
    3f26:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3f2a:	1e bc       	out	0x2e, r1	; 46
    3f2c:	0d b4       	in	r0, 0x2d	; 45
    3f2e:	07 fe       	sbrs	r0, 7
    3f30:	fd cf       	rjmp	.-6      	; 0x3f2c <FLASH_Block_Lock_Setter+0x68>
    3f32:	8e b5       	in	r24, 0x2e	; 46
    3f34:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3f38:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3f3c:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3f40:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <FLASH_NAND_CS_DISABLE>
    3f44:	cf 91       	pop	r28
    3f46:	08 95       	ret

Disassembly of section .text.FLASH_Block_Lock:

00003462 <FLASH_Block_Lock>:
    3462:	cf 92       	push	r12
    3464:	df 92       	push	r13
    3466:	ef 92       	push	r14
    3468:	ff 92       	push	r15
    346a:	0f 93       	push	r16
    346c:	08 2f       	mov	r16, r24
    346e:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3472:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3476:	0e 94 4d 22 	call	0x449a	; 0x449a <FLASH_NAND_CS_ENABLE>
    347a:	00 23       	and	r16, r16
    347c:	c1 f0       	breq	.+48     	; 0x34ae <FLASH_Block_Lock+0x4c>
    347e:	8f e1       	ldi	r24, 0x1F	; 31
    3480:	8e bd       	out	0x2e, r24	; 46
    3482:	0d b4       	in	r0, 0x2d	; 45
    3484:	07 fe       	sbrs	r0, 7
    3486:	fd cf       	rjmp	.-6      	; 0x3482 <FLASH_Block_Lock+0x20>
    3488:	8e b5       	in	r24, 0x2e	; 46
    348a:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    348e:	80 ea       	ldi	r24, 0xA0	; 160
    3490:	8e bd       	out	0x2e, r24	; 46
    3492:	0d b4       	in	r0, 0x2d	; 45
    3494:	07 fe       	sbrs	r0, 7
    3496:	fd cf       	rjmp	.-6      	; 0x3492 <FLASH_Block_Lock+0x30>
    3498:	8e b5       	in	r24, 0x2e	; 46
    349a:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    349e:	1e bc       	out	0x2e, r1	; 46
    34a0:	0d b4       	in	r0, 0x2d	; 45
    34a2:	07 fe       	sbrs	r0, 7
    34a4:	fd cf       	rjmp	.-6      	; 0x34a0 <FLASH_Block_Lock+0x3e>
    34a6:	8e b5       	in	r24, 0x2e	; 46
    34a8:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    34ac:	17 c0       	rjmp	.+46     	; 0x34dc <FLASH_Block_Lock+0x7a>
    34ae:	8f e0       	ldi	r24, 0x0F	; 15
    34b0:	8e bd       	out	0x2e, r24	; 46
    34b2:	0d b4       	in	r0, 0x2d	; 45
    34b4:	07 fe       	sbrs	r0, 7
    34b6:	fd cf       	rjmp	.-6      	; 0x34b2 <FLASH_Block_Lock+0x50>
    34b8:	8e b5       	in	r24, 0x2e	; 46
    34ba:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    34be:	80 ea       	ldi	r24, 0xA0	; 160
    34c0:	8e bd       	out	0x2e, r24	; 46
    34c2:	0d b4       	in	r0, 0x2d	; 45
    34c4:	07 fe       	sbrs	r0, 7
    34c6:	fd cf       	rjmp	.-6      	; 0x34c2 <FLASH_Block_Lock+0x60>
    34c8:	8e b5       	in	r24, 0x2e	; 46
    34ca:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    34ce:	1e bc       	out	0x2e, r1	; 46
    34d0:	0d b4       	in	r0, 0x2d	; 45
    34d2:	07 fe       	sbrs	r0, 7
    34d4:	fd cf       	rjmp	.-6      	; 0x34d0 <FLASH_Block_Lock+0x6e>
    34d6:	8e b5       	in	r24, 0x2e	; 46
    34d8:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    34dc:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    34e0:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    34e4:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <FLASH_NAND_CS_DISABLE>
    34e8:	8c e0       	ldi	r24, 0x0C	; 12
    34ea:	95 e0       	ldi	r25, 0x05	; 5
    34ec:	7c 01       	movw	r14, r24
    34ee:	20 e8       	ldi	r18, 0x80	; 128
    34f0:	02 2f       	mov	r16, r18
    34f2:	0f 2e       	mov	r0, r31
    34f4:	f0 e0       	ldi	r31, 0x00	; 0
    34f6:	cf 2e       	mov	r12, r31
    34f8:	f3 e0       	ldi	r31, 0x03	; 3
    34fa:	df 2e       	mov	r13, r31
    34fc:	f0 2d       	mov	r31, r0
    34fe:	20 eb       	ldi	r18, 0xB0	; 176
    3500:	35 e0       	ldi	r19, 0x05	; 5
    3502:	40 e0       	ldi	r20, 0x00	; 0
    3504:	60 e0       	ldi	r22, 0x00	; 0
    3506:	70 e0       	ldi	r23, 0x00	; 0
    3508:	81 e0       	ldi	r24, 0x01	; 1
    350a:	90 e0       	ldi	r25, 0x00	; 0
    350c:	0e 94 e6 1a 	call	0x35cc	; 0x35cc <Print_To_User>
    3510:	0f 91       	pop	r16
    3512:	ff 90       	pop	r15
    3514:	ef 90       	pop	r14
    3516:	df 90       	pop	r13
    3518:	cf 90       	pop	r12
    351a:	08 95       	ret

Disassembly of section .text.FLASH_Reset:

00004612 <FLASH_Reset>:
	Print_To_User(1, 0, "Block Lock Register: 0x%02X \n", &status, status_feature);
}

void FLASH_Reset() //reset memory device
{
	FLASH_NAND_CS_ENABLE(d);
    4612:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    4616:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    461a:	0e 94 4d 22 	call	0x449a	; 0x449a <FLASH_NAND_CS_ENABLE>
	
	SPDR = RESET; //Sending READ_ID Command into SPI Data Register (SPDR)
    461e:	8f ef       	ldi	r24, 0xFF	; 255
    4620:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    4622:	0d b4       	in	r0, 0x2d	; 45
    4624:	07 fe       	sbrs	r0, 7
    4626:	fd cf       	rjmp	.-6      	; 0x4622 <FLASH_Reset+0x10>
	
	FLASH_NAND_CS_DISABLE(d);
    4628:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    462c:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    4630:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <FLASH_NAND_CS_DISABLE>

	USART_Data("Device Reseted \n");
    4634:	6e ec       	ldi	r22, 0xCE	; 206
    4636:	75 e0       	ldi	r23, 0x05	; 5
    4638:	80 e0       	ldi	r24, 0x00	; 0
    463a:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
    463e:	08 95       	ret

Disassembly of section .text.FLASH_MainArray_Address:

00003678 <FLASH_MainArray_Address>:
	FLASH_NAND_CS_DISABLE(d);

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3678:	cf 92       	push	r12
    367a:	df 92       	push	r13
    367c:	ef 92       	push	r14
    367e:	9a 01       	movw	r18, r20
    3680:	46 2f       	mov	r20, r22
    3682:	00 97       	sbiw	r24, 0x00	; 0
    3684:	81 f5       	brne	.+96     	; 0x36e6 <FLASH_MainArray_Address+0x6e>
    3686:	69 01       	movw	r12, r18
    3688:	e4 2e       	mov	r14, r20
    368a:	52 e0       	ldi	r21, 0x02	; 2
    368c:	c5 0e       	add	r12, r21
    368e:	d1 1c       	adc	r13, r1
    3690:	e1 1c       	adc	r14, r1
    3692:	f6 01       	movw	r30, r12
    3694:	5e 2d       	mov	r21, r14
    3696:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    369a:	6e bd       	out	0x2e, r22	; 46
    369c:	0d b4       	in	r0, 0x2d	; 45
    369e:	07 fe       	sbrs	r0, 7
    36a0:	fd cf       	rjmp	.-6      	; 0x369c <FLASH_MainArray_Address+0x24>
    36a2:	5e b5       	in	r21, 0x2e	; 46
    36a4:	50 93 0c 05 	sts	0x050C, r21	; 0x80050c <status>
    36a8:	69 01       	movw	r12, r18
    36aa:	e4 2e       	mov	r14, r20
    36ac:	53 e0       	ldi	r21, 0x03	; 3
    36ae:	c5 0e       	add	r12, r21
    36b0:	d1 1c       	adc	r13, r1
    36b2:	e1 1c       	adc	r14, r1
    36b4:	f6 01       	movw	r30, r12
    36b6:	5e 2d       	mov	r21, r14
    36b8:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    36bc:	6e bd       	out	0x2e, r22	; 46
    36be:	0d b4       	in	r0, 0x2d	; 45
    36c0:	07 fe       	sbrs	r0, 7
    36c2:	fd cf       	rjmp	.-6      	; 0x36be <FLASH_MainArray_Address+0x46>
    36c4:	5e b5       	in	r21, 0x2e	; 46
    36c6:	50 93 0c 05 	sts	0x050C, r21	; 0x80050c <status>
    36ca:	2c 5f       	subi	r18, 0xFC	; 252
    36cc:	3f 4f       	sbci	r19, 0xFF	; 255
    36ce:	4f 4f       	sbci	r20, 0xFF	; 255
    36d0:	f9 01       	movw	r30, r18
    36d2:	54 2f       	mov	r21, r20
    36d4:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    36d8:	6e bd       	out	0x2e, r22	; 46
    36da:	0d b4       	in	r0, 0x2d	; 45
    36dc:	07 fe       	sbrs	r0, 7
    36de:	fd cf       	rjmp	.-6      	; 0x36da <FLASH_MainArray_Address+0x62>
    36e0:	2e b5       	in	r18, 0x2e	; 46
    36e2:	20 93 0c 05 	sts	0x050C, r18	; 0x80050c <status>
    36e6:	01 97       	sbiw	r24, 0x01	; 1
    36e8:	b1 f4       	brne	.+44     	; 0x3716 <FLASH_MainArray_Address+0x9e>
    36ea:	1e bc       	out	0x2e, r1	; 46
    36ec:	0d b4       	in	r0, 0x2d	; 45
    36ee:	07 fe       	sbrs	r0, 7
    36f0:	fd cf       	rjmp	.-6      	; 0x36ec <FLASH_MainArray_Address+0x74>
    36f2:	8e b5       	in	r24, 0x2e	; 46
    36f4:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    36f8:	1e bc       	out	0x2e, r1	; 46
    36fa:	0d b4       	in	r0, 0x2d	; 45
    36fc:	07 fe       	sbrs	r0, 7
    36fe:	fd cf       	rjmp	.-6      	; 0x36fa <FLASH_MainArray_Address+0x82>
    3700:	8e b5       	in	r24, 0x2e	; 46
    3702:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3706:	81 e0       	ldi	r24, 0x01	; 1
    3708:	8e bd       	out	0x2e, r24	; 46
    370a:	0d b4       	in	r0, 0x2d	; 45
    370c:	07 fe       	sbrs	r0, 7
    370e:	fd cf       	rjmp	.-6      	; 0x370a <FLASH_MainArray_Address+0x92>
    3710:	8e b5       	in	r24, 0x2e	; 46
    3712:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3716:	ef 90       	pop	r14
    3718:	df 90       	pop	r13
    371a:	cf 90       	pop	r12
    371c:	08 95       	ret

Disassembly of section .text.FLASH_Column_Address:

00004142 <FLASH_Column_Address>:
    4142:	9a 01       	movw	r18, r20
    4144:	46 2f       	mov	r20, r22
    4146:	00 97       	sbiw	r24, 0x00	; 0
    4148:	c9 f4       	brne	.+50     	; 0x417c <FLASH_Column_Address+0x3a>
    414a:	f9 01       	movw	r30, r18
    414c:	54 2f       	mov	r21, r20
    414e:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    4152:	6e bd       	out	0x2e, r22	; 46
    4154:	0d b4       	in	r0, 0x2d	; 45
    4156:	07 fe       	sbrs	r0, 7
    4158:	fd cf       	rjmp	.-6      	; 0x4154 <FLASH_Column_Address+0x12>
    415a:	5e b5       	in	r21, 0x2e	; 46
    415c:	50 93 0c 05 	sts	0x050C, r21	; 0x80050c <status>
    4160:	2f 5f       	subi	r18, 0xFF	; 255
    4162:	3f 4f       	sbci	r19, 0xFF	; 255
    4164:	4f 4f       	sbci	r20, 0xFF	; 255
    4166:	f9 01       	movw	r30, r18
    4168:	54 2f       	mov	r21, r20
    416a:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    416e:	6e bd       	out	0x2e, r22	; 46
    4170:	0d b4       	in	r0, 0x2d	; 45
    4172:	07 fe       	sbrs	r0, 7
    4174:	fd cf       	rjmp	.-6      	; 0x4170 <FLASH_Column_Address+0x2e>
    4176:	2e b5       	in	r18, 0x2e	; 46
    4178:	20 93 0c 05 	sts	0x050C, r18	; 0x80050c <status>
    417c:	01 97       	sbiw	r24, 0x01	; 1
    417e:	71 f4       	brne	.+28     	; 0x419c <FLASH_Column_Address+0x5a>
    4180:	1e bc       	out	0x2e, r1	; 46
    4182:	0d b4       	in	r0, 0x2d	; 45
    4184:	07 fe       	sbrs	r0, 7
    4186:	fd cf       	rjmp	.-6      	; 0x4182 <FLASH_Column_Address+0x40>
    4188:	8e b5       	in	r24, 0x2e	; 46
    418a:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    418e:	1e bc       	out	0x2e, r1	; 46
    4190:	0d b4       	in	r0, 0x2d	; 45
    4192:	07 fe       	sbrs	r0, 7
    4194:	fd cf       	rjmp	.-6      	; 0x4190 <FLASH_Column_Address+0x4e>
    4196:	8e b5       	in	r24, 0x2e	; 46
    4198:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    419c:	08 95       	ret

Disassembly of section .text.FLASH_Data_Storage:

0000390a <FLASH_Data_Storage>:
    390a:	cf 92       	push	r12
    390c:	df 92       	push	r13
    390e:	ef 92       	push	r14
    3910:	ff 92       	push	r15
    3912:	0f 93       	push	r16
    3914:	1f 93       	push	r17
    3916:	cf 93       	push	r28
    3918:	df 93       	push	r29
    391a:	ec 01       	movw	r28, r24
    391c:	89 2b       	or	r24, r25
    391e:	19 f1       	breq	.+70     	; 0x3966 <FLASH_Data_Storage+0x5c>
    3920:	28 c0       	rjmp	.+80     	; 0x3972 <FLASH_Data_Storage+0x68>
    3922:	1e bc       	out	0x2e, r1	; 46
    3924:	0d b4       	in	r0, 0x2d	; 45
    3926:	07 fe       	sbrs	r0, 7
    3928:	fd cf       	rjmp	.-6      	; 0x3924 <FLASH_Data_Storage+0x1a>
    392a:	2e b5       	in	r18, 0x2e	; 46
    392c:	fc 01       	movw	r30, r24
    392e:	ef 5f       	subi	r30, 0xFF	; 255
    3930:	fb 4f       	sbci	r31, 0xFB	; 251
    3932:	20 83       	st	Z, r18
    3934:	2e b5       	in	r18, 0x2e	; 46
    3936:	2d 30       	cpi	r18, 0x0D	; 13
    3938:	a1 f4       	brne	.+40     	; 0x3962 <FLASH_Data_Storage+0x58>
    393a:	7c 01       	movw	r14, r24
    393c:	99 0f       	add	r25, r25
    393e:	00 0b       	sbc	r16, r16
    3940:	11 0b       	sbc	r17, r17
    3942:	0f 2e       	mov	r0, r31
    3944:	f0 e0       	ldi	r31, 0x00	; 0
    3946:	cf 2e       	mov	r12, r31
    3948:	f3 e0       	ldi	r31, 0x03	; 3
    394a:	df 2e       	mov	r13, r31
    394c:	f0 2d       	mov	r31, r0
    394e:	2f ed       	ldi	r18, 0xDF	; 223
    3950:	35 e0       	ldi	r19, 0x05	; 5
    3952:	40 e0       	ldi	r20, 0x00	; 0
    3954:	60 e0       	ldi	r22, 0x00	; 0
    3956:	70 e0       	ldi	r23, 0x00	; 0
    3958:	81 e0       	ldi	r24, 0x01	; 1
    395a:	90 e0       	ldi	r25, 0x00	; 0
    395c:	0e 94 e6 1a 	call	0x35cc	; 0x35cc <Print_To_User>
    3960:	08 c0       	rjmp	.+16     	; 0x3972 <FLASH_Data_Storage+0x68>
    3962:	01 96       	adiw	r24, 0x01	; 1
    3964:	02 c0       	rjmp	.+4      	; 0x396a <FLASH_Data_Storage+0x60>
    3966:	80 e0       	ldi	r24, 0x00	; 0
    3968:	90 e0       	ldi	r25, 0x00	; 0
    396a:	8f 3f       	cpi	r24, 0xFF	; 255
    396c:	91 05       	cpc	r25, r1
    396e:	c9 f2       	breq	.-78     	; 0x3922 <FLASH_Data_Storage+0x18>
    3970:	c0 f2       	brcs	.-80     	; 0x3922 <FLASH_Data_Storage+0x18>
    3972:	21 97       	sbiw	r28, 0x01	; 1
    3974:	91 f4       	brne	.+36     	; 0x399a <FLASH_Data_Storage+0x90>
    3976:	0b c0       	rjmp	.+22     	; 0x398e <FLASH_Data_Storage+0x84>
    3978:	1e bc       	out	0x2e, r1	; 46
    397a:	0d b4       	in	r0, 0x2d	; 45
    397c:	07 fe       	sbrs	r0, 7
    397e:	fd cf       	rjmp	.-6      	; 0x397a <FLASH_Data_Storage+0x70>
    3980:	2e b5       	in	r18, 0x2e	; 46
    3982:	fc 01       	movw	r30, r24
    3984:	ef 5f       	subi	r30, 0xFF	; 255
    3986:	fb 4f       	sbci	r31, 0xFB	; 251
    3988:	20 83       	st	Z, r18
    398a:	01 96       	adiw	r24, 0x01	; 1
    398c:	02 c0       	rjmp	.+4      	; 0x3992 <FLASH_Data_Storage+0x88>
    398e:	80 e0       	ldi	r24, 0x00	; 0
    3990:	90 e0       	ldi	r25, 0x00	; 0
    3992:	8f 3f       	cpi	r24, 0xFF	; 255
    3994:	91 05       	cpc	r25, r1
    3996:	81 f3       	breq	.-32     	; 0x3978 <FLASH_Data_Storage+0x6e>
    3998:	78 f3       	brcs	.-34     	; 0x3978 <FLASH_Data_Storage+0x6e>
    399a:	df 91       	pop	r29
    399c:	cf 91       	pop	r28
    399e:	1f 91       	pop	r17
    39a0:	0f 91       	pop	r16
    39a2:	ff 90       	pop	r15
    39a4:	ef 90       	pop	r14
    39a6:	df 90       	pop	r13
    39a8:	cf 90       	pop	r12
    39aa:	08 95       	ret

Disassembly of section .text.FLASH_Read_From_Cache_x1:

0000419e <FLASH_Read_From_Cache_x1>:
    419e:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    41a2:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    41a6:	0e 94 4d 22 	call	0x449a	; 0x449a <FLASH_NAND_CS_ENABLE>
    41aa:	83 e0       	ldi	r24, 0x03	; 3
    41ac:	8e bd       	out	0x2e, r24	; 46
    41ae:	0d b4       	in	r0, 0x2d	; 45
    41b0:	07 fe       	sbrs	r0, 7
    41b2:	fd cf       	rjmp	.-6      	; 0x41ae <FLASH_Read_From_Cache_x1+0x10>
    41b4:	8e b5       	in	r24, 0x2e	; 46
    41b6:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    41ba:	00 c0       	rjmp	.+0      	; 0x41bc <FLASH_Read_From_Cache_x1+0x1e>
    41bc:	00 c0       	rjmp	.+0      	; 0x41be <FLASH_Read_From_Cache_x1+0x20>
    41be:	00 00       	nop
    41c0:	45 e0       	ldi	r20, 0x05	; 5
    41c2:	55 e0       	ldi	r21, 0x05	; 5
    41c4:	60 e8       	ldi	r22, 0x80	; 128
    41c6:	80 91 03 05 	lds	r24, 0x0503	; 0x800503 <s>
    41ca:	90 91 04 05 	lds	r25, 0x0504	; 0x800504 <s+0x1>
    41ce:	0e 94 a1 20 	call	0x4142	; 0x4142 <FLASH_Column_Address>
    41d2:	1e bc       	out	0x2e, r1	; 46
    41d4:	0d b4       	in	r0, 0x2d	; 45
    41d6:	07 fe       	sbrs	r0, 7
    41d8:	fd cf       	rjmp	.-6      	; 0x41d4 <FLASH_Read_From_Cache_x1+0x36>
    41da:	8e b5       	in	r24, 0x2e	; 46
    41dc:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    41e0:	80 91 03 05 	lds	r24, 0x0503	; 0x800503 <s>
    41e4:	90 91 04 05 	lds	r25, 0x0504	; 0x800504 <s+0x1>
    41e8:	0e 94 85 1c 	call	0x390a	; 0x390a <FLASH_Data_Storage>
    41ec:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    41f0:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    41f4:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <FLASH_NAND_CS_DISABLE>
    41f8:	08 95       	ret

Disassembly of section .text.FLASH_Status:

00003ca4 <FLASH_Status>:
    3ca4:	cf 92       	push	r12
    3ca6:	df 92       	push	r13
    3ca8:	ef 92       	push	r14
    3caa:	ff 92       	push	r15
    3cac:	0f 93       	push	r16
    3cae:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3cb2:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3cb6:	0e 94 4d 22 	call	0x449a	; 0x449a <FLASH_NAND_CS_ENABLE>
    3cba:	8f e0       	ldi	r24, 0x0F	; 15
    3cbc:	8e bd       	out	0x2e, r24	; 46
    3cbe:	0d b4       	in	r0, 0x2d	; 45
    3cc0:	07 fe       	sbrs	r0, 7
    3cc2:	fd cf       	rjmp	.-6      	; 0x3cbe <FLASH_Status+0x1a>
    3cc4:	8e b5       	in	r24, 0x2e	; 46
    3cc6:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3cca:	80 ec       	ldi	r24, 0xC0	; 192
    3ccc:	8e bd       	out	0x2e, r24	; 46
    3cce:	0d b4       	in	r0, 0x2d	; 45
    3cd0:	07 fe       	sbrs	r0, 7
    3cd2:	fd cf       	rjmp	.-6      	; 0x3cce <FLASH_Status+0x2a>
    3cd4:	8e b5       	in	r24, 0x2e	; 46
    3cd6:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3cda:	1e bc       	out	0x2e, r1	; 46
    3cdc:	0d b4       	in	r0, 0x2d	; 45
    3cde:	07 fe       	sbrs	r0, 7
    3ce0:	fd cf       	rjmp	.-6      	; 0x3cdc <FLASH_Status+0x38>
    3ce2:	8e b5       	in	r24, 0x2e	; 46
    3ce4:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3ce8:	8c e0       	ldi	r24, 0x0C	; 12
    3cea:	95 e0       	ldi	r25, 0x05	; 5
    3cec:	7c 01       	movw	r14, r24
    3cee:	20 e8       	ldi	r18, 0x80	; 128
    3cf0:	02 2f       	mov	r16, r18
    3cf2:	0f 2e       	mov	r0, r31
    3cf4:	f0 e0       	ldi	r31, 0x00	; 0
    3cf6:	cf 2e       	mov	r12, r31
    3cf8:	f3 e0       	ldi	r31, 0x03	; 3
    3cfa:	df 2e       	mov	r13, r31
    3cfc:	f0 2d       	mov	r31, r0
    3cfe:	29 ef       	ldi	r18, 0xF9	; 249
    3d00:	35 e0       	ldi	r19, 0x05	; 5
    3d02:	40 e0       	ldi	r20, 0x00	; 0
    3d04:	60 e0       	ldi	r22, 0x00	; 0
    3d06:	70 e0       	ldi	r23, 0x00	; 0
    3d08:	81 e0       	ldi	r24, 0x01	; 1
    3d0a:	90 e0       	ldi	r25, 0x00	; 0
    3d0c:	0e 94 e6 1a 	call	0x35cc	; 0x35cc <Print_To_User>
    3d10:	80 91 0c 05 	lds	r24, 0x050C	; 0x80050c <status>
    3d14:	80 fd       	sbrc	r24, 0
    3d16:	e1 cf       	rjmp	.-62     	; 0x3cda <FLASH_Status+0x36>
    3d18:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3d1c:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3d20:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <FLASH_NAND_CS_DISABLE>
    3d24:	0f 91       	pop	r16
    3d26:	ff 90       	pop	r15
    3d28:	ef 90       	pop	r14
    3d2a:	df 90       	pop	r13
    3d2c:	cf 90       	pop	r12
    3d2e:	08 95       	ret

Disassembly of section .text.FLASH_Program_Execute:

000043a0 <FLASH_Program_Execute>:

void FLASH_Program_Execute() //new command to transfer data from cache to main array
{	
	FLASH_NAND_CS_ENABLE(d);
    43a0:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    43a4:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    43a8:	0e 94 4d 22 	call	0x449a	; 0x449a <FLASH_NAND_CS_ENABLE>
	
	//code below sends Program_Execute command with the starting address of the main array
	SPDR = PROGRAM_EXECUTE; //Sending Program Execute Command into SPI Data Register (SPDR)
    43ac:	80 e1       	ldi	r24, 0x10	; 16
    43ae:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1 << SPIF))); 
    43b0:	0d b4       	in	r0, 0x2d	; 45
    43b2:	07 fe       	sbrs	r0, 7
    43b4:	fd cf       	rjmp	.-6      	; 0x43b0 <FLASH_Program_Execute+0x10>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    43b6:	8e b5       	in	r24, 0x2e	; 46
    43b8:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
	
	//_delay_us(5);
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to write data to in MainArray
    43bc:	45 e0       	ldi	r20, 0x05	; 5
    43be:	55 e0       	ldi	r21, 0x05	; 5
    43c0:	60 e8       	ldi	r22, 0x80	; 128
    43c2:	80 91 03 05 	lds	r24, 0x0503	; 0x800503 <s>
    43c6:	90 91 04 05 	lds	r25, 0x0504	; 0x800504 <s+0x1>
    43ca:	0e 94 3c 1b 	call	0x3678	; 0x3678 <FLASH_MainArray_Address>
	
	FLASH_NAND_CS_DISABLE(d);
    43ce:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    43d2:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    43d6:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <FLASH_NAND_CS_DISABLE>
	
	//USART_Data("Program Execute \n");
	
	FLASH_Status(); //checks for the status of data transfer from cache to main array from program_execute command
    43da:	0e 94 52 1e 	call	0x3ca4	; 0x3ca4 <FLASH_Status>
    43de:	08 95       	ret

Disassembly of section .text.FLASH_Page_Program:

00003c14 <FLASH_Page_Program>:
	FLASH_NAND_CS_DISABLE(d);

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3c14:	cf 93       	push	r28
    3c16:	df 93       	push	r29
    3c18:	0e 94 20 23 	call	0x4640	; 0x4640 <FLASH_Write_Enable>
    3c1c:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3c20:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3c24:	0e 94 4d 22 	call	0x449a	; 0x449a <FLASH_NAND_CS_ENABLE>
    3c28:	82 e0       	ldi	r24, 0x02	; 2
    3c2a:	8e bd       	out	0x2e, r24	; 46
    3c2c:	0d b4       	in	r0, 0x2d	; 45
    3c2e:	07 fe       	sbrs	r0, 7
    3c30:	fd cf       	rjmp	.-6      	; 0x3c2c <FLASH_Page_Program+0x18>
    3c32:	8e b5       	in	r24, 0x2e	; 46
    3c34:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3c38:	00 c0       	rjmp	.+0      	; 0x3c3a <FLASH_Page_Program+0x26>
    3c3a:	00 c0       	rjmp	.+0      	; 0x3c3c <FLASH_Page_Program+0x28>
    3c3c:	00 00       	nop
    3c3e:	45 e0       	ldi	r20, 0x05	; 5
    3c40:	55 e0       	ldi	r21, 0x05	; 5
    3c42:	60 e8       	ldi	r22, 0x80	; 128
    3c44:	80 91 03 05 	lds	r24, 0x0503	; 0x800503 <s>
    3c48:	90 91 04 05 	lds	r25, 0x0504	; 0x800504 <s+0x1>
    3c4c:	0e 94 a1 20 	call	0x4142	; 0x4142 <FLASH_Column_Address>
    3c50:	c0 e0       	ldi	r28, 0x00	; 0
    3c52:	d0 e0       	ldi	r29, 0x00	; 0
    3c54:	0c c0       	rjmp	.+24     	; 0x3c6e <FLASH_Page_Program+0x5a>
    3c56:	fe 01       	movw	r30, r28
    3c58:	e0 50       	subi	r30, 0x00	; 0
    3c5a:	fe 4f       	sbci	r31, 0xFE	; 254
    3c5c:	80 81       	ld	r24, Z
    3c5e:	8e bd       	out	0x2e, r24	; 46
    3c60:	0d b4       	in	r0, 0x2d	; 45
    3c62:	07 fe       	sbrs	r0, 7
    3c64:	fd cf       	rjmp	.-6      	; 0x3c60 <FLASH_Page_Program+0x4c>
    3c66:	8e b5       	in	r24, 0x2e	; 46
    3c68:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3c6c:	21 96       	adiw	r28, 0x01	; 1
    3c6e:	60 e0       	ldi	r22, 0x00	; 0
    3c70:	72 e0       	ldi	r23, 0x02	; 2
    3c72:	80 e8       	ldi	r24, 0x80	; 128
    3c74:	0e 94 a8 23 	call	0x4750	; 0x4750 <strlen>
    3c78:	c8 17       	cp	r28, r24
    3c7a:	d9 07       	cpc	r29, r25
    3c7c:	60 f3       	brcs	.-40     	; 0x3c56 <FLASH_Page_Program+0x42>
    3c7e:	8d e0       	ldi	r24, 0x0D	; 13
    3c80:	8e bd       	out	0x2e, r24	; 46
    3c82:	0d b4       	in	r0, 0x2d	; 45
    3c84:	07 fe       	sbrs	r0, 7
    3c86:	fd cf       	rjmp	.-6      	; 0x3c82 <FLASH_Page_Program+0x6e>
    3c88:	8e b5       	in	r24, 0x2e	; 46
    3c8a:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
    3c8e:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3c92:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3c96:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <FLASH_NAND_CS_DISABLE>
    3c9a:	0e 94 d0 21 	call	0x43a0	; 0x43a0 <FLASH_Program_Execute>
    3c9e:	df 91       	pop	r29
    3ca0:	cf 91       	pop	r28
    3ca2:	08 95       	ret

Disassembly of section .text.FLASH_Page_Read:

0000428e <FLASH_Page_Read>:
	FLASH_Status(); //checks for the status of data transfer from cache to main array from program_execute command
}

void FLASH_Page_Read() //reads a single page data from Block/Page array to transfer to Cache register
{
	FLASH_NAND_CS_ENABLE(d);
    428e:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    4292:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    4296:	0e 94 4d 22 	call	0x449a	; 0x449a <FLASH_NAND_CS_ENABLE>
	
	SPDR = PAGE_READ; //Sending Page_Read Command into SPI Data Register (SPDR)
    429a:	83 e1       	ldi	r24, 0x13	; 19
    429c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    429e:	0d b4       	in	r0, 0x2d	; 45
    42a0:	07 fe       	sbrs	r0, 7
    42a2:	fd cf       	rjmp	.-6      	; 0x429e <FLASH_Page_Read+0x10>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    42a4:	8e b5       	in	r24, 0x2e	; 46
    42a6:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
	
	//_delay_us(5);
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to read data from in MainArray
    42aa:	45 e0       	ldi	r20, 0x05	; 5
    42ac:	55 e0       	ldi	r21, 0x05	; 5
    42ae:	60 e8       	ldi	r22, 0x80	; 128
    42b0:	80 91 03 05 	lds	r24, 0x0503	; 0x800503 <s>
    42b4:	90 91 04 05 	lds	r25, 0x0504	; 0x800504 <s+0x1>
    42b8:	0e 94 3c 1b 	call	0x3678	; 0x3678 <FLASH_MainArray_Address>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    42bc:	00 00       	nop
	
	_delay_us(0.200);
	
	FLASH_NAND_CS_DISABLE(d);
    42be:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    42c2:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    42c6:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <FLASH_NAND_CS_DISABLE>

	FLASH_Status(); //checks for the status of data transfer from main array to cache from page_read command
    42ca:	0e 94 52 1e 	call	0x3ca4	; 0x3ca4 <FLASH_Status>
	
	//USART_Data("Page Read \n");
	
	FLASH_Read_From_Cache_x1();
    42ce:	0e 94 cf 20 	call	0x419e	; 0x419e <FLASH_Read_From_Cache_x1>
    42d2:	08 95       	ret

Disassembly of section .text.FLASH_Para_Pg:

00003f48 <FLASH_Para_Pg>:
	FLASH_NAND_CS_DISABLE(d);

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3f48:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3f4c:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3f50:	0e 94 4d 22 	call	0x449a	; 0x449a <FLASH_NAND_CS_ENABLE>
    3f54:	8f e1       	ldi	r24, 0x1F	; 31
    3f56:	8e bd       	out	0x2e, r24	; 46
    3f58:	0d b4       	in	r0, 0x2d	; 45
    3f5a:	07 fe       	sbrs	r0, 7
    3f5c:	fd cf       	rjmp	.-6      	; 0x3f58 <FLASH_Para_Pg+0x10>
    3f5e:	80 eb       	ldi	r24, 0xB0	; 176
    3f60:	8e bd       	out	0x2e, r24	; 46
    3f62:	0d b4       	in	r0, 0x2d	; 45
    3f64:	07 fe       	sbrs	r0, 7
    3f66:	fd cf       	rjmp	.-6      	; 0x3f62 <FLASH_Para_Pg+0x1a>
    3f68:	80 e4       	ldi	r24, 0x40	; 64
    3f6a:	8e bd       	out	0x2e, r24	; 46
    3f6c:	0d b4       	in	r0, 0x2d	; 45
    3f6e:	07 fe       	sbrs	r0, 7
    3f70:	fd cf       	rjmp	.-6      	; 0x3f6c <FLASH_Para_Pg+0x24>
    3f72:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3f76:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3f7a:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <FLASH_NAND_CS_DISABLE>
    3f7e:	0e 94 47 21 	call	0x428e	; 0x428e <FLASH_Page_Read>
    3f82:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3f86:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3f8a:	0e 94 4d 22 	call	0x449a	; 0x449a <FLASH_NAND_CS_ENABLE>
    3f8e:	8f e1       	ldi	r24, 0x1F	; 31
    3f90:	8e bd       	out	0x2e, r24	; 46
    3f92:	0d b4       	in	r0, 0x2d	; 45
    3f94:	07 fe       	sbrs	r0, 7
    3f96:	fd cf       	rjmp	.-6      	; 0x3f92 <FLASH_Para_Pg+0x4a>
    3f98:	80 eb       	ldi	r24, 0xB0	; 176
    3f9a:	8e bd       	out	0x2e, r24	; 46
    3f9c:	0d b4       	in	r0, 0x2d	; 45
    3f9e:	07 fe       	sbrs	r0, 7
    3fa0:	fd cf       	rjmp	.-6      	; 0x3f9c <FLASH_Para_Pg+0x54>
    3fa2:	1e bc       	out	0x2e, r1	; 46
    3fa4:	0d b4       	in	r0, 0x2d	; 45
    3fa6:	07 fe       	sbrs	r0, 7
    3fa8:	fd cf       	rjmp	.-6      	; 0x3fa4 <FLASH_Para_Pg+0x5c>
    3faa:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    3fae:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    3fb2:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <FLASH_NAND_CS_DISABLE>
    3fb6:	08 95       	ret

Disassembly of section .text.FLASH_Block_Erase:

000042d4 <FLASH_Block_Erase>:
	//USART_Data("Read from Cache: \n");
}

void FLASH_Block_Erase() //erases data from Flash Nand Memory at the block level
{
	FLASH_Write_Enable();
    42d4:	0e 94 20 23 	call	0x4640	; 0x4640 <FLASH_Write_Enable>
	
	FLASH_NAND_CS_ENABLE(d);
    42d8:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    42dc:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    42e0:	0e 94 4d 22 	call	0x449a	; 0x449a <FLASH_NAND_CS_ENABLE>
	
	SPDR = BLOCK_ERASE; //Sending Block_Erase Command into SPI Data Register (SPDR)
    42e4:	88 ed       	ldi	r24, 0xD8	; 216
    42e6:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    42e8:	0d b4       	in	r0, 0x2d	; 45
    42ea:	07 fe       	sbrs	r0, 7
    42ec:	fd cf       	rjmp	.-6      	; 0x42e8 <FLASH_Block_Erase+0x14>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    42ee:	8e b5       	in	r24, 0x2e	; 46
    42f0:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <status>
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to write/read data to in MainArray
    42f4:	45 e0       	ldi	r20, 0x05	; 5
    42f6:	55 e0       	ldi	r21, 0x05	; 5
    42f8:	60 e8       	ldi	r22, 0x80	; 128
    42fa:	80 91 03 05 	lds	r24, 0x0503	; 0x800503 <s>
    42fe:	90 91 04 05 	lds	r25, 0x0504	; 0x800504 <s+0x1>
    4302:	0e 94 3c 1b 	call	0x3678	; 0x3678 <FLASH_MainArray_Address>

	FLASH_NAND_CS_DISABLE(d);
    4306:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <d>
    430a:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <d+0x1>
    430e:	0e 94 6a 22 	call	0x44d4	; 0x44d4 <FLASH_NAND_CS_DISABLE>
	
	FLASH_Status(); //checks for the status of data deletion on the block level from Block_Erase command
    4312:	0e 94 52 1e 	call	0x3ca4	; 0x3ca4 <FLASH_Status>
    4316:	08 95       	ret

Disassembly of section .text.Page_Tester:

00003228 <Page_Tester>:
#include "../main.h"

#ifdef NAND_Flash_Formatter
 
void Page_Tester() //tests each page per block
{
    3228:	cf 92       	push	r12
    322a:	df 92       	push	r13
    322c:	ef 92       	push	r14
    322e:	ff 92       	push	r15
    3230:	0f 93       	push	r16
    3232:	cf 93       	push	r28
    3234:	df 93       	push	r29
	 //first obtain Columns and Block/Page addresses
	USART_Data("---Column Address--- 2 bytes \n");
    3236:	6a e0       	ldi	r22, 0x0A	; 10
    3238:	76 e0       	ldi	r23, 0x06	; 6
    323a:	80 e0       	ldi	r24, 0x00	; 0
    323c:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
	COLUMN_BLOCK_PAGE_ADDRESSER(false); //obtain the column address
    3240:	80 e0       	ldi	r24, 0x00	; 0
    3242:	0e 94 8e 13 	call	0x271c	; 0x271c <COLUMN_BLOCK_PAGE_ADDRESSER>

	USART_Data("---Block/Page Address--- 3 bytes \n");
    3246:	69 e2       	ldi	r22, 0x29	; 41
    3248:	76 e0       	ldi	r23, 0x06	; 6
    324a:	80 e0       	ldi	r24, 0x00	; 0
    324c:	0e 94 fd 20 	call	0x41fa	; 0x41fa <USART_Data>
	COLUMN_BLOCK_PAGE_ADDRESSER(true); //obtain the Block/Page address
    3250:	81 e0       	ldi	r24, 0x01	; 1
    3252:	0e 94 8e 13 	call	0x271c	; 0x271c <COLUMN_BLOCK_PAGE_ADDRESSER>
		
	for (int i = 0; i < PAGES_PER_BLOCK; i++)
    3256:	c0 e0       	ldi	r28, 0x00	; 0
    3258:	d0 e0       	ldi	r29, 0x00	; 0
    325a:	3b c0       	rjmp	.+118    	; 0x32d2 <Page_Tester+0xaa>
	{
		CLEAR_ARR();
    325c:	0e 94 42 20 	call	0x4084	; 0x4084 <CLEAR_ARR>
		FLASH_Page_Read();
    3260:	0e 94 47 21 	call	0x428e	; 0x428e <FLASH_Page_Read>
		
		if (Byte_Address[4] == 0x40) //break loop if passed this point (x3F) is where all page bits are set to 1
    3264:	80 91 09 05 	lds	r24, 0x0509	; 0x800509 <Byte_Address+0x4>
    3268:	80 34       	cpi	r24, 0x40	; 64
    326a:	b1 f1       	breq	.+108    	; 0x32d8 <Page_Tester+0xb0>
		{
			break;
		}
		
		if (data[0] != 0xFF)
    326c:	80 91 01 04 	lds	r24, 0x0401	; 0x800401 <data>
    3270:	8f 3f       	cpi	r24, 0xFF	; 255
    3272:	a9 f0       	breq	.+42     	; 0x329e <Page_Tester+0x76>
		{
			Print_To_User(1, 4, "0x%02X This Page is marked bad \n", Byte_Address, status_feature);
    3274:	85 e0       	ldi	r24, 0x05	; 5
    3276:	95 e0       	ldi	r25, 0x05	; 5
    3278:	7c 01       	movw	r14, r24
    327a:	20 e8       	ldi	r18, 0x80	; 128
    327c:	02 2f       	mov	r16, r18
    327e:	0f 2e       	mov	r0, r31
    3280:	f0 e0       	ldi	r31, 0x00	; 0
    3282:	cf 2e       	mov	r12, r31
    3284:	f3 e0       	ldi	r31, 0x03	; 3
    3286:	df 2e       	mov	r13, r31
    3288:	f0 2d       	mov	r31, r0
    328a:	2c e4       	ldi	r18, 0x4C	; 76
    328c:	36 e0       	ldi	r19, 0x06	; 6
    328e:	40 e0       	ldi	r20, 0x00	; 0
    3290:	64 e0       	ldi	r22, 0x04	; 4
    3292:	70 e0       	ldi	r23, 0x00	; 0
    3294:	81 e0       	ldi	r24, 0x01	; 1
    3296:	90 e0       	ldi	r25, 0x00	; 0
    3298:	0e 94 e6 1a 	call	0x35cc	; 0x35cc <Print_To_User>
    329c:	14 c0       	rjmp	.+40     	; 0x32c6 <Page_Tester+0x9e>
		}
		else
		{
			Print_To_User(1, 4, "0x%02X This Page is clean \n", Byte_Address, status_feature);
    329e:	85 e0       	ldi	r24, 0x05	; 5
    32a0:	95 e0       	ldi	r25, 0x05	; 5
    32a2:	7c 01       	movw	r14, r24
    32a4:	20 e8       	ldi	r18, 0x80	; 128
    32a6:	02 2f       	mov	r16, r18
    32a8:	0f 2e       	mov	r0, r31
    32aa:	f0 e0       	ldi	r31, 0x00	; 0
    32ac:	cf 2e       	mov	r12, r31
    32ae:	f3 e0       	ldi	r31, 0x03	; 3
    32b0:	df 2e       	mov	r13, r31
    32b2:	f0 2d       	mov	r31, r0
    32b4:	2d e6       	ldi	r18, 0x6D	; 109
    32b6:	36 e0       	ldi	r19, 0x06	; 6
    32b8:	40 e0       	ldi	r20, 0x00	; 0
    32ba:	64 e0       	ldi	r22, 0x04	; 4
    32bc:	70 e0       	ldi	r23, 0x00	; 0
    32be:	81 e0       	ldi	r24, 0x01	; 1
    32c0:	90 e0       	ldi	r25, 0x00	; 0
    32c2:	0e 94 e6 1a 	call	0x35cc	; 0x35cc <Print_To_User>
		}
		
		Byte_Address[4]++; //increment page hopefully...
    32c6:	e5 e0       	ldi	r30, 0x05	; 5
    32c8:	f5 e0       	ldi	r31, 0x05	; 5
    32ca:	84 81       	ldd	r24, Z+4	; 0x04
    32cc:	8f 5f       	subi	r24, 0xFF	; 255
    32ce:	84 83       	std	Z+4, r24	; 0x04
	COLUMN_BLOCK_PAGE_ADDRESSER(false); //obtain the column address

	USART_Data("---Block/Page Address--- 3 bytes \n");
	COLUMN_BLOCK_PAGE_ADDRESSER(true); //obtain the Block/Page address
		
	for (int i = 0; i < PAGES_PER_BLOCK; i++)
    32d0:	21 96       	adiw	r28, 0x01	; 1
    32d2:	c0 34       	cpi	r28, 0x40	; 64
    32d4:	d1 05       	cpc	r29, r1
    32d6:	14 f2       	brlt	.-124    	; 0x325c <Page_Tester+0x34>
			Print_To_User(1, 4, "0x%02X This Page is clean \n", Byte_Address, status_feature);
		}
		
		Byte_Address[4]++; //increment page hopefully...
	}
}
    32d8:	df 91       	pop	r29
    32da:	cf 91       	pop	r28
    32dc:	0f 91       	pop	r16
    32de:	ff 90       	pop	r15
    32e0:	ef 90       	pop	r14
    32e2:	df 90       	pop	r13
    32e4:	cf 90       	pop	r12
    32e6:	08 95       	ret

Disassembly of section .text.libgcc:

00004902 <__xload_1>:
    4902:	57 fd       	sbrc	r21, 7
    4904:	03 c0       	rjmp	.+6      	; 0x490c <__xload_1+0xa>
    4906:	5b bf       	out	0x3b, r21	; 59
    4908:	67 91       	elpm	r22, Z+
    490a:	08 95       	ret
    490c:	60 81       	ld	r22, Z
    490e:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00004994 <_fini>:
    4994:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00004996 <__funcs_on_exit>:
    4996:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00004998 <__simulator_exit>:
    4998:	08 95       	ret

Disassembly of section .text.exit:

00004880 <exit>:
    4880:	ec 01       	movw	r28, r24
    4882:	0e 94 cb 24 	call	0x4996	; 0x4996 <__funcs_on_exit>
    4886:	0e 94 ca 24 	call	0x4994	; 0x4994 <_fini>
    488a:	ce 01       	movw	r24, r28
    488c:	0e 94 cc 24 	call	0x4998	; 0x4998 <__simulator_exit>
    4890:	ce 01       	movw	r24, r28
    4892:	0e 94 c8 24 	call	0x4990	; 0x4990 <_Exit>

Disassembly of section .text.__wrap_sprintf:

000046e0 <_sprintf_cdnopuxX>:
    46e0:	a0 e0       	ldi	r26, 0x00	; 0
    46e2:	b0 e0       	ldi	r27, 0x00	; 0
    46e4:	e6 e7       	ldi	r30, 0x76	; 118
    46e6:	f3 e2       	ldi	r31, 0x23	; 35
    46e8:	0c 94 97 22 	jmp	0x452e	; 0x452e <__prologue_saves__+0x20>
    46ec:	9e 01       	movw	r18, r28
    46ee:	25 5f       	subi	r18, 0xF5	; 245
    46f0:	3f 4f       	sbci	r19, 0xFF	; 255
    46f2:	48 85       	ldd	r20, Y+8	; 0x08
    46f4:	59 85       	ldd	r21, Y+9	; 0x09
    46f6:	6a 85       	ldd	r22, Y+10	; 0x0a
    46f8:	8e 81       	ldd	r24, Y+6	; 0x06
    46fa:	9f 81       	ldd	r25, Y+7	; 0x07
    46fc:	0e 94 11 24 	call	0x4822	; 0x4822 <__vsprintf>
    4700:	e2 e0       	ldi	r30, 0x02	; 2
    4702:	0c 94 ce 22 	jmp	0x459c	; 0x459c <__epilogue_restores__+0x20>

Disassembly of section .text.__fmt_s:

0000315e <__fmt_s>:
    315e:	2f 92       	push	r2
    3160:	3f 92       	push	r3
    3162:	4f 92       	push	r4
    3164:	6f 92       	push	r6
    3166:	7f 92       	push	r7
    3168:	8f 92       	push	r8
    316a:	af 92       	push	r10
    316c:	bf 92       	push	r11
    316e:	cf 92       	push	r12
    3170:	df 92       	push	r13
    3172:	ef 92       	push	r14
    3174:	ff 92       	push	r15
    3176:	0f 93       	push	r16
    3178:	1f 93       	push	r17
    317a:	cf 93       	push	r28
    317c:	df 93       	push	r29
    317e:	cd b7       	in	r28, 0x3d	; 61
    3180:	de b7       	in	r29, 0x3e	; 62
    3182:	27 97       	sbiw	r28, 0x07	; 7
    3184:	0f b6       	in	r0, 0x3f	; 63
    3186:	f8 94       	cli
    3188:	de bf       	out	0x3e, r29	; 62
    318a:	0f be       	out	0x3f, r0	; 63
    318c:	cd bf       	out	0x3d, r28	; 61
    318e:	6c 01       	movw	r12, r24
    3190:	7b 01       	movw	r14, r22
    3192:	39 01       	movw	r6, r18
    3194:	84 2e       	mov	r8, r20
    3196:	98 01       	movw	r18, r16
    3198:	82 ed       	ldi	r24, 0xD2	; 210
    319a:	28 2e       	mov	r2, r24
    319c:	86 e0       	ldi	r24, 0x06	; 6
    319e:	38 2e       	mov	r3, r24
    31a0:	80 e0       	ldi	r24, 0x00	; 0
    31a2:	48 2e       	mov	r4, r24
    31a4:	87 e0       	ldi	r24, 0x07	; 7
    31a6:	f1 01       	movw	r30, r2
    31a8:	ae 01       	movw	r20, r28
    31aa:	4f 5f       	subi	r20, 0xFF	; 255
    31ac:	5f 4f       	sbci	r21, 0xFF	; 255
    31ae:	da 01       	movw	r26, r20
    31b0:	74 2d       	mov	r23, r4
    31b2:	0e 94 f7 23 	call	0x47ee	; 0x47ee <__movmemx_qi>
    31b6:	f7 01       	movw	r30, r14
    31b8:	02 81       	ldd	r16, Z+2	; 0x02
    31ba:	13 81       	ldd	r17, Z+3	; 0x03
    31bc:	a4 80       	ldd	r10, Z+4	; 0x04
    31be:	b5 80       	ldd	r11, Z+5	; 0x05
    31c0:	e0 80       	ld	r14, Z
    31c2:	f1 80       	ldd	r15, Z+1	; 0x01
    31c4:	61 14       	cp	r6, r1
    31c6:	71 04       	cpc	r7, r1
    31c8:	81 04       	cpc	r8, r1
    31ca:	19 f4       	brne	.+6      	; 0x31d2 <__fmt_s+0x74>
    31cc:	3a 01       	movw	r6, r20
    31ce:	f0 e8       	ldi	r31, 0x80	; 128
    31d0:	8f 2e       	mov	r8, r31
    31d2:	21 15       	cp	r18, r1
    31d4:	31 05       	cpc	r19, r1
    31d6:	29 f4       	brne	.+10     	; 0x31e2 <__fmt_s+0x84>
    31d8:	88 2d       	mov	r24, r8
    31da:	b3 01       	movw	r22, r6
    31dc:	0e 94 a8 23 	call	0x4750	; 0x4750 <strlen>
    31e0:	9c 01       	movw	r18, r24
    31e2:	17 fd       	sbrc	r17, 7
    31e4:	04 c0       	rjmp	.+8      	; 0x31ee <__fmt_s+0x90>
    31e6:	02 17       	cp	r16, r18
    31e8:	13 07       	cpc	r17, r19
    31ea:	08 f4       	brcc	.+2      	; 0x31ee <__fmt_s+0x90>
    31ec:	98 01       	movw	r18, r16
    31ee:	85 01       	movw	r16, r10
    31f0:	68 2d       	mov	r22, r8
    31f2:	a3 01       	movw	r20, r6
    31f4:	c6 01       	movw	r24, r12
    31f6:	0e 94 12 16 	call	0x2c24	; 0x2c24 <__pad>
    31fa:	27 96       	adiw	r28, 0x07	; 7
    31fc:	0f b6       	in	r0, 0x3f	; 63
    31fe:	f8 94       	cli
    3200:	de bf       	out	0x3e, r29	; 62
    3202:	0f be       	out	0x3f, r0	; 63
    3204:	cd bf       	out	0x3d, r28	; 61
    3206:	df 91       	pop	r29
    3208:	cf 91       	pop	r28
    320a:	1f 91       	pop	r17
    320c:	0f 91       	pop	r16
    320e:	ff 90       	pop	r15
    3210:	ef 90       	pop	r14
    3212:	df 90       	pop	r13
    3214:	cf 90       	pop	r12
    3216:	bf 90       	pop	r11
    3218:	af 90       	pop	r10
    321a:	8f 90       	pop	r8
    321c:	7f 90       	pop	r7
    321e:	6f 90       	pop	r6
    3220:	4f 90       	pop	r4
    3222:	3f 90       	pop	r3
    3224:	2f 90       	pop	r2
    3226:	08 95       	ret

Disassembly of section .text.__out:

00003fb8 <__out>:
    3fb8:	6f 92       	push	r6
    3fba:	7f 92       	push	r7
    3fbc:	8f 92       	push	r8
    3fbe:	cf 92       	push	r12
    3fc0:	df 92       	push	r13
    3fc2:	ef 92       	push	r14
    3fc4:	0f 93       	push	r16
    3fc6:	1f 93       	push	r17
    3fc8:	cf 93       	push	r28
    3fca:	df 93       	push	r29
    3fcc:	8c 01       	movw	r16, r24
    3fce:	6a 01       	movw	r12, r20
    3fd0:	e6 2e       	mov	r14, r22
    3fd2:	e9 01       	movw	r28, r18
    3fd4:	3a 01       	movw	r6, r20
    3fd6:	86 2e       	mov	r8, r22
    3fd8:	62 0e       	add	r6, r18
    3fda:	73 1e       	adc	r7, r19
    3fdc:	81 1c       	adc	r8, r1
    3fde:	37 fd       	sbrc	r19, 7
    3fe0:	8a 94       	dec	r8
    3fe2:	c6 14       	cp	r12, r6
    3fe4:	d7 04       	cpc	r13, r7
    3fe6:	e8 04       	cpc	r14, r8
    3fe8:	81 f0       	breq	.+32     	; 0x400a <__out+0x52>
    3fea:	f6 01       	movw	r30, r12
    3fec:	5e 2d       	mov	r21, r14
    3fee:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    3ff2:	86 2f       	mov	r24, r22
    3ff4:	b8 01       	movw	r22, r16
    3ff6:	08 2e       	mov	r0, r24
    3ff8:	00 0c       	add	r0, r0
    3ffa:	99 0b       	sbc	r25, r25
    3ffc:	0e 94 c1 1d 	call	0x3b82	; 0x3b82 <fputc>
    4000:	8f ef       	ldi	r24, 0xFF	; 255
    4002:	c8 1a       	sub	r12, r24
    4004:	d8 0a       	sbc	r13, r24
    4006:	e8 0a       	sbc	r14, r24
    4008:	ec cf       	rjmp	.-40     	; 0x3fe2 <__out+0x2a>
    400a:	ce 01       	movw	r24, r28
    400c:	df 91       	pop	r29
    400e:	cf 91       	pop	r28
    4010:	1f 91       	pop	r17
    4012:	0f 91       	pop	r16
    4014:	ef 90       	pop	r14
    4016:	df 90       	pop	r13
    4018:	cf 90       	pop	r12
    401a:	8f 90       	pop	r8
    401c:	7f 90       	pop	r7
    401e:	6f 90       	pop	r6
    4020:	08 95       	ret

Disassembly of section .text.__pad:

00002c24 <__pad>:
    2c24:	2f 92       	push	r2
    2c26:	3f 92       	push	r3
    2c28:	4f 92       	push	r4
    2c2a:	6f 92       	push	r6
    2c2c:	7f 92       	push	r7
    2c2e:	8f 92       	push	r8
    2c30:	af 92       	push	r10
    2c32:	bf 92       	push	r11
    2c34:	cf 92       	push	r12
    2c36:	df 92       	push	r13
    2c38:	ef 92       	push	r14
    2c3a:	ff 92       	push	r15
    2c3c:	0f 93       	push	r16
    2c3e:	1f 93       	push	r17
    2c40:	cf 93       	push	r28
    2c42:	df 93       	push	r29
    2c44:	cd b7       	in	r28, 0x3d	; 61
    2c46:	de b7       	in	r29, 0x3e	; 62
    2c48:	66 97       	sbiw	r28, 0x16	; 22
    2c4a:	0f b6       	in	r0, 0x3f	; 63
    2c4c:	f8 94       	cli
    2c4e:	de bf       	out	0x3e, r29	; 62
    2c50:	0f be       	out	0x3f, r0	; 63
    2c52:	cd bf       	out	0x3d, r28	; 61
    2c54:	5c 01       	movw	r10, r24
    2c56:	3a 01       	movw	r6, r20
    2c58:	86 2e       	mov	r8, r22
    2c5a:	69 01       	movw	r12, r18
    2c5c:	c7 01       	movw	r24, r14
    2c5e:	81 70       	andi	r24, 0x01	; 1
    2c60:	99 27       	eor	r25, r25
    2c62:	9c 8b       	std	Y+20, r25	; 0x14
    2c64:	8b 8b       	std	Y+19, r24	; 0x13
    2c66:	e0 fc       	sbrc	r14, 0
    2c68:	1d c0       	rjmp	.+58     	; 0x2ca4 <__pad+0x80>
    2c6a:	20 17       	cp	r18, r16
    2c6c:	31 07       	cpc	r19, r17
    2c6e:	d4 f4       	brge	.+52     	; 0x2ca4 <__pad+0x80>
    2c70:	78 01       	movw	r14, r16
    2c72:	ec 18       	sub	r14, r12
    2c74:	fd 08       	sbc	r15, r13
    2c76:	fe 8a       	std	Y+22, r15	; 0x16
    2c78:	ed 8a       	std	Y+21, r14	; 0x15
    2c7a:	a7 01       	movw	r20, r14
    2c7c:	91 e1       	ldi	r25, 0x11	; 17
    2c7e:	e9 16       	cp	r14, r25
    2c80:	f1 04       	cpc	r15, r1
    2c82:	10 f0       	brcs	.+4      	; 0x2c88 <__pad+0x64>
    2c84:	40 e1       	ldi	r20, 0x10	; 16
    2c86:	50 e0       	ldi	r21, 0x00	; 0
    2c88:	60 e2       	ldi	r22, 0x20	; 32
    2c8a:	70 e0       	ldi	r23, 0x00	; 0
    2c8c:	ce 01       	movw	r24, r28
    2c8e:	01 96       	adiw	r24, 0x01	; 1
    2c90:	9a 8b       	std	Y+18, r25	; 0x12
    2c92:	89 8b       	std	Y+17, r24	; 0x11
    2c94:	0e 94 4b 24 	call	0x4896	; 0x4896 <memset>
    2c98:	89 89       	ldd	r24, Y+17	; 0x11
    2c9a:	9a 89       	ldd	r25, Y+18	; 0x12
    2c9c:	1c 01       	movw	r2, r24
    2c9e:	20 e8       	ldi	r18, 0x80	; 128
    2ca0:	42 2e       	mov	r4, r18
    2ca2:	0b c0       	rjmp	.+22     	; 0x2cba <__pad+0x96>
    2ca4:	96 01       	movw	r18, r12
    2ca6:	68 2d       	mov	r22, r8
    2ca8:	a3 01       	movw	r20, r6
    2caa:	c5 01       	movw	r24, r10
    2cac:	0e 94 dc 1f 	call	0x3fb8	; 0x3fb8 <__out>
    2cb0:	c0 16       	cp	r12, r16
    2cb2:	d1 06       	cpc	r13, r17
    2cb4:	ec f2       	brlt	.-70     	; 0x2c70 <__pad+0x4c>
    2cb6:	c6 01       	movw	r24, r12
    2cb8:	25 c0       	rjmp	.+74     	; 0x2d04 <__pad+0xe0>
    2cba:	90 e1       	ldi	r25, 0x10	; 16
    2cbc:	e9 16       	cp	r14, r25
    2cbe:	f1 04       	cpc	r15, r1
    2cc0:	58 f0       	brcs	.+22     	; 0x2cd8 <__pad+0xb4>
    2cc2:	20 e1       	ldi	r18, 0x10	; 16
    2cc4:	30 e0       	ldi	r19, 0x00	; 0
    2cc6:	64 2d       	mov	r22, r4
    2cc8:	a1 01       	movw	r20, r2
    2cca:	c5 01       	movw	r24, r10
    2ccc:	0e 94 dc 1f 	call	0x3fb8	; 0x3fb8 <__out>
    2cd0:	80 e1       	ldi	r24, 0x10	; 16
    2cd2:	e8 1a       	sub	r14, r24
    2cd4:	f1 08       	sbc	r15, r1
    2cd6:	f1 cf       	rjmp	.-30     	; 0x2cba <__pad+0x96>
    2cd8:	2d 89       	ldd	r18, Y+21	; 0x15
    2cda:	3e 89       	ldd	r19, Y+22	; 0x16
    2cdc:	2f 70       	andi	r18, 0x0F	; 15
    2cde:	33 27       	eor	r19, r19
    2ce0:	89 89       	ldd	r24, Y+17	; 0x11
    2ce2:	9a 89       	ldd	r25, Y+18	; 0x12
    2ce4:	ac 01       	movw	r20, r24
    2ce6:	60 e8       	ldi	r22, 0x80	; 128
    2ce8:	c5 01       	movw	r24, r10
    2cea:	0e 94 dc 1f 	call	0x3fb8	; 0x3fb8 <__out>
    2cee:	8b 89       	ldd	r24, Y+19	; 0x13
    2cf0:	9c 89       	ldd	r25, Y+20	; 0x14
    2cf2:	89 2b       	or	r24, r25
    2cf4:	31 f4       	brne	.+12     	; 0x2d02 <__pad+0xde>
    2cf6:	96 01       	movw	r18, r12
    2cf8:	68 2d       	mov	r22, r8
    2cfa:	a3 01       	movw	r20, r6
    2cfc:	c5 01       	movw	r24, r10
    2cfe:	0e 94 dc 1f 	call	0x3fb8	; 0x3fb8 <__out>
    2d02:	c8 01       	movw	r24, r16
    2d04:	66 96       	adiw	r28, 0x16	; 22
    2d06:	0f b6       	in	r0, 0x3f	; 63
    2d08:	f8 94       	cli
    2d0a:	de bf       	out	0x3e, r29	; 62
    2d0c:	0f be       	out	0x3f, r0	; 63
    2d0e:	cd bf       	out	0x3d, r28	; 61
    2d10:	df 91       	pop	r29
    2d12:	cf 91       	pop	r28
    2d14:	1f 91       	pop	r17
    2d16:	0f 91       	pop	r16
    2d18:	ff 90       	pop	r15
    2d1a:	ef 90       	pop	r14
    2d1c:	df 90       	pop	r13
    2d1e:	cf 90       	pop	r12
    2d20:	bf 90       	pop	r11
    2d22:	af 90       	pop	r10
    2d24:	8f 90       	pop	r8
    2d26:	7f 90       	pop	r7
    2d28:	6f 90       	pop	r6
    2d2a:	4f 90       	pop	r4
    2d2c:	3f 90       	pop	r3
    2d2e:	2f 90       	pop	r2
    2d30:	08 95       	ret

Disassembly of section .text.__fmt_state:

0000371e <__fmt_state>:
    371e:	cf 92       	push	r12
    3720:	df 92       	push	r13
    3722:	ef 92       	push	r14
    3724:	dc 01       	movw	r26, r24
    3726:	90 e0       	ldi	r25, 0x00	; 0
    3728:	29 2f       	mov	r18, r25
    372a:	30 e0       	ldi	r19, 0x00	; 0
    372c:	22 0f       	add	r18, r18
    372e:	33 1f       	adc	r19, r19
    3730:	69 01       	movw	r12, r18
    3732:	03 2e       	mov	r0, r19
    3734:	00 0c       	add	r0, r0
    3736:	ee 08       	sbc	r14, r14
    3738:	6e 2d       	mov	r22, r14
    373a:	a6 01       	movw	r20, r12
    373c:	47 57       	subi	r20, 0x77	; 119
    373e:	59 4f       	sbci	r21, 0xF9	; 249
    3740:	6f 4f       	sbci	r22, 0xFF	; 255
    3742:	6a 01       	movw	r12, r20
    3744:	e6 2e       	mov	r14, r22
    3746:	fa 01       	movw	r30, r20
    3748:	5e 2d       	mov	r21, r14
    374a:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    374e:	86 2f       	mov	r24, r22
    3750:	61 11       	cpse	r22, r1
    3752:	0e c0       	rjmp	.+28     	; 0x3770 <__fmt_state+0x52>
    3754:	2f 5f       	subi	r18, 0xFF	; 255
    3756:	3f 4f       	sbci	r19, 0xFF	; 255
    3758:	03 2e       	mov	r0, r19
    375a:	00 0c       	add	r0, r0
    375c:	44 0b       	sbc	r20, r20
    375e:	27 57       	subi	r18, 0x77	; 119
    3760:	39 4f       	sbci	r19, 0xF9	; 249
    3762:	4f 4f       	sbci	r20, 0xFF	; 255
    3764:	f9 01       	movw	r30, r18
    3766:	54 2f       	mov	r21, r20
    3768:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    376c:	86 2f       	mov	r24, r22
    376e:	25 c0       	rjmp	.+74     	; 0x37ba <__fmt_state+0x9c>
    3770:	cd 90       	ld	r12, X+
    3772:	dd 90       	ld	r13, X+
    3774:	ec 90       	ld	r14, X
    3776:	12 97       	sbiw	r26, 0x02	; 2
    3778:	f6 01       	movw	r30, r12
    377a:	5e 2d       	mov	r21, r14
    377c:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    3780:	86 13       	cpse	r24, r22
    3782:	16 c0       	rjmp	.+44     	; 0x37b0 <__fmt_state+0x92>
    3784:	2f 5f       	subi	r18, 0xFF	; 255
    3786:	3f 4f       	sbci	r19, 0xFF	; 255
    3788:	03 2e       	mov	r0, r19
    378a:	00 0c       	add	r0, r0
    378c:	44 0b       	sbc	r20, r20
    378e:	27 57       	subi	r18, 0x77	; 119
    3790:	39 4f       	sbci	r19, 0xF9	; 249
    3792:	4f 4f       	sbci	r20, 0xFF	; 255
    3794:	f9 01       	movw	r30, r18
    3796:	54 2f       	mov	r21, r20
    3798:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    379c:	96 2f       	mov	r25, r22
    379e:	5f ef       	ldi	r21, 0xFF	; 255
    37a0:	c5 1a       	sub	r12, r21
    37a2:	d5 0a       	sbc	r13, r21
    37a4:	e5 0a       	sbc	r14, r21
    37a6:	cd 92       	st	X+, r12
    37a8:	dd 92       	st	X+, r13
    37aa:	ec 92       	st	X, r14
    37ac:	12 97       	sbiw	r26, 0x02	; 2
    37ae:	01 c0       	rjmp	.+2      	; 0x37b2 <__fmt_state+0x94>
    37b0:	9f 5f       	subi	r25, 0xFF	; 255
    37b2:	9b 30       	cpi	r25, 0x0B	; 11
    37b4:	08 f4       	brcc	.+2      	; 0x37b8 <__fmt_state+0x9a>
    37b6:	b8 cf       	rjmp	.-144    	; 0x3728 <__fmt_state+0xa>
    37b8:	89 2f       	mov	r24, r25
    37ba:	ef 90       	pop	r14
    37bc:	df 90       	pop	r13
    37be:	cf 90       	pop	r12
    37c0:	08 95       	ret

Disassembly of section .text.__printf_core:

000006e0 <__printf_core>:
 6e0:	a3 ea       	ldi	r26, 0xA3	; 163
 6e2:	b0 e0       	ldi	r27, 0x00	; 0
 6e4:	e6 e7       	ldi	r30, 0x76	; 118
 6e6:	f3 e0       	ldi	r31, 0x03	; 3
 6e8:	0c 94 87 22 	jmp	0x450e	; 0x450e <__prologue_saves__>
 6ec:	4c 01       	movw	r8, r24
 6ee:	59 01       	movw	r10, r18
 6f0:	c7 56       	subi	r28, 0x67	; 103
 6f2:	df 4f       	sbci	r29, 0xFF	; 255
 6f4:	48 83       	st	Y, r20
 6f6:	59 83       	std	Y+1, r21	; 0x01
 6f8:	6a 83       	std	Y+2, r22	; 0x02
 6fa:	c9 59       	subi	r28, 0x99	; 153
 6fc:	d0 40       	sbci	r29, 0x00	; 0
 6fe:	21 2c       	mov	r2, r1
 700:	31 2c       	mov	r3, r1
 702:	6e 01       	movw	r12, r28
 704:	2b e8       	ldi	r18, 0x8B	; 139
 706:	c2 0e       	add	r12, r18
 708:	d1 1c       	adc	r13, r1
 70a:	85 e2       	ldi	r24, 0x25	; 37
 70c:	78 2e       	mov	r7, r24
 70e:	26 01       	movw	r4, r12
 710:	30 e8       	ldi	r19, 0x80	; 128
 712:	63 2e       	mov	r6, r19
 714:	ce 01       	movw	r24, r28
 716:	8d 56       	subi	r24, 0x6D	; 109
 718:	9f 4f       	sbci	r25, 0xFF	; 255
 71a:	c4 56       	subi	r28, 0x64	; 100
 71c:	df 4f       	sbci	r29, 0xFF	; 255
 71e:	99 83       	std	Y+1, r25	; 0x01
 720:	88 83       	st	Y, r24
 722:	cc 59       	subi	r28, 0x9C	; 156
 724:	d0 40       	sbci	r29, 0x00	; 0
 726:	9c 01       	movw	r18, r24
 728:	40 e8       	ldi	r20, 0x80	; 128
 72a:	cf 55       	subi	r28, 0x5F	; 95
 72c:	df 4f       	sbci	r29, 0xFF	; 255
 72e:	28 83       	st	Y, r18
 730:	39 83       	std	Y+1, r19	; 0x01
 732:	4a 83       	std	Y+2, r20	; 0x02
 734:	c1 5a       	subi	r28, 0xA1	; 161
 736:	d0 40       	sbci	r29, 0x00	; 0
 738:	c7 56       	subi	r28, 0x67	; 103
 73a:	df 4f       	sbci	r29, 0xFF	; 255
 73c:	48 81       	ld	r20, Y
 73e:	c9 59       	subi	r28, 0x99	; 153
 740:	d0 40       	sbci	r29, 0x00	; 0
 742:	c6 56       	subi	r28, 0x66	; 102
 744:	df 4f       	sbci	r29, 0xFF	; 255
 746:	b8 81       	ld	r27, Y
 748:	ca 59       	subi	r28, 0x9A	; 154
 74a:	d0 40       	sbci	r29, 0x00	; 0
 74c:	c5 56       	subi	r28, 0x65	; 101
 74e:	df 4f       	sbci	r29, 0xFF	; 255
 750:	78 81       	ld	r23, Y
 752:	cb 59       	subi	r28, 0x9B	; 155
 754:	d0 40       	sbci	r29, 0x00	; 0
 756:	e4 2f       	mov	r30, r20
 758:	fb 2f       	mov	r31, r27
 75a:	57 2f       	mov	r21, r23
 75c:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
 760:	66 23       	and	r22, r22
 762:	09 f4       	brne	.+2      	; 0x766 <__printf_core+0x86>
 764:	d0 c3       	rjmp	.+1952   	; 0xf06 <__printf_core+0x826>
 766:	cf 57       	subi	r28, 0x7F	; 127
 768:	df 4f       	sbci	r29, 0xFF	; 255
 76a:	19 82       	std	Y+1, r1	; 0x01
 76c:	18 82       	st	Y, r1
 76e:	c1 58       	subi	r28, 0x81	; 129
 770:	d0 40       	sbci	r29, 0x00	; 0
 772:	8f ef       	ldi	r24, 0xFF	; 255
 774:	9f ef       	ldi	r25, 0xFF	; 255
 776:	cd 57       	subi	r28, 0x7D	; 125
 778:	df 4f       	sbci	r29, 0xFF	; 255
 77a:	99 83       	std	Y+1, r25	; 0x01
 77c:	88 83       	st	Y, r24
 77e:	c3 58       	subi	r28, 0x83	; 131
 780:	d0 40       	sbci	r29, 0x00	; 0
 782:	cb 57       	subi	r28, 0x7B	; 123
 784:	df 4f       	sbci	r29, 0xFF	; 255
 786:	19 82       	std	Y+1, r1	; 0x01
 788:	18 82       	st	Y, r1
 78a:	c5 58       	subi	r28, 0x85	; 133
 78c:	d0 40       	sbci	r29, 0x00	; 0
 78e:	e1 e0       	ldi	r30, 0x01	; 1
 790:	f0 e0       	ldi	r31, 0x00	; 0
 792:	ec 0f       	add	r30, r28
 794:	fd 1f       	adc	r31, r29
 796:	c9 57       	subi	r28, 0x79	; 121
 798:	df 4f       	sbci	r29, 0xFF	; 255
 79a:	f9 83       	std	Y+1, r31	; 0x01
 79c:	e8 83       	st	Y, r30
 79e:	c7 58       	subi	r28, 0x87	; 135
 7a0:	d0 40       	sbci	r29, 0x00	; 0
 7a2:	20 e8       	ldi	r18, 0x80	; 128
 7a4:	30 e0       	ldi	r19, 0x00	; 0
 7a6:	c7 57       	subi	r28, 0x77	; 119
 7a8:	df 4f       	sbci	r29, 0xFF	; 255
 7aa:	39 83       	std	Y+1, r19	; 0x01
 7ac:	28 83       	st	Y, r18
 7ae:	c9 58       	subi	r28, 0x89	; 137
 7b0:	d0 40       	sbci	r29, 0x00	; 0
 7b2:	84 2f       	mov	r24, r20
 7b4:	9b 2f       	mov	r25, r27
 7b6:	a7 2f       	mov	r26, r23
 7b8:	e1 2c       	mov	r14, r1
 7ba:	f1 2c       	mov	r15, r1
 7bc:	fc 01       	movw	r30, r24
 7be:	5a 2f       	mov	r21, r26
 7c0:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
 7c4:	61 11       	cpse	r22, r1
 7c6:	1d c0       	rjmp	.+58     	; 0x802 <__printf_core+0x122>
 7c8:	e1 14       	cp	r14, r1
 7ca:	f1 04       	cpc	r15, r1
 7cc:	11 f1       	breq	.+68     	; 0x812 <__printf_core+0x132>
 7ce:	97 01       	movw	r18, r14
 7d0:	5b 2f       	mov	r21, r27
 7d2:	67 2f       	mov	r22, r23
 7d4:	c4 01       	movw	r24, r8
 7d6:	0e 94 dc 1f 	call	0x3fb8	; 0x3fb8 <__out>
 7da:	c7 56       	subi	r28, 0x67	; 103
 7dc:	df 4f       	sbci	r29, 0xFF	; 255
 7de:	88 81       	ld	r24, Y
 7e0:	99 81       	ldd	r25, Y+1	; 0x01
 7e2:	aa 81       	ldd	r26, Y+2	; 0x02
 7e4:	c9 59       	subi	r28, 0x99	; 153
 7e6:	d0 40       	sbci	r29, 0x00	; 0
 7e8:	8e 0d       	add	r24, r14
 7ea:	9f 1d       	adc	r25, r15
 7ec:	a1 1d       	adc	r26, r1
 7ee:	f7 fc       	sbrc	r15, 7
 7f0:	aa 95       	dec	r26
 7f2:	c7 56       	subi	r28, 0x67	; 103
 7f4:	df 4f       	sbci	r29, 0xFF	; 255
 7f6:	88 83       	st	Y, r24
 7f8:	99 83       	std	Y+1, r25	; 0x01
 7fa:	aa 83       	std	Y+2, r26	; 0x02
 7fc:	c9 59       	subi	r28, 0x99	; 153
 7fe:	d0 40       	sbci	r29, 0x00	; 0
 800:	08 c0       	rjmp	.+16     	; 0x812 <__printf_core+0x132>
 802:	01 96       	adiw	r24, 0x01	; 1
 804:	a1 1d       	adc	r26, r1
 806:	65 32       	cpi	r22, 0x25	; 37
 808:	f9 f2       	breq	.-66     	; 0x7c8 <__printf_core+0xe8>
 80a:	3f ef       	ldi	r19, 0xFF	; 255
 80c:	e3 1a       	sub	r14, r19
 80e:	f3 0a       	sbc	r15, r19
 810:	d5 cf       	rjmp	.-86     	; 0x7bc <__printf_core+0xdc>
 812:	c7 56       	subi	r28, 0x67	; 103
 814:	df 4f       	sbci	r29, 0xFF	; 255
 816:	88 81       	ld	r24, Y
 818:	99 81       	ldd	r25, Y+1	; 0x01
 81a:	aa 81       	ldd	r26, Y+2	; 0x02
 81c:	c9 59       	subi	r28, 0x99	; 153
 81e:	d0 40       	sbci	r29, 0x00	; 0
 820:	fc 01       	movw	r30, r24
 822:	5a 2f       	mov	r21, r26
 824:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
 828:	65 32       	cpi	r22, 0x25	; 37
 82a:	09 f0       	breq	.+2      	; 0x82e <__printf_core+0x14e>
 82c:	5a c3       	rjmp	.+1716   	; 0xee2 <__printf_core+0x802>
 82e:	9c 01       	movw	r18, r24
 830:	4a 2f       	mov	r20, r26
 832:	2f 5f       	subi	r18, 0xFF	; 255
 834:	3f 4f       	sbci	r19, 0xFF	; 255
 836:	4f 4f       	sbci	r20, 0xFF	; 255
 838:	c2 56       	subi	r28, 0x62	; 98
 83a:	df 4f       	sbci	r29, 0xFF	; 255
 83c:	28 83       	st	Y, r18
 83e:	39 83       	std	Y+1, r19	; 0x01
 840:	4a 83       	std	Y+2, r20	; 0x02
 842:	ce 59       	subi	r28, 0x9E	; 158
 844:	d0 40       	sbci	r29, 0x00	; 0
 846:	c7 56       	subi	r28, 0x67	; 103
 848:	df 4f       	sbci	r29, 0xFF	; 255
 84a:	28 83       	st	Y, r18
 84c:	39 83       	std	Y+1, r19	; 0x01
 84e:	4a 83       	std	Y+2, r20	; 0x02
 850:	c9 59       	subi	r28, 0x99	; 153
 852:	d0 40       	sbci	r29, 0x00	; 0
 854:	c7 56       	subi	r28, 0x67	; 103
 856:	df 4f       	sbci	r29, 0xFF	; 255
 858:	88 81       	ld	r24, Y
 85a:	99 81       	ldd	r25, Y+1	; 0x01
 85c:	aa 81       	ldd	r26, Y+2	; 0x02
 85e:	c9 59       	subi	r28, 0x99	; 153
 860:	d0 40       	sbci	r29, 0x00	; 0
 862:	fc 01       	movw	r30, r24
 864:	5a 2f       	mov	r21, r26
 866:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
 86a:	6b 32       	cpi	r22, 0x2B	; 43
 86c:	41 f4       	brne	.+16     	; 0x87e <__printf_core+0x19e>
 86e:	cf 57       	subi	r28, 0x7F	; 127
 870:	df 4f       	sbci	r29, 0xFF	; 255
 872:	28 81       	ld	r18, Y
 874:	39 81       	ldd	r19, Y+1	; 0x01
 876:	c1 58       	subi	r28, 0x81	; 129
 878:	d0 40       	sbci	r29, 0x00	; 0
 87a:	24 60       	ori	r18, 0x04	; 4
 87c:	0b c0       	rjmp	.+22     	; 0x894 <__printf_core+0x1b4>
 87e:	6c 32       	cpi	r22, 0x2C	; 44
 880:	cc f0       	brlt	.+50     	; 0x8b4 <__printf_core+0x1d4>
 882:	6d 32       	cpi	r22, 0x2D	; 45
 884:	59 f5       	brne	.+86     	; 0x8dc <__printf_core+0x1fc>
 886:	cf 57       	subi	r28, 0x7F	; 127
 888:	df 4f       	sbci	r29, 0xFF	; 255
 88a:	28 81       	ld	r18, Y
 88c:	39 81       	ldd	r19, Y+1	; 0x01
 88e:	c1 58       	subi	r28, 0x81	; 129
 890:	d0 40       	sbci	r29, 0x00	; 0
 892:	21 60       	ori	r18, 0x01	; 1
 894:	cf 57       	subi	r28, 0x7F	; 127
 896:	df 4f       	sbci	r29, 0xFF	; 255
 898:	39 83       	std	Y+1, r19	; 0x01
 89a:	28 83       	st	Y, r18
 89c:	c1 58       	subi	r28, 0x81	; 129
 89e:	d0 40       	sbci	r29, 0x00	; 0
 8a0:	01 96       	adiw	r24, 0x01	; 1
 8a2:	a1 1d       	adc	r26, r1
 8a4:	c7 56       	subi	r28, 0x67	; 103
 8a6:	df 4f       	sbci	r29, 0xFF	; 255
 8a8:	88 83       	st	Y, r24
 8aa:	99 83       	std	Y+1, r25	; 0x01
 8ac:	aa 83       	std	Y+2, r26	; 0x02
 8ae:	c9 59       	subi	r28, 0x99	; 153
 8b0:	d0 40       	sbci	r29, 0x00	; 0
 8b2:	d0 cf       	rjmp	.-96     	; 0x854 <__printf_core+0x174>
 8b4:	60 32       	cpi	r22, 0x20	; 32
 8b6:	41 f4       	brne	.+16     	; 0x8c8 <__printf_core+0x1e8>
 8b8:	cf 57       	subi	r28, 0x7F	; 127
 8ba:	df 4f       	sbci	r29, 0xFF	; 255
 8bc:	28 81       	ld	r18, Y
 8be:	39 81       	ldd	r19, Y+1	; 0x01
 8c0:	c1 58       	subi	r28, 0x81	; 129
 8c2:	d0 40       	sbci	r29, 0x00	; 0
 8c4:	28 60       	ori	r18, 0x08	; 8
 8c6:	e6 cf       	rjmp	.-52     	; 0x894 <__printf_core+0x1b4>
 8c8:	63 32       	cpi	r22, 0x23	; 35
 8ca:	91 f4       	brne	.+36     	; 0x8f0 <__printf_core+0x210>
 8cc:	cf 57       	subi	r28, 0x7F	; 127
 8ce:	df 4f       	sbci	r29, 0xFF	; 255
 8d0:	28 81       	ld	r18, Y
 8d2:	39 81       	ldd	r19, Y+1	; 0x01
 8d4:	c1 58       	subi	r28, 0x81	; 129
 8d6:	d0 40       	sbci	r29, 0x00	; 0
 8d8:	20 61       	ori	r18, 0x10	; 16
 8da:	dc cf       	rjmp	.-72     	; 0x894 <__printf_core+0x1b4>
 8dc:	60 33       	cpi	r22, 0x30	; 48
 8de:	41 f4       	brne	.+16     	; 0x8f0 <__printf_core+0x210>
 8e0:	cf 57       	subi	r28, 0x7F	; 127
 8e2:	df 4f       	sbci	r29, 0xFF	; 255
 8e4:	28 81       	ld	r18, Y
 8e6:	39 81       	ldd	r19, Y+1	; 0x01
 8e8:	c1 58       	subi	r28, 0x81	; 129
 8ea:	d0 40       	sbci	r29, 0x00	; 0
 8ec:	22 60       	ori	r18, 0x02	; 2
 8ee:	d2 cf       	rjmp	.-92     	; 0x894 <__printf_core+0x1b4>
 8f0:	6a 32       	cpi	r22, 0x2A	; 42
 8f2:	99 f5       	brne	.+102    	; 0x95a <__printf_core+0x27a>
 8f4:	01 96       	adiw	r24, 0x01	; 1
 8f6:	a1 1d       	adc	r26, r1
 8f8:	c7 56       	subi	r28, 0x67	; 103
 8fa:	df 4f       	sbci	r29, 0xFF	; 255
 8fc:	88 83       	st	Y, r24
 8fe:	99 83       	std	Y+1, r25	; 0x01
 900:	aa 83       	std	Y+2, r26	; 0x02
 902:	c9 59       	subi	r28, 0x99	; 153
 904:	d0 40       	sbci	r29, 0x00	; 0
 906:	d5 01       	movw	r26, r10
 908:	ed 91       	ld	r30, X+
 90a:	fc 91       	ld	r31, X
 90c:	11 97       	sbiw	r26, 0x01	; 1
 90e:	cf 01       	movw	r24, r30
 910:	02 96       	adiw	r24, 0x02	; 2
 912:	8d 93       	st	X+, r24
 914:	9c 93       	st	X, r25
 916:	80 81       	ld	r24, Z
 918:	91 81       	ldd	r25, Z+1	; 0x01
 91a:	cb 57       	subi	r28, 0x7B	; 123
 91c:	df 4f       	sbci	r29, 0xFF	; 255
 91e:	99 83       	std	Y+1, r25	; 0x01
 920:	88 83       	st	Y, r24
 922:	c5 58       	subi	r28, 0x85	; 133
 924:	d0 40       	sbci	r29, 0x00	; 0
 926:	97 ff       	sbrs	r25, 7
 928:	3f c0       	rjmp	.+126    	; 0x9a8 <__printf_core+0x2c8>
 92a:	cf 57       	subi	r28, 0x7F	; 127
 92c:	df 4f       	sbci	r29, 0xFF	; 255
 92e:	28 81       	ld	r18, Y
 930:	39 81       	ldd	r19, Y+1	; 0x01
 932:	c1 58       	subi	r28, 0x81	; 129
 934:	d0 40       	sbci	r29, 0x00	; 0
 936:	b1 e0       	ldi	r27, 0x01	; 1
 938:	2b 27       	eor	r18, r27
 93a:	cf 57       	subi	r28, 0x7F	; 127
 93c:	df 4f       	sbci	r29, 0xFF	; 255
 93e:	39 83       	std	Y+1, r19	; 0x01
 940:	28 83       	st	Y, r18
 942:	c1 58       	subi	r28, 0x81	; 129
 944:	d0 40       	sbci	r29, 0x00	; 0
 946:	91 95       	neg	r25
 948:	81 95       	neg	r24
 94a:	91 09       	sbc	r25, r1
 94c:	cb 57       	subi	r28, 0x7B	; 123
 94e:	df 4f       	sbci	r29, 0xFF	; 255
 950:	99 83       	std	Y+1, r25	; 0x01
 952:	88 83       	st	Y, r24
 954:	c5 58       	subi	r28, 0x85	; 133
 956:	d0 40       	sbci	r29, 0x00	; 0
 958:	27 c0       	rjmp	.+78     	; 0x9a8 <__printf_core+0x2c8>
 95a:	bc 01       	movw	r22, r24
 95c:	8a 2f       	mov	r24, r26
 95e:	0e 94 98 1e 	call	0x3d30	; 0x3d30 <atoi>
 962:	cb 57       	subi	r28, 0x7B	; 123
 964:	df 4f       	sbci	r29, 0xFF	; 255
 966:	99 83       	std	Y+1, r25	; 0x01
 968:	88 83       	st	Y, r24
 96a:	c5 58       	subi	r28, 0x85	; 133
 96c:	d0 40       	sbci	r29, 0x00	; 0
 96e:	c7 56       	subi	r28, 0x67	; 103
 970:	df 4f       	sbci	r29, 0xFF	; 255
 972:	88 81       	ld	r24, Y
 974:	99 81       	ldd	r25, Y+1	; 0x01
 976:	aa 81       	ldd	r26, Y+2	; 0x02
 978:	c9 59       	subi	r28, 0x99	; 153
 97a:	d0 40       	sbci	r29, 0x00	; 0
 97c:	fc 01       	movw	r30, r24
 97e:	5a 2f       	mov	r21, r26
 980:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
 984:	06 2e       	mov	r0, r22
 986:	00 0c       	add	r0, r0
 988:	77 0b       	sbc	r23, r23
 98a:	60 53       	subi	r22, 0x30	; 48
 98c:	71 09       	sbc	r23, r1
 98e:	6a 30       	cpi	r22, 0x0A	; 10
 990:	71 05       	cpc	r23, r1
 992:	50 f4       	brcc	.+20     	; 0x9a8 <__printf_core+0x2c8>
 994:	01 96       	adiw	r24, 0x01	; 1
 996:	a1 1d       	adc	r26, r1
 998:	c7 56       	subi	r28, 0x67	; 103
 99a:	df 4f       	sbci	r29, 0xFF	; 255
 99c:	88 83       	st	Y, r24
 99e:	99 83       	std	Y+1, r25	; 0x01
 9a0:	aa 83       	std	Y+2, r26	; 0x02
 9a2:	c9 59       	subi	r28, 0x99	; 153
 9a4:	d0 40       	sbci	r29, 0x00	; 0
 9a6:	e3 cf       	rjmp	.-58     	; 0x96e <__printf_core+0x28e>
 9a8:	cf 57       	subi	r28, 0x7F	; 127
 9aa:	df 4f       	sbci	r29, 0xFF	; 255
 9ac:	88 81       	ld	r24, Y
 9ae:	99 81       	ldd	r25, Y+1	; 0x01
 9b0:	c1 58       	subi	r28, 0x81	; 129
 9b2:	d0 40       	sbci	r29, 0x00	; 0
 9b4:	80 ff       	sbrs	r24, 0
 9b6:	07 c0       	rjmp	.+14     	; 0x9c6 <__printf_core+0x2e6>
 9b8:	8d 7f       	andi	r24, 0xFD	; 253
 9ba:	cf 57       	subi	r28, 0x7F	; 127
 9bc:	df 4f       	sbci	r29, 0xFF	; 255
 9be:	99 83       	std	Y+1, r25	; 0x01
 9c0:	88 83       	st	Y, r24
 9c2:	c1 58       	subi	r28, 0x81	; 129
 9c4:	d0 40       	sbci	r29, 0x00	; 0
 9c6:	c7 56       	subi	r28, 0x67	; 103
 9c8:	df 4f       	sbci	r29, 0xFF	; 255
 9ca:	88 81       	ld	r24, Y
 9cc:	99 81       	ldd	r25, Y+1	; 0x01
 9ce:	aa 81       	ldd	r26, Y+2	; 0x02
 9d0:	c9 59       	subi	r28, 0x99	; 153
 9d2:	d0 40       	sbci	r29, 0x00	; 0
 9d4:	fc 01       	movw	r30, r24
 9d6:	5a 2f       	mov	r21, r26
 9d8:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
 9dc:	6e 32       	cpi	r22, 0x2E	; 46
 9de:	09 f0       	breq	.+2      	; 0x9e2 <__printf_core+0x302>
 9e0:	59 c0       	rjmp	.+178    	; 0xa94 <__printf_core+0x3b4>
 9e2:	cd 57       	subi	r28, 0x7D	; 125
 9e4:	df 4f       	sbci	r29, 0xFF	; 255
 9e6:	19 82       	std	Y+1, r1	; 0x01
 9e8:	18 82       	st	Y, r1
 9ea:	c3 58       	subi	r28, 0x83	; 131
 9ec:	d0 40       	sbci	r29, 0x00	; 0
 9ee:	9c 01       	movw	r18, r24
 9f0:	4a 2f       	mov	r20, r26
 9f2:	2f 5f       	subi	r18, 0xFF	; 255
 9f4:	3f 4f       	sbci	r19, 0xFF	; 255
 9f6:	4f 4f       	sbci	r20, 0xFF	; 255
 9f8:	c7 56       	subi	r28, 0x67	; 103
 9fa:	df 4f       	sbci	r29, 0xFF	; 255
 9fc:	28 83       	st	Y, r18
 9fe:	39 83       	std	Y+1, r19	; 0x01
 a00:	4a 83       	std	Y+2, r20	; 0x02
 a02:	c9 59       	subi	r28, 0x99	; 153
 a04:	d0 40       	sbci	r29, 0x00	; 0
 a06:	f9 01       	movw	r30, r18
 a08:	54 2f       	mov	r21, r20
 a0a:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
 a0e:	6a 32       	cpi	r22, 0x2A	; 42
 a10:	d1 f4       	brne	.+52     	; 0xa46 <__printf_core+0x366>
 a12:	02 96       	adiw	r24, 0x02	; 2
 a14:	a1 1d       	adc	r26, r1
 a16:	c7 56       	subi	r28, 0x67	; 103
 a18:	df 4f       	sbci	r29, 0xFF	; 255
 a1a:	88 83       	st	Y, r24
 a1c:	99 83       	std	Y+1, r25	; 0x01
 a1e:	aa 83       	std	Y+2, r26	; 0x02
 a20:	c9 59       	subi	r28, 0x99	; 153
 a22:	d0 40       	sbci	r29, 0x00	; 0
 a24:	d5 01       	movw	r26, r10
 a26:	ed 91       	ld	r30, X+
 a28:	fc 91       	ld	r31, X
 a2a:	11 97       	sbiw	r26, 0x01	; 1
 a2c:	cf 01       	movw	r24, r30
 a2e:	02 96       	adiw	r24, 0x02	; 2
 a30:	8d 93       	st	X+, r24
 a32:	9c 93       	st	X, r25
 a34:	80 81       	ld	r24, Z
 a36:	91 81       	ldd	r25, Z+1	; 0x01
 a38:	cd 57       	subi	r28, 0x7D	; 125
 a3a:	df 4f       	sbci	r29, 0xFF	; 255
 a3c:	99 83       	std	Y+1, r25	; 0x01
 a3e:	88 83       	st	Y, r24
 a40:	c3 58       	subi	r28, 0x83	; 131
 a42:	d0 40       	sbci	r29, 0x00	; 0
 a44:	27 c0       	rjmp	.+78     	; 0xa94 <__printf_core+0x3b4>
 a46:	84 2f       	mov	r24, r20
 a48:	b9 01       	movw	r22, r18
 a4a:	0e 94 98 1e 	call	0x3d30	; 0x3d30 <atoi>
 a4e:	cd 57       	subi	r28, 0x7D	; 125
 a50:	df 4f       	sbci	r29, 0xFF	; 255
 a52:	99 83       	std	Y+1, r25	; 0x01
 a54:	88 83       	st	Y, r24
 a56:	c3 58       	subi	r28, 0x83	; 131
 a58:	d0 40       	sbci	r29, 0x00	; 0
 a5a:	c7 56       	subi	r28, 0x67	; 103
 a5c:	df 4f       	sbci	r29, 0xFF	; 255
 a5e:	88 81       	ld	r24, Y
 a60:	99 81       	ldd	r25, Y+1	; 0x01
 a62:	aa 81       	ldd	r26, Y+2	; 0x02
 a64:	c9 59       	subi	r28, 0x99	; 153
 a66:	d0 40       	sbci	r29, 0x00	; 0
 a68:	fc 01       	movw	r30, r24
 a6a:	5a 2f       	mov	r21, r26
 a6c:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
 a70:	06 2e       	mov	r0, r22
 a72:	00 0c       	add	r0, r0
 a74:	77 0b       	sbc	r23, r23
 a76:	60 53       	subi	r22, 0x30	; 48
 a78:	71 09       	sbc	r23, r1
 a7a:	6a 30       	cpi	r22, 0x0A	; 10
 a7c:	71 05       	cpc	r23, r1
 a7e:	50 f4       	brcc	.+20     	; 0xa94 <__printf_core+0x3b4>
 a80:	01 96       	adiw	r24, 0x01	; 1
 a82:	a1 1d       	adc	r26, r1
 a84:	c7 56       	subi	r28, 0x67	; 103
 a86:	df 4f       	sbci	r29, 0xFF	; 255
 a88:	88 83       	st	Y, r24
 a8a:	99 83       	std	Y+1, r25	; 0x01
 a8c:	aa 83       	std	Y+2, r26	; 0x02
 a8e:	c9 59       	subi	r28, 0x99	; 153
 a90:	d0 40       	sbci	r29, 0x00	; 0
 a92:	e3 cf       	rjmp	.-58     	; 0xa5a <__printf_core+0x37a>
 a94:	ce 01       	movw	r24, r28
 a96:	87 56       	subi	r24, 0x67	; 103
 a98:	9f 4f       	sbci	r25, 0xFF	; 255
 a9a:	0e 94 8f 1b 	call	0x371e	; 0x371e <__fmt_state>
 a9e:	18 2f       	mov	r17, r24
 aa0:	c7 56       	subi	r28, 0x67	; 103
 aa2:	df 4f       	sbci	r29, 0xFF	; 255
 aa4:	98 81       	ld	r25, Y
 aa6:	c9 59       	subi	r28, 0x99	; 153
 aa8:	d0 40       	sbci	r29, 0x00	; 0
 aaa:	c6 56       	subi	r28, 0x66	; 102
 aac:	df 4f       	sbci	r29, 0xFF	; 255
 aae:	88 81       	ld	r24, Y
 ab0:	ca 59       	subi	r28, 0x9A	; 154
 ab2:	d0 40       	sbci	r29, 0x00	; 0
 ab4:	c5 56       	subi	r28, 0x65	; 101
 ab6:	df 4f       	sbci	r29, 0xFF	; 255
 ab8:	58 81       	ld	r21, Y
 aba:	cb 59       	subi	r28, 0x9B	; 155
 abc:	d0 40       	sbci	r29, 0x00	; 0
 abe:	e9 2f       	mov	r30, r25
 ac0:	f8 2f       	mov	r31, r24
 ac2:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
 ac6:	86 2f       	mov	r24, r22
 ac8:	66 0f       	add	r22, r22
 aca:	99 0b       	sbc	r25, r25
 acc:	0e 94 5d 24 	call	0x48ba	; 0x48ba <tolower>
 ad0:	89 36       	cpi	r24, 0x69	; 105
 ad2:	91 05       	cpc	r25, r1
 ad4:	09 f4       	brne	.+2      	; 0xad8 <__printf_core+0x3f8>
 ad6:	5b c0       	rjmp	.+182    	; 0xb8e <__printf_core+0x4ae>
 ad8:	b4 f4       	brge	.+44     	; 0xb06 <__printf_core+0x426>
 ada:	83 36       	cpi	r24, 0x63	; 99
 adc:	91 05       	cpc	r25, r1
 ade:	09 f4       	brne	.+2      	; 0xae2 <__printf_core+0x402>
 ae0:	69 c1       	rjmp	.+722    	; 0xdb4 <__printf_core+0x6d4>
 ae2:	44 f4       	brge	.+16     	; 0xaf4 <__printf_core+0x414>
 ae4:	85 32       	cpi	r24, 0x25	; 37
 ae6:	91 05       	cpc	r25, r1
 ae8:	09 f4       	brne	.+2      	; 0xaec <__printf_core+0x40c>
 aea:	a4 c1       	rjmp	.+840    	; 0xe34 <__printf_core+0x754>
 aec:	81 36       	cpi	r24, 0x61	; 97
 aee:	91 05       	cpc	r25, r1
 af0:	29 f1       	breq	.+74     	; 0xb3c <__printf_core+0x45c>
 af2:	b6 c1       	rjmp	.+876    	; 0xe60 <__printf_core+0x780>
 af4:	84 36       	cpi	r24, 0x64	; 100
 af6:	91 05       	cpc	r25, r1
 af8:	09 f4       	brne	.+2      	; 0xafc <__printf_core+0x41c>
 afa:	49 c0       	rjmp	.+146    	; 0xb8e <__printf_core+0x4ae>
 afc:	88 36       	cpi	r24, 0x68	; 104
 afe:	91 05       	cpc	r25, r1
 b00:	0c f4       	brge	.+2      	; 0xb04 <__printf_core+0x424>
 b02:	2f c1       	rjmp	.+606    	; 0xd62 <__printf_core+0x682>
 b04:	ad c1       	rjmp	.+858    	; 0xe60 <__printf_core+0x780>
 b06:	80 37       	cpi	r24, 0x70	; 112
 b08:	91 05       	cpc	r25, r1
 b0a:	09 f4       	brne	.+2      	; 0xb0e <__printf_core+0x42e>
 b0c:	cd c0       	rjmp	.+410    	; 0xca8 <__printf_core+0x5c8>
 b0e:	4c f4       	brge	.+18     	; 0xb22 <__printf_core+0x442>
 b10:	8e 36       	cpi	r24, 0x6E	; 110
 b12:	91 05       	cpc	r25, r1
 b14:	09 f4       	brne	.+2      	; 0xb18 <__printf_core+0x438>
 b16:	1b c1       	rjmp	.+566    	; 0xd4e <__printf_core+0x66e>
 b18:	8f 36       	cpi	r24, 0x6F	; 111
 b1a:	91 05       	cpc	r25, r1
 b1c:	09 f4       	brne	.+2      	; 0xb20 <__printf_core+0x440>
 b1e:	7d c0       	rjmp	.+250    	; 0xc1a <__printf_core+0x53a>
 b20:	9f c1       	rjmp	.+830    	; 0xe60 <__printf_core+0x780>
 b22:	85 37       	cpi	r24, 0x75	; 117
 b24:	91 05       	cpc	r25, r1
 b26:	09 f4       	brne	.+2      	; 0xb2a <__printf_core+0x44a>
 b28:	55 c0       	rjmp	.+170    	; 0xbd4 <__printf_core+0x4f4>
 b2a:	88 37       	cpi	r24, 0x78	; 120
 b2c:	91 05       	cpc	r25, r1
 b2e:	09 f4       	brne	.+2      	; 0xb32 <__printf_core+0x452>
 b30:	97 c0       	rjmp	.+302    	; 0xc60 <__printf_core+0x580>
 b32:	83 37       	cpi	r24, 0x73	; 115
 b34:	91 05       	cpc	r25, r1
 b36:	09 f0       	breq	.+2      	; 0xb3a <__printf_core+0x45a>
 b38:	93 c1       	rjmp	.+806    	; 0xe60 <__printf_core+0x780>
 b3a:	5b c1       	rjmp	.+694    	; 0xdf2 <__printf_core+0x712>
 b3c:	61 2f       	mov	r22, r17
 b3e:	70 e0       	ldi	r23, 0x00	; 0
 b40:	a5 01       	movw	r20, r10
 b42:	c6 01       	movw	r24, r12
 b44:	0e 94 f0 21 	call	0x43e0	; 0x43e0 <__pop_float>
 b48:	89 2b       	or	r24, r25
 b4a:	09 f4       	brne	.+2      	; 0xb4e <__printf_core+0x46e>
 b4c:	ba c1       	rjmp	.+884    	; 0xec2 <__printf_core+0x7e2>
 b4e:	c7 56       	subi	r28, 0x67	; 103
 b50:	df 4f       	sbci	r29, 0xFF	; 255
 b52:	88 81       	ld	r24, Y
 b54:	99 81       	ldd	r25, Y+1	; 0x01
 b56:	aa 81       	ldd	r26, Y+2	; 0x02
 b58:	c9 59       	subi	r28, 0x99	; 153
 b5a:	d0 40       	sbci	r29, 0x00	; 0
 b5c:	9c 01       	movw	r18, r24
 b5e:	4a 2f       	mov	r20, r26
 b60:	2f 5f       	subi	r18, 0xFF	; 255
 b62:	3f 4f       	sbci	r19, 0xFF	; 255
 b64:	4f 4f       	sbci	r20, 0xFF	; 255
 b66:	c7 56       	subi	r28, 0x67	; 103
 b68:	df 4f       	sbci	r29, 0xFF	; 255
 b6a:	28 83       	st	Y, r18
 b6c:	39 83       	std	Y+1, r19	; 0x01
 b6e:	4a 83       	std	Y+2, r20	; 0x02
 b70:	c9 59       	subi	r28, 0x99	; 153
 b72:	d0 40       	sbci	r29, 0x00	; 0
 b74:	fc 01       	movw	r30, r24
 b76:	5a 2f       	mov	r21, r26
 b78:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
 b7c:	26 2f       	mov	r18, r22
 b7e:	a6 01       	movw	r20, r12
 b80:	be 01       	movw	r22, r28
 b82:	6f 57       	subi	r22, 0x7F	; 127
 b84:	7f 4f       	sbci	r23, 0xFF	; 255
 b86:	c4 01       	movw	r24, r8
 b88:	0e 94 e6 0a 	call	0x15cc	; 0x15cc <__fmt_a>
 b8c:	97 c1       	rjmp	.+814    	; 0xebc <__printf_core+0x7dc>
 b8e:	61 2f       	mov	r22, r17
 b90:	70 e0       	ldi	r23, 0x00	; 0
 b92:	95 01       	movw	r18, r10
 b94:	41 e0       	ldi	r20, 0x01	; 1
 b96:	50 e0       	ldi	r21, 0x00	; 0
 b98:	c6 01       	movw	r24, r12
 b9a:	0e 94 d5 12 	call	0x25aa	; 0x25aa <__pop_int>
 b9e:	89 2b       	or	r24, r25
 ba0:	09 f4       	brne	.+2      	; 0xba4 <__printf_core+0x4c4>
 ba2:	8f c1       	rjmp	.+798    	; 0xec2 <__printf_core+0x7e2>
 ba4:	c7 56       	subi	r28, 0x67	; 103
 ba6:	df 4f       	sbci	r29, 0xFF	; 255
 ba8:	88 81       	ld	r24, Y
 baa:	99 81       	ldd	r25, Y+1	; 0x01
 bac:	aa 81       	ldd	r26, Y+2	; 0x02
 bae:	c9 59       	subi	r28, 0x99	; 153
 bb0:	d0 40       	sbci	r29, 0x00	; 0
 bb2:	01 96       	adiw	r24, 0x01	; 1
 bb4:	a1 1d       	adc	r26, r1
 bb6:	c7 56       	subi	r28, 0x67	; 103
 bb8:	df 4f       	sbci	r29, 0xFF	; 255
 bba:	88 83       	st	Y, r24
 bbc:	99 83       	std	Y+1, r25	; 0x01
 bbe:	aa 83       	std	Y+2, r26	; 0x02
 bc0:	c9 59       	subi	r28, 0x99	; 153
 bc2:	d0 40       	sbci	r29, 0x00	; 0
 bc4:	a6 01       	movw	r20, r12
 bc6:	be 01       	movw	r22, r28
 bc8:	6f 57       	subi	r22, 0x7F	; 127
 bca:	7f 4f       	sbci	r23, 0xFF	; 255
 bcc:	c4 01       	movw	r24, r8
 bce:	0e 94 16 12 	call	0x242c	; 0x242c <__fmt_d>
 bd2:	74 c1       	rjmp	.+744    	; 0xebc <__printf_core+0x7dc>
 bd4:	61 2f       	mov	r22, r17
 bd6:	70 e0       	ldi	r23, 0x00	; 0
 bd8:	95 01       	movw	r18, r10
 bda:	40 e0       	ldi	r20, 0x00	; 0
 bdc:	50 e0       	ldi	r21, 0x00	; 0
 bde:	c6 01       	movw	r24, r12
 be0:	0e 94 d5 12 	call	0x25aa	; 0x25aa <__pop_int>
 be4:	89 2b       	or	r24, r25
 be6:	09 f4       	brne	.+2      	; 0xbea <__printf_core+0x50a>
 be8:	6c c1       	rjmp	.+728    	; 0xec2 <__printf_core+0x7e2>
 bea:	c7 56       	subi	r28, 0x67	; 103
 bec:	df 4f       	sbci	r29, 0xFF	; 255
 bee:	88 81       	ld	r24, Y
 bf0:	99 81       	ldd	r25, Y+1	; 0x01
 bf2:	aa 81       	ldd	r26, Y+2	; 0x02
 bf4:	c9 59       	subi	r28, 0x99	; 153
 bf6:	d0 40       	sbci	r29, 0x00	; 0
 bf8:	01 96       	adiw	r24, 0x01	; 1
 bfa:	a1 1d       	adc	r26, r1
 bfc:	c7 56       	subi	r28, 0x67	; 103
 bfe:	df 4f       	sbci	r29, 0xFF	; 255
 c00:	88 83       	st	Y, r24
 c02:	99 83       	std	Y+1, r25	; 0x01
 c04:	aa 83       	std	Y+2, r26	; 0x02
 c06:	c9 59       	subi	r28, 0x99	; 153
 c08:	d0 40       	sbci	r29, 0x00	; 0
 c0a:	a6 01       	movw	r20, r12
 c0c:	be 01       	movw	r22, r28
 c0e:	6f 57       	subi	r22, 0x7F	; 127
 c10:	7f 4f       	sbci	r23, 0xFF	; 255
 c12:	c4 01       	movw	r24, r8
 c14:	0e 94 8e 1a 	call	0x351c	; 0x351c <__fmt_u>
 c18:	51 c1       	rjmp	.+674    	; 0xebc <__printf_core+0x7dc>
 c1a:	61 2f       	mov	r22, r17
 c1c:	70 e0       	ldi	r23, 0x00	; 0
 c1e:	95 01       	movw	r18, r10
 c20:	40 e0       	ldi	r20, 0x00	; 0
 c22:	50 e0       	ldi	r21, 0x00	; 0
 c24:	c6 01       	movw	r24, r12
 c26:	0e 94 d5 12 	call	0x25aa	; 0x25aa <__pop_int>
 c2a:	89 2b       	or	r24, r25
 c2c:	09 f4       	brne	.+2      	; 0xc30 <__printf_core+0x550>
 c2e:	49 c1       	rjmp	.+658    	; 0xec2 <__printf_core+0x7e2>
 c30:	c7 56       	subi	r28, 0x67	; 103
 c32:	df 4f       	sbci	r29, 0xFF	; 255
 c34:	88 81       	ld	r24, Y
 c36:	99 81       	ldd	r25, Y+1	; 0x01
 c38:	aa 81       	ldd	r26, Y+2	; 0x02
 c3a:	c9 59       	subi	r28, 0x99	; 153
 c3c:	d0 40       	sbci	r29, 0x00	; 0
 c3e:	01 96       	adiw	r24, 0x01	; 1
 c40:	a1 1d       	adc	r26, r1
 c42:	c7 56       	subi	r28, 0x67	; 103
 c44:	df 4f       	sbci	r29, 0xFF	; 255
 c46:	88 83       	st	Y, r24
 c48:	99 83       	std	Y+1, r25	; 0x01
 c4a:	aa 83       	std	Y+2, r26	; 0x02
 c4c:	c9 59       	subi	r28, 0x99	; 153
 c4e:	d0 40       	sbci	r29, 0x00	; 0
 c50:	a6 01       	movw	r20, r12
 c52:	be 01       	movw	r22, r28
 c54:	6f 57       	subi	r22, 0x7F	; 127
 c56:	7f 4f       	sbci	r23, 0xFF	; 255
 c58:	c4 01       	movw	r24, r8
 c5a:	0e 94 74 17 	call	0x2ee8	; 0x2ee8 <__fmt_o>
 c5e:	2e c1       	rjmp	.+604    	; 0xebc <__printf_core+0x7dc>
 c60:	61 2f       	mov	r22, r17
 c62:	70 e0       	ldi	r23, 0x00	; 0
 c64:	95 01       	movw	r18, r10
 c66:	40 e0       	ldi	r20, 0x00	; 0
 c68:	50 e0       	ldi	r21, 0x00	; 0
 c6a:	c6 01       	movw	r24, r12
 c6c:	0e 94 d5 12 	call	0x25aa	; 0x25aa <__pop_int>
 c70:	89 2b       	or	r24, r25
 c72:	09 f4       	brne	.+2      	; 0xc76 <__printf_core+0x596>
 c74:	26 c1       	rjmp	.+588    	; 0xec2 <__printf_core+0x7e2>
 c76:	c7 56       	subi	r28, 0x67	; 103
 c78:	df 4f       	sbci	r29, 0xFF	; 255
 c7a:	88 81       	ld	r24, Y
 c7c:	99 81       	ldd	r25, Y+1	; 0x01
 c7e:	aa 81       	ldd	r26, Y+2	; 0x02
 c80:	c9 59       	subi	r28, 0x99	; 153
 c82:	d0 40       	sbci	r29, 0x00	; 0
 c84:	9c 01       	movw	r18, r24
 c86:	4a 2f       	mov	r20, r26
 c88:	2f 5f       	subi	r18, 0xFF	; 255
 c8a:	3f 4f       	sbci	r19, 0xFF	; 255
 c8c:	4f 4f       	sbci	r20, 0xFF	; 255
 c8e:	c7 56       	subi	r28, 0x67	; 103
 c90:	df 4f       	sbci	r29, 0xFF	; 255
 c92:	28 83       	st	Y, r18
 c94:	39 83       	std	Y+1, r19	; 0x01
 c96:	4a 83       	std	Y+2, r20	; 0x02
 c98:	c9 59       	subi	r28, 0x99	; 153
 c9a:	d0 40       	sbci	r29, 0x00	; 0
 c9c:	fc 01       	movw	r30, r24
 c9e:	5a 2f       	mov	r21, r26
 ca0:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
 ca4:	26 2f       	mov	r18, r22
 ca6:	4b c0       	rjmp	.+150    	; 0xd3e <__printf_core+0x65e>
 ca8:	95 01       	movw	r18, r10
 caa:	40 e0       	ldi	r20, 0x00	; 0
 cac:	50 e0       	ldi	r21, 0x00	; 0
 cae:	60 ef       	ldi	r22, 0xF0	; 240
 cb0:	70 e0       	ldi	r23, 0x00	; 0
 cb2:	c6 01       	movw	r24, r12
 cb4:	0e 94 d5 12 	call	0x25aa	; 0x25aa <__pop_int>
 cb8:	89 2b       	or	r24, r25
 cba:	09 f4       	brne	.+2      	; 0xcbe <__printf_core+0x5de>
 cbc:	02 c1       	rjmp	.+516    	; 0xec2 <__printf_core+0x7e2>
 cbe:	c7 56       	subi	r28, 0x67	; 103
 cc0:	df 4f       	sbci	r29, 0xFF	; 255
 cc2:	88 81       	ld	r24, Y
 cc4:	99 81       	ldd	r25, Y+1	; 0x01
 cc6:	aa 81       	ldd	r26, Y+2	; 0x02
 cc8:	c9 59       	subi	r28, 0x99	; 153
 cca:	d0 40       	sbci	r29, 0x00	; 0
 ccc:	01 96       	adiw	r24, 0x01	; 1
 cce:	a1 1d       	adc	r26, r1
 cd0:	c7 56       	subi	r28, 0x67	; 103
 cd2:	df 4f       	sbci	r29, 0xFF	; 255
 cd4:	88 83       	st	Y, r24
 cd6:	99 83       	std	Y+1, r25	; 0x01
 cd8:	aa 83       	std	Y+2, r26	; 0x02
 cda:	c9 59       	subi	r28, 0x99	; 153
 cdc:	d0 40       	sbci	r29, 0x00	; 0
 cde:	86 e0       	ldi	r24, 0x06	; 6
 ce0:	29 ed       	ldi	r18, 0xD9	; 217
 ce2:	36 e0       	ldi	r19, 0x06	; 6
 ce4:	40 e0       	ldi	r20, 0x00	; 0
 ce6:	f9 01       	movw	r30, r18
 ce8:	de 01       	movw	r26, r28
 cea:	ad 56       	subi	r26, 0x6D	; 109
 cec:	bf 4f       	sbci	r27, 0xFF	; 255
 cee:	74 2f       	mov	r23, r20
 cf0:	0e 94 f7 23 	call	0x47ee	; 0x47ee <__movmemx_qi>
 cf4:	d6 01       	movw	r26, r12
 cf6:	2c 91       	ld	r18, X
 cf8:	11 96       	adiw	r26, 0x01	; 1
 cfa:	3c 91       	ld	r19, X
 cfc:	11 97       	sbiw	r26, 0x01	; 1
 cfe:	12 96       	adiw	r26, 0x02	; 2
 d00:	4c 91       	ld	r20, X
 d02:	12 97       	sbiw	r26, 0x02	; 2
 d04:	13 96       	adiw	r26, 0x03	; 3
 d06:	5c 91       	ld	r21, X
 d08:	13 97       	sbiw	r26, 0x03	; 3
 d0a:	14 96       	adiw	r26, 0x04	; 4
 d0c:	6c 91       	ld	r22, X
 d0e:	14 97       	sbiw	r26, 0x04	; 4
 d10:	15 96       	adiw	r26, 0x05	; 5
 d12:	7c 91       	ld	r23, X
 d14:	15 97       	sbiw	r26, 0x05	; 5
 d16:	16 96       	adiw	r26, 0x06	; 6
 d18:	8c 91       	ld	r24, X
 d1a:	16 97       	sbiw	r26, 0x06	; 6
 d1c:	17 96       	adiw	r26, 0x07	; 7
 d1e:	9c 91       	ld	r25, X
 d20:	a0 e0       	ldi	r26, 0x00	; 0
 d22:	0e 94 1d 24 	call	0x483a	; 0x483a <__cmpdi2_s8>
 d26:	51 f4       	brne	.+20     	; 0xd3c <__printf_core+0x65c>
 d28:	00 e0       	ldi	r16, 0x00	; 0
 d2a:	10 e0       	ldi	r17, 0x00	; 0
 d2c:	cf 55       	subi	r28, 0x5F	; 95
 d2e:	df 4f       	sbci	r29, 0xFF	; 255
 d30:	28 81       	ld	r18, Y
 d32:	39 81       	ldd	r19, Y+1	; 0x01
 d34:	4a 81       	ldd	r20, Y+2	; 0x02
 d36:	c1 5a       	subi	r28, 0xA1	; 161
 d38:	d0 40       	sbci	r29, 0x00	; 0
 d3a:	ba c0       	rjmp	.+372    	; 0xeb0 <__printf_core+0x7d0>
 d3c:	28 e7       	ldi	r18, 0x78	; 120
 d3e:	a6 01       	movw	r20, r12
 d40:	be 01       	movw	r22, r28
 d42:	6f 57       	subi	r22, 0x7F	; 127
 d44:	7f 4f       	sbci	r23, 0xFF	; 255
 d46:	c4 01       	movw	r24, r8
 d48:	0e 94 d6 10 	call	0x21ac	; 0x21ac <__fmt_x>
 d4c:	b7 c0       	rjmp	.+366    	; 0xebc <__printf_core+0x7dc>
 d4e:	61 2f       	mov	r22, r17
 d50:	70 e0       	ldi	r23, 0x00	; 0
 d52:	95 01       	movw	r18, r10
 d54:	a1 01       	movw	r20, r2
 d56:	4e 0d       	add	r20, r14
 d58:	5f 1d       	adc	r21, r15
 d5a:	c6 01       	movw	r24, r12
 d5c:	0e 94 08 17 	call	0x2e10	; 0x2e10 <__pop_ptr>
 d60:	b0 c0       	rjmp	.+352    	; 0xec2 <__printf_core+0x7e2>
 d62:	61 2f       	mov	r22, r17
 d64:	70 e0       	ldi	r23, 0x00	; 0
 d66:	a5 01       	movw	r20, r10
 d68:	c6 01       	movw	r24, r12
 d6a:	0e 94 f0 21 	call	0x43e0	; 0x43e0 <__pop_float>
 d6e:	89 2b       	or	r24, r25
 d70:	09 f4       	brne	.+2      	; 0xd74 <__printf_core+0x694>
 d72:	a7 c0       	rjmp	.+334    	; 0xec2 <__printf_core+0x7e2>
 d74:	c7 56       	subi	r28, 0x67	; 103
 d76:	df 4f       	sbci	r29, 0xFF	; 255
 d78:	88 81       	ld	r24, Y
 d7a:	99 81       	ldd	r25, Y+1	; 0x01
 d7c:	aa 81       	ldd	r26, Y+2	; 0x02
 d7e:	c9 59       	subi	r28, 0x99	; 153
 d80:	d0 40       	sbci	r29, 0x00	; 0
 d82:	9c 01       	movw	r18, r24
 d84:	4a 2f       	mov	r20, r26
 d86:	2f 5f       	subi	r18, 0xFF	; 255
 d88:	3f 4f       	sbci	r19, 0xFF	; 255
 d8a:	4f 4f       	sbci	r20, 0xFF	; 255
 d8c:	c7 56       	subi	r28, 0x67	; 103
 d8e:	df 4f       	sbci	r29, 0xFF	; 255
 d90:	28 83       	st	Y, r18
 d92:	39 83       	std	Y+1, r19	; 0x01
 d94:	4a 83       	std	Y+2, r20	; 0x02
 d96:	c9 59       	subi	r28, 0x99	; 153
 d98:	d0 40       	sbci	r29, 0x00	; 0
 d9a:	fc 01       	movw	r30, r24
 d9c:	5a 2f       	mov	r21, r26
 d9e:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
 da2:	26 2f       	mov	r18, r22
 da4:	a6 01       	movw	r20, r12
 da6:	be 01       	movw	r22, r28
 da8:	6f 57       	subi	r22, 0x7F	; 127
 daa:	7f 4f       	sbci	r23, 0xFF	; 255
 dac:	c4 01       	movw	r24, r8
 dae:	0e 94 89 07 	call	0xf12	; 0xf12 <__fmt_fp>
 db2:	84 c0       	rjmp	.+264    	; 0xebc <__printf_core+0x7dc>
 db4:	10 38       	cpi	r17, 0x80	; 128
 db6:	09 f0       	breq	.+2      	; 0xdba <__printf_core+0x6da>
 db8:	84 c0       	rjmp	.+264    	; 0xec2 <__printf_core+0x7e2>
 dba:	c7 56       	subi	r28, 0x67	; 103
 dbc:	df 4f       	sbci	r29, 0xFF	; 255
 dbe:	88 81       	ld	r24, Y
 dc0:	99 81       	ldd	r25, Y+1	; 0x01
 dc2:	aa 81       	ldd	r26, Y+2	; 0x02
 dc4:	c9 59       	subi	r28, 0x99	; 153
 dc6:	d0 40       	sbci	r29, 0x00	; 0
 dc8:	01 96       	adiw	r24, 0x01	; 1
 dca:	a1 1d       	adc	r26, r1
 dcc:	c7 56       	subi	r28, 0x67	; 103
 dce:	df 4f       	sbci	r29, 0xFF	; 255
 dd0:	88 83       	st	Y, r24
 dd2:	99 83       	std	Y+1, r25	; 0x01
 dd4:	aa 83       	std	Y+2, r26	; 0x02
 dd6:	c9 59       	subi	r28, 0x99	; 153
 dd8:	d0 40       	sbci	r29, 0x00	; 0
 dda:	d5 01       	movw	r26, r10
 ddc:	ed 91       	ld	r30, X+
 dde:	fc 91       	ld	r31, X
 de0:	11 97       	sbiw	r26, 0x01	; 1
 de2:	cf 01       	movw	r24, r30
 de4:	02 96       	adiw	r24, 0x02	; 2
 de6:	8d 93       	st	X+, r24
 de8:	9c 93       	st	X, r25
 dea:	80 81       	ld	r24, Z
 dec:	f6 01       	movw	r30, r12
 dee:	80 83       	st	Z, r24
 df0:	5b c0       	rjmp	.+182    	; 0xea8 <__printf_core+0x7c8>
 df2:	10 38       	cpi	r17, 0x80	; 128
 df4:	09 f0       	breq	.+2      	; 0xdf8 <__printf_core+0x718>
 df6:	65 c0       	rjmp	.+202    	; 0xec2 <__printf_core+0x7e2>
 df8:	c7 56       	subi	r28, 0x67	; 103
 dfa:	df 4f       	sbci	r29, 0xFF	; 255
 dfc:	88 81       	ld	r24, Y
 dfe:	99 81       	ldd	r25, Y+1	; 0x01
 e00:	aa 81       	ldd	r26, Y+2	; 0x02
 e02:	c9 59       	subi	r28, 0x99	; 153
 e04:	d0 40       	sbci	r29, 0x00	; 0
 e06:	01 96       	adiw	r24, 0x01	; 1
 e08:	a1 1d       	adc	r26, r1
 e0a:	c7 56       	subi	r28, 0x67	; 103
 e0c:	df 4f       	sbci	r29, 0xFF	; 255
 e0e:	88 83       	st	Y, r24
 e10:	99 83       	std	Y+1, r25	; 0x01
 e12:	aa 83       	std	Y+2, r26	; 0x02
 e14:	c9 59       	subi	r28, 0x99	; 153
 e16:	d0 40       	sbci	r29, 0x00	; 0
 e18:	d5 01       	movw	r26, r10
 e1a:	ed 91       	ld	r30, X+
 e1c:	fc 91       	ld	r31, X
 e1e:	11 97       	sbiw	r26, 0x01	; 1
 e20:	cf 01       	movw	r24, r30
 e22:	03 96       	adiw	r24, 0x03	; 3
 e24:	8d 93       	st	X+, r24
 e26:	9c 93       	st	X, r25
 e28:	20 81       	ld	r18, Z
 e2a:	31 81       	ldd	r19, Z+1	; 0x01
 e2c:	42 81       	ldd	r20, Z+2	; 0x02
 e2e:	00 e0       	ldi	r16, 0x00	; 0
 e30:	10 e0       	ldi	r17, 0x00	; 0
 e32:	3e c0       	rjmp	.+124    	; 0xeb0 <__printf_core+0x7d0>
 e34:	10 38       	cpi	r17, 0x80	; 128
 e36:	09 f0       	breq	.+2      	; 0xe3a <__printf_core+0x75a>
 e38:	44 c0       	rjmp	.+136    	; 0xec2 <__printf_core+0x7e2>
 e3a:	c7 56       	subi	r28, 0x67	; 103
 e3c:	df 4f       	sbci	r29, 0xFF	; 255
 e3e:	88 81       	ld	r24, Y
 e40:	99 81       	ldd	r25, Y+1	; 0x01
 e42:	aa 81       	ldd	r26, Y+2	; 0x02
 e44:	c9 59       	subi	r28, 0x99	; 153
 e46:	d0 40       	sbci	r29, 0x00	; 0
 e48:	01 96       	adiw	r24, 0x01	; 1
 e4a:	a1 1d       	adc	r26, r1
 e4c:	c7 56       	subi	r28, 0x67	; 103
 e4e:	df 4f       	sbci	r29, 0xFF	; 255
 e50:	88 83       	st	Y, r24
 e52:	99 83       	std	Y+1, r25	; 0x01
 e54:	aa 83       	std	Y+2, r26	; 0x02
 e56:	c9 59       	subi	r28, 0x99	; 153
 e58:	d0 40       	sbci	r29, 0x00	; 0
 e5a:	f6 01       	movw	r30, r12
 e5c:	70 82       	st	Z, r7
 e5e:	24 c0       	rjmp	.+72     	; 0xea8 <__printf_core+0x7c8>
 e60:	d6 01       	movw	r26, r12
 e62:	7c 92       	st	X, r7
 e64:	c2 56       	subi	r28, 0x62	; 98
 e66:	df 4f       	sbci	r29, 0xFF	; 255
 e68:	28 81       	ld	r18, Y
 e6a:	39 81       	ldd	r19, Y+1	; 0x01
 e6c:	4a 81       	ldd	r20, Y+2	; 0x02
 e6e:	ce 59       	subi	r28, 0x9E	; 158
 e70:	d0 40       	sbci	r29, 0x00	; 0
 e72:	c7 56       	subi	r28, 0x67	; 103
 e74:	df 4f       	sbci	r29, 0xFF	; 255
 e76:	28 83       	st	Y, r18
 e78:	39 83       	std	Y+1, r19	; 0x01
 e7a:	4a 83       	std	Y+2, r20	; 0x02
 e7c:	c9 59       	subi	r28, 0x99	; 153
 e7e:	d0 40       	sbci	r29, 0x00	; 0
 e80:	cf 57       	subi	r28, 0x7F	; 127
 e82:	df 4f       	sbci	r29, 0xFF	; 255
 e84:	19 82       	std	Y+1, r1	; 0x01
 e86:	18 82       	st	Y, r1
 e88:	c1 58       	subi	r28, 0x81	; 129
 e8a:	d0 40       	sbci	r29, 0x00	; 0
 e8c:	cb 57       	subi	r28, 0x7B	; 123
 e8e:	df 4f       	sbci	r29, 0xFF	; 255
 e90:	19 82       	std	Y+1, r1	; 0x01
 e92:	18 82       	st	Y, r1
 e94:	c5 58       	subi	r28, 0x85	; 133
 e96:	d0 40       	sbci	r29, 0x00	; 0
 e98:	8f ef       	ldi	r24, 0xFF	; 255
 e9a:	9f ef       	ldi	r25, 0xFF	; 255
 e9c:	cd 57       	subi	r28, 0x7D	; 125
 e9e:	df 4f       	sbci	r29, 0xFF	; 255
 ea0:	99 83       	std	Y+1, r25	; 0x01
 ea2:	88 83       	st	Y, r24
 ea4:	c3 58       	subi	r28, 0x83	; 131
 ea6:	d0 40       	sbci	r29, 0x00	; 0
 ea8:	01 e0       	ldi	r16, 0x01	; 1
 eaa:	10 e0       	ldi	r17, 0x00	; 0
 eac:	46 2d       	mov	r20, r6
 eae:	92 01       	movw	r18, r4
 eb0:	be 01       	movw	r22, r28
 eb2:	6f 57       	subi	r22, 0x7F	; 127
 eb4:	7f 4f       	sbci	r23, 0xFF	; 255
 eb6:	c4 01       	movw	r24, r8
 eb8:	0e 94 af 18 	call	0x315e	; 0x315e <__fmt_s>
 ebc:	8e 0d       	add	r24, r14
 ebe:	9f 1d       	adc	r25, r15
 ec0:	11 c0       	rjmp	.+34     	; 0xee4 <__printf_core+0x804>
 ec2:	c7 56       	subi	r28, 0x67	; 103
 ec4:	df 4f       	sbci	r29, 0xFF	; 255
 ec6:	88 81       	ld	r24, Y
 ec8:	99 81       	ldd	r25, Y+1	; 0x01
 eca:	aa 81       	ldd	r26, Y+2	; 0x02
 ecc:	c9 59       	subi	r28, 0x99	; 153
 ece:	d0 40       	sbci	r29, 0x00	; 0
 ed0:	01 96       	adiw	r24, 0x01	; 1
 ed2:	a1 1d       	adc	r26, r1
 ed4:	c7 56       	subi	r28, 0x67	; 103
 ed6:	df 4f       	sbci	r29, 0xFF	; 255
 ed8:	88 83       	st	Y, r24
 eda:	99 83       	std	Y+1, r25	; 0x01
 edc:	aa 83       	std	Y+2, r26	; 0x02
 ede:	c9 59       	subi	r28, 0x99	; 153
 ee0:	d0 40       	sbci	r29, 0x00	; 0
 ee2:	c7 01       	movw	r24, r14
 ee4:	71 01       	movw	r14, r2
 ee6:	e8 0e       	add	r14, r24
 ee8:	f9 1e       	adc	r15, r25
 eea:	e2 14       	cp	r14, r2
 eec:	f3 04       	cpc	r15, r3
 eee:	4c f4       	brge	.+18     	; 0xf02 <__printf_core+0x822>
 ef0:	8f e4       	ldi	r24, 0x4F	; 79
 ef2:	90 e0       	ldi	r25, 0x00	; 0
 ef4:	90 93 0e 05 	sts	0x050E, r25	; 0x80050e <__errno_val+0x1>
 ef8:	80 93 0d 05 	sts	0x050D, r24	; 0x80050d <__errno_val>
 efc:	8f ef       	ldi	r24, 0xFF	; 255
 efe:	9f ef       	ldi	r25, 0xFF	; 255
 f00:	03 c0       	rjmp	.+6      	; 0xf08 <__printf_core+0x828>
 f02:	17 01       	movw	r2, r14
 f04:	19 cc       	rjmp	.-1998   	; 0x738 <__printf_core+0x58>
 f06:	c1 01       	movw	r24, r2
 f08:	cd 55       	subi	r28, 0x5D	; 93
 f0a:	df 4f       	sbci	r29, 0xFF	; 255
 f0c:	e2 e1       	ldi	r30, 0x12	; 18
 f0e:	0c 94 be 22 	jmp	0x457c	; 0x457c <__epilogue_restores__>

Disassembly of section .text.fputc:

00003b82 <fputc>:
    3b82:	0f 93       	push	r16
    3b84:	1f 93       	push	r17
    3b86:	cf 93       	push	r28
    3b88:	df 93       	push	r29
    3b8a:	db 01       	movw	r26, r22
    3b8c:	2d 91       	ld	r18, X+
    3b8e:	3c 91       	ld	r19, X
    3b90:	11 97       	sbiw	r26, 0x01	; 1
    3b92:	30 ff       	sbrs	r19, 0
    3b94:	25 c0       	rjmp	.+74     	; 0x3be0 <fputc+0x5e>
    3b96:	17 96       	adiw	r26, 0x07	; 7
    3b98:	4d 91       	ld	r20, X+
    3b9a:	5c 91       	ld	r21, X
    3b9c:	18 97       	sbiw	r26, 0x08	; 8
    3b9e:	15 96       	adiw	r26, 0x05	; 5
    3ba0:	2d 91       	ld	r18, X+
    3ba2:	3c 91       	ld	r19, X
    3ba4:	16 97       	sbiw	r26, 0x06	; 6
    3ba6:	42 17       	cp	r20, r18
    3ba8:	53 07       	cpc	r21, r19
    3baa:	78 f4       	brcc	.+30     	; 0x3bca <fputc+0x48>
    3bac:	12 96       	adiw	r26, 0x02	; 2
    3bae:	ed 91       	ld	r30, X+
    3bb0:	fc 91       	ld	r31, X
    3bb2:	13 97       	sbiw	r26, 0x03	; 3
    3bb4:	80 83       	st	Z, r24
    3bb6:	12 96       	adiw	r26, 0x02	; 2
    3bb8:	2d 91       	ld	r18, X+
    3bba:	3c 91       	ld	r19, X
    3bbc:	13 97       	sbiw	r26, 0x03	; 3
    3bbe:	2f 5f       	subi	r18, 0xFF	; 255
    3bc0:	3f 4f       	sbci	r19, 0xFF	; 255
    3bc2:	13 96       	adiw	r26, 0x03	; 3
    3bc4:	3c 93       	st	X, r19
    3bc6:	2e 93       	st	-X, r18
    3bc8:	12 97       	sbiw	r26, 0x02	; 2
    3bca:	17 96       	adiw	r26, 0x07	; 7
    3bcc:	2d 91       	ld	r18, X+
    3bce:	3c 91       	ld	r19, X
    3bd0:	18 97       	sbiw	r26, 0x08	; 8
    3bd2:	2f 5f       	subi	r18, 0xFF	; 255
    3bd4:	3f 4f       	sbci	r19, 0xFF	; 255
    3bd6:	18 96       	adiw	r26, 0x08	; 8
    3bd8:	3c 93       	st	X, r19
    3bda:	2e 93       	st	-X, r18
    3bdc:	17 97       	sbiw	r26, 0x07	; 7
    3bde:	15 c0       	rjmp	.+42     	; 0x3c0a <fputc+0x88>
    3be0:	1d 96       	adiw	r26, 0x0d	; 13
    3be2:	ed 91       	ld	r30, X+
    3be4:	fc 91       	ld	r31, X
    3be6:	1e 97       	sbiw	r26, 0x0e	; 14
    3be8:	30 97       	sbiw	r30, 0x00	; 0
    3bea:	19 f4       	brne	.+6      	; 0x3bf2 <fputc+0x70>
    3bec:	8f ef       	ldi	r24, 0xFF	; 255
    3bee:	9f ef       	ldi	r25, 0xFF	; 255
    3bf0:	0c c0       	rjmp	.+24     	; 0x3c0a <fputc+0x88>
    3bf2:	8b 01       	movw	r16, r22
    3bf4:	ec 01       	movw	r28, r24
    3bf6:	19 95       	eicall
    3bf8:	89 2b       	or	r24, r25
    3bfa:	c1 f7       	brne	.-16     	; 0x3bec <fputc+0x6a>
    3bfc:	f8 01       	movw	r30, r16
    3bfe:	87 81       	ldd	r24, Z+7	; 0x07
    3c00:	90 85       	ldd	r25, Z+8	; 0x08
    3c02:	01 96       	adiw	r24, 0x01	; 1
    3c04:	90 87       	std	Z+8, r25	; 0x08
    3c06:	87 83       	std	Z+7, r24	; 0x07
    3c08:	ce 01       	movw	r24, r28
    3c0a:	df 91       	pop	r29
    3c0c:	cf 91       	pop	r28
    3c0e:	1f 91       	pop	r17
    3c10:	0f 91       	pop	r16
    3c12:	08 95       	ret

Disassembly of section .text.__fmt_d:

0000242c <__fmt_d>:
    242c:	ad e0       	ldi	r26, 0x0D	; 13
    242e:	b0 e0       	ldi	r27, 0x00	; 0
    2430:	ec e1       	ldi	r30, 0x1C	; 28
    2432:	f2 e1       	ldi	r31, 0x12	; 18
    2434:	0c 94 87 22 	jmp	0x450e	; 0x450e <__prologue_saves__>
    2438:	9a 87       	std	Y+10, r25	; 0x0a
    243a:	89 87       	std	Y+9, r24	; 0x09
    243c:	7c 83       	std	Y+4, r23	; 0x04
    243e:	6b 83       	std	Y+3, r22	; 0x03
    2440:	fa 01       	movw	r30, r20
    2442:	db 01       	movw	r26, r22
    2444:	12 96       	adiw	r26, 0x02	; 2
    2446:	cd 90       	ld	r12, X+
    2448:	dc 90       	ld	r13, X
    244a:	13 97       	sbiw	r26, 0x03	; 3
    244c:	14 96       	adiw	r26, 0x04	; 4
    244e:	8d 91       	ld	r24, X+
    2450:	9c 91       	ld	r25, X
    2452:	15 97       	sbiw	r26, 0x05	; 5
    2454:	9e 83       	std	Y+6, r25	; 0x06
    2456:	8d 83       	std	Y+5, r24	; 0x05
    2458:	ed 90       	ld	r14, X+
    245a:	fc 90       	ld	r15, X
    245c:	11 97       	sbiw	r26, 0x01	; 1
    245e:	fa 82       	std	Y+2, r15	; 0x02
    2460:	e9 82       	std	Y+1, r14	; 0x01
    2462:	16 96       	adiw	r26, 0x06	; 6
    2464:	0d 90       	ld	r0, X+
    2466:	bc 91       	ld	r27, X
    2468:	a0 2d       	mov	r26, r0
    246a:	b8 87       	std	Y+8, r27	; 0x08
    246c:	af 83       	std	Y+7, r26	; 0x07
    246e:	20 80       	ld	r2, Z
    2470:	31 80       	ldd	r3, Z+1	; 0x01
    2472:	42 80       	ldd	r4, Z+2	; 0x02
    2474:	53 80       	ldd	r5, Z+3	; 0x03
    2476:	64 80       	ldd	r6, Z+4	; 0x04
    2478:	75 80       	ldd	r7, Z+5	; 0x05
    247a:	86 80       	ldd	r8, Z+6	; 0x06
    247c:	97 80       	ldd	r9, Z+7	; 0x07
    247e:	81 01       	movw	r16, r2
    2480:	b4 2d       	mov	r27, r4
    2482:	f5 2d       	mov	r31, r5
    2484:	e6 2d       	mov	r30, r6
    2486:	7b 86       	std	Y+11, r7	; 0x0b
    2488:	8c 86       	std	Y+12, r8	; 0x0c
    248a:	9d 86       	std	Y+13, r9	; 0x0d
    248c:	91 01       	movw	r18, r2
    248e:	a2 01       	movw	r20, r4
    2490:	b3 01       	movw	r22, r6
    2492:	c4 01       	movw	r24, r8
    2494:	a0 e0       	ldi	r26, 0x00	; 0
    2496:	0e 94 1d 24 	call	0x483a	; 0x483a <__cmpdi2_s8>
    249a:	4c f4       	brge	.+18     	; 0x24ae <__fmt_d+0x82>
    249c:	0e 94 cb 23 	call	0x4796	; 0x4796 <__negdi2>
    24a0:	89 01       	movw	r16, r18
    24a2:	b4 2f       	mov	r27, r20
    24a4:	f5 2f       	mov	r31, r21
    24a6:	e6 2f       	mov	r30, r22
    24a8:	7b 87       	std	Y+11, r23	; 0x0b
    24aa:	8c 87       	std	Y+12, r24	; 0x0c
    24ac:	9d 87       	std	Y+13, r25	; 0x0d
    24ae:	d7 fc       	sbrc	r13, 7
    24b0:	04 c0       	rjmp	.+8      	; 0x24ba <__fmt_d+0x8e>
    24b2:	e8 94       	clt
    24b4:	e1 f8       	bld	r14, 1
    24b6:	fa 82       	std	Y+2, r15	; 0x02
    24b8:	e9 82       	std	Y+1, r14	; 0x01
    24ba:	91 01       	movw	r18, r2
    24bc:	a2 01       	movw	r20, r4
    24be:	b3 01       	movw	r22, r6
    24c0:	c4 01       	movw	r24, r8
    24c2:	a0 e0       	ldi	r26, 0x00	; 0
    24c4:	ed 80       	ldd	r14, Y+5	; 0x05
    24c6:	fe 80       	ldd	r15, Y+6	; 0x06
    24c8:	0e 94 1d 24 	call	0x483a	; 0x483a <__cmpdi2_s8>
    24cc:	1c f0       	brlt	.+6      	; 0x24d4 <__fmt_d+0xa8>
    24ce:	89 81       	ldd	r24, Y+1	; 0x01
    24d0:	82 ff       	sbrs	r24, 2
    24d2:	04 c0       	rjmp	.+8      	; 0x24dc <__fmt_d+0xb0>
    24d4:	81 e0       	ldi	r24, 0x01	; 1
    24d6:	e8 1a       	sub	r14, r24
    24d8:	f1 08       	sbc	r15, r1
    24da:	05 c0       	rjmp	.+10     	; 0x24e6 <__fmt_d+0xba>
    24dc:	83 ff       	sbrs	r24, 3
    24de:	03 c0       	rjmp	.+6      	; 0x24e6 <__fmt_d+0xba>
    24e0:	91 e0       	ldi	r25, 0x01	; 1
    24e2:	e9 1a       	sub	r14, r25
    24e4:	f1 08       	sbc	r15, r1
    24e6:	ce 01       	movw	r24, r28
    24e8:	01 96       	adiw	r24, 0x01	; 1
    24ea:	5c 01       	movw	r10, r24
    24ec:	8a e0       	ldi	r24, 0x0A	; 10
    24ee:	c8 2e       	mov	r12, r24
    24f0:	d1 2c       	mov	r13, r1
    24f2:	2b 2f       	mov	r18, r27
    24f4:	3f 2f       	mov	r19, r31
    24f6:	4e 2f       	mov	r20, r30
    24f8:	5b 85       	ldd	r21, Y+11	; 0x0b
    24fa:	6c 85       	ldd	r22, Y+12	; 0x0c
    24fc:	7d 85       	ldd	r23, Y+13	; 0x0d
    24fe:	8b 81       	ldd	r24, Y+3	; 0x03
    2500:	9c 81       	ldd	r25, Y+4	; 0x04
    2502:	0e 94 36 14 	call	0x286c	; 0x286c <__cvt_u>
    2506:	fc 01       	movw	r30, r24
    2508:	91 01       	movw	r18, r2
    250a:	a2 01       	movw	r20, r4
    250c:	b3 01       	movw	r22, r6
    250e:	c4 01       	movw	r24, r8
    2510:	a0 e0       	ldi	r26, 0x00	; 0
    2512:	0e 94 1d 24 	call	0x483a	; 0x483a <__cmpdi2_s8>
    2516:	1c f0       	brlt	.+6      	; 0x251e <__fmt_d+0xf2>
    2518:	89 81       	ldd	r24, Y+1	; 0x01
    251a:	82 ff       	sbrs	r24, 2
    251c:	12 c0       	rjmp	.+36     	; 0x2542 <__fmt_d+0x116>
    251e:	31 97       	sbiw	r30, 0x01	; 1
    2520:	0f 81       	ldd	r16, Y+7	; 0x07
    2522:	18 85       	ldd	r17, Y+8	; 0x08
    2524:	0e 0f       	add	r16, r30
    2526:	1f 1f       	adc	r17, r31
    2528:	91 01       	movw	r18, r2
    252a:	a2 01       	movw	r20, r4
    252c:	b3 01       	movw	r22, r6
    252e:	c4 01       	movw	r24, r8
    2530:	a0 e0       	ldi	r26, 0x00	; 0
    2532:	0e 94 1d 24 	call	0x483a	; 0x483a <__cmpdi2_s8>
    2536:	14 f0       	brlt	.+4      	; 0x253c <__fmt_d+0x110>
    2538:	8b e2       	ldi	r24, 0x2B	; 43
    253a:	01 c0       	rjmp	.+2      	; 0x253e <__fmt_d+0x112>
    253c:	8d e2       	ldi	r24, 0x2D	; 45
    253e:	d8 01       	movw	r26, r16
    2540:	08 c0       	rjmp	.+16     	; 0x2552 <__fmt_d+0x126>
    2542:	83 ff       	sbrs	r24, 3
    2544:	07 c0       	rjmp	.+14     	; 0x2554 <__fmt_d+0x128>
    2546:	31 97       	sbiw	r30, 0x01	; 1
    2548:	af 81       	ldd	r26, Y+7	; 0x07
    254a:	b8 85       	ldd	r27, Y+8	; 0x08
    254c:	ae 0f       	add	r26, r30
    254e:	bf 1f       	adc	r27, r31
    2550:	80 e2       	ldi	r24, 0x20	; 32
    2552:	8c 93       	st	X, r24
    2554:	e9 80       	ldd	r14, Y+1	; 0x01
    2556:	fa 80       	ldd	r15, Y+2	; 0x02
    2558:	ab 81       	ldd	r26, Y+3	; 0x03
    255a:	bc 81       	ldd	r27, Y+4	; 0x04
    255c:	18 96       	adiw	r26, 0x08	; 8
    255e:	2d 91       	ld	r18, X+
    2560:	3c 91       	ld	r19, X
    2562:	19 97       	sbiw	r26, 0x09	; 9
    2564:	21 50       	subi	r18, 0x01	; 1
    2566:	31 09       	sbc	r19, r1
    2568:	2e 1b       	sub	r18, r30
    256a:	3f 0b       	sbc	r19, r31
    256c:	8f 81       	ldd	r24, Y+7	; 0x07
    256e:	98 85       	ldd	r25, Y+8	; 0x08
    2570:	e8 0f       	add	r30, r24
    2572:	f9 1f       	adc	r31, r25
    2574:	af 01       	movw	r20, r30
    2576:	60 e8       	ldi	r22, 0x80	; 128
    2578:	0d 81       	ldd	r16, Y+5	; 0x05
    257a:	1e 81       	ldd	r17, Y+6	; 0x06
    257c:	89 85       	ldd	r24, Y+9	; 0x09
    257e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2580:	0e 94 12 16 	call	0x2c24	; 0x2c24 <__pad>
    2584:	9c 01       	movw	r18, r24
    2586:	a9 85       	ldd	r26, Y+9	; 0x09
    2588:	ba 85       	ldd	r27, Y+10	; 0x0a
    258a:	8d 91       	ld	r24, X+
    258c:	9c 91       	ld	r25, X
    258e:	90 ff       	sbrs	r25, 0
    2590:	07 c0       	rjmp	.+14     	; 0x25a0 <__fmt_d+0x174>
    2592:	eb 81       	ldd	r30, Y+3	; 0x03
    2594:	fc 81       	ldd	r31, Y+4	; 0x04
    2596:	82 81       	ldd	r24, Z+2	; 0x02
    2598:	93 81       	ldd	r25, Z+3	; 0x03
    259a:	82 17       	cp	r24, r18
    259c:	93 07       	cpc	r25, r19
    259e:	0c f4       	brge	.+2      	; 0x25a2 <__fmt_d+0x176>
    25a0:	c9 01       	movw	r24, r18
    25a2:	2d 96       	adiw	r28, 0x0d	; 13
    25a4:	e2 e1       	ldi	r30, 0x12	; 18
    25a6:	0c 94 be 22 	jmp	0x457c	; 0x457c <__epilogue_restores__>

Disassembly of section .text.__fmt_o:

00002ee8 <__fmt_o>:
    2ee8:	a2 e0       	ldi	r26, 0x02	; 2
    2eea:	b0 e0       	ldi	r27, 0x00	; 0
    2eec:	ea e7       	ldi	r30, 0x7A	; 122
    2eee:	f7 e1       	ldi	r31, 0x17	; 23
    2ef0:	0c 94 87 22 	jmp	0x450e	; 0x450e <__prologue_saves__>
    2ef4:	1c 01       	movw	r2, r24
    2ef6:	4b 01       	movw	r8, r22
    2ef8:	fa 01       	movw	r30, r20
    2efa:	db 01       	movw	r26, r22
    2efc:	12 96       	adiw	r26, 0x02	; 2
    2efe:	2d 91       	ld	r18, X+
    2f00:	3c 91       	ld	r19, X
    2f02:	13 97       	sbiw	r26, 0x03	; 3
    2f04:	14 96       	adiw	r26, 0x04	; 4
    2f06:	4d 90       	ld	r4, X+
    2f08:	5c 90       	ld	r5, X
    2f0a:	15 97       	sbiw	r26, 0x05	; 5
    2f0c:	8d 91       	ld	r24, X+
    2f0e:	9c 91       	ld	r25, X
    2f10:	11 97       	sbiw	r26, 0x01	; 1
    2f12:	9a 83       	std	Y+2, r25	; 0x02
    2f14:	89 83       	std	Y+1, r24	; 0x01
    2f16:	16 96       	adiw	r26, 0x06	; 6
    2f18:	6d 90       	ld	r6, X+
    2f1a:	7c 90       	ld	r7, X
    2f1c:	17 97       	sbiw	r26, 0x07	; 7
    2f1e:	37 fd       	sbrc	r19, 7
    2f20:	03 c0       	rjmp	.+6      	; 0x2f28 <__fmt_o+0x40>
    2f22:	8d 7f       	andi	r24, 0xFD	; 253
    2f24:	9a 83       	std	Y+2, r25	; 0x02
    2f26:	89 83       	std	Y+1, r24	; 0x01
    2f28:	00 81       	ld	r16, Z
    2f2a:	11 81       	ldd	r17, Z+1	; 0x01
    2f2c:	22 81       	ldd	r18, Z+2	; 0x02
    2f2e:	33 81       	ldd	r19, Z+3	; 0x03
    2f30:	44 81       	ldd	r20, Z+4	; 0x04
    2f32:	55 81       	ldd	r21, Z+5	; 0x05
    2f34:	66 81       	ldd	r22, Z+6	; 0x06
    2f36:	77 81       	ldd	r23, Z+7	; 0x07
    2f38:	fe 01       	movw	r30, r28
    2f3a:	31 96       	adiw	r30, 0x01	; 1
    2f3c:	5f 01       	movw	r10, r30
    2f3e:	88 e0       	ldi	r24, 0x08	; 8
    2f40:	c8 2e       	mov	r12, r24
    2f42:	d1 2c       	mov	r13, r1
    2f44:	72 01       	movw	r14, r4
    2f46:	c4 01       	movw	r24, r8
    2f48:	0e 94 36 14 	call	0x286c	; 0x286c <__cvt_u>
    2f4c:	29 81       	ldd	r18, Y+1	; 0x01
    2f4e:	24 ff       	sbrs	r18, 4
    2f50:	06 c0       	rjmp	.+12     	; 0x2f5e <__fmt_o+0x76>
    2f52:	01 97       	sbiw	r24, 0x01	; 1
    2f54:	f3 01       	movw	r30, r6
    2f56:	e8 0f       	add	r30, r24
    2f58:	f9 1f       	adc	r31, r25
    2f5a:	20 e3       	ldi	r18, 0x30	; 48
    2f5c:	20 83       	st	Z, r18
    2f5e:	29 81       	ldd	r18, Y+1	; 0x01
    2f60:	23 ff       	sbrs	r18, 3
    2f62:	06 c0       	rjmp	.+12     	; 0x2f70 <__fmt_o+0x88>
    2f64:	01 97       	sbiw	r24, 0x01	; 1
    2f66:	f3 01       	movw	r30, r6
    2f68:	e8 0f       	add	r30, r24
    2f6a:	f9 1f       	adc	r31, r25
    2f6c:	20 e2       	ldi	r18, 0x20	; 32
    2f6e:	20 83       	st	Z, r18
    2f70:	e9 80       	ldd	r14, Y+1	; 0x01
    2f72:	fa 80       	ldd	r15, Y+2	; 0x02
    2f74:	d4 01       	movw	r26, r8
    2f76:	18 96       	adiw	r26, 0x08	; 8
    2f78:	2d 91       	ld	r18, X+
    2f7a:	3c 91       	ld	r19, X
    2f7c:	19 97       	sbiw	r26, 0x09	; 9
    2f7e:	21 50       	subi	r18, 0x01	; 1
    2f80:	31 09       	sbc	r19, r1
    2f82:	28 1b       	sub	r18, r24
    2f84:	39 0b       	sbc	r19, r25
    2f86:	86 0d       	add	r24, r6
    2f88:	97 1d       	adc	r25, r7
    2f8a:	ac 01       	movw	r20, r24
    2f8c:	60 e8       	ldi	r22, 0x80	; 128
    2f8e:	82 01       	movw	r16, r4
    2f90:	c1 01       	movw	r24, r2
    2f92:	0e 94 12 16 	call	0x2c24	; 0x2c24 <__pad>
    2f96:	9c 01       	movw	r18, r24
    2f98:	f1 01       	movw	r30, r2
    2f9a:	80 81       	ld	r24, Z
    2f9c:	91 81       	ldd	r25, Z+1	; 0x01
    2f9e:	90 ff       	sbrs	r25, 0
    2fa0:	08 c0       	rjmp	.+16     	; 0x2fb2 <__fmt_o+0xca>
    2fa2:	d4 01       	movw	r26, r8
    2fa4:	12 96       	adiw	r26, 0x02	; 2
    2fa6:	8d 91       	ld	r24, X+
    2fa8:	9c 91       	ld	r25, X
    2faa:	13 97       	sbiw	r26, 0x03	; 3
    2fac:	82 17       	cp	r24, r18
    2fae:	93 07       	cpc	r25, r19
    2fb0:	0c f4       	brge	.+2      	; 0x2fb4 <__fmt_o+0xcc>
    2fb2:	c9 01       	movw	r24, r18
    2fb4:	22 96       	adiw	r28, 0x02	; 2
    2fb6:	e2 e1       	ldi	r30, 0x12	; 18
    2fb8:	0c 94 be 22 	jmp	0x457c	; 0x457c <__epilogue_restores__>

Disassembly of section .text.__cvt_u:

0000286c <__cvt_u>:
    286c:	a2 e1       	ldi	r26, 0x12	; 18
    286e:	b0 e0       	ldi	r27, 0x00	; 0
    2870:	ec e3       	ldi	r30, 0x3C	; 60
    2872:	f4 e1       	ldi	r31, 0x14	; 20
    2874:	0c 94 87 22 	jmp	0x450e	; 0x450e <__prologue_saves__>
    2878:	fc 01       	movw	r30, r24
    287a:	0a 8b       	std	Y+18, r16	; 0x12
    287c:	1b 83       	std	Y+3, r17	; 0x03
    287e:	2c 83       	std	Y+4, r18	; 0x04
    2880:	73 2e       	mov	r7, r19
    2882:	64 2e       	mov	r6, r20
    2884:	55 2e       	mov	r5, r21
    2886:	46 2e       	mov	r4, r22
    2888:	7d 83       	std	Y+5, r23	; 0x05
    288a:	cc 86       	std	Y+12, r12	; 0x0c
    288c:	d8 86       	std	Y+8, r13	; 0x08
    288e:	bf 82       	std	Y+7, r11	; 0x07
    2890:	ae 82       	std	Y+6, r10	; 0x06
    2892:	86 81       	ldd	r24, Z+6	; 0x06
    2894:	97 81       	ldd	r25, Z+7	; 0x07
    2896:	9b 87       	std	Y+11, r25	; 0x0b
    2898:	8a 87       	std	Y+10, r24	; 0x0a
    289a:	d5 01       	movw	r26, r10
    289c:	4d 91       	ld	r20, X+
    289e:	5c 91       	ld	r21, X
    28a0:	22 81       	ldd	r18, Z+2	; 0x02
    28a2:	33 81       	ldd	r19, Z+3	; 0x03
    28a4:	80 85       	ldd	r24, Z+8	; 0x08
    28a6:	91 85       	ldd	r25, Z+9	; 0x09
    28a8:	01 97       	sbiw	r24, 0x01	; 1
    28aa:	1c 01       	movw	r2, r24
    28ac:	37 ff       	sbrs	r19, 7
    28ae:	02 c0       	rjmp	.+4      	; 0x28b4 <__cvt_u+0x48>
    28b0:	21 e0       	ldi	r18, 0x01	; 1
    28b2:	30 e0       	ldi	r19, 0x00	; 0
    28b4:	ea 85       	ldd	r30, Y+10	; 0x0a
    28b6:	fb 85       	ldd	r31, Y+11	; 0x0b
    28b8:	e8 0f       	add	r30, r24
    28ba:	f9 1f       	adc	r31, r25
    28bc:	10 82       	st	Z, r1
    28be:	47 01       	movw	r8, r14
    28c0:	e1 e0       	ldi	r30, 0x01	; 1
    28c2:	f0 e0       	ldi	r31, 0x00	; 0
    28c4:	fa 83       	std	Y+2, r31	; 0x02
    28c6:	e9 83       	std	Y+1, r30	; 0x01
    28c8:	c9 01       	movw	r24, r18
    28ca:	8e 19       	sub	r24, r14
    28cc:	9f 09       	sbc	r25, r15
    28ce:	9e 87       	std	Y+14, r25	; 0x0e
    28d0:	8d 87       	std	Y+13, r24	; 0x0d
    28d2:	da 01       	movw	r26, r20
    28d4:	a2 70       	andi	r26, 0x02	; 2
    28d6:	bb 27       	eor	r27, r27
    28d8:	b8 8b       	std	Y+16, r27	; 0x10
    28da:	af 87       	std	Y+15, r26	; 0x0f
    28dc:	b8 85       	ldd	r27, Y+8	; 0x08
    28de:	bb 0f       	add	r27, r27
    28e0:	bb 0b       	sbc	r27, r27
    28e2:	b9 8b       	std	Y+17, r27	; 0x11
    28e4:	12 14       	cp	r1, r2
    28e6:	13 04       	cpc	r1, r3
    28e8:	74 f0       	brlt	.+28     	; 0x2906 <__cvt_u+0x9a>
    28ea:	a9 81       	ldd	r26, Y+1	; 0x01
    28ec:	ba 81       	ldd	r27, Y+2	; 0x02
    28ee:	ab 2b       	or	r26, r27
    28f0:	09 f0       	breq	.+2      	; 0x28f4 <__cvt_u+0x88>
    28f2:	5c c0       	rjmp	.+184    	; 0x29ac <__cvt_u+0x140>
    28f4:	ae 81       	ldd	r26, Y+6	; 0x06
    28f6:	bf 81       	ldd	r27, Y+7	; 0x07
    28f8:	8d 91       	ld	r24, X+
    28fa:	9c 91       	ld	r25, X
    28fc:	11 97       	sbiw	r26, 0x01	; 1
    28fe:	8f 7e       	andi	r24, 0xEF	; 239
    2900:	8d 93       	st	X+, r24
    2902:	9c 93       	st	X, r25
    2904:	53 c0       	rjmp	.+166    	; 0x29ac <__cvt_u+0x140>
    2906:	2a 89       	ldd	r18, Y+18	; 0x12
    2908:	3b 81       	ldd	r19, Y+3	; 0x03
    290a:	4c 81       	ldd	r20, Y+4	; 0x04
    290c:	57 2d       	mov	r21, r7
    290e:	66 2d       	mov	r22, r6
    2910:	75 2d       	mov	r23, r5
    2912:	84 2d       	mov	r24, r4
    2914:	9d 81       	ldd	r25, Y+5	; 0x05
    2916:	a0 e0       	ldi	r26, 0x00	; 0
    2918:	0e 94 1d 24 	call	0x483a	; 0x483a <__cmpdi2_s8>
    291c:	b1 f1       	breq	.+108    	; 0x298a <__cvt_u+0x11e>
    291e:	e1 e0       	ldi	r30, 0x01	; 1
    2920:	2e 1a       	sub	r2, r30
    2922:	31 08       	sbc	r3, r1
    2924:	fc 85       	ldd	r31, Y+12	; 0x0c
    2926:	f9 87       	std	Y+9, r31	; 0x09
    2928:	af 2e       	mov	r10, r31
    292a:	b8 84       	ldd	r11, Y+8	; 0x08
    292c:	c9 88       	ldd	r12, Y+17	; 0x11
    292e:	dc 2c       	mov	r13, r12
    2930:	ec 2c       	mov	r14, r12
    2932:	fc 2c       	mov	r15, r12
    2934:	0c 2d       	mov	r16, r12
    2936:	1c 2d       	mov	r17, r12
    2938:	2a 89       	ldd	r18, Y+18	; 0x12
    293a:	3b 81       	ldd	r19, Y+3	; 0x03
    293c:	4c 81       	ldd	r20, Y+4	; 0x04
    293e:	57 2d       	mov	r21, r7
    2940:	66 2d       	mov	r22, r6
    2942:	75 2d       	mov	r23, r5
    2944:	84 2d       	mov	r24, r4
    2946:	9d 81       	ldd	r25, Y+5	; 0x05
    2948:	0e 94 e9 23 	call	0x47d2	; 0x47d2 <__umoddi3>
    294c:	c9 01       	movw	r24, r18
    294e:	29 83       	std	Y+1, r18	; 0x01
    2950:	9a 83       	std	Y+2, r25	; 0x02
    2952:	ea 85       	ldd	r30, Y+10	; 0x0a
    2954:	fb 85       	ldd	r31, Y+11	; 0x0b
    2956:	e2 0d       	add	r30, r2
    2958:	f3 1d       	adc	r31, r3
    295a:	80 5d       	subi	r24, 0xD0	; 208
    295c:	80 83       	st	Z, r24
    295e:	81 e0       	ldi	r24, 0x01	; 1
    2960:	88 1a       	sub	r8, r24
    2962:	91 08       	sbc	r9, r1
    2964:	2a 89       	ldd	r18, Y+18	; 0x12
    2966:	3b 81       	ldd	r19, Y+3	; 0x03
    2968:	4c 81       	ldd	r20, Y+4	; 0x04
    296a:	57 2d       	mov	r21, r7
    296c:	66 2d       	mov	r22, r6
    296e:	75 2d       	mov	r23, r5
    2970:	84 2d       	mov	r24, r4
    2972:	9d 81       	ldd	r25, Y+5	; 0x05
    2974:	0e 94 eb 23 	call	0x47d6	; 0x47d6 <__udivdi3>
    2978:	2a 8b       	std	Y+18, r18	; 0x12
    297a:	3b 83       	std	Y+3, r19	; 0x03
    297c:	4c 83       	std	Y+4, r20	; 0x04
    297e:	75 2e       	mov	r7, r21
    2980:	66 2e       	mov	r6, r22
    2982:	57 2e       	mov	r5, r23
    2984:	48 2e       	mov	r4, r24
    2986:	9d 83       	std	Y+5, r25	; 0x05
    2988:	ad cf       	rjmp	.-166    	; 0x28e4 <__cvt_u+0x78>
    298a:	8d 85       	ldd	r24, Y+13	; 0x0d
    298c:	9e 85       	ldd	r25, Y+14	; 0x0e
    298e:	88 0d       	add	r24, r8
    2990:	99 1d       	adc	r25, r9
    2992:	18 16       	cp	r1, r24
    2994:	19 06       	cpc	r1, r25
    2996:	1c f2       	brlt	.-122    	; 0x291e <__cvt_u+0xb2>
    2998:	18 14       	cp	r1, r8
    299a:	19 04       	cpc	r1, r9
    299c:	0c f0       	brlt	.+2      	; 0x29a0 <__cvt_u+0x134>
    299e:	a5 cf       	rjmp	.-182    	; 0x28ea <__cvt_u+0x7e>
    29a0:	ef 85       	ldd	r30, Y+15	; 0x0f
    29a2:	f8 89       	ldd	r31, Y+16	; 0x10
    29a4:	ef 2b       	or	r30, r31
    29a6:	09 f0       	breq	.+2      	; 0x29aa <__cvt_u+0x13e>
    29a8:	ba cf       	rjmp	.-140    	; 0x291e <__cvt_u+0xb2>
    29aa:	9f cf       	rjmp	.-194    	; 0x28ea <__cvt_u+0x7e>
    29ac:	c1 01       	movw	r24, r2
    29ae:	62 96       	adiw	r28, 0x12	; 18
    29b0:	e2 e1       	ldi	r30, 0x12	; 18
    29b2:	0c 94 be 22 	jmp	0x457c	; 0x457c <__epilogue_restores__>

Disassembly of section .text.__fmt_u:

0000351c <__fmt_u>:
    351c:	a2 e0       	ldi	r26, 0x02	; 2
    351e:	b0 e0       	ldi	r27, 0x00	; 0
    3520:	e4 e9       	ldi	r30, 0x94	; 148
    3522:	fa e1       	ldi	r31, 0x1A	; 26
    3524:	0c 94 87 22 	jmp	0x450e	; 0x450e <__prologue_saves__>
    3528:	3c 01       	movw	r6, r24
    352a:	4b 01       	movw	r8, r22
    352c:	fa 01       	movw	r30, r20
    352e:	db 01       	movw	r26, r22
    3530:	12 96       	adiw	r26, 0x02	; 2
    3532:	2d 91       	ld	r18, X+
    3534:	3c 91       	ld	r19, X
    3536:	13 97       	sbiw	r26, 0x03	; 3
    3538:	14 96       	adiw	r26, 0x04	; 4
    353a:	4d 90       	ld	r4, X+
    353c:	5c 90       	ld	r5, X
    353e:	15 97       	sbiw	r26, 0x05	; 5
    3540:	8d 91       	ld	r24, X+
    3542:	9c 91       	ld	r25, X
    3544:	11 97       	sbiw	r26, 0x01	; 1
    3546:	9a 83       	std	Y+2, r25	; 0x02
    3548:	89 83       	std	Y+1, r24	; 0x01
    354a:	16 96       	adiw	r26, 0x06	; 6
    354c:	2d 90       	ld	r2, X+
    354e:	3c 90       	ld	r3, X
    3550:	17 97       	sbiw	r26, 0x07	; 7
    3552:	37 fd       	sbrc	r19, 7
    3554:	03 c0       	rjmp	.+6      	; 0x355c <__fmt_u+0x40>
    3556:	8d 7f       	andi	r24, 0xFD	; 253
    3558:	9a 83       	std	Y+2, r25	; 0x02
    355a:	89 83       	std	Y+1, r24	; 0x01
    355c:	00 81       	ld	r16, Z
    355e:	11 81       	ldd	r17, Z+1	; 0x01
    3560:	22 81       	ldd	r18, Z+2	; 0x02
    3562:	33 81       	ldd	r19, Z+3	; 0x03
    3564:	44 81       	ldd	r20, Z+4	; 0x04
    3566:	55 81       	ldd	r21, Z+5	; 0x05
    3568:	66 81       	ldd	r22, Z+6	; 0x06
    356a:	77 81       	ldd	r23, Z+7	; 0x07
    356c:	fe 01       	movw	r30, r28
    356e:	31 96       	adiw	r30, 0x01	; 1
    3570:	5f 01       	movw	r10, r30
    3572:	8a e0       	ldi	r24, 0x0A	; 10
    3574:	c8 2e       	mov	r12, r24
    3576:	d1 2c       	mov	r13, r1
    3578:	72 01       	movw	r14, r4
    357a:	c4 01       	movw	r24, r8
    357c:	0e 94 36 14 	call	0x286c	; 0x286c <__cvt_u>
    3580:	e9 80       	ldd	r14, Y+1	; 0x01
    3582:	fa 80       	ldd	r15, Y+2	; 0x02
    3584:	d4 01       	movw	r26, r8
    3586:	18 96       	adiw	r26, 0x08	; 8
    3588:	2d 91       	ld	r18, X+
    358a:	3c 91       	ld	r19, X
    358c:	19 97       	sbiw	r26, 0x09	; 9
    358e:	21 50       	subi	r18, 0x01	; 1
    3590:	31 09       	sbc	r19, r1
    3592:	28 1b       	sub	r18, r24
    3594:	39 0b       	sbc	r19, r25
    3596:	82 0d       	add	r24, r2
    3598:	93 1d       	adc	r25, r3
    359a:	ac 01       	movw	r20, r24
    359c:	60 e8       	ldi	r22, 0x80	; 128
    359e:	82 01       	movw	r16, r4
    35a0:	c3 01       	movw	r24, r6
    35a2:	0e 94 12 16 	call	0x2c24	; 0x2c24 <__pad>
    35a6:	9c 01       	movw	r18, r24
    35a8:	f3 01       	movw	r30, r6
    35aa:	80 81       	ld	r24, Z
    35ac:	91 81       	ldd	r25, Z+1	; 0x01
    35ae:	90 ff       	sbrs	r25, 0
    35b0:	08 c0       	rjmp	.+16     	; 0x35c2 <__fmt_u+0xa6>
    35b2:	d4 01       	movw	r26, r8
    35b4:	12 96       	adiw	r26, 0x02	; 2
    35b6:	8d 91       	ld	r24, X+
    35b8:	9c 91       	ld	r25, X
    35ba:	13 97       	sbiw	r26, 0x03	; 3
    35bc:	82 17       	cp	r24, r18
    35be:	93 07       	cpc	r25, r19
    35c0:	0c f4       	brge	.+2      	; 0x35c4 <__fmt_u+0xa8>
    35c2:	c9 01       	movw	r24, r18
    35c4:	22 96       	adiw	r28, 0x02	; 2
    35c6:	e2 e1       	ldi	r30, 0x12	; 18
    35c8:	0c 94 be 22 	jmp	0x457c	; 0x457c <__epilogue_restores__>

Disassembly of section .text.__fmt_x:

000021ac <__fmt_x>:
    21ac:	a4 e1       	ldi	r26, 0x14	; 20
    21ae:	b0 e0       	ldi	r27, 0x00	; 0
    21b0:	ec ed       	ldi	r30, 0xDC	; 220
    21b2:	f0 e1       	ldi	r31, 0x10	; 16
    21b4:	0c 94 87 22 	jmp	0x450e	; 0x450e <__prologue_saves__>
    21b8:	98 87       	std	Y+8, r25	; 0x08
    21ba:	8f 83       	std	Y+7, r24	; 0x07
    21bc:	7a 83       	std	Y+2, r23	; 0x02
    21be:	69 83       	std	Y+1, r22	; 0x01
    21c0:	5c 8b       	std	Y+20, r21	; 0x14
    21c2:	4b 8b       	std	Y+19, r20	; 0x13
    21c4:	12 2f       	mov	r17, r18
    21c6:	db 01       	movw	r26, r22
    21c8:	12 96       	adiw	r26, 0x02	; 2
    21ca:	ed 91       	ld	r30, X+
    21cc:	fc 91       	ld	r31, X
    21ce:	13 97       	sbiw	r26, 0x03	; 3
    21d0:	14 96       	adiw	r26, 0x04	; 4
    21d2:	2d 91       	ld	r18, X+
    21d4:	3c 91       	ld	r19, X
    21d6:	15 97       	sbiw	r26, 0x05	; 5
    21d8:	3e 83       	std	Y+6, r19	; 0x06
    21da:	2d 83       	std	Y+5, r18	; 0x05
    21dc:	ed 90       	ld	r14, X+
    21de:	fc 90       	ld	r15, X
    21e0:	11 97       	sbiw	r26, 0x01	; 1
    21e2:	16 96       	adiw	r26, 0x06	; 6
    21e4:	2d 90       	ld	r2, X+
    21e6:	3c 90       	ld	r3, X
    21e8:	17 97       	sbiw	r26, 0x07	; 7
    21ea:	f7 fd       	sbrc	r31, 7
    21ec:	03 c0       	rjmp	.+6      	; 0x21f4 <__fmt_x+0x48>
    21ee:	e8 94       	clt
    21f0:	e1 f8       	bld	r14, 1
    21f2:	02 c0       	rjmp	.+4      	; 0x21f8 <__fmt_x+0x4c>
    21f4:	e1 e0       	ldi	r30, 0x01	; 1
    21f6:	f0 e0       	ldi	r31, 0x00	; 0
    21f8:	c7 01       	movw	r24, r14
    21fa:	80 71       	andi	r24, 0x10	; 16
    21fc:	99 27       	eor	r25, r25
    21fe:	9a 87       	std	Y+10, r25	; 0x0a
    2200:	89 87       	std	Y+9, r24	; 0x09
    2202:	e4 fe       	sbrs	r14, 4
    2204:	1f c0       	rjmp	.+62     	; 0x2244 <__stack+0x45>
    2206:	ab 89       	ldd	r26, Y+19	; 0x13
    2208:	bc 89       	ldd	r27, Y+20	; 0x14
    220a:	2c 91       	ld	r18, X
    220c:	11 96       	adiw	r26, 0x01	; 1
    220e:	3c 91       	ld	r19, X
    2210:	11 97       	sbiw	r26, 0x01	; 1
    2212:	12 96       	adiw	r26, 0x02	; 2
    2214:	4c 91       	ld	r20, X
    2216:	12 97       	sbiw	r26, 0x02	; 2
    2218:	13 96       	adiw	r26, 0x03	; 3
    221a:	5c 91       	ld	r21, X
    221c:	13 97       	sbiw	r26, 0x03	; 3
    221e:	14 96       	adiw	r26, 0x04	; 4
    2220:	6c 91       	ld	r22, X
    2222:	14 97       	sbiw	r26, 0x04	; 4
    2224:	15 96       	adiw	r26, 0x05	; 5
    2226:	7c 91       	ld	r23, X
    2228:	15 97       	sbiw	r26, 0x05	; 5
    222a:	16 96       	adiw	r26, 0x06	; 6
    222c:	8c 91       	ld	r24, X
    222e:	16 97       	sbiw	r26, 0x06	; 6
    2230:	17 96       	adiw	r26, 0x07	; 7
    2232:	9c 91       	ld	r25, X
    2234:	a0 e0       	ldi	r26, 0x00	; 0
    2236:	0e 94 1d 24 	call	0x483a	; 0x483a <__cmpdi2_s8>
    223a:	21 f0       	breq	.+8      	; 0x2244 <__stack+0x45>
    223c:	8d 81       	ldd	r24, Y+5	; 0x05
    223e:	9e 81       	ldd	r25, Y+6	; 0x06
    2240:	02 97       	sbiw	r24, 0x02	; 2
    2242:	02 c0       	rjmp	.+4      	; 0x2248 <__stack+0x49>
    2244:	8d 81       	ldd	r24, Y+5	; 0x05
    2246:	9e 81       	ldd	r25, Y+6	; 0x06
    2248:	97 01       	movw	r18, r14
    224a:	28 70       	andi	r18, 0x08	; 8
    224c:	33 27       	eor	r19, r19
    224e:	3c 87       	std	Y+12, r19	; 0x0c
    2250:	2b 87       	std	Y+11, r18	; 0x0b
    2252:	e3 fc       	sbrc	r14, 3
    2254:	01 97       	sbiw	r24, 0x01	; 1
    2256:	ab 89       	ldd	r26, Y+19	; 0x13
    2258:	bc 89       	ldd	r27, Y+20	; 0x14
    225a:	4c 90       	ld	r4, X
    225c:	11 96       	adiw	r26, 0x01	; 1
    225e:	5c 90       	ld	r5, X
    2260:	11 97       	sbiw	r26, 0x01	; 1
    2262:	12 96       	adiw	r26, 0x02	; 2
    2264:	6c 90       	ld	r6, X
    2266:	12 97       	sbiw	r26, 0x02	; 2
    2268:	13 96       	adiw	r26, 0x03	; 3
    226a:	7c 90       	ld	r7, X
    226c:	13 97       	sbiw	r26, 0x03	; 3
    226e:	14 96       	adiw	r26, 0x04	; 4
    2270:	8c 90       	ld	r8, X
    2272:	14 97       	sbiw	r26, 0x04	; 4
    2274:	15 96       	adiw	r26, 0x05	; 5
    2276:	9c 90       	ld	r9, X
    2278:	15 97       	sbiw	r26, 0x05	; 5
    227a:	16 96       	adiw	r26, 0x06	; 6
    227c:	ac 90       	ld	r10, X
    227e:	16 97       	sbiw	r26, 0x06	; 6
    2280:	17 96       	adiw	r26, 0x07	; 7
    2282:	bc 90       	ld	r11, X
    2284:	a9 81       	ldd	r26, Y+1	; 0x01
    2286:	ba 81       	ldd	r27, Y+2	; 0x02
    2288:	18 96       	adiw	r26, 0x08	; 8
    228a:	cd 90       	ld	r12, X+
    228c:	dc 90       	ld	r13, X
    228e:	19 97       	sbiw	r26, 0x09	; 9
    2290:	b1 e0       	ldi	r27, 0x01	; 1
    2292:	cb 1a       	sub	r12, r27
    2294:	d1 08       	sbc	r13, r1
    2296:	d1 01       	movw	r26, r2
    2298:	ac 0d       	add	r26, r12
    229a:	bd 1d       	adc	r27, r13
    229c:	1c 92       	st	X, r1
    229e:	9c 83       	std	Y+4, r25	; 0x04
    22a0:	8b 83       	std	Y+3, r24	; 0x03
    22a2:	9f 01       	movw	r18, r30
    22a4:	28 1b       	sub	r18, r24
    22a6:	39 0b       	sbc	r19, r25
    22a8:	3e 87       	std	Y+14, r19	; 0x0e
    22aa:	2d 87       	std	Y+13, r18	; 0x0d
    22ac:	c7 01       	movw	r24, r14
    22ae:	82 70       	andi	r24, 0x02	; 2
    22b0:	99 27       	eor	r25, r25
    22b2:	98 8b       	std	Y+16, r25	; 0x10
    22b4:	8f 87       	std	Y+15, r24	; 0x0f
    22b6:	81 2f       	mov	r24, r17
    22b8:	01 2e       	mov	r0, r17
    22ba:	00 0c       	add	r0, r0
    22bc:	99 0b       	sbc	r25, r25
    22be:	dc 01       	movw	r26, r24
    22c0:	a1 54       	subi	r26, 0x41	; 65
    22c2:	b1 09       	sbc	r27, r1
    22c4:	ba 8b       	std	Y+18, r27	; 0x12
    22c6:	a9 8b       	std	Y+17, r26	; 0x11
    22c8:	32 e0       	ldi	r19, 0x02	; 2
    22ca:	c3 16       	cp	r12, r19
    22cc:	d1 04       	cpc	r13, r1
    22ce:	34 f4       	brge	.+12     	; 0x22dc <__stack+0xdd>
    22d0:	89 85       	ldd	r24, Y+9	; 0x09
    22d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    22d4:	89 2b       	or	r24, r25
    22d6:	09 f0       	breq	.+2      	; 0x22da <__stack+0xdb>
    22d8:	4c c0       	rjmp	.+152    	; 0x2372 <__stack+0x173>
    22da:	73 c0       	rjmp	.+230    	; 0x23c2 <__stack+0x1c3>
    22dc:	92 01       	movw	r18, r4
    22de:	a3 01       	movw	r20, r6
    22e0:	b4 01       	movw	r22, r8
    22e2:	c5 01       	movw	r24, r10
    22e4:	a0 e0       	ldi	r26, 0x00	; 0
    22e6:	0e 94 1d 24 	call	0x483a	; 0x483a <__cmpdi2_s8>
    22ea:	81 f1       	breq	.+96     	; 0x234c <__stack+0x14d>
    22ec:	b1 e0       	ldi	r27, 0x01	; 1
    22ee:	cb 1a       	sub	r12, r27
    22f0:	d1 08       	sbc	r13, r1
    22f2:	c2 01       	movw	r24, r4
    22f4:	8f 70       	andi	r24, 0x0F	; 15
    22f6:	99 27       	eor	r25, r25
    22f8:	8a 30       	cpi	r24, 0x0A	; 10
    22fa:	91 05       	cpc	r25, r1
    22fc:	14 f4       	brge	.+4      	; 0x2302 <__stack+0x103>
    22fe:	c0 96       	adiw	r24, 0x30	; 48
    2300:	02 c0       	rjmp	.+4      	; 0x2306 <__stack+0x107>
    2302:	89 5a       	subi	r24, 0xA9	; 169
    2304:	9f 4f       	sbci	r25, 0xFF	; 255
    2306:	e9 89       	ldd	r30, Y+17	; 0x11
    2308:	fa 89       	ldd	r31, Y+18	; 0x12
    230a:	7a 97       	sbiw	r30, 0x1a	; 26
    230c:	48 f4       	brcc	.+18     	; 0x2320 <__stack+0x121>
    230e:	9c 01       	movw	r18, r24
    2310:	20 62       	ori	r18, 0x20	; 32
    2312:	21 56       	subi	r18, 0x61	; 97
    2314:	31 09       	sbc	r19, r1
    2316:	2a 31       	cpi	r18, 0x1A	; 26
    2318:	31 05       	cpc	r19, r1
    231a:	10 f4       	brcc	.+4      	; 0x2320 <__stack+0x121>
    231c:	0e 94 54 24 	call	0x48a8	; 0x48a8 <toupper>
    2320:	f1 01       	movw	r30, r2
    2322:	ec 0d       	add	r30, r12
    2324:	fd 1d       	adc	r31, r13
    2326:	80 83       	st	Z, r24
    2328:	2b 81       	ldd	r18, Y+3	; 0x03
    232a:	3c 81       	ldd	r19, Y+4	; 0x04
    232c:	21 50       	subi	r18, 0x01	; 1
    232e:	31 09       	sbc	r19, r1
    2330:	3c 83       	std	Y+4, r19	; 0x04
    2332:	2b 83       	std	Y+3, r18	; 0x03
    2334:	92 01       	movw	r18, r4
    2336:	a3 01       	movw	r20, r6
    2338:	b4 01       	movw	r22, r8
    233a:	c5 01       	movw	r24, r10
    233c:	04 e0       	ldi	r16, 0x04	; 4
    233e:	0e 94 31 22 	call	0x4462	; 0x4462 <__lshrdi3>
    2342:	29 01       	movw	r4, r18
    2344:	3a 01       	movw	r6, r20
    2346:	4b 01       	movw	r8, r22
    2348:	5c 01       	movw	r10, r24
    234a:	be cf       	rjmp	.-132    	; 0x22c8 <__stack+0xc9>
    234c:	8d 85       	ldd	r24, Y+13	; 0x0d
    234e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2350:	ab 81       	ldd	r26, Y+3	; 0x03
    2352:	bc 81       	ldd	r27, Y+4	; 0x04
    2354:	8a 0f       	add	r24, r26
    2356:	9b 1f       	adc	r25, r27
    2358:	18 16       	cp	r1, r24
    235a:	19 06       	cpc	r1, r25
    235c:	3c f2       	brlt	.-114    	; 0x22ec <__stack+0xed>
    235e:	1a 16       	cp	r1, r26
    2360:	1b 06       	cpc	r1, r27
    2362:	0c f0       	brlt	.+2      	; 0x2366 <__stack+0x167>
    2364:	b5 cf       	rjmp	.-150    	; 0x22d0 <__stack+0xd1>
    2366:	ef 85       	ldd	r30, Y+15	; 0x0f
    2368:	f8 89       	ldd	r31, Y+16	; 0x10
    236a:	ef 2b       	or	r30, r31
    236c:	09 f0       	breq	.+2      	; 0x2370 <__stack+0x171>
    236e:	be cf       	rjmp	.-132    	; 0x22ec <__stack+0xed>
    2370:	af cf       	rjmp	.-162    	; 0x22d0 <__stack+0xd1>
    2372:	ab 89       	ldd	r26, Y+19	; 0x13
    2374:	bc 89       	ldd	r27, Y+20	; 0x14
    2376:	2c 91       	ld	r18, X
    2378:	11 96       	adiw	r26, 0x01	; 1
    237a:	3c 91       	ld	r19, X
    237c:	11 97       	sbiw	r26, 0x01	; 1
    237e:	12 96       	adiw	r26, 0x02	; 2
    2380:	4c 91       	ld	r20, X
    2382:	12 97       	sbiw	r26, 0x02	; 2
    2384:	13 96       	adiw	r26, 0x03	; 3
    2386:	5c 91       	ld	r21, X
    2388:	13 97       	sbiw	r26, 0x03	; 3
    238a:	14 96       	adiw	r26, 0x04	; 4
    238c:	6c 91       	ld	r22, X
    238e:	14 97       	sbiw	r26, 0x04	; 4
    2390:	15 96       	adiw	r26, 0x05	; 5
    2392:	7c 91       	ld	r23, X
    2394:	15 97       	sbiw	r26, 0x05	; 5
    2396:	16 96       	adiw	r26, 0x06	; 6
    2398:	8c 91       	ld	r24, X
    239a:	16 97       	sbiw	r26, 0x06	; 6
    239c:	17 96       	adiw	r26, 0x07	; 7
    239e:	9c 91       	ld	r25, X
    23a0:	a0 e0       	ldi	r26, 0x00	; 0
    23a2:	0e 94 1d 24 	call	0x483a	; 0x483a <__cmpdi2_s8>
    23a6:	69 f0       	breq	.+26     	; 0x23c2 <__stack+0x1c3>
    23a8:	f1 01       	movw	r30, r2
    23aa:	ec 0d       	add	r30, r12
    23ac:	fd 1d       	adc	r31, r13
    23ae:	31 97       	sbiw	r30, 0x01	; 1
    23b0:	10 83       	st	Z, r17
    23b2:	b2 e0       	ldi	r27, 0x02	; 2
    23b4:	cb 1a       	sub	r12, r27
    23b6:	d1 08       	sbc	r13, r1
    23b8:	f1 01       	movw	r30, r2
    23ba:	ec 0d       	add	r30, r12
    23bc:	fd 1d       	adc	r31, r13
    23be:	80 e3       	ldi	r24, 0x30	; 48
    23c0:	80 83       	st	Z, r24
    23c2:	eb 85       	ldd	r30, Y+11	; 0x0b
    23c4:	fc 85       	ldd	r31, Y+12	; 0x0c
    23c6:	ef 2b       	or	r30, r31
    23c8:	41 f0       	breq	.+16     	; 0x23da <__stack+0x1db>
    23ca:	f1 e0       	ldi	r31, 0x01	; 1
    23cc:	cf 1a       	sub	r12, r31
    23ce:	d1 08       	sbc	r13, r1
    23d0:	f1 01       	movw	r30, r2
    23d2:	ec 0d       	add	r30, r12
    23d4:	fd 1d       	adc	r31, r13
    23d6:	80 e2       	ldi	r24, 0x20	; 32
    23d8:	80 83       	st	Z, r24
    23da:	a9 81       	ldd	r26, Y+1	; 0x01
    23dc:	ba 81       	ldd	r27, Y+2	; 0x02
    23de:	18 96       	adiw	r26, 0x08	; 8
    23e0:	2d 91       	ld	r18, X+
    23e2:	3c 91       	ld	r19, X
    23e4:	19 97       	sbiw	r26, 0x09	; 9
    23e6:	21 50       	subi	r18, 0x01	; 1
    23e8:	31 09       	sbc	r19, r1
    23ea:	2c 19       	sub	r18, r12
    23ec:	3d 09       	sbc	r19, r13
    23ee:	c2 0c       	add	r12, r2
    23f0:	d3 1c       	adc	r13, r3
    23f2:	a6 01       	movw	r20, r12
    23f4:	60 e8       	ldi	r22, 0x80	; 128
    23f6:	0d 81       	ldd	r16, Y+5	; 0x05
    23f8:	1e 81       	ldd	r17, Y+6	; 0x06
    23fa:	8f 81       	ldd	r24, Y+7	; 0x07
    23fc:	98 85       	ldd	r25, Y+8	; 0x08
    23fe:	0e 94 12 16 	call	0x2c24	; 0x2c24 <__pad>
    2402:	9c 01       	movw	r18, r24
    2404:	ef 81       	ldd	r30, Y+7	; 0x07
    2406:	f8 85       	ldd	r31, Y+8	; 0x08
    2408:	80 81       	ld	r24, Z
    240a:	91 81       	ldd	r25, Z+1	; 0x01
    240c:	90 ff       	sbrs	r25, 0
    240e:	09 c0       	rjmp	.+18     	; 0x2422 <__stack+0x223>
    2410:	a9 81       	ldd	r26, Y+1	; 0x01
    2412:	ba 81       	ldd	r27, Y+2	; 0x02
    2414:	12 96       	adiw	r26, 0x02	; 2
    2416:	8d 91       	ld	r24, X+
    2418:	9c 91       	ld	r25, X
    241a:	13 97       	sbiw	r26, 0x03	; 3
    241c:	82 17       	cp	r24, r18
    241e:	93 07       	cpc	r25, r19
    2420:	0c f4       	brge	.+2      	; 0x2424 <__stack+0x225>
    2422:	c9 01       	movw	r24, r18
    2424:	64 96       	adiw	r28, 0x14	; 20
    2426:	e2 e1       	ldi	r30, 0x12	; 18
    2428:	0c 94 be 22 	jmp	0x457c	; 0x457c <__epilogue_restores__>

Disassembly of section .text.__pop_float:

000043e0 <__pop_float>:
    43e0:	fa 01       	movw	r30, r20
    43e2:	60 38       	cpi	r22, 0x80	; 128
    43e4:	71 05       	cpc	r23, r1
    43e6:	cc f0       	brlt	.+50     	; 0x441a <__pop_float+0x3a>
    43e8:	62 38       	cpi	r22, 0x82	; 130
    43ea:	71 05       	cpc	r23, r1
    43ec:	1c f0       	brlt	.+6      	; 0x43f4 <__pop_float+0x14>
    43ee:	63 38       	cpi	r22, 0x83	; 131
    43f0:	71 05       	cpc	r23, r1
    43f2:	99 f4       	brne	.+38     	; 0x441a <__pop_float+0x3a>
    43f4:	a0 81       	ld	r26, Z
    43f6:	b1 81       	ldd	r27, Z+1	; 0x01
    43f8:	9d 01       	movw	r18, r26
    43fa:	2c 5f       	subi	r18, 0xFC	; 252
    43fc:	3f 4f       	sbci	r19, 0xFF	; 255
    43fe:	31 83       	std	Z+1, r19	; 0x01
    4400:	20 83       	st	Z, r18
    4402:	4d 91       	ld	r20, X+
    4404:	5d 91       	ld	r21, X+
    4406:	6d 91       	ld	r22, X+
    4408:	7c 91       	ld	r23, X
    440a:	fc 01       	movw	r30, r24
    440c:	40 83       	st	Z, r20
    440e:	51 83       	std	Z+1, r21	; 0x01
    4410:	62 83       	std	Z+2, r22	; 0x02
    4412:	73 83       	std	Z+3, r23	; 0x03
    4414:	81 e0       	ldi	r24, 0x01	; 1
    4416:	90 e0       	ldi	r25, 0x00	; 0
    4418:	08 95       	ret
    441a:	80 e0       	ldi	r24, 0x00	; 0
    441c:	90 e0       	ldi	r25, 0x00	; 0
    441e:	08 95       	ret

Disassembly of section .text.__pop_int:

000025aa <__pop_int>:
    25aa:	0f 93       	push	r16
    25ac:	1f 93       	push	r17
    25ae:	cf 93       	push	r28
    25b0:	df 93       	push	r29
    25b2:	fc 01       	movw	r30, r24
    25b4:	d9 01       	movw	r26, r18
    25b6:	68 38       	cpi	r22, 0x88	; 136
    25b8:	71 05       	cpc	r23, r1
    25ba:	31 f1       	breq	.+76     	; 0x2608 <__pop_int+0x5e>
    25bc:	94 f4       	brge	.+36     	; 0x25e2 <__pop_int+0x38>
    25be:	61 38       	cpi	r22, 0x81	; 129
    25c0:	71 05       	cpc	r23, r1
    25c2:	b1 f1       	breq	.+108    	; 0x2630 <__pop_int+0x86>
    25c4:	2c f4       	brge	.+10     	; 0x25d0 <__pop_int+0x26>
    25c6:	60 38       	cpi	r22, 0x80	; 128
    25c8:	71 05       	cpc	r23, r1
    25ca:	09 f4       	brne	.+2      	; 0x25ce <__pop_int+0x24>
    25cc:	78 c0       	rjmp	.+240    	; 0x26be <__pop_int+0x114>
    25ce:	9f c0       	rjmp	.+318    	; 0x270e <__pop_int+0x164>
    25d0:	62 38       	cpi	r22, 0x82	; 130
    25d2:	71 05       	cpc	r23, r1
    25d4:	09 f4       	brne	.+2      	; 0x25d8 <__pop_int+0x2e>
    25d6:	59 c0       	rjmp	.+178    	; 0x268a <__pop_int+0xe0>
    25d8:	64 38       	cpi	r22, 0x84	; 132
    25da:	71 05       	cpc	r23, r1
    25dc:	09 f4       	brne	.+2      	; 0x25e0 <__pop_int+0x36>
    25de:	6f c0       	rjmp	.+222    	; 0x26be <__pop_int+0x114>
    25e0:	96 c0       	rjmp	.+300    	; 0x270e <__pop_int+0x164>
    25e2:	60 3a       	cpi	r22, 0xA0	; 160
    25e4:	71 05       	cpc	r23, r1
    25e6:	09 f4       	brne	.+2      	; 0x25ea <__pop_int+0x40>
    25e8:	48 c0       	rjmp	.+144    	; 0x267a <__pop_int+0xd0>
    25ea:	2c f4       	brge	.+10     	; 0x25f6 <__pop_int+0x4c>
    25ec:	60 39       	cpi	r22, 0x90	; 144
    25ee:	71 05       	cpc	r23, r1
    25f0:	09 f4       	brne	.+2      	; 0x25f4 <__pop_int+0x4a>
    25f2:	4b c0       	rjmp	.+150    	; 0x268a <__pop_int+0xe0>
    25f4:	8c c0       	rjmp	.+280    	; 0x270e <__pop_int+0x164>
    25f6:	60 3c       	cpi	r22, 0xC0	; 192
    25f8:	71 05       	cpc	r23, r1
    25fa:	09 f4       	brne	.+2      	; 0x25fe <__pop_int+0x54>
    25fc:	76 c0       	rjmp	.+236    	; 0x26ea <__pop_int+0x140>
    25fe:	60 3f       	cpi	r22, 0xF0	; 240
    2600:	71 05       	cpc	r23, r1
    2602:	09 f4       	brne	.+2      	; 0x2606 <__pop_int+0x5c>
    2604:	72 c0       	rjmp	.+228    	; 0x26ea <__pop_int+0x140>
    2606:	83 c0       	rjmp	.+262    	; 0x270e <__pop_int+0x164>
    2608:	cd 91       	ld	r28, X+
    260a:	dc 91       	ld	r29, X
    260c:	11 97       	sbiw	r26, 0x01	; 1
    260e:	ce 01       	movw	r24, r28
    2610:	02 96       	adiw	r24, 0x02	; 2
    2612:	8d 93       	st	X+, r24
    2614:	9c 93       	st	X, r25
    2616:	45 2b       	or	r20, r21
    2618:	39 f0       	breq	.+14     	; 0x2628 <__pop_int+0x7e>
    261a:	98 81       	ld	r25, Y
    261c:	89 2f       	mov	r24, r25
    261e:	88 0f       	add	r24, r24
    2620:	88 0b       	sbc	r24, r24
    2622:	90 83       	st	Z, r25
    2624:	81 83       	std	Z+1, r24	; 0x01
    2626:	5b c0       	rjmp	.+182    	; 0x26de <__pop_int+0x134>
    2628:	88 81       	ld	r24, Y
    262a:	80 83       	st	Z, r24
    262c:	11 82       	std	Z+1, r1	; 0x01
    262e:	68 c0       	rjmp	.+208    	; 0x2700 <__pop_int+0x156>
    2630:	cd 91       	ld	r28, X+
    2632:	dc 91       	ld	r29, X
    2634:	11 97       	sbiw	r26, 0x01	; 1
    2636:	ce 01       	movw	r24, r28
    2638:	04 96       	adiw	r24, 0x04	; 4
    263a:	8d 93       	st	X+, r24
    263c:	9c 93       	st	X, r25
    263e:	45 2b       	or	r20, r21
    2640:	99 f0       	breq	.+38     	; 0x2668 <__pop_int+0xbe>
    2642:	88 81       	ld	r24, Y
    2644:	99 81       	ldd	r25, Y+1	; 0x01
    2646:	aa 81       	ldd	r26, Y+2	; 0x02
    2648:	bb 81       	ldd	r27, Y+3	; 0x03
    264a:	ac 01       	movw	r20, r24
    264c:	bd 01       	movw	r22, r26
    264e:	77 0f       	add	r23, r23
    2650:	44 0b       	sbc	r20, r20
    2652:	54 2f       	mov	r21, r20
    2654:	ba 01       	movw	r22, r20
    2656:	80 83       	st	Z, r24
    2658:	91 83       	std	Z+1, r25	; 0x01
    265a:	a2 83       	std	Z+2, r26	; 0x02
    265c:	b3 83       	std	Z+3, r27	; 0x03
    265e:	44 83       	std	Z+4, r20	; 0x04
    2660:	45 83       	std	Z+5, r20	; 0x05
    2662:	46 83       	std	Z+6, r20	; 0x06
    2664:	47 83       	std	Z+7, r20	; 0x07
    2666:	28 c0       	rjmp	.+80     	; 0x26b8 <__pop_int+0x10e>
    2668:	08 81       	ld	r16, Y
    266a:	19 81       	ldd	r17, Y+1	; 0x01
    266c:	2a 81       	ldd	r18, Y+2	; 0x02
    266e:	3b 81       	ldd	r19, Y+3	; 0x03
    2670:	00 83       	st	Z, r16
    2672:	11 83       	std	Z+1, r17	; 0x01
    2674:	22 83       	std	Z+2, r18	; 0x02
    2676:	33 83       	std	Z+3, r19	; 0x03
    2678:	45 c0       	rjmp	.+138    	; 0x2704 <__pop_int+0x15a>
    267a:	cd 91       	ld	r28, X+
    267c:	dc 91       	ld	r29, X
    267e:	11 97       	sbiw	r26, 0x01	; 1
    2680:	ce 01       	movw	r24, r28
    2682:	02 96       	adiw	r24, 0x02	; 2
    2684:	8d 93       	st	X+, r24
    2686:	9c 93       	st	X, r25
    2688:	23 c0       	rjmp	.+70     	; 0x26d0 <__pop_int+0x126>
    268a:	cd 91       	ld	r28, X+
    268c:	dc 91       	ld	r29, X
    268e:	11 97       	sbiw	r26, 0x01	; 1
    2690:	ce 01       	movw	r24, r28
    2692:	08 96       	adiw	r24, 0x08	; 8
    2694:	8d 93       	st	X+, r24
    2696:	9c 93       	st	X, r25
    2698:	78 81       	ld	r23, Y
    269a:	69 81       	ldd	r22, Y+1	; 0x01
    269c:	5a 81       	ldd	r21, Y+2	; 0x02
    269e:	4b 81       	ldd	r20, Y+3	; 0x03
    26a0:	3c 81       	ldd	r19, Y+4	; 0x04
    26a2:	2d 81       	ldd	r18, Y+5	; 0x05
    26a4:	9e 81       	ldd	r25, Y+6	; 0x06
    26a6:	8f 81       	ldd	r24, Y+7	; 0x07
    26a8:	70 83       	st	Z, r23
    26aa:	61 83       	std	Z+1, r22	; 0x01
    26ac:	52 83       	std	Z+2, r21	; 0x02
    26ae:	43 83       	std	Z+3, r20	; 0x03
    26b0:	34 83       	std	Z+4, r19	; 0x04
    26b2:	25 83       	std	Z+5, r18	; 0x05
    26b4:	96 83       	std	Z+6, r25	; 0x06
    26b6:	87 83       	std	Z+7, r24	; 0x07
    26b8:	81 e0       	ldi	r24, 0x01	; 1
    26ba:	90 e0       	ldi	r25, 0x00	; 0
    26bc:	2a c0       	rjmp	.+84     	; 0x2712 <__pop_int+0x168>
    26be:	cd 91       	ld	r28, X+
    26c0:	dc 91       	ld	r29, X
    26c2:	11 97       	sbiw	r26, 0x01	; 1
    26c4:	ce 01       	movw	r24, r28
    26c6:	02 96       	adiw	r24, 0x02	; 2
    26c8:	8d 93       	st	X+, r24
    26ca:	9c 93       	st	X, r25
    26cc:	45 2b       	or	r20, r21
    26ce:	a1 f0       	breq	.+40     	; 0x26f8 <__pop_int+0x14e>
    26d0:	99 81       	ldd	r25, Y+1	; 0x01
    26d2:	28 81       	ld	r18, Y
    26d4:	89 2f       	mov	r24, r25
    26d6:	88 0f       	add	r24, r24
    26d8:	88 0b       	sbc	r24, r24
    26da:	20 83       	st	Z, r18
    26dc:	91 83       	std	Z+1, r25	; 0x01
    26de:	82 83       	std	Z+2, r24	; 0x02
    26e0:	83 83       	std	Z+3, r24	; 0x03
    26e2:	84 83       	std	Z+4, r24	; 0x04
    26e4:	85 83       	std	Z+5, r24	; 0x05
    26e6:	86 83       	std	Z+6, r24	; 0x06
    26e8:	e6 cf       	rjmp	.-52     	; 0x26b6 <__pop_int+0x10c>
    26ea:	cd 91       	ld	r28, X+
    26ec:	dc 91       	ld	r29, X
    26ee:	11 97       	sbiw	r26, 0x01	; 1
    26f0:	ce 01       	movw	r24, r28
    26f2:	02 96       	adiw	r24, 0x02	; 2
    26f4:	8d 93       	st	X+, r24
    26f6:	9c 93       	st	X, r25
    26f8:	08 81       	ld	r16, Y
    26fa:	19 81       	ldd	r17, Y+1	; 0x01
    26fc:	00 83       	st	Z, r16
    26fe:	11 83       	std	Z+1, r17	; 0x01
    2700:	12 82       	std	Z+2, r1	; 0x02
    2702:	13 82       	std	Z+3, r1	; 0x03
    2704:	14 82       	std	Z+4, r1	; 0x04
    2706:	15 82       	std	Z+5, r1	; 0x05
    2708:	16 82       	std	Z+6, r1	; 0x06
    270a:	17 82       	std	Z+7, r1	; 0x07
    270c:	d5 cf       	rjmp	.-86     	; 0x26b8 <__pop_int+0x10e>
    270e:	80 e0       	ldi	r24, 0x00	; 0
    2710:	90 e0       	ldi	r25, 0x00	; 0
    2712:	df 91       	pop	r29
    2714:	cf 91       	pop	r28
    2716:	1f 91       	pop	r17
    2718:	0f 91       	pop	r16
    271a:	08 95       	ret

Disassembly of section .text.__pop_ptr:

00002e10 <__pop_ptr>:
    2e10:	cf 93       	push	r28
    2e12:	df 93       	push	r29
    2e14:	dc 01       	movw	r26, r24
    2e16:	f9 01       	movw	r30, r18
    2e18:	64 38       	cpi	r22, 0x84	; 132
    2e1a:	71 05       	cpc	r23, r1
    2e1c:	d9 f1       	breq	.+118    	; 0x2e94 <__pop_ptr+0x84>
    2e1e:	64 f4       	brge	.+24     	; 0x2e38 <__pop_ptr+0x28>
    2e20:	61 38       	cpi	r22, 0x81	; 129
    2e22:	71 05       	cpc	r23, r1
    2e24:	21 f1       	breq	.+72     	; 0x2e6e <__pop_ptr+0x5e>
    2e26:	62 38       	cpi	r22, 0x82	; 130
    2e28:	71 05       	cpc	r23, r1
    2e2a:	09 f4       	brne	.+2      	; 0x2e2e <__pop_ptr+0x1e>
    2e2c:	40 c0       	rjmp	.+128    	; 0x2eae <__pop_ptr+0x9e>
    2e2e:	60 38       	cpi	r22, 0x80	; 128
    2e30:	71 05       	cpc	r23, r1
    2e32:	09 f0       	breq	.+2      	; 0x2e36 <__pop_ptr+0x26>
    2e34:	54 c0       	rjmp	.+168    	; 0x2ede <__pop_ptr+0xce>
    2e36:	2e c0       	rjmp	.+92     	; 0x2e94 <__pop_ptr+0x84>
    2e38:	60 39       	cpi	r22, 0x90	; 144
    2e3a:	71 05       	cpc	r23, r1
    2e3c:	c1 f1       	breq	.+112    	; 0x2eae <__pop_ptr+0x9e>
    2e3e:	84 f4       	brge	.+32     	; 0x2e60 <__pop_ptr+0x50>
    2e40:	68 38       	cpi	r22, 0x88	; 136
    2e42:	71 05       	cpc	r23, r1
    2e44:	09 f0       	breq	.+2      	; 0x2e48 <__pop_ptr+0x38>
    2e46:	4b c0       	rjmp	.+150    	; 0x2ede <__pop_ptr+0xce>
    2e48:	c0 81       	ld	r28, Z
    2e4a:	d1 81       	ldd	r29, Z+1	; 0x01
    2e4c:	ce 01       	movw	r24, r28
    2e4e:	02 96       	adiw	r24, 0x02	; 2
    2e50:	91 83       	std	Z+1, r25	; 0x01
    2e52:	80 83       	st	Z, r24
    2e54:	e8 81       	ld	r30, Y
    2e56:	f9 81       	ldd	r31, Y+1	; 0x01
    2e58:	ed 93       	st	X+, r30
    2e5a:	fc 93       	st	X, r31
    2e5c:	40 83       	st	Z, r20
    2e5e:	3c c0       	rjmp	.+120    	; 0x2ed8 <__pop_ptr+0xc8>
    2e60:	60 3a       	cpi	r22, 0xA0	; 160
    2e62:	71 05       	cpc	r23, r1
    2e64:	b9 f0       	breq	.+46     	; 0x2e94 <__pop_ptr+0x84>
    2e66:	60 3c       	cpi	r22, 0xC0	; 192
    2e68:	71 05       	cpc	r23, r1
    2e6a:	a1 f0       	breq	.+40     	; 0x2e94 <__pop_ptr+0x84>
    2e6c:	38 c0       	rjmp	.+112    	; 0x2ede <__pop_ptr+0xce>
    2e6e:	c0 81       	ld	r28, Z
    2e70:	d1 81       	ldd	r29, Z+1	; 0x01
    2e72:	ce 01       	movw	r24, r28
    2e74:	02 96       	adiw	r24, 0x02	; 2
    2e76:	91 83       	std	Z+1, r25	; 0x01
    2e78:	80 83       	st	Z, r24
    2e7a:	e8 81       	ld	r30, Y
    2e7c:	f9 81       	ldd	r31, Y+1	; 0x01
    2e7e:	ed 93       	st	X+, r30
    2e80:	fc 93       	st	X, r31
    2e82:	05 2e       	mov	r0, r21
    2e84:	00 0c       	add	r0, r0
    2e86:	66 0b       	sbc	r22, r22
    2e88:	77 0b       	sbc	r23, r23
    2e8a:	40 83       	st	Z, r20
    2e8c:	51 83       	std	Z+1, r21	; 0x01
    2e8e:	62 83       	std	Z+2, r22	; 0x02
    2e90:	73 83       	std	Z+3, r23	; 0x03
    2e92:	22 c0       	rjmp	.+68     	; 0x2ed8 <__pop_ptr+0xc8>
    2e94:	c0 81       	ld	r28, Z
    2e96:	d1 81       	ldd	r29, Z+1	; 0x01
    2e98:	ce 01       	movw	r24, r28
    2e9a:	02 96       	adiw	r24, 0x02	; 2
    2e9c:	91 83       	std	Z+1, r25	; 0x01
    2e9e:	80 83       	st	Z, r24
    2ea0:	e8 81       	ld	r30, Y
    2ea2:	f9 81       	ldd	r31, Y+1	; 0x01
    2ea4:	ed 93       	st	X+, r30
    2ea6:	fc 93       	st	X, r31
    2ea8:	51 83       	std	Z+1, r21	; 0x01
    2eaa:	40 83       	st	Z, r20
    2eac:	15 c0       	rjmp	.+42     	; 0x2ed8 <__pop_ptr+0xc8>
    2eae:	c0 81       	ld	r28, Z
    2eb0:	d1 81       	ldd	r29, Z+1	; 0x01
    2eb2:	ce 01       	movw	r24, r28
    2eb4:	02 96       	adiw	r24, 0x02	; 2
    2eb6:	91 83       	std	Z+1, r25	; 0x01
    2eb8:	80 83       	st	Z, r24
    2eba:	e8 81       	ld	r30, Y
    2ebc:	f9 81       	ldd	r31, Y+1	; 0x01
    2ebe:	ed 93       	st	X+, r30
    2ec0:	fc 93       	st	X, r31
    2ec2:	51 83       	std	Z+1, r21	; 0x01
    2ec4:	40 83       	st	Z, r20
    2ec6:	85 2f       	mov	r24, r21
    2ec8:	88 0f       	add	r24, r24
    2eca:	88 0b       	sbc	r24, r24
    2ecc:	82 83       	std	Z+2, r24	; 0x02
    2ece:	83 83       	std	Z+3, r24	; 0x03
    2ed0:	84 83       	std	Z+4, r24	; 0x04
    2ed2:	85 83       	std	Z+5, r24	; 0x05
    2ed4:	86 83       	std	Z+6, r24	; 0x06
    2ed6:	87 83       	std	Z+7, r24	; 0x07
    2ed8:	81 e0       	ldi	r24, 0x01	; 1
    2eda:	90 e0       	ldi	r25, 0x00	; 0
    2edc:	02 c0       	rjmp	.+4      	; 0x2ee2 <__pop_ptr+0xd2>
    2ede:	80 e0       	ldi	r24, 0x00	; 0
    2ee0:	90 e0       	ldi	r25, 0x00	; 0
    2ee2:	df 91       	pop	r29
    2ee4:	cf 91       	pop	r28
    2ee6:	08 95       	ret

Disassembly of section .text.sprintf:

00004706 <sprintf>:
    4706:	a0 e0       	ldi	r26, 0x00	; 0
    4708:	b0 e0       	ldi	r27, 0x00	; 0
    470a:	e9 e8       	ldi	r30, 0x89	; 137
    470c:	f3 e2       	ldi	r31, 0x23	; 35
    470e:	0c 94 97 22 	jmp	0x452e	; 0x452e <__prologue_saves__+0x20>
    4712:	9e 01       	movw	r18, r28
    4714:	25 5f       	subi	r18, 0xF5	; 245
    4716:	3f 4f       	sbci	r19, 0xFF	; 255
    4718:	48 85       	ldd	r20, Y+8	; 0x08
    471a:	59 85       	ldd	r21, Y+9	; 0x09
    471c:	6a 85       	ldd	r22, Y+10	; 0x0a
    471e:	8e 81       	ldd	r24, Y+6	; 0x06
    4720:	9f 81       	ldd	r25, Y+7	; 0x07
    4722:	0e 94 05 24 	call	0x480a	; 0x480a <vsprintf>
    4726:	e2 e0       	ldi	r30, 0x02	; 2
    4728:	0c 94 ce 22 	jmp	0x459c	; 0x459c <__epilogue_restores__+0x20>

Disassembly of section .text.vsprintf:

0000480a <vsprintf>:
    480a:	0f 93       	push	r16
    480c:	1f 93       	push	r17
    480e:	89 01       	movw	r16, r18
    4810:	9a 01       	movw	r18, r20
    4812:	46 2f       	mov	r20, r22
    4814:	6f ef       	ldi	r22, 0xFF	; 255
    4816:	7f e7       	ldi	r23, 0x7F	; 127
    4818:	0e 94 33 1c 	call	0x3866	; 0x3866 <vsnprintf>
    481c:	1f 91       	pop	r17
    481e:	0f 91       	pop	r16
    4820:	08 95       	ret

Disassembly of section .text.atoi:

00003d30 <atoi>:
    3d30:	cf 93       	push	r28
    3d32:	9b 01       	movw	r18, r22
    3d34:	48 2f       	mov	r20, r24
    3d36:	f9 01       	movw	r30, r18
    3d38:	54 2f       	mov	r21, r20
    3d3a:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    3d3e:	60 32       	cpi	r22, 0x20	; 32
    3d40:	b9 f1       	breq	.+110    	; 0x3db0 <atoi+0x80>
    3d42:	86 2f       	mov	r24, r22
    3d44:	06 2e       	mov	r0, r22
    3d46:	00 0c       	add	r0, r0
    3d48:	99 0b       	sbc	r25, r25
    3d4a:	09 97       	sbiw	r24, 0x09	; 9
    3d4c:	05 97       	sbiw	r24, 0x05	; 5
    3d4e:	80 f1       	brcs	.+96     	; 0x3db0 <atoi+0x80>
    3d50:	6b 32       	cpi	r22, 0x2B	; 43
    3d52:	49 f5       	brne	.+82     	; 0x3da6 <atoi+0x76>
    3d54:	a0 e0       	ldi	r26, 0x00	; 0
    3d56:	b0 e0       	ldi	r27, 0x00	; 0
    3d58:	2f 5f       	subi	r18, 0xFF	; 255
    3d5a:	3f 4f       	sbci	r19, 0xFF	; 255
    3d5c:	4f 4f       	sbci	r20, 0xFF	; 255
    3d5e:	02 c0       	rjmp	.+4      	; 0x3d64 <atoi+0x34>
    3d60:	a0 e0       	ldi	r26, 0x00	; 0
    3d62:	b0 e0       	ldi	r27, 0x00	; 0
    3d64:	80 e0       	ldi	r24, 0x00	; 0
    3d66:	90 e0       	ldi	r25, 0x00	; 0
    3d68:	ca e0       	ldi	r28, 0x0A	; 10
    3d6a:	f9 01       	movw	r30, r18
    3d6c:	54 2f       	mov	r21, r20
    3d6e:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    3d72:	06 2e       	mov	r0, r22
    3d74:	00 0c       	add	r0, r0
    3d76:	77 0b       	sbc	r23, r23
    3d78:	60 53       	subi	r22, 0x30	; 48
    3d7a:	71 09       	sbc	r23, r1
    3d7c:	6a 30       	cpi	r22, 0x0A	; 10
    3d7e:	71 05       	cpc	r23, r1
    3d80:	60 f4       	brcc	.+24     	; 0x3d9a <atoi+0x6a>
    3d82:	c8 9f       	mul	r28, r24
    3d84:	f0 01       	movw	r30, r0
    3d86:	c9 9f       	mul	r28, r25
    3d88:	f0 0d       	add	r31, r0
    3d8a:	11 24       	eor	r1, r1
    3d8c:	2f 5f       	subi	r18, 0xFF	; 255
    3d8e:	3f 4f       	sbci	r19, 0xFF	; 255
    3d90:	4f 4f       	sbci	r20, 0xFF	; 255
    3d92:	cf 01       	movw	r24, r30
    3d94:	86 1b       	sub	r24, r22
    3d96:	97 0b       	sbc	r25, r23
    3d98:	e8 cf       	rjmp	.-48     	; 0x3d6a <atoi+0x3a>
    3d9a:	ab 2b       	or	r26, r27
    3d9c:	69 f4       	brne	.+26     	; 0x3db8 <atoi+0x88>
    3d9e:	91 95       	neg	r25
    3da0:	81 95       	neg	r24
    3da2:	91 09       	sbc	r25, r1
    3da4:	09 c0       	rjmp	.+18     	; 0x3db8 <atoi+0x88>
    3da6:	6d 32       	cpi	r22, 0x2D	; 45
    3da8:	d9 f6       	brne	.-74     	; 0x3d60 <atoi+0x30>
    3daa:	a1 e0       	ldi	r26, 0x01	; 1
    3dac:	b0 e0       	ldi	r27, 0x00	; 0
    3dae:	d4 cf       	rjmp	.-88     	; 0x3d58 <atoi+0x28>
    3db0:	2f 5f       	subi	r18, 0xFF	; 255
    3db2:	3f 4f       	sbci	r19, 0xFF	; 255
    3db4:	4f 4f       	sbci	r20, 0xFF	; 255
    3db6:	bf cf       	rjmp	.-130    	; 0x3d36 <atoi+0x6>
    3db8:	cf 91       	pop	r28
    3dba:	08 95       	ret

Disassembly of section .text.memset:

00004896 <memset>:
    4896:	fc 01       	movw	r30, r24
    4898:	48 0f       	add	r20, r24
    489a:	59 1f       	adc	r21, r25
    489c:	e4 17       	cp	r30, r20
    489e:	f5 07       	cpc	r31, r21
    48a0:	11 f0       	breq	.+4      	; 0x48a6 <memset+0x10>
    48a2:	61 93       	st	Z+, r22
    48a4:	fb cf       	rjmp	.-10     	; 0x489c <memset+0x6>
    48a6:	08 95       	ret

Disassembly of section .text.strcmp:

00004318 <strcmp>:
    4318:	cf 92       	push	r12
    431a:	df 92       	push	r13
    431c:	ef 92       	push	r14
    431e:	6b 01       	movw	r12, r22
    4320:	e8 2e       	mov	r14, r24
    4322:	f6 01       	movw	r30, r12
    4324:	5e 2d       	mov	r21, r14
    4326:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    432a:	86 2f       	mov	r24, r22
    432c:	f9 01       	movw	r30, r18
    432e:	54 2f       	mov	r21, r20
    4330:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    4334:	86 13       	cpse	r24, r22
    4336:	0b c0       	rjmp	.+22     	; 0x434e <strcmp+0x36>
    4338:	88 23       	and	r24, r24
    433a:	41 f0       	breq	.+16     	; 0x434c <strcmp+0x34>
    433c:	8f ef       	ldi	r24, 0xFF	; 255
    433e:	c8 1a       	sub	r12, r24
    4340:	d8 0a       	sbc	r13, r24
    4342:	e8 0a       	sbc	r14, r24
    4344:	2f 5f       	subi	r18, 0xFF	; 255
    4346:	3f 4f       	sbci	r19, 0xFF	; 255
    4348:	4f 4f       	sbci	r20, 0xFF	; 255
    434a:	eb cf       	rjmp	.-42     	; 0x4322 <strcmp+0xa>
    434c:	68 2f       	mov	r22, r24
    434e:	90 e0       	ldi	r25, 0x00	; 0
    4350:	86 1b       	sub	r24, r22
    4352:	91 09       	sbc	r25, r1
    4354:	ef 90       	pop	r14
    4356:	df 90       	pop	r13
    4358:	cf 90       	pop	r12
    435a:	08 95       	ret

Disassembly of section .text.strlen:

00004750 <strlen>:
    4750:	9b 01       	movw	r18, r22
    4752:	48 2f       	mov	r20, r24
    4754:	a8 2f       	mov	r26, r24
    4756:	cb 01       	movw	r24, r22
    4758:	fc 01       	movw	r30, r24
    475a:	5a 2f       	mov	r21, r26
    475c:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    4760:	66 23       	and	r22, r22
    4762:	19 f0       	breq	.+6      	; 0x476a <strlen+0x1a>
    4764:	01 96       	adiw	r24, 0x01	; 1
    4766:	a1 1d       	adc	r26, r1
    4768:	f7 cf       	rjmp	.-18     	; 0x4758 <strlen+0x8>
    476a:	64 2f       	mov	r22, r20
    476c:	a9 01       	movw	r20, r18
    476e:	84 1b       	sub	r24, r20
    4770:	95 0b       	sbc	r25, r21
    4772:	08 95       	ret

Disassembly of section .text.tolower:

000048ba <tolower>:
    48ba:	9c 01       	movw	r18, r24
    48bc:	21 54       	subi	r18, 0x41	; 65
    48be:	31 09       	sbc	r19, r1
    48c0:	2a 31       	cpi	r18, 0x1A	; 26
    48c2:	31 05       	cpc	r19, r1
    48c4:	08 f4       	brcc	.+2      	; 0x48c8 <tolower+0xe>
    48c6:	80 62       	ori	r24, 0x20	; 32
    48c8:	08 95       	ret

Disassembly of section .text.toupper:

000048a8 <toupper>:
    48a8:	9c 01       	movw	r18, r24
    48aa:	21 56       	subi	r18, 0x61	; 97
    48ac:	31 09       	sbc	r19, r1
    48ae:	2a 31       	cpi	r18, 0x1A	; 26
    48b0:	31 05       	cpc	r19, r1
    48b2:	10 f4       	brcc	.+4      	; 0x48b8 <toupper+0x10>
    48b4:	8f 75       	andi	r24, 0x5F	; 95
    48b6:	99 27       	eor	r25, r25
    48b8:	08 95       	ret

Disassembly of section .text._Exit:

00004990 <_Exit>:
    4990:	0e 94 bb 00 	call	0x176	; 0x176 <_exit>

Disassembly of section .text.__vsprintf:

00004822 <__vsprintf>:
    4822:	0f 93       	push	r16
    4824:	1f 93       	push	r17
    4826:	89 01       	movw	r16, r18
    4828:	9a 01       	movw	r18, r20
    482a:	46 2f       	mov	r20, r22
    482c:	6f ef       	ldi	r22, 0xFF	; 255
    482e:	7f e7       	ldi	r23, 0x7F	; 127
    4830:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <__vsnprintf>
    4834:	1f 91       	pop	r17
    4836:	0f 91       	pop	r16
    4838:	08 95       	ret

Disassembly of section .text.__vsnprintf:

000037c2 <__vsnprintf>:
    37c2:	6f 92       	push	r6
    37c4:	7f 92       	push	r7
    37c6:	8f 92       	push	r8
    37c8:	ef 92       	push	r14
    37ca:	ff 92       	push	r15
    37cc:	0f 93       	push	r16
    37ce:	1f 93       	push	r17
    37d0:	cf 93       	push	r28
    37d2:	df 93       	push	r29
    37d4:	cd b7       	in	r28, 0x3d	; 61
    37d6:	de b7       	in	r29, 0x3e	; 62
    37d8:	61 97       	sbiw	r28, 0x11	; 17
    37da:	0f b6       	in	r0, 0x3f	; 63
    37dc:	f8 94       	cli
    37de:	de bf       	out	0x3e, r29	; 62
    37e0:	0f be       	out	0x3f, r0	; 63
    37e2:	cd bf       	out	0x3d, r28	; 61
    37e4:	fe 01       	movw	r30, r28
    37e6:	31 96       	adiw	r30, 0x01	; 1
    37e8:	51 e1       	ldi	r21, 0x11	; 17
    37ea:	df 01       	movw	r26, r30
    37ec:	1d 92       	st	X+, r1
    37ee:	5a 95       	dec	r21
    37f0:	e9 f7       	brne	.-6      	; 0x37ec <__vsnprintf+0x2a>
    37f2:	a2 e0       	ldi	r26, 0x02	; 2
    37f4:	b1 e0       	ldi	r27, 0x01	; 1
    37f6:	ba 83       	std	Y+2, r27	; 0x02
    37f8:	a9 83       	std	Y+1, r26	; 0x01
    37fa:	9c 83       	std	Y+4, r25	; 0x04
    37fc:	8b 83       	std	Y+3, r24	; 0x03
    37fe:	77 ff       	sbrs	r23, 7
    3800:	09 c0       	rjmp	.+18     	; 0x3814 <__vsnprintf+0x52>
    3802:	8f e4       	ldi	r24, 0x4F	; 79
    3804:	90 e0       	ldi	r25, 0x00	; 0
    3806:	90 93 0e 05 	sts	0x050E, r25	; 0x80050e <__errno_val+0x1>
    380a:	80 93 0d 05 	sts	0x050D, r24	; 0x80050d <__errno_val>
    380e:	8f ef       	ldi	r24, 0xFF	; 255
    3810:	9f ef       	ldi	r25, 0xFF	; 255
    3812:	19 c0       	rjmp	.+50     	; 0x3846 <__vsnprintf+0x84>
    3814:	39 01       	movw	r6, r18
    3816:	84 2e       	mov	r8, r20
    3818:	7c 01       	movw	r14, r24
    381a:	61 50       	subi	r22, 0x01	; 1
    381c:	71 09       	sbc	r23, r1
    381e:	7f 83       	std	Y+7, r23	; 0x07
    3820:	6e 83       	std	Y+6, r22	; 0x06
    3822:	98 01       	movw	r18, r16
    3824:	68 2d       	mov	r22, r8
    3826:	a3 01       	movw	r20, r6
    3828:	cf 01       	movw	r24, r30
    382a:	0e 94 f1 22 	call	0x45e2	; 0x45e2 <__vfprintf>
    382e:	48 85       	ldd	r20, Y+8	; 0x08
    3830:	59 85       	ldd	r21, Y+9	; 0x09
    3832:	2e 81       	ldd	r18, Y+6	; 0x06
    3834:	3f 81       	ldd	r19, Y+7	; 0x07
    3836:	42 17       	cp	r20, r18
    3838:	53 07       	cpc	r21, r19
    383a:	08 f4       	brcc	.+2      	; 0x383e <__vsnprintf+0x7c>
    383c:	9a 01       	movw	r18, r20
    383e:	f7 01       	movw	r30, r14
    3840:	e2 0f       	add	r30, r18
    3842:	f3 1f       	adc	r31, r19
    3844:	10 82       	st	Z, r1
    3846:	61 96       	adiw	r28, 0x11	; 17
    3848:	0f b6       	in	r0, 0x3f	; 63
    384a:	f8 94       	cli
    384c:	de bf       	out	0x3e, r29	; 62
    384e:	0f be       	out	0x3f, r0	; 63
    3850:	cd bf       	out	0x3d, r28	; 61
    3852:	df 91       	pop	r29
    3854:	cf 91       	pop	r28
    3856:	1f 91       	pop	r17
    3858:	0f 91       	pop	r16
    385a:	ff 90       	pop	r15
    385c:	ef 90       	pop	r14
    385e:	8f 90       	pop	r8
    3860:	7f 90       	pop	r7
    3862:	6f 90       	pop	r6
    3864:	08 95       	ret

Disassembly of section .text.vsnprintf:

00003866 <vsnprintf>:
    3866:	6f 92       	push	r6
    3868:	7f 92       	push	r7
    386a:	8f 92       	push	r8
    386c:	ef 92       	push	r14
    386e:	ff 92       	push	r15
    3870:	0f 93       	push	r16
    3872:	1f 93       	push	r17
    3874:	cf 93       	push	r28
    3876:	df 93       	push	r29
    3878:	cd b7       	in	r28, 0x3d	; 61
    387a:	de b7       	in	r29, 0x3e	; 62
    387c:	61 97       	sbiw	r28, 0x11	; 17
    387e:	0f b6       	in	r0, 0x3f	; 63
    3880:	f8 94       	cli
    3882:	de bf       	out	0x3e, r29	; 62
    3884:	0f be       	out	0x3f, r0	; 63
    3886:	cd bf       	out	0x3d, r28	; 61
    3888:	fe 01       	movw	r30, r28
    388a:	31 96       	adiw	r30, 0x01	; 1
    388c:	51 e1       	ldi	r21, 0x11	; 17
    388e:	df 01       	movw	r26, r30
    3890:	1d 92       	st	X+, r1
    3892:	5a 95       	dec	r21
    3894:	e9 f7       	brne	.-6      	; 0x3890 <vsnprintf+0x2a>
    3896:	a2 e0       	ldi	r26, 0x02	; 2
    3898:	b1 e0       	ldi	r27, 0x01	; 1
    389a:	ba 83       	std	Y+2, r27	; 0x02
    389c:	a9 83       	std	Y+1, r26	; 0x01
    389e:	9c 83       	std	Y+4, r25	; 0x04
    38a0:	8b 83       	std	Y+3, r24	; 0x03
    38a2:	77 ff       	sbrs	r23, 7
    38a4:	09 c0       	rjmp	.+18     	; 0x38b8 <vsnprintf+0x52>
    38a6:	8f e4       	ldi	r24, 0x4F	; 79
    38a8:	90 e0       	ldi	r25, 0x00	; 0
    38aa:	90 93 0e 05 	sts	0x050E, r25	; 0x80050e <__errno_val+0x1>
    38ae:	80 93 0d 05 	sts	0x050D, r24	; 0x80050d <__errno_val>
    38b2:	8f ef       	ldi	r24, 0xFF	; 255
    38b4:	9f ef       	ldi	r25, 0xFF	; 255
    38b6:	19 c0       	rjmp	.+50     	; 0x38ea <vsnprintf+0x84>
    38b8:	39 01       	movw	r6, r18
    38ba:	84 2e       	mov	r8, r20
    38bc:	7c 01       	movw	r14, r24
    38be:	61 50       	subi	r22, 0x01	; 1
    38c0:	71 09       	sbc	r23, r1
    38c2:	7f 83       	std	Y+7, r23	; 0x07
    38c4:	6e 83       	std	Y+6, r22	; 0x06
    38c6:	98 01       	movw	r18, r16
    38c8:	68 2d       	mov	r22, r8
    38ca:	a3 01       	movw	r20, r6
    38cc:	cf 01       	movw	r24, r30
    38ce:	0e 94 d9 22 	call	0x45b2	; 0x45b2 <vfprintf>
    38d2:	48 85       	ldd	r20, Y+8	; 0x08
    38d4:	59 85       	ldd	r21, Y+9	; 0x09
    38d6:	2e 81       	ldd	r18, Y+6	; 0x06
    38d8:	3f 81       	ldd	r19, Y+7	; 0x07
    38da:	42 17       	cp	r20, r18
    38dc:	53 07       	cpc	r21, r19
    38de:	08 f4       	brcc	.+2      	; 0x38e2 <vsnprintf+0x7c>
    38e0:	9a 01       	movw	r18, r20
    38e2:	f7 01       	movw	r30, r14
    38e4:	e2 0f       	add	r30, r18
    38e6:	f3 1f       	adc	r31, r19
    38e8:	10 82       	st	Z, r1
    38ea:	61 96       	adiw	r28, 0x11	; 17
    38ec:	0f b6       	in	r0, 0x3f	; 63
    38ee:	f8 94       	cli
    38f0:	de bf       	out	0x3e, r29	; 62
    38f2:	0f be       	out	0x3f, r0	; 63
    38f4:	cd bf       	out	0x3d, r28	; 61
    38f6:	df 91       	pop	r29
    38f8:	cf 91       	pop	r28
    38fa:	1f 91       	pop	r17
    38fc:	0f 91       	pop	r16
    38fe:	ff 90       	pop	r15
    3900:	ef 90       	pop	r14
    3902:	8f 90       	pop	r8
    3904:	7f 90       	pop	r7
    3906:	6f 90       	pop	r6
    3908:	08 95       	ret

Disassembly of section .text.vfprintf:

000045b2 <vfprintf>:
    45b2:	a2 e0       	ldi	r26, 0x02	; 2
    45b4:	b0 e0       	ldi	r27, 0x00	; 0
    45b6:	ef ed       	ldi	r30, 0xDF	; 223
    45b8:	f2 e2       	ldi	r31, 0x22	; 34
    45ba:	0c 94 95 22 	jmp	0x452a	; 0x452a <__prologue_saves__+0x1c>
    45be:	8c 01       	movw	r16, r24
    45c0:	3a 83       	std	Y+2, r19	; 0x02
    45c2:	29 83       	std	Y+1, r18	; 0x01
    45c4:	9e 01       	movw	r18, r28
    45c6:	2f 5f       	subi	r18, 0xFF	; 255
    45c8:	3f 4f       	sbci	r19, 0xFF	; 255
    45ca:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__printf_core>
    45ce:	f8 01       	movw	r30, r16
    45d0:	20 81       	ld	r18, Z
    45d2:	24 ff       	sbrs	r18, 4
    45d4:	02 c0       	rjmp	.+4      	; 0x45da <vfprintf+0x28>
    45d6:	8f ef       	ldi	r24, 0xFF	; 255
    45d8:	9f ef       	ldi	r25, 0xFF	; 255
    45da:	22 96       	adiw	r28, 0x02	; 2
    45dc:	e4 e0       	ldi	r30, 0x04	; 4
    45de:	0c 94 cc 22 	jmp	0x4598	; 0x4598 <__epilogue_restores__+0x1c>

Disassembly of section .text.__vfprintf:

000045e2 <__vfprintf>:
    45e2:	a2 e0       	ldi	r26, 0x02	; 2
    45e4:	b0 e0       	ldi	r27, 0x00	; 0
    45e6:	e7 ef       	ldi	r30, 0xF7	; 247
    45e8:	f2 e2       	ldi	r31, 0x22	; 34
    45ea:	0c 94 95 22 	jmp	0x452a	; 0x452a <__prologue_saves__+0x1c>
    45ee:	8c 01       	movw	r16, r24
    45f0:	3a 83       	std	Y+2, r19	; 0x02
    45f2:	29 83       	std	Y+1, r18	; 0x01
    45f4:	9e 01       	movw	r18, r28
    45f6:	2f 5f       	subi	r18, 0xFF	; 255
    45f8:	3f 4f       	sbci	r19, 0xFF	; 255
    45fa:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__printf_core>
    45fe:	f8 01       	movw	r30, r16
    4600:	20 81       	ld	r18, Z
    4602:	24 ff       	sbrs	r18, 4
    4604:	02 c0       	rjmp	.+4      	; 0x460a <__vfprintf+0x28>
    4606:	8f ef       	ldi	r24, 0xFF	; 255
    4608:	9f ef       	ldi	r25, 0xFF	; 255
    460a:	22 96       	adiw	r28, 0x02	; 2
    460c:	e4 e0       	ldi	r30, 0x04	; 4
    460e:	0c 94 cc 22 	jmp	0x4598	; 0x4598 <__epilogue_restores__+0x1c>

Disassembly of section .text.__fmt_fp:

00000f12 <__fmt_fp>:
     f12:	a6 e2       	ldi	r26, 0x26	; 38
     f14:	b0 e0       	ldi	r27, 0x00	; 0
     f16:	ef e8       	ldi	r30, 0x8F	; 143
     f18:	f7 e0       	ldi	r31, 0x07	; 7
     f1a:	0c 94 87 22 	jmp	0x450e	; 0x450e <__prologue_saves__>
     f1e:	9f 8f       	std	Y+31, r25	; 0x1f
     f20:	8e 8f       	std	Y+30, r24	; 0x1e
     f22:	79 8f       	std	Y+25, r23	; 0x19
     f24:	68 8f       	std	Y+24, r22	; 0x18
     f26:	12 2f       	mov	r17, r18
     f28:	fb 01       	movw	r30, r22
     f2a:	01 90       	ld	r0, Z+
     f2c:	f0 81       	ld	r31, Z
     f2e:	e0 2d       	mov	r30, r0
     f30:	fa 87       	std	Y+10, r31	; 0x0a
     f32:	e9 87       	std	Y+9, r30	; 0x09
     f34:	fb 01       	movw	r30, r22
     f36:	c2 80       	ldd	r12, Z+2	; 0x02
     f38:	d3 80       	ldd	r13, Z+3	; 0x03
     f3a:	24 81       	ldd	r18, Z+4	; 0x04
     f3c:	35 81       	ldd	r19, Z+5	; 0x05
     f3e:	3c 8b       	std	Y+20, r19	; 0x14
     f40:	2b 8b       	std	Y+19, r18	; 0x13
     f42:	80 85       	ldd	r24, Z+8	; 0x08
     f44:	91 85       	ldd	r25, Z+9	; 0x09
     f46:	99 a3       	std	Y+33, r25	; 0x21
     f48:	88 a3       	std	Y+32, r24	; 0x20
     f4a:	06 80       	ldd	r0, Z+6	; 0x06
     f4c:	f7 81       	ldd	r31, Z+7	; 0x07
     f4e:	e0 2d       	mov	r30, r0
     f50:	fa 83       	std	Y+2, r31	; 0x02
     f52:	e9 83       	std	Y+1, r30	; 0x01
     f54:	fa 01       	movw	r30, r20
     f56:	80 80       	ld	r8, Z
     f58:	91 80       	ldd	r9, Z+1	; 0x01
     f5a:	a2 80       	ldd	r10, Z+2	; 0x02
     f5c:	b3 80       	ldd	r11, Z+3	; 0x03
     f5e:	20 e0       	ldi	r18, 0x00	; 0
     f60:	30 e0       	ldi	r19, 0x00	; 0
     f62:	a9 01       	movw	r20, r18
     f64:	c5 01       	movw	r24, r10
     f66:	b4 01       	movw	r22, r8
     f68:	0e 94 b1 24 	call	0x4962	; 0x4962 <__cmpsf2>
     f6c:	87 ff       	sbrs	r24, 7
     f6e:	06 c0       	rjmp	.+12     	; 0xf7c <__fmt_fp+0x6a>
     f70:	b7 fa       	bst	r11, 7
     f72:	b0 94       	com	r11
     f74:	b7 f8       	bld	r11, 7
     f76:	b0 94       	com	r11
     f78:	8d e2       	ldi	r24, 0x2D	; 45
     f7a:	04 c0       	rjmp	.+8      	; 0xf84 <__fmt_fp+0x72>
     f7c:	f9 85       	ldd	r31, Y+9	; 0x09
     f7e:	f2 ff       	sbrs	r31, 2
     f80:	0c c3       	rjmp	.+1560   	; 0x159a <__EEPROM_REGION_LENGTH__+0x59a>
     f82:	8b e2       	ldi	r24, 0x2B	; 43
     f84:	e9 81       	ldd	r30, Y+1	; 0x01
     f86:	fa 81       	ldd	r31, Y+2	; 0x02
     f88:	80 83       	st	Z, r24
     f8a:	2b 89       	ldd	r18, Y+19	; 0x13
     f8c:	3c 89       	ldd	r19, Y+20	; 0x14
     f8e:	21 50       	subi	r18, 0x01	; 1
     f90:	31 09       	sbc	r19, r1
     f92:	38 87       	std	Y+8, r19	; 0x08
     f94:	2f 83       	std	Y+7, r18	; 0x07
     f96:	41 e0       	ldi	r20, 0x01	; 1
     f98:	50 e0       	ldi	r21, 0x00	; 0
     f9a:	5a 8b       	std	Y+18, r21	; 0x12
     f9c:	49 8b       	std	Y+17, r20	; 0x11
     f9e:	06 c0       	rjmp	.+12     	; 0xfac <__fmt_fp+0x9a>
     fa0:	8b 89       	ldd	r24, Y+19	; 0x13
     fa2:	9c 89       	ldd	r25, Y+20	; 0x14
     fa4:	98 87       	std	Y+8, r25	; 0x08
     fa6:	8f 83       	std	Y+7, r24	; 0x07
     fa8:	1a 8a       	std	Y+18, r1	; 0x12
     faa:	19 8a       	std	Y+17, r1	; 0x11
     fac:	d5 01       	movw	r26, r10
     fae:	c4 01       	movw	r24, r8
     fb0:	bf 77       	andi	r27, 0x7F	; 127
     fb2:	00 97       	sbiw	r24, 0x00	; 0
     fb4:	e0 e8       	ldi	r30, 0x80	; 128
     fb6:	ae 07       	cpc	r26, r30
     fb8:	ef e7       	ldi	r30, 0x7F	; 127
     fba:	be 07       	cpc	r27, r30
     fbc:	d9 f4       	brne	.+54     	; 0xff4 <__fmt_fp+0xe2>
     fbe:	21 2f       	mov	r18, r17
     fc0:	11 0f       	add	r17, r17
     fc2:	33 0b       	sbc	r19, r19
     fc4:	21 54       	subi	r18, 0x41	; 65
     fc6:	31 09       	sbc	r19, r1
     fc8:	89 81       	ldd	r24, Y+1	; 0x01
     fca:	9a 81       	ldd	r25, Y+2	; 0x02
     fcc:	49 89       	ldd	r20, Y+17	; 0x11
     fce:	5a 89       	ldd	r21, Y+18	; 0x12
     fd0:	84 0f       	add	r24, r20
     fd2:	95 1f       	adc	r25, r21
     fd4:	2a 31       	cpi	r18, 0x1A	; 26
     fd6:	31 05       	cpc	r19, r1
     fd8:	20 f4       	brcc	.+8      	; 0xfe2 <__fmt_fp+0xd0>
     fda:	42 eb       	ldi	r20, 0xB2	; 178
     fdc:	56 e0       	ldi	r21, 0x06	; 6
     fde:	60 e0       	ldi	r22, 0x00	; 0
     fe0:	03 c0       	rjmp	.+6      	; 0xfe8 <__fmt_fp+0xd6>
     fe2:	46 eb       	ldi	r20, 0xB6	; 182
     fe4:	56 e0       	ldi	r21, 0x06	; 6
     fe6:	60 e0       	ldi	r22, 0x00	; 0
     fe8:	0e 94 db 23 	call	0x47b6	; 0x47b6 <strcpy>
     fec:	66 eb       	ldi	r22, 0xB6	; 182
     fee:	76 e0       	ldi	r23, 0x06	; 6
     ff0:	80 e0       	ldi	r24, 0x00	; 0
     ff2:	1e c0       	rjmp	.+60     	; 0x1030 <__EEPROM_REGION_LENGTH__+0x30>
     ff4:	01 97       	sbiw	r24, 0x01	; 1
     ff6:	a0 48       	sbci	r26, 0x80	; 128
     ff8:	bf 47       	sbci	r27, 0x7F	; 127
     ffa:	30 f1       	brcs	.+76     	; 0x1048 <__EEPROM_REGION_LENGTH__+0x48>
     ffc:	21 2f       	mov	r18, r17
     ffe:	11 0f       	add	r17, r17
    1000:	33 0b       	sbc	r19, r19
    1002:	21 54       	subi	r18, 0x41	; 65
    1004:	31 09       	sbc	r19, r1
    1006:	89 81       	ldd	r24, Y+1	; 0x01
    1008:	9a 81       	ldd	r25, Y+2	; 0x02
    100a:	49 89       	ldd	r20, Y+17	; 0x11
    100c:	5a 89       	ldd	r21, Y+18	; 0x12
    100e:	84 0f       	add	r24, r20
    1010:	95 1f       	adc	r25, r21
    1012:	2a 31       	cpi	r18, 0x1A	; 26
    1014:	31 05       	cpc	r19, r1
    1016:	20 f4       	brcc	.+8      	; 0x1020 <__EEPROM_REGION_LENGTH__+0x20>
    1018:	4a eb       	ldi	r20, 0xBA	; 186
    101a:	56 e0       	ldi	r21, 0x06	; 6
    101c:	60 e0       	ldi	r22, 0x00	; 0
    101e:	03 c0       	rjmp	.+6      	; 0x1026 <__EEPROM_REGION_LENGTH__+0x26>
    1020:	4e eb       	ldi	r20, 0xBE	; 190
    1022:	56 e0       	ldi	r21, 0x06	; 6
    1024:	60 e0       	ldi	r22, 0x00	; 0
    1026:	0e 94 db 23 	call	0x47b6	; 0x47b6 <strcpy>
    102a:	6e eb       	ldi	r22, 0xBE	; 190
    102c:	76 e0       	ldi	r23, 0x06	; 6
    102e:	80 e0       	ldi	r24, 0x00	; 0
    1030:	0e 94 a8 23 	call	0x4750	; 0x4750 <strlen>
    1034:	e9 81       	ldd	r30, Y+1	; 0x01
    1036:	fa 81       	ldd	r31, Y+2	; 0x02
    1038:	af 01       	movw	r20, r30
    103a:	60 e8       	ldi	r22, 0x80	; 128
    103c:	e9 84       	ldd	r14, Y+9	; 0x09
    103e:	fa 84       	ldd	r15, Y+10	; 0x0a
    1040:	0b 89       	ldd	r16, Y+19	; 0x13
    1042:	1c 89       	ldd	r17, Y+20	; 0x14
    1044:	9c 01       	movw	r18, r24
    1046:	a1 c2       	rjmp	.+1346   	; 0x158a <__EEPROM_REGION_LENGTH__+0x58a>
    1048:	20 e0       	ldi	r18, 0x00	; 0
    104a:	30 e0       	ldi	r19, 0x00	; 0
    104c:	a9 01       	movw	r20, r18
    104e:	c5 01       	movw	r24, r10
    1050:	b4 01       	movw	r22, r8
    1052:	0e 94 b1 24 	call	0x4962	; 0x4962 <__cmpsf2>
    1056:	1b 82       	std	Y+3, r1	; 0x03
    1058:	1c 82       	std	Y+4, r1	; 0x04
    105a:	88 23       	and	r24, r24
    105c:	09 f4       	brne	.+2      	; 0x1060 <__EEPROM_REGION_LENGTH__+0x60>
    105e:	67 c0       	rjmp	.+206    	; 0x112e <__EEPROM_REGION_LENGTH__+0x12e>
    1060:	f0 e8       	ldi	r31, 0x80	; 128
    1062:	fd 83       	std	Y+5, r31	; 0x05
    1064:	2f e3       	ldi	r18, 0x3F	; 63
    1066:	2e 83       	std	Y+6, r18	; 0x06
    1068:	21 2c       	mov	r2, r1
    106a:	31 2c       	mov	r3, r1
    106c:	20 e0       	ldi	r18, 0x00	; 0
    106e:	30 e0       	ldi	r19, 0x00	; 0
    1070:	40 e2       	ldi	r20, 0x20	; 32
    1072:	51 e4       	ldi	r21, 0x41	; 65
    1074:	6b 81       	ldd	r22, Y+3	; 0x03
    1076:	7c 81       	ldd	r23, Y+4	; 0x04
    1078:	8d 81       	ldd	r24, Y+5	; 0x05
    107a:	9e 81       	ldd	r25, Y+6	; 0x06
    107c:	0e 94 bf 24 	call	0x497e	; 0x497e <__mulsf3>
    1080:	f6 2e       	mov	r15, r22
    1082:	07 2f       	mov	r16, r23
    1084:	8d 87       	std	Y+13, r24	; 0x0d
    1086:	9b 87       	std	Y+11, r25	; 0x0b
    1088:	a5 01       	movw	r20, r10
    108a:	94 01       	movw	r18, r8
    108c:	0e 94 b6 24 	call	0x496c	; 0x496c <__gesf2>
    1090:	18 16       	cp	r1, r24
    1092:	54 f0       	brlt	.+20     	; 0x10a8 <__EEPROM_REGION_LENGTH__+0xa8>
    1094:	3f ef       	ldi	r19, 0xFF	; 255
    1096:	23 1a       	sub	r2, r19
    1098:	33 0a       	sbc	r3, r19
    109a:	fb 82       	std	Y+3, r15	; 0x03
    109c:	0c 83       	std	Y+4, r16	; 0x04
    109e:	4d 85       	ldd	r20, Y+13	; 0x0d
    10a0:	4d 83       	std	Y+5, r20	; 0x05
    10a2:	5b 85       	ldd	r21, Y+11	; 0x0b
    10a4:	5e 83       	std	Y+6, r21	; 0x06
    10a6:	e2 cf       	rjmp	.-60     	; 0x106c <__EEPROM_REGION_LENGTH__+0x6c>
    10a8:	1c 86       	std	Y+12, r1	; 0x0c
    10aa:	1b 86       	std	Y+11, r1	; 0x0b
    10ac:	2b 81       	ldd	r18, Y+3	; 0x03
    10ae:	3c 81       	ldd	r19, Y+4	; 0x04
    10b0:	4d 81       	ldd	r20, Y+5	; 0x05
    10b2:	5e 81       	ldd	r21, Y+6	; 0x06
    10b4:	c5 01       	movw	r24, r10
    10b6:	b4 01       	movw	r22, r8
    10b8:	0e 94 b1 24 	call	0x4962	; 0x4962 <__cmpsf2>
    10bc:	87 ff       	sbrs	r24, 7
    10be:	3d c0       	rjmp	.+122    	; 0x113a <__EEPROM_REGION_LENGTH__+0x13a>
    10c0:	84 ed       	ldi	r24, 0xD4	; 212
    10c2:	28 16       	cp	r2, r24
    10c4:	8e ef       	ldi	r24, 0xFE	; 254
    10c6:	38 06       	cpc	r3, r24
    10c8:	04 f5       	brge	.+64     	; 0x110a <__EEPROM_REGION_LENGTH__+0x10a>
    10ca:	eb 85       	ldd	r30, Y+11	; 0x0b
    10cc:	fc 85       	ldd	r31, Y+12	; 0x0c
    10ce:	ef 2b       	or	r30, r31
    10d0:	e1 f4       	brne	.+56     	; 0x110a <__EEPROM_REGION_LENGTH__+0x10a>
    10d2:	20 e0       	ldi	r18, 0x00	; 0
    10d4:	30 e0       	ldi	r19, 0x00	; 0
    10d6:	40 e8       	ldi	r20, 0x80	; 128
    10d8:	5a e5       	ldi	r21, 0x5A	; 90
    10da:	c5 01       	movw	r24, r10
    10dc:	b4 01       	movw	r22, r8
    10de:	0e 94 bf 24 	call	0x497e	; 0x497e <__mulsf3>
    10e2:	4b 01       	movw	r8, r22
    10e4:	5c 01       	movw	r10, r24
    10e6:	20 e0       	ldi	r18, 0x00	; 0
    10e8:	30 e0       	ldi	r19, 0x00	; 0
    10ea:	40 e8       	ldi	r20, 0x80	; 128
    10ec:	5a e5       	ldi	r21, 0x5A	; 90
    10ee:	6b 81       	ldd	r22, Y+3	; 0x03
    10f0:	7c 81       	ldd	r23, Y+4	; 0x04
    10f2:	8d 81       	ldd	r24, Y+5	; 0x05
    10f4:	9e 81       	ldd	r25, Y+6	; 0x06
    10f6:	0e 94 bf 24 	call	0x497e	; 0x497e <__mulsf3>
    10fa:	6b 83       	std	Y+3, r22	; 0x03
    10fc:	7c 83       	std	Y+4, r23	; 0x04
    10fe:	8d 83       	std	Y+5, r24	; 0x05
    1100:	9e 83       	std	Y+6, r25	; 0x06
    1102:	21 e0       	ldi	r18, 0x01	; 1
    1104:	30 e0       	ldi	r19, 0x00	; 0
    1106:	3c 87       	std	Y+12, r19	; 0x0c
    1108:	2b 87       	std	Y+11, r18	; 0x0b
    110a:	20 e0       	ldi	r18, 0x00	; 0
    110c:	30 e0       	ldi	r19, 0x00	; 0
    110e:	40 e2       	ldi	r20, 0x20	; 32
    1110:	51 e4       	ldi	r21, 0x41	; 65
    1112:	6b 81       	ldd	r22, Y+3	; 0x03
    1114:	7c 81       	ldd	r23, Y+4	; 0x04
    1116:	8d 81       	ldd	r24, Y+5	; 0x05
    1118:	9e 81       	ldd	r25, Y+6	; 0x06
    111a:	0e 94 bb 24 	call	0x4976	; 0x4976 <__divsf3>
    111e:	6b 83       	std	Y+3, r22	; 0x03
    1120:	7c 83       	std	Y+4, r23	; 0x04
    1122:	8d 83       	std	Y+5, r24	; 0x05
    1124:	9e 83       	std	Y+6, r25	; 0x06
    1126:	31 e0       	ldi	r19, 0x01	; 1
    1128:	23 1a       	sub	r2, r19
    112a:	31 08       	sbc	r3, r1
    112c:	bf cf       	rjmp	.-130    	; 0x10ac <__EEPROM_REGION_LENGTH__+0xac>
    112e:	40 e8       	ldi	r20, 0x80	; 128
    1130:	4d 83       	std	Y+5, r20	; 0x05
    1132:	5f e3       	ldi	r21, 0x3F	; 63
    1134:	5e 83       	std	Y+6, r21	; 0x06
    1136:	21 2c       	mov	r2, r1
    1138:	31 2c       	mov	r3, r1
    113a:	81 2f       	mov	r24, r17
    113c:	11 0f       	add	r17, r17
    113e:	99 0b       	sbc	r25, r25
    1140:	9b a3       	std	Y+35, r25	; 0x23
    1142:	8a a3       	std	Y+34, r24	; 0x22
    1144:	0e 94 5d 24 	call	0x48ba	; 0x48ba <tolower>
    1148:	8b 8f       	std	Y+27, r24	; 0x1b
    114a:	d7 fc       	sbrc	r13, 7
    114c:	03 c0       	rjmp	.+6      	; 0x1154 <__EEPROM_REGION_LENGTH__+0x154>
    114e:	de a2       	std	Y+38, r13	; 0x26
    1150:	cd a2       	std	Y+37, r12	; 0x25
    1152:	04 c0       	rjmp	.+8      	; 0x115c <__EEPROM_REGION_LENGTH__+0x15c>
    1154:	e6 e0       	ldi	r30, 0x06	; 6
    1156:	f0 e0       	ldi	r31, 0x00	; 0
    1158:	fe a3       	std	Y+38, r31	; 0x26
    115a:	ed a3       	std	Y+37, r30	; 0x25
    115c:	fb 8d       	ldd	r31, Y+27	; 0x1b
    115e:	f7 36       	cpi	r31, 0x67	; 103
    1160:	41 f4       	brne	.+16     	; 0x1172 <__EEPROM_REGION_LENGTH__+0x172>
    1162:	cd 28       	or	r12, r13
    1164:	09 f0       	breq	.+2      	; 0x1168 <__EEPROM_REGION_LENGTH__+0x168>
    1166:	1e c2       	rjmp	.+1084   	; 0x15a4 <__EEPROM_REGION_LENGTH__+0x5a4>
    1168:	21 e0       	ldi	r18, 0x01	; 1
    116a:	30 e0       	ldi	r19, 0x00	; 0
    116c:	3e a3       	std	Y+38, r19	; 0x26
    116e:	2d a3       	std	Y+37, r18	; 0x25
    1170:	19 c2       	rjmp	.+1074   	; 0x15a4 <__EEPROM_REGION_LENGTH__+0x5a4>
    1172:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1174:	8d 8b       	std	Y+21, r24	; 0x15
    1176:	04 c0       	rjmp	.+8      	; 0x1180 <__EEPROM_REGION_LENGTH__+0x180>
    1178:	37 fe       	sbrs	r3, 7
    117a:	25 c2       	rjmp	.+1098   	; 0x15c6 <__EEPROM_REGION_LENGTH__+0x5c6>
    117c:	96 e6       	ldi	r25, 0x66	; 102
    117e:	9d 8b       	std	Y+21, r25	; 0x15
    1180:	ed a1       	ldd	r30, Y+37	; 0x25
    1182:	fe a1       	ldd	r31, Y+38	; 0x26
    1184:	31 96       	adiw	r30, 0x01	; 1
    1186:	fe a3       	std	Y+38, r31	; 0x26
    1188:	ed a3       	std	Y+37, r30	; 0x25
    118a:	fd 89       	ldd	r31, Y+21	; 0x15
    118c:	f6 36       	cpi	r31, 0x66	; 102
    118e:	99 f4       	brne	.+38     	; 0x11b6 <__EEPROM_REGION_LENGTH__+0x1b6>
    1190:	37 fe       	sbrs	r3, 7
    1192:	08 c0       	rjmp	.+16     	; 0x11a4 <__EEPROM_REGION_LENGTH__+0x1a4>
    1194:	1b 82       	std	Y+3, r1	; 0x03
    1196:	1c 82       	std	Y+4, r1	; 0x04
    1198:	20 e8       	ldi	r18, 0x80	; 128
    119a:	2d 83       	std	Y+5, r18	; 0x05
    119c:	3f e3       	ldi	r19, 0x3F	; 63
    119e:	3e 83       	std	Y+6, r19	; 0x06
    11a0:	21 2c       	mov	r2, r1
    11a2:	31 2c       	mov	r3, r1
    11a4:	4b 8d       	ldd	r20, Y+27	; 0x1b
    11a6:	47 36       	cpi	r20, 0x67	; 103
    11a8:	31 f0       	breq	.+12     	; 0x11b6 <__EEPROM_REGION_LENGTH__+0x1b6>
    11aa:	8d a1       	ldd	r24, Y+37	; 0x25
    11ac:	9e a1       	ldd	r25, Y+38	; 0x26
    11ae:	82 0d       	add	r24, r2
    11b0:	93 1d       	adc	r25, r3
    11b2:	9e a3       	std	Y+38, r25	; 0x26
    11b4:	8d a3       	std	Y+37, r24	; 0x25
    11b6:	9b 81       	ldd	r25, Y+3	; 0x03
    11b8:	9b 87       	std	Y+11, r25	; 0x0b
    11ba:	ec 81       	ldd	r30, Y+4	; 0x04
    11bc:	ed 87       	std	Y+13, r30	; 0x0d
    11be:	fd 81       	ldd	r31, Y+5	; 0x05
    11c0:	fe 8b       	std	Y+22, r31	; 0x16
    11c2:	2e 81       	ldd	r18, Y+6	; 0x06
    11c4:	2a 8f       	std	Y+26, r18	; 0x1a
    11c6:	75 01       	movw	r14, r10
    11c8:	64 01       	movw	r12, r8
    11ca:	1d 8e       	std	Y+29, r1	; 0x1d
    11cc:	1c 8e       	std	Y+28, r1	; 0x1c
    11ce:	8c 8d       	ldd	r24, Y+28	; 0x1c
    11d0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    11d2:	ed a1       	ldd	r30, Y+37	; 0x25
    11d4:	fe a1       	ldd	r31, Y+38	; 0x26
    11d6:	8e 17       	cp	r24, r30
    11d8:	9f 07       	cpc	r25, r31
    11da:	c1 f1       	breq	.+112    	; 0x124c <__EEPROM_REGION_LENGTH__+0x24c>
    11dc:	2b 85       	ldd	r18, Y+11	; 0x0b
    11de:	3d 85       	ldd	r19, Y+13	; 0x0d
    11e0:	4e 89       	ldd	r20, Y+22	; 0x16
    11e2:	5a 8d       	ldd	r21, Y+26	; 0x1a
    11e4:	c7 01       	movw	r24, r14
    11e6:	b6 01       	movw	r22, r12
    11e8:	0e 94 bb 24 	call	0x4976	; 0x4976 <__divsf3>
    11ec:	0e 94 79 15 	call	0x2af2	; 0x2af2 <floorf>
    11f0:	2b 01       	movw	r4, r22
    11f2:	3c 01       	movw	r6, r24
    11f4:	0e 94 8f 24 	call	0x491e	; 0x491e <__fixsfsi>
    11f8:	6c a3       	std	Y+36, r22	; 0x24
    11fa:	87 01       	movw	r16, r14
    11fc:	76 01       	movw	r14, r12
    11fe:	17 fb       	bst	r17, 7
    1200:	10 95       	com	r17
    1202:	17 f9       	bld	r17, 7
    1204:	10 95       	com	r17
    1206:	2b 85       	ldd	r18, Y+11	; 0x0b
    1208:	3d 85       	ldd	r19, Y+13	; 0x0d
    120a:	4e 89       	ldd	r20, Y+22	; 0x16
    120c:	5a 8d       	ldd	r21, Y+26	; 0x1a
    120e:	c3 01       	movw	r24, r6
    1210:	b2 01       	movw	r22, r4
    1212:	0e 94 db 14 	call	0x29b6	; 0x29b6 <fmaf>
    1216:	6b 01       	movw	r12, r22
    1218:	7c 01       	movw	r14, r24
    121a:	f7 fa       	bst	r15, 7
    121c:	f0 94       	com	r15
    121e:	f7 f8       	bld	r15, 7
    1220:	f0 94       	com	r15
    1222:	20 e0       	ldi	r18, 0x00	; 0
    1224:	30 e0       	ldi	r19, 0x00	; 0
    1226:	40 e2       	ldi	r20, 0x20	; 32
    1228:	51 e4       	ldi	r21, 0x41	; 65
    122a:	6b 85       	ldd	r22, Y+11	; 0x0b
    122c:	7d 85       	ldd	r23, Y+13	; 0x0d
    122e:	8e 89       	ldd	r24, Y+22	; 0x16
    1230:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1232:	0e 94 bb 24 	call	0x4976	; 0x4976 <__divsf3>
    1236:	6b 87       	std	Y+11, r22	; 0x0b
    1238:	7d 87       	std	Y+13, r23	; 0x0d
    123a:	8e 8b       	std	Y+22, r24	; 0x16
    123c:	9a 8f       	std	Y+26, r25	; 0x1a
    123e:	4c 8d       	ldd	r20, Y+28	; 0x1c
    1240:	5d 8d       	ldd	r21, Y+29	; 0x1d
    1242:	4f 5f       	subi	r20, 0xFF	; 255
    1244:	5f 4f       	sbci	r21, 0xFF	; 255
    1246:	5d 8f       	std	Y+29, r21	; 0x1d
    1248:	4c 8f       	std	Y+28, r20	; 0x1c
    124a:	c1 cf       	rjmp	.-126    	; 0x11ce <__EEPROM_REGION_LENGTH__+0x1ce>
    124c:	20 e0       	ldi	r18, 0x00	; 0
    124e:	30 e0       	ldi	r19, 0x00	; 0
    1250:	40 ea       	ldi	r20, 0xA0	; 160
    1252:	50 e4       	ldi	r21, 0x40	; 64
    1254:	6b 85       	ldd	r22, Y+11	; 0x0b
    1256:	7d 85       	ldd	r23, Y+13	; 0x0d
    1258:	8e 89       	ldd	r24, Y+22	; 0x16
    125a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    125c:	0e 94 bf 24 	call	0x497e	; 0x497e <__mulsf3>
    1260:	2b 01       	movw	r4, r22
    1262:	3c 01       	movw	r6, r24
    1264:	9b 01       	movw	r18, r22
    1266:	ac 01       	movw	r20, r24
    1268:	c7 01       	movw	r24, r14
    126a:	b6 01       	movw	r22, r12
    126c:	0e 94 b1 24 	call	0x4962	; 0x4962 <__cmpsf2>
    1270:	87 fd       	sbrc	r24, 7
    1272:	0b c0       	rjmp	.+22     	; 0x128a <__EEPROM_REGION_LENGTH__+0x28a>
    1274:	a3 01       	movw	r20, r6
    1276:	92 01       	movw	r18, r4
    1278:	c7 01       	movw	r24, r14
    127a:	b6 01       	movw	r22, r12
    127c:	0e 94 b1 24 	call	0x4962	; 0x4962 <__cmpsf2>
    1280:	81 11       	cpse	r24, r1
    1282:	06 c0       	rjmp	.+12     	; 0x1290 <__EEPROM_REGION_LENGTH__+0x290>
    1284:	fc a1       	ldd	r31, Y+36	; 0x24
    1286:	f0 fd       	sbrc	r31, 0
    1288:	03 c0       	rjmp	.+6      	; 0x1290 <__EEPROM_REGION_LENGTH__+0x290>
    128a:	41 2c       	mov	r4, r1
    128c:	51 2c       	mov	r5, r1
    128e:	32 01       	movw	r6, r4
    1290:	a3 01       	movw	r20, r6
    1292:	92 01       	movw	r18, r4
    1294:	c5 01       	movw	r24, r10
    1296:	b4 01       	movw	r22, r8
    1298:	0e 94 89 24 	call	0x4912	; 0x4912 <__addsf3>
    129c:	4b 01       	movw	r8, r22
    129e:	5c 01       	movw	r10, r24
    12a0:	2d 89       	ldd	r18, Y+21	; 0x15
    12a2:	25 36       	cpi	r18, 0x65	; 101
    12a4:	11 f0       	breq	.+4      	; 0x12aa <__EEPROM_REGION_LENGTH__+0x2aa>
    12a6:	31 01       	movw	r6, r2
    12a8:	02 c0       	rjmp	.+4      	; 0x12ae <__EEPROM_REGION_LENGTH__+0x2ae>
    12aa:	61 2c       	mov	r6, r1
    12ac:	71 2c       	mov	r7, r1
    12ae:	23 01       	movw	r4, r6
    12b0:	4d a1       	ldd	r20, Y+37	; 0x25
    12b2:	5e a1       	ldd	r21, Y+38	; 0x26
    12b4:	44 1a       	sub	r4, r20
    12b6:	55 0a       	sbc	r5, r21
    12b8:	c9 88       	ldd	r12, Y+17	; 0x11
    12ba:	da 88       	ldd	r13, Y+18	; 0x12
    12bc:	00 e0       	ldi	r16, 0x00	; 0
    12be:	10 e0       	ldi	r17, 0x00	; 0
    12c0:	1c 86       	std	Y+12, r1	; 0x0c
    12c2:	1b 86       	std	Y+11, r1	; 0x0b
    12c4:	89 85       	ldd	r24, Y+9	; 0x09
    12c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    12c8:	80 71       	andi	r24, 0x10	; 16
    12ca:	99 27       	eor	r25, r25
    12cc:	9f 8b       	std	Y+23, r25	; 0x17
    12ce:	8e 8b       	std	Y+22, r24	; 0x16
    12d0:	64 14       	cp	r6, r4
    12d2:	75 04       	cpc	r7, r5
    12d4:	31 f4       	brne	.+12     	; 0x12e2 <__EEPROM_REGION_LENGTH__+0x2e2>
    12d6:	8b 85       	ldd	r24, Y+11	; 0x0b
    12d8:	9c 85       	ldd	r25, Y+12	; 0x0c
    12da:	89 2b       	or	r24, r25
    12dc:	09 f4       	brne	.+2      	; 0x12e0 <__EEPROM_REGION_LENGTH__+0x2e0>
    12de:	9a c0       	rjmp	.+308    	; 0x1414 <__EEPROM_REGION_LENGTH__+0x414>
    12e0:	a6 c0       	rjmp	.+332    	; 0x142e <__EEPROM_REGION_LENGTH__+0x42e>
    12e2:	dd 8e       	std	Y+29, r13	; 0x1d
    12e4:	cc 8e       	std	Y+28, r12	; 0x1c
    12e6:	e8 8d       	ldd	r30, Y+24	; 0x18
    12e8:	f9 8d       	ldd	r31, Y+25	; 0x19
    12ea:	80 85       	ldd	r24, Z+8	; 0x08
    12ec:	91 85       	ldd	r25, Z+9	; 0x09
    12ee:	05 97       	sbiw	r24, 0x05	; 5
    12f0:	c8 16       	cp	r12, r24
    12f2:	d9 06       	cpc	r13, r25
    12f4:	80 f7       	brcc	.-32     	; 0x12d6 <__EEPROM_REGION_LENGTH__+0x2d6>
    12f6:	2b 81       	ldd	r18, Y+3	; 0x03
    12f8:	3c 81       	ldd	r19, Y+4	; 0x04
    12fa:	4d 81       	ldd	r20, Y+5	; 0x05
    12fc:	5e 81       	ldd	r21, Y+6	; 0x06
    12fe:	c5 01       	movw	r24, r10
    1300:	b4 01       	movw	r22, r8
    1302:	0e 94 bb 24 	call	0x4976	; 0x4976 <__divsf3>
    1306:	0e 94 79 15 	call	0x2af2	; 0x2af2 <floorf>
    130a:	6d 87       	std	Y+13, r22	; 0x0d
    130c:	7e 87       	std	Y+14, r23	; 0x0e
    130e:	8f 87       	std	Y+15, r24	; 0x0f
    1310:	98 8b       	std	Y+16, r25	; 0x10
    1312:	0e 94 8f 24 	call	0x491e	; 0x491e <__fixsfsi>
    1316:	cb 01       	movw	r24, r22
    1318:	ee 89       	ldd	r30, Y+22	; 0x16
    131a:	ff 89       	ldd	r31, Y+23	; 0x17
    131c:	ef 2b       	or	r30, r31
    131e:	69 f4       	brne	.+26     	; 0x133a <__EEPROM_REGION_LENGTH__+0x33a>
    1320:	89 2b       	or	r24, r25
    1322:	59 f4       	brne	.+22     	; 0x133a <__EEPROM_REGION_LENGTH__+0x33a>
    1324:	fb 8d       	ldd	r31, Y+27	; 0x1b
    1326:	f7 36       	cpi	r31, 0x67	; 103
    1328:	41 f4       	brne	.+16     	; 0x133a <__EEPROM_REGION_LENGTH__+0x33a>
    132a:	77 fe       	sbrs	r7, 7
    132c:	06 c0       	rjmp	.+12     	; 0x133a <__EEPROM_REGION_LENGTH__+0x33a>
    132e:	98 01       	movw	r18, r16
    1330:	2f 5f       	subi	r18, 0xFF	; 255
    1332:	3f 4f       	sbci	r19, 0xFF	; 255
    1334:	3d 8f       	std	Y+29, r19	; 0x1d
    1336:	2c 8f       	std	Y+28, r18	; 0x1c
    1338:	43 c0       	rjmp	.+134    	; 0x13c0 <__EEPROM_REGION_LENGTH__+0x3c0>
    133a:	4b 85       	ldd	r20, Y+11	; 0x0b
    133c:	5c 85       	ldd	r21, Y+12	; 0x0c
    133e:	45 2b       	or	r20, r21
    1340:	b1 f4       	brne	.+44     	; 0x136e <__EEPROM_REGION_LENGTH__+0x36e>
    1342:	77 fe       	sbrs	r7, 7
    1344:	14 c0       	rjmp	.+40     	; 0x136e <__EEPROM_REGION_LENGTH__+0x36e>
    1346:	5f ef       	ldi	r21, 0xFF	; 255
    1348:	c5 1a       	sub	r12, r21
    134a:	d5 0a       	sbc	r13, r21
    134c:	e9 81       	ldd	r30, Y+1	; 0x01
    134e:	fa 81       	ldd	r31, Y+2	; 0x02
    1350:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1352:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1354:	e8 0f       	add	r30, r24
    1356:	f9 1f       	adc	r31, r25
    1358:	9e e2       	ldi	r25, 0x2E	; 46
    135a:	90 83       	st	Z, r25
    135c:	ef 81       	ldd	r30, Y+7	; 0x07
    135e:	f8 85       	ldd	r31, Y+8	; 0x08
    1360:	31 97       	sbiw	r30, 0x01	; 1
    1362:	f8 87       	std	Y+8, r31	; 0x08
    1364:	ef 83       	std	Y+7, r30	; 0x07
    1366:	21 e0       	ldi	r18, 0x01	; 1
    1368:	30 e0       	ldi	r19, 0x00	; 0
    136a:	3c 87       	std	Y+12, r19	; 0x0c
    136c:	2b 87       	std	Y+11, r18	; 0x0b
    136e:	e9 81       	ldd	r30, Y+1	; 0x01
    1370:	fa 81       	ldd	r31, Y+2	; 0x02
    1372:	ec 0d       	add	r30, r12
    1374:	fd 1d       	adc	r31, r13
    1376:	1d 8f       	std	Y+29, r17	; 0x1d
    1378:	0c 8f       	std	Y+28, r16	; 0x1c
    137a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    137c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    137e:	89 2b       	or	r24, r25
    1380:	49 f0       	breq	.+18     	; 0x1394 <__EEPROM_REGION_LENGTH__+0x394>
    1382:	30 e3       	ldi	r19, 0x30	; 48
    1384:	31 93       	st	Z+, r19
    1386:	4c 8d       	ldd	r20, Y+28	; 0x1c
    1388:	5d 8d       	ldd	r21, Y+29	; 0x1d
    138a:	41 50       	subi	r20, 0x01	; 1
    138c:	51 09       	sbc	r21, r1
    138e:	5d 8f       	std	Y+29, r21	; 0x1d
    1390:	4c 8f       	std	Y+28, r20	; 0x1c
    1392:	f3 cf       	rjmp	.-26     	; 0x137a <__EEPROM_REGION_LENGTH__+0x37a>
    1394:	c8 01       	movw	r24, r16
    1396:	8c 0d       	add	r24, r12
    1398:	9d 1d       	adc	r25, r13
    139a:	2f 81       	ldd	r18, Y+7	; 0x07
    139c:	38 85       	ldd	r19, Y+8	; 0x08
    139e:	20 1b       	sub	r18, r16
    13a0:	31 0b       	sbc	r19, r17
    13a2:	6c 01       	movw	r12, r24
    13a4:	ef ef       	ldi	r30, 0xFF	; 255
    13a6:	ce 1a       	sub	r12, r30
    13a8:	de 0a       	sbc	r13, r30
    13aa:	e9 81       	ldd	r30, Y+1	; 0x01
    13ac:	fa 81       	ldd	r31, Y+2	; 0x02
    13ae:	e8 0f       	add	r30, r24
    13b0:	f9 1f       	adc	r31, r25
    13b2:	60 5d       	subi	r22, 0xD0	; 208
    13b4:	60 83       	st	Z, r22
    13b6:	a9 01       	movw	r20, r18
    13b8:	41 50       	subi	r20, 0x01	; 1
    13ba:	51 09       	sbc	r21, r1
    13bc:	58 87       	std	Y+8, r21	; 0x08
    13be:	4f 83       	std	Y+7, r20	; 0x07
    13c0:	85 01       	movw	r16, r10
    13c2:	74 01       	movw	r14, r8
    13c4:	17 fb       	bst	r17, 7
    13c6:	10 95       	com	r17
    13c8:	17 f9       	bld	r17, 7
    13ca:	10 95       	com	r17
    13cc:	2b 81       	ldd	r18, Y+3	; 0x03
    13ce:	3c 81       	ldd	r19, Y+4	; 0x04
    13d0:	4d 81       	ldd	r20, Y+5	; 0x05
    13d2:	5e 81       	ldd	r21, Y+6	; 0x06
    13d4:	6d 85       	ldd	r22, Y+13	; 0x0d
    13d6:	7e 85       	ldd	r23, Y+14	; 0x0e
    13d8:	8f 85       	ldd	r24, Y+15	; 0x0f
    13da:	98 89       	ldd	r25, Y+16	; 0x10
    13dc:	0e 94 db 14 	call	0x29b6	; 0x29b6 <fmaf>
    13e0:	4b 01       	movw	r8, r22
    13e2:	5c 01       	movw	r10, r24
    13e4:	b7 fa       	bst	r11, 7
    13e6:	b0 94       	com	r11
    13e8:	b7 f8       	bld	r11, 7
    13ea:	b0 94       	com	r11
    13ec:	20 e0       	ldi	r18, 0x00	; 0
    13ee:	30 e0       	ldi	r19, 0x00	; 0
    13f0:	40 e2       	ldi	r20, 0x20	; 32
    13f2:	51 e4       	ldi	r21, 0x41	; 65
    13f4:	6b 81       	ldd	r22, Y+3	; 0x03
    13f6:	7c 81       	ldd	r23, Y+4	; 0x04
    13f8:	8d 81       	ldd	r24, Y+5	; 0x05
    13fa:	9e 81       	ldd	r25, Y+6	; 0x06
    13fc:	0e 94 bb 24 	call	0x4976	; 0x4976 <__divsf3>
    1400:	6b 83       	std	Y+3, r22	; 0x03
    1402:	7c 83       	std	Y+4, r23	; 0x04
    1404:	8d 83       	std	Y+5, r24	; 0x05
    1406:	9e 83       	std	Y+6, r25	; 0x06
    1408:	51 e0       	ldi	r21, 0x01	; 1
    140a:	65 1a       	sub	r6, r21
    140c:	71 08       	sbc	r7, r1
    140e:	0c 8d       	ldd	r16, Y+28	; 0x1c
    1410:	1d 8d       	ldd	r17, Y+29	; 0x1d
    1412:	5e cf       	rjmp	.-324    	; 0x12d0 <__EEPROM_REGION_LENGTH__+0x2d0>
    1414:	f9 85       	ldd	r31, Y+9	; 0x09
    1416:	f4 ff       	sbrs	r31, 4
    1418:	0a c0       	rjmp	.+20     	; 0x142e <__EEPROM_REGION_LENGTH__+0x42e>
    141a:	e9 81       	ldd	r30, Y+1	; 0x01
    141c:	fa 81       	ldd	r31, Y+2	; 0x02
    141e:	ec 0d       	add	r30, r12
    1420:	fd 1d       	adc	r31, r13
    1422:	8e e2       	ldi	r24, 0x2E	; 46
    1424:	80 83       	st	Z, r24
    1426:	96 01       	movw	r18, r12
    1428:	2f 5f       	subi	r18, 0xFF	; 255
    142a:	3f 4f       	sbci	r19, 0xFF	; 255
    142c:	69 01       	movw	r12, r18
    142e:	49 81       	ldd	r20, Y+1	; 0x01
    1430:	5a 81       	ldd	r21, Y+2	; 0x02
    1432:	4c 0d       	add	r20, r12
    1434:	5d 1d       	adc	r21, r13
    1436:	5c 87       	std	Y+12, r21	; 0x0c
    1438:	4b 87       	std	Y+11, r20	; 0x0b
    143a:	fa 01       	movw	r30, r20
    143c:	10 82       	st	Z, r1
    143e:	fd 89       	ldd	r31, Y+21	; 0x15
    1440:	f5 36       	cpi	r31, 0x65	; 101
    1442:	09 f0       	breq	.+2      	; 0x1446 <__EEPROM_REGION_LENGTH__+0x446>
    1444:	61 c0       	rjmp	.+194    	; 0x1508 <__EEPROM_REGION_LENGTH__+0x508>
    1446:	e9 81       	ldd	r30, Y+1	; 0x01
    1448:	fa 81       	ldd	r31, Y+2	; 0x02
    144a:	28 a1       	ldd	r18, Y+32	; 0x20
    144c:	39 a1       	ldd	r19, Y+33	; 0x21
    144e:	e2 0f       	add	r30, r18
    1450:	f3 1f       	adc	r31, r19
    1452:	31 97       	sbiw	r30, 0x01	; 1
    1454:	10 82       	st	Z, r1
    1456:	37 fe       	sbrs	r3, 7
    1458:	06 c0       	rjmp	.+12     	; 0x1466 <__EEPROM_REGION_LENGTH__+0x466>
    145a:	31 94       	neg	r3
    145c:	21 94       	neg	r2
    145e:	31 08       	sbc	r3, r1
    1460:	01 e0       	ldi	r16, 0x01	; 1
    1462:	10 e0       	ldi	r17, 0x00	; 0
    1464:	02 c0       	rjmp	.+4      	; 0x146a <__EEPROM_REGION_LENGTH__+0x46a>
    1466:	00 e0       	ldi	r16, 0x00	; 0
    1468:	10 e0       	ldi	r17, 0x00	; 0
    146a:	e8 a1       	ldd	r30, Y+32	; 0x20
    146c:	f9 a1       	ldd	r31, Y+33	; 0x21
    146e:	31 97       	sbiw	r30, 0x01	; 1
    1470:	49 81       	ldd	r20, Y+1	; 0x01
    1472:	5a 81       	ldd	r21, Y+2	; 0x02
    1474:	e4 0f       	add	r30, r20
    1476:	f5 1f       	adc	r31, r21
    1478:	22 e0       	ldi	r18, 0x02	; 2
    147a:	30 e0       	ldi	r19, 0x00	; 0
    147c:	8a e0       	ldi	r24, 0x0A	; 10
    147e:	e8 2e       	mov	r14, r24
    1480:	f1 2c       	mov	r15, r1
    1482:	cf 01       	movw	r24, r30
    1484:	49 81       	ldd	r20, Y+1	; 0x01
    1486:	5a 81       	ldd	r21, Y+2	; 0x02
    1488:	84 1b       	sub	r24, r20
    148a:	95 0b       	sbc	r25, r21
    148c:	21 14       	cp	r2, r1
    148e:	31 04       	cpc	r3, r1
    1490:	79 f0       	breq	.+30     	; 0x14b0 <__EEPROM_REGION_LENGTH__+0x4b0>
    1492:	c1 01       	movw	r24, r2
    1494:	b7 01       	movw	r22, r14
    1496:	0e 94 35 23 	call	0x466a	; 0x466a <__divmodhi4>
    149a:	80 5d       	subi	r24, 0xD0	; 208
    149c:	82 93       	st	-Z, r24
    149e:	1b 01       	movw	r2, r22
    14a0:	21 50       	subi	r18, 0x01	; 1
    14a2:	31 09       	sbc	r19, r1
    14a4:	8f 81       	ldd	r24, Y+7	; 0x07
    14a6:	98 85       	ldd	r25, Y+8	; 0x08
    14a8:	01 97       	sbiw	r24, 0x01	; 1
    14aa:	98 87       	std	Y+8, r25	; 0x08
    14ac:	8f 83       	std	Y+7, r24	; 0x07
    14ae:	e9 cf       	rjmp	.-46     	; 0x1482 <__EEPROM_REGION_LENGTH__+0x482>
    14b0:	12 16       	cp	r1, r18
    14b2:	13 06       	cpc	r1, r19
    14b4:	74 f3       	brlt	.-36     	; 0x1492 <__EEPROM_REGION_LENGTH__+0x492>
    14b6:	fc 01       	movw	r30, r24
    14b8:	31 97       	sbiw	r30, 0x01	; 1
    14ba:	e4 0f       	add	r30, r20
    14bc:	f5 1f       	adc	r31, r21
    14be:	01 2b       	or	r16, r17
    14c0:	11 f4       	brne	.+4      	; 0x14c6 <__EEPROM_REGION_LENGTH__+0x4c6>
    14c2:	2b e2       	ldi	r18, 0x2B	; 43
    14c4:	01 c0       	rjmp	.+2      	; 0x14c8 <__EEPROM_REGION_LENGTH__+0x4c8>
    14c6:	2d e2       	ldi	r18, 0x2D	; 45
    14c8:	20 83       	st	Z, r18
    14ca:	02 97       	sbiw	r24, 0x02	; 2
    14cc:	e9 81       	ldd	r30, Y+1	; 0x01
    14ce:	fa 81       	ldd	r31, Y+2	; 0x02
    14d0:	e8 0f       	add	r30, r24
    14d2:	f9 1f       	adc	r31, r25
    14d4:	2a a1       	ldd	r18, Y+34	; 0x22
    14d6:	3b a1       	ldd	r19, Y+35	; 0x23
    14d8:	21 54       	subi	r18, 0x41	; 65
    14da:	31 09       	sbc	r19, r1
    14dc:	2a 31       	cpi	r18, 0x1A	; 26
    14de:	31 05       	cpc	r19, r1
    14e0:	10 f0       	brcs	.+4      	; 0x14e6 <__EEPROM_REGION_LENGTH__+0x4e6>
    14e2:	25 e6       	ldi	r18, 0x65	; 101
    14e4:	01 c0       	rjmp	.+2      	; 0x14e8 <__EEPROM_REGION_LENGTH__+0x4e8>
    14e6:	25 e4       	ldi	r18, 0x45	; 69
    14e8:	20 83       	st	Z, r18
    14ea:	2f 81       	ldd	r18, Y+7	; 0x07
    14ec:	38 85       	ldd	r19, Y+8	; 0x08
    14ee:	22 50       	subi	r18, 0x02	; 2
    14f0:	31 09       	sbc	r19, r1
    14f2:	38 87       	std	Y+8, r19	; 0x08
    14f4:	2f 83       	std	Y+7, r18	; 0x07
    14f6:	c8 16       	cp	r12, r24
    14f8:	d9 06       	cpc	r13, r25
    14fa:	34 f4       	brge	.+12     	; 0x1508 <__EEPROM_REGION_LENGTH__+0x508>
    14fc:	af 01       	movw	r20, r30
    14fe:	60 e8       	ldi	r22, 0x80	; 128
    1500:	8b 85       	ldd	r24, Y+11	; 0x0b
    1502:	9c 85       	ldd	r25, Y+12	; 0x0c
    1504:	0e 94 db 23 	call	0x47b6	; 0x47b6 <strcpy>
    1508:	49 81       	ldd	r20, Y+1	; 0x01
    150a:	5a 81       	ldd	r21, Y+2	; 0x02
    150c:	3a 01       	movw	r6, r20
    150e:	80 e8       	ldi	r24, 0x80	; 128
    1510:	88 2e       	mov	r8, r24
    1512:	99 85       	ldd	r25, Y+9	; 0x09
    1514:	91 ff       	sbrs	r25, 1
    1516:	2e c0       	rjmp	.+92     	; 0x1574 <__EEPROM_REGION_LENGTH__+0x574>
    1518:	90 fd       	sbrc	r25, 0
    151a:	2c c0       	rjmp	.+88     	; 0x1574 <__EEPROM_REGION_LENGTH__+0x574>
    151c:	ef 81       	ldd	r30, Y+7	; 0x07
    151e:	f8 85       	ldd	r31, Y+8	; 0x08
    1520:	1e 16       	cp	r1, r30
    1522:	1f 06       	cpc	r1, r31
    1524:	3c f5       	brge	.+78     	; 0x1574 <__EEPROM_REGION_LENGTH__+0x574>
    1526:	88 2d       	mov	r24, r8
    1528:	b3 01       	movw	r22, r6
    152a:	0e 94 a8 23 	call	0x4750	; 0x4750 <strlen>
    152e:	29 81       	ldd	r18, Y+1	; 0x01
    1530:	3a 81       	ldd	r19, Y+2	; 0x02
    1532:	82 0f       	add	r24, r18
    1534:	93 1f       	adc	r25, r19
    1536:	9c 01       	movw	r18, r24
    1538:	49 81       	ldd	r20, Y+1	; 0x01
    153a:	5a 81       	ldd	r21, Y+2	; 0x02
    153c:	24 1b       	sub	r18, r20
    153e:	35 0b       	sbc	r19, r21
    1540:	e9 89       	ldd	r30, Y+17	; 0x11
    1542:	fa 89       	ldd	r31, Y+18	; 0x12
    1544:	2e 17       	cp	r18, r30
    1546:	3f 07       	cpc	r19, r31
    1548:	4c f0       	brlt	.+18     	; 0x155c <__EEPROM_REGION_LENGTH__+0x55c>
    154a:	fc 01       	movw	r30, r24
    154c:	20 81       	ld	r18, Z
    154e:	ef 81       	ldd	r30, Y+7	; 0x07
    1550:	f8 85       	ldd	r31, Y+8	; 0x08
    1552:	e8 0f       	add	r30, r24
    1554:	f9 1f       	adc	r31, r25
    1556:	20 83       	st	Z, r18
    1558:	01 97       	sbiw	r24, 0x01	; 1
    155a:	ed cf       	rjmp	.-38     	; 0x1536 <__EEPROM_REGION_LENGTH__+0x536>
    155c:	4f 81       	ldd	r20, Y+7	; 0x07
    155e:	58 85       	ldd	r21, Y+8	; 0x08
    1560:	60 e3       	ldi	r22, 0x30	; 48
    1562:	70 e0       	ldi	r23, 0x00	; 0
    1564:	89 81       	ldd	r24, Y+1	; 0x01
    1566:	9a 81       	ldd	r25, Y+2	; 0x02
    1568:	8e 0f       	add	r24, r30
    156a:	9f 1f       	adc	r25, r31
    156c:	0e 94 4b 24 	call	0x4896	; 0x4896 <memset>
    1570:	1c 8a       	std	Y+20, r1	; 0x14
    1572:	1b 8a       	std	Y+19, r1	; 0x13
    1574:	88 2d       	mov	r24, r8
    1576:	b3 01       	movw	r22, r6
    1578:	0e 94 a8 23 	call	0x4750	; 0x4750 <strlen>
    157c:	e9 84       	ldd	r14, Y+9	; 0x09
    157e:	fa 84       	ldd	r15, Y+10	; 0x0a
    1580:	0b 89       	ldd	r16, Y+19	; 0x13
    1582:	1c 89       	ldd	r17, Y+20	; 0x14
    1584:	9c 01       	movw	r18, r24
    1586:	68 2d       	mov	r22, r8
    1588:	a3 01       	movw	r20, r6
    158a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    158c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    158e:	0e 94 12 16 	call	0x2c24	; 0x2c24 <__pad>
    1592:	a6 96       	adiw	r28, 0x26	; 38
    1594:	e2 e1       	ldi	r30, 0x12	; 18
    1596:	0c 94 be 22 	jmp	0x457c	; 0x457c <__epilogue_restores__>
    159a:	59 85       	ldd	r21, Y+9	; 0x09
    159c:	53 ff       	sbrs	r21, 3
    159e:	00 cd       	rjmp	.-1536   	; 0xfa0 <__fmt_fp+0x8e>
    15a0:	80 e2       	ldi	r24, 0x20	; 32
    15a2:	f0 cc       	rjmp	.-1568   	; 0xf84 <__fmt_fp+0x72>
    15a4:	2c ef       	ldi	r18, 0xFC	; 252
    15a6:	22 16       	cp	r2, r18
    15a8:	2f ef       	ldi	r18, 0xFF	; 255
    15aa:	32 06       	cpc	r3, r18
    15ac:	4c f0       	brlt	.+18     	; 0x15c0 <__EEPROM_REGION_LENGTH__+0x5c0>
    15ae:	4d a1       	ldd	r20, Y+37	; 0x25
    15b0:	5e a1       	ldd	r21, Y+38	; 0x26
    15b2:	24 16       	cp	r2, r20
    15b4:	35 06       	cpc	r3, r21
    15b6:	0c f4       	brge	.+2      	; 0x15ba <__EEPROM_REGION_LENGTH__+0x5ba>
    15b8:	df cd       	rjmp	.-1090   	; 0x1178 <__EEPROM_REGION_LENGTH__+0x178>
    15ba:	55 e6       	ldi	r21, 0x65	; 101
    15bc:	5d 8b       	std	Y+21, r21	; 0x15
    15be:	fb cd       	rjmp	.-1034   	; 0x11b6 <__EEPROM_REGION_LENGTH__+0x1b6>
    15c0:	35 e6       	ldi	r19, 0x65	; 101
    15c2:	3d 8b       	std	Y+21, r19	; 0x15
    15c4:	f8 cd       	rjmp	.-1040   	; 0x11b6 <__EEPROM_REGION_LENGTH__+0x1b6>
    15c6:	46 e6       	ldi	r20, 0x66	; 102
    15c8:	4d 8b       	std	Y+21, r20	; 0x15
    15ca:	f5 cd       	rjmp	.-1046   	; 0x11b6 <__EEPROM_REGION_LENGTH__+0x1b6>

Disassembly of section .text.__fmt_a:

000015cc <__fmt_a>:
    15cc:	a0 e2       	ldi	r26, 0x20	; 32
    15ce:	b0 e0       	ldi	r27, 0x00	; 0
    15d0:	ec ee       	ldi	r30, 0xEC	; 236
    15d2:	fa e0       	ldi	r31, 0x0A	; 10
    15d4:	0c 94 87 22 	jmp	0x450e	; 0x450e <__prologue_saves__>
    15d8:	9d 8f       	std	Y+29, r25	; 0x1d
    15da:	8c 8f       	std	Y+28, r24	; 0x1c
    15dc:	fb 01       	movw	r30, r22
    15de:	29 83       	std	Y+1, r18	; 0x01
    15e0:	20 81       	ld	r18, Z
    15e2:	2d 83       	std	Y+5, r18	; 0x05
    15e4:	31 81       	ldd	r19, Z+1	; 0x01
    15e6:	3e 8f       	std	Y+30, r19	; 0x1e
    15e8:	82 81       	ldd	r24, Z+2	; 0x02
    15ea:	93 81       	ldd	r25, Z+3	; 0x03
    15ec:	9b 8b       	std	Y+19, r25	; 0x13
    15ee:	8a 8b       	std	Y+18, r24	; 0x12
    15f0:	24 81       	ldd	r18, Z+4	; 0x04
    15f2:	35 81       	ldd	r19, Z+5	; 0x05
    15f4:	39 87       	std	Y+9, r19	; 0x09
    15f6:	28 87       	std	Y+8, r18	; 0x08
    15f8:	80 85       	ldd	r24, Z+8	; 0x08
    15fa:	91 85       	ldd	r25, Z+9	; 0x09
    15fc:	99 8f       	std	Y+25, r25	; 0x19
    15fe:	88 8f       	std	Y+24, r24	; 0x18
    1600:	46 80       	ldd	r4, Z+6	; 0x06
    1602:	57 80       	ldd	r5, Z+7	; 0x07
    1604:	fa 01       	movw	r30, r20
    1606:	c0 80       	ld	r12, Z
    1608:	d1 80       	ldd	r13, Z+1	; 0x01
    160a:	e2 80       	ldd	r14, Z+2	; 0x02
    160c:	f3 80       	ldd	r15, Z+3	; 0x03
    160e:	20 e0       	ldi	r18, 0x00	; 0
    1610:	30 e0       	ldi	r19, 0x00	; 0
    1612:	a9 01       	movw	r20, r18
    1614:	c7 01       	movw	r24, r14
    1616:	b6 01       	movw	r22, r12
    1618:	0e 94 b1 24 	call	0x4962	; 0x4962 <__cmpsf2>
    161c:	87 ff       	sbrs	r24, 7
    161e:	06 c0       	rjmp	.+12     	; 0x162c <__fmt_a+0x60>
    1620:	f7 fa       	bst	r15, 7
    1622:	f0 94       	com	r15
    1624:	f7 f8       	bld	r15, 7
    1626:	f0 94       	com	r15
    1628:	8d e2       	ldi	r24, 0x2D	; 45
    162a:	04 c0       	rjmp	.+8      	; 0x1634 <__fmt_a+0x68>
    162c:	5d 81       	ldd	r21, Y+5	; 0x05
    162e:	52 ff       	sbrs	r21, 2
    1630:	f6 c2       	rjmp	.+1516   	; 0x1c1e <__fmt_a+0x652>
    1632:	8b e2       	ldi	r24, 0x2B	; 43
    1634:	f2 01       	movw	r30, r4
    1636:	80 83       	st	Z, r24
    1638:	28 85       	ldd	r18, Y+8	; 0x08
    163a:	39 85       	ldd	r19, Y+9	; 0x09
    163c:	21 50       	subi	r18, 0x01	; 1
    163e:	31 09       	sbc	r19, r1
    1640:	3f 87       	std	Y+15, r19	; 0x0f
    1642:	2e 87       	std	Y+14, r18	; 0x0e
    1644:	41 e0       	ldi	r20, 0x01	; 1
    1646:	50 e0       	ldi	r21, 0x00	; 0
    1648:	5c 83       	std	Y+4, r21	; 0x04
    164a:	4b 83       	std	Y+3, r20	; 0x03
    164c:	06 c0       	rjmp	.+12     	; 0x165a <__fmt_a+0x8e>
    164e:	88 85       	ldd	r24, Y+8	; 0x08
    1650:	99 85       	ldd	r25, Y+9	; 0x09
    1652:	9f 87       	std	Y+15, r25	; 0x0f
    1654:	8e 87       	std	Y+14, r24	; 0x0e
    1656:	1c 82       	std	Y+4, r1	; 0x04
    1658:	1b 82       	std	Y+3, r1	; 0x03
    165a:	b7 01       	movw	r22, r14
    165c:	a6 01       	movw	r20, r12
    165e:	7f 77       	andi	r23, 0x7F	; 127
    1660:	e9 81       	ldd	r30, Y+1	; 0x01
    1662:	0e 2e       	mov	r0, r30
    1664:	00 0c       	add	r0, r0
    1666:	ff 0b       	sbc	r31, r31
    1668:	f9 8b       	std	Y+17, r31	; 0x11
    166a:	e8 8b       	std	Y+16, r30	; 0x10
    166c:	41 15       	cp	r20, r1
    166e:	51 05       	cpc	r21, r1
    1670:	f0 e8       	ldi	r31, 0x80	; 128
    1672:	6f 07       	cpc	r22, r31
    1674:	ff e7       	ldi	r31, 0x7F	; 127
    1676:	7f 07       	cpc	r23, r31
    1678:	c1 f4       	brne	.+48     	; 0x16aa <__fmt_a+0xde>
    167a:	28 89       	ldd	r18, Y+16	; 0x10
    167c:	39 89       	ldd	r19, Y+17	; 0x11
    167e:	21 54       	subi	r18, 0x41	; 65
    1680:	31 09       	sbc	r19, r1
    1682:	8b 81       	ldd	r24, Y+3	; 0x03
    1684:	9c 81       	ldd	r25, Y+4	; 0x04
    1686:	84 0d       	add	r24, r4
    1688:	95 1d       	adc	r25, r5
    168a:	2a 31       	cpi	r18, 0x1A	; 26
    168c:	31 05       	cpc	r19, r1
    168e:	20 f4       	brcc	.+8      	; 0x1698 <__fmt_a+0xcc>
    1690:	42 ec       	ldi	r20, 0xC2	; 194
    1692:	56 e0       	ldi	r21, 0x06	; 6
    1694:	60 e0       	ldi	r22, 0x00	; 0
    1696:	03 c0       	rjmp	.+6      	; 0x169e <__fmt_a+0xd2>
    1698:	46 ec       	ldi	r20, 0xC6	; 198
    169a:	56 e0       	ldi	r21, 0x06	; 6
    169c:	60 e0       	ldi	r22, 0x00	; 0
    169e:	0e 94 db 23 	call	0x47b6	; 0x47b6 <strcpy>
    16a2:	66 ec       	ldi	r22, 0xC6	; 198
    16a4:	76 e0       	ldi	r23, 0x06	; 6
    16a6:	80 e0       	ldi	r24, 0x00	; 0
    16a8:	1c c0       	rjmp	.+56     	; 0x16e2 <__fmt_a+0x116>
    16aa:	8b 81       	ldd	r24, Y+3	; 0x03
    16ac:	9c 81       	ldd	r25, Y+4	; 0x04
    16ae:	84 0d       	add	r24, r4
    16b0:	95 1d       	adc	r25, r5
    16b2:	41 30       	cpi	r20, 0x01	; 1
    16b4:	51 05       	cpc	r21, r1
    16b6:	60 48       	sbci	r22, 0x80	; 128
    16b8:	7f 47       	sbci	r23, 0x7F	; 127
    16ba:	e8 f0       	brcs	.+58     	; 0x16f6 <__fmt_a+0x12a>
    16bc:	28 89       	ldd	r18, Y+16	; 0x10
    16be:	39 89       	ldd	r19, Y+17	; 0x11
    16c0:	21 54       	subi	r18, 0x41	; 65
    16c2:	31 09       	sbc	r19, r1
    16c4:	2a 31       	cpi	r18, 0x1A	; 26
    16c6:	31 05       	cpc	r19, r1
    16c8:	20 f4       	brcc	.+8      	; 0x16d2 <__fmt_a+0x106>
    16ca:	4a ec       	ldi	r20, 0xCA	; 202
    16cc:	56 e0       	ldi	r21, 0x06	; 6
    16ce:	60 e0       	ldi	r22, 0x00	; 0
    16d0:	03 c0       	rjmp	.+6      	; 0x16d8 <__fmt_a+0x10c>
    16d2:	4e ec       	ldi	r20, 0xCE	; 206
    16d4:	56 e0       	ldi	r21, 0x06	; 6
    16d6:	60 e0       	ldi	r22, 0x00	; 0
    16d8:	0e 94 db 23 	call	0x47b6	; 0x47b6 <strcpy>
    16dc:	6e ec       	ldi	r22, 0xCE	; 206
    16de:	76 e0       	ldi	r23, 0x06	; 6
    16e0:	80 e0       	ldi	r24, 0x00	; 0
    16e2:	0e 94 a8 23 	call	0x4750	; 0x4750 <strlen>
    16e6:	a2 01       	movw	r20, r4
    16e8:	60 e8       	ldi	r22, 0x80	; 128
    16ea:	ed 80       	ldd	r14, Y+5	; 0x05
    16ec:	fe 8c       	ldd	r15, Y+30	; 0x1e
    16ee:	08 85       	ldd	r16, Y+8	; 0x08
    16f0:	19 85       	ldd	r17, Y+9	; 0x09
    16f2:	9c 01       	movw	r18, r24
    16f4:	8c c2       	rjmp	.+1304   	; 0x1c0e <__fmt_a+0x642>
    16f6:	20 e3       	ldi	r18, 0x30	; 48
    16f8:	fc 01       	movw	r30, r24
    16fa:	20 83       	st	Z, r18
    16fc:	eb 81       	ldd	r30, Y+3	; 0x03
    16fe:	fc 81       	ldd	r31, Y+4	; 0x04
    1700:	31 96       	adiw	r30, 0x01	; 1
    1702:	e4 0d       	add	r30, r4
    1704:	f5 1d       	adc	r31, r5
    1706:	2b 81       	ldd	r18, Y+3	; 0x03
    1708:	3c 81       	ldd	r19, Y+4	; 0x04
    170a:	2e 5f       	subi	r18, 0xFE	; 254
    170c:	3f 4f       	sbci	r19, 0xFF	; 255
    170e:	3c 83       	std	Y+4, r19	; 0x04
    1710:	2b 83       	std	Y+3, r18	; 0x03
    1712:	48 89       	ldd	r20, Y+16	; 0x10
    1714:	59 89       	ldd	r21, Y+17	; 0x11
    1716:	41 54       	subi	r20, 0x41	; 65
    1718:	51 09       	sbc	r21, r1
    171a:	5b 8f       	std	Y+27, r21	; 0x1b
    171c:	4a 8f       	std	Y+26, r20	; 0x1a
    171e:	4a 31       	cpi	r20, 0x1A	; 26
    1720:	51 05       	cpc	r21, r1
    1722:	10 f0       	brcs	.+4      	; 0x1728 <__fmt_a+0x15c>
    1724:	88 e7       	ldi	r24, 0x78	; 120
    1726:	01 c0       	rjmp	.+2      	; 0x172a <__fmt_a+0x15e>
    1728:	88 e5       	ldi	r24, 0x58	; 88
    172a:	80 83       	st	Z, r24
    172c:	20 e0       	ldi	r18, 0x00	; 0
    172e:	30 e0       	ldi	r19, 0x00	; 0
    1730:	a9 01       	movw	r20, r18
    1732:	c7 01       	movw	r24, r14
    1734:	b6 01       	movw	r22, r12
    1736:	0e 94 b1 24 	call	0x4962	; 0x4962 <__cmpsf2>
    173a:	61 2c       	mov	r6, r1
    173c:	71 2c       	mov	r7, r1
    173e:	1f 8e       	std	Y+31, r1	; 0x1f
    1740:	19 82       	std	Y+1, r1	; 0x01
    1742:	88 23       	and	r24, r24
    1744:	09 f4       	brne	.+2      	; 0x1748 <__fmt_a+0x17c>
    1746:	64 c0       	rjmp	.+200    	; 0x1810 <__fmt_a+0x244>
    1748:	50 e8       	ldi	r21, 0x80	; 128
    174a:	58 a3       	std	Y+32, r21	; 0x20
    174c:	8f e3       	ldi	r24, 0x3F	; 63
    174e:	8a 83       	std	Y+2, r24	; 0x02
    1750:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1752:	39 81       	ldd	r19, Y+1	; 0x01
    1754:	48 a1       	ldd	r20, Y+32	; 0x20
    1756:	5a 81       	ldd	r21, Y+2	; 0x02
    1758:	6f 8d       	ldd	r22, Y+31	; 0x1f
    175a:	79 81       	ldd	r23, Y+1	; 0x01
    175c:	88 a1       	ldd	r24, Y+32	; 0x20
    175e:	9a 81       	ldd	r25, Y+2	; 0x02
    1760:	0e 94 89 24 	call	0x4912	; 0x4912 <__addsf3>
    1764:	5b 01       	movw	r10, r22
    1766:	8c 01       	movw	r16, r24
    1768:	a7 01       	movw	r20, r14
    176a:	96 01       	movw	r18, r12
    176c:	0e 94 b6 24 	call	0x496c	; 0x496c <__gesf2>
    1770:	18 16       	cp	r1, r24
    1772:	0c f4       	brge	.+2      	; 0x1776 <__fmt_a+0x1aa>
    1774:	42 c0       	rjmp	.+132    	; 0x17fa <__fmt_a+0x22e>
    1776:	9f ef       	ldi	r25, 0xFF	; 255
    1778:	69 1a       	sub	r6, r25
    177a:	79 0a       	sbc	r7, r25
    177c:	af 8e       	std	Y+31, r10	; 0x1f
    177e:	b9 82       	std	Y+1, r11	; 0x01
    1780:	08 a3       	std	Y+32, r16	; 0x20
    1782:	1a 83       	std	Y+2, r17	; 0x02
    1784:	e5 cf       	rjmp	.-54     	; 0x1750 <__fmt_a+0x184>
    1786:	20 e0       	ldi	r18, 0x00	; 0
    1788:	30 e0       	ldi	r19, 0x00	; 0
    178a:	40 e0       	ldi	r20, 0x00	; 0
    178c:	5f e3       	ldi	r21, 0x3F	; 63
    178e:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1790:	79 81       	ldd	r23, Y+1	; 0x01
    1792:	88 a1       	ldd	r24, Y+32	; 0x20
    1794:	9a 81       	ldd	r25, Y+2	; 0x02
    1796:	0e 94 bf 24 	call	0x497e	; 0x497e <__mulsf3>
    179a:	20 e0       	ldi	r18, 0x00	; 0
    179c:	30 e0       	ldi	r19, 0x00	; 0
    179e:	a9 01       	movw	r20, r18
    17a0:	0e 94 b1 24 	call	0x4962	; 0x4962 <__cmpsf2>
    17a4:	81 11       	cpse	r24, r1
    17a6:	18 c0       	rjmp	.+48     	; 0x17d8 <__fmt_a+0x20c>
    17a8:	20 e0       	ldi	r18, 0x00	; 0
    17aa:	30 e0       	ldi	r19, 0x00	; 0
    17ac:	40 e8       	ldi	r20, 0x80	; 128
    17ae:	5a e5       	ldi	r21, 0x5A	; 90
    17b0:	6f 8d       	ldd	r22, Y+31	; 0x1f
    17b2:	79 81       	ldd	r23, Y+1	; 0x01
    17b4:	88 a1       	ldd	r24, Y+32	; 0x20
    17b6:	9a 81       	ldd	r25, Y+2	; 0x02
    17b8:	0e 94 bf 24 	call	0x497e	; 0x497e <__mulsf3>
    17bc:	6f 8f       	std	Y+31, r22	; 0x1f
    17be:	79 83       	std	Y+1, r23	; 0x01
    17c0:	88 a3       	std	Y+32, r24	; 0x20
    17c2:	9a 83       	std	Y+2, r25	; 0x02
    17c4:	20 e0       	ldi	r18, 0x00	; 0
    17c6:	30 e0       	ldi	r19, 0x00	; 0
    17c8:	40 e8       	ldi	r20, 0x80	; 128
    17ca:	5a e5       	ldi	r21, 0x5A	; 90
    17cc:	c7 01       	movw	r24, r14
    17ce:	b6 01       	movw	r22, r12
    17d0:	0e 94 bf 24 	call	0x497e	; 0x497e <__mulsf3>
    17d4:	6b 01       	movw	r12, r22
    17d6:	7c 01       	movw	r14, r24
    17d8:	20 e0       	ldi	r18, 0x00	; 0
    17da:	30 e0       	ldi	r19, 0x00	; 0
    17dc:	40 e0       	ldi	r20, 0x00	; 0
    17de:	5f e3       	ldi	r21, 0x3F	; 63
    17e0:	6f 8d       	ldd	r22, Y+31	; 0x1f
    17e2:	79 81       	ldd	r23, Y+1	; 0x01
    17e4:	88 a1       	ldd	r24, Y+32	; 0x20
    17e6:	9a 81       	ldd	r25, Y+2	; 0x02
    17e8:	0e 94 bf 24 	call	0x497e	; 0x497e <__mulsf3>
    17ec:	6f 8f       	std	Y+31, r22	; 0x1f
    17ee:	79 83       	std	Y+1, r23	; 0x01
    17f0:	88 a3       	std	Y+32, r24	; 0x20
    17f2:	9a 83       	std	Y+2, r25	; 0x02
    17f4:	a1 e0       	ldi	r26, 0x01	; 1
    17f6:	6a 1a       	sub	r6, r26
    17f8:	71 08       	sbc	r7, r1
    17fa:	2f 8d       	ldd	r18, Y+31	; 0x1f
    17fc:	39 81       	ldd	r19, Y+1	; 0x01
    17fe:	48 a1       	ldd	r20, Y+32	; 0x20
    1800:	5a 81       	ldd	r21, Y+2	; 0x02
    1802:	c7 01       	movw	r24, r14
    1804:	b6 01       	movw	r22, r12
    1806:	0e 94 b1 24 	call	0x4962	; 0x4962 <__cmpsf2>
    180a:	87 fd       	sbrc	r24, 7
    180c:	bc cf       	rjmp	.-136    	; 0x1786 <__fmt_a+0x1ba>
    180e:	04 c0       	rjmp	.+8      	; 0x1818 <__fmt_a+0x24c>
    1810:	e0 e8       	ldi	r30, 0x80	; 128
    1812:	e8 a3       	std	Y+32, r30	; 0x20
    1814:	ff e3       	ldi	r31, 0x3F	; 63
    1816:	fa 83       	std	Y+2, r31	; 0x02
    1818:	2a 89       	ldd	r18, Y+18	; 0x12
    181a:	3b 89       	ldd	r19, Y+19	; 0x13
    181c:	37 fd       	sbrc	r19, 7
    181e:	02 c0       	rjmp	.+4      	; 0x1824 <__fmt_a+0x258>
    1820:	c9 01       	movw	r24, r18
    1822:	02 c0       	rjmp	.+4      	; 0x1828 <__fmt_a+0x25c>
    1824:	88 e1       	ldi	r24, 0x18	; 24
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	ac 01       	movw	r20, r24
    182a:	4f 5f       	subi	r20, 0xFF	; 255
    182c:	5f 4f       	sbci	r21, 0xFF	; 255
    182e:	5b 87       	std	Y+11, r21	; 0x0b
    1830:	4a 87       	std	Y+10, r20	; 0x0a
    1832:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1834:	99 80       	ldd	r9, Y+1	; 0x01
    1836:	a8 a0       	ldd	r10, Y+32	; 0x20
    1838:	ba 80       	ldd	r11, Y+2	; 0x02
    183a:	16 01       	movw	r2, r12
    183c:	87 01       	movw	r16, r14
    183e:	1f 82       	std	Y+7, r1	; 0x07
    1840:	1e 82       	std	Y+6, r1	; 0x06
    1842:	94 01       	movw	r18, r8
    1844:	a5 01       	movw	r20, r10
    1846:	b1 01       	movw	r22, r2
    1848:	c8 01       	movw	r24, r16
    184a:	0e 94 bb 24 	call	0x4976	; 0x4976 <__divsf3>
    184e:	0e 94 79 15 	call	0x2af2	; 0x2af2 <floorf>
    1852:	6c 8b       	std	Y+20, r22	; 0x14
    1854:	7d 8b       	std	Y+21, r23	; 0x15
    1856:	8e 8b       	std	Y+22, r24	; 0x16
    1858:	9f 8b       	std	Y+23, r25	; 0x17
    185a:	94 01       	movw	r18, r8
    185c:	a5 01       	movw	r20, r10
    185e:	0e 94 bf 24 	call	0x497e	; 0x497e <__mulsf3>
    1862:	9b 01       	movw	r18, r22
    1864:	ac 01       	movw	r20, r24
    1866:	b1 01       	movw	r22, r2
    1868:	c8 01       	movw	r24, r16
    186a:	0e 94 88 24 	call	0x4910	; 0x4910 <__subsf3>
    186e:	1b 01       	movw	r2, r22
    1870:	8c 01       	movw	r16, r24
    1872:	20 e0       	ldi	r18, 0x00	; 0
    1874:	30 e0       	ldi	r19, 0x00	; 0
    1876:	40 e8       	ldi	r20, 0x80	; 128
    1878:	5d e3       	ldi	r21, 0x3D	; 61
    187a:	b4 01       	movw	r22, r8
    187c:	c5 01       	movw	r24, r10
    187e:	0e 94 bf 24 	call	0x497e	; 0x497e <__mulsf3>
    1882:	4b 01       	movw	r8, r22
    1884:	5c 01       	movw	r10, r24
    1886:	8e 81       	ldd	r24, Y+6	; 0x06
    1888:	9f 81       	ldd	r25, Y+7	; 0x07
    188a:	01 96       	adiw	r24, 0x01	; 1
    188c:	9f 83       	std	Y+7, r25	; 0x07
    188e:	8e 83       	std	Y+6, r24	; 0x06
    1890:	ea 89       	ldd	r30, Y+18	; 0x12
    1892:	fb 89       	ldd	r31, Y+19	; 0x13
    1894:	f7 ff       	sbrs	r31, 7
    1896:	09 c0       	rjmp	.+18     	; 0x18aa <__fmt_a+0x2de>
    1898:	20 e0       	ldi	r18, 0x00	; 0
    189a:	30 e0       	ldi	r19, 0x00	; 0
    189c:	a9 01       	movw	r20, r18
    189e:	b1 01       	movw	r22, r2
    18a0:	c8 01       	movw	r24, r16
    18a2:	0e 94 b1 24 	call	0x4962	; 0x4962 <__cmpsf2>
    18a6:	88 23       	and	r24, r24
    18a8:	41 f0       	breq	.+16     	; 0x18ba <__fmt_a+0x2ee>
    18aa:	2a 85       	ldd	r18, Y+10	; 0x0a
    18ac:	3b 85       	ldd	r19, Y+11	; 0x0b
    18ae:	4e 81       	ldd	r20, Y+6	; 0x06
    18b0:	5f 81       	ldd	r21, Y+7	; 0x07
    18b2:	42 17       	cp	r20, r18
    18b4:	53 07       	cpc	r21, r19
    18b6:	2c f2       	brlt	.-118    	; 0x1842 <__fmt_a+0x276>
    18b8:	04 c0       	rjmp	.+8      	; 0x18c2 <__fmt_a+0x2f6>
    18ba:	8e 81       	ldd	r24, Y+6	; 0x06
    18bc:	9f 81       	ldd	r25, Y+7	; 0x07
    18be:	9b 87       	std	Y+11, r25	; 0x0b
    18c0:	8a 87       	std	Y+10, r24	; 0x0a
    18c2:	20 e0       	ldi	r18, 0x00	; 0
    18c4:	30 e0       	ldi	r19, 0x00	; 0
    18c6:	40 e0       	ldi	r20, 0x00	; 0
    18c8:	51 e4       	ldi	r21, 0x41	; 65
    18ca:	b4 01       	movw	r22, r8
    18cc:	c5 01       	movw	r24, r10
    18ce:	0e 94 bf 24 	call	0x497e	; 0x497e <__mulsf3>
    18d2:	4b 01       	movw	r8, r22
    18d4:	5c 01       	movw	r10, r24
    18d6:	9b 01       	movw	r18, r22
    18d8:	ac 01       	movw	r20, r24
    18da:	b1 01       	movw	r22, r2
    18dc:	c8 01       	movw	r24, r16
    18de:	0e 94 b1 24 	call	0x4962	; 0x4962 <__cmpsf2>
    18e2:	87 fd       	sbrc	r24, 7
    18e4:	12 c0       	rjmp	.+36     	; 0x190a <__fmt_a+0x33e>
    18e6:	a5 01       	movw	r20, r10
    18e8:	94 01       	movw	r18, r8
    18ea:	b1 01       	movw	r22, r2
    18ec:	c8 01       	movw	r24, r16
    18ee:	0e 94 b1 24 	call	0x4962	; 0x4962 <__cmpsf2>
    18f2:	81 11       	cpse	r24, r1
    18f4:	0d c0       	rjmp	.+26     	; 0x1910 <__fmt_a+0x344>
    18f6:	6c 89       	ldd	r22, Y+20	; 0x14
    18f8:	7d 89       	ldd	r23, Y+21	; 0x15
    18fa:	8e 89       	ldd	r24, Y+22	; 0x16
    18fc:	9f 89       	ldd	r25, Y+23	; 0x17
    18fe:	0e 94 8f 24 	call	0x491e	; 0x491e <__fixsfsi>
    1902:	61 70       	andi	r22, 0x01	; 1
    1904:	77 27       	eor	r23, r23
    1906:	67 2b       	or	r22, r23
    1908:	19 f4       	brne	.+6      	; 0x1910 <__fmt_a+0x344>
    190a:	81 2c       	mov	r8, r1
    190c:	91 2c       	mov	r9, r1
    190e:	54 01       	movw	r10, r8
    1910:	a5 01       	movw	r20, r10
    1912:	94 01       	movw	r18, r8
    1914:	c7 01       	movw	r24, r14
    1916:	b6 01       	movw	r22, r12
    1918:	0e 94 89 24 	call	0x4912	; 0x4912 <__addsf3>
    191c:	6b 01       	movw	r12, r22
    191e:	7c 01       	movw	r14, r24
    1920:	dc 01       	movw	r26, r24
    1922:	cb 01       	movw	r24, r22
    1924:	bf 77       	andi	r27, 0x7F	; 127
    1926:	00 97       	sbiw	r24, 0x00	; 0
    1928:	a0 48       	sbci	r26, 0x80	; 128
    192a:	bf 47       	sbci	r27, 0x7F	; 127
    192c:	09 f4       	brne	.+2      	; 0x1930 <__fmt_a+0x364>
    192e:	a5 ce       	rjmp	.-694    	; 0x167a <__fmt_a+0xae>
    1930:	2e 84       	ldd	r2, Y+14	; 0x0e
    1932:	3f 84       	ldd	r3, Y+15	; 0x0f
    1934:	f2 e0       	ldi	r31, 0x02	; 2
    1936:	2f 1a       	sub	r2, r31
    1938:	31 08       	sbc	r3, r1
    193a:	2a 85       	ldd	r18, Y+10	; 0x0a
    193c:	3b 85       	ldd	r19, Y+11	; 0x0b
    193e:	31 95       	neg	r19
    1940:	21 95       	neg	r18
    1942:	31 09       	sbc	r19, r1
    1944:	39 8b       	std	Y+17, r19	; 0x11
    1946:	28 8b       	std	Y+16, r18	; 0x10
    1948:	0b 81       	ldd	r16, Y+3	; 0x03
    194a:	1c 81       	ldd	r17, Y+4	; 0x04
    194c:	a1 2c       	mov	r10, r1
    194e:	b1 2c       	mov	r11, r1
    1950:	1f 82       	std	Y+7, r1	; 0x07
    1952:	1e 82       	std	Y+6, r1	; 0x06
    1954:	81 2c       	mov	r8, r1
    1956:	91 2c       	mov	r9, r1
    1958:	48 8d       	ldd	r20, Y+24	; 0x18
    195a:	59 8d       	ldd	r21, Y+25	; 0x19
    195c:	45 50       	subi	r20, 0x05	; 5
    195e:	51 09       	sbc	r21, r1
    1960:	5d 8b       	std	Y+21, r21	; 0x15
    1962:	4c 8b       	std	Y+20, r20	; 0x14
    1964:	ec 89       	ldd	r30, Y+20	; 0x14
    1966:	fd 89       	ldd	r31, Y+21	; 0x15
    1968:	0e 17       	cp	r16, r30
    196a:	1f 07       	cpc	r17, r31
    196c:	0c f0       	brlt	.+2      	; 0x1970 <__fmt_a+0x3a4>
    196e:	91 c0       	rjmp	.+290    	; 0x1a92 <__fmt_a+0x4c6>
    1970:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1972:	39 81       	ldd	r19, Y+1	; 0x01
    1974:	48 a1       	ldd	r20, Y+32	; 0x20
    1976:	5a 81       	ldd	r21, Y+2	; 0x02
    1978:	c7 01       	movw	r24, r14
    197a:	b6 01       	movw	r22, r12
    197c:	0e 94 bb 24 	call	0x4976	; 0x4976 <__divsf3>
    1980:	0e 94 79 15 	call	0x2af2	; 0x2af2 <floorf>
    1984:	6a 87       	std	Y+10, r22	; 0x0a
    1986:	7b 87       	std	Y+11, r23	; 0x0b
    1988:	8c 87       	std	Y+12, r24	; 0x0c
    198a:	9d 87       	std	Y+13, r25	; 0x0d
    198c:	0e 94 8f 24 	call	0x491e	; 0x491e <__fixsfsi>
    1990:	ab 01       	movw	r20, r22
    1992:	61 15       	cp	r22, r1
    1994:	71 05       	cpc	r23, r1
    1996:	39 f4       	brne	.+14     	; 0x19a6 <__fmt_a+0x3da>
    1998:	81 14       	cp	r8, r1
    199a:	91 04       	cpc	r9, r1
    199c:	21 f0       	breq	.+8      	; 0x19a6 <__fmt_a+0x3da>
    199e:	5f ef       	ldi	r21, 0xFF	; 255
    19a0:	a5 1a       	sub	r10, r21
    19a2:	b5 0a       	sbc	r11, r21
    19a4:	4d c0       	rjmp	.+154    	; 0x1a40 <__fmt_a+0x474>
    19a6:	ee 81       	ldd	r30, Y+6	; 0x06
    19a8:	ff 81       	ldd	r31, Y+7	; 0x07
    19aa:	ef 2b       	or	r30, r31
    19ac:	89 f4       	brne	.+34     	; 0x19d0 <__fmt_a+0x404>
    19ae:	81 14       	cp	r8, r1
    19b0:	91 04       	cpc	r9, r1
    19b2:	71 f0       	breq	.+28     	; 0x19d0 <__fmt_a+0x404>
    19b4:	f2 01       	movw	r30, r4
    19b6:	e0 0f       	add	r30, r16
    19b8:	f1 1f       	adc	r31, r17
    19ba:	2e e2       	ldi	r18, 0x2E	; 46
    19bc:	20 83       	st	Z, r18
    19be:	31 e0       	ldi	r19, 0x01	; 1
    19c0:	23 1a       	sub	r2, r19
    19c2:	31 08       	sbc	r3, r1
    19c4:	0f 5f       	subi	r16, 0xFF	; 255
    19c6:	1f 4f       	sbci	r17, 0xFF	; 255
    19c8:	e1 e0       	ldi	r30, 0x01	; 1
    19ca:	f0 e0       	ldi	r31, 0x00	; 0
    19cc:	ff 83       	std	Y+7, r31	; 0x07
    19ce:	ee 83       	std	Y+6, r30	; 0x06
    19d0:	f2 01       	movw	r30, r4
    19d2:	e0 0f       	add	r30, r16
    19d4:	f1 1f       	adc	r31, r17
    19d6:	95 01       	movw	r18, r10
    19d8:	21 15       	cp	r18, r1
    19da:	31 05       	cpc	r19, r1
    19dc:	29 f0       	breq	.+10     	; 0x19e8 <__fmt_a+0x41c>
    19de:	a0 e3       	ldi	r26, 0x30	; 48
    19e0:	a1 93       	st	Z+, r26
    19e2:	21 50       	subi	r18, 0x01	; 1
    19e4:	31 09       	sbc	r19, r1
    19e6:	f8 cf       	rjmp	.-16     	; 0x19d8 <__fmt_a+0x40c>
    19e8:	f8 01       	movw	r30, r16
    19ea:	ea 0d       	add	r30, r10
    19ec:	fb 1d       	adc	r31, r11
    19ee:	ff 87       	std	Y+15, r31	; 0x0f
    19f0:	ee 87       	std	Y+14, r30	; 0x0e
    19f2:	2a 18       	sub	r2, r10
    19f4:	3b 08       	sbc	r3, r11
    19f6:	4a 30       	cpi	r20, 0x0A	; 10
    19f8:	51 05       	cpc	r21, r1
    19fa:	1c f4       	brge	.+6      	; 0x1a02 <__fmt_a+0x436>
    19fc:	60 5d       	subi	r22, 0xD0	; 208
    19fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1a00:	02 c0       	rjmp	.+4      	; 0x1a06 <__fmt_a+0x43a>
    1a02:	69 5a       	subi	r22, 0xA9	; 169
    1a04:	7f 4f       	sbci	r23, 0xFF	; 255
    1a06:	2a 8d       	ldd	r18, Y+26	; 0x1a
    1a08:	3b 8d       	ldd	r19, Y+27	; 0x1b
    1a0a:	2a 31       	cpi	r18, 0x1A	; 26
    1a0c:	31 05       	cpc	r19, r1
    1a0e:	50 f4       	brcc	.+20     	; 0x1a24 <__fmt_a+0x458>
    1a10:	cb 01       	movw	r24, r22
    1a12:	80 62       	ori	r24, 0x20	; 32
    1a14:	81 56       	subi	r24, 0x61	; 97
    1a16:	91 09       	sbc	r25, r1
    1a18:	4a 97       	sbiw	r24, 0x1a	; 26
    1a1a:	20 f4       	brcc	.+8      	; 0x1a24 <__fmt_a+0x458>
    1a1c:	cb 01       	movw	r24, r22
    1a1e:	0e 94 54 24 	call	0x48a8	; 0x48a8 <toupper>
    1a22:	bc 01       	movw	r22, r24
    1a24:	0e 85       	ldd	r16, Y+14	; 0x0e
    1a26:	1f 85       	ldd	r17, Y+15	; 0x0f
    1a28:	0f 5f       	subi	r16, 0xFF	; 255
    1a2a:	1f 4f       	sbci	r17, 0xFF	; 255
    1a2c:	ee 85       	ldd	r30, Y+14	; 0x0e
    1a2e:	ff 85       	ldd	r31, Y+15	; 0x0f
    1a30:	e4 0d       	add	r30, r4
    1a32:	f5 1d       	adc	r31, r5
    1a34:	60 83       	st	Z, r22
    1a36:	31 e0       	ldi	r19, 0x01	; 1
    1a38:	23 1a       	sub	r2, r19
    1a3a:	31 08       	sbc	r3, r1
    1a3c:	a1 2c       	mov	r10, r1
    1a3e:	b1 2c       	mov	r11, r1
    1a40:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1a42:	39 81       	ldd	r19, Y+1	; 0x01
    1a44:	48 a1       	ldd	r20, Y+32	; 0x20
    1a46:	5a 81       	ldd	r21, Y+2	; 0x02
    1a48:	6a 85       	ldd	r22, Y+10	; 0x0a
    1a4a:	7b 85       	ldd	r23, Y+11	; 0x0b
    1a4c:	8c 85       	ldd	r24, Y+12	; 0x0c
    1a4e:	9d 85       	ldd	r25, Y+13	; 0x0d
    1a50:	0e 94 bf 24 	call	0x497e	; 0x497e <__mulsf3>
    1a54:	9b 01       	movw	r18, r22
    1a56:	ac 01       	movw	r20, r24
    1a58:	c7 01       	movw	r24, r14
    1a5a:	b6 01       	movw	r22, r12
    1a5c:	0e 94 88 24 	call	0x4910	; 0x4910 <__subsf3>
    1a60:	6b 01       	movw	r12, r22
    1a62:	7c 01       	movw	r14, r24
    1a64:	20 e0       	ldi	r18, 0x00	; 0
    1a66:	30 e0       	ldi	r19, 0x00	; 0
    1a68:	40 e8       	ldi	r20, 0x80	; 128
    1a6a:	5d e3       	ldi	r21, 0x3D	; 61
    1a6c:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1a6e:	79 81       	ldd	r23, Y+1	; 0x01
    1a70:	88 a1       	ldd	r24, Y+32	; 0x20
    1a72:	9a 81       	ldd	r25, Y+2	; 0x02
    1a74:	0e 94 bf 24 	call	0x497e	; 0x497e <__mulsf3>
    1a78:	6f 8f       	std	Y+31, r22	; 0x1f
    1a7a:	79 83       	std	Y+1, r23	; 0x01
    1a7c:	88 a3       	std	Y+32, r24	; 0x20
    1a7e:	9a 83       	std	Y+2, r25	; 0x02
    1a80:	41 e0       	ldi	r20, 0x01	; 1
    1a82:	84 1a       	sub	r8, r20
    1a84:	91 08       	sbc	r9, r1
    1a86:	88 89       	ldd	r24, Y+16	; 0x10
    1a88:	99 89       	ldd	r25, Y+17	; 0x11
    1a8a:	88 15       	cp	r24, r8
    1a8c:	99 05       	cpc	r25, r9
    1a8e:	09 f0       	breq	.+2      	; 0x1a92 <__fmt_a+0x4c6>
    1a90:	69 cf       	rjmp	.-302    	; 0x1964 <__fmt_a+0x398>
    1a92:	2e 81       	ldd	r18, Y+6	; 0x06
    1a94:	3f 81       	ldd	r19, Y+7	; 0x07
    1a96:	23 2b       	or	r18, r19
    1a98:	51 f5       	brne	.+84     	; 0x1aee <__fmt_a+0x522>
    1a9a:	f2 01       	movw	r30, r4
    1a9c:	e0 0f       	add	r30, r16
    1a9e:	f1 1f       	adc	r31, r17
    1aa0:	a1 14       	cp	r10, r1
    1aa2:	b1 04       	cpc	r11, r1
    1aa4:	e9 f0       	breq	.+58     	; 0x1ae0 <__fmt_a+0x514>
    1aa6:	4a 89       	ldd	r20, Y+18	; 0x12
    1aa8:	5b 89       	ldd	r21, Y+19	; 0x13
    1aaa:	14 16       	cp	r1, r20
    1aac:	15 06       	cpc	r1, r21
    1aae:	c4 f4       	brge	.+48     	; 0x1ae0 <__fmt_a+0x514>
    1ab0:	5d 81       	ldd	r21, Y+5	; 0x05
    1ab2:	50 fd       	sbrc	r21, 0
    1ab4:	15 c0       	rjmp	.+42     	; 0x1ae0 <__fmt_a+0x514>
    1ab6:	8e e2       	ldi	r24, 0x2E	; 46
    1ab8:	80 83       	st	Z, r24
    1aba:	f8 01       	movw	r30, r16
    1abc:	31 96       	adiw	r30, 0x01	; 1
    1abe:	e4 0d       	add	r30, r4
    1ac0:	f5 1d       	adc	r31, r5
    1ac2:	c5 01       	movw	r24, r10
    1ac4:	20 e3       	ldi	r18, 0x30	; 48
    1ac6:	21 93       	st	Z+, r18
    1ac8:	01 97       	sbiw	r24, 0x01	; 1
    1aca:	e9 f7       	brne	.-6      	; 0x1ac6 <__fmt_a+0x4fa>
    1acc:	0a 0d       	add	r16, r10
    1ace:	1b 1d       	adc	r17, r11
    1ad0:	0f 5f       	subi	r16, 0xFF	; 255
    1ad2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ad4:	c5 01       	movw	r24, r10
    1ad6:	80 95       	com	r24
    1ad8:	90 95       	com	r25
    1ada:	28 0e       	add	r2, r24
    1adc:	39 1e       	adc	r3, r25
    1ade:	07 c0       	rjmp	.+14     	; 0x1aee <__fmt_a+0x522>
    1ae0:	8d 81       	ldd	r24, Y+5	; 0x05
    1ae2:	84 ff       	sbrs	r24, 4
    1ae4:	04 c0       	rjmp	.+8      	; 0x1aee <__fmt_a+0x522>
    1ae6:	8e e2       	ldi	r24, 0x2E	; 46
    1ae8:	80 83       	st	Z, r24
    1aea:	0f 5f       	subi	r16, 0xFF	; 255
    1aec:	1f 4f       	sbci	r17, 0xFF	; 255
    1aee:	f2 01       	movw	r30, r4
    1af0:	e0 0f       	add	r30, r16
    1af2:	f1 1f       	adc	r31, r17
    1af4:	ff 83       	std	Y+7, r31	; 0x07
    1af6:	ee 83       	std	Y+6, r30	; 0x06
    1af8:	10 82       	st	Z, r1
    1afa:	e8 8d       	ldd	r30, Y+24	; 0x18
    1afc:	f9 8d       	ldd	r31, Y+25	; 0x19
    1afe:	e4 0d       	add	r30, r4
    1b00:	f5 1d       	adc	r31, r5
    1b02:	31 97       	sbiw	r30, 0x01	; 1
    1b04:	10 82       	st	Z, r1
    1b06:	77 fe       	sbrs	r7, 7
    1b08:	07 c0       	rjmp	.+14     	; 0x1b18 <__fmt_a+0x54c>
    1b0a:	71 94       	neg	r7
    1b0c:	61 94       	neg	r6
    1b0e:	71 08       	sbc	r7, r1
    1b10:	ee 24       	eor	r14, r14
    1b12:	e3 94       	inc	r14
    1b14:	f1 2c       	mov	r15, r1
    1b16:	02 c0       	rjmp	.+4      	; 0x1b1c <__fmt_a+0x550>
    1b18:	e1 2c       	mov	r14, r1
    1b1a:	f1 2c       	mov	r15, r1
    1b1c:	e8 8d       	ldd	r30, Y+24	; 0x18
    1b1e:	f9 8d       	ldd	r31, Y+25	; 0x19
    1b20:	31 97       	sbiw	r30, 0x01	; 1
    1b22:	e4 0d       	add	r30, r4
    1b24:	f5 1d       	adc	r31, r5
    1b26:	21 e0       	ldi	r18, 0x01	; 1
    1b28:	30 e0       	ldi	r19, 0x00	; 0
    1b2a:	8a e0       	ldi	r24, 0x0A	; 10
    1b2c:	c8 2e       	mov	r12, r24
    1b2e:	d1 2c       	mov	r13, r1
    1b30:	cf 01       	movw	r24, r30
    1b32:	84 19       	sub	r24, r4
    1b34:	95 09       	sbc	r25, r5
    1b36:	61 14       	cp	r6, r1
    1b38:	71 04       	cpc	r7, r1
    1b3a:	69 f0       	breq	.+26     	; 0x1b56 <__fmt_a+0x58a>
    1b3c:	c3 01       	movw	r24, r6
    1b3e:	b6 01       	movw	r22, r12
    1b40:	0e 94 35 23 	call	0x466a	; 0x466a <__divmodhi4>
    1b44:	80 5d       	subi	r24, 0xD0	; 208
    1b46:	82 93       	st	-Z, r24
    1b48:	3b 01       	movw	r6, r22
    1b4a:	21 50       	subi	r18, 0x01	; 1
    1b4c:	31 09       	sbc	r19, r1
    1b4e:	41 e0       	ldi	r20, 0x01	; 1
    1b50:	24 1a       	sub	r2, r20
    1b52:	31 08       	sbc	r3, r1
    1b54:	ed cf       	rjmp	.-38     	; 0x1b30 <__fmt_a+0x564>
    1b56:	21 30       	cpi	r18, 0x01	; 1
    1b58:	31 05       	cpc	r19, r1
    1b5a:	81 f3       	breq	.-32     	; 0x1b3c <__fmt_a+0x570>
    1b5c:	fc 01       	movw	r30, r24
    1b5e:	31 97       	sbiw	r30, 0x01	; 1
    1b60:	e4 0d       	add	r30, r4
    1b62:	f5 1d       	adc	r31, r5
    1b64:	ef 28       	or	r14, r15
    1b66:	11 f4       	brne	.+4      	; 0x1b6c <__fmt_a+0x5a0>
    1b68:	2b e2       	ldi	r18, 0x2B	; 43
    1b6a:	01 c0       	rjmp	.+2      	; 0x1b6e <__fmt_a+0x5a2>
    1b6c:	2d e2       	ldi	r18, 0x2D	; 45
    1b6e:	20 83       	st	Z, r18
    1b70:	02 97       	sbiw	r24, 0x02	; 2
    1b72:	f2 01       	movw	r30, r4
    1b74:	e8 0f       	add	r30, r24
    1b76:	f9 1f       	adc	r31, r25
    1b78:	2a 8d       	ldd	r18, Y+26	; 0x1a
    1b7a:	3b 8d       	ldd	r19, Y+27	; 0x1b
    1b7c:	2a 31       	cpi	r18, 0x1A	; 26
    1b7e:	31 05       	cpc	r19, r1
    1b80:	10 f0       	brcs	.+4      	; 0x1b86 <__fmt_a+0x5ba>
    1b82:	20 e7       	ldi	r18, 0x70	; 112
    1b84:	01 c0       	rjmp	.+2      	; 0x1b88 <__fmt_a+0x5bc>
    1b86:	20 e5       	ldi	r18, 0x50	; 80
    1b88:	20 83       	st	Z, r18
    1b8a:	08 17       	cp	r16, r24
    1b8c:	19 07       	cpc	r17, r25
    1b8e:	34 f4       	brge	.+12     	; 0x1b9c <__fmt_a+0x5d0>
    1b90:	af 01       	movw	r20, r30
    1b92:	60 e8       	ldi	r22, 0x80	; 128
    1b94:	8e 81       	ldd	r24, Y+6	; 0x06
    1b96:	9f 81       	ldd	r25, Y+7	; 0x07
    1b98:	0e 94 db 23 	call	0x47b6	; 0x47b6 <strcpy>
    1b9c:	32 01       	movw	r6, r4
    1b9e:	30 e8       	ldi	r19, 0x80	; 128
    1ba0:	83 2e       	mov	r8, r19
    1ba2:	4d 81       	ldd	r20, Y+5	; 0x05
    1ba4:	41 ff       	sbrs	r20, 1
    1ba6:	28 c0       	rjmp	.+80     	; 0x1bf8 <__fmt_a+0x62c>
    1ba8:	40 fd       	sbrc	r20, 0
    1baa:	26 c0       	rjmp	.+76     	; 0x1bf8 <__fmt_a+0x62c>
    1bac:	52 e0       	ldi	r21, 0x02	; 2
    1bae:	25 1a       	sub	r2, r21
    1bb0:	31 08       	sbc	r3, r1
    1bb2:	12 14       	cp	r1, r2
    1bb4:	13 04       	cpc	r1, r3
    1bb6:	04 f5       	brge	.+64     	; 0x1bf8 <__fmt_a+0x62c>
    1bb8:	88 2d       	mov	r24, r8
    1bba:	b3 01       	movw	r22, r6
    1bbc:	0e 94 a8 23 	call	0x4750	; 0x4750 <strlen>
    1bc0:	84 0d       	add	r24, r4
    1bc2:	95 1d       	adc	r25, r5
    1bc4:	9c 01       	movw	r18, r24
    1bc6:	24 19       	sub	r18, r4
    1bc8:	35 09       	sbc	r19, r5
    1bca:	4b 81       	ldd	r20, Y+3	; 0x03
    1bcc:	5c 81       	ldd	r21, Y+4	; 0x04
    1bce:	24 17       	cp	r18, r20
    1bd0:	35 07       	cpc	r19, r21
    1bd2:	3c f0       	brlt	.+14     	; 0x1be2 <__fmt_a+0x616>
    1bd4:	fc 01       	movw	r30, r24
    1bd6:	20 81       	ld	r18, Z
    1bd8:	e2 0d       	add	r30, r2
    1bda:	f3 1d       	adc	r31, r3
    1bdc:	20 83       	st	Z, r18
    1bde:	01 97       	sbiw	r24, 0x01	; 1
    1be0:	f1 cf       	rjmp	.-30     	; 0x1bc4 <__fmt_a+0x5f8>
    1be2:	a1 01       	movw	r20, r2
    1be4:	60 e3       	ldi	r22, 0x30	; 48
    1be6:	70 e0       	ldi	r23, 0x00	; 0
    1be8:	8b 81       	ldd	r24, Y+3	; 0x03
    1bea:	9c 81       	ldd	r25, Y+4	; 0x04
    1bec:	84 0d       	add	r24, r4
    1bee:	95 1d       	adc	r25, r5
    1bf0:	0e 94 4b 24 	call	0x4896	; 0x4896 <memset>
    1bf4:	19 86       	std	Y+9, r1	; 0x09
    1bf6:	18 86       	std	Y+8, r1	; 0x08
    1bf8:	88 2d       	mov	r24, r8
    1bfa:	b3 01       	movw	r22, r6
    1bfc:	0e 94 a8 23 	call	0x4750	; 0x4750 <strlen>
    1c00:	ed 80       	ldd	r14, Y+5	; 0x05
    1c02:	fe 8c       	ldd	r15, Y+30	; 0x1e
    1c04:	08 85       	ldd	r16, Y+8	; 0x08
    1c06:	19 85       	ldd	r17, Y+9	; 0x09
    1c08:	9c 01       	movw	r18, r24
    1c0a:	68 2d       	mov	r22, r8
    1c0c:	a3 01       	movw	r20, r6
    1c0e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1c10:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1c12:	0e 94 12 16 	call	0x2c24	; 0x2c24 <__pad>
    1c16:	a0 96       	adiw	r28, 0x20	; 32
    1c18:	e2 e1       	ldi	r30, 0x12	; 18
    1c1a:	0c 94 be 22 	jmp	0x457c	; 0x457c <__epilogue_restores__>
    1c1e:	5d 81       	ldd	r21, Y+5	; 0x05
    1c20:	53 ff       	sbrs	r21, 3
    1c22:	15 cd       	rjmp	.-1494   	; 0x164e <__fmt_a+0x82>
    1c24:	80 e2       	ldi	r24, 0x20	; 32
    1c26:	06 cd       	rjmp	.-1524   	; 0x1634 <__fmt_a+0x68>

Disassembly of section .text.strcpy:

000047b6 <strcpy>:
    47b6:	9a 01       	movw	r18, r20
    47b8:	46 2f       	mov	r20, r22
    47ba:	dc 01       	movw	r26, r24
    47bc:	f9 01       	movw	r30, r18
    47be:	54 2f       	mov	r21, r20
    47c0:	0e 94 81 24 	call	0x4902	; 0x4902 <__xload_1>
    47c4:	6d 93       	st	X+, r22
    47c6:	2f 5f       	subi	r18, 0xFF	; 255
    47c8:	3f 4f       	sbci	r19, 0xFF	; 255
    47ca:	4f 4f       	sbci	r20, 0xFF	; 255
    47cc:	61 11       	cpse	r22, r1
    47ce:	f6 cf       	rjmp	.-20     	; 0x47bc <strcpy+0x6>
    47d0:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000466a <__divmodhi4>:
    466a:	97 fb       	bst	r25, 7
    466c:	07 2e       	mov	r0, r23
    466e:	16 f4       	brtc	.+4      	; 0x4674 <__divmodhi4+0xa>
    4670:	00 94       	com	r0
    4672:	07 d0       	rcall	.+14     	; 0x4682 <__divmodhi4_neg1>
    4674:	77 fd       	sbrc	r23, 7
    4676:	09 d0       	rcall	.+18     	; 0x468a <__divmodhi4_neg2>
    4678:	0e 94 49 23 	call	0x4692	; 0x4692 <__udivmodhi4>
    467c:	07 fc       	sbrc	r0, 7
    467e:	05 d0       	rcall	.+10     	; 0x468a <__divmodhi4_neg2>
    4680:	3e f4       	brtc	.+14     	; 0x4690 <__divmodhi4_exit>

00004682 <__divmodhi4_neg1>:
    4682:	90 95       	com	r25
    4684:	81 95       	neg	r24
    4686:	9f 4f       	sbci	r25, 0xFF	; 255
    4688:	08 95       	ret

0000468a <__divmodhi4_neg2>:
    468a:	70 95       	com	r23
    468c:	61 95       	neg	r22
    468e:	7f 4f       	sbci	r23, 0xFF	; 255

00004690 <__divmodhi4_exit>:
    4690:	08 95       	ret

Disassembly of section .text.libgcc.div:

000047d2 <__umoddi3>:
    47d2:	68 94       	set
    47d4:	01 c0       	rjmp	.+2      	; 0x47d8 <__udivdi3_umoddi3>

000047d6 <__udivdi3>:
    47d6:	e8 94       	clt

000047d8 <__udivdi3_umoddi3>:
    47d8:	8f 92       	push	r8
    47da:	9f 92       	push	r9
    47dc:	cf 93       	push	r28
    47de:	df 93       	push	r29
    47e0:	0e 94 d6 1c 	call	0x39ac	; 0x39ac <__udivmod64>
    47e4:	df 91       	pop	r29
    47e6:	cf 91       	pop	r28
    47e8:	9f 90       	pop	r9
    47ea:	8f 90       	pop	r8
    47ec:	08 95       	ret

Disassembly of section .text.libgcc.div:

000039ac <__udivmod64>:
    39ac:	88 24       	eor	r8, r8
    39ae:	99 24       	eor	r9, r9
    39b0:	f4 01       	movw	r30, r8
    39b2:	e4 01       	movw	r28, r8
    39b4:	b0 e4       	ldi	r27, 0x40	; 64
    39b6:	9f 93       	push	r25
    39b8:	aa 27       	eor	r26, r26
    39ba:	9a 15       	cp	r25, r10
    39bc:	8b 04       	cpc	r8, r11
    39be:	9c 04       	cpc	r9, r12
    39c0:	ed 05       	cpc	r30, r13
    39c2:	fe 05       	cpc	r31, r14
    39c4:	cf 05       	cpc	r28, r15
    39c6:	d0 07       	cpc	r29, r16
    39c8:	a1 07       	cpc	r26, r17
    39ca:	98 f4       	brcc	.+38     	; 0x39f2 <__udivmod64+0x46>
    39cc:	ad 2f       	mov	r26, r29
    39ce:	dc 2f       	mov	r29, r28
    39d0:	cf 2f       	mov	r28, r31
    39d2:	fe 2f       	mov	r31, r30
    39d4:	e9 2d       	mov	r30, r9
    39d6:	98 2c       	mov	r9, r8
    39d8:	89 2e       	mov	r8, r25
    39da:	98 2f       	mov	r25, r24
    39dc:	87 2f       	mov	r24, r23
    39de:	76 2f       	mov	r23, r22
    39e0:	65 2f       	mov	r22, r21
    39e2:	54 2f       	mov	r21, r20
    39e4:	43 2f       	mov	r20, r19
    39e6:	32 2f       	mov	r19, r18
    39e8:	22 27       	eor	r18, r18
    39ea:	b8 50       	subi	r27, 0x08	; 8
    39ec:	31 f7       	brne	.-52     	; 0x39ba <__udivmod64+0xe>
    39ee:	bf 91       	pop	r27
    39f0:	27 c0       	rjmp	.+78     	; 0x3a40 <__udivmod64+0x94>
    39f2:	1b 2e       	mov	r1, r27
    39f4:	bf 91       	pop	r27
    39f6:	bb 27       	eor	r27, r27
    39f8:	22 0f       	add	r18, r18
    39fa:	33 1f       	adc	r19, r19
    39fc:	44 1f       	adc	r20, r20
    39fe:	55 1f       	adc	r21, r21
    3a00:	66 1f       	adc	r22, r22
    3a02:	77 1f       	adc	r23, r23
    3a04:	88 1f       	adc	r24, r24
    3a06:	99 1f       	adc	r25, r25
    3a08:	88 1c       	adc	r8, r8
    3a0a:	99 1c       	adc	r9, r9
    3a0c:	ee 1f       	adc	r30, r30
    3a0e:	ff 1f       	adc	r31, r31
    3a10:	cc 1f       	adc	r28, r28
    3a12:	dd 1f       	adc	r29, r29
    3a14:	aa 1f       	adc	r26, r26
    3a16:	bb 1f       	adc	r27, r27
    3a18:	8a 14       	cp	r8, r10
    3a1a:	9b 04       	cpc	r9, r11
    3a1c:	ec 05       	cpc	r30, r12
    3a1e:	fd 05       	cpc	r31, r13
    3a20:	ce 05       	cpc	r28, r14
    3a22:	df 05       	cpc	r29, r15
    3a24:	a0 07       	cpc	r26, r16
    3a26:	b1 07       	cpc	r27, r17
    3a28:	48 f0       	brcs	.+18     	; 0x3a3c <__udivmod64+0x90>
    3a2a:	8a 18       	sub	r8, r10
    3a2c:	9b 08       	sbc	r9, r11
    3a2e:	ec 09       	sbc	r30, r12
    3a30:	fd 09       	sbc	r31, r13
    3a32:	ce 09       	sbc	r28, r14
    3a34:	df 09       	sbc	r29, r15
    3a36:	a0 0b       	sbc	r26, r16
    3a38:	b1 0b       	sbc	r27, r17
    3a3a:	21 60       	ori	r18, 0x01	; 1
    3a3c:	1a 94       	dec	r1
    3a3e:	e1 f6       	brne	.-72     	; 0x39f8 <__udivmod64+0x4c>
    3a40:	2e f4       	brtc	.+10     	; 0x3a4c <__udivmod64+0xa0>
    3a42:	94 01       	movw	r18, r8
    3a44:	af 01       	movw	r20, r30
    3a46:	be 01       	movw	r22, r28
    3a48:	cd 01       	movw	r24, r26
    3a4a:	00 0c       	add	r0, r0
    3a4c:	08 95       	ret

Disassembly of section .text.libgcc:

00004796 <__negdi2>:
    4796:	60 95       	com	r22
    4798:	70 95       	com	r23
    479a:	80 95       	com	r24
    479c:	90 95       	com	r25
    479e:	30 95       	com	r19
    47a0:	40 95       	com	r20
    47a2:	50 95       	com	r21
    47a4:	21 95       	neg	r18
    47a6:	3f 4f       	sbci	r19, 0xFF	; 255
    47a8:	4f 4f       	sbci	r20, 0xFF	; 255
    47aa:	5f 4f       	sbci	r21, 0xFF	; 255
    47ac:	6f 4f       	sbci	r22, 0xFF	; 255
    47ae:	7f 4f       	sbci	r23, 0xFF	; 255
    47b0:	8f 4f       	sbci	r24, 0xFF	; 255
    47b2:	9f 4f       	sbci	r25, 0xFF	; 255
    47b4:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

0000450e <__prologue_saves__>:
    450e:	2f 92       	push	r2
    4510:	3f 92       	push	r3
    4512:	4f 92       	push	r4
    4514:	5f 92       	push	r5
    4516:	6f 92       	push	r6
    4518:	7f 92       	push	r7
    451a:	8f 92       	push	r8
    451c:	9f 92       	push	r9
    451e:	af 92       	push	r10
    4520:	bf 92       	push	r11
    4522:	cf 92       	push	r12
    4524:	df 92       	push	r13
    4526:	ef 92       	push	r14
    4528:	ff 92       	push	r15
    452a:	0f 93       	push	r16
    452c:	1f 93       	push	r17
    452e:	cf 93       	push	r28
    4530:	df 93       	push	r29
    4532:	cd b7       	in	r28, 0x3d	; 61
    4534:	de b7       	in	r29, 0x3e	; 62
    4536:	ca 1b       	sub	r28, r26
    4538:	db 0b       	sbc	r29, r27
    453a:	0f b6       	in	r0, 0x3f	; 63
    453c:	f8 94       	cli
    453e:	de bf       	out	0x3e, r29	; 62
    4540:	0f be       	out	0x3f, r0	; 63
    4542:	cd bf       	out	0x3d, r28	; 61
    4544:	19 94       	eijmp

Disassembly of section .text.libgcc.prologue:

0000457c <__epilogue_restores__>:
    457c:	2a 88       	ldd	r2, Y+18	; 0x12
    457e:	39 88       	ldd	r3, Y+17	; 0x11
    4580:	48 88       	ldd	r4, Y+16	; 0x10
    4582:	5f 84       	ldd	r5, Y+15	; 0x0f
    4584:	6e 84       	ldd	r6, Y+14	; 0x0e
    4586:	7d 84       	ldd	r7, Y+13	; 0x0d
    4588:	8c 84       	ldd	r8, Y+12	; 0x0c
    458a:	9b 84       	ldd	r9, Y+11	; 0x0b
    458c:	aa 84       	ldd	r10, Y+10	; 0x0a
    458e:	b9 84       	ldd	r11, Y+9	; 0x09
    4590:	c8 84       	ldd	r12, Y+8	; 0x08
    4592:	df 80       	ldd	r13, Y+7	; 0x07
    4594:	ee 80       	ldd	r14, Y+6	; 0x06
    4596:	fd 80       	ldd	r15, Y+5	; 0x05
    4598:	0c 81       	ldd	r16, Y+4	; 0x04
    459a:	1b 81       	ldd	r17, Y+3	; 0x03
    459c:	aa 81       	ldd	r26, Y+2	; 0x02
    459e:	b9 81       	ldd	r27, Y+1	; 0x01
    45a0:	ce 0f       	add	r28, r30
    45a2:	d1 1d       	adc	r29, r1
    45a4:	0f b6       	in	r0, 0x3f	; 63
    45a6:	f8 94       	cli
    45a8:	de bf       	out	0x3e, r29	; 62
    45aa:	0f be       	out	0x3f, r0	; 63
    45ac:	cd bf       	out	0x3d, r28	; 61
    45ae:	ed 01       	movw	r28, r26
    45b0:	08 95       	ret

Disassembly of section .text.libgcc:

000047ee <__movmemx_qi>:
    47ee:	99 27       	eor	r25, r25

000047f0 <__movmemx_hi>:
    47f0:	77 fd       	sbrc	r23, 7
    47f2:	06 c0       	rjmp	.+12     	; 0x4800 <__movmemx_hi+0x10>
    47f4:	7b bf       	out	0x3b, r23	; 59
    47f6:	07 90       	elpm	r0, Z+
    47f8:	0d 92       	st	X+, r0
    47fa:	01 97       	sbiw	r24, 0x01	; 1
    47fc:	e1 f7       	brne	.-8      	; 0x47f6 <__movmemx_hi+0x6>
    47fe:	08 95       	ret
    4800:	01 90       	ld	r0, Z+
    4802:	0d 92       	st	X+, r0
    4804:	01 97       	sbiw	r24, 0x01	; 1
    4806:	e1 f7       	brne	.-8      	; 0x4800 <__movmemx_hi+0x10>
    4808:	08 95       	ret

Disassembly of section .text.libgcc.builtins:

0000445e <__ashrdi3>:
    445e:	97 fb       	bst	r25, 7
    4460:	10 f8       	bld	r1, 0

00004462 <__lshrdi3>:
    4462:	16 94       	lsr	r1
    4464:	00 08       	sbc	r0, r0
    4466:	0f 93       	push	r16
    4468:	08 30       	cpi	r16, 0x08	; 8
    446a:	98 f0       	brcs	.+38     	; 0x4492 <__lshrdi3+0x30>
    446c:	08 50       	subi	r16, 0x08	; 8
    446e:	23 2f       	mov	r18, r19
    4470:	34 2f       	mov	r19, r20
    4472:	45 2f       	mov	r20, r21
    4474:	56 2f       	mov	r21, r22
    4476:	67 2f       	mov	r22, r23
    4478:	78 2f       	mov	r23, r24
    447a:	89 2f       	mov	r24, r25
    447c:	90 2d       	mov	r25, r0
    447e:	f4 cf       	rjmp	.-24     	; 0x4468 <__lshrdi3+0x6>
    4480:	05 94       	asr	r0
    4482:	97 95       	ror	r25
    4484:	87 95       	ror	r24
    4486:	77 95       	ror	r23
    4488:	67 95       	ror	r22
    448a:	57 95       	ror	r21
    448c:	47 95       	ror	r20
    448e:	37 95       	ror	r19
    4490:	27 95       	ror	r18
    4492:	0a 95       	dec	r16
    4494:	aa f7       	brpl	.-22     	; 0x4480 <__lshrdi3+0x1e>
    4496:	0f 91       	pop	r16
    4498:	08 95       	ret

Disassembly of section .text.libgcc:

0000483a <__cmpdi2_s8>:
    483a:	00 24       	eor	r0, r0
    483c:	a7 fd       	sbrc	r26, 7
    483e:	00 94       	com	r0
    4840:	2a 17       	cp	r18, r26
    4842:	30 05       	cpc	r19, r0
    4844:	40 05       	cpc	r20, r0
    4846:	50 05       	cpc	r21, r0
    4848:	60 05       	cpc	r22, r0
    484a:	70 05       	cpc	r23, r0
    484c:	80 05       	cpc	r24, r0
    484e:	90 05       	cpc	r25, r0
    4850:	08 95       	ret

Disassembly of section .text.libgcc.div:

00004692 <__udivmodhi4>:
    4692:	aa 1b       	sub	r26, r26
    4694:	bb 1b       	sub	r27, r27
    4696:	51 e1       	ldi	r21, 0x11	; 17
    4698:	07 c0       	rjmp	.+14     	; 0x46a8 <__udivmodhi4_ep>

0000469a <__udivmodhi4_loop>:
    469a:	aa 1f       	adc	r26, r26
    469c:	bb 1f       	adc	r27, r27
    469e:	a6 17       	cp	r26, r22
    46a0:	b7 07       	cpc	r27, r23
    46a2:	10 f0       	brcs	.+4      	; 0x46a8 <__udivmodhi4_ep>
    46a4:	a6 1b       	sub	r26, r22
    46a6:	b7 0b       	sbc	r27, r23

000046a8 <__udivmodhi4_ep>:
    46a8:	88 1f       	adc	r24, r24
    46aa:	99 1f       	adc	r25, r25
    46ac:	5a 95       	dec	r21
    46ae:	a9 f7       	brne	.-22     	; 0x469a <__udivmodhi4_loop>
    46b0:	80 95       	com	r24
    46b2:	90 95       	com	r25
    46b4:	bc 01       	movw	r22, r24
    46b6:	cd 01       	movw	r24, r26
    46b8:	08 95       	ret

Disassembly of section .text:

00004910 <__subsf3>:
    4910:	50 58       	subi	r21, 0x80	; 128

00004912 <__addsf3>:
    4912:	bb 27       	eor	r27, r27
    4914:	aa 27       	eor	r26, r26
    4916:	0e 94 48 18 	call	0x3090	; 0x3090 <__addsf3x>
    491a:	0c 94 ba 23 	jmp	0x4774	; 0x4774 <__fp_round>

Disassembly of section .text:

00003090 <__addsf3x>:
    3090:	11 c0       	rjmp	.+34     	; 0x30b4 <__addsf3x+0x24>
    3092:	0e 94 96 24 	call	0x492c	; 0x492c <__fp_pscA>
    3096:	38 f0       	brcs	.+14     	; 0x30a6 <__addsf3x+0x16>
    3098:	0e 94 9d 24 	call	0x493a	; 0x493a <__fp_pscB>
    309c:	20 f0       	brcs	.+8      	; 0x30a6 <__addsf3x+0x16>
    309e:	39 f4       	brne	.+14     	; 0x30ae <__addsf3x+0x1e>
    30a0:	9f 3f       	cpi	r25, 0xFF	; 255
    30a2:	19 f4       	brne	.+6      	; 0x30aa <__addsf3x+0x1a>
    30a4:	26 f4       	brtc	.+8      	; 0x30ae <__addsf3x+0x1e>
    30a6:	0c 94 c3 24 	jmp	0x4986	; 0x4986 <__fp_nan>
    30aa:	0e f4       	brtc	.+2      	; 0x30ae <__addsf3x+0x1e>
    30ac:	e0 95       	com	r30
    30ae:	e7 fb       	bst	r30, 7
    30b0:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__fp_inf>
    30b4:	e9 2f       	mov	r30, r25
    30b6:	0e 94 ae 21 	call	0x435c	; 0x435c <__fp_split3>
    30ba:	58 f3       	brcs	.-42     	; 0x3092 <__addsf3x+0x2>
    30bc:	ba 17       	cp	r27, r26
    30be:	62 07       	cpc	r22, r18
    30c0:	73 07       	cpc	r23, r19
    30c2:	84 07       	cpc	r24, r20
    30c4:	95 07       	cpc	r25, r21
    30c6:	20 f0       	brcs	.+8      	; 0x30d0 <__addsf3x+0x40>
    30c8:	79 f4       	brne	.+30     	; 0x30e8 <__addsf3x+0x58>
    30ca:	a6 f5       	brtc	.+104    	; 0x3134 <__addsf3x+0xa4>
    30cc:	0c 94 a4 24 	jmp	0x4948	; 0x4948 <__fp_zero>
    30d0:	0e f4       	brtc	.+2      	; 0x30d4 <__addsf3x+0x44>
    30d2:	e0 95       	com	r30
    30d4:	0b 2e       	mov	r0, r27
    30d6:	ba 2f       	mov	r27, r26
    30d8:	a0 2d       	mov	r26, r0
    30da:	0b 01       	movw	r0, r22
    30dc:	b9 01       	movw	r22, r18
    30de:	90 01       	movw	r18, r0
    30e0:	0c 01       	movw	r0, r24
    30e2:	ca 01       	movw	r24, r20
    30e4:	a0 01       	movw	r20, r0
    30e6:	11 24       	eor	r1, r1
    30e8:	ff 27       	eor	r31, r31
    30ea:	59 1b       	sub	r21, r25
    30ec:	99 f0       	breq	.+38     	; 0x3114 <__addsf3x+0x84>
    30ee:	59 3f       	cpi	r21, 0xF9	; 249
    30f0:	50 f4       	brcc	.+20     	; 0x3106 <__addsf3x+0x76>
    30f2:	50 3e       	cpi	r21, 0xE0	; 224
    30f4:	68 f1       	brcs	.+90     	; 0x3150 <__addsf3x+0xc0>
    30f6:	1a 16       	cp	r1, r26
    30f8:	f0 40       	sbci	r31, 0x00	; 0
    30fa:	a2 2f       	mov	r26, r18
    30fc:	23 2f       	mov	r18, r19
    30fe:	34 2f       	mov	r19, r20
    3100:	44 27       	eor	r20, r20
    3102:	58 5f       	subi	r21, 0xF8	; 248
    3104:	f3 cf       	rjmp	.-26     	; 0x30ec <__addsf3x+0x5c>
    3106:	46 95       	lsr	r20
    3108:	37 95       	ror	r19
    310a:	27 95       	ror	r18
    310c:	a7 95       	ror	r26
    310e:	f0 40       	sbci	r31, 0x00	; 0
    3110:	53 95       	inc	r21
    3112:	c9 f7       	brne	.-14     	; 0x3106 <__addsf3x+0x76>
    3114:	7e f4       	brtc	.+30     	; 0x3134 <__addsf3x+0xa4>
    3116:	1f 16       	cp	r1, r31
    3118:	ba 0b       	sbc	r27, r26
    311a:	62 0b       	sbc	r22, r18
    311c:	73 0b       	sbc	r23, r19
    311e:	84 0b       	sbc	r24, r20
    3120:	ba f0       	brmi	.+46     	; 0x3150 <__addsf3x+0xc0>
    3122:	91 50       	subi	r25, 0x01	; 1
    3124:	a1 f0       	breq	.+40     	; 0x314e <__addsf3x+0xbe>
    3126:	ff 0f       	add	r31, r31
    3128:	bb 1f       	adc	r27, r27
    312a:	66 1f       	adc	r22, r22
    312c:	77 1f       	adc	r23, r23
    312e:	88 1f       	adc	r24, r24
    3130:	c2 f7       	brpl	.-16     	; 0x3122 <__addsf3x+0x92>
    3132:	0e c0       	rjmp	.+28     	; 0x3150 <__addsf3x+0xc0>
    3134:	ba 0f       	add	r27, r26
    3136:	62 1f       	adc	r22, r18
    3138:	73 1f       	adc	r23, r19
    313a:	84 1f       	adc	r24, r20
    313c:	48 f4       	brcc	.+18     	; 0x3150 <__addsf3x+0xc0>
    313e:	87 95       	ror	r24
    3140:	77 95       	ror	r23
    3142:	67 95       	ror	r22
    3144:	b7 95       	ror	r27
    3146:	f7 95       	ror	r31
    3148:	9e 3f       	cpi	r25, 0xFE	; 254
    314a:	08 f0       	brcs	.+2      	; 0x314e <__addsf3x+0xbe>
    314c:	b0 cf       	rjmp	.-160    	; 0x30ae <__addsf3x+0x1e>
    314e:	93 95       	inc	r25
    3150:	88 0f       	add	r24, r24
    3152:	08 f0       	brcs	.+2      	; 0x3156 <__addsf3x+0xc6>
    3154:	99 27       	eor	r25, r25
    3156:	ee 0f       	add	r30, r30
    3158:	97 95       	ror	r25
    315a:	87 95       	ror	r24
    315c:	08 95       	ret

Disassembly of section .text:

00004962 <__cmpsf2>:
    4962:	0e 94 23 21 	call	0x4246	; 0x4246 <__fp_cmp>
    4966:	08 f4       	brcc	.+2      	; 0x496a <__cmpsf2+0x8>
    4968:	81 e0       	ldi	r24, 0x01	; 1
    496a:	08 95       	ret

Disassembly of section .text:

00004976 <__divsf3>:
    4976:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__divsf3x>
    497a:	0c 94 ba 23 	jmp	0x4774	; 0x4774 <__fp_round>

Disassembly of section .text:

00002d32 <__divsf3x>:
    2d32:	10 c0       	rjmp	.+32     	; 0x2d54 <__divsf3x+0x22>
    2d34:	0e 94 9d 24 	call	0x493a	; 0x493a <__fp_pscB>
    2d38:	58 f0       	brcs	.+22     	; 0x2d50 <__divsf3x+0x1e>
    2d3a:	0e 94 96 24 	call	0x492c	; 0x492c <__fp_pscA>
    2d3e:	40 f0       	brcs	.+16     	; 0x2d50 <__divsf3x+0x1e>
    2d40:	29 f4       	brne	.+10     	; 0x2d4c <__divsf3x+0x1a>
    2d42:	5f 3f       	cpi	r21, 0xFF	; 255
    2d44:	29 f0       	breq	.+10     	; 0x2d50 <__divsf3x+0x1e>
    2d46:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__fp_inf>
    2d4a:	51 11       	cpse	r21, r1
    2d4c:	0c 94 a5 24 	jmp	0x494a	; 0x494a <__fp_szero>
    2d50:	0c 94 c3 24 	jmp	0x4986	; 0x4986 <__fp_nan>
    2d54:	0e 94 ae 21 	call	0x435c	; 0x435c <__fp_split3>
    2d58:	68 f3       	brcs	.-38     	; 0x2d34 <__divsf3x+0x2>

00002d5a <__divsf3_pse>:
    2d5a:	99 23       	and	r25, r25
    2d5c:	b1 f3       	breq	.-20     	; 0x2d4a <__divsf3x+0x18>
    2d5e:	55 23       	and	r21, r21
    2d60:	91 f3       	breq	.-28     	; 0x2d46 <__divsf3x+0x14>
    2d62:	95 1b       	sub	r25, r21
    2d64:	55 0b       	sbc	r21, r21
    2d66:	bb 27       	eor	r27, r27
    2d68:	aa 27       	eor	r26, r26
    2d6a:	62 17       	cp	r22, r18
    2d6c:	73 07       	cpc	r23, r19
    2d6e:	84 07       	cpc	r24, r20
    2d70:	38 f0       	brcs	.+14     	; 0x2d80 <__divsf3_pse+0x26>
    2d72:	9f 5f       	subi	r25, 0xFF	; 255
    2d74:	5f 4f       	sbci	r21, 0xFF	; 255
    2d76:	22 0f       	add	r18, r18
    2d78:	33 1f       	adc	r19, r19
    2d7a:	44 1f       	adc	r20, r20
    2d7c:	aa 1f       	adc	r26, r26
    2d7e:	a9 f3       	breq	.-22     	; 0x2d6a <__divsf3_pse+0x10>
    2d80:	35 d0       	rcall	.+106    	; 0x2dec <__divsf3_pse+0x92>
    2d82:	0e 2e       	mov	r0, r30
    2d84:	3a f0       	brmi	.+14     	; 0x2d94 <__divsf3_pse+0x3a>
    2d86:	e0 e8       	ldi	r30, 0x80	; 128
    2d88:	32 d0       	rcall	.+100    	; 0x2dee <__divsf3_pse+0x94>
    2d8a:	91 50       	subi	r25, 0x01	; 1
    2d8c:	50 40       	sbci	r21, 0x00	; 0
    2d8e:	e6 95       	lsr	r30
    2d90:	00 1c       	adc	r0, r0
    2d92:	ca f7       	brpl	.-14     	; 0x2d86 <__divsf3_pse+0x2c>
    2d94:	2b d0       	rcall	.+86     	; 0x2dec <__divsf3_pse+0x92>
    2d96:	fe 2f       	mov	r31, r30
    2d98:	29 d0       	rcall	.+82     	; 0x2dec <__divsf3_pse+0x92>
    2d9a:	66 0f       	add	r22, r22
    2d9c:	77 1f       	adc	r23, r23
    2d9e:	88 1f       	adc	r24, r24
    2da0:	bb 1f       	adc	r27, r27
    2da2:	26 17       	cp	r18, r22
    2da4:	37 07       	cpc	r19, r23
    2da6:	48 07       	cpc	r20, r24
    2da8:	ab 07       	cpc	r26, r27
    2daa:	b0 e8       	ldi	r27, 0x80	; 128
    2dac:	09 f0       	breq	.+2      	; 0x2db0 <__divsf3_pse+0x56>
    2dae:	bb 0b       	sbc	r27, r27
    2db0:	80 2d       	mov	r24, r0
    2db2:	bf 01       	movw	r22, r30
    2db4:	ff 27       	eor	r31, r31
    2db6:	93 58       	subi	r25, 0x83	; 131
    2db8:	5f 4f       	sbci	r21, 0xFF	; 255
    2dba:	3a f0       	brmi	.+14     	; 0x2dca <__divsf3_pse+0x70>
    2dbc:	9e 3f       	cpi	r25, 0xFE	; 254
    2dbe:	51 05       	cpc	r21, r1
    2dc0:	78 f0       	brcs	.+30     	; 0x2de0 <__divsf3_pse+0x86>
    2dc2:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__fp_inf>
    2dc6:	0c 94 a5 24 	jmp	0x494a	; 0x494a <__fp_szero>
    2dca:	5f 3f       	cpi	r21, 0xFF	; 255
    2dcc:	e4 f3       	brlt	.-8      	; 0x2dc6 <__divsf3_pse+0x6c>
    2dce:	98 3e       	cpi	r25, 0xE8	; 232
    2dd0:	d4 f3       	brlt	.-12     	; 0x2dc6 <__divsf3_pse+0x6c>
    2dd2:	86 95       	lsr	r24
    2dd4:	77 95       	ror	r23
    2dd6:	67 95       	ror	r22
    2dd8:	b7 95       	ror	r27
    2dda:	f7 95       	ror	r31
    2ddc:	9f 5f       	subi	r25, 0xFF	; 255
    2dde:	c9 f7       	brne	.-14     	; 0x2dd2 <__divsf3_pse+0x78>
    2de0:	88 0f       	add	r24, r24
    2de2:	91 1d       	adc	r25, r1
    2de4:	96 95       	lsr	r25
    2de6:	87 95       	ror	r24
    2de8:	97 f9       	bld	r25, 7
    2dea:	08 95       	ret
    2dec:	e1 e0       	ldi	r30, 0x01	; 1
    2dee:	66 0f       	add	r22, r22
    2df0:	77 1f       	adc	r23, r23
    2df2:	88 1f       	adc	r24, r24
    2df4:	bb 1f       	adc	r27, r27
    2df6:	62 17       	cp	r22, r18
    2df8:	73 07       	cpc	r23, r19
    2dfa:	84 07       	cpc	r24, r20
    2dfc:	ba 07       	cpc	r27, r26
    2dfe:	20 f0       	brcs	.+8      	; 0x2e08 <__divsf3_pse+0xae>
    2e00:	62 1b       	sub	r22, r18
    2e02:	73 0b       	sbc	r23, r19
    2e04:	84 0b       	sbc	r24, r20
    2e06:	ba 0b       	sbc	r27, r26
    2e08:	ee 1f       	adc	r30, r30
    2e0a:	88 f7       	brcc	.-30     	; 0x2dee <__divsf3_pse+0x94>
    2e0c:	e0 95       	com	r30
    2e0e:	08 95       	ret

Disassembly of section .text:

0000491e <__fixsfsi>:
    491e:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__fixunssfsi>
    4922:	68 94       	set
    4924:	b1 11       	cpse	r27, r1
    4926:	0c 94 a5 24 	jmp	0x494a	; 0x494a <__fp_szero>
    492a:	08 95       	ret

Disassembly of section .text:

000040e4 <__fixunssfsi>:
    40e4:	0e 94 b6 21 	call	0x436c	; 0x436c <__fp_splitA>
    40e8:	88 f0       	brcs	.+34     	; 0x410c <__fixunssfsi+0x28>
    40ea:	9f 57       	subi	r25, 0x7F	; 127
    40ec:	98 f0       	brcs	.+38     	; 0x4114 <__fixunssfsi+0x30>
    40ee:	b9 2f       	mov	r27, r25
    40f0:	99 27       	eor	r25, r25
    40f2:	b7 51       	subi	r27, 0x17	; 23
    40f4:	b0 f0       	brcs	.+44     	; 0x4122 <__fixunssfsi+0x3e>
    40f6:	e1 f0       	breq	.+56     	; 0x4130 <__fixunssfsi+0x4c>
    40f8:	66 0f       	add	r22, r22
    40fa:	77 1f       	adc	r23, r23
    40fc:	88 1f       	adc	r24, r24
    40fe:	99 1f       	adc	r25, r25
    4100:	1a f0       	brmi	.+6      	; 0x4108 <__fixunssfsi+0x24>
    4102:	ba 95       	dec	r27
    4104:	c9 f7       	brne	.-14     	; 0x40f8 <__fixunssfsi+0x14>
    4106:	14 c0       	rjmp	.+40     	; 0x4130 <__fixunssfsi+0x4c>
    4108:	b1 30       	cpi	r27, 0x01	; 1
    410a:	91 f0       	breq	.+36     	; 0x4130 <__fixunssfsi+0x4c>
    410c:	0e 94 a4 24 	call	0x4948	; 0x4948 <__fp_zero>
    4110:	b1 e0       	ldi	r27, 0x01	; 1
    4112:	08 95       	ret
    4114:	0c 94 a4 24 	jmp	0x4948	; 0x4948 <__fp_zero>
    4118:	67 2f       	mov	r22, r23
    411a:	78 2f       	mov	r23, r24
    411c:	88 27       	eor	r24, r24
    411e:	b8 5f       	subi	r27, 0xF8	; 248
    4120:	39 f0       	breq	.+14     	; 0x4130 <__fixunssfsi+0x4c>
    4122:	b9 3f       	cpi	r27, 0xF9	; 249
    4124:	cc f3       	brlt	.-14     	; 0x4118 <__fixunssfsi+0x34>
    4126:	86 95       	lsr	r24
    4128:	77 95       	ror	r23
    412a:	67 95       	ror	r22
    412c:	b3 95       	inc	r27
    412e:	d9 f7       	brne	.-10     	; 0x4126 <__fixunssfsi+0x42>
    4130:	3e f4       	brtc	.+14     	; 0x4140 <__fixunssfsi+0x5c>
    4132:	90 95       	com	r25
    4134:	80 95       	com	r24
    4136:	70 95       	com	r23
    4138:	61 95       	neg	r22
    413a:	7f 4f       	sbci	r23, 0xFF	; 255
    413c:	8f 4f       	sbci	r24, 0xFF	; 255
    413e:	9f 4f       	sbci	r25, 0xFF	; 255
    4140:	08 95       	ret

Disassembly of section .text:

00004246 <__fp_cmp>:
    4246:	99 0f       	add	r25, r25
    4248:	00 08       	sbc	r0, r0
    424a:	55 0f       	add	r21, r21
    424c:	aa 0b       	sbc	r26, r26
    424e:	e0 e8       	ldi	r30, 0x80	; 128
    4250:	fe ef       	ldi	r31, 0xFE	; 254
    4252:	16 16       	cp	r1, r22
    4254:	17 06       	cpc	r1, r23
    4256:	e8 07       	cpc	r30, r24
    4258:	f9 07       	cpc	r31, r25
    425a:	c0 f0       	brcs	.+48     	; 0x428c <__fp_cmp+0x46>
    425c:	12 16       	cp	r1, r18
    425e:	13 06       	cpc	r1, r19
    4260:	e4 07       	cpc	r30, r20
    4262:	f5 07       	cpc	r31, r21
    4264:	98 f0       	brcs	.+38     	; 0x428c <__fp_cmp+0x46>
    4266:	62 1b       	sub	r22, r18
    4268:	73 0b       	sbc	r23, r19
    426a:	84 0b       	sbc	r24, r20
    426c:	95 0b       	sbc	r25, r21
    426e:	39 f4       	brne	.+14     	; 0x427e <__fp_cmp+0x38>
    4270:	0a 26       	eor	r0, r26
    4272:	61 f0       	breq	.+24     	; 0x428c <__fp_cmp+0x46>
    4274:	23 2b       	or	r18, r19
    4276:	24 2b       	or	r18, r20
    4278:	25 2b       	or	r18, r21
    427a:	21 f4       	brne	.+8      	; 0x4284 <__fp_cmp+0x3e>
    427c:	08 95       	ret
    427e:	0a 26       	eor	r0, r26
    4280:	09 f4       	brne	.+2      	; 0x4284 <__fp_cmp+0x3e>
    4282:	a1 40       	sbci	r26, 0x01	; 1
    4284:	a6 95       	lsr	r26
    4286:	8f ef       	ldi	r24, 0xFF	; 255
    4288:	81 1d       	adc	r24, r1
    428a:	81 1d       	adc	r24, r1
    428c:	08 95       	ret

Disassembly of section .text:

00004956 <__fp_inf>:
    4956:	97 f9       	bld	r25, 7
    4958:	9f 67       	ori	r25, 0x7F	; 127
    495a:	80 e8       	ldi	r24, 0x80	; 128
    495c:	70 e0       	ldi	r23, 0x00	; 0
    495e:	60 e0       	ldi	r22, 0x00	; 0
    4960:	08 95       	ret

Disassembly of section .text:

00004986 <__fp_nan>:
    4986:	9f ef       	ldi	r25, 0xFF	; 255
    4988:	80 ec       	ldi	r24, 0xC0	; 192
    498a:	08 95       	ret

Disassembly of section .text:

0000492c <__fp_pscA>:
    492c:	00 24       	eor	r0, r0
    492e:	0a 94       	dec	r0
    4930:	16 16       	cp	r1, r22
    4932:	17 06       	cpc	r1, r23
    4934:	18 06       	cpc	r1, r24
    4936:	09 06       	cpc	r0, r25
    4938:	08 95       	ret

Disassembly of section .text:

0000493a <__fp_pscB>:
    493a:	00 24       	eor	r0, r0
    493c:	0a 94       	dec	r0
    493e:	12 16       	cp	r1, r18
    4940:	13 06       	cpc	r1, r19
    4942:	14 06       	cpc	r1, r20
    4944:	05 06       	cpc	r0, r21
    4946:	08 95       	ret

Disassembly of section .text:

00004774 <__fp_round>:
    4774:	09 2e       	mov	r0, r25
    4776:	03 94       	inc	r0
    4778:	00 0c       	add	r0, r0
    477a:	11 f4       	brne	.+4      	; 0x4780 <__fp_round+0xc>
    477c:	88 23       	and	r24, r24
    477e:	52 f0       	brmi	.+20     	; 0x4794 <__fp_round+0x20>
    4780:	bb 0f       	add	r27, r27
    4782:	40 f4       	brcc	.+16     	; 0x4794 <__fp_round+0x20>
    4784:	bf 2b       	or	r27, r31
    4786:	11 f4       	brne	.+4      	; 0x478c <__fp_round+0x18>
    4788:	60 ff       	sbrs	r22, 0
    478a:	04 c0       	rjmp	.+8      	; 0x4794 <__fp_round+0x20>
    478c:	6f 5f       	subi	r22, 0xFF	; 255
    478e:	7f 4f       	sbci	r23, 0xFF	; 255
    4790:	8f 4f       	sbci	r24, 0xFF	; 255
    4792:	9f 4f       	sbci	r25, 0xFF	; 255
    4794:	08 95       	ret

Disassembly of section .text:

0000435c <__fp_split3>:
    435c:	57 fd       	sbrc	r21, 7
    435e:	90 58       	subi	r25, 0x80	; 128
    4360:	44 0f       	add	r20, r20
    4362:	55 1f       	adc	r21, r21
    4364:	59 f0       	breq	.+22     	; 0x437c <__fp_splitA+0x10>
    4366:	5f 3f       	cpi	r21, 0xFF	; 255
    4368:	71 f0       	breq	.+28     	; 0x4386 <__fp_splitA+0x1a>
    436a:	47 95       	ror	r20

0000436c <__fp_splitA>:
    436c:	88 0f       	add	r24, r24
    436e:	97 fb       	bst	r25, 7
    4370:	99 1f       	adc	r25, r25
    4372:	61 f0       	breq	.+24     	; 0x438c <__fp_splitA+0x20>
    4374:	9f 3f       	cpi	r25, 0xFF	; 255
    4376:	79 f0       	breq	.+30     	; 0x4396 <__fp_splitA+0x2a>
    4378:	87 95       	ror	r24
    437a:	08 95       	ret
    437c:	12 16       	cp	r1, r18
    437e:	13 06       	cpc	r1, r19
    4380:	14 06       	cpc	r1, r20
    4382:	55 1f       	adc	r21, r21
    4384:	f2 cf       	rjmp	.-28     	; 0x436a <__fp_split3+0xe>
    4386:	46 95       	lsr	r20
    4388:	f1 df       	rcall	.-30     	; 0x436c <__fp_splitA>
    438a:	08 c0       	rjmp	.+16     	; 0x439c <__fp_splitA+0x30>
    438c:	16 16       	cp	r1, r22
    438e:	17 06       	cpc	r1, r23
    4390:	18 06       	cpc	r1, r24
    4392:	99 1f       	adc	r25, r25
    4394:	f1 cf       	rjmp	.-30     	; 0x4378 <__fp_splitA+0xc>
    4396:	86 95       	lsr	r24
    4398:	71 05       	cpc	r23, r1
    439a:	61 05       	cpc	r22, r1
    439c:	08 94       	sec
    439e:	08 95       	ret

Disassembly of section .text:

00004948 <__fp_zero>:
    4948:	e8 94       	clt

0000494a <__fp_szero>:
    494a:	bb 27       	eor	r27, r27
    494c:	66 27       	eor	r22, r22
    494e:	77 27       	eor	r23, r23
    4950:	cb 01       	movw	r24, r22
    4952:	97 f9       	bld	r25, 7
    4954:	08 95       	ret

Disassembly of section .text:

0000496c <__gesf2>:
    496c:	0e 94 23 21 	call	0x4246	; 0x4246 <__fp_cmp>
    4970:	08 f4       	brcc	.+2      	; 0x4974 <__gesf2+0x8>
    4972:	8f ef       	ldi	r24, 0xFF	; 255
    4974:	08 95       	ret

Disassembly of section .text:

0000497e <__mulsf3>:
    497e:	0e 94 de 17 	call	0x2fbc	; 0x2fbc <__mulsf3x>
    4982:	0c 94 ba 23 	jmp	0x4774	; 0x4774 <__fp_round>

Disassembly of section .text:

00002fbc <__mulsf3x>:
    2fbc:	0f c0       	rjmp	.+30     	; 0x2fdc <__mulsf3x+0x20>
    2fbe:	0e 94 96 24 	call	0x492c	; 0x492c <__fp_pscA>
    2fc2:	38 f0       	brcs	.+14     	; 0x2fd2 <__mulsf3x+0x16>
    2fc4:	0e 94 9d 24 	call	0x493a	; 0x493a <__fp_pscB>
    2fc8:	20 f0       	brcs	.+8      	; 0x2fd2 <__mulsf3x+0x16>
    2fca:	95 23       	and	r25, r21
    2fcc:	11 f0       	breq	.+4      	; 0x2fd2 <__mulsf3x+0x16>
    2fce:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__fp_inf>
    2fd2:	0c 94 c3 24 	jmp	0x4986	; 0x4986 <__fp_nan>
    2fd6:	11 24       	eor	r1, r1
    2fd8:	0c 94 a5 24 	jmp	0x494a	; 0x494a <__fp_szero>
    2fdc:	0e 94 ae 21 	call	0x435c	; 0x435c <__fp_split3>
    2fe0:	70 f3       	brcs	.-36     	; 0x2fbe <__mulsf3x+0x2>

00002fe2 <__mulsf3_pse>:
    2fe2:	95 9f       	mul	r25, r21
    2fe4:	c1 f3       	breq	.-16     	; 0x2fd6 <__mulsf3x+0x1a>
    2fe6:	95 0f       	add	r25, r21
    2fe8:	50 e0       	ldi	r21, 0x00	; 0
    2fea:	55 1f       	adc	r21, r21
    2fec:	62 9f       	mul	r22, r18
    2fee:	f0 01       	movw	r30, r0
    2ff0:	72 9f       	mul	r23, r18
    2ff2:	bb 27       	eor	r27, r27
    2ff4:	f0 0d       	add	r31, r0
    2ff6:	b1 1d       	adc	r27, r1
    2ff8:	63 9f       	mul	r22, r19
    2ffa:	aa 27       	eor	r26, r26
    2ffc:	f0 0d       	add	r31, r0
    2ffe:	b1 1d       	adc	r27, r1
    3000:	aa 1f       	adc	r26, r26
    3002:	64 9f       	mul	r22, r20
    3004:	66 27       	eor	r22, r22
    3006:	b0 0d       	add	r27, r0
    3008:	a1 1d       	adc	r26, r1
    300a:	66 1f       	adc	r22, r22
    300c:	82 9f       	mul	r24, r18
    300e:	22 27       	eor	r18, r18
    3010:	b0 0d       	add	r27, r0
    3012:	a1 1d       	adc	r26, r1
    3014:	62 1f       	adc	r22, r18
    3016:	73 9f       	mul	r23, r19
    3018:	b0 0d       	add	r27, r0
    301a:	a1 1d       	adc	r26, r1
    301c:	62 1f       	adc	r22, r18
    301e:	83 9f       	mul	r24, r19
    3020:	a0 0d       	add	r26, r0
    3022:	61 1d       	adc	r22, r1
    3024:	22 1f       	adc	r18, r18
    3026:	74 9f       	mul	r23, r20
    3028:	33 27       	eor	r19, r19
    302a:	a0 0d       	add	r26, r0
    302c:	61 1d       	adc	r22, r1
    302e:	23 1f       	adc	r18, r19
    3030:	84 9f       	mul	r24, r20
    3032:	60 0d       	add	r22, r0
    3034:	21 1d       	adc	r18, r1
    3036:	82 2f       	mov	r24, r18
    3038:	76 2f       	mov	r23, r22
    303a:	6a 2f       	mov	r22, r26
    303c:	11 24       	eor	r1, r1
    303e:	9f 57       	subi	r25, 0x7F	; 127
    3040:	50 40       	sbci	r21, 0x00	; 0
    3042:	9a f0       	brmi	.+38     	; 0x306a <__mulsf3_pse+0x88>
    3044:	f1 f0       	breq	.+60     	; 0x3082 <__mulsf3_pse+0xa0>
    3046:	88 23       	and	r24, r24
    3048:	4a f0       	brmi	.+18     	; 0x305c <__mulsf3_pse+0x7a>
    304a:	ee 0f       	add	r30, r30
    304c:	ff 1f       	adc	r31, r31
    304e:	bb 1f       	adc	r27, r27
    3050:	66 1f       	adc	r22, r22
    3052:	77 1f       	adc	r23, r23
    3054:	88 1f       	adc	r24, r24
    3056:	91 50       	subi	r25, 0x01	; 1
    3058:	50 40       	sbci	r21, 0x00	; 0
    305a:	a9 f7       	brne	.-22     	; 0x3046 <__mulsf3_pse+0x64>
    305c:	9e 3f       	cpi	r25, 0xFE	; 254
    305e:	51 05       	cpc	r21, r1
    3060:	80 f0       	brcs	.+32     	; 0x3082 <__mulsf3_pse+0xa0>
    3062:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__fp_inf>
    3066:	0c 94 a5 24 	jmp	0x494a	; 0x494a <__fp_szero>
    306a:	5f 3f       	cpi	r21, 0xFF	; 255
    306c:	e4 f3       	brlt	.-8      	; 0x3066 <__mulsf3_pse+0x84>
    306e:	98 3e       	cpi	r25, 0xE8	; 232
    3070:	d4 f3       	brlt	.-12     	; 0x3066 <__mulsf3_pse+0x84>
    3072:	86 95       	lsr	r24
    3074:	77 95       	ror	r23
    3076:	67 95       	ror	r22
    3078:	b7 95       	ror	r27
    307a:	f7 95       	ror	r31
    307c:	e7 95       	ror	r30
    307e:	9f 5f       	subi	r25, 0xFF	; 255
    3080:	c1 f7       	brne	.-16     	; 0x3072 <__mulsf3_pse+0x90>
    3082:	fe 2b       	or	r31, r30
    3084:	88 0f       	add	r24, r24
    3086:	91 1d       	adc	r25, r1
    3088:	96 95       	lsr	r25
    308a:	87 95       	ror	r24
    308c:	97 f9       	bld	r25, 7
    308e:	08 95       	ret

Disassembly of section .text.floorf:

00002af2 <floorf>:
    2af2:	4f 92       	push	r4
    2af4:	5f 92       	push	r5
    2af6:	6f 92       	push	r6
    2af8:	7f 92       	push	r7
    2afa:	8f 92       	push	r8
    2afc:	9f 92       	push	r9
    2afe:	af 92       	push	r10
    2b00:	bf 92       	push	r11
    2b02:	cf 92       	push	r12
    2b04:	df 92       	push	r13
    2b06:	ef 92       	push	r14
    2b08:	ff 92       	push	r15
    2b0a:	cf 93       	push	r28
    2b0c:	df 93       	push	r29
    2b0e:	cd b7       	in	r28, 0x3d	; 61
    2b10:	de b7       	in	r29, 0x3e	; 62
    2b12:	28 97       	sbiw	r28, 0x08	; 8
    2b14:	0f b6       	in	r0, 0x3f	; 63
    2b16:	f8 94       	cli
    2b18:	de bf       	out	0x3e, r29	; 62
    2b1a:	0f be       	out	0x3f, r0	; 63
    2b1c:	cd bf       	out	0x3d, r28	; 61
    2b1e:	6b 01       	movw	r12, r22
    2b20:	7c 01       	movw	r14, r24
    2b22:	dc 01       	movw	r26, r24
    2b24:	cb 01       	movw	r24, r22
    2b26:	47 e1       	ldi	r20, 0x17	; 23
    2b28:	b6 95       	lsr	r27
    2b2a:	a7 95       	ror	r26
    2b2c:	97 95       	ror	r25
    2b2e:	87 95       	ror	r24
    2b30:	4a 95       	dec	r20
    2b32:	d1 f7       	brne	.-12     	; 0x2b28 <floorf+0x36>
    2b34:	99 27       	eor	r25, r25
    2b36:	8f 57       	subi	r24, 0x7F	; 127
    2b38:	91 09       	sbc	r25, r1
    2b3a:	87 31       	cpi	r24, 0x17	; 23
    2b3c:	91 05       	cpc	r25, r1
    2b3e:	9c f5       	brge	.+102    	; 0x2ba6 <floorf+0xb4>
    2b40:	97 fd       	sbrc	r25, 7
    2b42:	36 c0       	rjmp	.+108    	; 0x2bb0 <floorf+0xbe>
    2b44:	88 24       	eor	r8, r8
    2b46:	8a 94       	dec	r8
    2b48:	98 2c       	mov	r9, r8
    2b4a:	3f e7       	ldi	r19, 0x7F	; 127
    2b4c:	a3 2e       	mov	r10, r19
    2b4e:	b1 2c       	mov	r11, r1
    2b50:	04 c0       	rjmp	.+8      	; 0x2b5a <floorf+0x68>
    2b52:	b5 94       	asr	r11
    2b54:	a7 94       	ror	r10
    2b56:	97 94       	ror	r9
    2b58:	87 94       	ror	r8
    2b5a:	8a 95       	dec	r24
    2b5c:	d2 f7       	brpl	.-12     	; 0x2b52 <floorf+0x60>
    2b5e:	d5 01       	movw	r26, r10
    2b60:	c4 01       	movw	r24, r8
    2b62:	8c 21       	and	r24, r12
    2b64:	9d 21       	and	r25, r13
    2b66:	ae 21       	and	r26, r14
    2b68:	bf 21       	and	r27, r15
    2b6a:	89 2b       	or	r24, r25
    2b6c:	8a 2b       	or	r24, r26
    2b6e:	8b 2b       	or	r24, r27
    2b70:	d1 f0       	breq	.+52     	; 0x2ba6 <floorf+0xb4>
    2b72:	20 e0       	ldi	r18, 0x00	; 0
    2b74:	30 e0       	ldi	r19, 0x00	; 0
    2b76:	40 e8       	ldi	r20, 0x80	; 128
    2b78:	5b e7       	ldi	r21, 0x7B	; 123
    2b7a:	c7 01       	movw	r24, r14
    2b7c:	b6 01       	movw	r22, r12
    2b7e:	0e 94 89 24 	call	0x4912	; 0x4912 <__addsf3>
    2b82:	6d 83       	std	Y+5, r22	; 0x05
    2b84:	7e 83       	std	Y+6, r23	; 0x06
    2b86:	8f 83       	std	Y+7, r24	; 0x07
    2b88:	98 87       	std	Y+8, r25	; 0x08
    2b8a:	f7 fe       	sbrs	r15, 7
    2b8c:	04 c0       	rjmp	.+8      	; 0x2b96 <floorf+0xa4>
    2b8e:	c8 0c       	add	r12, r8
    2b90:	d9 1c       	adc	r13, r9
    2b92:	ea 1c       	adc	r14, r10
    2b94:	fb 1c       	adc	r15, r11
    2b96:	80 94       	com	r8
    2b98:	90 94       	com	r9
    2b9a:	a0 94       	com	r10
    2b9c:	b0 94       	com	r11
    2b9e:	c8 20       	and	r12, r8
    2ba0:	d9 20       	and	r13, r9
    2ba2:	ea 20       	and	r14, r10
    2ba4:	fb 20       	and	r15, r11
    2ba6:	5c 2d       	mov	r21, r12
    2ba8:	4d 2d       	mov	r20, r13
    2baa:	3e 2d       	mov	r19, r14
    2bac:	2f 2d       	mov	r18, r15
    2bae:	21 c0       	rjmp	.+66     	; 0x2bf2 <floorf+0x100>
    2bb0:	20 e0       	ldi	r18, 0x00	; 0
    2bb2:	30 e0       	ldi	r19, 0x00	; 0
    2bb4:	40 e8       	ldi	r20, 0x80	; 128
    2bb6:	5b e7       	ldi	r21, 0x7B	; 123
    2bb8:	c7 01       	movw	r24, r14
    2bba:	b6 01       	movw	r22, r12
    2bbc:	0e 94 89 24 	call	0x4912	; 0x4912 <__addsf3>
    2bc0:	69 83       	std	Y+1, r22	; 0x01
    2bc2:	7a 83       	std	Y+2, r23	; 0x02
    2bc4:	8b 83       	std	Y+3, r24	; 0x03
    2bc6:	9c 83       	std	Y+4, r25	; 0x04
    2bc8:	f7 fe       	sbrs	r15, 7
    2bca:	0f c0       	rjmp	.+30     	; 0x2bea <floorf+0xf8>
    2bcc:	d7 01       	movw	r26, r14
    2bce:	c6 01       	movw	r24, r12
    2bd0:	88 0f       	add	r24, r24
    2bd2:	99 1f       	adc	r25, r25
    2bd4:	aa 1f       	adc	r26, r26
    2bd6:	bb 1f       	adc	r27, r27
    2bd8:	89 2b       	or	r24, r25
    2bda:	8a 2b       	or	r24, r26
    2bdc:	8b 2b       	or	r24, r27
    2bde:	19 f3       	breq	.-58     	; 0x2ba6 <floorf+0xb4>
    2be0:	50 e0       	ldi	r21, 0x00	; 0
    2be2:	40 e0       	ldi	r20, 0x00	; 0
    2be4:	30 e8       	ldi	r19, 0x80	; 128
    2be6:	2f eb       	ldi	r18, 0xBF	; 191
    2be8:	04 c0       	rjmp	.+8      	; 0x2bf2 <floorf+0x100>
    2bea:	50 e0       	ldi	r21, 0x00	; 0
    2bec:	40 e0       	ldi	r20, 0x00	; 0
    2bee:	30 e0       	ldi	r19, 0x00	; 0
    2bf0:	20 e0       	ldi	r18, 0x00	; 0
    2bf2:	65 2f       	mov	r22, r21
    2bf4:	74 2f       	mov	r23, r20
    2bf6:	83 2f       	mov	r24, r19
    2bf8:	92 2f       	mov	r25, r18
    2bfa:	28 96       	adiw	r28, 0x08	; 8
    2bfc:	0f b6       	in	r0, 0x3f	; 63
    2bfe:	f8 94       	cli
    2c00:	de bf       	out	0x3e, r29	; 62
    2c02:	0f be       	out	0x3f, r0	; 63
    2c04:	cd bf       	out	0x3d, r28	; 61
    2c06:	df 91       	pop	r29
    2c08:	cf 91       	pop	r28
    2c0a:	ff 90       	pop	r15
    2c0c:	ef 90       	pop	r14
    2c0e:	df 90       	pop	r13
    2c10:	cf 90       	pop	r12
    2c12:	bf 90       	pop	r11
    2c14:	af 90       	pop	r10
    2c16:	9f 90       	pop	r9
    2c18:	8f 90       	pop	r8
    2c1a:	7f 90       	pop	r7
    2c1c:	6f 90       	pop	r6
    2c1e:	5f 90       	pop	r5
    2c20:	4f 90       	pop	r4
    2c22:	08 95       	ret

Disassembly of section .text.fmaf:

000029b6 <fmaf>:
    29b6:	a5 e1       	ldi	r26, 0x15	; 21
    29b8:	b0 e0       	ldi	r27, 0x00	; 0
    29ba:	e1 ee       	ldi	r30, 0xE1	; 225
    29bc:	f4 e1       	ldi	r31, 0x14	; 20
    29be:	0c 94 87 22 	jmp	0x450e	; 0x450e <__prologue_saves__>
    29c2:	47 01       	movw	r8, r14
    29c4:	58 01       	movw	r10, r16
    29c6:	0e 94 bf 24 	call	0x497e	; 0x497e <__mulsf3>
    29ca:	2b 01       	movw	r4, r22
    29cc:	3c 01       	movw	r6, r24
    29ce:	a8 01       	movw	r20, r16
    29d0:	97 01       	movw	r18, r14
    29d2:	0e 94 89 24 	call	0x4912	; 0x4912 <__addsf3>
    29d6:	16 2f       	mov	r17, r22
    29d8:	c7 2e       	mov	r12, r23
    29da:	d8 2e       	mov	r13, r24
    29dc:	f9 2e       	mov	r15, r25
    29de:	86 2f       	mov	r24, r22
    29e0:	9c 2d       	mov	r25, r12
    29e2:	ad 2d       	mov	r26, r13
    29e4:	bf 2d       	mov	r27, r15
    29e6:	89 83       	std	Y+1, r24	; 0x01
    29e8:	9a 83       	std	Y+2, r25	; 0x02
    29ea:	ab 83       	std	Y+3, r26	; 0x03
    29ec:	bc 83       	std	Y+4, r27	; 0x04
    29ee:	aa 81       	ldd	r26, Y+2	; 0x02
    29f0:	fb 81       	ldd	r31, Y+3	; 0x03
    29f2:	ec 81       	ldd	r30, Y+4	; 0x04
    29f4:	ed 80       	ldd	r14, Y+5	; 0x05
    29f6:	3e 80       	ldd	r3, Y+6	; 0x06
    29f8:	2f 80       	ldd	r2, Y+7	; 0x07
    29fa:	08 85       	ldd	r16, Y+8	; 0x08
    29fc:	0d 8b       	std	Y+21, r16	; 0x15
    29fe:	5e 2f       	mov	r21, r30
    2a00:	5f 71       	andi	r21, 0x1F	; 31
    2a02:	21 2f       	mov	r18, r17
    2a04:	3a 2f       	mov	r19, r26
    2a06:	4f 2f       	mov	r20, r31
    2a08:	60 e0       	ldi	r22, 0x00	; 0
    2a0a:	70 e0       	ldi	r23, 0x00	; 0
    2a0c:	80 e0       	ldi	r24, 0x00	; 0
    2a0e:	90 e0       	ldi	r25, 0x00	; 0
    2a10:	21 15       	cp	r18, r1
    2a12:	31 05       	cpc	r19, r1
    2a14:	41 05       	cpc	r20, r1
    2a16:	00 e1       	ldi	r16, 0x10	; 16
    2a18:	50 07       	cpc	r21, r16
    2a1a:	61 05       	cpc	r22, r1
    2a1c:	71 05       	cpc	r23, r1
    2a1e:	81 05       	cpc	r24, r1
    2a20:	91 05       	cpc	r25, r1
    2a22:	09 f0       	breq	.+2      	; 0x2a26 <fmaf+0x70>
    2a24:	5e c0       	rjmp	.+188    	; 0x2ae2 <fmaf+0x12c>
    2a26:	5e 2f       	mov	r21, r30
    2a28:	6e 2d       	mov	r22, r14
    2a2a:	73 2d       	mov	r23, r3
    2a2c:	82 2d       	mov	r24, r2
    2a2e:	9d 89       	ldd	r25, Y+21	; 0x15
    2a30:	04 e3       	ldi	r16, 0x34	; 52
    2a32:	0e 94 31 22 	call	0x4462	; 0x4462 <__lshrdi3>
    2a36:	2d 87       	std	Y+13, r18	; 0x0d
    2a38:	3e 87       	std	Y+14, r19	; 0x0e
    2a3a:	4f 87       	std	Y+15, r20	; 0x0f
    2a3c:	58 8b       	std	Y+16, r21	; 0x10
    2a3e:	69 8b       	std	Y+17, r22	; 0x11
    2a40:	7a 8b       	std	Y+18, r23	; 0x12
    2a42:	8b 8b       	std	Y+19, r24	; 0x13
    2a44:	9c 8b       	std	Y+20, r25	; 0x14
    2a46:	8d 85       	ldd	r24, Y+13	; 0x0d
    2a48:	9e 85       	ldd	r25, Y+14	; 0x0e
    2a4a:	97 70       	andi	r25, 0x07	; 7
    2a4c:	8f 3f       	cpi	r24, 0xFF	; 255
    2a4e:	97 40       	sbci	r25, 0x07	; 7
    2a50:	09 f4       	brne	.+2      	; 0x2a54 <fmaf+0x9e>
    2a52:	47 c0       	rjmp	.+142    	; 0x2ae2 <fmaf+0x12c>
    2a54:	a3 01       	movw	r20, r6
    2a56:	92 01       	movw	r18, r4
    2a58:	61 2f       	mov	r22, r17
    2a5a:	7c 2d       	mov	r23, r12
    2a5c:	8d 2d       	mov	r24, r13
    2a5e:	9f 2d       	mov	r25, r15
    2a60:	0e 94 88 24 	call	0x4910	; 0x4910 <__subsf3>
    2a64:	9b 01       	movw	r18, r22
    2a66:	ac 01       	movw	r20, r24
    2a68:	c5 01       	movw	r24, r10
    2a6a:	b4 01       	movw	r22, r8
    2a6c:	0e 94 b1 24 	call	0x4962	; 0x4962 <__cmpsf2>
    2a70:	88 23       	and	r24, r24
    2a72:	b9 f1       	breq	.+110    	; 0x2ae2 <fmaf+0x12c>
    2a74:	49 86       	std	Y+9, r4	; 0x09
    2a76:	5a 86       	std	Y+10, r5	; 0x0a
    2a78:	6b 86       	std	Y+11, r6	; 0x0b
    2a7a:	7c 86       	std	Y+12, r7	; 0x0c
    2a7c:	29 85       	ldd	r18, Y+9	; 0x09
    2a7e:	3a 85       	ldd	r19, Y+10	; 0x0a
    2a80:	4b 85       	ldd	r20, Y+11	; 0x0b
    2a82:	5c 85       	ldd	r21, Y+12	; 0x0c
    2a84:	c5 01       	movw	r24, r10
    2a86:	b4 01       	movw	r22, r8
    2a88:	0e 94 89 24 	call	0x4912	; 0x4912 <__addsf3>
    2a8c:	b6 2e       	mov	r11, r22
    2a8e:	87 2e       	mov	r8, r23
    2a90:	98 2e       	mov	r9, r24
    2a92:	a9 2e       	mov	r10, r25
    2a94:	26 2f       	mov	r18, r22
    2a96:	37 2f       	mov	r19, r23
    2a98:	48 2f       	mov	r20, r24
    2a9a:	59 2f       	mov	r21, r25
    2a9c:	61 2f       	mov	r22, r17
    2a9e:	7c 2d       	mov	r23, r12
    2aa0:	8d 2d       	mov	r24, r13
    2aa2:	9f 2d       	mov	r25, r15
    2aa4:	0e 94 b1 24 	call	0x4962	; 0x4962 <__cmpsf2>
    2aa8:	81 11       	cpse	r24, r1
    2aaa:	18 c0       	rjmp	.+48     	; 0x2adc <fmaf+0x126>
    2aac:	2b 2d       	mov	r18, r11
    2aae:	8b 2d       	mov	r24, r11
    2ab0:	98 2d       	mov	r25, r8
    2ab2:	a9 2d       	mov	r26, r9
    2ab4:	ba 2d       	mov	r27, r10
    2ab6:	89 83       	std	Y+1, r24	; 0x01
    2ab8:	9a 83       	std	Y+2, r25	; 0x02
    2aba:	ab 83       	std	Y+3, r26	; 0x03
    2abc:	bc 83       	std	Y+4, r27	; 0x04
    2abe:	3a 81       	ldd	r19, Y+2	; 0x02
    2ac0:	4b 81       	ldd	r20, Y+3	; 0x03
    2ac2:	5c 81       	ldd	r21, Y+4	; 0x04
    2ac4:	6e 2d       	mov	r22, r14
    2ac6:	73 2d       	mov	r23, r3
    2ac8:	82 2d       	mov	r24, r2
    2aca:	9d 89       	ldd	r25, Y+21	; 0x15
    2acc:	a1 e0       	ldi	r26, 0x01	; 1
    2ace:	0e 94 29 24 	call	0x4852	; 0x4852 <__adddi3_s8>
    2ad2:	12 2f       	mov	r17, r18
    2ad4:	c3 2e       	mov	r12, r19
    2ad6:	d4 2e       	mov	r13, r20
    2ad8:	f5 2e       	mov	r15, r21
    2ada:	03 c0       	rjmp	.+6      	; 0x2ae2 <fmaf+0x12c>
    2adc:	1b 2d       	mov	r17, r11
    2ade:	64 01       	movw	r12, r8
    2ae0:	fa 2c       	mov	r15, r10
    2ae2:	61 2f       	mov	r22, r17
    2ae4:	7c 2d       	mov	r23, r12
    2ae6:	8d 2d       	mov	r24, r13
    2ae8:	9f 2d       	mov	r25, r15
    2aea:	65 96       	adiw	r28, 0x15	; 21
    2aec:	e2 e1       	ldi	r30, 0x12	; 18
    2aee:	0c 94 be 22 	jmp	0x457c	; 0x457c <__epilogue_restores__>

Disassembly of section .text.libgcc:

00004852 <__adddi3_s8>:
    4852:	00 24       	eor	r0, r0
    4854:	a7 fd       	sbrc	r26, 7
    4856:	00 94       	com	r0
    4858:	2a 0f       	add	r18, r26
    485a:	30 1d       	adc	r19, r0
    485c:	40 1d       	adc	r20, r0
    485e:	50 1d       	adc	r21, r0
    4860:	60 1d       	adc	r22, r0
    4862:	70 1d       	adc	r23, r0
    4864:	80 1d       	adc	r24, r0
    4866:	90 1d       	adc	r25, r0
    4868:	08 95       	ret
