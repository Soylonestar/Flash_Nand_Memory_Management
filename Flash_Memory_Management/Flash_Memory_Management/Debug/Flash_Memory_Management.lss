
Flash_Memory_Management.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000026e6  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000166  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000022f  00800200  00800200  000026e6  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  000026e6  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 00000070  00000000  00000000  00002715  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00002785  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000267c  00000000  00000000  000028e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001141  00000000  00000000  00004f61  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000120b  00000000  00000000  000060a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000388  00000000  00000000  000072b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ad  00000000  00000000  00007638  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007b2  00000000  00000000  00007ae5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  00008297  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  00002624  00002624  000026d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000083e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .progmemx.data 00000013  00000449  00000449  000004fd  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 16 .text.main    00000042  00002244  00002244  000022f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.USART_Init 00000036  00002372  00002372  00002426  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.USART_TX_Data 0000000e  000025d8  000025d8  0000268c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.USART_Data 0000004c  0000216e  0000216e  00002222  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.USART_RX_Data 0000000e  000025e6  000025e6  0000269a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.LED_Init 00000016  00002578  00002578  0000262c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.LED_Red_Toggle 0000000e  000025f4  000025f4  000026a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.LED_Green_Toggle 0000000e  00002602  00002602  000026b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.VOLTAGE_Translator_Init 00000026  0000243a  0000243a  000024ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.SLAVE_CS_Deselect 00000062  000020b2  000020b2  00002166  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .progmemx.data 000001e8  00000166  00000166  0000021a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 27 .text.UserInput 0000006c  00001f72  00001f72  00002026  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.HEX_Verification 000000b6  0000194e  0000194e  00001a02  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.HEX_Parser 00000038  00002302  00002302  000023b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.ExecuteCommand 00000274  00000f1c  00000f1c  00000fd0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.CommandLine 0000009c  00001c9e  00001c9e  00001d52  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .bss.arr_address 00000002  0080042f  0080042f  000026e6  2**0
                  ALLOC
 33 .text.CLEAR_ARR 0000005a  00002114  00002114  000021c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.SPI_MASTER_Init 00000024  00002486  00002486  0000253a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .progmemx.data 000000e5  0000034e  0000034e  00000402  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 36 .text.FLASH_ID 0000008c  00001e5a  00001e5a  00001f0e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.FLASH_Reset 00000022  000024ce  000024ce  00002582  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.FLASH_Status 0000008e  00001dcc  00001dcc  00001e80  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.FLASH_Transfer_MainArray 0000002c  0000240e  0000240e  000024c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.FLASH_Data_Storage 0000006a  00001fde  00001fde  00002092  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.FLASH_Read 00000046  000021ba  000021ba  0000226e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.libgcc  0000000e  00002610  00002610  000026c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.__dummy_fini 00000002  0000262c  0000262c  000026e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.__dummy_funcs_on_exit 00000002  0000262e  0000262e  000026e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.__dummy_simulator_exit 00000002  00002630  00002630  000026e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.exit    00000016  0000258e  0000258e  00002642  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.__wrap_sprintf 00000026  00002460  00002460  00002514  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .progmemx.data 00000007  0000045c  0000045c  00000510  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 49 .text.__fmt_s 000000ca  00001884  00001884  00001938  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.__out   0000006a  00002048  00002048  000020fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.__pad   0000010e  000015ca  000015ca  0000167e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.__dummy_fmt4 00000006  0000261e  0000261e  000026d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.__fmt_state 000000a4  00001ab4  00001ab4  00001b68  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .progmemx.data 00000006  00000463  00000463  00000517  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 55 .text.__printf_core 00000832  0000046a  0000046a  0000051e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .progmemx.data.state_table 00000016  00000433  00000433  000004e7  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 57 .text.fputc   00000092  00001d3a  00001d3a  00001dee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.__fmt_d 0000017e  00001190  00001190  00001244  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.__fmt_o 000000d4  000017b0  000017b0  00001864  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.__cvt_u 0000014a  00001480  00001480  00001534  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.__fmt_u 000000b0  00001a04  00001a04  00001ab8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.__fmt_x 00000280  00000c9c  00000c9c  00000d50  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.__pop_float 00000040  00002286  00002286  0000233a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.__pop_int 00000172  0000130e  0000130e  000013c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.__pop_ptr 000000d8  000016d8  000016d8  0000178c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text.atoi    0000008c  00001ee6  00001ee6  00001f9a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.memset  00000012  000025a4  000025a4  00002658  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.strcmp  00000044  00002200  00002200  000022b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.strlen  00000024  000024aa  000024aa  0000255e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .text.tolower 00000010  000025c8  000025c8  0000267c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text.toupper 00000012  000025b6  000025b6  0000266a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .text._Exit   00000004  00002628  00002628  000026dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .text.__vsprintf 00000018  00002548  00002548  000025fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.__vsnprintf 000000a4  00001b58  00001b58  00001c0c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.__vfprintf 00000030  000023de  000023de  00002492  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.libgcc.div 0000001c  00002510  00002510  000025c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.libgcc.div 000000a2  00001bfc  00001bfc  00001cb0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.libgcc  00000020  000024f0  000024f0  000025a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.libgcc.prologue 00000038  0000233a  0000233a  000023ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.libgcc.prologue 00000036  000023a8  000023a8  0000245c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text.libgcc  0000001c  0000252c  0000252c  000025e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.libgcc.builtins 0000003c  000022c6  000022c6  0000237a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .text.libgcc  00000018  00002560  00002560  00002614  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 85 00 	jmp	0x10a	; 0x10a <__ctors_end>
   4:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
   8:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
   c:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  10:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  14:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  18:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  1c:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  20:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  24:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  28:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  2c:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  30:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  34:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  38:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  3c:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  40:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  44:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  48:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  4c:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  50:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  54:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  58:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  5c:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  60:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  64:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  68:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  6c:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  70:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  74:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  78:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  7c:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  80:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  84:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  88:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  8c:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  90:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  94:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  98:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  9c:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  a0:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  a4:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  a8:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  ac:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  b0:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  b4:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  b8:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  bc:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  c0:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  c4:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  c8:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  cc:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  d0:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  d4:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  d8:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  dc:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>
  e0:	0c 94 12 13 	jmp	0x2624	; 0x2624 <__bad_interrupt>

000000e4 <.dinit>:
  e4:	02 00       	.word	0x0002	; ????
  e6:	04 31       	cpi	r16, 0x14	; 20
  e8:	80 00       	.word	0x0080	; ????

000000ea <__trampolines_start>:
  ea:	0c 94 f5 11 	jmp	0x23ea	; 0x23ea <__vfprintf+0xc>
  ee:	0c 94 de 0b 	jmp	0x17bc	; 0x17bc <__fmt_o+0xc>
  f2:	0c 94 ce 08 	jmp	0x119c	; 0x119c <__fmt_d+0xc>
  f6:	0c 94 08 0d 	jmp	0x1a10	; 0x1a10 <__fmt_u+0xc>
  fa:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__fmt_x+0xc>
  fe:	0c 94 46 0a 	jmp	0x148c	; 0x148c <__cvt_u+0xc>
 102:	0c 94 36 12 	jmp	0x246c	; 0x246c <_sprintf_cdnopuxX+0xc>
 106:	0c 94 3b 02 	jmp	0x476	; 0x476 <__printf_core+0xc>

0000010a <__ctors_end>:
 10a:	11 24       	eor	r1, r1
 10c:	1f be       	out	0x3f, r1	; 63
 10e:	cf ef       	ldi	r28, 0xFF	; 255
 110:	d1 e2       	ldi	r29, 0x21	; 33
 112:	de bf       	out	0x3e, r29	; 62
 114:	cd bf       	out	0x3d, r28	; 61
 116:	00 e0       	ldi	r16, 0x00	; 0
 118:	0c bf       	out	0x3c, r16	; 60

0000011a <__do_copy_data>:
 11a:	e4 ee       	ldi	r30, 0xE4	; 228
 11c:	f0 e0       	ldi	r31, 0x00	; 0
 11e:	40 e0       	ldi	r20, 0x00	; 0
 120:	19 c0       	rjmp	.+50     	; 0x154 <__do_clear_bss+0x8>
 122:	b7 91       	elpm	r27, Z+
 124:	a7 91       	elpm	r26, Z+
 126:	37 91       	elpm	r19, Z+
 128:	27 91       	elpm	r18, Z+
 12a:	07 91       	elpm	r16, Z+
 12c:	07 fd       	sbrc	r16, 7
 12e:	0e c0       	rjmp	.+28     	; 0x14c <__do_clear_bss>
 130:	97 91       	elpm	r25, Z+
 132:	87 91       	elpm	r24, Z+
 134:	ef 01       	movw	r28, r30
 136:	f9 2f       	mov	r31, r25
 138:	e8 2f       	mov	r30, r24
 13a:	0b bf       	out	0x3b, r16	; 59
 13c:	07 90       	elpm	r0, Z+
 13e:	0d 92       	st	X+, r0
 140:	a2 17       	cp	r26, r18
 142:	b3 07       	cpc	r27, r19
 144:	d9 f7       	brne	.-10     	; 0x13c <__do_copy_data+0x22>
 146:	fe 01       	movw	r30, r28
 148:	1b be       	out	0x3b, r1	; 59
 14a:	04 c0       	rjmp	.+8      	; 0x154 <__do_clear_bss+0x8>

0000014c <__do_clear_bss>:
 14c:	1d 92       	st	X+, r1
 14e:	a2 17       	cp	r26, r18
 150:	b3 07       	cpc	r27, r19
 152:	e1 f7       	brne	.-8      	; 0x14c <__do_clear_bss>
 154:	e9 3e       	cpi	r30, 0xE9	; 233
 156:	f4 07       	cpc	r31, r20
 158:	21 f7       	brne	.-56     	; 0x122 <__do_copy_data+0x8>
 15a:	0e 94 22 11 	call	0x2244	; 0x2244 <main>
 15e:	0c 94 c7 12 	jmp	0x258e	; 0x258e <exit>

00000162 <_exit>:
 162:	f8 94       	cli

00000164 <__stop_program>:
 164:	ff cf       	rjmp	.-2      	; 0x164 <__stop_program>

Disassembly of section .text:

00002624 <__bad_interrupt>:
    2624:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.main:

00002244 <main>:

//#include "MEGA_1284P_SPI.h" //adding MEGA_1284P SPI Testing code

int main(void)
{
	LED_Init();
    2244:	0e 94 bc 12 	call	0x2578	; 0x2578 <LED_Init>
	VOLTAGE_Translator_Init();
    2248:	0e 94 1d 12 	call	0x243a	; 0x243a <VOLTAGE_Translator_Init>
	USART_Init();
    224c:	0e 94 b9 11 	call	0x2372	; 0x2372 <USART_Init>
	SLAVE_CS_Deselect();
    2250:	0e 94 59 10 	call	0x20b2	; 0x20b2 <SLAVE_CS_Deselect>
	SPI_MASTER_Init();
    2254:	0e 94 43 12 	call	0x2486	; 0x2486 <SPI_MASTER_Init>
	LED_Green_Toggle();
    2258:	0e 94 01 13 	call	0x2602	; 0x2602 <LED_Green_Toggle>
	//PORTA &= ~(1 << PA3); //~CS pin set low for selecting slave device
	
    while(1)
    {		
		CLEAR_ARR();
    225c:	0e 94 8a 10 	call	0x2114	; 0x2114 <CLEAR_ARR>
		USART_Data("->Arrays Cleared \n");
    2260:	69 e4       	ldi	r22, 0x49	; 73
    2262:	74 e0       	ldi	r23, 0x04	; 4
    2264:	80 e0       	ldi	r24, 0x00	; 0
    2266:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
		
		CommandLine(); //asking for user command line
    226a:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <CommandLine>
		
		LED_Red_Toggle();
    226e:	0e 94 fa 12 	call	0x25f4	; 0x25f4 <LED_Red_Toggle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2272:	2f ef       	ldi	r18, 0xFF	; 255
    2274:	81 ee       	ldi	r24, 0xE1	; 225
    2276:	94 e0       	ldi	r25, 0x04	; 4
    2278:	21 50       	subi	r18, 0x01	; 1
    227a:	80 40       	sbci	r24, 0x00	; 0
    227c:	90 40       	sbci	r25, 0x00	; 0
    227e:	e1 f7       	brne	.-8      	; 0x2278 <main+0x34>
    2280:	00 c0       	rjmp	.+0      	; 0x2282 <main+0x3e>
    2282:	00 00       	nop
    2284:	eb cf       	rjmp	.-42     	; 0x225c <main+0x18>

Disassembly of section .text.USART_Init:

00002372 <USART_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    2372:	87 e6       	ldi	r24, 0x67	; 103
    2374:	90 e0       	ldi	r25, 0x00	; 0
    2376:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
    237a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
    237e:	8d b1       	in	r24, 0x0d	; 13
    2380:	82 60       	ori	r24, 0x02	; 2
    2382:	8d b9       	out	0x0d, r24	; 13
    2384:	e1 ec       	ldi	r30, 0xC1	; 193
    2386:	f0 e0       	ldi	r31, 0x00	; 0
    2388:	80 81       	ld	r24, Z
    238a:	88 60       	ori	r24, 0x08	; 8
    238c:	80 83       	st	Z, r24
    238e:	8d b1       	in	r24, 0x0d	; 13
    2390:	8e 7f       	andi	r24, 0xFE	; 254
    2392:	8d b9       	out	0x0d, r24	; 13
    2394:	80 81       	ld	r24, Z
    2396:	80 61       	ori	r24, 0x10	; 16
    2398:	80 83       	st	Z, r24
    239a:	81 b1       	in	r24, 0x01	; 1
    239c:	84 60       	ori	r24, 0x04	; 4
    239e:	81 b9       	out	0x01, r24	; 1
    23a0:	82 b1       	in	r24, 0x02	; 2
    23a2:	84 60       	ori	r24, 0x04	; 4
    23a4:	82 b9       	out	0x02, r24	; 2
    23a6:	08 95       	ret

Disassembly of section .text.USART_TX_Data:

000025d8 <USART_TX_Data>:
    25d8:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    25dc:	95 ff       	sbrs	r25, 5
    25de:	fc cf       	rjmp	.-8      	; 0x25d8 <USART_TX_Data>
    25e0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    25e4:	08 95       	ret

Disassembly of section .text.USART_Data:

0000216e <USART_Data>:
    216e:	cf 92       	push	r12
    2170:	df 92       	push	r13
    2172:	ef 92       	push	r14
    2174:	cf 93       	push	r28
    2176:	df 93       	push	r29
    2178:	6b 01       	movw	r12, r22
    217a:	e8 2e       	mov	r14, r24
    217c:	c0 e0       	ldi	r28, 0x00	; 0
    217e:	d0 e0       	ldi	r29, 0x00	; 0
    2180:	0f c0       	rjmp	.+30     	; 0x21a0 <USART_Data+0x32>
    2182:	ae 2d       	mov	r26, r14
    2184:	c6 01       	movw	r24, r12
    2186:	8c 0f       	add	r24, r28
    2188:	9d 1f       	adc	r25, r29
    218a:	a1 1d       	adc	r26, r1
    218c:	d7 fd       	sbrc	r29, 7
    218e:	aa 95       	dec	r26
    2190:	fc 01       	movw	r30, r24
    2192:	5a 2f       	mov	r21, r26
    2194:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
    2198:	86 2f       	mov	r24, r22
    219a:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <USART_TX_Data>
    219e:	21 96       	adiw	r28, 0x01	; 1
    21a0:	8e 2d       	mov	r24, r14
    21a2:	b6 01       	movw	r22, r12
    21a4:	0e 94 55 12 	call	0x24aa	; 0x24aa <strlen>
    21a8:	c8 17       	cp	r28, r24
    21aa:	d9 07       	cpc	r29, r25
    21ac:	50 f3       	brcs	.-44     	; 0x2182 <USART_Data+0x14>
    21ae:	df 91       	pop	r29
    21b0:	cf 91       	pop	r28
    21b2:	ef 90       	pop	r14
    21b4:	df 90       	pop	r13
    21b6:	cf 90       	pop	r12
    21b8:	08 95       	ret

Disassembly of section .text.USART_RX_Data:

000025e6 <USART_RX_Data>:
    25e6:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    25ea:	88 23       	and	r24, r24
    25ec:	e4 f7       	brge	.-8      	; 0x25e6 <USART_RX_Data>
    25ee:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    25f2:	08 95       	ret

Disassembly of section .text.LED_Init:

00002578 <LED_Init>:
    2578:	e1 e0       	ldi	r30, 0x01	; 1
    257a:	f1 e0       	ldi	r31, 0x01	; 1
    257c:	80 81       	ld	r24, Z
    257e:	80 66       	ori	r24, 0x60	; 96
    2580:	80 83       	st	Z, r24
    2582:	e2 e0       	ldi	r30, 0x02	; 2
    2584:	f1 e0       	ldi	r31, 0x01	; 1
    2586:	80 81       	ld	r24, Z
    2588:	80 66       	ori	r24, 0x60	; 96
    258a:	80 83       	st	Z, r24
    258c:	08 95       	ret

Disassembly of section .text.LED_Red_Toggle:

000025f4 <LED_Red_Toggle>:
}

void LED_Red_Toggle()
{
	PORTH ^= (1 << PH6); //toggle RED_LED (PH6)
    25f4:	e2 e0       	ldi	r30, 0x02	; 2
    25f6:	f1 e0       	ldi	r31, 0x01	; 1
    25f8:	90 81       	ld	r25, Z
    25fa:	80 e4       	ldi	r24, 0x40	; 64
    25fc:	89 27       	eor	r24, r25
    25fe:	80 83       	st	Z, r24
    2600:	08 95       	ret

Disassembly of section .text.LED_Green_Toggle:

00002602 <LED_Green_Toggle>:
}

void LED_Green_Toggle()
{
	PORTH ^= (1 << PH5); //toggle GREEN_LED (PH5)
    2602:	e2 e0       	ldi	r30, 0x02	; 2
    2604:	f1 e0       	ldi	r31, 0x01	; 1
    2606:	90 81       	ld	r25, Z
    2608:	80 e2       	ldi	r24, 0x20	; 32
    260a:	89 27       	eor	r24, r25
    260c:	80 83       	st	Z, r24
    260e:	08 95       	ret

Disassembly of section .text.VOLTAGE_Translator_Init:

0000243a <VOLTAGE_Translator_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    243a:	87 b1       	in	r24, 0x07	; 7
    243c:	80 64       	ori	r24, 0x40	; 64
    243e:	87 b9       	out	0x07, r24	; 7
    2440:	88 b1       	in	r24, 0x08	; 8
    2442:	80 64       	ori	r24, 0x40	; 64
    2444:	88 b9       	out	0x08, r24	; 8
    2446:	83 b3       	in	r24, 0x13	; 19
    2448:	81 60       	ori	r24, 0x01	; 1
    244a:	83 bb       	out	0x13, r24	; 19
    244c:	84 b3       	in	r24, 0x14	; 20
    244e:	81 60       	ori	r24, 0x01	; 1
    2450:	84 bb       	out	0x14, r24	; 20
    2452:	83 b3       	in	r24, 0x13	; 19
    2454:	82 60       	ori	r24, 0x02	; 2
    2456:	83 bb       	out	0x13, r24	; 19
    2458:	84 b3       	in	r24, 0x14	; 20
    245a:	82 60       	ori	r24, 0x02	; 2
    245c:	84 bb       	out	0x14, r24	; 20
    245e:	08 95       	ret

Disassembly of section .text.SLAVE_CS_Deselect:

000020b2 <SLAVE_CS_Deselect>:
    20b2:	81 b1       	in	r24, 0x01	; 1
    20b4:	88 60       	ori	r24, 0x08	; 8
    20b6:	81 b9       	out	0x01, r24	; 1
    20b8:	82 b1       	in	r24, 0x02	; 2
    20ba:	88 60       	ori	r24, 0x08	; 8
    20bc:	82 b9       	out	0x02, r24	; 2
    20be:	81 b1       	in	r24, 0x01	; 1
    20c0:	80 61       	ori	r24, 0x10	; 16
    20c2:	81 b9       	out	0x01, r24	; 1
    20c4:	82 b1       	in	r24, 0x02	; 2
    20c6:	80 61       	ori	r24, 0x10	; 16
    20c8:	82 b9       	out	0x02, r24	; 2
    20ca:	81 b1       	in	r24, 0x01	; 1
    20cc:	80 62       	ori	r24, 0x20	; 32
    20ce:	81 b9       	out	0x01, r24	; 1
    20d0:	82 b1       	in	r24, 0x02	; 2
    20d2:	80 62       	ori	r24, 0x20	; 32
    20d4:	82 b9       	out	0x02, r24	; 2
    20d6:	81 b1       	in	r24, 0x01	; 1
    20d8:	80 64       	ori	r24, 0x40	; 64
    20da:	81 b9       	out	0x01, r24	; 1
    20dc:	82 b1       	in	r24, 0x02	; 2
    20de:	80 64       	ori	r24, 0x40	; 64
    20e0:	82 b9       	out	0x02, r24	; 2
    20e2:	81 b1       	in	r24, 0x01	; 1
    20e4:	80 68       	ori	r24, 0x80	; 128
    20e6:	81 b9       	out	0x01, r24	; 1
    20e8:	82 b1       	in	r24, 0x02	; 2
    20ea:	80 68       	ori	r24, 0x80	; 128
    20ec:	82 b9       	out	0x02, r24	; 2
    20ee:	81 b1       	in	r24, 0x01	; 1
    20f0:	82 60       	ori	r24, 0x02	; 2
    20f2:	81 b9       	out	0x01, r24	; 1
    20f4:	82 b1       	in	r24, 0x02	; 2
    20f6:	82 60       	ori	r24, 0x02	; 2
    20f8:	82 b9       	out	0x02, r24	; 2
    20fa:	81 b1       	in	r24, 0x01	; 1
    20fc:	84 60       	ori	r24, 0x04	; 4
    20fe:	81 b9       	out	0x01, r24	; 1
    2100:	82 b1       	in	r24, 0x02	; 2
    2102:	84 60       	ori	r24, 0x04	; 4
    2104:	82 b9       	out	0x02, r24	; 2
    2106:	81 b1       	in	r24, 0x01	; 1
    2108:	88 60       	ori	r24, 0x08	; 8
    210a:	81 b9       	out	0x01, r24	; 1
    210c:	82 b1       	in	r24, 0x02	; 2
    210e:	88 60       	ori	r24, 0x08	; 8
    2110:	82 b9       	out	0x02, r24	; 2
    2112:	08 95       	ret

Disassembly of section .text.UserInput:

00001f72 <UserInput>:
	ExecuteCommand(CommandBuffer); //puts CommandLine into Execute Function...
}

void UserInput() //asking for user input
{
	USART_Data("User Input:\n"); //asking for User Input
    1f72:	66 e6       	ldi	r22, 0x66	; 102
    1f74:	71 e0       	ldi	r23, 0x01	; 1
    1f76:	80 e0       	ldi	r24, 0x00	; 0
    1f78:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
	
	c = USART_RX_Data(); //receive user uint8_t data type input
    1f7c:	0e 94 f3 12 	call	0x25e6	; 0x25e6 <USART_RX_Data>
    1f80:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <c>
	while ((c != '\r')) //(c != '\n') &&
    1f84:	1c c0       	rjmp	.+56     	; 0x1fbe <UserInput+0x4c>
	{
		CommandBuffer[arr_address] = c; //adding uint8_t into array at index, creating a string
    1f86:	20 91 2f 04 	lds	r18, 0x042F	; 0x80042f <_end>
    1f8a:	30 91 30 04 	lds	r19, 0x0430	; 0x800430 <_end+0x1>
    1f8e:	f9 01       	movw	r30, r18
    1f90:	e0 50       	subi	r30, 0x00	; 0
    1f92:	fe 4f       	sbci	r31, 0xFE	; 254
    1f94:	80 83       	st	Z, r24
		if (arr_address >= sizeof(CommandBuffer)) //making this an endless array for command lines
    1f96:	2e 3f       	cpi	r18, 0xFE	; 254
    1f98:	31 05       	cpc	r19, r1
    1f9a:	20 f0       	brcs	.+8      	; 0x1fa4 <UserInput+0x32>
		{
			arr_address = 0; //resets array at address 0
    1f9c:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <_end+0x1>
    1fa0:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <_end>
		}
		arr_address++;
    1fa4:	80 91 2f 04 	lds	r24, 0x042F	; 0x80042f <_end>
    1fa8:	90 91 30 04 	lds	r25, 0x0430	; 0x800430 <_end+0x1>
    1fac:	01 96       	adiw	r24, 0x01	; 1
    1fae:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_end+0x1>
    1fb2:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_end>
		c = USART_RX_Data(); //receive user uint8_t data type input
    1fb6:	0e 94 f3 12 	call	0x25e6	; 0x25e6 <USART_RX_Data>
    1fba:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <c>
void UserInput() //asking for user input
{
	USART_Data("User Input:\n"); //asking for User Input
	
	c = USART_RX_Data(); //receive user uint8_t data type input
	while ((c != '\r')) //(c != '\n') &&
    1fbe:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <c>
    1fc2:	8d 30       	cpi	r24, 0x0D	; 13
    1fc4:	01 f7       	brne	.-64     	; 0x1f86 <UserInput+0x14>
			arr_address = 0; //resets array at address 0
		}
		arr_address++;
		c = USART_RX_Data(); //receive user uint8_t data type input
	}
	CommandBuffer[arr_address] = '\r'; //adding NULL '\0' to mark end of Command String...; adding carriage return '\r' until I can get NULL to work...
    1fc6:	e0 91 2f 04 	lds	r30, 0x042F	; 0x80042f <_end>
    1fca:	f0 91 30 04 	lds	r31, 0x0430	; 0x800430 <_end+0x1>
    1fce:	e0 50       	subi	r30, 0x00	; 0
    1fd0:	fe 4f       	sbci	r31, 0xFE	; 254
    1fd2:	80 83       	st	Z, r24
	arr_address = 0; //resets array at address 0
    1fd4:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <_end+0x1>
    1fd8:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <_end>
    1fdc:	08 95       	ret

Disassembly of section .text.HEX_Verification:

0000194e <HEX_Verification>:
		call_count = 0; //reset
	}
}

void HEX_Verification() //verifies Hex validity and allocated in appropriated location
{
    194e:	0f 93       	push	r16
    1950:	1f 93       	push	r17
    1952:	cf 93       	push	r28
    1954:	df 93       	push	r29
	//parse the data into usable hex values
	for (int i = 0; i < FLASH_NAND_ADDRESS_MAX; i++)
    1956:	c0 e0       	ldi	r28, 0x00	; 0
    1958:	d0 e0       	ldi	r29, 0x00	; 0
    195a:	4b c0       	rjmp	.+150    	; 0x19f2 <HEX_Verification+0xa4>
	{
		if (CommandBuffer[i] >= '0' && CommandBuffer[i] <= '9')
    195c:	fe 01       	movw	r30, r28
    195e:	e0 50       	subi	r30, 0x00	; 0
    1960:	fe 4f       	sbci	r31, 0xFE	; 254
    1962:	80 81       	ld	r24, Z
    1964:	90 ed       	ldi	r25, 0xD0	; 208
    1966:	98 0f       	add	r25, r24
    1968:	9a 30       	cpi	r25, 0x0A	; 10
    196a:	28 f4       	brcc	.+10     	; 0x1976 <HEX_Verification+0x28>
		{
			CommandBuffer[i] = CommandBuffer[i] - '0';
    196c:	fe 01       	movw	r30, r28
    196e:	e0 50       	subi	r30, 0x00	; 0
    1970:	fe 4f       	sbci	r31, 0xFE	; 254
    1972:	90 83       	st	Z, r25
    1974:	3d c0       	rjmp	.+122    	; 0x19f0 <HEX_Verification+0xa2>
		}
		else if (CommandBuffer[i] >= 'A' && CommandBuffer[i] <= 'F')
    1976:	9f eb       	ldi	r25, 0xBF	; 191
    1978:	98 0f       	add	r25, r24
    197a:	96 30       	cpi	r25, 0x06	; 6
    197c:	30 f4       	brcc	.+12     	; 0x198a <HEX_Verification+0x3c>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'A' + 10;
    197e:	fe 01       	movw	r30, r28
    1980:	e0 50       	subi	r30, 0x00	; 0
    1982:	fe 4f       	sbci	r31, 0xFE	; 254
    1984:	87 53       	subi	r24, 0x37	; 55
    1986:	80 83       	st	Z, r24
    1988:	33 c0       	rjmp	.+102    	; 0x19f0 <HEX_Verification+0xa2>
		}
		else if (CommandBuffer[i] >= 'a' && CommandBuffer[i] <= 'f')
    198a:	9f e9       	ldi	r25, 0x9F	; 159
    198c:	98 0f       	add	r25, r24
    198e:	96 30       	cpi	r25, 0x06	; 6
    1990:	30 f4       	brcc	.+12     	; 0x199e <HEX_Verification+0x50>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'a' + 10;
    1992:	fe 01       	movw	r30, r28
    1994:	e0 50       	subi	r30, 0x00	; 0
    1996:	fe 4f       	sbci	r31, 0xFE	; 254
    1998:	87 55       	subi	r24, 0x57	; 87
    199a:	80 83       	st	Z, r24
    199c:	29 c0       	rjmp	.+82     	; 0x19f0 <HEX_Verification+0xa2>
		}
		else if (CommandBuffer[i] == '\r')
    199e:	8d 30       	cpi	r24, 0x0D	; 13
    19a0:	61 f1       	breq	.+88     	; 0x19fa <HEX_Verification+0xac>
			//CommandBuffer[i] = '\0'; //to reset that element to null
			break;
		}
		else
		{
			USART_Data("Wrong Input \n Make sure input is HEX valid [0 - F] \n");
    19a2:	63 e7       	ldi	r22, 0x73	; 115
    19a4:	71 e0       	ldi	r23, 0x01	; 1
    19a6:	80 e0       	ldi	r24, 0x00	; 0
    19a8:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
			sprintf(status_feature, "Here is what was inputted: (0x%02X)\n", CommandBuffer[i]); //hex data to string
    19ac:	fe 01       	movw	r30, r28
    19ae:	e0 50       	subi	r30, 0x00	; 0
    19b0:	fe 4f       	sbci	r31, 0xFE	; 254
    19b2:	80 81       	ld	r24, Z
    19b4:	1f 92       	push	r1
    19b6:	8f 93       	push	r24
    19b8:	88 ea       	ldi	r24, 0xA8	; 168
    19ba:	91 e0       	ldi	r25, 0x01	; 1
    19bc:	a0 e0       	ldi	r26, 0x00	; 0
    19be:	af 93       	push	r26
    19c0:	9f 93       	push	r25
    19c2:	8f 93       	push	r24
    19c4:	0e ef       	ldi	r16, 0xFE	; 254
    19c6:	12 e0       	ldi	r17, 0x02	; 2
    19c8:	1f 93       	push	r17
    19ca:	0f 93       	push	r16
    19cc:	0e 94 30 12 	call	0x2460	; 0x2460 <_sprintf_cdnopuxX>
			USART_Data(status_feature);
    19d0:	b8 01       	movw	r22, r16
    19d2:	80 e8       	ldi	r24, 0x80	; 128
    19d4:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
			CLEAR_ARR();
    19d8:	0e 94 8a 10 	call	0x2114	; 0x2114 <CLEAR_ARR>
			HEX_Parser();
    19dc:	0e 94 81 11 	call	0x2302	; 0x2302 <HEX_Parser>
    19e0:	8d b7       	in	r24, 0x3d	; 61
    19e2:	9e b7       	in	r25, 0x3e	; 62
    19e4:	07 96       	adiw	r24, 0x07	; 7
    19e6:	0f b6       	in	r0, 0x3f	; 63
    19e8:	f8 94       	cli
    19ea:	9e bf       	out	0x3e, r25	; 62
    19ec:	0f be       	out	0x3f, r0	; 63
    19ee:	8d bf       	out	0x3d, r24	; 61
}

void HEX_Verification() //verifies Hex validity and allocated in appropriated location
{
	//parse the data into usable hex values
	for (int i = 0; i < FLASH_NAND_ADDRESS_MAX; i++)
    19f0:	21 96       	adiw	r28, 0x01	; 1
    19f2:	ca 30       	cpi	r28, 0x0A	; 10
    19f4:	d1 05       	cpc	r29, r1
    19f6:	0c f4       	brge	.+2      	; 0x19fa <HEX_Verification+0xac>
    19f8:	b1 cf       	rjmp	.-158    	; 0x195c <HEX_Verification+0xe>
			USART_Data(status_feature);
			CLEAR_ARR();
			HEX_Parser();
		}
	}
}
    19fa:	df 91       	pop	r29
    19fc:	cf 91       	pop	r28
    19fe:	1f 91       	pop	r17
    1a00:	0f 91       	pop	r16
    1a02:	08 95       	ret

Disassembly of section .text.HEX_Parser:

00002302 <HEX_Parser>:
	arr_address = 0; //resets array at address 0
}

void HEX_Parser() //this is the function to convert uint8_t to hex
{
	UserInput(); //get the hex numbers
    2302:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <UserInput>
		}
		call_count++; //increment call count	
	}
	else //called a second time so, Block/Page Address
	{
		HEX_Verification();
    2306:	0e 94 a7 0c 	call	0x194e	; 0x194e <HEX_Verification>
		
		for (int i = 0; i < 6; i+=2)
    230a:	80 e0       	ldi	r24, 0x00	; 0
    230c:	90 e0       	ldi	r25, 0x00	; 0
    230e:	11 c0       	rjmp	.+34     	; 0x2332 <HEX_Parser+0x30>
		{
			Byte_Address[4 + i] = CommandBuffer[i];
    2310:	fc 01       	movw	r30, r24
    2312:	e0 50       	subi	r30, 0x00	; 0
    2314:	fe 4f       	sbci	r31, 0xFE	; 254
    2316:	20 81       	ld	r18, Z
    2318:	fc 01       	movw	r30, r24
    231a:	ea 5d       	subi	r30, 0xDA	; 218
    231c:	fb 4f       	sbci	r31, 0xFB	; 251
    231e:	20 83       	st	Z, r18
			Byte_Address[4 + (i+1)] = CommandBuffer[i+1];
    2320:	fc 01       	movw	r30, r24
    2322:	ef 5f       	subi	r30, 0xFF	; 255
    2324:	fd 4f       	sbci	r31, 0xFD	; 253
    2326:	20 81       	ld	r18, Z
    2328:	fc 01       	movw	r30, r24
    232a:	e9 5d       	subi	r30, 0xD9	; 217
    232c:	fb 4f       	sbci	r31, 0xFB	; 251
    232e:	20 83       	st	Z, r18
	}
	else //called a second time so, Block/Page Address
	{
		HEX_Verification();
		
		for (int i = 0; i < 6; i+=2)
    2330:	02 96       	adiw	r24, 0x02	; 2
    2332:	86 30       	cpi	r24, 0x06	; 6
    2334:	91 05       	cpc	r25, r1
    2336:	64 f3       	brlt	.-40     	; 0x2310 <HEX_Parser+0xe>
			Byte_Address[4 + i] = CommandBuffer[i];
			Byte_Address[4 + (i+1)] = CommandBuffer[i+1];
		}
		call_count = 0; //reset
	}
}
    2338:	08 95       	ret

Disassembly of section .text.ExecuteCommand:

00000f1c <ExecuteCommand>:
		}
	}
}

void ExecuteCommand(const uint8_t *str) //Execute Command Line function
{
     f1c:	cf 92       	push	r12
     f1e:	df 92       	push	r13
     f20:	ef 92       	push	r14
     f22:	0f 93       	push	r16
     f24:	1f 93       	push	r17
     f26:	cf 93       	push	r28
     f28:	df 93       	push	r29
     f2a:	6b 01       	movw	r12, r22
     f2c:	e8 2e       	mov	r14, r24
	if (strcmp(str, "Flash ID") == 0) //Flash ID Command
     f2e:	2d ec       	ldi	r18, 0xCD	; 205
     f30:	31 e0       	ldi	r19, 0x01	; 1
     f32:	40 e0       	ldi	r20, 0x00	; 0
     f34:	0e 94 00 11 	call	0x2200	; 0x2200 <strcmp>
     f38:	89 2b       	or	r24, r25
     f3a:	29 f4       	brne	.+10     	; 0xf46 <ExecuteCommand+0x2a>
	{
		CLEAR_ARR();
     f3c:	0e 94 8a 10 	call	0x2114	; 0x2114 <CLEAR_ARR>
		FLASH_ID(); //reads Device ID
     f40:	0e 94 2d 0f 	call	0x1e5a	; 0x1e5a <FLASH_ID>
     f44:	1d c1       	rjmp	.+570    	; 0x1180 <__EEPROM_REGION_LENGTH__+0x180>
	}
	
	else if (strcmp(str, "Erase Memory") == 0) //Erase Flash Memory Command
     f46:	26 ed       	ldi	r18, 0xD6	; 214
     f48:	31 e0       	ldi	r19, 0x01	; 1
     f4a:	40 e0       	ldi	r20, 0x00	; 0
     f4c:	8e 2d       	mov	r24, r14
     f4e:	b6 01       	movw	r22, r12
     f50:	0e 94 00 11 	call	0x2200	; 0x2200 <strcmp>
     f54:	89 2b       	or	r24, r25
     f56:	39 f4       	brne	.+14     	; 0xf66 <ExecuteCommand+0x4a>
	{
		s = 0; //sets main array address to normal operation
     f58:	10 92 21 04 	sts	0x0421, r1	; 0x800421 <s+0x1>
     f5c:	10 92 20 04 	sts	0x0420, r1	; 0x800420 <s>
		CLEAR_ARR();
     f60:	0e 94 8a 10 	call	0x2114	; 0x2114 <CLEAR_ARR>
     f64:	0d c1       	rjmp	.+538    	; 0x1180 <__EEPROM_REGION_LENGTH__+0x180>
		//FLASH_Block_Erase(); //Erases Flash Block
	}
	
	else if (strcmp(str, "Write Test") == 0) //Basic Flash Test Command
     f66:	23 ee       	ldi	r18, 0xE3	; 227
     f68:	31 e0       	ldi	r19, 0x01	; 1
     f6a:	40 e0       	ldi	r20, 0x00	; 0
     f6c:	8e 2d       	mov	r24, r14
     f6e:	b6 01       	movw	r22, r12
     f70:	0e 94 00 11 	call	0x2200	; 0x2200 <strcmp>
     f74:	89 2b       	or	r24, r25
     f76:	09 f0       	breq	.+2      	; 0xf7a <ExecuteCommand+0x5e>
     f78:	4b c0       	rjmp	.+150    	; 0x1010 <__EEPROM_REGION_LENGTH__+0x10>
	{
		s = 0;
     f7a:	10 92 21 04 	sts	0x0421, r1	; 0x800421 <s+0x1>
     f7e:	10 92 20 04 	sts	0x0420, r1	; 0x800420 <s>
		CLEAR_ARR();
     f82:	0e 94 8a 10 	call	0x2114	; 0x2114 <CLEAR_ARR>
		
		UserInput(); //User Input is added into an array, which will be written to memory
     f86:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <UserInput>
		USART_Data(CommandBuffer); //will show what is in the array in question...
     f8a:	60 e0       	ldi	r22, 0x00	; 0
     f8c:	72 e0       	ldi	r23, 0x02	; 2
     f8e:	80 e8       	ldi	r24, 0x80	; 128
     f90:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
		USART_TX_Data('\n');
     f94:	8a e0       	ldi	r24, 0x0A	; 10
     f96:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <USART_TX_Data>
		
		USART_Data("---Column Address--- 4 bytes \n");
     f9a:	6e ee       	ldi	r22, 0xEE	; 238
     f9c:	71 e0       	ldi	r23, 0x01	; 1
     f9e:	80 e0       	ldi	r24, 0x00	; 0
     fa0:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
		HEX_Parser();
     fa4:	0e 94 81 11 	call	0x2302	; 0x2302 <HEX_Parser>
		USART_TX_Data('\n');
     fa8:	8a e0       	ldi	r24, 0x0A	; 10
     faa:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <USART_TX_Data>

		USART_Data("---Block/Page Address--- 6 bytes \n");
     fae:	6d e0       	ldi	r22, 0x0D	; 13
     fb0:	72 e0       	ldi	r23, 0x02	; 2
     fb2:	80 e0       	ldi	r24, 0x00	; 0
     fb4:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
		HEX_Parser();
     fb8:	0e 94 81 11 	call	0x2302	; 0x2302 <HEX_Parser>
		USART_TX_Data('\n');
     fbc:	8a e0       	ldi	r24, 0x0A	; 10
     fbe:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <USART_TX_Data>
		
		for (int i = 0; i < 10; i++)
     fc2:	00 e0       	ldi	r16, 0x00	; 0
     fc4:	10 e0       	ldi	r17, 0x00	; 0
     fc6:	20 c0       	rjmp	.+64     	; 0x1008 <__EEPROM_REGION_LENGTH__+0x8>
		{
			sprintf(status_feature, "Here is what was inputted: (0x%02X)\n", Byte_Address[i]); //hex data to string
     fc8:	f8 01       	movw	r30, r16
     fca:	ee 5d       	subi	r30, 0xDE	; 222
     fcc:	fb 4f       	sbci	r31, 0xFB	; 251
     fce:	80 81       	ld	r24, Z
     fd0:	1f 92       	push	r1
     fd2:	8f 93       	push	r24
     fd4:	88 ea       	ldi	r24, 0xA8	; 168
     fd6:	91 e0       	ldi	r25, 0x01	; 1
     fd8:	a0 e0       	ldi	r26, 0x00	; 0
     fda:	af 93       	push	r26
     fdc:	9f 93       	push	r25
     fde:	8f 93       	push	r24
     fe0:	ce ef       	ldi	r28, 0xFE	; 254
     fe2:	d2 e0       	ldi	r29, 0x02	; 2
     fe4:	df 93       	push	r29
     fe6:	cf 93       	push	r28
     fe8:	0e 94 30 12 	call	0x2460	; 0x2460 <_sprintf_cdnopuxX>
			USART_Data(status_feature);
     fec:	be 01       	movw	r22, r28
     fee:	80 e8       	ldi	r24, 0x80	; 128
     ff0:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>

		USART_Data("---Block/Page Address--- 6 bytes \n");
		HEX_Parser();
		USART_TX_Data('\n');
		
		for (int i = 0; i < 10; i++)
     ff4:	0f 5f       	subi	r16, 0xFF	; 255
     ff6:	1f 4f       	sbci	r17, 0xFF	; 255
     ff8:	8d b7       	in	r24, 0x3d	; 61
     ffa:	9e b7       	in	r25, 0x3e	; 62
     ffc:	07 96       	adiw	r24, 0x07	; 7
     ffe:	0f b6       	in	r0, 0x3f	; 63
    1000:	f8 94       	cli
    1002:	9e bf       	out	0x3e, r25	; 62
    1004:	0f be       	out	0x3f, r0	; 63
    1006:	8d bf       	out	0x3d, r24	; 61
    1008:	0a 30       	cpi	r16, 0x0A	; 10
    100a:	11 05       	cpc	r17, r1
    100c:	ec f2       	brlt	.-70     	; 0xfc8 <ExecuteCommand+0xac>
    100e:	b8 c0       	rjmp	.+368    	; 0x1180 <__EEPROM_REGION_LENGTH__+0x180>
		}
		
		//FLASH_Page_Program(s, Byte_Address); //adds user input into Flash Write Function, to memory...
	}
	
	else if (strcmp(str, "Read Memory") == 0) //Basic Read Test Command
    1010:	20 e3       	ldi	r18, 0x30	; 48
    1012:	32 e0       	ldi	r19, 0x02	; 2
    1014:	40 e0       	ldi	r20, 0x00	; 0
    1016:	8e 2d       	mov	r24, r14
    1018:	b6 01       	movw	r22, r12
    101a:	0e 94 00 11 	call	0x2200	; 0x2200 <strcmp>
    101e:	89 2b       	or	r24, r25
    1020:	79 f4       	brne	.+30     	; 0x1040 <__EEPROM_REGION_LENGTH__+0x40>
	{
		s = 0; //sets main array to normal operations
    1022:	10 92 21 04 	sts	0x0421, r1	; 0x800421 <s+0x1>
    1026:	10 92 20 04 	sts	0x0420, r1	; 0x800420 <s>
		CLEAR_ARR();
    102a:	0e 94 8a 10 	call	0x2114	; 0x2114 <CLEAR_ARR>
		//FLASH_Read();

		USART_Data(data);
    102e:	6d e1       	ldi	r22, 0x1D	; 29
    1030:	73 e0       	ldi	r23, 0x03	; 3
    1032:	80 e8       	ldi	r24, 0x80	; 128
    1034:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
		USART_TX_Data('\n');
    1038:	8a e0       	ldi	r24, 0x0A	; 10
    103a:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <USART_TX_Data>
    103e:	a0 c0       	rjmp	.+320    	; 0x1180 <__EEPROM_REGION_LENGTH__+0x180>
	}
	
	else if (strcmp(str, "Parameter Page") == 0) //Basic Read Test Command
    1040:	2c e3       	ldi	r18, 0x3C	; 60
    1042:	32 e0       	ldi	r19, 0x02	; 2
    1044:	40 e0       	ldi	r20, 0x00	; 0
    1046:	8e 2d       	mov	r24, r14
    1048:	b6 01       	movw	r22, r12
    104a:	0e 94 00 11 	call	0x2200	; 0x2200 <strcmp>
    104e:	89 2b       	or	r24, r25
    1050:	81 f5       	brne	.+96     	; 0x10b2 <__EEPROM_REGION_LENGTH__+0xb2>
	{
		s = 2; //sets main array address to the correct place
    1052:	82 e0       	ldi	r24, 0x02	; 2
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	90 93 21 04 	sts	0x0421, r25	; 0x800421 <s+0x1>
    105a:	80 93 20 04 	sts	0x0420, r24	; 0x800420 <s>
		CLEAR_ARR();
    105e:	0e 94 8a 10 	call	0x2114	; 0x2114 <CLEAR_ARR>
		//FLASH_Para_Pg();
		
		//reading data from Data array
		for (int i = 0; i < sizeof(data); i++) //address is incremented automatically after each byte is shifted out
    1062:	c0 e0       	ldi	r28, 0x00	; 0
    1064:	d0 e0       	ldi	r29, 0x00	; 0
    1066:	21 c0       	rjmp	.+66     	; 0x10aa <__EEPROM_REGION_LENGTH__+0xaa>
		{
			sprintf(status_feature, "%i->Data Received: (0x%02X) \n", i, data[i]); //hex data to string
    1068:	fe 01       	movw	r30, r28
    106a:	e3 5e       	subi	r30, 0xE3	; 227
    106c:	fc 4f       	sbci	r31, 0xFC	; 252
    106e:	80 81       	ld	r24, Z
    1070:	1f 92       	push	r1
    1072:	8f 93       	push	r24
    1074:	df 93       	push	r29
    1076:	cf 93       	push	r28
    1078:	8b e4       	ldi	r24, 0x4B	; 75
    107a:	92 e0       	ldi	r25, 0x02	; 2
    107c:	a0 e0       	ldi	r26, 0x00	; 0
    107e:	af 93       	push	r26
    1080:	9f 93       	push	r25
    1082:	8f 93       	push	r24
    1084:	0e ef       	ldi	r16, 0xFE	; 254
    1086:	12 e0       	ldi	r17, 0x02	; 2
    1088:	1f 93       	push	r17
    108a:	0f 93       	push	r16
    108c:	0e 94 30 12 	call	0x2460	; 0x2460 <_sprintf_cdnopuxX>
			USART_Data(status_feature);
    1090:	b8 01       	movw	r22, r16
    1092:	80 e8       	ldi	r24, 0x80	; 128
    1094:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
		s = 2; //sets main array address to the correct place
		CLEAR_ARR();
		//FLASH_Para_Pg();
		
		//reading data from Data array
		for (int i = 0; i < sizeof(data); i++) //address is incremented automatically after each byte is shifted out
    1098:	21 96       	adiw	r28, 0x01	; 1
    109a:	8d b7       	in	r24, 0x3d	; 61
    109c:	9e b7       	in	r25, 0x3e	; 62
    109e:	09 96       	adiw	r24, 0x09	; 9
    10a0:	0f b6       	in	r0, 0x3f	; 63
    10a2:	f8 94       	cli
    10a4:	9e bf       	out	0x3e, r25	; 62
    10a6:	0f be       	out	0x3f, r0	; 63
    10a8:	8d bf       	out	0x3d, r24	; 61
    10aa:	ce 3f       	cpi	r28, 0xFE	; 254
    10ac:	d1 05       	cpc	r29, r1
    10ae:	e0 f2       	brcs	.-72     	; 0x1068 <__EEPROM_REGION_LENGTH__+0x68>
    10b0:	67 c0       	rjmp	.+206    	; 0x1180 <__EEPROM_REGION_LENGTH__+0x180>
			sprintf(status_feature, "%i->Data Received: (0x%02X) \n", i, data[i]); //hex data to string
			USART_Data(status_feature);
		}	
	}
	
	else if (strcmp(str, "Reset") == 0) //Basic Read Test Command
    10b2:	29 e6       	ldi	r18, 0x69	; 105
    10b4:	32 e0       	ldi	r19, 0x02	; 2
    10b6:	40 e0       	ldi	r20, 0x00	; 0
    10b8:	8e 2d       	mov	r24, r14
    10ba:	b6 01       	movw	r22, r12
    10bc:	0e 94 00 11 	call	0x2200	; 0x2200 <strcmp>
    10c0:	89 2b       	or	r24, r25
    10c2:	29 f4       	brne	.+10     	; 0x10ce <__EEPROM_REGION_LENGTH__+0xce>
	{
		CLEAR_ARR();
    10c4:	0e 94 8a 10 	call	0x2114	; 0x2114 <CLEAR_ARR>
		FLASH_Reset();
    10c8:	0e 94 67 12 	call	0x24ce	; 0x24ce <FLASH_Reset>
    10cc:	59 c0       	rjmp	.+178    	; 0x1180 <__EEPROM_REGION_LENGTH__+0x180>
	}
	
	else if (strcmp(str, "Flash Status") == 0) //Read Flash NAND status register
    10ce:	2f e6       	ldi	r18, 0x6F	; 111
    10d0:	32 e0       	ldi	r19, 0x02	; 2
    10d2:	40 e0       	ldi	r20, 0x00	; 0
    10d4:	8e 2d       	mov	r24, r14
    10d6:	b6 01       	movw	r22, r12
    10d8:	0e 94 00 11 	call	0x2200	; 0x2200 <strcmp>
    10dc:	89 2b       	or	r24, r25
    10de:	29 f4       	brne	.+10     	; 0x10ea <__EEPROM_REGION_LENGTH__+0xea>
	{
		CLEAR_ARR();
    10e0:	0e 94 8a 10 	call	0x2114	; 0x2114 <CLEAR_ARR>
		FLASH_Status();
    10e4:	0e 94 e6 0e 	call	0x1dcc	; 0x1dcc <FLASH_Status>
    10e8:	4b c0       	rjmp	.+150    	; 0x1180 <__EEPROM_REGION_LENGTH__+0x180>
	}
	
	//this might stick as part of the main options, but its mostly meant for debugging bad blocks...
	else if (strcmp(str, "Block Checker") == 0) //Determines if block is good or bad...
    10ea:	2c e7       	ldi	r18, 0x7C	; 124
    10ec:	32 e0       	ldi	r19, 0x02	; 2
    10ee:	40 e0       	ldi	r20, 0x00	; 0
    10f0:	8e 2d       	mov	r24, r14
    10f2:	b6 01       	movw	r22, r12
    10f4:	0e 94 00 11 	call	0x2200	; 0x2200 <strcmp>
    10f8:	89 2b       	or	r24, r25
    10fa:	d1 f4       	brne	.+52     	; 0x1130 <__EEPROM_REGION_LENGTH__+0x130>
	{
		s = 1;
    10fc:	81 e0       	ldi	r24, 0x01	; 1
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	90 93 21 04 	sts	0x0421, r25	; 0x800421 <s+0x1>
    1104:	80 93 20 04 	sts	0x0420, r24	; 0x800420 <s>
		CLEAR_ARR();
    1108:	0e 94 8a 10 	call	0x2114	; 0x2114 <CLEAR_ARR>
		FLASH_Read();
    110c:	0e 94 dd 10 	call	0x21ba	; 0x21ba <FLASH_Read>

		if (HEX_ID[0] != 0xFF) 
    1110:	80 91 1b 04 	lds	r24, 0x041B	; 0x80041b <HEX_ID>
    1114:	8f 3f       	cpi	r24, 0xFF	; 255
    1116:	31 f0       	breq	.+12     	; 0x1124 <__EEPROM_REGION_LENGTH__+0x124>
		{
			USART_Data("Block 15 is marked bad\n");
    1118:	6a e8       	ldi	r22, 0x8A	; 138
    111a:	72 e0       	ldi	r23, 0x02	; 2
    111c:	80 e0       	ldi	r24, 0x00	; 0
    111e:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
    1122:	2e c0       	rjmp	.+92     	; 0x1180 <__EEPROM_REGION_LENGTH__+0x180>
		} 
		else 
		{
			USART_Data("Block 15 appears clean\n");
    1124:	62 ea       	ldi	r22, 0xA2	; 162
    1126:	72 e0       	ldi	r23, 0x02	; 2
    1128:	80 e0       	ldi	r24, 0x00	; 0
    112a:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
    112e:	28 c0       	rjmp	.+80     	; 0x1180 <__EEPROM_REGION_LENGTH__+0x180>
		}
	}
	
	else
	{
		USART_Data("1) Flash ID \n");
    1130:	6a eb       	ldi	r22, 0xBA	; 186
    1132:	72 e0       	ldi	r23, 0x02	; 2
    1134:	80 e0       	ldi	r24, 0x00	; 0
    1136:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
		USART_Data("2) Erase Memory \n");
    113a:	68 ec       	ldi	r22, 0xC8	; 200
    113c:	72 e0       	ldi	r23, 0x02	; 2
    113e:	80 e0       	ldi	r24, 0x00	; 0
    1140:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
		USART_Data("3) Write Test \n");
    1144:	6a ed       	ldi	r22, 0xDA	; 218
    1146:	72 e0       	ldi	r23, 0x02	; 2
    1148:	80 e0       	ldi	r24, 0x00	; 0
    114a:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
		USART_Data("4) Read Memory \n");
    114e:	6a ee       	ldi	r22, 0xEA	; 234
    1150:	72 e0       	ldi	r23, 0x02	; 2
    1152:	80 e0       	ldi	r24, 0x00	; 0
    1154:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
		USART_Data("5) Parameter Page \n");
    1158:	6b ef       	ldi	r22, 0xFB	; 251
    115a:	72 e0       	ldi	r23, 0x02	; 2
    115c:	80 e0       	ldi	r24, 0x00	; 0
    115e:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
		USART_Data("6) Flash Status \n");
    1162:	6f e0       	ldi	r22, 0x0F	; 15
    1164:	73 e0       	ldi	r23, 0x03	; 3
    1166:	80 e0       	ldi	r24, 0x00	; 0
    1168:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
		USART_Data("7) Block Checker \n");
    116c:	61 e2       	ldi	r22, 0x21	; 33
    116e:	73 e0       	ldi	r23, 0x03	; 3
    1170:	80 e0       	ldi	r24, 0x00	; 0
    1172:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
		USART_Data("8) Reset \n");
    1176:	64 e3       	ldi	r22, 0x34	; 52
    1178:	73 e0       	ldi	r23, 0x03	; 3
    117a:	80 e0       	ldi	r24, 0x00	; 0
    117c:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
	}
}
    1180:	df 91       	pop	r29
    1182:	cf 91       	pop	r28
    1184:	1f 91       	pop	r17
    1186:	0f 91       	pop	r16
    1188:	ef 90       	pop	r14
    118a:	df 90       	pop	r13
    118c:	cf 90       	pop	r12
    118e:	08 95       	ret

Disassembly of section .text.CommandLine:

00001c9e <CommandLine>:
#include "../include/AWS_Board_Operations.h"

int arr_address = 0; //for CommandBuffer array

void CommandLine()
{	
    1c9e:	cf 92       	push	r12
    1ca0:	df 92       	push	r13
    1ca2:	ef 92       	push	r14
	USART_Data("->User Input:\n"); //asking for User Input
    1ca4:	6f e3       	ldi	r22, 0x3F	; 63
    1ca6:	73 e0       	ldi	r23, 0x03	; 3
    1ca8:	80 e0       	ldi	r24, 0x00	; 0
    1caa:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
	
	c = USART_RX_Data(); //receive user uint8_t data type input
    1cae:	0e 94 f3 12 	call	0x25e6	; 0x25e6 <USART_RX_Data>
    1cb2:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <c>
	while ((c != '\r') && (c!= '\n'))
    1cb6:	1c c0       	rjmp	.+56     	; 0x1cf0 <CommandLine+0x52>
	{
		CommandBuffer[arr_address] = c; //adding uint8_t into array at index, creating a string
    1cb8:	20 91 2f 04 	lds	r18, 0x042F	; 0x80042f <_end>
    1cbc:	30 91 30 04 	lds	r19, 0x0430	; 0x800430 <_end+0x1>
    1cc0:	f9 01       	movw	r30, r18
    1cc2:	e0 50       	subi	r30, 0x00	; 0
    1cc4:	fe 4f       	sbci	r31, 0xFE	; 254
    1cc6:	80 83       	st	Z, r24
		if (arr_address >= sizeof(CommandBuffer)) //making this an endless array for command lines
    1cc8:	2e 3f       	cpi	r18, 0xFE	; 254
    1cca:	31 05       	cpc	r19, r1
    1ccc:	20 f0       	brcs	.+8      	; 0x1cd6 <CommandLine+0x38>
		{
			arr_address = 0; //resets array at address 0
    1cce:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <_end+0x1>
    1cd2:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <_end>
		}
		arr_address++;
    1cd6:	80 91 2f 04 	lds	r24, 0x042F	; 0x80042f <_end>
    1cda:	90 91 30 04 	lds	r25, 0x0430	; 0x800430 <_end+0x1>
    1cde:	01 96       	adiw	r24, 0x01	; 1
    1ce0:	90 93 30 04 	sts	0x0430, r25	; 0x800430 <_end+0x1>
    1ce4:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_end>
		c = USART_RX_Data(); //receive user uint8_t data type input
    1ce8:	0e 94 f3 12 	call	0x25e6	; 0x25e6 <USART_RX_Data>
    1cec:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <c>
void CommandLine()
{	
	USART_Data("->User Input:\n"); //asking for User Input
	
	c = USART_RX_Data(); //receive user uint8_t data type input
	while ((c != '\r') && (c!= '\n'))
    1cf0:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <c>
    1cf4:	8d 30       	cpi	r24, 0x0D	; 13
    1cf6:	11 f0       	breq	.+4      	; 0x1cfc <CommandLine+0x5e>
    1cf8:	8a 30       	cpi	r24, 0x0A	; 10
    1cfa:	f1 f6       	brne	.-68     	; 0x1cb8 <CommandLine+0x1a>
			arr_address = 0; //resets array at address 0
		}
		arr_address++;
		c = USART_RX_Data(); //receive user uint8_t data type input
	}
	CommandBuffer[arr_address] = '\0'; //adding NULL '\0' to mark end of Command String...; adding carriage return '\r' until I can get NULL to work...
    1cfc:	e0 91 2f 04 	lds	r30, 0x042F	; 0x80042f <_end>
    1d00:	f0 91 30 04 	lds	r31, 0x0430	; 0x800430 <_end+0x1>
    1d04:	e0 50       	subi	r30, 0x00	; 0
    1d06:	fe 4f       	sbci	r31, 0xFE	; 254
    1d08:	10 82       	st	Z, r1
	arr_address = 0; //resets array at address 0
    1d0a:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <_end+0x1>
    1d0e:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <_end>
	
	USART_Data(CommandBuffer); //shows what the user wrote on terminal
    1d12:	80 e0       	ldi	r24, 0x00	; 0
    1d14:	92 e0       	ldi	r25, 0x02	; 2
    1d16:	6c 01       	movw	r12, r24
    1d18:	20 e8       	ldi	r18, 0x80	; 128
    1d1a:	e2 2e       	mov	r14, r18
    1d1c:	8e 2d       	mov	r24, r14
    1d1e:	b6 01       	movw	r22, r12
    1d20:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
	USART_TX_Data('\n');
    1d24:	8a e0       	ldi	r24, 0x0A	; 10
    1d26:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <USART_TX_Data>
		
	ExecuteCommand(CommandBuffer); //puts CommandLine into Execute Function...
    1d2a:	8e 2d       	mov	r24, r14
    1d2c:	b6 01       	movw	r22, r12
    1d2e:	0e 94 8e 07 	call	0xf1c	; 0xf1c <ExecuteCommand>
}
    1d32:	ef 90       	pop	r14
    1d34:	df 90       	pop	r13
    1d36:	cf 90       	pop	r12
    1d38:	08 95       	ret

Disassembly of section .text.CLEAR_ARR:

00002114 <CLEAR_ARR>:
	PORTA |= (1 << PA3); //~CS pin set high for de-selecting slave device; to end the command sequence

	USART_Data("Program Load \n");

	FLASH_Transfer_Cache(s , array);	
}
    2114:	80 e0       	ldi	r24, 0x00	; 0
    2116:	90 e0       	ldi	r25, 0x00	; 0
    2118:	05 c0       	rjmp	.+10     	; 0x2124 <CLEAR_ARR+0x10>
    211a:	fc 01       	movw	r30, r24
    211c:	e5 5e       	subi	r30, 0xE5	; 229
    211e:	fb 4f       	sbci	r31, 0xFB	; 251
    2120:	10 82       	st	Z, r1
    2122:	01 96       	adiw	r24, 0x01	; 1
    2124:	85 30       	cpi	r24, 0x05	; 5
    2126:	91 05       	cpc	r25, r1
    2128:	c0 f3       	brcs	.-16     	; 0x211a <CLEAR_ARR+0x6>
    212a:	80 e0       	ldi	r24, 0x00	; 0
    212c:	90 e0       	ldi	r25, 0x00	; 0
    212e:	05 c0       	rjmp	.+10     	; 0x213a <CLEAR_ARR+0x26>
    2130:	fc 01       	movw	r30, r24
    2132:	e3 5e       	subi	r30, 0xE3	; 227
    2134:	fc 4f       	sbci	r31, 0xFC	; 252
    2136:	10 82       	st	Z, r1
    2138:	01 96       	adiw	r24, 0x01	; 1
    213a:	8e 3f       	cpi	r24, 0xFE	; 254
    213c:	91 05       	cpc	r25, r1
    213e:	c0 f3       	brcs	.-16     	; 0x2130 <CLEAR_ARR+0x1c>
    2140:	80 e0       	ldi	r24, 0x00	; 0
    2142:	90 e0       	ldi	r25, 0x00	; 0
    2144:	05 c0       	rjmp	.+10     	; 0x2150 <CLEAR_ARR+0x3c>
    2146:	fc 01       	movw	r30, r24
    2148:	e0 50       	subi	r30, 0x00	; 0
    214a:	fe 4f       	sbci	r31, 0xFE	; 254
    214c:	10 82       	st	Z, r1
    214e:	01 96       	adiw	r24, 0x01	; 1
    2150:	8e 3f       	cpi	r24, 0xFE	; 254
    2152:	91 05       	cpc	r25, r1
    2154:	c0 f3       	brcs	.-16     	; 0x2146 <CLEAR_ARR+0x32>
    2156:	80 e0       	ldi	r24, 0x00	; 0
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	05 c0       	rjmp	.+10     	; 0x2166 <CLEAR_ARR+0x52>
    215c:	fc 01       	movw	r30, r24
    215e:	ee 5d       	subi	r30, 0xDE	; 222
    2160:	fb 4f       	sbci	r31, 0xFB	; 251
    2162:	10 82       	st	Z, r1
    2164:	01 96       	adiw	r24, 0x01	; 1
    2166:	8a 30       	cpi	r24, 0x0A	; 10
    2168:	91 05       	cpc	r25, r1
    216a:	c0 f3       	brcs	.-16     	; 0x215c <CLEAR_ARR+0x48>
    216c:	08 95       	ret

Disassembly of section .text.SPI_MASTER_Init:

00002486 <SPI_MASTER_Init>:

//Master Mode (for ATmega 2560) allows full duplex communication between the ATmega 2560 to Flash NAND Memory chip
void SPI_MASTER_Init() //initializes Serial Peripheral Interference (SPI) operations in Master Mode
{
	//DDR pin assignment, ~CS, MOSI, SCK are outputs (1), and MISO is input (0) (in Master Mode)
	DDRB |= (1 << PB2) | (1 << PB1); //setting MASTER_MOSI (PB2) as output; setting MASTER_SCK (PB1) as output;
    2486:	84 b1       	in	r24, 0x04	; 4
    2488:	86 60       	ori	r24, 0x06	; 6
    248a:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << PB3); //setting MASTER_MISO (PB3) as input;
    248c:	84 b1       	in	r24, 0x04	; 4
    248e:	87 7f       	andi	r24, 0xF7	; 247
    2490:	84 b9       	out	0x04, r24	; 4
	
	//MUST set ~SS on the ATmega 2560 in order to get SPI operations working...
	DDRB |= (1 << PB0); //setting ~SS pin (PB0) as output;
    2492:	84 b1       	in	r24, 0x04	; 4
    2494:	81 60       	ori	r24, 0x01	; 1
    2496:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1 << PB0); //setting ~SS pin (PB0) high to "de-select" slave device (not connected to the Flash NAND anyway)
    2498:	85 b1       	in	r24, 0x05	; 5
    249a:	81 60       	ori	r24, 0x01	; 1
    249c:	85 b9       	out	0x05, r24	; 5
	//PORTB &= ~(1 << PB0); //setting ~SS pin (PB0) low to "select" slave device (not connected to the Flash NAND anyway)
	
	SPCR |= (1 << SPE) | (1 << MSTR) | (1 << SPR0); // SPE: enables the SPI; MSTR: sets SPI to Master SPI mode; SPR1 and SPR0: sets the SCK Frequency (divisor of 16);
    249e:	8c b5       	in	r24, 0x2c	; 44
    24a0:	81 65       	ori	r24, 0x51	; 81
    24a2:	8c bd       	out	0x2c, r24	; 44
	SPCR &= ~(1 << DORD) | ~(1 << CPOL) | ~(1 << CPHA) | ~(1 << SPR1);//DORD, Data order set to MSB transmitted first; SPI Timing Mode is 0, where CPOL and CPHA are both 0
    24a4:	8c b5       	in	r24, 0x2c	; 44
    24a6:	8c bd       	out	0x2c, r24	; 44
    24a8:	08 95       	ret

Disassembly of section .text.FLASH_ID:

00001e5a <FLASH_ID>:
	PORTA |= (1 << PA3); //~CS pin set high for de-selecting slave device; to end the command sequence

	USART_Data("Program Load \n");

	FLASH_Transfer_Cache(s , array);	
}
    1e5a:	cf 93       	push	r28
    1e5c:	df 93       	push	r29
    1e5e:	82 b1       	in	r24, 0x02	; 2
    1e60:	87 7f       	andi	r24, 0xF7	; 247
    1e62:	82 b9       	out	0x02, r24	; 2
    1e64:	8f e9       	ldi	r24, 0x9F	; 159
    1e66:	8e bd       	out	0x2e, r24	; 46
    1e68:	0d b4       	in	r0, 0x2d	; 45
    1e6a:	07 fe       	sbrs	r0, 7
    1e6c:	fd cf       	rjmp	.-6      	; 0x1e68 <FLASH_ID+0xe>
    1e6e:	8e b5       	in	r24, 0x2e	; 46
    1e70:	80 93 2c 04 	sts	0x042C, r24	; 0x80042c <status>
    1e74:	1e bc       	out	0x2e, r1	; 46
    1e76:	0d b4       	in	r0, 0x2d	; 45
    1e78:	07 fe       	sbrs	r0, 7
    1e7a:	fd cf       	rjmp	.-6      	; 0x1e76 <FLASH_ID+0x1c>
    1e7c:	8e b5       	in	r24, 0x2e	; 46
    1e7e:	80 93 2c 04 	sts	0x042C, r24	; 0x80042c <status>
    1e82:	1e bc       	out	0x2e, r1	; 46
    1e84:	0d b4       	in	r0, 0x2d	; 45
    1e86:	07 fe       	sbrs	r0, 7
    1e88:	fd cf       	rjmp	.-6      	; 0x1e84 <FLASH_ID+0x2a>
    1e8a:	8e b5       	in	r24, 0x2e	; 46
    1e8c:	80 93 1b 04 	sts	0x041B, r24	; 0x80041b <HEX_ID>
    1e90:	1e bc       	out	0x2e, r1	; 46
    1e92:	0d b4       	in	r0, 0x2d	; 45
    1e94:	07 fe       	sbrs	r0, 7
    1e96:	fd cf       	rjmp	.-6      	; 0x1e92 <FLASH_ID+0x38>
    1e98:	9e b5       	in	r25, 0x2e	; 46
    1e9a:	eb e1       	ldi	r30, 0x1B	; 27
    1e9c:	f4 e0       	ldi	r31, 0x04	; 4
    1e9e:	91 83       	std	Z+1, r25	; 0x01
    1ea0:	82 b1       	in	r24, 0x02	; 2
    1ea2:	88 60       	ori	r24, 0x08	; 8
    1ea4:	82 b9       	out	0x02, r24	; 2
    1ea6:	80 81       	ld	r24, Z
    1ea8:	1f 92       	push	r1
    1eaa:	9f 93       	push	r25
    1eac:	1f 92       	push	r1
    1eae:	8f 93       	push	r24
    1eb0:	8d e6       	ldi	r24, 0x6D	; 109
    1eb2:	93 e0       	ldi	r25, 0x03	; 3
    1eb4:	a0 e0       	ldi	r26, 0x00	; 0
    1eb6:	af 93       	push	r26
    1eb8:	9f 93       	push	r25
    1eba:	8f 93       	push	r24
    1ebc:	ce ef       	ldi	r28, 0xFE	; 254
    1ebe:	d2 e0       	ldi	r29, 0x02	; 2
    1ec0:	df 93       	push	r29
    1ec2:	cf 93       	push	r28
    1ec4:	0e 94 30 12 	call	0x2460	; 0x2460 <_sprintf_cdnopuxX>
    1ec8:	be 01       	movw	r22, r28
    1eca:	80 e8       	ldi	r24, 0x80	; 128
    1ecc:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
    1ed0:	8d b7       	in	r24, 0x3d	; 61
    1ed2:	9e b7       	in	r25, 0x3e	; 62
    1ed4:	09 96       	adiw	r24, 0x09	; 9
    1ed6:	0f b6       	in	r0, 0x3f	; 63
    1ed8:	f8 94       	cli
    1eda:	9e bf       	out	0x3e, r25	; 62
    1edc:	0f be       	out	0x3f, r0	; 63
    1ede:	8d bf       	out	0x3d, r24	; 61
    1ee0:	df 91       	pop	r29
    1ee2:	cf 91       	pop	r28
    1ee4:	08 95       	ret

Disassembly of section .text.FLASH_Reset:

000024ce <FLASH_Reset>:
	USART_Data(status_feature);
}

void FLASH_Reset() //reset memory device
{
	PORTA &= ~(1 << PA3); //~CS pin set low for selecting slave device
    24ce:	82 b1       	in	r24, 0x02	; 2
    24d0:	87 7f       	andi	r24, 0xF7	; 247
    24d2:	82 b9       	out	0x02, r24	; 2
	
	SPDR = RESET; //Sending READ_ID Command into SPI Data Register (SPDR)
    24d4:	8f ef       	ldi	r24, 0xFF	; 255
    24d6:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    24d8:	0d b4       	in	r0, 0x2d	; 45
    24da:	07 fe       	sbrs	r0, 7
    24dc:	fd cf       	rjmp	.-6      	; 0x24d8 <FLASH_Reset+0xa>
	
	PORTA |= (1 << PA3); //~CS pin set high for de-selecting slave device; to end the command sequence
    24de:	82 b1       	in	r24, 0x02	; 2
    24e0:	88 60       	ori	r24, 0x08	; 8
    24e2:	82 b9       	out	0x02, r24	; 2

	USART_Data("Device Reseted \n");
    24e4:	65 ea       	ldi	r22, 0xA5	; 165
    24e6:	73 e0       	ldi	r23, 0x03	; 3
    24e8:	80 e0       	ldi	r24, 0x00	; 0
    24ea:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
    24ee:	08 95       	ret

Disassembly of section .text.FLASH_Status:

00001dcc <FLASH_Status>:
	PORTA |= (1 << PA3); //~CS pin set high for de-selecting slave device; to end the command sequence

	USART_Data("Program Load \n");

	FLASH_Transfer_Cache(s , array);	
}
    1dcc:	0f 93       	push	r16
    1dce:	1f 93       	push	r17
    1dd0:	cf 93       	push	r28
    1dd2:	df 93       	push	r29
    1dd4:	82 b1       	in	r24, 0x02	; 2
    1dd6:	87 7f       	andi	r24, 0xF7	; 247
    1dd8:	82 b9       	out	0x02, r24	; 2
    1dda:	8f e0       	ldi	r24, 0x0F	; 15
    1ddc:	8e bd       	out	0x2e, r24	; 46
    1dde:	0d b4       	in	r0, 0x2d	; 45
    1de0:	07 fe       	sbrs	r0, 7
    1de2:	fd cf       	rjmp	.-6      	; 0x1dde <FLASH_Status+0x12>
    1de4:	8e b5       	in	r24, 0x2e	; 46
    1de6:	80 93 2c 04 	sts	0x042C, r24	; 0x80042c <status>
    1dea:	80 ec       	ldi	r24, 0xC0	; 192
    1dec:	8e bd       	out	0x2e, r24	; 46
    1dee:	0d b4       	in	r0, 0x2d	; 45
    1df0:	07 fe       	sbrs	r0, 7
    1df2:	fd cf       	rjmp	.-6      	; 0x1dee <FLASH_Status+0x22>
    1df4:	8e b5       	in	r24, 0x2e	; 46
    1df6:	80 93 2c 04 	sts	0x042C, r24	; 0x80042c <status>
    1dfa:	1e bc       	out	0x2e, r1	; 46
    1dfc:	0d b4       	in	r0, 0x2d	; 45
    1dfe:	07 fe       	sbrs	r0, 7
    1e00:	fd cf       	rjmp	.-6      	; 0x1dfc <FLASH_Status+0x30>
    1e02:	8e b5       	in	r24, 0x2e	; 46
    1e04:	0b e1       	ldi	r16, 0x1B	; 27
    1e06:	14 e0       	ldi	r17, 0x04	; 4
    1e08:	f8 01       	movw	r30, r16
    1e0a:	80 83       	st	Z, r24
    1e0c:	1f 92       	push	r1
    1e0e:	8f 93       	push	r24
    1e10:	86 eb       	ldi	r24, 0xB6	; 182
    1e12:	93 e0       	ldi	r25, 0x03	; 3
    1e14:	a0 e0       	ldi	r26, 0x00	; 0
    1e16:	af 93       	push	r26
    1e18:	9f 93       	push	r25
    1e1a:	8f 93       	push	r24
    1e1c:	ce ef       	ldi	r28, 0xFE	; 254
    1e1e:	d2 e0       	ldi	r29, 0x02	; 2
    1e20:	df 93       	push	r29
    1e22:	cf 93       	push	r28
    1e24:	0e 94 30 12 	call	0x2460	; 0x2460 <_sprintf_cdnopuxX>
    1e28:	be 01       	movw	r22, r28
    1e2a:	80 e8       	ldi	r24, 0x80	; 128
    1e2c:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
    1e30:	f8 01       	movw	r30, r16
    1e32:	80 81       	ld	r24, Z
    1e34:	2d b7       	in	r18, 0x3d	; 61
    1e36:	3e b7       	in	r19, 0x3e	; 62
    1e38:	29 5f       	subi	r18, 0xF9	; 249
    1e3a:	3f 4f       	sbci	r19, 0xFF	; 255
    1e3c:	0f b6       	in	r0, 0x3f	; 63
    1e3e:	f8 94       	cli
    1e40:	3e bf       	out	0x3e, r19	; 62
    1e42:	0f be       	out	0x3f, r0	; 63
    1e44:	2d bf       	out	0x3d, r18	; 61
    1e46:	80 fd       	sbrc	r24, 0
    1e48:	d8 cf       	rjmp	.-80     	; 0x1dfa <FLASH_Status+0x2e>
    1e4a:	82 b1       	in	r24, 0x02	; 2
    1e4c:	88 60       	ori	r24, 0x08	; 8
    1e4e:	82 b9       	out	0x02, r24	; 2
    1e50:	df 91       	pop	r29
    1e52:	cf 91       	pop	r28
    1e54:	1f 91       	pop	r17
    1e56:	0f 91       	pop	r16
    1e58:	08 95       	ret

Disassembly of section .text.FLASH_Transfer_MainArray:

0000240e <FLASH_Transfer_MainArray>:
	USART_Data("Read from Cache: \n");
}

void FLASH_Transfer_MainArray(void) //new command to transfer data from main array to cache
{
	PORTA &= ~(1 << PA3); //~CS pin set low for selecting slave device
    240e:	82 b1       	in	r24, 0x02	; 2
    2410:	87 7f       	andi	r24, 0xF7	; 247
    2412:	82 b9       	out	0x02, r24	; 2
	
	SPDR = PAGE_READ; //Sending Page_Read Command into SPI Data Register (SPDR)
    2414:	83 e1       	ldi	r24, 0x13	; 19
    2416:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    2418:	0d b4       	in	r0, 0x2d	; 45
    241a:	07 fe       	sbrs	r0, 7
    241c:	fd cf       	rjmp	.-6      	; 0x2418 <FLASH_Transfer_MainArray+0xa>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    241e:	8e b5       	in	r24, 0x2e	; 46
    2420:	80 93 2c 04 	sts	0x042C, r24	; 0x80042c <status>
	
	//FLASH_MainArray_Address(s, array); //determines where to read data to in MainArray
	
	PORTA |= (1 << PA3); //~CS pin set high for de-selecting slave device; to end the command sequence
    2424:	82 b1       	in	r24, 0x02	; 2
    2426:	88 60       	ori	r24, 0x08	; 8
    2428:	82 b9       	out	0x02, r24	; 2
	
	FLASH_Status(); //checks for the status of data transfer from main array to cache from page_read command
    242a:	0e 94 e6 0e 	call	0x1dcc	; 0x1dcc <FLASH_Status>
	
	USART_Data("Page Read \n");
    242e:	66 ef       	ldi	r22, 0xF6	; 246
    2430:	73 e0       	ldi	r23, 0x03	; 3
    2432:	80 e0       	ldi	r24, 0x00	; 0
    2434:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
    2438:	08 95       	ret

Disassembly of section .text.FLASH_Data_Storage:

00001fde <FLASH_Data_Storage>:
	PORTA |= (1 << PA3); //~CS pin set high for de-selecting slave device; to end the command sequence

	USART_Data("Program Load \n");

	FLASH_Transfer_Cache(s , array);	
}
    1fde:	cf 93       	push	r28
    1fe0:	df 93       	push	r29
    1fe2:	ec 01       	movw	r28, r24
    1fe4:	02 97       	sbiw	r24, 0x02	; 2
    1fe6:	d0 f4       	brcc	.+52     	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
    1fe8:	14 c0       	rjmp	.+40     	; 0x2012 <__DATA_REGION_LENGTH__+0x12>
    1fea:	1e bc       	out	0x2e, r1	; 46
    1fec:	0d b4       	in	r0, 0x2d	; 45
    1fee:	07 fe       	sbrs	r0, 7
    1ff0:	fd cf       	rjmp	.-6      	; 0x1fec <FLASH_Data_Storage+0xe>
    1ff2:	2e b5       	in	r18, 0x2e	; 46
    1ff4:	fc 01       	movw	r30, r24
    1ff6:	e3 5e       	subi	r30, 0xE3	; 227
    1ff8:	fc 4f       	sbci	r31, 0xFC	; 252
    1ffa:	20 83       	st	Z, r18
    1ffc:	2e b5       	in	r18, 0x2e	; 46
    1ffe:	2d 30       	cpi	r18, 0x0D	; 13
    2000:	31 f4       	brne	.+12     	; 0x200e <__DATA_REGION_LENGTH__+0xe>
    2002:	60 e1       	ldi	r22, 0x10	; 16
    2004:	74 e0       	ldi	r23, 0x04	; 4
    2006:	80 e0       	ldi	r24, 0x00	; 0
    2008:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
    200c:	07 c0       	rjmp	.+14     	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
    200e:	01 96       	adiw	r24, 0x01	; 1
    2010:	02 c0       	rjmp	.+4      	; 0x2016 <__DATA_REGION_LENGTH__+0x16>
    2012:	80 e0       	ldi	r24, 0x00	; 0
    2014:	90 e0       	ldi	r25, 0x00	; 0
    2016:	8e 3f       	cpi	r24, 0xFE	; 254
    2018:	91 05       	cpc	r25, r1
    201a:	38 f3       	brcs	.-50     	; 0x1fea <FLASH_Data_Storage+0xc>
    201c:	22 97       	sbiw	r28, 0x02	; 2
    201e:	89 f4       	brne	.+34     	; 0x2042 <__DATA_REGION_LENGTH__+0x42>
    2020:	0b c0       	rjmp	.+22     	; 0x2038 <__DATA_REGION_LENGTH__+0x38>
    2022:	1e bc       	out	0x2e, r1	; 46
    2024:	0d b4       	in	r0, 0x2d	; 45
    2026:	07 fe       	sbrs	r0, 7
    2028:	fd cf       	rjmp	.-6      	; 0x2024 <__DATA_REGION_LENGTH__+0x24>
    202a:	2e b5       	in	r18, 0x2e	; 46
    202c:	fc 01       	movw	r30, r24
    202e:	e3 5e       	subi	r30, 0xE3	; 227
    2030:	fc 4f       	sbci	r31, 0xFC	; 252
    2032:	20 83       	st	Z, r18
    2034:	01 96       	adiw	r24, 0x01	; 1
    2036:	02 c0       	rjmp	.+4      	; 0x203c <__DATA_REGION_LENGTH__+0x3c>
    2038:	80 e0       	ldi	r24, 0x00	; 0
    203a:	90 e0       	ldi	r25, 0x00	; 0
    203c:	8e 3f       	cpi	r24, 0xFE	; 254
    203e:	91 05       	cpc	r25, r1
    2040:	80 f3       	brcs	.-32     	; 0x2022 <__DATA_REGION_LENGTH__+0x22>
    2042:	df 91       	pop	r29
    2044:	cf 91       	pop	r28
    2046:	08 95       	ret

Disassembly of section .text.FLASH_Read:

000021ba <FLASH_Read>:
    21ba:	0e 94 07 12 	call	0x240e	; 0x240e <FLASH_Transfer_MainArray>
    21be:	82 b1       	in	r24, 0x02	; 2
    21c0:	87 7f       	andi	r24, 0xF7	; 247
    21c2:	82 b9       	out	0x02, r24	; 2
    21c4:	8b e0       	ldi	r24, 0x0B	; 11
    21c6:	8e bd       	out	0x2e, r24	; 46
    21c8:	0d b4       	in	r0, 0x2d	; 45
    21ca:	07 fe       	sbrs	r0, 7
    21cc:	fd cf       	rjmp	.-6      	; 0x21c8 <FLASH_Read+0xe>
    21ce:	8e b5       	in	r24, 0x2e	; 46
    21d0:	80 93 2c 04 	sts	0x042C, r24	; 0x80042c <status>
    21d4:	1e bc       	out	0x2e, r1	; 46
    21d6:	0d b4       	in	r0, 0x2d	; 45
    21d8:	07 fe       	sbrs	r0, 7
    21da:	fd cf       	rjmp	.-6      	; 0x21d6 <FLASH_Read+0x1c>
    21dc:	8e b5       	in	r24, 0x2e	; 46
    21de:	80 93 2c 04 	sts	0x042C, r24	; 0x80042c <status>
    21e2:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <s>
    21e6:	90 91 21 04 	lds	r25, 0x0421	; 0x800421 <s+0x1>
    21ea:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <FLASH_Data_Storage>
    21ee:	82 b1       	in	r24, 0x02	; 2
    21f0:	88 60       	ori	r24, 0x08	; 8
    21f2:	82 b9       	out	0x02, r24	; 2
    21f4:	60 e2       	ldi	r22, 0x20	; 32
    21f6:	74 e0       	ldi	r23, 0x04	; 4
    21f8:	80 e0       	ldi	r24, 0x00	; 0
    21fa:	0e 94 b7 10 	call	0x216e	; 0x216e <USART_Data>
    21fe:	08 95       	ret

Disassembly of section .text.libgcc:

00002610 <__xload_1>:
    2610:	57 fd       	sbrc	r21, 7
    2612:	03 c0       	rjmp	.+6      	; 0x261a <__xload_1+0xa>
    2614:	5b bf       	out	0x3b, r21	; 59
    2616:	67 91       	elpm	r22, Z+
    2618:	08 95       	ret
    261a:	60 81       	ld	r22, Z
    261c:	08 95       	ret

Disassembly of section .text.__dummy_fini:

0000262c <_fini>:
    262c:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

0000262e <__funcs_on_exit>:
    262e:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00002630 <__simulator_exit>:
    2630:	08 95       	ret

Disassembly of section .text.exit:

0000258e <exit>:
    258e:	ec 01       	movw	r28, r24
    2590:	0e 94 17 13 	call	0x262e	; 0x262e <__funcs_on_exit>
    2594:	0e 94 16 13 	call	0x262c	; 0x262c <_fini>
    2598:	ce 01       	movw	r24, r28
    259a:	0e 94 18 13 	call	0x2630	; 0x2630 <__simulator_exit>
    259e:	ce 01       	movw	r24, r28
    25a0:	0e 94 14 13 	call	0x2628	; 0x2628 <_Exit>

Disassembly of section .text.__wrap_sprintf:

00002460 <_sprintf_cdnopuxX>:
    2460:	a0 e0       	ldi	r26, 0x00	; 0
    2462:	b0 e0       	ldi	r27, 0x00	; 0
    2464:	e6 e3       	ldi	r30, 0x36	; 54
    2466:	f2 e1       	ldi	r31, 0x12	; 18
    2468:	0c 94 ad 11 	jmp	0x235a	; 0x235a <__prologue_saves__+0x20>
    246c:	9e 01       	movw	r18, r28
    246e:	25 5f       	subi	r18, 0xF5	; 245
    2470:	3f 4f       	sbci	r19, 0xFF	; 255
    2472:	48 85       	ldd	r20, Y+8	; 0x08
    2474:	59 85       	ldd	r21, Y+9	; 0x09
    2476:	6a 85       	ldd	r22, Y+10	; 0x0a
    2478:	8e 81       	ldd	r24, Y+6	; 0x06
    247a:	9f 81       	ldd	r25, Y+7	; 0x07
    247c:	0e 94 a4 12 	call	0x2548	; 0x2548 <__vsprintf>
    2480:	e2 e0       	ldi	r30, 0x02	; 2
    2482:	0c 94 e4 11 	jmp	0x23c8	; 0x23c8 <__epilogue_restores__+0x20>

Disassembly of section .text.__fmt_s:

00001884 <__fmt_s>:
    1884:	2f 92       	push	r2
    1886:	3f 92       	push	r3
    1888:	4f 92       	push	r4
    188a:	6f 92       	push	r6
    188c:	7f 92       	push	r7
    188e:	8f 92       	push	r8
    1890:	af 92       	push	r10
    1892:	bf 92       	push	r11
    1894:	cf 92       	push	r12
    1896:	df 92       	push	r13
    1898:	ef 92       	push	r14
    189a:	ff 92       	push	r15
    189c:	0f 93       	push	r16
    189e:	1f 93       	push	r17
    18a0:	cf 93       	push	r28
    18a2:	df 93       	push	r29
    18a4:	cd b7       	in	r28, 0x3d	; 61
    18a6:	de b7       	in	r29, 0x3e	; 62
    18a8:	27 97       	sbiw	r28, 0x07	; 7
    18aa:	0f b6       	in	r0, 0x3f	; 63
    18ac:	f8 94       	cli
    18ae:	de bf       	out	0x3e, r29	; 62
    18b0:	0f be       	out	0x3f, r0	; 63
    18b2:	cd bf       	out	0x3d, r28	; 61
    18b4:	6c 01       	movw	r12, r24
    18b6:	7b 01       	movw	r14, r22
    18b8:	39 01       	movw	r6, r18
    18ba:	84 2e       	mov	r8, r20
    18bc:	98 01       	movw	r18, r16
    18be:	8c e5       	ldi	r24, 0x5C	; 92
    18c0:	28 2e       	mov	r2, r24
    18c2:	84 e0       	ldi	r24, 0x04	; 4
    18c4:	38 2e       	mov	r3, r24
    18c6:	80 e0       	ldi	r24, 0x00	; 0
    18c8:	48 2e       	mov	r4, r24
    18ca:	87 e0       	ldi	r24, 0x07	; 7
    18cc:	f1 01       	movw	r30, r2
    18ce:	ae 01       	movw	r20, r28
    18d0:	4f 5f       	subi	r20, 0xFF	; 255
    18d2:	5f 4f       	sbci	r21, 0xFF	; 255
    18d4:	da 01       	movw	r26, r20
    18d6:	74 2d       	mov	r23, r4
    18d8:	0e 94 96 12 	call	0x252c	; 0x252c <__movmemx_qi>
    18dc:	f7 01       	movw	r30, r14
    18de:	02 81       	ldd	r16, Z+2	; 0x02
    18e0:	13 81       	ldd	r17, Z+3	; 0x03
    18e2:	a4 80       	ldd	r10, Z+4	; 0x04
    18e4:	b5 80       	ldd	r11, Z+5	; 0x05
    18e6:	e0 80       	ld	r14, Z
    18e8:	f1 80       	ldd	r15, Z+1	; 0x01
    18ea:	61 14       	cp	r6, r1
    18ec:	71 04       	cpc	r7, r1
    18ee:	81 04       	cpc	r8, r1
    18f0:	19 f4       	brne	.+6      	; 0x18f8 <__fmt_s+0x74>
    18f2:	3a 01       	movw	r6, r20
    18f4:	f0 e8       	ldi	r31, 0x80	; 128
    18f6:	8f 2e       	mov	r8, r31
    18f8:	21 15       	cp	r18, r1
    18fa:	31 05       	cpc	r19, r1
    18fc:	29 f4       	brne	.+10     	; 0x1908 <__fmt_s+0x84>
    18fe:	88 2d       	mov	r24, r8
    1900:	b3 01       	movw	r22, r6
    1902:	0e 94 55 12 	call	0x24aa	; 0x24aa <strlen>
    1906:	9c 01       	movw	r18, r24
    1908:	17 fd       	sbrc	r17, 7
    190a:	04 c0       	rjmp	.+8      	; 0x1914 <__fmt_s+0x90>
    190c:	02 17       	cp	r16, r18
    190e:	13 07       	cpc	r17, r19
    1910:	08 f4       	brcc	.+2      	; 0x1914 <__fmt_s+0x90>
    1912:	98 01       	movw	r18, r16
    1914:	85 01       	movw	r16, r10
    1916:	68 2d       	mov	r22, r8
    1918:	a3 01       	movw	r20, r6
    191a:	c6 01       	movw	r24, r12
    191c:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__pad>
    1920:	27 96       	adiw	r28, 0x07	; 7
    1922:	0f b6       	in	r0, 0x3f	; 63
    1924:	f8 94       	cli
    1926:	de bf       	out	0x3e, r29	; 62
    1928:	0f be       	out	0x3f, r0	; 63
    192a:	cd bf       	out	0x3d, r28	; 61
    192c:	df 91       	pop	r29
    192e:	cf 91       	pop	r28
    1930:	1f 91       	pop	r17
    1932:	0f 91       	pop	r16
    1934:	ff 90       	pop	r15
    1936:	ef 90       	pop	r14
    1938:	df 90       	pop	r13
    193a:	cf 90       	pop	r12
    193c:	bf 90       	pop	r11
    193e:	af 90       	pop	r10
    1940:	8f 90       	pop	r8
    1942:	7f 90       	pop	r7
    1944:	6f 90       	pop	r6
    1946:	4f 90       	pop	r4
    1948:	3f 90       	pop	r3
    194a:	2f 90       	pop	r2
    194c:	08 95       	ret

Disassembly of section .text.__out:

00002048 <__out>:
    2048:	6f 92       	push	r6
    204a:	7f 92       	push	r7
    204c:	8f 92       	push	r8
    204e:	cf 92       	push	r12
    2050:	df 92       	push	r13
    2052:	ef 92       	push	r14
    2054:	0f 93       	push	r16
    2056:	1f 93       	push	r17
    2058:	cf 93       	push	r28
    205a:	df 93       	push	r29
    205c:	8c 01       	movw	r16, r24
    205e:	6a 01       	movw	r12, r20
    2060:	e6 2e       	mov	r14, r22
    2062:	e9 01       	movw	r28, r18
    2064:	3a 01       	movw	r6, r20
    2066:	86 2e       	mov	r8, r22
    2068:	62 0e       	add	r6, r18
    206a:	73 1e       	adc	r7, r19
    206c:	81 1c       	adc	r8, r1
    206e:	37 fd       	sbrc	r19, 7
    2070:	8a 94       	dec	r8
    2072:	c6 14       	cp	r12, r6
    2074:	d7 04       	cpc	r13, r7
    2076:	e8 04       	cpc	r14, r8
    2078:	81 f0       	breq	.+32     	; 0x209a <__out+0x52>
    207a:	f6 01       	movw	r30, r12
    207c:	5e 2d       	mov	r21, r14
    207e:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
    2082:	86 2f       	mov	r24, r22
    2084:	b8 01       	movw	r22, r16
    2086:	08 2e       	mov	r0, r24
    2088:	00 0c       	add	r0, r0
    208a:	99 0b       	sbc	r25, r25
    208c:	0e 94 9d 0e 	call	0x1d3a	; 0x1d3a <fputc>
    2090:	8f ef       	ldi	r24, 0xFF	; 255
    2092:	c8 1a       	sub	r12, r24
    2094:	d8 0a       	sbc	r13, r24
    2096:	e8 0a       	sbc	r14, r24
    2098:	ec cf       	rjmp	.-40     	; 0x2072 <__out+0x2a>
    209a:	ce 01       	movw	r24, r28
    209c:	df 91       	pop	r29
    209e:	cf 91       	pop	r28
    20a0:	1f 91       	pop	r17
    20a2:	0f 91       	pop	r16
    20a4:	ef 90       	pop	r14
    20a6:	df 90       	pop	r13
    20a8:	cf 90       	pop	r12
    20aa:	8f 90       	pop	r8
    20ac:	7f 90       	pop	r7
    20ae:	6f 90       	pop	r6
    20b0:	08 95       	ret

Disassembly of section .text.__pad:

000015ca <__pad>:
    15ca:	2f 92       	push	r2
    15cc:	3f 92       	push	r3
    15ce:	4f 92       	push	r4
    15d0:	6f 92       	push	r6
    15d2:	7f 92       	push	r7
    15d4:	8f 92       	push	r8
    15d6:	af 92       	push	r10
    15d8:	bf 92       	push	r11
    15da:	cf 92       	push	r12
    15dc:	df 92       	push	r13
    15de:	ef 92       	push	r14
    15e0:	ff 92       	push	r15
    15e2:	0f 93       	push	r16
    15e4:	1f 93       	push	r17
    15e6:	cf 93       	push	r28
    15e8:	df 93       	push	r29
    15ea:	cd b7       	in	r28, 0x3d	; 61
    15ec:	de b7       	in	r29, 0x3e	; 62
    15ee:	66 97       	sbiw	r28, 0x16	; 22
    15f0:	0f b6       	in	r0, 0x3f	; 63
    15f2:	f8 94       	cli
    15f4:	de bf       	out	0x3e, r29	; 62
    15f6:	0f be       	out	0x3f, r0	; 63
    15f8:	cd bf       	out	0x3d, r28	; 61
    15fa:	5c 01       	movw	r10, r24
    15fc:	3a 01       	movw	r6, r20
    15fe:	86 2e       	mov	r8, r22
    1600:	69 01       	movw	r12, r18
    1602:	c7 01       	movw	r24, r14
    1604:	81 70       	andi	r24, 0x01	; 1
    1606:	99 27       	eor	r25, r25
    1608:	9c 8b       	std	Y+20, r25	; 0x14
    160a:	8b 8b       	std	Y+19, r24	; 0x13
    160c:	e0 fc       	sbrc	r14, 0
    160e:	1d c0       	rjmp	.+58     	; 0x164a <__pad+0x80>
    1610:	20 17       	cp	r18, r16
    1612:	31 07       	cpc	r19, r17
    1614:	d4 f4       	brge	.+52     	; 0x164a <__pad+0x80>
    1616:	78 01       	movw	r14, r16
    1618:	ec 18       	sub	r14, r12
    161a:	fd 08       	sbc	r15, r13
    161c:	fe 8a       	std	Y+22, r15	; 0x16
    161e:	ed 8a       	std	Y+21, r14	; 0x15
    1620:	a7 01       	movw	r20, r14
    1622:	91 e1       	ldi	r25, 0x11	; 17
    1624:	e9 16       	cp	r14, r25
    1626:	f1 04       	cpc	r15, r1
    1628:	10 f0       	brcs	.+4      	; 0x162e <__pad+0x64>
    162a:	40 e1       	ldi	r20, 0x10	; 16
    162c:	50 e0       	ldi	r21, 0x00	; 0
    162e:	60 e2       	ldi	r22, 0x20	; 32
    1630:	70 e0       	ldi	r23, 0x00	; 0
    1632:	ce 01       	movw	r24, r28
    1634:	01 96       	adiw	r24, 0x01	; 1
    1636:	9a 8b       	std	Y+18, r25	; 0x12
    1638:	89 8b       	std	Y+17, r24	; 0x11
    163a:	0e 94 d2 12 	call	0x25a4	; 0x25a4 <memset>
    163e:	89 89       	ldd	r24, Y+17	; 0x11
    1640:	9a 89       	ldd	r25, Y+18	; 0x12
    1642:	1c 01       	movw	r2, r24
    1644:	20 e8       	ldi	r18, 0x80	; 128
    1646:	42 2e       	mov	r4, r18
    1648:	0b c0       	rjmp	.+22     	; 0x1660 <__pad+0x96>
    164a:	96 01       	movw	r18, r12
    164c:	68 2d       	mov	r22, r8
    164e:	a3 01       	movw	r20, r6
    1650:	c5 01       	movw	r24, r10
    1652:	0e 94 24 10 	call	0x2048	; 0x2048 <__out>
    1656:	c0 16       	cp	r12, r16
    1658:	d1 06       	cpc	r13, r17
    165a:	ec f2       	brlt	.-70     	; 0x1616 <__pad+0x4c>
    165c:	c6 01       	movw	r24, r12
    165e:	25 c0       	rjmp	.+74     	; 0x16aa <__pad+0xe0>
    1660:	90 e1       	ldi	r25, 0x10	; 16
    1662:	e9 16       	cp	r14, r25
    1664:	f1 04       	cpc	r15, r1
    1666:	58 f0       	brcs	.+22     	; 0x167e <__pad+0xb4>
    1668:	20 e1       	ldi	r18, 0x10	; 16
    166a:	30 e0       	ldi	r19, 0x00	; 0
    166c:	64 2d       	mov	r22, r4
    166e:	a1 01       	movw	r20, r2
    1670:	c5 01       	movw	r24, r10
    1672:	0e 94 24 10 	call	0x2048	; 0x2048 <__out>
    1676:	80 e1       	ldi	r24, 0x10	; 16
    1678:	e8 1a       	sub	r14, r24
    167a:	f1 08       	sbc	r15, r1
    167c:	f1 cf       	rjmp	.-30     	; 0x1660 <__pad+0x96>
    167e:	2d 89       	ldd	r18, Y+21	; 0x15
    1680:	3e 89       	ldd	r19, Y+22	; 0x16
    1682:	2f 70       	andi	r18, 0x0F	; 15
    1684:	33 27       	eor	r19, r19
    1686:	89 89       	ldd	r24, Y+17	; 0x11
    1688:	9a 89       	ldd	r25, Y+18	; 0x12
    168a:	ac 01       	movw	r20, r24
    168c:	60 e8       	ldi	r22, 0x80	; 128
    168e:	c5 01       	movw	r24, r10
    1690:	0e 94 24 10 	call	0x2048	; 0x2048 <__out>
    1694:	8b 89       	ldd	r24, Y+19	; 0x13
    1696:	9c 89       	ldd	r25, Y+20	; 0x14
    1698:	89 2b       	or	r24, r25
    169a:	31 f4       	brne	.+12     	; 0x16a8 <__pad+0xde>
    169c:	96 01       	movw	r18, r12
    169e:	68 2d       	mov	r22, r8
    16a0:	a3 01       	movw	r20, r6
    16a2:	c5 01       	movw	r24, r10
    16a4:	0e 94 24 10 	call	0x2048	; 0x2048 <__out>
    16a8:	c8 01       	movw	r24, r16
    16aa:	66 96       	adiw	r28, 0x16	; 22
    16ac:	0f b6       	in	r0, 0x3f	; 63
    16ae:	f8 94       	cli
    16b0:	de bf       	out	0x3e, r29	; 62
    16b2:	0f be       	out	0x3f, r0	; 63
    16b4:	cd bf       	out	0x3d, r28	; 61
    16b6:	df 91       	pop	r29
    16b8:	cf 91       	pop	r28
    16ba:	1f 91       	pop	r17
    16bc:	0f 91       	pop	r16
    16be:	ff 90       	pop	r15
    16c0:	ef 90       	pop	r14
    16c2:	df 90       	pop	r13
    16c4:	cf 90       	pop	r12
    16c6:	bf 90       	pop	r11
    16c8:	af 90       	pop	r10
    16ca:	8f 90       	pop	r8
    16cc:	7f 90       	pop	r7
    16ce:	6f 90       	pop	r6
    16d0:	4f 90       	pop	r4
    16d2:	3f 90       	pop	r3
    16d4:	2f 90       	pop	r2
    16d6:	08 95       	ret

Disassembly of section .text.__dummy_fmt4:

0000261e <__fmt_a>:
    261e:	80 e0       	ldi	r24, 0x00	; 0
    2620:	90 e0       	ldi	r25, 0x00	; 0
    2622:	08 95       	ret

Disassembly of section .text.__fmt_state:

00001ab4 <__fmt_state>:
    1ab4:	cf 92       	push	r12
    1ab6:	df 92       	push	r13
    1ab8:	ef 92       	push	r14
    1aba:	dc 01       	movw	r26, r24
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	29 2f       	mov	r18, r25
    1ac0:	30 e0       	ldi	r19, 0x00	; 0
    1ac2:	22 0f       	add	r18, r18
    1ac4:	33 1f       	adc	r19, r19
    1ac6:	69 01       	movw	r12, r18
    1ac8:	03 2e       	mov	r0, r19
    1aca:	00 0c       	add	r0, r0
    1acc:	ee 08       	sbc	r14, r14
    1ace:	6e 2d       	mov	r22, r14
    1ad0:	a6 01       	movw	r20, r12
    1ad2:	4d 5c       	subi	r20, 0xCD	; 205
    1ad4:	5b 4f       	sbci	r21, 0xFB	; 251
    1ad6:	6f 4f       	sbci	r22, 0xFF	; 255
    1ad8:	6a 01       	movw	r12, r20
    1ada:	e6 2e       	mov	r14, r22
    1adc:	fa 01       	movw	r30, r20
    1ade:	5e 2d       	mov	r21, r14
    1ae0:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
    1ae4:	86 2f       	mov	r24, r22
    1ae6:	61 11       	cpse	r22, r1
    1ae8:	0e c0       	rjmp	.+28     	; 0x1b06 <__fmt_state+0x52>
    1aea:	2f 5f       	subi	r18, 0xFF	; 255
    1aec:	3f 4f       	sbci	r19, 0xFF	; 255
    1aee:	03 2e       	mov	r0, r19
    1af0:	00 0c       	add	r0, r0
    1af2:	44 0b       	sbc	r20, r20
    1af4:	2d 5c       	subi	r18, 0xCD	; 205
    1af6:	3b 4f       	sbci	r19, 0xFB	; 251
    1af8:	4f 4f       	sbci	r20, 0xFF	; 255
    1afa:	f9 01       	movw	r30, r18
    1afc:	54 2f       	mov	r21, r20
    1afe:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
    1b02:	86 2f       	mov	r24, r22
    1b04:	25 c0       	rjmp	.+74     	; 0x1b50 <__fmt_state+0x9c>
    1b06:	cd 90       	ld	r12, X+
    1b08:	dd 90       	ld	r13, X+
    1b0a:	ec 90       	ld	r14, X
    1b0c:	12 97       	sbiw	r26, 0x02	; 2
    1b0e:	f6 01       	movw	r30, r12
    1b10:	5e 2d       	mov	r21, r14
    1b12:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
    1b16:	86 13       	cpse	r24, r22
    1b18:	16 c0       	rjmp	.+44     	; 0x1b46 <__fmt_state+0x92>
    1b1a:	2f 5f       	subi	r18, 0xFF	; 255
    1b1c:	3f 4f       	sbci	r19, 0xFF	; 255
    1b1e:	03 2e       	mov	r0, r19
    1b20:	00 0c       	add	r0, r0
    1b22:	44 0b       	sbc	r20, r20
    1b24:	2d 5c       	subi	r18, 0xCD	; 205
    1b26:	3b 4f       	sbci	r19, 0xFB	; 251
    1b28:	4f 4f       	sbci	r20, 0xFF	; 255
    1b2a:	f9 01       	movw	r30, r18
    1b2c:	54 2f       	mov	r21, r20
    1b2e:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
    1b32:	96 2f       	mov	r25, r22
    1b34:	5f ef       	ldi	r21, 0xFF	; 255
    1b36:	c5 1a       	sub	r12, r21
    1b38:	d5 0a       	sbc	r13, r21
    1b3a:	e5 0a       	sbc	r14, r21
    1b3c:	cd 92       	st	X+, r12
    1b3e:	dd 92       	st	X+, r13
    1b40:	ec 92       	st	X, r14
    1b42:	12 97       	sbiw	r26, 0x02	; 2
    1b44:	01 c0       	rjmp	.+2      	; 0x1b48 <__fmt_state+0x94>
    1b46:	9f 5f       	subi	r25, 0xFF	; 255
    1b48:	9b 30       	cpi	r25, 0x0B	; 11
    1b4a:	08 f4       	brcc	.+2      	; 0x1b4e <__fmt_state+0x9a>
    1b4c:	b8 cf       	rjmp	.-144    	; 0x1abe <__fmt_state+0xa>
    1b4e:	89 2f       	mov	r24, r25
    1b50:	ef 90       	pop	r14
    1b52:	df 90       	pop	r13
    1b54:	cf 90       	pop	r12
    1b56:	08 95       	ret

Disassembly of section .text.__printf_core:

0000046a <__printf_core>:
 46a:	a3 ea       	ldi	r26, 0xA3	; 163
 46c:	b0 e0       	ldi	r27, 0x00	; 0
 46e:	eb e3       	ldi	r30, 0x3B	; 59
 470:	f2 e0       	ldi	r31, 0x02	; 2
 472:	0c 94 9d 11 	jmp	0x233a	; 0x233a <__prologue_saves__>
 476:	4c 01       	movw	r8, r24
 478:	59 01       	movw	r10, r18
 47a:	c7 56       	subi	r28, 0x67	; 103
 47c:	df 4f       	sbci	r29, 0xFF	; 255
 47e:	48 83       	st	Y, r20
 480:	59 83       	std	Y+1, r21	; 0x01
 482:	6a 83       	std	Y+2, r22	; 0x02
 484:	c9 59       	subi	r28, 0x99	; 153
 486:	d0 40       	sbci	r29, 0x00	; 0
 488:	21 2c       	mov	r2, r1
 48a:	31 2c       	mov	r3, r1
 48c:	6e 01       	movw	r12, r28
 48e:	2b e8       	ldi	r18, 0x8B	; 139
 490:	c2 0e       	add	r12, r18
 492:	d1 1c       	adc	r13, r1
 494:	85 e2       	ldi	r24, 0x25	; 37
 496:	78 2e       	mov	r7, r24
 498:	26 01       	movw	r4, r12
 49a:	30 e8       	ldi	r19, 0x80	; 128
 49c:	63 2e       	mov	r6, r19
 49e:	ce 01       	movw	r24, r28
 4a0:	8d 56       	subi	r24, 0x6D	; 109
 4a2:	9f 4f       	sbci	r25, 0xFF	; 255
 4a4:	c4 56       	subi	r28, 0x64	; 100
 4a6:	df 4f       	sbci	r29, 0xFF	; 255
 4a8:	99 83       	std	Y+1, r25	; 0x01
 4aa:	88 83       	st	Y, r24
 4ac:	cc 59       	subi	r28, 0x9C	; 156
 4ae:	d0 40       	sbci	r29, 0x00	; 0
 4b0:	9c 01       	movw	r18, r24
 4b2:	40 e8       	ldi	r20, 0x80	; 128
 4b4:	cf 55       	subi	r28, 0x5F	; 95
 4b6:	df 4f       	sbci	r29, 0xFF	; 255
 4b8:	28 83       	st	Y, r18
 4ba:	39 83       	std	Y+1, r19	; 0x01
 4bc:	4a 83       	std	Y+2, r20	; 0x02
 4be:	c1 5a       	subi	r28, 0xA1	; 161
 4c0:	d0 40       	sbci	r29, 0x00	; 0
 4c2:	c7 56       	subi	r28, 0x67	; 103
 4c4:	df 4f       	sbci	r29, 0xFF	; 255
 4c6:	48 81       	ld	r20, Y
 4c8:	c9 59       	subi	r28, 0x99	; 153
 4ca:	d0 40       	sbci	r29, 0x00	; 0
 4cc:	c6 56       	subi	r28, 0x66	; 102
 4ce:	df 4f       	sbci	r29, 0xFF	; 255
 4d0:	b8 81       	ld	r27, Y
 4d2:	ca 59       	subi	r28, 0x9A	; 154
 4d4:	d0 40       	sbci	r29, 0x00	; 0
 4d6:	c5 56       	subi	r28, 0x65	; 101
 4d8:	df 4f       	sbci	r29, 0xFF	; 255
 4da:	78 81       	ld	r23, Y
 4dc:	cb 59       	subi	r28, 0x9B	; 155
 4de:	d0 40       	sbci	r29, 0x00	; 0
 4e0:	e4 2f       	mov	r30, r20
 4e2:	fb 2f       	mov	r31, r27
 4e4:	57 2f       	mov	r21, r23
 4e6:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
 4ea:	66 23       	and	r22, r22
 4ec:	09 f4       	brne	.+2      	; 0x4f0 <__printf_core+0x86>
 4ee:	d0 c3       	rjmp	.+1952   	; 0xc90 <__printf_core+0x826>
 4f0:	cf 57       	subi	r28, 0x7F	; 127
 4f2:	df 4f       	sbci	r29, 0xFF	; 255
 4f4:	19 82       	std	Y+1, r1	; 0x01
 4f6:	18 82       	st	Y, r1
 4f8:	c1 58       	subi	r28, 0x81	; 129
 4fa:	d0 40       	sbci	r29, 0x00	; 0
 4fc:	8f ef       	ldi	r24, 0xFF	; 255
 4fe:	9f ef       	ldi	r25, 0xFF	; 255
 500:	cd 57       	subi	r28, 0x7D	; 125
 502:	df 4f       	sbci	r29, 0xFF	; 255
 504:	99 83       	std	Y+1, r25	; 0x01
 506:	88 83       	st	Y, r24
 508:	c3 58       	subi	r28, 0x83	; 131
 50a:	d0 40       	sbci	r29, 0x00	; 0
 50c:	cb 57       	subi	r28, 0x7B	; 123
 50e:	df 4f       	sbci	r29, 0xFF	; 255
 510:	19 82       	std	Y+1, r1	; 0x01
 512:	18 82       	st	Y, r1
 514:	c5 58       	subi	r28, 0x85	; 133
 516:	d0 40       	sbci	r29, 0x00	; 0
 518:	e1 e0       	ldi	r30, 0x01	; 1
 51a:	f0 e0       	ldi	r31, 0x00	; 0
 51c:	ec 0f       	add	r30, r28
 51e:	fd 1f       	adc	r31, r29
 520:	c9 57       	subi	r28, 0x79	; 121
 522:	df 4f       	sbci	r29, 0xFF	; 255
 524:	f9 83       	std	Y+1, r31	; 0x01
 526:	e8 83       	st	Y, r30
 528:	c7 58       	subi	r28, 0x87	; 135
 52a:	d0 40       	sbci	r29, 0x00	; 0
 52c:	20 e8       	ldi	r18, 0x80	; 128
 52e:	30 e0       	ldi	r19, 0x00	; 0
 530:	c7 57       	subi	r28, 0x77	; 119
 532:	df 4f       	sbci	r29, 0xFF	; 255
 534:	39 83       	std	Y+1, r19	; 0x01
 536:	28 83       	st	Y, r18
 538:	c9 58       	subi	r28, 0x89	; 137
 53a:	d0 40       	sbci	r29, 0x00	; 0
 53c:	84 2f       	mov	r24, r20
 53e:	9b 2f       	mov	r25, r27
 540:	a7 2f       	mov	r26, r23
 542:	e1 2c       	mov	r14, r1
 544:	f1 2c       	mov	r15, r1
 546:	fc 01       	movw	r30, r24
 548:	5a 2f       	mov	r21, r26
 54a:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
 54e:	61 11       	cpse	r22, r1
 550:	1d c0       	rjmp	.+58     	; 0x58c <__printf_core+0x122>
 552:	e1 14       	cp	r14, r1
 554:	f1 04       	cpc	r15, r1
 556:	11 f1       	breq	.+68     	; 0x59c <__printf_core+0x132>
 558:	97 01       	movw	r18, r14
 55a:	5b 2f       	mov	r21, r27
 55c:	67 2f       	mov	r22, r23
 55e:	c4 01       	movw	r24, r8
 560:	0e 94 24 10 	call	0x2048	; 0x2048 <__out>
 564:	c7 56       	subi	r28, 0x67	; 103
 566:	df 4f       	sbci	r29, 0xFF	; 255
 568:	88 81       	ld	r24, Y
 56a:	99 81       	ldd	r25, Y+1	; 0x01
 56c:	aa 81       	ldd	r26, Y+2	; 0x02
 56e:	c9 59       	subi	r28, 0x99	; 153
 570:	d0 40       	sbci	r29, 0x00	; 0
 572:	8e 0d       	add	r24, r14
 574:	9f 1d       	adc	r25, r15
 576:	a1 1d       	adc	r26, r1
 578:	f7 fc       	sbrc	r15, 7
 57a:	aa 95       	dec	r26
 57c:	c7 56       	subi	r28, 0x67	; 103
 57e:	df 4f       	sbci	r29, 0xFF	; 255
 580:	88 83       	st	Y, r24
 582:	99 83       	std	Y+1, r25	; 0x01
 584:	aa 83       	std	Y+2, r26	; 0x02
 586:	c9 59       	subi	r28, 0x99	; 153
 588:	d0 40       	sbci	r29, 0x00	; 0
 58a:	08 c0       	rjmp	.+16     	; 0x59c <__printf_core+0x132>
 58c:	01 96       	adiw	r24, 0x01	; 1
 58e:	a1 1d       	adc	r26, r1
 590:	65 32       	cpi	r22, 0x25	; 37
 592:	f9 f2       	breq	.-66     	; 0x552 <__printf_core+0xe8>
 594:	3f ef       	ldi	r19, 0xFF	; 255
 596:	e3 1a       	sub	r14, r19
 598:	f3 0a       	sbc	r15, r19
 59a:	d5 cf       	rjmp	.-86     	; 0x546 <__printf_core+0xdc>
 59c:	c7 56       	subi	r28, 0x67	; 103
 59e:	df 4f       	sbci	r29, 0xFF	; 255
 5a0:	88 81       	ld	r24, Y
 5a2:	99 81       	ldd	r25, Y+1	; 0x01
 5a4:	aa 81       	ldd	r26, Y+2	; 0x02
 5a6:	c9 59       	subi	r28, 0x99	; 153
 5a8:	d0 40       	sbci	r29, 0x00	; 0
 5aa:	fc 01       	movw	r30, r24
 5ac:	5a 2f       	mov	r21, r26
 5ae:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
 5b2:	65 32       	cpi	r22, 0x25	; 37
 5b4:	09 f0       	breq	.+2      	; 0x5b8 <__printf_core+0x14e>
 5b6:	5a c3       	rjmp	.+1716   	; 0xc6c <__printf_core+0x802>
 5b8:	9c 01       	movw	r18, r24
 5ba:	4a 2f       	mov	r20, r26
 5bc:	2f 5f       	subi	r18, 0xFF	; 255
 5be:	3f 4f       	sbci	r19, 0xFF	; 255
 5c0:	4f 4f       	sbci	r20, 0xFF	; 255
 5c2:	c2 56       	subi	r28, 0x62	; 98
 5c4:	df 4f       	sbci	r29, 0xFF	; 255
 5c6:	28 83       	st	Y, r18
 5c8:	39 83       	std	Y+1, r19	; 0x01
 5ca:	4a 83       	std	Y+2, r20	; 0x02
 5cc:	ce 59       	subi	r28, 0x9E	; 158
 5ce:	d0 40       	sbci	r29, 0x00	; 0
 5d0:	c7 56       	subi	r28, 0x67	; 103
 5d2:	df 4f       	sbci	r29, 0xFF	; 255
 5d4:	28 83       	st	Y, r18
 5d6:	39 83       	std	Y+1, r19	; 0x01
 5d8:	4a 83       	std	Y+2, r20	; 0x02
 5da:	c9 59       	subi	r28, 0x99	; 153
 5dc:	d0 40       	sbci	r29, 0x00	; 0
 5de:	c7 56       	subi	r28, 0x67	; 103
 5e0:	df 4f       	sbci	r29, 0xFF	; 255
 5e2:	88 81       	ld	r24, Y
 5e4:	99 81       	ldd	r25, Y+1	; 0x01
 5e6:	aa 81       	ldd	r26, Y+2	; 0x02
 5e8:	c9 59       	subi	r28, 0x99	; 153
 5ea:	d0 40       	sbci	r29, 0x00	; 0
 5ec:	fc 01       	movw	r30, r24
 5ee:	5a 2f       	mov	r21, r26
 5f0:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
 5f4:	6b 32       	cpi	r22, 0x2B	; 43
 5f6:	41 f4       	brne	.+16     	; 0x608 <__printf_core+0x19e>
 5f8:	cf 57       	subi	r28, 0x7F	; 127
 5fa:	df 4f       	sbci	r29, 0xFF	; 255
 5fc:	28 81       	ld	r18, Y
 5fe:	39 81       	ldd	r19, Y+1	; 0x01
 600:	c1 58       	subi	r28, 0x81	; 129
 602:	d0 40       	sbci	r29, 0x00	; 0
 604:	24 60       	ori	r18, 0x04	; 4
 606:	0b c0       	rjmp	.+22     	; 0x61e <__printf_core+0x1b4>
 608:	6c 32       	cpi	r22, 0x2C	; 44
 60a:	cc f0       	brlt	.+50     	; 0x63e <__printf_core+0x1d4>
 60c:	6d 32       	cpi	r22, 0x2D	; 45
 60e:	59 f5       	brne	.+86     	; 0x666 <__printf_core+0x1fc>
 610:	cf 57       	subi	r28, 0x7F	; 127
 612:	df 4f       	sbci	r29, 0xFF	; 255
 614:	28 81       	ld	r18, Y
 616:	39 81       	ldd	r19, Y+1	; 0x01
 618:	c1 58       	subi	r28, 0x81	; 129
 61a:	d0 40       	sbci	r29, 0x00	; 0
 61c:	21 60       	ori	r18, 0x01	; 1
 61e:	cf 57       	subi	r28, 0x7F	; 127
 620:	df 4f       	sbci	r29, 0xFF	; 255
 622:	39 83       	std	Y+1, r19	; 0x01
 624:	28 83       	st	Y, r18
 626:	c1 58       	subi	r28, 0x81	; 129
 628:	d0 40       	sbci	r29, 0x00	; 0
 62a:	01 96       	adiw	r24, 0x01	; 1
 62c:	a1 1d       	adc	r26, r1
 62e:	c7 56       	subi	r28, 0x67	; 103
 630:	df 4f       	sbci	r29, 0xFF	; 255
 632:	88 83       	st	Y, r24
 634:	99 83       	std	Y+1, r25	; 0x01
 636:	aa 83       	std	Y+2, r26	; 0x02
 638:	c9 59       	subi	r28, 0x99	; 153
 63a:	d0 40       	sbci	r29, 0x00	; 0
 63c:	d0 cf       	rjmp	.-96     	; 0x5de <__printf_core+0x174>
 63e:	60 32       	cpi	r22, 0x20	; 32
 640:	41 f4       	brne	.+16     	; 0x652 <__printf_core+0x1e8>
 642:	cf 57       	subi	r28, 0x7F	; 127
 644:	df 4f       	sbci	r29, 0xFF	; 255
 646:	28 81       	ld	r18, Y
 648:	39 81       	ldd	r19, Y+1	; 0x01
 64a:	c1 58       	subi	r28, 0x81	; 129
 64c:	d0 40       	sbci	r29, 0x00	; 0
 64e:	28 60       	ori	r18, 0x08	; 8
 650:	e6 cf       	rjmp	.-52     	; 0x61e <__printf_core+0x1b4>
 652:	63 32       	cpi	r22, 0x23	; 35
 654:	91 f4       	brne	.+36     	; 0x67a <__printf_core+0x210>
 656:	cf 57       	subi	r28, 0x7F	; 127
 658:	df 4f       	sbci	r29, 0xFF	; 255
 65a:	28 81       	ld	r18, Y
 65c:	39 81       	ldd	r19, Y+1	; 0x01
 65e:	c1 58       	subi	r28, 0x81	; 129
 660:	d0 40       	sbci	r29, 0x00	; 0
 662:	20 61       	ori	r18, 0x10	; 16
 664:	dc cf       	rjmp	.-72     	; 0x61e <__printf_core+0x1b4>
 666:	60 33       	cpi	r22, 0x30	; 48
 668:	41 f4       	brne	.+16     	; 0x67a <__printf_core+0x210>
 66a:	cf 57       	subi	r28, 0x7F	; 127
 66c:	df 4f       	sbci	r29, 0xFF	; 255
 66e:	28 81       	ld	r18, Y
 670:	39 81       	ldd	r19, Y+1	; 0x01
 672:	c1 58       	subi	r28, 0x81	; 129
 674:	d0 40       	sbci	r29, 0x00	; 0
 676:	22 60       	ori	r18, 0x02	; 2
 678:	d2 cf       	rjmp	.-92     	; 0x61e <__printf_core+0x1b4>
 67a:	6a 32       	cpi	r22, 0x2A	; 42
 67c:	99 f5       	brne	.+102    	; 0x6e4 <__printf_core+0x27a>
 67e:	01 96       	adiw	r24, 0x01	; 1
 680:	a1 1d       	adc	r26, r1
 682:	c7 56       	subi	r28, 0x67	; 103
 684:	df 4f       	sbci	r29, 0xFF	; 255
 686:	88 83       	st	Y, r24
 688:	99 83       	std	Y+1, r25	; 0x01
 68a:	aa 83       	std	Y+2, r26	; 0x02
 68c:	c9 59       	subi	r28, 0x99	; 153
 68e:	d0 40       	sbci	r29, 0x00	; 0
 690:	d5 01       	movw	r26, r10
 692:	ed 91       	ld	r30, X+
 694:	fc 91       	ld	r31, X
 696:	11 97       	sbiw	r26, 0x01	; 1
 698:	cf 01       	movw	r24, r30
 69a:	02 96       	adiw	r24, 0x02	; 2
 69c:	8d 93       	st	X+, r24
 69e:	9c 93       	st	X, r25
 6a0:	80 81       	ld	r24, Z
 6a2:	91 81       	ldd	r25, Z+1	; 0x01
 6a4:	cb 57       	subi	r28, 0x7B	; 123
 6a6:	df 4f       	sbci	r29, 0xFF	; 255
 6a8:	99 83       	std	Y+1, r25	; 0x01
 6aa:	88 83       	st	Y, r24
 6ac:	c5 58       	subi	r28, 0x85	; 133
 6ae:	d0 40       	sbci	r29, 0x00	; 0
 6b0:	97 ff       	sbrs	r25, 7
 6b2:	3f c0       	rjmp	.+126    	; 0x732 <__printf_core+0x2c8>
 6b4:	cf 57       	subi	r28, 0x7F	; 127
 6b6:	df 4f       	sbci	r29, 0xFF	; 255
 6b8:	28 81       	ld	r18, Y
 6ba:	39 81       	ldd	r19, Y+1	; 0x01
 6bc:	c1 58       	subi	r28, 0x81	; 129
 6be:	d0 40       	sbci	r29, 0x00	; 0
 6c0:	b1 e0       	ldi	r27, 0x01	; 1
 6c2:	2b 27       	eor	r18, r27
 6c4:	cf 57       	subi	r28, 0x7F	; 127
 6c6:	df 4f       	sbci	r29, 0xFF	; 255
 6c8:	39 83       	std	Y+1, r19	; 0x01
 6ca:	28 83       	st	Y, r18
 6cc:	c1 58       	subi	r28, 0x81	; 129
 6ce:	d0 40       	sbci	r29, 0x00	; 0
 6d0:	91 95       	neg	r25
 6d2:	81 95       	neg	r24
 6d4:	91 09       	sbc	r25, r1
 6d6:	cb 57       	subi	r28, 0x7B	; 123
 6d8:	df 4f       	sbci	r29, 0xFF	; 255
 6da:	99 83       	std	Y+1, r25	; 0x01
 6dc:	88 83       	st	Y, r24
 6de:	c5 58       	subi	r28, 0x85	; 133
 6e0:	d0 40       	sbci	r29, 0x00	; 0
 6e2:	27 c0       	rjmp	.+78     	; 0x732 <__printf_core+0x2c8>
 6e4:	bc 01       	movw	r22, r24
 6e6:	8a 2f       	mov	r24, r26
 6e8:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <atoi>
 6ec:	cb 57       	subi	r28, 0x7B	; 123
 6ee:	df 4f       	sbci	r29, 0xFF	; 255
 6f0:	99 83       	std	Y+1, r25	; 0x01
 6f2:	88 83       	st	Y, r24
 6f4:	c5 58       	subi	r28, 0x85	; 133
 6f6:	d0 40       	sbci	r29, 0x00	; 0
 6f8:	c7 56       	subi	r28, 0x67	; 103
 6fa:	df 4f       	sbci	r29, 0xFF	; 255
 6fc:	88 81       	ld	r24, Y
 6fe:	99 81       	ldd	r25, Y+1	; 0x01
 700:	aa 81       	ldd	r26, Y+2	; 0x02
 702:	c9 59       	subi	r28, 0x99	; 153
 704:	d0 40       	sbci	r29, 0x00	; 0
 706:	fc 01       	movw	r30, r24
 708:	5a 2f       	mov	r21, r26
 70a:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
 70e:	06 2e       	mov	r0, r22
 710:	00 0c       	add	r0, r0
 712:	77 0b       	sbc	r23, r23
 714:	60 53       	subi	r22, 0x30	; 48
 716:	71 09       	sbc	r23, r1
 718:	6a 30       	cpi	r22, 0x0A	; 10
 71a:	71 05       	cpc	r23, r1
 71c:	50 f4       	brcc	.+20     	; 0x732 <__printf_core+0x2c8>
 71e:	01 96       	adiw	r24, 0x01	; 1
 720:	a1 1d       	adc	r26, r1
 722:	c7 56       	subi	r28, 0x67	; 103
 724:	df 4f       	sbci	r29, 0xFF	; 255
 726:	88 83       	st	Y, r24
 728:	99 83       	std	Y+1, r25	; 0x01
 72a:	aa 83       	std	Y+2, r26	; 0x02
 72c:	c9 59       	subi	r28, 0x99	; 153
 72e:	d0 40       	sbci	r29, 0x00	; 0
 730:	e3 cf       	rjmp	.-58     	; 0x6f8 <__printf_core+0x28e>
 732:	cf 57       	subi	r28, 0x7F	; 127
 734:	df 4f       	sbci	r29, 0xFF	; 255
 736:	88 81       	ld	r24, Y
 738:	99 81       	ldd	r25, Y+1	; 0x01
 73a:	c1 58       	subi	r28, 0x81	; 129
 73c:	d0 40       	sbci	r29, 0x00	; 0
 73e:	80 ff       	sbrs	r24, 0
 740:	07 c0       	rjmp	.+14     	; 0x750 <__printf_core+0x2e6>
 742:	8d 7f       	andi	r24, 0xFD	; 253
 744:	cf 57       	subi	r28, 0x7F	; 127
 746:	df 4f       	sbci	r29, 0xFF	; 255
 748:	99 83       	std	Y+1, r25	; 0x01
 74a:	88 83       	st	Y, r24
 74c:	c1 58       	subi	r28, 0x81	; 129
 74e:	d0 40       	sbci	r29, 0x00	; 0
 750:	c7 56       	subi	r28, 0x67	; 103
 752:	df 4f       	sbci	r29, 0xFF	; 255
 754:	88 81       	ld	r24, Y
 756:	99 81       	ldd	r25, Y+1	; 0x01
 758:	aa 81       	ldd	r26, Y+2	; 0x02
 75a:	c9 59       	subi	r28, 0x99	; 153
 75c:	d0 40       	sbci	r29, 0x00	; 0
 75e:	fc 01       	movw	r30, r24
 760:	5a 2f       	mov	r21, r26
 762:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
 766:	6e 32       	cpi	r22, 0x2E	; 46
 768:	09 f0       	breq	.+2      	; 0x76c <__printf_core+0x302>
 76a:	59 c0       	rjmp	.+178    	; 0x81e <__printf_core+0x3b4>
 76c:	cd 57       	subi	r28, 0x7D	; 125
 76e:	df 4f       	sbci	r29, 0xFF	; 255
 770:	19 82       	std	Y+1, r1	; 0x01
 772:	18 82       	st	Y, r1
 774:	c3 58       	subi	r28, 0x83	; 131
 776:	d0 40       	sbci	r29, 0x00	; 0
 778:	9c 01       	movw	r18, r24
 77a:	4a 2f       	mov	r20, r26
 77c:	2f 5f       	subi	r18, 0xFF	; 255
 77e:	3f 4f       	sbci	r19, 0xFF	; 255
 780:	4f 4f       	sbci	r20, 0xFF	; 255
 782:	c7 56       	subi	r28, 0x67	; 103
 784:	df 4f       	sbci	r29, 0xFF	; 255
 786:	28 83       	st	Y, r18
 788:	39 83       	std	Y+1, r19	; 0x01
 78a:	4a 83       	std	Y+2, r20	; 0x02
 78c:	c9 59       	subi	r28, 0x99	; 153
 78e:	d0 40       	sbci	r29, 0x00	; 0
 790:	f9 01       	movw	r30, r18
 792:	54 2f       	mov	r21, r20
 794:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
 798:	6a 32       	cpi	r22, 0x2A	; 42
 79a:	d1 f4       	brne	.+52     	; 0x7d0 <__printf_core+0x366>
 79c:	02 96       	adiw	r24, 0x02	; 2
 79e:	a1 1d       	adc	r26, r1
 7a0:	c7 56       	subi	r28, 0x67	; 103
 7a2:	df 4f       	sbci	r29, 0xFF	; 255
 7a4:	88 83       	st	Y, r24
 7a6:	99 83       	std	Y+1, r25	; 0x01
 7a8:	aa 83       	std	Y+2, r26	; 0x02
 7aa:	c9 59       	subi	r28, 0x99	; 153
 7ac:	d0 40       	sbci	r29, 0x00	; 0
 7ae:	d5 01       	movw	r26, r10
 7b0:	ed 91       	ld	r30, X+
 7b2:	fc 91       	ld	r31, X
 7b4:	11 97       	sbiw	r26, 0x01	; 1
 7b6:	cf 01       	movw	r24, r30
 7b8:	02 96       	adiw	r24, 0x02	; 2
 7ba:	8d 93       	st	X+, r24
 7bc:	9c 93       	st	X, r25
 7be:	80 81       	ld	r24, Z
 7c0:	91 81       	ldd	r25, Z+1	; 0x01
 7c2:	cd 57       	subi	r28, 0x7D	; 125
 7c4:	df 4f       	sbci	r29, 0xFF	; 255
 7c6:	99 83       	std	Y+1, r25	; 0x01
 7c8:	88 83       	st	Y, r24
 7ca:	c3 58       	subi	r28, 0x83	; 131
 7cc:	d0 40       	sbci	r29, 0x00	; 0
 7ce:	27 c0       	rjmp	.+78     	; 0x81e <__printf_core+0x3b4>
 7d0:	84 2f       	mov	r24, r20
 7d2:	b9 01       	movw	r22, r18
 7d4:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <atoi>
 7d8:	cd 57       	subi	r28, 0x7D	; 125
 7da:	df 4f       	sbci	r29, 0xFF	; 255
 7dc:	99 83       	std	Y+1, r25	; 0x01
 7de:	88 83       	st	Y, r24
 7e0:	c3 58       	subi	r28, 0x83	; 131
 7e2:	d0 40       	sbci	r29, 0x00	; 0
 7e4:	c7 56       	subi	r28, 0x67	; 103
 7e6:	df 4f       	sbci	r29, 0xFF	; 255
 7e8:	88 81       	ld	r24, Y
 7ea:	99 81       	ldd	r25, Y+1	; 0x01
 7ec:	aa 81       	ldd	r26, Y+2	; 0x02
 7ee:	c9 59       	subi	r28, 0x99	; 153
 7f0:	d0 40       	sbci	r29, 0x00	; 0
 7f2:	fc 01       	movw	r30, r24
 7f4:	5a 2f       	mov	r21, r26
 7f6:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
 7fa:	06 2e       	mov	r0, r22
 7fc:	00 0c       	add	r0, r0
 7fe:	77 0b       	sbc	r23, r23
 800:	60 53       	subi	r22, 0x30	; 48
 802:	71 09       	sbc	r23, r1
 804:	6a 30       	cpi	r22, 0x0A	; 10
 806:	71 05       	cpc	r23, r1
 808:	50 f4       	brcc	.+20     	; 0x81e <__printf_core+0x3b4>
 80a:	01 96       	adiw	r24, 0x01	; 1
 80c:	a1 1d       	adc	r26, r1
 80e:	c7 56       	subi	r28, 0x67	; 103
 810:	df 4f       	sbci	r29, 0xFF	; 255
 812:	88 83       	st	Y, r24
 814:	99 83       	std	Y+1, r25	; 0x01
 816:	aa 83       	std	Y+2, r26	; 0x02
 818:	c9 59       	subi	r28, 0x99	; 153
 81a:	d0 40       	sbci	r29, 0x00	; 0
 81c:	e3 cf       	rjmp	.-58     	; 0x7e4 <__printf_core+0x37a>
 81e:	ce 01       	movw	r24, r28
 820:	87 56       	subi	r24, 0x67	; 103
 822:	9f 4f       	sbci	r25, 0xFF	; 255
 824:	0e 94 5a 0d 	call	0x1ab4	; 0x1ab4 <__fmt_state>
 828:	18 2f       	mov	r17, r24
 82a:	c7 56       	subi	r28, 0x67	; 103
 82c:	df 4f       	sbci	r29, 0xFF	; 255
 82e:	98 81       	ld	r25, Y
 830:	c9 59       	subi	r28, 0x99	; 153
 832:	d0 40       	sbci	r29, 0x00	; 0
 834:	c6 56       	subi	r28, 0x66	; 102
 836:	df 4f       	sbci	r29, 0xFF	; 255
 838:	88 81       	ld	r24, Y
 83a:	ca 59       	subi	r28, 0x9A	; 154
 83c:	d0 40       	sbci	r29, 0x00	; 0
 83e:	c5 56       	subi	r28, 0x65	; 101
 840:	df 4f       	sbci	r29, 0xFF	; 255
 842:	58 81       	ld	r21, Y
 844:	cb 59       	subi	r28, 0x9B	; 155
 846:	d0 40       	sbci	r29, 0x00	; 0
 848:	e9 2f       	mov	r30, r25
 84a:	f8 2f       	mov	r31, r24
 84c:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
 850:	86 2f       	mov	r24, r22
 852:	66 0f       	add	r22, r22
 854:	99 0b       	sbc	r25, r25
 856:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <tolower>
 85a:	89 36       	cpi	r24, 0x69	; 105
 85c:	91 05       	cpc	r25, r1
 85e:	09 f4       	brne	.+2      	; 0x862 <__printf_core+0x3f8>
 860:	5b c0       	rjmp	.+182    	; 0x918 <__printf_core+0x4ae>
 862:	b4 f4       	brge	.+44     	; 0x890 <__printf_core+0x426>
 864:	83 36       	cpi	r24, 0x63	; 99
 866:	91 05       	cpc	r25, r1
 868:	09 f4       	brne	.+2      	; 0x86c <__printf_core+0x402>
 86a:	69 c1       	rjmp	.+722    	; 0xb3e <__printf_core+0x6d4>
 86c:	44 f4       	brge	.+16     	; 0x87e <__printf_core+0x414>
 86e:	85 32       	cpi	r24, 0x25	; 37
 870:	91 05       	cpc	r25, r1
 872:	09 f4       	brne	.+2      	; 0x876 <__printf_core+0x40c>
 874:	a4 c1       	rjmp	.+840    	; 0xbbe <__printf_core+0x754>
 876:	81 36       	cpi	r24, 0x61	; 97
 878:	91 05       	cpc	r25, r1
 87a:	29 f1       	breq	.+74     	; 0x8c6 <__printf_core+0x45c>
 87c:	b6 c1       	rjmp	.+876    	; 0xbea <__printf_core+0x780>
 87e:	84 36       	cpi	r24, 0x64	; 100
 880:	91 05       	cpc	r25, r1
 882:	09 f4       	brne	.+2      	; 0x886 <__printf_core+0x41c>
 884:	49 c0       	rjmp	.+146    	; 0x918 <__printf_core+0x4ae>
 886:	88 36       	cpi	r24, 0x68	; 104
 888:	91 05       	cpc	r25, r1
 88a:	0c f4       	brge	.+2      	; 0x88e <__printf_core+0x424>
 88c:	2f c1       	rjmp	.+606    	; 0xaec <__printf_core+0x682>
 88e:	ad c1       	rjmp	.+858    	; 0xbea <__printf_core+0x780>
 890:	80 37       	cpi	r24, 0x70	; 112
 892:	91 05       	cpc	r25, r1
 894:	09 f4       	brne	.+2      	; 0x898 <__printf_core+0x42e>
 896:	cd c0       	rjmp	.+410    	; 0xa32 <__printf_core+0x5c8>
 898:	4c f4       	brge	.+18     	; 0x8ac <__printf_core+0x442>
 89a:	8e 36       	cpi	r24, 0x6E	; 110
 89c:	91 05       	cpc	r25, r1
 89e:	09 f4       	brne	.+2      	; 0x8a2 <__printf_core+0x438>
 8a0:	1b c1       	rjmp	.+566    	; 0xad8 <__printf_core+0x66e>
 8a2:	8f 36       	cpi	r24, 0x6F	; 111
 8a4:	91 05       	cpc	r25, r1
 8a6:	09 f4       	brne	.+2      	; 0x8aa <__printf_core+0x440>
 8a8:	7d c0       	rjmp	.+250    	; 0x9a4 <__printf_core+0x53a>
 8aa:	9f c1       	rjmp	.+830    	; 0xbea <__printf_core+0x780>
 8ac:	85 37       	cpi	r24, 0x75	; 117
 8ae:	91 05       	cpc	r25, r1
 8b0:	09 f4       	brne	.+2      	; 0x8b4 <__printf_core+0x44a>
 8b2:	55 c0       	rjmp	.+170    	; 0x95e <__printf_core+0x4f4>
 8b4:	88 37       	cpi	r24, 0x78	; 120
 8b6:	91 05       	cpc	r25, r1
 8b8:	09 f4       	brne	.+2      	; 0x8bc <__printf_core+0x452>
 8ba:	97 c0       	rjmp	.+302    	; 0x9ea <__printf_core+0x580>
 8bc:	83 37       	cpi	r24, 0x73	; 115
 8be:	91 05       	cpc	r25, r1
 8c0:	09 f0       	breq	.+2      	; 0x8c4 <__printf_core+0x45a>
 8c2:	93 c1       	rjmp	.+806    	; 0xbea <__printf_core+0x780>
 8c4:	5b c1       	rjmp	.+694    	; 0xb7c <__printf_core+0x712>
 8c6:	61 2f       	mov	r22, r17
 8c8:	70 e0       	ldi	r23, 0x00	; 0
 8ca:	a5 01       	movw	r20, r10
 8cc:	c6 01       	movw	r24, r12
 8ce:	0e 94 43 11 	call	0x2286	; 0x2286 <__pop_float>
 8d2:	89 2b       	or	r24, r25
 8d4:	09 f4       	brne	.+2      	; 0x8d8 <__printf_core+0x46e>
 8d6:	ba c1       	rjmp	.+884    	; 0xc4c <__printf_core+0x7e2>
 8d8:	c7 56       	subi	r28, 0x67	; 103
 8da:	df 4f       	sbci	r29, 0xFF	; 255
 8dc:	88 81       	ld	r24, Y
 8de:	99 81       	ldd	r25, Y+1	; 0x01
 8e0:	aa 81       	ldd	r26, Y+2	; 0x02
 8e2:	c9 59       	subi	r28, 0x99	; 153
 8e4:	d0 40       	sbci	r29, 0x00	; 0
 8e6:	9c 01       	movw	r18, r24
 8e8:	4a 2f       	mov	r20, r26
 8ea:	2f 5f       	subi	r18, 0xFF	; 255
 8ec:	3f 4f       	sbci	r19, 0xFF	; 255
 8ee:	4f 4f       	sbci	r20, 0xFF	; 255
 8f0:	c7 56       	subi	r28, 0x67	; 103
 8f2:	df 4f       	sbci	r29, 0xFF	; 255
 8f4:	28 83       	st	Y, r18
 8f6:	39 83       	std	Y+1, r19	; 0x01
 8f8:	4a 83       	std	Y+2, r20	; 0x02
 8fa:	c9 59       	subi	r28, 0x99	; 153
 8fc:	d0 40       	sbci	r29, 0x00	; 0
 8fe:	fc 01       	movw	r30, r24
 900:	5a 2f       	mov	r21, r26
 902:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
 906:	26 2f       	mov	r18, r22
 908:	a6 01       	movw	r20, r12
 90a:	be 01       	movw	r22, r28
 90c:	6f 57       	subi	r22, 0x7F	; 127
 90e:	7f 4f       	sbci	r23, 0xFF	; 255
 910:	c4 01       	movw	r24, r8
 912:	0e 94 0f 13 	call	0x261e	; 0x261e <__fmt_a>
 916:	97 c1       	rjmp	.+814    	; 0xc46 <__printf_core+0x7dc>
 918:	61 2f       	mov	r22, r17
 91a:	70 e0       	ldi	r23, 0x00	; 0
 91c:	95 01       	movw	r18, r10
 91e:	41 e0       	ldi	r20, 0x01	; 1
 920:	50 e0       	ldi	r21, 0x00	; 0
 922:	c6 01       	movw	r24, r12
 924:	0e 94 87 09 	call	0x130e	; 0x130e <__pop_int>
 928:	89 2b       	or	r24, r25
 92a:	09 f4       	brne	.+2      	; 0x92e <__printf_core+0x4c4>
 92c:	8f c1       	rjmp	.+798    	; 0xc4c <__printf_core+0x7e2>
 92e:	c7 56       	subi	r28, 0x67	; 103
 930:	df 4f       	sbci	r29, 0xFF	; 255
 932:	88 81       	ld	r24, Y
 934:	99 81       	ldd	r25, Y+1	; 0x01
 936:	aa 81       	ldd	r26, Y+2	; 0x02
 938:	c9 59       	subi	r28, 0x99	; 153
 93a:	d0 40       	sbci	r29, 0x00	; 0
 93c:	01 96       	adiw	r24, 0x01	; 1
 93e:	a1 1d       	adc	r26, r1
 940:	c7 56       	subi	r28, 0x67	; 103
 942:	df 4f       	sbci	r29, 0xFF	; 255
 944:	88 83       	st	Y, r24
 946:	99 83       	std	Y+1, r25	; 0x01
 948:	aa 83       	std	Y+2, r26	; 0x02
 94a:	c9 59       	subi	r28, 0x99	; 153
 94c:	d0 40       	sbci	r29, 0x00	; 0
 94e:	a6 01       	movw	r20, r12
 950:	be 01       	movw	r22, r28
 952:	6f 57       	subi	r22, 0x7F	; 127
 954:	7f 4f       	sbci	r23, 0xFF	; 255
 956:	c4 01       	movw	r24, r8
 958:	0e 94 c8 08 	call	0x1190	; 0x1190 <__fmt_d>
 95c:	74 c1       	rjmp	.+744    	; 0xc46 <__printf_core+0x7dc>
 95e:	61 2f       	mov	r22, r17
 960:	70 e0       	ldi	r23, 0x00	; 0
 962:	95 01       	movw	r18, r10
 964:	40 e0       	ldi	r20, 0x00	; 0
 966:	50 e0       	ldi	r21, 0x00	; 0
 968:	c6 01       	movw	r24, r12
 96a:	0e 94 87 09 	call	0x130e	; 0x130e <__pop_int>
 96e:	89 2b       	or	r24, r25
 970:	09 f4       	brne	.+2      	; 0x974 <__printf_core+0x50a>
 972:	6c c1       	rjmp	.+728    	; 0xc4c <__printf_core+0x7e2>
 974:	c7 56       	subi	r28, 0x67	; 103
 976:	df 4f       	sbci	r29, 0xFF	; 255
 978:	88 81       	ld	r24, Y
 97a:	99 81       	ldd	r25, Y+1	; 0x01
 97c:	aa 81       	ldd	r26, Y+2	; 0x02
 97e:	c9 59       	subi	r28, 0x99	; 153
 980:	d0 40       	sbci	r29, 0x00	; 0
 982:	01 96       	adiw	r24, 0x01	; 1
 984:	a1 1d       	adc	r26, r1
 986:	c7 56       	subi	r28, 0x67	; 103
 988:	df 4f       	sbci	r29, 0xFF	; 255
 98a:	88 83       	st	Y, r24
 98c:	99 83       	std	Y+1, r25	; 0x01
 98e:	aa 83       	std	Y+2, r26	; 0x02
 990:	c9 59       	subi	r28, 0x99	; 153
 992:	d0 40       	sbci	r29, 0x00	; 0
 994:	a6 01       	movw	r20, r12
 996:	be 01       	movw	r22, r28
 998:	6f 57       	subi	r22, 0x7F	; 127
 99a:	7f 4f       	sbci	r23, 0xFF	; 255
 99c:	c4 01       	movw	r24, r8
 99e:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <__fmt_u>
 9a2:	51 c1       	rjmp	.+674    	; 0xc46 <__printf_core+0x7dc>
 9a4:	61 2f       	mov	r22, r17
 9a6:	70 e0       	ldi	r23, 0x00	; 0
 9a8:	95 01       	movw	r18, r10
 9aa:	40 e0       	ldi	r20, 0x00	; 0
 9ac:	50 e0       	ldi	r21, 0x00	; 0
 9ae:	c6 01       	movw	r24, r12
 9b0:	0e 94 87 09 	call	0x130e	; 0x130e <__pop_int>
 9b4:	89 2b       	or	r24, r25
 9b6:	09 f4       	brne	.+2      	; 0x9ba <__printf_core+0x550>
 9b8:	49 c1       	rjmp	.+658    	; 0xc4c <__printf_core+0x7e2>
 9ba:	c7 56       	subi	r28, 0x67	; 103
 9bc:	df 4f       	sbci	r29, 0xFF	; 255
 9be:	88 81       	ld	r24, Y
 9c0:	99 81       	ldd	r25, Y+1	; 0x01
 9c2:	aa 81       	ldd	r26, Y+2	; 0x02
 9c4:	c9 59       	subi	r28, 0x99	; 153
 9c6:	d0 40       	sbci	r29, 0x00	; 0
 9c8:	01 96       	adiw	r24, 0x01	; 1
 9ca:	a1 1d       	adc	r26, r1
 9cc:	c7 56       	subi	r28, 0x67	; 103
 9ce:	df 4f       	sbci	r29, 0xFF	; 255
 9d0:	88 83       	st	Y, r24
 9d2:	99 83       	std	Y+1, r25	; 0x01
 9d4:	aa 83       	std	Y+2, r26	; 0x02
 9d6:	c9 59       	subi	r28, 0x99	; 153
 9d8:	d0 40       	sbci	r29, 0x00	; 0
 9da:	a6 01       	movw	r20, r12
 9dc:	be 01       	movw	r22, r28
 9de:	6f 57       	subi	r22, 0x7F	; 127
 9e0:	7f 4f       	sbci	r23, 0xFF	; 255
 9e2:	c4 01       	movw	r24, r8
 9e4:	0e 94 d8 0b 	call	0x17b0	; 0x17b0 <__fmt_o>
 9e8:	2e c1       	rjmp	.+604    	; 0xc46 <__printf_core+0x7dc>
 9ea:	61 2f       	mov	r22, r17
 9ec:	70 e0       	ldi	r23, 0x00	; 0
 9ee:	95 01       	movw	r18, r10
 9f0:	40 e0       	ldi	r20, 0x00	; 0
 9f2:	50 e0       	ldi	r21, 0x00	; 0
 9f4:	c6 01       	movw	r24, r12
 9f6:	0e 94 87 09 	call	0x130e	; 0x130e <__pop_int>
 9fa:	89 2b       	or	r24, r25
 9fc:	09 f4       	brne	.+2      	; 0xa00 <__printf_core+0x596>
 9fe:	26 c1       	rjmp	.+588    	; 0xc4c <__printf_core+0x7e2>
 a00:	c7 56       	subi	r28, 0x67	; 103
 a02:	df 4f       	sbci	r29, 0xFF	; 255
 a04:	88 81       	ld	r24, Y
 a06:	99 81       	ldd	r25, Y+1	; 0x01
 a08:	aa 81       	ldd	r26, Y+2	; 0x02
 a0a:	c9 59       	subi	r28, 0x99	; 153
 a0c:	d0 40       	sbci	r29, 0x00	; 0
 a0e:	9c 01       	movw	r18, r24
 a10:	4a 2f       	mov	r20, r26
 a12:	2f 5f       	subi	r18, 0xFF	; 255
 a14:	3f 4f       	sbci	r19, 0xFF	; 255
 a16:	4f 4f       	sbci	r20, 0xFF	; 255
 a18:	c7 56       	subi	r28, 0x67	; 103
 a1a:	df 4f       	sbci	r29, 0xFF	; 255
 a1c:	28 83       	st	Y, r18
 a1e:	39 83       	std	Y+1, r19	; 0x01
 a20:	4a 83       	std	Y+2, r20	; 0x02
 a22:	c9 59       	subi	r28, 0x99	; 153
 a24:	d0 40       	sbci	r29, 0x00	; 0
 a26:	fc 01       	movw	r30, r24
 a28:	5a 2f       	mov	r21, r26
 a2a:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
 a2e:	26 2f       	mov	r18, r22
 a30:	4b c0       	rjmp	.+150    	; 0xac8 <__printf_core+0x65e>
 a32:	95 01       	movw	r18, r10
 a34:	40 e0       	ldi	r20, 0x00	; 0
 a36:	50 e0       	ldi	r21, 0x00	; 0
 a38:	60 ef       	ldi	r22, 0xF0	; 240
 a3a:	70 e0       	ldi	r23, 0x00	; 0
 a3c:	c6 01       	movw	r24, r12
 a3e:	0e 94 87 09 	call	0x130e	; 0x130e <__pop_int>
 a42:	89 2b       	or	r24, r25
 a44:	09 f4       	brne	.+2      	; 0xa48 <__printf_core+0x5de>
 a46:	02 c1       	rjmp	.+516    	; 0xc4c <__printf_core+0x7e2>
 a48:	c7 56       	subi	r28, 0x67	; 103
 a4a:	df 4f       	sbci	r29, 0xFF	; 255
 a4c:	88 81       	ld	r24, Y
 a4e:	99 81       	ldd	r25, Y+1	; 0x01
 a50:	aa 81       	ldd	r26, Y+2	; 0x02
 a52:	c9 59       	subi	r28, 0x99	; 153
 a54:	d0 40       	sbci	r29, 0x00	; 0
 a56:	01 96       	adiw	r24, 0x01	; 1
 a58:	a1 1d       	adc	r26, r1
 a5a:	c7 56       	subi	r28, 0x67	; 103
 a5c:	df 4f       	sbci	r29, 0xFF	; 255
 a5e:	88 83       	st	Y, r24
 a60:	99 83       	std	Y+1, r25	; 0x01
 a62:	aa 83       	std	Y+2, r26	; 0x02
 a64:	c9 59       	subi	r28, 0x99	; 153
 a66:	d0 40       	sbci	r29, 0x00	; 0
 a68:	86 e0       	ldi	r24, 0x06	; 6
 a6a:	23 e6       	ldi	r18, 0x63	; 99
 a6c:	34 e0       	ldi	r19, 0x04	; 4
 a6e:	40 e0       	ldi	r20, 0x00	; 0
 a70:	f9 01       	movw	r30, r18
 a72:	de 01       	movw	r26, r28
 a74:	ad 56       	subi	r26, 0x6D	; 109
 a76:	bf 4f       	sbci	r27, 0xFF	; 255
 a78:	74 2f       	mov	r23, r20
 a7a:	0e 94 96 12 	call	0x252c	; 0x252c <__movmemx_qi>
 a7e:	d6 01       	movw	r26, r12
 a80:	2c 91       	ld	r18, X
 a82:	11 96       	adiw	r26, 0x01	; 1
 a84:	3c 91       	ld	r19, X
 a86:	11 97       	sbiw	r26, 0x01	; 1
 a88:	12 96       	adiw	r26, 0x02	; 2
 a8a:	4c 91       	ld	r20, X
 a8c:	12 97       	sbiw	r26, 0x02	; 2
 a8e:	13 96       	adiw	r26, 0x03	; 3
 a90:	5c 91       	ld	r21, X
 a92:	13 97       	sbiw	r26, 0x03	; 3
 a94:	14 96       	adiw	r26, 0x04	; 4
 a96:	6c 91       	ld	r22, X
 a98:	14 97       	sbiw	r26, 0x04	; 4
 a9a:	15 96       	adiw	r26, 0x05	; 5
 a9c:	7c 91       	ld	r23, X
 a9e:	15 97       	sbiw	r26, 0x05	; 5
 aa0:	16 96       	adiw	r26, 0x06	; 6
 aa2:	8c 91       	ld	r24, X
 aa4:	16 97       	sbiw	r26, 0x06	; 6
 aa6:	17 96       	adiw	r26, 0x07	; 7
 aa8:	9c 91       	ld	r25, X
 aaa:	a0 e0       	ldi	r26, 0x00	; 0
 aac:	0e 94 b0 12 	call	0x2560	; 0x2560 <__cmpdi2_s8>
 ab0:	51 f4       	brne	.+20     	; 0xac6 <__printf_core+0x65c>
 ab2:	00 e0       	ldi	r16, 0x00	; 0
 ab4:	10 e0       	ldi	r17, 0x00	; 0
 ab6:	cf 55       	subi	r28, 0x5F	; 95
 ab8:	df 4f       	sbci	r29, 0xFF	; 255
 aba:	28 81       	ld	r18, Y
 abc:	39 81       	ldd	r19, Y+1	; 0x01
 abe:	4a 81       	ldd	r20, Y+2	; 0x02
 ac0:	c1 5a       	subi	r28, 0xA1	; 161
 ac2:	d0 40       	sbci	r29, 0x00	; 0
 ac4:	ba c0       	rjmp	.+372    	; 0xc3a <__printf_core+0x7d0>
 ac6:	28 e7       	ldi	r18, 0x78	; 120
 ac8:	a6 01       	movw	r20, r12
 aca:	be 01       	movw	r22, r28
 acc:	6f 57       	subi	r22, 0x7F	; 127
 ace:	7f 4f       	sbci	r23, 0xFF	; 255
 ad0:	c4 01       	movw	r24, r8
 ad2:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fmt_x>
 ad6:	b7 c0       	rjmp	.+366    	; 0xc46 <__printf_core+0x7dc>
 ad8:	61 2f       	mov	r22, r17
 ada:	70 e0       	ldi	r23, 0x00	; 0
 adc:	95 01       	movw	r18, r10
 ade:	a1 01       	movw	r20, r2
 ae0:	4e 0d       	add	r20, r14
 ae2:	5f 1d       	adc	r21, r15
 ae4:	c6 01       	movw	r24, r12
 ae6:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <__pop_ptr>
 aea:	b0 c0       	rjmp	.+352    	; 0xc4c <__printf_core+0x7e2>
 aec:	61 2f       	mov	r22, r17
 aee:	70 e0       	ldi	r23, 0x00	; 0
 af0:	a5 01       	movw	r20, r10
 af2:	c6 01       	movw	r24, r12
 af4:	0e 94 43 11 	call	0x2286	; 0x2286 <__pop_float>
 af8:	89 2b       	or	r24, r25
 afa:	09 f4       	brne	.+2      	; 0xafe <__printf_core+0x694>
 afc:	a7 c0       	rjmp	.+334    	; 0xc4c <__printf_core+0x7e2>
 afe:	c7 56       	subi	r28, 0x67	; 103
 b00:	df 4f       	sbci	r29, 0xFF	; 255
 b02:	88 81       	ld	r24, Y
 b04:	99 81       	ldd	r25, Y+1	; 0x01
 b06:	aa 81       	ldd	r26, Y+2	; 0x02
 b08:	c9 59       	subi	r28, 0x99	; 153
 b0a:	d0 40       	sbci	r29, 0x00	; 0
 b0c:	9c 01       	movw	r18, r24
 b0e:	4a 2f       	mov	r20, r26
 b10:	2f 5f       	subi	r18, 0xFF	; 255
 b12:	3f 4f       	sbci	r19, 0xFF	; 255
 b14:	4f 4f       	sbci	r20, 0xFF	; 255
 b16:	c7 56       	subi	r28, 0x67	; 103
 b18:	df 4f       	sbci	r29, 0xFF	; 255
 b1a:	28 83       	st	Y, r18
 b1c:	39 83       	std	Y+1, r19	; 0x01
 b1e:	4a 83       	std	Y+2, r20	; 0x02
 b20:	c9 59       	subi	r28, 0x99	; 153
 b22:	d0 40       	sbci	r29, 0x00	; 0
 b24:	fc 01       	movw	r30, r24
 b26:	5a 2f       	mov	r21, r26
 b28:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
 b2c:	26 2f       	mov	r18, r22
 b2e:	a6 01       	movw	r20, r12
 b30:	be 01       	movw	r22, r28
 b32:	6f 57       	subi	r22, 0x7F	; 127
 b34:	7f 4f       	sbci	r23, 0xFF	; 255
 b36:	c4 01       	movw	r24, r8
 b38:	0e 94 0f 13 	call	0x261e	; 0x261e <__fmt_a>
 b3c:	84 c0       	rjmp	.+264    	; 0xc46 <__printf_core+0x7dc>
 b3e:	10 38       	cpi	r17, 0x80	; 128
 b40:	09 f0       	breq	.+2      	; 0xb44 <__printf_core+0x6da>
 b42:	84 c0       	rjmp	.+264    	; 0xc4c <__printf_core+0x7e2>
 b44:	c7 56       	subi	r28, 0x67	; 103
 b46:	df 4f       	sbci	r29, 0xFF	; 255
 b48:	88 81       	ld	r24, Y
 b4a:	99 81       	ldd	r25, Y+1	; 0x01
 b4c:	aa 81       	ldd	r26, Y+2	; 0x02
 b4e:	c9 59       	subi	r28, 0x99	; 153
 b50:	d0 40       	sbci	r29, 0x00	; 0
 b52:	01 96       	adiw	r24, 0x01	; 1
 b54:	a1 1d       	adc	r26, r1
 b56:	c7 56       	subi	r28, 0x67	; 103
 b58:	df 4f       	sbci	r29, 0xFF	; 255
 b5a:	88 83       	st	Y, r24
 b5c:	99 83       	std	Y+1, r25	; 0x01
 b5e:	aa 83       	std	Y+2, r26	; 0x02
 b60:	c9 59       	subi	r28, 0x99	; 153
 b62:	d0 40       	sbci	r29, 0x00	; 0
 b64:	d5 01       	movw	r26, r10
 b66:	ed 91       	ld	r30, X+
 b68:	fc 91       	ld	r31, X
 b6a:	11 97       	sbiw	r26, 0x01	; 1
 b6c:	cf 01       	movw	r24, r30
 b6e:	02 96       	adiw	r24, 0x02	; 2
 b70:	8d 93       	st	X+, r24
 b72:	9c 93       	st	X, r25
 b74:	80 81       	ld	r24, Z
 b76:	f6 01       	movw	r30, r12
 b78:	80 83       	st	Z, r24
 b7a:	5b c0       	rjmp	.+182    	; 0xc32 <__printf_core+0x7c8>
 b7c:	10 38       	cpi	r17, 0x80	; 128
 b7e:	09 f0       	breq	.+2      	; 0xb82 <__printf_core+0x718>
 b80:	65 c0       	rjmp	.+202    	; 0xc4c <__printf_core+0x7e2>
 b82:	c7 56       	subi	r28, 0x67	; 103
 b84:	df 4f       	sbci	r29, 0xFF	; 255
 b86:	88 81       	ld	r24, Y
 b88:	99 81       	ldd	r25, Y+1	; 0x01
 b8a:	aa 81       	ldd	r26, Y+2	; 0x02
 b8c:	c9 59       	subi	r28, 0x99	; 153
 b8e:	d0 40       	sbci	r29, 0x00	; 0
 b90:	01 96       	adiw	r24, 0x01	; 1
 b92:	a1 1d       	adc	r26, r1
 b94:	c7 56       	subi	r28, 0x67	; 103
 b96:	df 4f       	sbci	r29, 0xFF	; 255
 b98:	88 83       	st	Y, r24
 b9a:	99 83       	std	Y+1, r25	; 0x01
 b9c:	aa 83       	std	Y+2, r26	; 0x02
 b9e:	c9 59       	subi	r28, 0x99	; 153
 ba0:	d0 40       	sbci	r29, 0x00	; 0
 ba2:	d5 01       	movw	r26, r10
 ba4:	ed 91       	ld	r30, X+
 ba6:	fc 91       	ld	r31, X
 ba8:	11 97       	sbiw	r26, 0x01	; 1
 baa:	cf 01       	movw	r24, r30
 bac:	03 96       	adiw	r24, 0x03	; 3
 bae:	8d 93       	st	X+, r24
 bb0:	9c 93       	st	X, r25
 bb2:	20 81       	ld	r18, Z
 bb4:	31 81       	ldd	r19, Z+1	; 0x01
 bb6:	42 81       	ldd	r20, Z+2	; 0x02
 bb8:	00 e0       	ldi	r16, 0x00	; 0
 bba:	10 e0       	ldi	r17, 0x00	; 0
 bbc:	3e c0       	rjmp	.+124    	; 0xc3a <__printf_core+0x7d0>
 bbe:	10 38       	cpi	r17, 0x80	; 128
 bc0:	09 f0       	breq	.+2      	; 0xbc4 <__printf_core+0x75a>
 bc2:	44 c0       	rjmp	.+136    	; 0xc4c <__printf_core+0x7e2>
 bc4:	c7 56       	subi	r28, 0x67	; 103
 bc6:	df 4f       	sbci	r29, 0xFF	; 255
 bc8:	88 81       	ld	r24, Y
 bca:	99 81       	ldd	r25, Y+1	; 0x01
 bcc:	aa 81       	ldd	r26, Y+2	; 0x02
 bce:	c9 59       	subi	r28, 0x99	; 153
 bd0:	d0 40       	sbci	r29, 0x00	; 0
 bd2:	01 96       	adiw	r24, 0x01	; 1
 bd4:	a1 1d       	adc	r26, r1
 bd6:	c7 56       	subi	r28, 0x67	; 103
 bd8:	df 4f       	sbci	r29, 0xFF	; 255
 bda:	88 83       	st	Y, r24
 bdc:	99 83       	std	Y+1, r25	; 0x01
 bde:	aa 83       	std	Y+2, r26	; 0x02
 be0:	c9 59       	subi	r28, 0x99	; 153
 be2:	d0 40       	sbci	r29, 0x00	; 0
 be4:	f6 01       	movw	r30, r12
 be6:	70 82       	st	Z, r7
 be8:	24 c0       	rjmp	.+72     	; 0xc32 <__printf_core+0x7c8>
 bea:	d6 01       	movw	r26, r12
 bec:	7c 92       	st	X, r7
 bee:	c2 56       	subi	r28, 0x62	; 98
 bf0:	df 4f       	sbci	r29, 0xFF	; 255
 bf2:	28 81       	ld	r18, Y
 bf4:	39 81       	ldd	r19, Y+1	; 0x01
 bf6:	4a 81       	ldd	r20, Y+2	; 0x02
 bf8:	ce 59       	subi	r28, 0x9E	; 158
 bfa:	d0 40       	sbci	r29, 0x00	; 0
 bfc:	c7 56       	subi	r28, 0x67	; 103
 bfe:	df 4f       	sbci	r29, 0xFF	; 255
 c00:	28 83       	st	Y, r18
 c02:	39 83       	std	Y+1, r19	; 0x01
 c04:	4a 83       	std	Y+2, r20	; 0x02
 c06:	c9 59       	subi	r28, 0x99	; 153
 c08:	d0 40       	sbci	r29, 0x00	; 0
 c0a:	cf 57       	subi	r28, 0x7F	; 127
 c0c:	df 4f       	sbci	r29, 0xFF	; 255
 c0e:	19 82       	std	Y+1, r1	; 0x01
 c10:	18 82       	st	Y, r1
 c12:	c1 58       	subi	r28, 0x81	; 129
 c14:	d0 40       	sbci	r29, 0x00	; 0
 c16:	cb 57       	subi	r28, 0x7B	; 123
 c18:	df 4f       	sbci	r29, 0xFF	; 255
 c1a:	19 82       	std	Y+1, r1	; 0x01
 c1c:	18 82       	st	Y, r1
 c1e:	c5 58       	subi	r28, 0x85	; 133
 c20:	d0 40       	sbci	r29, 0x00	; 0
 c22:	8f ef       	ldi	r24, 0xFF	; 255
 c24:	9f ef       	ldi	r25, 0xFF	; 255
 c26:	cd 57       	subi	r28, 0x7D	; 125
 c28:	df 4f       	sbci	r29, 0xFF	; 255
 c2a:	99 83       	std	Y+1, r25	; 0x01
 c2c:	88 83       	st	Y, r24
 c2e:	c3 58       	subi	r28, 0x83	; 131
 c30:	d0 40       	sbci	r29, 0x00	; 0
 c32:	01 e0       	ldi	r16, 0x01	; 1
 c34:	10 e0       	ldi	r17, 0x00	; 0
 c36:	46 2d       	mov	r20, r6
 c38:	92 01       	movw	r18, r4
 c3a:	be 01       	movw	r22, r28
 c3c:	6f 57       	subi	r22, 0x7F	; 127
 c3e:	7f 4f       	sbci	r23, 0xFF	; 255
 c40:	c4 01       	movw	r24, r8
 c42:	0e 94 42 0c 	call	0x1884	; 0x1884 <__fmt_s>
 c46:	8e 0d       	add	r24, r14
 c48:	9f 1d       	adc	r25, r15
 c4a:	11 c0       	rjmp	.+34     	; 0xc6e <__printf_core+0x804>
 c4c:	c7 56       	subi	r28, 0x67	; 103
 c4e:	df 4f       	sbci	r29, 0xFF	; 255
 c50:	88 81       	ld	r24, Y
 c52:	99 81       	ldd	r25, Y+1	; 0x01
 c54:	aa 81       	ldd	r26, Y+2	; 0x02
 c56:	c9 59       	subi	r28, 0x99	; 153
 c58:	d0 40       	sbci	r29, 0x00	; 0
 c5a:	01 96       	adiw	r24, 0x01	; 1
 c5c:	a1 1d       	adc	r26, r1
 c5e:	c7 56       	subi	r28, 0x67	; 103
 c60:	df 4f       	sbci	r29, 0xFF	; 255
 c62:	88 83       	st	Y, r24
 c64:	99 83       	std	Y+1, r25	; 0x01
 c66:	aa 83       	std	Y+2, r26	; 0x02
 c68:	c9 59       	subi	r28, 0x99	; 153
 c6a:	d0 40       	sbci	r29, 0x00	; 0
 c6c:	c7 01       	movw	r24, r14
 c6e:	71 01       	movw	r14, r2
 c70:	e8 0e       	add	r14, r24
 c72:	f9 1e       	adc	r15, r25
 c74:	e2 14       	cp	r14, r2
 c76:	f3 04       	cpc	r15, r3
 c78:	4c f4       	brge	.+18     	; 0xc8c <__printf_core+0x822>
 c7a:	8f e4       	ldi	r24, 0x4F	; 79
 c7c:	90 e0       	ldi	r25, 0x00	; 0
 c7e:	90 93 2e 04 	sts	0x042E, r25	; 0x80042e <__errno_val+0x1>
 c82:	80 93 2d 04 	sts	0x042D, r24	; 0x80042d <__errno_val>
 c86:	8f ef       	ldi	r24, 0xFF	; 255
 c88:	9f ef       	ldi	r25, 0xFF	; 255
 c8a:	03 c0       	rjmp	.+6      	; 0xc92 <__printf_core+0x828>
 c8c:	17 01       	movw	r2, r14
 c8e:	19 cc       	rjmp	.-1998   	; 0x4c2 <__printf_core+0x58>
 c90:	c1 01       	movw	r24, r2
 c92:	cd 55       	subi	r28, 0x5D	; 93
 c94:	df 4f       	sbci	r29, 0xFF	; 255
 c96:	e2 e1       	ldi	r30, 0x12	; 18
 c98:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__epilogue_restores__>

Disassembly of section .text.fputc:

00001d3a <fputc>:
    1d3a:	0f 93       	push	r16
    1d3c:	1f 93       	push	r17
    1d3e:	cf 93       	push	r28
    1d40:	df 93       	push	r29
    1d42:	db 01       	movw	r26, r22
    1d44:	2d 91       	ld	r18, X+
    1d46:	3c 91       	ld	r19, X
    1d48:	11 97       	sbiw	r26, 0x01	; 1
    1d4a:	30 ff       	sbrs	r19, 0
    1d4c:	25 c0       	rjmp	.+74     	; 0x1d98 <fputc+0x5e>
    1d4e:	17 96       	adiw	r26, 0x07	; 7
    1d50:	4d 91       	ld	r20, X+
    1d52:	5c 91       	ld	r21, X
    1d54:	18 97       	sbiw	r26, 0x08	; 8
    1d56:	15 96       	adiw	r26, 0x05	; 5
    1d58:	2d 91       	ld	r18, X+
    1d5a:	3c 91       	ld	r19, X
    1d5c:	16 97       	sbiw	r26, 0x06	; 6
    1d5e:	42 17       	cp	r20, r18
    1d60:	53 07       	cpc	r21, r19
    1d62:	78 f4       	brcc	.+30     	; 0x1d82 <fputc+0x48>
    1d64:	12 96       	adiw	r26, 0x02	; 2
    1d66:	ed 91       	ld	r30, X+
    1d68:	fc 91       	ld	r31, X
    1d6a:	13 97       	sbiw	r26, 0x03	; 3
    1d6c:	80 83       	st	Z, r24
    1d6e:	12 96       	adiw	r26, 0x02	; 2
    1d70:	2d 91       	ld	r18, X+
    1d72:	3c 91       	ld	r19, X
    1d74:	13 97       	sbiw	r26, 0x03	; 3
    1d76:	2f 5f       	subi	r18, 0xFF	; 255
    1d78:	3f 4f       	sbci	r19, 0xFF	; 255
    1d7a:	13 96       	adiw	r26, 0x03	; 3
    1d7c:	3c 93       	st	X, r19
    1d7e:	2e 93       	st	-X, r18
    1d80:	12 97       	sbiw	r26, 0x02	; 2
    1d82:	17 96       	adiw	r26, 0x07	; 7
    1d84:	2d 91       	ld	r18, X+
    1d86:	3c 91       	ld	r19, X
    1d88:	18 97       	sbiw	r26, 0x08	; 8
    1d8a:	2f 5f       	subi	r18, 0xFF	; 255
    1d8c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d8e:	18 96       	adiw	r26, 0x08	; 8
    1d90:	3c 93       	st	X, r19
    1d92:	2e 93       	st	-X, r18
    1d94:	17 97       	sbiw	r26, 0x07	; 7
    1d96:	15 c0       	rjmp	.+42     	; 0x1dc2 <fputc+0x88>
    1d98:	1d 96       	adiw	r26, 0x0d	; 13
    1d9a:	ed 91       	ld	r30, X+
    1d9c:	fc 91       	ld	r31, X
    1d9e:	1e 97       	sbiw	r26, 0x0e	; 14
    1da0:	30 97       	sbiw	r30, 0x00	; 0
    1da2:	19 f4       	brne	.+6      	; 0x1daa <fputc+0x70>
    1da4:	8f ef       	ldi	r24, 0xFF	; 255
    1da6:	9f ef       	ldi	r25, 0xFF	; 255
    1da8:	0c c0       	rjmp	.+24     	; 0x1dc2 <fputc+0x88>
    1daa:	8b 01       	movw	r16, r22
    1dac:	ec 01       	movw	r28, r24
    1dae:	19 95       	eicall
    1db0:	89 2b       	or	r24, r25
    1db2:	c1 f7       	brne	.-16     	; 0x1da4 <fputc+0x6a>
    1db4:	f8 01       	movw	r30, r16
    1db6:	87 81       	ldd	r24, Z+7	; 0x07
    1db8:	90 85       	ldd	r25, Z+8	; 0x08
    1dba:	01 96       	adiw	r24, 0x01	; 1
    1dbc:	90 87       	std	Z+8, r25	; 0x08
    1dbe:	87 83       	std	Z+7, r24	; 0x07
    1dc0:	ce 01       	movw	r24, r28
    1dc2:	df 91       	pop	r29
    1dc4:	cf 91       	pop	r28
    1dc6:	1f 91       	pop	r17
    1dc8:	0f 91       	pop	r16
    1dca:	08 95       	ret

Disassembly of section .text.__fmt_d:

00001190 <__fmt_d>:
    1190:	ad e0       	ldi	r26, 0x0D	; 13
    1192:	b0 e0       	ldi	r27, 0x00	; 0
    1194:	ee ec       	ldi	r30, 0xCE	; 206
    1196:	f8 e0       	ldi	r31, 0x08	; 8
    1198:	0c 94 9d 11 	jmp	0x233a	; 0x233a <__prologue_saves__>
    119c:	9a 87       	std	Y+10, r25	; 0x0a
    119e:	89 87       	std	Y+9, r24	; 0x09
    11a0:	7c 83       	std	Y+4, r23	; 0x04
    11a2:	6b 83       	std	Y+3, r22	; 0x03
    11a4:	fa 01       	movw	r30, r20
    11a6:	db 01       	movw	r26, r22
    11a8:	12 96       	adiw	r26, 0x02	; 2
    11aa:	cd 90       	ld	r12, X+
    11ac:	dc 90       	ld	r13, X
    11ae:	13 97       	sbiw	r26, 0x03	; 3
    11b0:	14 96       	adiw	r26, 0x04	; 4
    11b2:	8d 91       	ld	r24, X+
    11b4:	9c 91       	ld	r25, X
    11b6:	15 97       	sbiw	r26, 0x05	; 5
    11b8:	9e 83       	std	Y+6, r25	; 0x06
    11ba:	8d 83       	std	Y+5, r24	; 0x05
    11bc:	ed 90       	ld	r14, X+
    11be:	fc 90       	ld	r15, X
    11c0:	11 97       	sbiw	r26, 0x01	; 1
    11c2:	fa 82       	std	Y+2, r15	; 0x02
    11c4:	e9 82       	std	Y+1, r14	; 0x01
    11c6:	16 96       	adiw	r26, 0x06	; 6
    11c8:	0d 90       	ld	r0, X+
    11ca:	bc 91       	ld	r27, X
    11cc:	a0 2d       	mov	r26, r0
    11ce:	b8 87       	std	Y+8, r27	; 0x08
    11d0:	af 83       	std	Y+7, r26	; 0x07
    11d2:	20 80       	ld	r2, Z
    11d4:	31 80       	ldd	r3, Z+1	; 0x01
    11d6:	42 80       	ldd	r4, Z+2	; 0x02
    11d8:	53 80       	ldd	r5, Z+3	; 0x03
    11da:	64 80       	ldd	r6, Z+4	; 0x04
    11dc:	75 80       	ldd	r7, Z+5	; 0x05
    11de:	86 80       	ldd	r8, Z+6	; 0x06
    11e0:	97 80       	ldd	r9, Z+7	; 0x07
    11e2:	81 01       	movw	r16, r2
    11e4:	b4 2d       	mov	r27, r4
    11e6:	f5 2d       	mov	r31, r5
    11e8:	e6 2d       	mov	r30, r6
    11ea:	7b 86       	std	Y+11, r7	; 0x0b
    11ec:	8c 86       	std	Y+12, r8	; 0x0c
    11ee:	9d 86       	std	Y+13, r9	; 0x0d
    11f0:	91 01       	movw	r18, r2
    11f2:	a2 01       	movw	r20, r4
    11f4:	b3 01       	movw	r22, r6
    11f6:	c4 01       	movw	r24, r8
    11f8:	a0 e0       	ldi	r26, 0x00	; 0
    11fa:	0e 94 b0 12 	call	0x2560	; 0x2560 <__cmpdi2_s8>
    11fe:	4c f4       	brge	.+18     	; 0x1212 <__fmt_d+0x82>
    1200:	0e 94 78 12 	call	0x24f0	; 0x24f0 <__negdi2>
    1204:	89 01       	movw	r16, r18
    1206:	b4 2f       	mov	r27, r20
    1208:	f5 2f       	mov	r31, r21
    120a:	e6 2f       	mov	r30, r22
    120c:	7b 87       	std	Y+11, r23	; 0x0b
    120e:	8c 87       	std	Y+12, r24	; 0x0c
    1210:	9d 87       	std	Y+13, r25	; 0x0d
    1212:	d7 fc       	sbrc	r13, 7
    1214:	04 c0       	rjmp	.+8      	; 0x121e <__fmt_d+0x8e>
    1216:	e8 94       	clt
    1218:	e1 f8       	bld	r14, 1
    121a:	fa 82       	std	Y+2, r15	; 0x02
    121c:	e9 82       	std	Y+1, r14	; 0x01
    121e:	91 01       	movw	r18, r2
    1220:	a2 01       	movw	r20, r4
    1222:	b3 01       	movw	r22, r6
    1224:	c4 01       	movw	r24, r8
    1226:	a0 e0       	ldi	r26, 0x00	; 0
    1228:	ed 80       	ldd	r14, Y+5	; 0x05
    122a:	fe 80       	ldd	r15, Y+6	; 0x06
    122c:	0e 94 b0 12 	call	0x2560	; 0x2560 <__cmpdi2_s8>
    1230:	1c f0       	brlt	.+6      	; 0x1238 <__fmt_d+0xa8>
    1232:	89 81       	ldd	r24, Y+1	; 0x01
    1234:	82 ff       	sbrs	r24, 2
    1236:	04 c0       	rjmp	.+8      	; 0x1240 <__fmt_d+0xb0>
    1238:	81 e0       	ldi	r24, 0x01	; 1
    123a:	e8 1a       	sub	r14, r24
    123c:	f1 08       	sbc	r15, r1
    123e:	05 c0       	rjmp	.+10     	; 0x124a <__fmt_d+0xba>
    1240:	83 ff       	sbrs	r24, 3
    1242:	03 c0       	rjmp	.+6      	; 0x124a <__fmt_d+0xba>
    1244:	91 e0       	ldi	r25, 0x01	; 1
    1246:	e9 1a       	sub	r14, r25
    1248:	f1 08       	sbc	r15, r1
    124a:	ce 01       	movw	r24, r28
    124c:	01 96       	adiw	r24, 0x01	; 1
    124e:	5c 01       	movw	r10, r24
    1250:	8a e0       	ldi	r24, 0x0A	; 10
    1252:	c8 2e       	mov	r12, r24
    1254:	d1 2c       	mov	r13, r1
    1256:	2b 2f       	mov	r18, r27
    1258:	3f 2f       	mov	r19, r31
    125a:	4e 2f       	mov	r20, r30
    125c:	5b 85       	ldd	r21, Y+11	; 0x0b
    125e:	6c 85       	ldd	r22, Y+12	; 0x0c
    1260:	7d 85       	ldd	r23, Y+13	; 0x0d
    1262:	8b 81       	ldd	r24, Y+3	; 0x03
    1264:	9c 81       	ldd	r25, Y+4	; 0x04
    1266:	0e 94 40 0a 	call	0x1480	; 0x1480 <__cvt_u>
    126a:	fc 01       	movw	r30, r24
    126c:	91 01       	movw	r18, r2
    126e:	a2 01       	movw	r20, r4
    1270:	b3 01       	movw	r22, r6
    1272:	c4 01       	movw	r24, r8
    1274:	a0 e0       	ldi	r26, 0x00	; 0
    1276:	0e 94 b0 12 	call	0x2560	; 0x2560 <__cmpdi2_s8>
    127a:	1c f0       	brlt	.+6      	; 0x1282 <__fmt_d+0xf2>
    127c:	89 81       	ldd	r24, Y+1	; 0x01
    127e:	82 ff       	sbrs	r24, 2
    1280:	12 c0       	rjmp	.+36     	; 0x12a6 <__fmt_d+0x116>
    1282:	31 97       	sbiw	r30, 0x01	; 1
    1284:	0f 81       	ldd	r16, Y+7	; 0x07
    1286:	18 85       	ldd	r17, Y+8	; 0x08
    1288:	0e 0f       	add	r16, r30
    128a:	1f 1f       	adc	r17, r31
    128c:	91 01       	movw	r18, r2
    128e:	a2 01       	movw	r20, r4
    1290:	b3 01       	movw	r22, r6
    1292:	c4 01       	movw	r24, r8
    1294:	a0 e0       	ldi	r26, 0x00	; 0
    1296:	0e 94 b0 12 	call	0x2560	; 0x2560 <__cmpdi2_s8>
    129a:	14 f0       	brlt	.+4      	; 0x12a0 <__fmt_d+0x110>
    129c:	8b e2       	ldi	r24, 0x2B	; 43
    129e:	01 c0       	rjmp	.+2      	; 0x12a2 <__fmt_d+0x112>
    12a0:	8d e2       	ldi	r24, 0x2D	; 45
    12a2:	d8 01       	movw	r26, r16
    12a4:	08 c0       	rjmp	.+16     	; 0x12b6 <__fmt_d+0x126>
    12a6:	83 ff       	sbrs	r24, 3
    12a8:	07 c0       	rjmp	.+14     	; 0x12b8 <__fmt_d+0x128>
    12aa:	31 97       	sbiw	r30, 0x01	; 1
    12ac:	af 81       	ldd	r26, Y+7	; 0x07
    12ae:	b8 85       	ldd	r27, Y+8	; 0x08
    12b0:	ae 0f       	add	r26, r30
    12b2:	bf 1f       	adc	r27, r31
    12b4:	80 e2       	ldi	r24, 0x20	; 32
    12b6:	8c 93       	st	X, r24
    12b8:	e9 80       	ldd	r14, Y+1	; 0x01
    12ba:	fa 80       	ldd	r15, Y+2	; 0x02
    12bc:	ab 81       	ldd	r26, Y+3	; 0x03
    12be:	bc 81       	ldd	r27, Y+4	; 0x04
    12c0:	18 96       	adiw	r26, 0x08	; 8
    12c2:	2d 91       	ld	r18, X+
    12c4:	3c 91       	ld	r19, X
    12c6:	19 97       	sbiw	r26, 0x09	; 9
    12c8:	21 50       	subi	r18, 0x01	; 1
    12ca:	31 09       	sbc	r19, r1
    12cc:	2e 1b       	sub	r18, r30
    12ce:	3f 0b       	sbc	r19, r31
    12d0:	8f 81       	ldd	r24, Y+7	; 0x07
    12d2:	98 85       	ldd	r25, Y+8	; 0x08
    12d4:	e8 0f       	add	r30, r24
    12d6:	f9 1f       	adc	r31, r25
    12d8:	af 01       	movw	r20, r30
    12da:	60 e8       	ldi	r22, 0x80	; 128
    12dc:	0d 81       	ldd	r16, Y+5	; 0x05
    12de:	1e 81       	ldd	r17, Y+6	; 0x06
    12e0:	89 85       	ldd	r24, Y+9	; 0x09
    12e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    12e4:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__pad>
    12e8:	9c 01       	movw	r18, r24
    12ea:	a9 85       	ldd	r26, Y+9	; 0x09
    12ec:	ba 85       	ldd	r27, Y+10	; 0x0a
    12ee:	8d 91       	ld	r24, X+
    12f0:	9c 91       	ld	r25, X
    12f2:	90 ff       	sbrs	r25, 0
    12f4:	07 c0       	rjmp	.+14     	; 0x1304 <__fmt_d+0x174>
    12f6:	eb 81       	ldd	r30, Y+3	; 0x03
    12f8:	fc 81       	ldd	r31, Y+4	; 0x04
    12fa:	82 81       	ldd	r24, Z+2	; 0x02
    12fc:	93 81       	ldd	r25, Z+3	; 0x03
    12fe:	82 17       	cp	r24, r18
    1300:	93 07       	cpc	r25, r19
    1302:	0c f4       	brge	.+2      	; 0x1306 <__fmt_d+0x176>
    1304:	c9 01       	movw	r24, r18
    1306:	2d 96       	adiw	r28, 0x0d	; 13
    1308:	e2 e1       	ldi	r30, 0x12	; 18
    130a:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__epilogue_restores__>

Disassembly of section .text.__fmt_o:

000017b0 <__fmt_o>:
    17b0:	a2 e0       	ldi	r26, 0x02	; 2
    17b2:	b0 e0       	ldi	r27, 0x00	; 0
    17b4:	ee ed       	ldi	r30, 0xDE	; 222
    17b6:	fb e0       	ldi	r31, 0x0B	; 11
    17b8:	0c 94 9d 11 	jmp	0x233a	; 0x233a <__prologue_saves__>
    17bc:	1c 01       	movw	r2, r24
    17be:	4b 01       	movw	r8, r22
    17c0:	fa 01       	movw	r30, r20
    17c2:	db 01       	movw	r26, r22
    17c4:	12 96       	adiw	r26, 0x02	; 2
    17c6:	2d 91       	ld	r18, X+
    17c8:	3c 91       	ld	r19, X
    17ca:	13 97       	sbiw	r26, 0x03	; 3
    17cc:	14 96       	adiw	r26, 0x04	; 4
    17ce:	4d 90       	ld	r4, X+
    17d0:	5c 90       	ld	r5, X
    17d2:	15 97       	sbiw	r26, 0x05	; 5
    17d4:	8d 91       	ld	r24, X+
    17d6:	9c 91       	ld	r25, X
    17d8:	11 97       	sbiw	r26, 0x01	; 1
    17da:	9a 83       	std	Y+2, r25	; 0x02
    17dc:	89 83       	std	Y+1, r24	; 0x01
    17de:	16 96       	adiw	r26, 0x06	; 6
    17e0:	6d 90       	ld	r6, X+
    17e2:	7c 90       	ld	r7, X
    17e4:	17 97       	sbiw	r26, 0x07	; 7
    17e6:	37 fd       	sbrc	r19, 7
    17e8:	03 c0       	rjmp	.+6      	; 0x17f0 <__fmt_o+0x40>
    17ea:	8d 7f       	andi	r24, 0xFD	; 253
    17ec:	9a 83       	std	Y+2, r25	; 0x02
    17ee:	89 83       	std	Y+1, r24	; 0x01
    17f0:	00 81       	ld	r16, Z
    17f2:	11 81       	ldd	r17, Z+1	; 0x01
    17f4:	22 81       	ldd	r18, Z+2	; 0x02
    17f6:	33 81       	ldd	r19, Z+3	; 0x03
    17f8:	44 81       	ldd	r20, Z+4	; 0x04
    17fa:	55 81       	ldd	r21, Z+5	; 0x05
    17fc:	66 81       	ldd	r22, Z+6	; 0x06
    17fe:	77 81       	ldd	r23, Z+7	; 0x07
    1800:	fe 01       	movw	r30, r28
    1802:	31 96       	adiw	r30, 0x01	; 1
    1804:	5f 01       	movw	r10, r30
    1806:	88 e0       	ldi	r24, 0x08	; 8
    1808:	c8 2e       	mov	r12, r24
    180a:	d1 2c       	mov	r13, r1
    180c:	72 01       	movw	r14, r4
    180e:	c4 01       	movw	r24, r8
    1810:	0e 94 40 0a 	call	0x1480	; 0x1480 <__cvt_u>
    1814:	29 81       	ldd	r18, Y+1	; 0x01
    1816:	24 ff       	sbrs	r18, 4
    1818:	06 c0       	rjmp	.+12     	; 0x1826 <__fmt_o+0x76>
    181a:	01 97       	sbiw	r24, 0x01	; 1
    181c:	f3 01       	movw	r30, r6
    181e:	e8 0f       	add	r30, r24
    1820:	f9 1f       	adc	r31, r25
    1822:	20 e3       	ldi	r18, 0x30	; 48
    1824:	20 83       	st	Z, r18
    1826:	29 81       	ldd	r18, Y+1	; 0x01
    1828:	23 ff       	sbrs	r18, 3
    182a:	06 c0       	rjmp	.+12     	; 0x1838 <__fmt_o+0x88>
    182c:	01 97       	sbiw	r24, 0x01	; 1
    182e:	f3 01       	movw	r30, r6
    1830:	e8 0f       	add	r30, r24
    1832:	f9 1f       	adc	r31, r25
    1834:	20 e2       	ldi	r18, 0x20	; 32
    1836:	20 83       	st	Z, r18
    1838:	e9 80       	ldd	r14, Y+1	; 0x01
    183a:	fa 80       	ldd	r15, Y+2	; 0x02
    183c:	d4 01       	movw	r26, r8
    183e:	18 96       	adiw	r26, 0x08	; 8
    1840:	2d 91       	ld	r18, X+
    1842:	3c 91       	ld	r19, X
    1844:	19 97       	sbiw	r26, 0x09	; 9
    1846:	21 50       	subi	r18, 0x01	; 1
    1848:	31 09       	sbc	r19, r1
    184a:	28 1b       	sub	r18, r24
    184c:	39 0b       	sbc	r19, r25
    184e:	86 0d       	add	r24, r6
    1850:	97 1d       	adc	r25, r7
    1852:	ac 01       	movw	r20, r24
    1854:	60 e8       	ldi	r22, 0x80	; 128
    1856:	82 01       	movw	r16, r4
    1858:	c1 01       	movw	r24, r2
    185a:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__pad>
    185e:	9c 01       	movw	r18, r24
    1860:	f1 01       	movw	r30, r2
    1862:	80 81       	ld	r24, Z
    1864:	91 81       	ldd	r25, Z+1	; 0x01
    1866:	90 ff       	sbrs	r25, 0
    1868:	08 c0       	rjmp	.+16     	; 0x187a <__fmt_o+0xca>
    186a:	d4 01       	movw	r26, r8
    186c:	12 96       	adiw	r26, 0x02	; 2
    186e:	8d 91       	ld	r24, X+
    1870:	9c 91       	ld	r25, X
    1872:	13 97       	sbiw	r26, 0x03	; 3
    1874:	82 17       	cp	r24, r18
    1876:	93 07       	cpc	r25, r19
    1878:	0c f4       	brge	.+2      	; 0x187c <__fmt_o+0xcc>
    187a:	c9 01       	movw	r24, r18
    187c:	22 96       	adiw	r28, 0x02	; 2
    187e:	e2 e1       	ldi	r30, 0x12	; 18
    1880:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__epilogue_restores__>

Disassembly of section .text.__cvt_u:

00001480 <__cvt_u>:
    1480:	a2 e1       	ldi	r26, 0x12	; 18
    1482:	b0 e0       	ldi	r27, 0x00	; 0
    1484:	e6 e4       	ldi	r30, 0x46	; 70
    1486:	fa e0       	ldi	r31, 0x0A	; 10
    1488:	0c 94 9d 11 	jmp	0x233a	; 0x233a <__prologue_saves__>
    148c:	fc 01       	movw	r30, r24
    148e:	0a 8b       	std	Y+18, r16	; 0x12
    1490:	1b 83       	std	Y+3, r17	; 0x03
    1492:	2c 83       	std	Y+4, r18	; 0x04
    1494:	73 2e       	mov	r7, r19
    1496:	64 2e       	mov	r6, r20
    1498:	55 2e       	mov	r5, r21
    149a:	46 2e       	mov	r4, r22
    149c:	7d 83       	std	Y+5, r23	; 0x05
    149e:	cc 86       	std	Y+12, r12	; 0x0c
    14a0:	d8 86       	std	Y+8, r13	; 0x08
    14a2:	bf 82       	std	Y+7, r11	; 0x07
    14a4:	ae 82       	std	Y+6, r10	; 0x06
    14a6:	86 81       	ldd	r24, Z+6	; 0x06
    14a8:	97 81       	ldd	r25, Z+7	; 0x07
    14aa:	9b 87       	std	Y+11, r25	; 0x0b
    14ac:	8a 87       	std	Y+10, r24	; 0x0a
    14ae:	d5 01       	movw	r26, r10
    14b0:	4d 91       	ld	r20, X+
    14b2:	5c 91       	ld	r21, X
    14b4:	22 81       	ldd	r18, Z+2	; 0x02
    14b6:	33 81       	ldd	r19, Z+3	; 0x03
    14b8:	80 85       	ldd	r24, Z+8	; 0x08
    14ba:	91 85       	ldd	r25, Z+9	; 0x09
    14bc:	01 97       	sbiw	r24, 0x01	; 1
    14be:	1c 01       	movw	r2, r24
    14c0:	37 ff       	sbrs	r19, 7
    14c2:	02 c0       	rjmp	.+4      	; 0x14c8 <__cvt_u+0x48>
    14c4:	21 e0       	ldi	r18, 0x01	; 1
    14c6:	30 e0       	ldi	r19, 0x00	; 0
    14c8:	ea 85       	ldd	r30, Y+10	; 0x0a
    14ca:	fb 85       	ldd	r31, Y+11	; 0x0b
    14cc:	e8 0f       	add	r30, r24
    14ce:	f9 1f       	adc	r31, r25
    14d0:	10 82       	st	Z, r1
    14d2:	47 01       	movw	r8, r14
    14d4:	e1 e0       	ldi	r30, 0x01	; 1
    14d6:	f0 e0       	ldi	r31, 0x00	; 0
    14d8:	fa 83       	std	Y+2, r31	; 0x02
    14da:	e9 83       	std	Y+1, r30	; 0x01
    14dc:	c9 01       	movw	r24, r18
    14de:	8e 19       	sub	r24, r14
    14e0:	9f 09       	sbc	r25, r15
    14e2:	9e 87       	std	Y+14, r25	; 0x0e
    14e4:	8d 87       	std	Y+13, r24	; 0x0d
    14e6:	da 01       	movw	r26, r20
    14e8:	a2 70       	andi	r26, 0x02	; 2
    14ea:	bb 27       	eor	r27, r27
    14ec:	b8 8b       	std	Y+16, r27	; 0x10
    14ee:	af 87       	std	Y+15, r26	; 0x0f
    14f0:	b8 85       	ldd	r27, Y+8	; 0x08
    14f2:	bb 0f       	add	r27, r27
    14f4:	bb 0b       	sbc	r27, r27
    14f6:	b9 8b       	std	Y+17, r27	; 0x11
    14f8:	12 14       	cp	r1, r2
    14fa:	13 04       	cpc	r1, r3
    14fc:	74 f0       	brlt	.+28     	; 0x151a <__cvt_u+0x9a>
    14fe:	a9 81       	ldd	r26, Y+1	; 0x01
    1500:	ba 81       	ldd	r27, Y+2	; 0x02
    1502:	ab 2b       	or	r26, r27
    1504:	09 f0       	breq	.+2      	; 0x1508 <__cvt_u+0x88>
    1506:	5c c0       	rjmp	.+184    	; 0x15c0 <__cvt_u+0x140>
    1508:	ae 81       	ldd	r26, Y+6	; 0x06
    150a:	bf 81       	ldd	r27, Y+7	; 0x07
    150c:	8d 91       	ld	r24, X+
    150e:	9c 91       	ld	r25, X
    1510:	11 97       	sbiw	r26, 0x01	; 1
    1512:	8f 7e       	andi	r24, 0xEF	; 239
    1514:	8d 93       	st	X+, r24
    1516:	9c 93       	st	X, r25
    1518:	53 c0       	rjmp	.+166    	; 0x15c0 <__cvt_u+0x140>
    151a:	2a 89       	ldd	r18, Y+18	; 0x12
    151c:	3b 81       	ldd	r19, Y+3	; 0x03
    151e:	4c 81       	ldd	r20, Y+4	; 0x04
    1520:	57 2d       	mov	r21, r7
    1522:	66 2d       	mov	r22, r6
    1524:	75 2d       	mov	r23, r5
    1526:	84 2d       	mov	r24, r4
    1528:	9d 81       	ldd	r25, Y+5	; 0x05
    152a:	a0 e0       	ldi	r26, 0x00	; 0
    152c:	0e 94 b0 12 	call	0x2560	; 0x2560 <__cmpdi2_s8>
    1530:	b1 f1       	breq	.+108    	; 0x159e <__cvt_u+0x11e>
    1532:	e1 e0       	ldi	r30, 0x01	; 1
    1534:	2e 1a       	sub	r2, r30
    1536:	31 08       	sbc	r3, r1
    1538:	fc 85       	ldd	r31, Y+12	; 0x0c
    153a:	f9 87       	std	Y+9, r31	; 0x09
    153c:	af 2e       	mov	r10, r31
    153e:	b8 84       	ldd	r11, Y+8	; 0x08
    1540:	c9 88       	ldd	r12, Y+17	; 0x11
    1542:	dc 2c       	mov	r13, r12
    1544:	ec 2c       	mov	r14, r12
    1546:	fc 2c       	mov	r15, r12
    1548:	0c 2d       	mov	r16, r12
    154a:	1c 2d       	mov	r17, r12
    154c:	2a 89       	ldd	r18, Y+18	; 0x12
    154e:	3b 81       	ldd	r19, Y+3	; 0x03
    1550:	4c 81       	ldd	r20, Y+4	; 0x04
    1552:	57 2d       	mov	r21, r7
    1554:	66 2d       	mov	r22, r6
    1556:	75 2d       	mov	r23, r5
    1558:	84 2d       	mov	r24, r4
    155a:	9d 81       	ldd	r25, Y+5	; 0x05
    155c:	0e 94 88 12 	call	0x2510	; 0x2510 <__umoddi3>
    1560:	c9 01       	movw	r24, r18
    1562:	29 83       	std	Y+1, r18	; 0x01
    1564:	9a 83       	std	Y+2, r25	; 0x02
    1566:	ea 85       	ldd	r30, Y+10	; 0x0a
    1568:	fb 85       	ldd	r31, Y+11	; 0x0b
    156a:	e2 0d       	add	r30, r2
    156c:	f3 1d       	adc	r31, r3
    156e:	80 5d       	subi	r24, 0xD0	; 208
    1570:	80 83       	st	Z, r24
    1572:	81 e0       	ldi	r24, 0x01	; 1
    1574:	88 1a       	sub	r8, r24
    1576:	91 08       	sbc	r9, r1
    1578:	2a 89       	ldd	r18, Y+18	; 0x12
    157a:	3b 81       	ldd	r19, Y+3	; 0x03
    157c:	4c 81       	ldd	r20, Y+4	; 0x04
    157e:	57 2d       	mov	r21, r7
    1580:	66 2d       	mov	r22, r6
    1582:	75 2d       	mov	r23, r5
    1584:	84 2d       	mov	r24, r4
    1586:	9d 81       	ldd	r25, Y+5	; 0x05
    1588:	0e 94 8a 12 	call	0x2514	; 0x2514 <__udivdi3>
    158c:	2a 8b       	std	Y+18, r18	; 0x12
    158e:	3b 83       	std	Y+3, r19	; 0x03
    1590:	4c 83       	std	Y+4, r20	; 0x04
    1592:	75 2e       	mov	r7, r21
    1594:	66 2e       	mov	r6, r22
    1596:	57 2e       	mov	r5, r23
    1598:	48 2e       	mov	r4, r24
    159a:	9d 83       	std	Y+5, r25	; 0x05
    159c:	ad cf       	rjmp	.-166    	; 0x14f8 <__cvt_u+0x78>
    159e:	8d 85       	ldd	r24, Y+13	; 0x0d
    15a0:	9e 85       	ldd	r25, Y+14	; 0x0e
    15a2:	88 0d       	add	r24, r8
    15a4:	99 1d       	adc	r25, r9
    15a6:	18 16       	cp	r1, r24
    15a8:	19 06       	cpc	r1, r25
    15aa:	1c f2       	brlt	.-122    	; 0x1532 <__cvt_u+0xb2>
    15ac:	18 14       	cp	r1, r8
    15ae:	19 04       	cpc	r1, r9
    15b0:	0c f0       	brlt	.+2      	; 0x15b4 <__cvt_u+0x134>
    15b2:	a5 cf       	rjmp	.-182    	; 0x14fe <__cvt_u+0x7e>
    15b4:	ef 85       	ldd	r30, Y+15	; 0x0f
    15b6:	f8 89       	ldd	r31, Y+16	; 0x10
    15b8:	ef 2b       	or	r30, r31
    15ba:	09 f0       	breq	.+2      	; 0x15be <__cvt_u+0x13e>
    15bc:	ba cf       	rjmp	.-140    	; 0x1532 <__cvt_u+0xb2>
    15be:	9f cf       	rjmp	.-194    	; 0x14fe <__cvt_u+0x7e>
    15c0:	c1 01       	movw	r24, r2
    15c2:	62 96       	adiw	r28, 0x12	; 18
    15c4:	e2 e1       	ldi	r30, 0x12	; 18
    15c6:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__epilogue_restores__>

Disassembly of section .text.__fmt_u:

00001a04 <__fmt_u>:
    1a04:	a2 e0       	ldi	r26, 0x02	; 2
    1a06:	b0 e0       	ldi	r27, 0x00	; 0
    1a08:	e8 e0       	ldi	r30, 0x08	; 8
    1a0a:	fd e0       	ldi	r31, 0x0D	; 13
    1a0c:	0c 94 9d 11 	jmp	0x233a	; 0x233a <__prologue_saves__>
    1a10:	3c 01       	movw	r6, r24
    1a12:	4b 01       	movw	r8, r22
    1a14:	fa 01       	movw	r30, r20
    1a16:	db 01       	movw	r26, r22
    1a18:	12 96       	adiw	r26, 0x02	; 2
    1a1a:	2d 91       	ld	r18, X+
    1a1c:	3c 91       	ld	r19, X
    1a1e:	13 97       	sbiw	r26, 0x03	; 3
    1a20:	14 96       	adiw	r26, 0x04	; 4
    1a22:	4d 90       	ld	r4, X+
    1a24:	5c 90       	ld	r5, X
    1a26:	15 97       	sbiw	r26, 0x05	; 5
    1a28:	8d 91       	ld	r24, X+
    1a2a:	9c 91       	ld	r25, X
    1a2c:	11 97       	sbiw	r26, 0x01	; 1
    1a2e:	9a 83       	std	Y+2, r25	; 0x02
    1a30:	89 83       	std	Y+1, r24	; 0x01
    1a32:	16 96       	adiw	r26, 0x06	; 6
    1a34:	2d 90       	ld	r2, X+
    1a36:	3c 90       	ld	r3, X
    1a38:	17 97       	sbiw	r26, 0x07	; 7
    1a3a:	37 fd       	sbrc	r19, 7
    1a3c:	03 c0       	rjmp	.+6      	; 0x1a44 <__fmt_u+0x40>
    1a3e:	8d 7f       	andi	r24, 0xFD	; 253
    1a40:	9a 83       	std	Y+2, r25	; 0x02
    1a42:	89 83       	std	Y+1, r24	; 0x01
    1a44:	00 81       	ld	r16, Z
    1a46:	11 81       	ldd	r17, Z+1	; 0x01
    1a48:	22 81       	ldd	r18, Z+2	; 0x02
    1a4a:	33 81       	ldd	r19, Z+3	; 0x03
    1a4c:	44 81       	ldd	r20, Z+4	; 0x04
    1a4e:	55 81       	ldd	r21, Z+5	; 0x05
    1a50:	66 81       	ldd	r22, Z+6	; 0x06
    1a52:	77 81       	ldd	r23, Z+7	; 0x07
    1a54:	fe 01       	movw	r30, r28
    1a56:	31 96       	adiw	r30, 0x01	; 1
    1a58:	5f 01       	movw	r10, r30
    1a5a:	8a e0       	ldi	r24, 0x0A	; 10
    1a5c:	c8 2e       	mov	r12, r24
    1a5e:	d1 2c       	mov	r13, r1
    1a60:	72 01       	movw	r14, r4
    1a62:	c4 01       	movw	r24, r8
    1a64:	0e 94 40 0a 	call	0x1480	; 0x1480 <__cvt_u>
    1a68:	e9 80       	ldd	r14, Y+1	; 0x01
    1a6a:	fa 80       	ldd	r15, Y+2	; 0x02
    1a6c:	d4 01       	movw	r26, r8
    1a6e:	18 96       	adiw	r26, 0x08	; 8
    1a70:	2d 91       	ld	r18, X+
    1a72:	3c 91       	ld	r19, X
    1a74:	19 97       	sbiw	r26, 0x09	; 9
    1a76:	21 50       	subi	r18, 0x01	; 1
    1a78:	31 09       	sbc	r19, r1
    1a7a:	28 1b       	sub	r18, r24
    1a7c:	39 0b       	sbc	r19, r25
    1a7e:	82 0d       	add	r24, r2
    1a80:	93 1d       	adc	r25, r3
    1a82:	ac 01       	movw	r20, r24
    1a84:	60 e8       	ldi	r22, 0x80	; 128
    1a86:	82 01       	movw	r16, r4
    1a88:	c3 01       	movw	r24, r6
    1a8a:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__pad>
    1a8e:	9c 01       	movw	r18, r24
    1a90:	f3 01       	movw	r30, r6
    1a92:	80 81       	ld	r24, Z
    1a94:	91 81       	ldd	r25, Z+1	; 0x01
    1a96:	90 ff       	sbrs	r25, 0
    1a98:	08 c0       	rjmp	.+16     	; 0x1aaa <__fmt_u+0xa6>
    1a9a:	d4 01       	movw	r26, r8
    1a9c:	12 96       	adiw	r26, 0x02	; 2
    1a9e:	8d 91       	ld	r24, X+
    1aa0:	9c 91       	ld	r25, X
    1aa2:	13 97       	sbiw	r26, 0x03	; 3
    1aa4:	82 17       	cp	r24, r18
    1aa6:	93 07       	cpc	r25, r19
    1aa8:	0c f4       	brge	.+2      	; 0x1aac <__fmt_u+0xa8>
    1aaa:	c9 01       	movw	r24, r18
    1aac:	22 96       	adiw	r28, 0x02	; 2
    1aae:	e2 e1       	ldi	r30, 0x12	; 18
    1ab0:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__epilogue_restores__>

Disassembly of section .text.__fmt_x:

00000c9c <__fmt_x>:
 c9c:	a4 e1       	ldi	r26, 0x14	; 20
 c9e:	b0 e0       	ldi	r27, 0x00	; 0
 ca0:	e4 e5       	ldi	r30, 0x54	; 84
 ca2:	f6 e0       	ldi	r31, 0x06	; 6
 ca4:	0c 94 9d 11 	jmp	0x233a	; 0x233a <__prologue_saves__>
 ca8:	98 87       	std	Y+8, r25	; 0x08
 caa:	8f 83       	std	Y+7, r24	; 0x07
 cac:	7a 83       	std	Y+2, r23	; 0x02
 cae:	69 83       	std	Y+1, r22	; 0x01
 cb0:	5c 8b       	std	Y+20, r21	; 0x14
 cb2:	4b 8b       	std	Y+19, r20	; 0x13
 cb4:	12 2f       	mov	r17, r18
 cb6:	db 01       	movw	r26, r22
 cb8:	12 96       	adiw	r26, 0x02	; 2
 cba:	ed 91       	ld	r30, X+
 cbc:	fc 91       	ld	r31, X
 cbe:	13 97       	sbiw	r26, 0x03	; 3
 cc0:	14 96       	adiw	r26, 0x04	; 4
 cc2:	2d 91       	ld	r18, X+
 cc4:	3c 91       	ld	r19, X
 cc6:	15 97       	sbiw	r26, 0x05	; 5
 cc8:	3e 83       	std	Y+6, r19	; 0x06
 cca:	2d 83       	std	Y+5, r18	; 0x05
 ccc:	ed 90       	ld	r14, X+
 cce:	fc 90       	ld	r15, X
 cd0:	11 97       	sbiw	r26, 0x01	; 1
 cd2:	16 96       	adiw	r26, 0x06	; 6
 cd4:	2d 90       	ld	r2, X+
 cd6:	3c 90       	ld	r3, X
 cd8:	17 97       	sbiw	r26, 0x07	; 7
 cda:	f7 fd       	sbrc	r31, 7
 cdc:	03 c0       	rjmp	.+6      	; 0xce4 <__fmt_x+0x48>
 cde:	e8 94       	clt
 ce0:	e1 f8       	bld	r14, 1
 ce2:	02 c0       	rjmp	.+4      	; 0xce8 <__fmt_x+0x4c>
 ce4:	e1 e0       	ldi	r30, 0x01	; 1
 ce6:	f0 e0       	ldi	r31, 0x00	; 0
 ce8:	c7 01       	movw	r24, r14
 cea:	80 71       	andi	r24, 0x10	; 16
 cec:	99 27       	eor	r25, r25
 cee:	9a 87       	std	Y+10, r25	; 0x0a
 cf0:	89 87       	std	Y+9, r24	; 0x09
 cf2:	e4 fe       	sbrs	r14, 4
 cf4:	1f c0       	rjmp	.+62     	; 0xd34 <__fmt_x+0x98>
 cf6:	ab 89       	ldd	r26, Y+19	; 0x13
 cf8:	bc 89       	ldd	r27, Y+20	; 0x14
 cfa:	2c 91       	ld	r18, X
 cfc:	11 96       	adiw	r26, 0x01	; 1
 cfe:	3c 91       	ld	r19, X
 d00:	11 97       	sbiw	r26, 0x01	; 1
 d02:	12 96       	adiw	r26, 0x02	; 2
 d04:	4c 91       	ld	r20, X
 d06:	12 97       	sbiw	r26, 0x02	; 2
 d08:	13 96       	adiw	r26, 0x03	; 3
 d0a:	5c 91       	ld	r21, X
 d0c:	13 97       	sbiw	r26, 0x03	; 3
 d0e:	14 96       	adiw	r26, 0x04	; 4
 d10:	6c 91       	ld	r22, X
 d12:	14 97       	sbiw	r26, 0x04	; 4
 d14:	15 96       	adiw	r26, 0x05	; 5
 d16:	7c 91       	ld	r23, X
 d18:	15 97       	sbiw	r26, 0x05	; 5
 d1a:	16 96       	adiw	r26, 0x06	; 6
 d1c:	8c 91       	ld	r24, X
 d1e:	16 97       	sbiw	r26, 0x06	; 6
 d20:	17 96       	adiw	r26, 0x07	; 7
 d22:	9c 91       	ld	r25, X
 d24:	a0 e0       	ldi	r26, 0x00	; 0
 d26:	0e 94 b0 12 	call	0x2560	; 0x2560 <__cmpdi2_s8>
 d2a:	21 f0       	breq	.+8      	; 0xd34 <__fmt_x+0x98>
 d2c:	8d 81       	ldd	r24, Y+5	; 0x05
 d2e:	9e 81       	ldd	r25, Y+6	; 0x06
 d30:	02 97       	sbiw	r24, 0x02	; 2
 d32:	02 c0       	rjmp	.+4      	; 0xd38 <__fmt_x+0x9c>
 d34:	8d 81       	ldd	r24, Y+5	; 0x05
 d36:	9e 81       	ldd	r25, Y+6	; 0x06
 d38:	97 01       	movw	r18, r14
 d3a:	28 70       	andi	r18, 0x08	; 8
 d3c:	33 27       	eor	r19, r19
 d3e:	3c 87       	std	Y+12, r19	; 0x0c
 d40:	2b 87       	std	Y+11, r18	; 0x0b
 d42:	e3 fc       	sbrc	r14, 3
 d44:	01 97       	sbiw	r24, 0x01	; 1
 d46:	ab 89       	ldd	r26, Y+19	; 0x13
 d48:	bc 89       	ldd	r27, Y+20	; 0x14
 d4a:	4c 90       	ld	r4, X
 d4c:	11 96       	adiw	r26, 0x01	; 1
 d4e:	5c 90       	ld	r5, X
 d50:	11 97       	sbiw	r26, 0x01	; 1
 d52:	12 96       	adiw	r26, 0x02	; 2
 d54:	6c 90       	ld	r6, X
 d56:	12 97       	sbiw	r26, 0x02	; 2
 d58:	13 96       	adiw	r26, 0x03	; 3
 d5a:	7c 90       	ld	r7, X
 d5c:	13 97       	sbiw	r26, 0x03	; 3
 d5e:	14 96       	adiw	r26, 0x04	; 4
 d60:	8c 90       	ld	r8, X
 d62:	14 97       	sbiw	r26, 0x04	; 4
 d64:	15 96       	adiw	r26, 0x05	; 5
 d66:	9c 90       	ld	r9, X
 d68:	15 97       	sbiw	r26, 0x05	; 5
 d6a:	16 96       	adiw	r26, 0x06	; 6
 d6c:	ac 90       	ld	r10, X
 d6e:	16 97       	sbiw	r26, 0x06	; 6
 d70:	17 96       	adiw	r26, 0x07	; 7
 d72:	bc 90       	ld	r11, X
 d74:	a9 81       	ldd	r26, Y+1	; 0x01
 d76:	ba 81       	ldd	r27, Y+2	; 0x02
 d78:	18 96       	adiw	r26, 0x08	; 8
 d7a:	cd 90       	ld	r12, X+
 d7c:	dc 90       	ld	r13, X
 d7e:	19 97       	sbiw	r26, 0x09	; 9
 d80:	b1 e0       	ldi	r27, 0x01	; 1
 d82:	cb 1a       	sub	r12, r27
 d84:	d1 08       	sbc	r13, r1
 d86:	d1 01       	movw	r26, r2
 d88:	ac 0d       	add	r26, r12
 d8a:	bd 1d       	adc	r27, r13
 d8c:	1c 92       	st	X, r1
 d8e:	9c 83       	std	Y+4, r25	; 0x04
 d90:	8b 83       	std	Y+3, r24	; 0x03
 d92:	9f 01       	movw	r18, r30
 d94:	28 1b       	sub	r18, r24
 d96:	39 0b       	sbc	r19, r25
 d98:	3e 87       	std	Y+14, r19	; 0x0e
 d9a:	2d 87       	std	Y+13, r18	; 0x0d
 d9c:	c7 01       	movw	r24, r14
 d9e:	82 70       	andi	r24, 0x02	; 2
 da0:	99 27       	eor	r25, r25
 da2:	98 8b       	std	Y+16, r25	; 0x10
 da4:	8f 87       	std	Y+15, r24	; 0x0f
 da6:	81 2f       	mov	r24, r17
 da8:	01 2e       	mov	r0, r17
 daa:	00 0c       	add	r0, r0
 dac:	99 0b       	sbc	r25, r25
 dae:	dc 01       	movw	r26, r24
 db0:	a1 54       	subi	r26, 0x41	; 65
 db2:	b1 09       	sbc	r27, r1
 db4:	ba 8b       	std	Y+18, r27	; 0x12
 db6:	a9 8b       	std	Y+17, r26	; 0x11
 db8:	32 e0       	ldi	r19, 0x02	; 2
 dba:	c3 16       	cp	r12, r19
 dbc:	d1 04       	cpc	r13, r1
 dbe:	34 f4       	brge	.+12     	; 0xdcc <__fmt_x+0x130>
 dc0:	89 85       	ldd	r24, Y+9	; 0x09
 dc2:	9a 85       	ldd	r25, Y+10	; 0x0a
 dc4:	89 2b       	or	r24, r25
 dc6:	09 f0       	breq	.+2      	; 0xdca <__fmt_x+0x12e>
 dc8:	4c c0       	rjmp	.+152    	; 0xe62 <__fmt_x+0x1c6>
 dca:	73 c0       	rjmp	.+230    	; 0xeb2 <__fmt_x+0x216>
 dcc:	92 01       	movw	r18, r4
 dce:	a3 01       	movw	r20, r6
 dd0:	b4 01       	movw	r22, r8
 dd2:	c5 01       	movw	r24, r10
 dd4:	a0 e0       	ldi	r26, 0x00	; 0
 dd6:	0e 94 b0 12 	call	0x2560	; 0x2560 <__cmpdi2_s8>
 dda:	81 f1       	breq	.+96     	; 0xe3c <__fmt_x+0x1a0>
 ddc:	b1 e0       	ldi	r27, 0x01	; 1
 dde:	cb 1a       	sub	r12, r27
 de0:	d1 08       	sbc	r13, r1
 de2:	c2 01       	movw	r24, r4
 de4:	8f 70       	andi	r24, 0x0F	; 15
 de6:	99 27       	eor	r25, r25
 de8:	8a 30       	cpi	r24, 0x0A	; 10
 dea:	91 05       	cpc	r25, r1
 dec:	14 f4       	brge	.+4      	; 0xdf2 <__fmt_x+0x156>
 dee:	c0 96       	adiw	r24, 0x30	; 48
 df0:	02 c0       	rjmp	.+4      	; 0xdf6 <__fmt_x+0x15a>
 df2:	89 5a       	subi	r24, 0xA9	; 169
 df4:	9f 4f       	sbci	r25, 0xFF	; 255
 df6:	e9 89       	ldd	r30, Y+17	; 0x11
 df8:	fa 89       	ldd	r31, Y+18	; 0x12
 dfa:	7a 97       	sbiw	r30, 0x1a	; 26
 dfc:	48 f4       	brcc	.+18     	; 0xe10 <__fmt_x+0x174>
 dfe:	9c 01       	movw	r18, r24
 e00:	20 62       	ori	r18, 0x20	; 32
 e02:	21 56       	subi	r18, 0x61	; 97
 e04:	31 09       	sbc	r19, r1
 e06:	2a 31       	cpi	r18, 0x1A	; 26
 e08:	31 05       	cpc	r19, r1
 e0a:	10 f4       	brcc	.+4      	; 0xe10 <__fmt_x+0x174>
 e0c:	0e 94 db 12 	call	0x25b6	; 0x25b6 <toupper>
 e10:	f1 01       	movw	r30, r2
 e12:	ec 0d       	add	r30, r12
 e14:	fd 1d       	adc	r31, r13
 e16:	80 83       	st	Z, r24
 e18:	2b 81       	ldd	r18, Y+3	; 0x03
 e1a:	3c 81       	ldd	r19, Y+4	; 0x04
 e1c:	21 50       	subi	r18, 0x01	; 1
 e1e:	31 09       	sbc	r19, r1
 e20:	3c 83       	std	Y+4, r19	; 0x04
 e22:	2b 83       	std	Y+3, r18	; 0x03
 e24:	92 01       	movw	r18, r4
 e26:	a3 01       	movw	r20, r6
 e28:	b4 01       	movw	r22, r8
 e2a:	c5 01       	movw	r24, r10
 e2c:	04 e0       	ldi	r16, 0x04	; 4
 e2e:	0e 94 65 11 	call	0x22ca	; 0x22ca <__lshrdi3>
 e32:	29 01       	movw	r4, r18
 e34:	3a 01       	movw	r6, r20
 e36:	4b 01       	movw	r8, r22
 e38:	5c 01       	movw	r10, r24
 e3a:	be cf       	rjmp	.-132    	; 0xdb8 <__fmt_x+0x11c>
 e3c:	8d 85       	ldd	r24, Y+13	; 0x0d
 e3e:	9e 85       	ldd	r25, Y+14	; 0x0e
 e40:	ab 81       	ldd	r26, Y+3	; 0x03
 e42:	bc 81       	ldd	r27, Y+4	; 0x04
 e44:	8a 0f       	add	r24, r26
 e46:	9b 1f       	adc	r25, r27
 e48:	18 16       	cp	r1, r24
 e4a:	19 06       	cpc	r1, r25
 e4c:	3c f2       	brlt	.-114    	; 0xddc <__fmt_x+0x140>
 e4e:	1a 16       	cp	r1, r26
 e50:	1b 06       	cpc	r1, r27
 e52:	0c f0       	brlt	.+2      	; 0xe56 <__fmt_x+0x1ba>
 e54:	b5 cf       	rjmp	.-150    	; 0xdc0 <__fmt_x+0x124>
 e56:	ef 85       	ldd	r30, Y+15	; 0x0f
 e58:	f8 89       	ldd	r31, Y+16	; 0x10
 e5a:	ef 2b       	or	r30, r31
 e5c:	09 f0       	breq	.+2      	; 0xe60 <__fmt_x+0x1c4>
 e5e:	be cf       	rjmp	.-132    	; 0xddc <__fmt_x+0x140>
 e60:	af cf       	rjmp	.-162    	; 0xdc0 <__fmt_x+0x124>
 e62:	ab 89       	ldd	r26, Y+19	; 0x13
 e64:	bc 89       	ldd	r27, Y+20	; 0x14
 e66:	2c 91       	ld	r18, X
 e68:	11 96       	adiw	r26, 0x01	; 1
 e6a:	3c 91       	ld	r19, X
 e6c:	11 97       	sbiw	r26, 0x01	; 1
 e6e:	12 96       	adiw	r26, 0x02	; 2
 e70:	4c 91       	ld	r20, X
 e72:	12 97       	sbiw	r26, 0x02	; 2
 e74:	13 96       	adiw	r26, 0x03	; 3
 e76:	5c 91       	ld	r21, X
 e78:	13 97       	sbiw	r26, 0x03	; 3
 e7a:	14 96       	adiw	r26, 0x04	; 4
 e7c:	6c 91       	ld	r22, X
 e7e:	14 97       	sbiw	r26, 0x04	; 4
 e80:	15 96       	adiw	r26, 0x05	; 5
 e82:	7c 91       	ld	r23, X
 e84:	15 97       	sbiw	r26, 0x05	; 5
 e86:	16 96       	adiw	r26, 0x06	; 6
 e88:	8c 91       	ld	r24, X
 e8a:	16 97       	sbiw	r26, 0x06	; 6
 e8c:	17 96       	adiw	r26, 0x07	; 7
 e8e:	9c 91       	ld	r25, X
 e90:	a0 e0       	ldi	r26, 0x00	; 0
 e92:	0e 94 b0 12 	call	0x2560	; 0x2560 <__cmpdi2_s8>
 e96:	69 f0       	breq	.+26     	; 0xeb2 <__fmt_x+0x216>
 e98:	f1 01       	movw	r30, r2
 e9a:	ec 0d       	add	r30, r12
 e9c:	fd 1d       	adc	r31, r13
 e9e:	31 97       	sbiw	r30, 0x01	; 1
 ea0:	10 83       	st	Z, r17
 ea2:	b2 e0       	ldi	r27, 0x02	; 2
 ea4:	cb 1a       	sub	r12, r27
 ea6:	d1 08       	sbc	r13, r1
 ea8:	f1 01       	movw	r30, r2
 eaa:	ec 0d       	add	r30, r12
 eac:	fd 1d       	adc	r31, r13
 eae:	80 e3       	ldi	r24, 0x30	; 48
 eb0:	80 83       	st	Z, r24
 eb2:	eb 85       	ldd	r30, Y+11	; 0x0b
 eb4:	fc 85       	ldd	r31, Y+12	; 0x0c
 eb6:	ef 2b       	or	r30, r31
 eb8:	41 f0       	breq	.+16     	; 0xeca <__fmt_x+0x22e>
 eba:	f1 e0       	ldi	r31, 0x01	; 1
 ebc:	cf 1a       	sub	r12, r31
 ebe:	d1 08       	sbc	r13, r1
 ec0:	f1 01       	movw	r30, r2
 ec2:	ec 0d       	add	r30, r12
 ec4:	fd 1d       	adc	r31, r13
 ec6:	80 e2       	ldi	r24, 0x20	; 32
 ec8:	80 83       	st	Z, r24
 eca:	a9 81       	ldd	r26, Y+1	; 0x01
 ecc:	ba 81       	ldd	r27, Y+2	; 0x02
 ece:	18 96       	adiw	r26, 0x08	; 8
 ed0:	2d 91       	ld	r18, X+
 ed2:	3c 91       	ld	r19, X
 ed4:	19 97       	sbiw	r26, 0x09	; 9
 ed6:	21 50       	subi	r18, 0x01	; 1
 ed8:	31 09       	sbc	r19, r1
 eda:	2c 19       	sub	r18, r12
 edc:	3d 09       	sbc	r19, r13
 ede:	c2 0c       	add	r12, r2
 ee0:	d3 1c       	adc	r13, r3
 ee2:	a6 01       	movw	r20, r12
 ee4:	60 e8       	ldi	r22, 0x80	; 128
 ee6:	0d 81       	ldd	r16, Y+5	; 0x05
 ee8:	1e 81       	ldd	r17, Y+6	; 0x06
 eea:	8f 81       	ldd	r24, Y+7	; 0x07
 eec:	98 85       	ldd	r25, Y+8	; 0x08
 eee:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__pad>
 ef2:	9c 01       	movw	r18, r24
 ef4:	ef 81       	ldd	r30, Y+7	; 0x07
 ef6:	f8 85       	ldd	r31, Y+8	; 0x08
 ef8:	80 81       	ld	r24, Z
 efa:	91 81       	ldd	r25, Z+1	; 0x01
 efc:	90 ff       	sbrs	r25, 0
 efe:	09 c0       	rjmp	.+18     	; 0xf12 <__fmt_x+0x276>
 f00:	a9 81       	ldd	r26, Y+1	; 0x01
 f02:	ba 81       	ldd	r27, Y+2	; 0x02
 f04:	12 96       	adiw	r26, 0x02	; 2
 f06:	8d 91       	ld	r24, X+
 f08:	9c 91       	ld	r25, X
 f0a:	13 97       	sbiw	r26, 0x03	; 3
 f0c:	82 17       	cp	r24, r18
 f0e:	93 07       	cpc	r25, r19
 f10:	0c f4       	brge	.+2      	; 0xf14 <__fmt_x+0x278>
 f12:	c9 01       	movw	r24, r18
 f14:	64 96       	adiw	r28, 0x14	; 20
 f16:	e2 e1       	ldi	r30, 0x12	; 18
 f18:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__epilogue_restores__>

Disassembly of section .text.__pop_float:

00002286 <__pop_float>:
    2286:	fa 01       	movw	r30, r20
    2288:	60 38       	cpi	r22, 0x80	; 128
    228a:	71 05       	cpc	r23, r1
    228c:	cc f0       	brlt	.+50     	; 0x22c0 <__pop_float+0x3a>
    228e:	62 38       	cpi	r22, 0x82	; 130
    2290:	71 05       	cpc	r23, r1
    2292:	1c f0       	brlt	.+6      	; 0x229a <__pop_float+0x14>
    2294:	63 38       	cpi	r22, 0x83	; 131
    2296:	71 05       	cpc	r23, r1
    2298:	99 f4       	brne	.+38     	; 0x22c0 <__pop_float+0x3a>
    229a:	a0 81       	ld	r26, Z
    229c:	b1 81       	ldd	r27, Z+1	; 0x01
    229e:	9d 01       	movw	r18, r26
    22a0:	2c 5f       	subi	r18, 0xFC	; 252
    22a2:	3f 4f       	sbci	r19, 0xFF	; 255
    22a4:	31 83       	std	Z+1, r19	; 0x01
    22a6:	20 83       	st	Z, r18
    22a8:	4d 91       	ld	r20, X+
    22aa:	5d 91       	ld	r21, X+
    22ac:	6d 91       	ld	r22, X+
    22ae:	7c 91       	ld	r23, X
    22b0:	fc 01       	movw	r30, r24
    22b2:	40 83       	st	Z, r20
    22b4:	51 83       	std	Z+1, r21	; 0x01
    22b6:	62 83       	std	Z+2, r22	; 0x02
    22b8:	73 83       	std	Z+3, r23	; 0x03
    22ba:	81 e0       	ldi	r24, 0x01	; 1
    22bc:	90 e0       	ldi	r25, 0x00	; 0
    22be:	08 95       	ret
    22c0:	80 e0       	ldi	r24, 0x00	; 0
    22c2:	90 e0       	ldi	r25, 0x00	; 0
    22c4:	08 95       	ret

Disassembly of section .text.__pop_int:

0000130e <__pop_int>:
    130e:	0f 93       	push	r16
    1310:	1f 93       	push	r17
    1312:	cf 93       	push	r28
    1314:	df 93       	push	r29
    1316:	fc 01       	movw	r30, r24
    1318:	d9 01       	movw	r26, r18
    131a:	68 38       	cpi	r22, 0x88	; 136
    131c:	71 05       	cpc	r23, r1
    131e:	31 f1       	breq	.+76     	; 0x136c <__pop_int+0x5e>
    1320:	94 f4       	brge	.+36     	; 0x1346 <__pop_int+0x38>
    1322:	61 38       	cpi	r22, 0x81	; 129
    1324:	71 05       	cpc	r23, r1
    1326:	b1 f1       	breq	.+108    	; 0x1394 <__pop_int+0x86>
    1328:	2c f4       	brge	.+10     	; 0x1334 <__pop_int+0x26>
    132a:	60 38       	cpi	r22, 0x80	; 128
    132c:	71 05       	cpc	r23, r1
    132e:	09 f4       	brne	.+2      	; 0x1332 <__pop_int+0x24>
    1330:	78 c0       	rjmp	.+240    	; 0x1422 <__pop_int+0x114>
    1332:	9f c0       	rjmp	.+318    	; 0x1472 <__pop_int+0x164>
    1334:	62 38       	cpi	r22, 0x82	; 130
    1336:	71 05       	cpc	r23, r1
    1338:	09 f4       	brne	.+2      	; 0x133c <__pop_int+0x2e>
    133a:	59 c0       	rjmp	.+178    	; 0x13ee <__pop_int+0xe0>
    133c:	64 38       	cpi	r22, 0x84	; 132
    133e:	71 05       	cpc	r23, r1
    1340:	09 f4       	brne	.+2      	; 0x1344 <__pop_int+0x36>
    1342:	6f c0       	rjmp	.+222    	; 0x1422 <__pop_int+0x114>
    1344:	96 c0       	rjmp	.+300    	; 0x1472 <__pop_int+0x164>
    1346:	60 3a       	cpi	r22, 0xA0	; 160
    1348:	71 05       	cpc	r23, r1
    134a:	09 f4       	brne	.+2      	; 0x134e <__pop_int+0x40>
    134c:	48 c0       	rjmp	.+144    	; 0x13de <__pop_int+0xd0>
    134e:	2c f4       	brge	.+10     	; 0x135a <__pop_int+0x4c>
    1350:	60 39       	cpi	r22, 0x90	; 144
    1352:	71 05       	cpc	r23, r1
    1354:	09 f4       	brne	.+2      	; 0x1358 <__pop_int+0x4a>
    1356:	4b c0       	rjmp	.+150    	; 0x13ee <__pop_int+0xe0>
    1358:	8c c0       	rjmp	.+280    	; 0x1472 <__pop_int+0x164>
    135a:	60 3c       	cpi	r22, 0xC0	; 192
    135c:	71 05       	cpc	r23, r1
    135e:	09 f4       	brne	.+2      	; 0x1362 <__pop_int+0x54>
    1360:	76 c0       	rjmp	.+236    	; 0x144e <__pop_int+0x140>
    1362:	60 3f       	cpi	r22, 0xF0	; 240
    1364:	71 05       	cpc	r23, r1
    1366:	09 f4       	brne	.+2      	; 0x136a <__pop_int+0x5c>
    1368:	72 c0       	rjmp	.+228    	; 0x144e <__pop_int+0x140>
    136a:	83 c0       	rjmp	.+262    	; 0x1472 <__pop_int+0x164>
    136c:	cd 91       	ld	r28, X+
    136e:	dc 91       	ld	r29, X
    1370:	11 97       	sbiw	r26, 0x01	; 1
    1372:	ce 01       	movw	r24, r28
    1374:	02 96       	adiw	r24, 0x02	; 2
    1376:	8d 93       	st	X+, r24
    1378:	9c 93       	st	X, r25
    137a:	45 2b       	or	r20, r21
    137c:	39 f0       	breq	.+14     	; 0x138c <__pop_int+0x7e>
    137e:	98 81       	ld	r25, Y
    1380:	89 2f       	mov	r24, r25
    1382:	88 0f       	add	r24, r24
    1384:	88 0b       	sbc	r24, r24
    1386:	90 83       	st	Z, r25
    1388:	81 83       	std	Z+1, r24	; 0x01
    138a:	5b c0       	rjmp	.+182    	; 0x1442 <__pop_int+0x134>
    138c:	88 81       	ld	r24, Y
    138e:	80 83       	st	Z, r24
    1390:	11 82       	std	Z+1, r1	; 0x01
    1392:	68 c0       	rjmp	.+208    	; 0x1464 <__pop_int+0x156>
    1394:	cd 91       	ld	r28, X+
    1396:	dc 91       	ld	r29, X
    1398:	11 97       	sbiw	r26, 0x01	; 1
    139a:	ce 01       	movw	r24, r28
    139c:	04 96       	adiw	r24, 0x04	; 4
    139e:	8d 93       	st	X+, r24
    13a0:	9c 93       	st	X, r25
    13a2:	45 2b       	or	r20, r21
    13a4:	99 f0       	breq	.+38     	; 0x13cc <__pop_int+0xbe>
    13a6:	88 81       	ld	r24, Y
    13a8:	99 81       	ldd	r25, Y+1	; 0x01
    13aa:	aa 81       	ldd	r26, Y+2	; 0x02
    13ac:	bb 81       	ldd	r27, Y+3	; 0x03
    13ae:	ac 01       	movw	r20, r24
    13b0:	bd 01       	movw	r22, r26
    13b2:	77 0f       	add	r23, r23
    13b4:	44 0b       	sbc	r20, r20
    13b6:	54 2f       	mov	r21, r20
    13b8:	ba 01       	movw	r22, r20
    13ba:	80 83       	st	Z, r24
    13bc:	91 83       	std	Z+1, r25	; 0x01
    13be:	a2 83       	std	Z+2, r26	; 0x02
    13c0:	b3 83       	std	Z+3, r27	; 0x03
    13c2:	44 83       	std	Z+4, r20	; 0x04
    13c4:	45 83       	std	Z+5, r20	; 0x05
    13c6:	46 83       	std	Z+6, r20	; 0x06
    13c8:	47 83       	std	Z+7, r20	; 0x07
    13ca:	28 c0       	rjmp	.+80     	; 0x141c <__pop_int+0x10e>
    13cc:	08 81       	ld	r16, Y
    13ce:	19 81       	ldd	r17, Y+1	; 0x01
    13d0:	2a 81       	ldd	r18, Y+2	; 0x02
    13d2:	3b 81       	ldd	r19, Y+3	; 0x03
    13d4:	00 83       	st	Z, r16
    13d6:	11 83       	std	Z+1, r17	; 0x01
    13d8:	22 83       	std	Z+2, r18	; 0x02
    13da:	33 83       	std	Z+3, r19	; 0x03
    13dc:	45 c0       	rjmp	.+138    	; 0x1468 <__pop_int+0x15a>
    13de:	cd 91       	ld	r28, X+
    13e0:	dc 91       	ld	r29, X
    13e2:	11 97       	sbiw	r26, 0x01	; 1
    13e4:	ce 01       	movw	r24, r28
    13e6:	02 96       	adiw	r24, 0x02	; 2
    13e8:	8d 93       	st	X+, r24
    13ea:	9c 93       	st	X, r25
    13ec:	23 c0       	rjmp	.+70     	; 0x1434 <__pop_int+0x126>
    13ee:	cd 91       	ld	r28, X+
    13f0:	dc 91       	ld	r29, X
    13f2:	11 97       	sbiw	r26, 0x01	; 1
    13f4:	ce 01       	movw	r24, r28
    13f6:	08 96       	adiw	r24, 0x08	; 8
    13f8:	8d 93       	st	X+, r24
    13fa:	9c 93       	st	X, r25
    13fc:	78 81       	ld	r23, Y
    13fe:	69 81       	ldd	r22, Y+1	; 0x01
    1400:	5a 81       	ldd	r21, Y+2	; 0x02
    1402:	4b 81       	ldd	r20, Y+3	; 0x03
    1404:	3c 81       	ldd	r19, Y+4	; 0x04
    1406:	2d 81       	ldd	r18, Y+5	; 0x05
    1408:	9e 81       	ldd	r25, Y+6	; 0x06
    140a:	8f 81       	ldd	r24, Y+7	; 0x07
    140c:	70 83       	st	Z, r23
    140e:	61 83       	std	Z+1, r22	; 0x01
    1410:	52 83       	std	Z+2, r21	; 0x02
    1412:	43 83       	std	Z+3, r20	; 0x03
    1414:	34 83       	std	Z+4, r19	; 0x04
    1416:	25 83       	std	Z+5, r18	; 0x05
    1418:	96 83       	std	Z+6, r25	; 0x06
    141a:	87 83       	std	Z+7, r24	; 0x07
    141c:	81 e0       	ldi	r24, 0x01	; 1
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	2a c0       	rjmp	.+84     	; 0x1476 <__pop_int+0x168>
    1422:	cd 91       	ld	r28, X+
    1424:	dc 91       	ld	r29, X
    1426:	11 97       	sbiw	r26, 0x01	; 1
    1428:	ce 01       	movw	r24, r28
    142a:	02 96       	adiw	r24, 0x02	; 2
    142c:	8d 93       	st	X+, r24
    142e:	9c 93       	st	X, r25
    1430:	45 2b       	or	r20, r21
    1432:	a1 f0       	breq	.+40     	; 0x145c <__pop_int+0x14e>
    1434:	99 81       	ldd	r25, Y+1	; 0x01
    1436:	28 81       	ld	r18, Y
    1438:	89 2f       	mov	r24, r25
    143a:	88 0f       	add	r24, r24
    143c:	88 0b       	sbc	r24, r24
    143e:	20 83       	st	Z, r18
    1440:	91 83       	std	Z+1, r25	; 0x01
    1442:	82 83       	std	Z+2, r24	; 0x02
    1444:	83 83       	std	Z+3, r24	; 0x03
    1446:	84 83       	std	Z+4, r24	; 0x04
    1448:	85 83       	std	Z+5, r24	; 0x05
    144a:	86 83       	std	Z+6, r24	; 0x06
    144c:	e6 cf       	rjmp	.-52     	; 0x141a <__pop_int+0x10c>
    144e:	cd 91       	ld	r28, X+
    1450:	dc 91       	ld	r29, X
    1452:	11 97       	sbiw	r26, 0x01	; 1
    1454:	ce 01       	movw	r24, r28
    1456:	02 96       	adiw	r24, 0x02	; 2
    1458:	8d 93       	st	X+, r24
    145a:	9c 93       	st	X, r25
    145c:	08 81       	ld	r16, Y
    145e:	19 81       	ldd	r17, Y+1	; 0x01
    1460:	00 83       	st	Z, r16
    1462:	11 83       	std	Z+1, r17	; 0x01
    1464:	12 82       	std	Z+2, r1	; 0x02
    1466:	13 82       	std	Z+3, r1	; 0x03
    1468:	14 82       	std	Z+4, r1	; 0x04
    146a:	15 82       	std	Z+5, r1	; 0x05
    146c:	16 82       	std	Z+6, r1	; 0x06
    146e:	17 82       	std	Z+7, r1	; 0x07
    1470:	d5 cf       	rjmp	.-86     	; 0x141c <__pop_int+0x10e>
    1472:	80 e0       	ldi	r24, 0x00	; 0
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	df 91       	pop	r29
    1478:	cf 91       	pop	r28
    147a:	1f 91       	pop	r17
    147c:	0f 91       	pop	r16
    147e:	08 95       	ret

Disassembly of section .text.__pop_ptr:

000016d8 <__pop_ptr>:
    16d8:	cf 93       	push	r28
    16da:	df 93       	push	r29
    16dc:	dc 01       	movw	r26, r24
    16de:	f9 01       	movw	r30, r18
    16e0:	64 38       	cpi	r22, 0x84	; 132
    16e2:	71 05       	cpc	r23, r1
    16e4:	d9 f1       	breq	.+118    	; 0x175c <__pop_ptr+0x84>
    16e6:	64 f4       	brge	.+24     	; 0x1700 <__pop_ptr+0x28>
    16e8:	61 38       	cpi	r22, 0x81	; 129
    16ea:	71 05       	cpc	r23, r1
    16ec:	21 f1       	breq	.+72     	; 0x1736 <__pop_ptr+0x5e>
    16ee:	62 38       	cpi	r22, 0x82	; 130
    16f0:	71 05       	cpc	r23, r1
    16f2:	09 f4       	brne	.+2      	; 0x16f6 <__pop_ptr+0x1e>
    16f4:	40 c0       	rjmp	.+128    	; 0x1776 <__pop_ptr+0x9e>
    16f6:	60 38       	cpi	r22, 0x80	; 128
    16f8:	71 05       	cpc	r23, r1
    16fa:	09 f0       	breq	.+2      	; 0x16fe <__pop_ptr+0x26>
    16fc:	54 c0       	rjmp	.+168    	; 0x17a6 <__pop_ptr+0xce>
    16fe:	2e c0       	rjmp	.+92     	; 0x175c <__pop_ptr+0x84>
    1700:	60 39       	cpi	r22, 0x90	; 144
    1702:	71 05       	cpc	r23, r1
    1704:	c1 f1       	breq	.+112    	; 0x1776 <__pop_ptr+0x9e>
    1706:	84 f4       	brge	.+32     	; 0x1728 <__pop_ptr+0x50>
    1708:	68 38       	cpi	r22, 0x88	; 136
    170a:	71 05       	cpc	r23, r1
    170c:	09 f0       	breq	.+2      	; 0x1710 <__pop_ptr+0x38>
    170e:	4b c0       	rjmp	.+150    	; 0x17a6 <__pop_ptr+0xce>
    1710:	c0 81       	ld	r28, Z
    1712:	d1 81       	ldd	r29, Z+1	; 0x01
    1714:	ce 01       	movw	r24, r28
    1716:	02 96       	adiw	r24, 0x02	; 2
    1718:	91 83       	std	Z+1, r25	; 0x01
    171a:	80 83       	st	Z, r24
    171c:	e8 81       	ld	r30, Y
    171e:	f9 81       	ldd	r31, Y+1	; 0x01
    1720:	ed 93       	st	X+, r30
    1722:	fc 93       	st	X, r31
    1724:	40 83       	st	Z, r20
    1726:	3c c0       	rjmp	.+120    	; 0x17a0 <__pop_ptr+0xc8>
    1728:	60 3a       	cpi	r22, 0xA0	; 160
    172a:	71 05       	cpc	r23, r1
    172c:	b9 f0       	breq	.+46     	; 0x175c <__pop_ptr+0x84>
    172e:	60 3c       	cpi	r22, 0xC0	; 192
    1730:	71 05       	cpc	r23, r1
    1732:	a1 f0       	breq	.+40     	; 0x175c <__pop_ptr+0x84>
    1734:	38 c0       	rjmp	.+112    	; 0x17a6 <__pop_ptr+0xce>
    1736:	c0 81       	ld	r28, Z
    1738:	d1 81       	ldd	r29, Z+1	; 0x01
    173a:	ce 01       	movw	r24, r28
    173c:	02 96       	adiw	r24, 0x02	; 2
    173e:	91 83       	std	Z+1, r25	; 0x01
    1740:	80 83       	st	Z, r24
    1742:	e8 81       	ld	r30, Y
    1744:	f9 81       	ldd	r31, Y+1	; 0x01
    1746:	ed 93       	st	X+, r30
    1748:	fc 93       	st	X, r31
    174a:	05 2e       	mov	r0, r21
    174c:	00 0c       	add	r0, r0
    174e:	66 0b       	sbc	r22, r22
    1750:	77 0b       	sbc	r23, r23
    1752:	40 83       	st	Z, r20
    1754:	51 83       	std	Z+1, r21	; 0x01
    1756:	62 83       	std	Z+2, r22	; 0x02
    1758:	73 83       	std	Z+3, r23	; 0x03
    175a:	22 c0       	rjmp	.+68     	; 0x17a0 <__pop_ptr+0xc8>
    175c:	c0 81       	ld	r28, Z
    175e:	d1 81       	ldd	r29, Z+1	; 0x01
    1760:	ce 01       	movw	r24, r28
    1762:	02 96       	adiw	r24, 0x02	; 2
    1764:	91 83       	std	Z+1, r25	; 0x01
    1766:	80 83       	st	Z, r24
    1768:	e8 81       	ld	r30, Y
    176a:	f9 81       	ldd	r31, Y+1	; 0x01
    176c:	ed 93       	st	X+, r30
    176e:	fc 93       	st	X, r31
    1770:	51 83       	std	Z+1, r21	; 0x01
    1772:	40 83       	st	Z, r20
    1774:	15 c0       	rjmp	.+42     	; 0x17a0 <__pop_ptr+0xc8>
    1776:	c0 81       	ld	r28, Z
    1778:	d1 81       	ldd	r29, Z+1	; 0x01
    177a:	ce 01       	movw	r24, r28
    177c:	02 96       	adiw	r24, 0x02	; 2
    177e:	91 83       	std	Z+1, r25	; 0x01
    1780:	80 83       	st	Z, r24
    1782:	e8 81       	ld	r30, Y
    1784:	f9 81       	ldd	r31, Y+1	; 0x01
    1786:	ed 93       	st	X+, r30
    1788:	fc 93       	st	X, r31
    178a:	51 83       	std	Z+1, r21	; 0x01
    178c:	40 83       	st	Z, r20
    178e:	85 2f       	mov	r24, r21
    1790:	88 0f       	add	r24, r24
    1792:	88 0b       	sbc	r24, r24
    1794:	82 83       	std	Z+2, r24	; 0x02
    1796:	83 83       	std	Z+3, r24	; 0x03
    1798:	84 83       	std	Z+4, r24	; 0x04
    179a:	85 83       	std	Z+5, r24	; 0x05
    179c:	86 83       	std	Z+6, r24	; 0x06
    179e:	87 83       	std	Z+7, r24	; 0x07
    17a0:	81 e0       	ldi	r24, 0x01	; 1
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	02 c0       	rjmp	.+4      	; 0x17aa <__pop_ptr+0xd2>
    17a6:	80 e0       	ldi	r24, 0x00	; 0
    17a8:	90 e0       	ldi	r25, 0x00	; 0
    17aa:	df 91       	pop	r29
    17ac:	cf 91       	pop	r28
    17ae:	08 95       	ret

Disassembly of section .text.atoi:

00001ee6 <atoi>:
    1ee6:	cf 93       	push	r28
    1ee8:	9b 01       	movw	r18, r22
    1eea:	48 2f       	mov	r20, r24
    1eec:	f9 01       	movw	r30, r18
    1eee:	54 2f       	mov	r21, r20
    1ef0:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
    1ef4:	60 32       	cpi	r22, 0x20	; 32
    1ef6:	b9 f1       	breq	.+110    	; 0x1f66 <atoi+0x80>
    1ef8:	86 2f       	mov	r24, r22
    1efa:	06 2e       	mov	r0, r22
    1efc:	00 0c       	add	r0, r0
    1efe:	99 0b       	sbc	r25, r25
    1f00:	09 97       	sbiw	r24, 0x09	; 9
    1f02:	05 97       	sbiw	r24, 0x05	; 5
    1f04:	80 f1       	brcs	.+96     	; 0x1f66 <atoi+0x80>
    1f06:	6b 32       	cpi	r22, 0x2B	; 43
    1f08:	49 f5       	brne	.+82     	; 0x1f5c <atoi+0x76>
    1f0a:	a0 e0       	ldi	r26, 0x00	; 0
    1f0c:	b0 e0       	ldi	r27, 0x00	; 0
    1f0e:	2f 5f       	subi	r18, 0xFF	; 255
    1f10:	3f 4f       	sbci	r19, 0xFF	; 255
    1f12:	4f 4f       	sbci	r20, 0xFF	; 255
    1f14:	02 c0       	rjmp	.+4      	; 0x1f1a <atoi+0x34>
    1f16:	a0 e0       	ldi	r26, 0x00	; 0
    1f18:	b0 e0       	ldi	r27, 0x00	; 0
    1f1a:	80 e0       	ldi	r24, 0x00	; 0
    1f1c:	90 e0       	ldi	r25, 0x00	; 0
    1f1e:	ca e0       	ldi	r28, 0x0A	; 10
    1f20:	f9 01       	movw	r30, r18
    1f22:	54 2f       	mov	r21, r20
    1f24:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
    1f28:	06 2e       	mov	r0, r22
    1f2a:	00 0c       	add	r0, r0
    1f2c:	77 0b       	sbc	r23, r23
    1f2e:	60 53       	subi	r22, 0x30	; 48
    1f30:	71 09       	sbc	r23, r1
    1f32:	6a 30       	cpi	r22, 0x0A	; 10
    1f34:	71 05       	cpc	r23, r1
    1f36:	60 f4       	brcc	.+24     	; 0x1f50 <atoi+0x6a>
    1f38:	c8 9f       	mul	r28, r24
    1f3a:	f0 01       	movw	r30, r0
    1f3c:	c9 9f       	mul	r28, r25
    1f3e:	f0 0d       	add	r31, r0
    1f40:	11 24       	eor	r1, r1
    1f42:	2f 5f       	subi	r18, 0xFF	; 255
    1f44:	3f 4f       	sbci	r19, 0xFF	; 255
    1f46:	4f 4f       	sbci	r20, 0xFF	; 255
    1f48:	cf 01       	movw	r24, r30
    1f4a:	86 1b       	sub	r24, r22
    1f4c:	97 0b       	sbc	r25, r23
    1f4e:	e8 cf       	rjmp	.-48     	; 0x1f20 <atoi+0x3a>
    1f50:	ab 2b       	or	r26, r27
    1f52:	69 f4       	brne	.+26     	; 0x1f6e <atoi+0x88>
    1f54:	91 95       	neg	r25
    1f56:	81 95       	neg	r24
    1f58:	91 09       	sbc	r25, r1
    1f5a:	09 c0       	rjmp	.+18     	; 0x1f6e <atoi+0x88>
    1f5c:	6d 32       	cpi	r22, 0x2D	; 45
    1f5e:	d9 f6       	brne	.-74     	; 0x1f16 <atoi+0x30>
    1f60:	a1 e0       	ldi	r26, 0x01	; 1
    1f62:	b0 e0       	ldi	r27, 0x00	; 0
    1f64:	d4 cf       	rjmp	.-88     	; 0x1f0e <atoi+0x28>
    1f66:	2f 5f       	subi	r18, 0xFF	; 255
    1f68:	3f 4f       	sbci	r19, 0xFF	; 255
    1f6a:	4f 4f       	sbci	r20, 0xFF	; 255
    1f6c:	bf cf       	rjmp	.-130    	; 0x1eec <atoi+0x6>
    1f6e:	cf 91       	pop	r28
    1f70:	08 95       	ret

Disassembly of section .text.memset:

000025a4 <memset>:
    25a4:	fc 01       	movw	r30, r24
    25a6:	48 0f       	add	r20, r24
    25a8:	59 1f       	adc	r21, r25
    25aa:	e4 17       	cp	r30, r20
    25ac:	f5 07       	cpc	r31, r21
    25ae:	11 f0       	breq	.+4      	; 0x25b4 <memset+0x10>
    25b0:	61 93       	st	Z+, r22
    25b2:	fb cf       	rjmp	.-10     	; 0x25aa <memset+0x6>
    25b4:	08 95       	ret

Disassembly of section .text.strcmp:

00002200 <strcmp>:
    2200:	cf 92       	push	r12
    2202:	df 92       	push	r13
    2204:	ef 92       	push	r14
    2206:	6b 01       	movw	r12, r22
    2208:	e8 2e       	mov	r14, r24
    220a:	f6 01       	movw	r30, r12
    220c:	5e 2d       	mov	r21, r14
    220e:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
    2212:	86 2f       	mov	r24, r22
    2214:	f9 01       	movw	r30, r18
    2216:	54 2f       	mov	r21, r20
    2218:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
    221c:	86 13       	cpse	r24, r22
    221e:	0b c0       	rjmp	.+22     	; 0x2236 <strcmp+0x36>
    2220:	88 23       	and	r24, r24
    2222:	41 f0       	breq	.+16     	; 0x2234 <strcmp+0x34>
    2224:	8f ef       	ldi	r24, 0xFF	; 255
    2226:	c8 1a       	sub	r12, r24
    2228:	d8 0a       	sbc	r13, r24
    222a:	e8 0a       	sbc	r14, r24
    222c:	2f 5f       	subi	r18, 0xFF	; 255
    222e:	3f 4f       	sbci	r19, 0xFF	; 255
    2230:	4f 4f       	sbci	r20, 0xFF	; 255
    2232:	eb cf       	rjmp	.-42     	; 0x220a <strcmp+0xa>
    2234:	68 2f       	mov	r22, r24
    2236:	90 e0       	ldi	r25, 0x00	; 0
    2238:	86 1b       	sub	r24, r22
    223a:	91 09       	sbc	r25, r1
    223c:	ef 90       	pop	r14
    223e:	df 90       	pop	r13
    2240:	cf 90       	pop	r12
    2242:	08 95       	ret

Disassembly of section .text.strlen:

000024aa <strlen>:
    24aa:	9b 01       	movw	r18, r22
    24ac:	48 2f       	mov	r20, r24
    24ae:	a8 2f       	mov	r26, r24
    24b0:	cb 01       	movw	r24, r22
    24b2:	fc 01       	movw	r30, r24
    24b4:	5a 2f       	mov	r21, r26
    24b6:	0e 94 08 13 	call	0x2610	; 0x2610 <__xload_1>
    24ba:	66 23       	and	r22, r22
    24bc:	19 f0       	breq	.+6      	; 0x24c4 <strlen+0x1a>
    24be:	01 96       	adiw	r24, 0x01	; 1
    24c0:	a1 1d       	adc	r26, r1
    24c2:	f7 cf       	rjmp	.-18     	; 0x24b2 <strlen+0x8>
    24c4:	64 2f       	mov	r22, r20
    24c6:	a9 01       	movw	r20, r18
    24c8:	84 1b       	sub	r24, r20
    24ca:	95 0b       	sbc	r25, r21
    24cc:	08 95       	ret

Disassembly of section .text.tolower:

000025c8 <tolower>:
    25c8:	9c 01       	movw	r18, r24
    25ca:	21 54       	subi	r18, 0x41	; 65
    25cc:	31 09       	sbc	r19, r1
    25ce:	2a 31       	cpi	r18, 0x1A	; 26
    25d0:	31 05       	cpc	r19, r1
    25d2:	08 f4       	brcc	.+2      	; 0x25d6 <tolower+0xe>
    25d4:	80 62       	ori	r24, 0x20	; 32
    25d6:	08 95       	ret

Disassembly of section .text.toupper:

000025b6 <toupper>:
    25b6:	9c 01       	movw	r18, r24
    25b8:	21 56       	subi	r18, 0x61	; 97
    25ba:	31 09       	sbc	r19, r1
    25bc:	2a 31       	cpi	r18, 0x1A	; 26
    25be:	31 05       	cpc	r19, r1
    25c0:	10 f4       	brcc	.+4      	; 0x25c6 <toupper+0x10>
    25c2:	8f 75       	andi	r24, 0x5F	; 95
    25c4:	99 27       	eor	r25, r25
    25c6:	08 95       	ret

Disassembly of section .text._Exit:

00002628 <_Exit>:
    2628:	0e 94 b1 00 	call	0x162	; 0x162 <_exit>

Disassembly of section .text.__vsprintf:

00002548 <__vsprintf>:
    2548:	0f 93       	push	r16
    254a:	1f 93       	push	r17
    254c:	89 01       	movw	r16, r18
    254e:	9a 01       	movw	r18, r20
    2550:	46 2f       	mov	r20, r22
    2552:	6f ef       	ldi	r22, 0xFF	; 255
    2554:	7f e7       	ldi	r23, 0x7F	; 127
    2556:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <__vsnprintf>
    255a:	1f 91       	pop	r17
    255c:	0f 91       	pop	r16
    255e:	08 95       	ret

Disassembly of section .text.__vsnprintf:

00001b58 <__vsnprintf>:
    1b58:	6f 92       	push	r6
    1b5a:	7f 92       	push	r7
    1b5c:	8f 92       	push	r8
    1b5e:	ef 92       	push	r14
    1b60:	ff 92       	push	r15
    1b62:	0f 93       	push	r16
    1b64:	1f 93       	push	r17
    1b66:	cf 93       	push	r28
    1b68:	df 93       	push	r29
    1b6a:	cd b7       	in	r28, 0x3d	; 61
    1b6c:	de b7       	in	r29, 0x3e	; 62
    1b6e:	61 97       	sbiw	r28, 0x11	; 17
    1b70:	0f b6       	in	r0, 0x3f	; 63
    1b72:	f8 94       	cli
    1b74:	de bf       	out	0x3e, r29	; 62
    1b76:	0f be       	out	0x3f, r0	; 63
    1b78:	cd bf       	out	0x3d, r28	; 61
    1b7a:	fe 01       	movw	r30, r28
    1b7c:	31 96       	adiw	r30, 0x01	; 1
    1b7e:	51 e1       	ldi	r21, 0x11	; 17
    1b80:	df 01       	movw	r26, r30
    1b82:	1d 92       	st	X+, r1
    1b84:	5a 95       	dec	r21
    1b86:	e9 f7       	brne	.-6      	; 0x1b82 <__vsnprintf+0x2a>
    1b88:	a2 e0       	ldi	r26, 0x02	; 2
    1b8a:	b1 e0       	ldi	r27, 0x01	; 1
    1b8c:	ba 83       	std	Y+2, r27	; 0x02
    1b8e:	a9 83       	std	Y+1, r26	; 0x01
    1b90:	9c 83       	std	Y+4, r25	; 0x04
    1b92:	8b 83       	std	Y+3, r24	; 0x03
    1b94:	77 ff       	sbrs	r23, 7
    1b96:	09 c0       	rjmp	.+18     	; 0x1baa <__vsnprintf+0x52>
    1b98:	8f e4       	ldi	r24, 0x4F	; 79
    1b9a:	90 e0       	ldi	r25, 0x00	; 0
    1b9c:	90 93 2e 04 	sts	0x042E, r25	; 0x80042e <__errno_val+0x1>
    1ba0:	80 93 2d 04 	sts	0x042D, r24	; 0x80042d <__errno_val>
    1ba4:	8f ef       	ldi	r24, 0xFF	; 255
    1ba6:	9f ef       	ldi	r25, 0xFF	; 255
    1ba8:	19 c0       	rjmp	.+50     	; 0x1bdc <__vsnprintf+0x84>
    1baa:	39 01       	movw	r6, r18
    1bac:	84 2e       	mov	r8, r20
    1bae:	7c 01       	movw	r14, r24
    1bb0:	61 50       	subi	r22, 0x01	; 1
    1bb2:	71 09       	sbc	r23, r1
    1bb4:	7f 83       	std	Y+7, r23	; 0x07
    1bb6:	6e 83       	std	Y+6, r22	; 0x06
    1bb8:	98 01       	movw	r18, r16
    1bba:	68 2d       	mov	r22, r8
    1bbc:	a3 01       	movw	r20, r6
    1bbe:	cf 01       	movw	r24, r30
    1bc0:	0e 94 ef 11 	call	0x23de	; 0x23de <__vfprintf>
    1bc4:	48 85       	ldd	r20, Y+8	; 0x08
    1bc6:	59 85       	ldd	r21, Y+9	; 0x09
    1bc8:	2e 81       	ldd	r18, Y+6	; 0x06
    1bca:	3f 81       	ldd	r19, Y+7	; 0x07
    1bcc:	42 17       	cp	r20, r18
    1bce:	53 07       	cpc	r21, r19
    1bd0:	08 f4       	brcc	.+2      	; 0x1bd4 <__vsnprintf+0x7c>
    1bd2:	9a 01       	movw	r18, r20
    1bd4:	f7 01       	movw	r30, r14
    1bd6:	e2 0f       	add	r30, r18
    1bd8:	f3 1f       	adc	r31, r19
    1bda:	10 82       	st	Z, r1
    1bdc:	61 96       	adiw	r28, 0x11	; 17
    1bde:	0f b6       	in	r0, 0x3f	; 63
    1be0:	f8 94       	cli
    1be2:	de bf       	out	0x3e, r29	; 62
    1be4:	0f be       	out	0x3f, r0	; 63
    1be6:	cd bf       	out	0x3d, r28	; 61
    1be8:	df 91       	pop	r29
    1bea:	cf 91       	pop	r28
    1bec:	1f 91       	pop	r17
    1bee:	0f 91       	pop	r16
    1bf0:	ff 90       	pop	r15
    1bf2:	ef 90       	pop	r14
    1bf4:	8f 90       	pop	r8
    1bf6:	7f 90       	pop	r7
    1bf8:	6f 90       	pop	r6
    1bfa:	08 95       	ret

Disassembly of section .text.__vfprintf:

000023de <__vfprintf>:
    23de:	a2 e0       	ldi	r26, 0x02	; 2
    23e0:	b0 e0       	ldi	r27, 0x00	; 0
    23e2:	e5 ef       	ldi	r30, 0xF5	; 245
    23e4:	f1 e1       	ldi	r31, 0x11	; 17
    23e6:	0c 94 ab 11 	jmp	0x2356	; 0x2356 <__prologue_saves__+0x1c>
    23ea:	8c 01       	movw	r16, r24
    23ec:	3a 83       	std	Y+2, r19	; 0x02
    23ee:	29 83       	std	Y+1, r18	; 0x01
    23f0:	9e 01       	movw	r18, r28
    23f2:	2f 5f       	subi	r18, 0xFF	; 255
    23f4:	3f 4f       	sbci	r19, 0xFF	; 255
    23f6:	0e 94 35 02 	call	0x46a	; 0x46a <__printf_core>
    23fa:	f8 01       	movw	r30, r16
    23fc:	20 81       	ld	r18, Z
    23fe:	24 ff       	sbrs	r18, 4
    2400:	02 c0       	rjmp	.+4      	; 0x2406 <__vfprintf+0x28>
    2402:	8f ef       	ldi	r24, 0xFF	; 255
    2404:	9f ef       	ldi	r25, 0xFF	; 255
    2406:	22 96       	adiw	r28, 0x02	; 2
    2408:	e4 e0       	ldi	r30, 0x04	; 4
    240a:	0c 94 e2 11 	jmp	0x23c4	; 0x23c4 <__epilogue_restores__+0x1c>

Disassembly of section .text.libgcc.div:

00002510 <__umoddi3>:
    2510:	68 94       	set
    2512:	01 c0       	rjmp	.+2      	; 0x2516 <__udivdi3_umoddi3>

00002514 <__udivdi3>:
    2514:	e8 94       	clt

00002516 <__udivdi3_umoddi3>:
    2516:	8f 92       	push	r8
    2518:	9f 92       	push	r9
    251a:	cf 93       	push	r28
    251c:	df 93       	push	r29
    251e:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <__udivmod64>
    2522:	df 91       	pop	r29
    2524:	cf 91       	pop	r28
    2526:	9f 90       	pop	r9
    2528:	8f 90       	pop	r8
    252a:	08 95       	ret

Disassembly of section .text.libgcc.div:

00001bfc <__udivmod64>:
    1bfc:	88 24       	eor	r8, r8
    1bfe:	99 24       	eor	r9, r9
    1c00:	f4 01       	movw	r30, r8
    1c02:	e4 01       	movw	r28, r8
    1c04:	b0 e4       	ldi	r27, 0x40	; 64
    1c06:	9f 93       	push	r25
    1c08:	aa 27       	eor	r26, r26
    1c0a:	9a 15       	cp	r25, r10
    1c0c:	8b 04       	cpc	r8, r11
    1c0e:	9c 04       	cpc	r9, r12
    1c10:	ed 05       	cpc	r30, r13
    1c12:	fe 05       	cpc	r31, r14
    1c14:	cf 05       	cpc	r28, r15
    1c16:	d0 07       	cpc	r29, r16
    1c18:	a1 07       	cpc	r26, r17
    1c1a:	98 f4       	brcc	.+38     	; 0x1c42 <__udivmod64+0x46>
    1c1c:	ad 2f       	mov	r26, r29
    1c1e:	dc 2f       	mov	r29, r28
    1c20:	cf 2f       	mov	r28, r31
    1c22:	fe 2f       	mov	r31, r30
    1c24:	e9 2d       	mov	r30, r9
    1c26:	98 2c       	mov	r9, r8
    1c28:	89 2e       	mov	r8, r25
    1c2a:	98 2f       	mov	r25, r24
    1c2c:	87 2f       	mov	r24, r23
    1c2e:	76 2f       	mov	r23, r22
    1c30:	65 2f       	mov	r22, r21
    1c32:	54 2f       	mov	r21, r20
    1c34:	43 2f       	mov	r20, r19
    1c36:	32 2f       	mov	r19, r18
    1c38:	22 27       	eor	r18, r18
    1c3a:	b8 50       	subi	r27, 0x08	; 8
    1c3c:	31 f7       	brne	.-52     	; 0x1c0a <__udivmod64+0xe>
    1c3e:	bf 91       	pop	r27
    1c40:	27 c0       	rjmp	.+78     	; 0x1c90 <__udivmod64+0x94>
    1c42:	1b 2e       	mov	r1, r27
    1c44:	bf 91       	pop	r27
    1c46:	bb 27       	eor	r27, r27
    1c48:	22 0f       	add	r18, r18
    1c4a:	33 1f       	adc	r19, r19
    1c4c:	44 1f       	adc	r20, r20
    1c4e:	55 1f       	adc	r21, r21
    1c50:	66 1f       	adc	r22, r22
    1c52:	77 1f       	adc	r23, r23
    1c54:	88 1f       	adc	r24, r24
    1c56:	99 1f       	adc	r25, r25
    1c58:	88 1c       	adc	r8, r8
    1c5a:	99 1c       	adc	r9, r9
    1c5c:	ee 1f       	adc	r30, r30
    1c5e:	ff 1f       	adc	r31, r31
    1c60:	cc 1f       	adc	r28, r28
    1c62:	dd 1f       	adc	r29, r29
    1c64:	aa 1f       	adc	r26, r26
    1c66:	bb 1f       	adc	r27, r27
    1c68:	8a 14       	cp	r8, r10
    1c6a:	9b 04       	cpc	r9, r11
    1c6c:	ec 05       	cpc	r30, r12
    1c6e:	fd 05       	cpc	r31, r13
    1c70:	ce 05       	cpc	r28, r14
    1c72:	df 05       	cpc	r29, r15
    1c74:	a0 07       	cpc	r26, r16
    1c76:	b1 07       	cpc	r27, r17
    1c78:	48 f0       	brcs	.+18     	; 0x1c8c <__udivmod64+0x90>
    1c7a:	8a 18       	sub	r8, r10
    1c7c:	9b 08       	sbc	r9, r11
    1c7e:	ec 09       	sbc	r30, r12
    1c80:	fd 09       	sbc	r31, r13
    1c82:	ce 09       	sbc	r28, r14
    1c84:	df 09       	sbc	r29, r15
    1c86:	a0 0b       	sbc	r26, r16
    1c88:	b1 0b       	sbc	r27, r17
    1c8a:	21 60       	ori	r18, 0x01	; 1
    1c8c:	1a 94       	dec	r1
    1c8e:	e1 f6       	brne	.-72     	; 0x1c48 <__udivmod64+0x4c>
    1c90:	2e f4       	brtc	.+10     	; 0x1c9c <__udivmod64+0xa0>
    1c92:	94 01       	movw	r18, r8
    1c94:	af 01       	movw	r20, r30
    1c96:	be 01       	movw	r22, r28
    1c98:	cd 01       	movw	r24, r26
    1c9a:	00 0c       	add	r0, r0
    1c9c:	08 95       	ret

Disassembly of section .text.libgcc:

000024f0 <__negdi2>:
    24f0:	60 95       	com	r22
    24f2:	70 95       	com	r23
    24f4:	80 95       	com	r24
    24f6:	90 95       	com	r25
    24f8:	30 95       	com	r19
    24fa:	40 95       	com	r20
    24fc:	50 95       	com	r21
    24fe:	21 95       	neg	r18
    2500:	3f 4f       	sbci	r19, 0xFF	; 255
    2502:	4f 4f       	sbci	r20, 0xFF	; 255
    2504:	5f 4f       	sbci	r21, 0xFF	; 255
    2506:	6f 4f       	sbci	r22, 0xFF	; 255
    2508:	7f 4f       	sbci	r23, 0xFF	; 255
    250a:	8f 4f       	sbci	r24, 0xFF	; 255
    250c:	9f 4f       	sbci	r25, 0xFF	; 255
    250e:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

0000233a <__prologue_saves__>:
    233a:	2f 92       	push	r2
    233c:	3f 92       	push	r3
    233e:	4f 92       	push	r4
    2340:	5f 92       	push	r5
    2342:	6f 92       	push	r6
    2344:	7f 92       	push	r7
    2346:	8f 92       	push	r8
    2348:	9f 92       	push	r9
    234a:	af 92       	push	r10
    234c:	bf 92       	push	r11
    234e:	cf 92       	push	r12
    2350:	df 92       	push	r13
    2352:	ef 92       	push	r14
    2354:	ff 92       	push	r15
    2356:	0f 93       	push	r16
    2358:	1f 93       	push	r17
    235a:	cf 93       	push	r28
    235c:	df 93       	push	r29
    235e:	cd b7       	in	r28, 0x3d	; 61
    2360:	de b7       	in	r29, 0x3e	; 62
    2362:	ca 1b       	sub	r28, r26
    2364:	db 0b       	sbc	r29, r27
    2366:	0f b6       	in	r0, 0x3f	; 63
    2368:	f8 94       	cli
    236a:	de bf       	out	0x3e, r29	; 62
    236c:	0f be       	out	0x3f, r0	; 63
    236e:	cd bf       	out	0x3d, r28	; 61
    2370:	19 94       	eijmp

Disassembly of section .text.libgcc.prologue:

000023a8 <__epilogue_restores__>:
    23a8:	2a 88       	ldd	r2, Y+18	; 0x12
    23aa:	39 88       	ldd	r3, Y+17	; 0x11
    23ac:	48 88       	ldd	r4, Y+16	; 0x10
    23ae:	5f 84       	ldd	r5, Y+15	; 0x0f
    23b0:	6e 84       	ldd	r6, Y+14	; 0x0e
    23b2:	7d 84       	ldd	r7, Y+13	; 0x0d
    23b4:	8c 84       	ldd	r8, Y+12	; 0x0c
    23b6:	9b 84       	ldd	r9, Y+11	; 0x0b
    23b8:	aa 84       	ldd	r10, Y+10	; 0x0a
    23ba:	b9 84       	ldd	r11, Y+9	; 0x09
    23bc:	c8 84       	ldd	r12, Y+8	; 0x08
    23be:	df 80       	ldd	r13, Y+7	; 0x07
    23c0:	ee 80       	ldd	r14, Y+6	; 0x06
    23c2:	fd 80       	ldd	r15, Y+5	; 0x05
    23c4:	0c 81       	ldd	r16, Y+4	; 0x04
    23c6:	1b 81       	ldd	r17, Y+3	; 0x03
    23c8:	aa 81       	ldd	r26, Y+2	; 0x02
    23ca:	b9 81       	ldd	r27, Y+1	; 0x01
    23cc:	ce 0f       	add	r28, r30
    23ce:	d1 1d       	adc	r29, r1
    23d0:	0f b6       	in	r0, 0x3f	; 63
    23d2:	f8 94       	cli
    23d4:	de bf       	out	0x3e, r29	; 62
    23d6:	0f be       	out	0x3f, r0	; 63
    23d8:	cd bf       	out	0x3d, r28	; 61
    23da:	ed 01       	movw	r28, r26
    23dc:	08 95       	ret

Disassembly of section .text.libgcc:

0000252c <__movmemx_qi>:
    252c:	99 27       	eor	r25, r25

0000252e <__movmemx_hi>:
    252e:	77 fd       	sbrc	r23, 7
    2530:	06 c0       	rjmp	.+12     	; 0x253e <__movmemx_hi+0x10>
    2532:	7b bf       	out	0x3b, r23	; 59
    2534:	07 90       	elpm	r0, Z+
    2536:	0d 92       	st	X+, r0
    2538:	01 97       	sbiw	r24, 0x01	; 1
    253a:	e1 f7       	brne	.-8      	; 0x2534 <__movmemx_hi+0x6>
    253c:	08 95       	ret
    253e:	01 90       	ld	r0, Z+
    2540:	0d 92       	st	X+, r0
    2542:	01 97       	sbiw	r24, 0x01	; 1
    2544:	e1 f7       	brne	.-8      	; 0x253e <__movmemx_hi+0x10>
    2546:	08 95       	ret

Disassembly of section .text.libgcc.builtins:

000022c6 <__ashrdi3>:
    22c6:	97 fb       	bst	r25, 7
    22c8:	10 f8       	bld	r1, 0

000022ca <__lshrdi3>:
    22ca:	16 94       	lsr	r1
    22cc:	00 08       	sbc	r0, r0
    22ce:	0f 93       	push	r16
    22d0:	08 30       	cpi	r16, 0x08	; 8
    22d2:	98 f0       	brcs	.+38     	; 0x22fa <__lshrdi3+0x30>
    22d4:	08 50       	subi	r16, 0x08	; 8
    22d6:	23 2f       	mov	r18, r19
    22d8:	34 2f       	mov	r19, r20
    22da:	45 2f       	mov	r20, r21
    22dc:	56 2f       	mov	r21, r22
    22de:	67 2f       	mov	r22, r23
    22e0:	78 2f       	mov	r23, r24
    22e2:	89 2f       	mov	r24, r25
    22e4:	90 2d       	mov	r25, r0
    22e6:	f4 cf       	rjmp	.-24     	; 0x22d0 <__lshrdi3+0x6>
    22e8:	05 94       	asr	r0
    22ea:	97 95       	ror	r25
    22ec:	87 95       	ror	r24
    22ee:	77 95       	ror	r23
    22f0:	67 95       	ror	r22
    22f2:	57 95       	ror	r21
    22f4:	47 95       	ror	r20
    22f6:	37 95       	ror	r19
    22f8:	27 95       	ror	r18
    22fa:	0a 95       	dec	r16
    22fc:	aa f7       	brpl	.-22     	; 0x22e8 <__lshrdi3+0x1e>
    22fe:	0f 91       	pop	r16
    2300:	08 95       	ret

Disassembly of section .text.libgcc:

00002560 <__cmpdi2_s8>:
    2560:	00 24       	eor	r0, r0
    2562:	a7 fd       	sbrc	r26, 7
    2564:	00 94       	com	r0
    2566:	2a 17       	cp	r18, r26
    2568:	30 05       	cpc	r19, r0
    256a:	40 05       	cpc	r20, r0
    256c:	50 05       	cpc	r21, r0
    256e:	60 05       	cpc	r22, r0
    2570:	70 05       	cpc	r23, r0
    2572:	80 05       	cpc	r24, r0
    2574:	90 05       	cpc	r25, r0
    2576:	08 95       	ret
