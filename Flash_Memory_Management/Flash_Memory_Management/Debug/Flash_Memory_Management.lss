
Flash_Memory_Management.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00004540  2**0
                  ALLOC, LOAD, DATA
  1 .text         0000017a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000102e  00800200  00800200  00004540  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00004540  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 00000196  00000000  00000000  0000456f  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000001b0  00000000  00000000  00004705  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000030d2  00000000  00000000  000048b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000123e  00000000  00000000  00007987  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000167a  00000000  00000000  00008bc5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000534  00000000  00000000  0000a240  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000529  00000000  00000000  0000a774  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cc3  00000000  00000000  0000ac9d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  0000b960  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  0000449e  0000449e  00004532  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000bb38  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .progmemx.data 00000013  000005bc  000005bc  00000650  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 16 .text.main    00000044  00003e1c  00003e1c  00003eb0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.USART_Init 00000036  0000401a  0000401a  000040ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.USART_TX_Data 0000000e  000043cc  000043cc  00004460  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.USART_Data 0000004c  00003d88  00003d88  00003e1c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.USART_RX_Data 0000000e  000043da  000043da  0000446e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.LED_Init 00000016  0000436c  0000436c  00004400  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.LED_Red_Toggle 0000000e  000043e8  000043e8  0000447c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.LED_Green_Toggle 0000000e  000043f6  000043f6  0000448a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.VOLTAGE_Translator_Init 00000026  0000416a  0000416a  000041fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.SLAVE_CS_Deselect 00000062  00003b6e  00003b6e  00003c02  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.FLASH_NAND_CS_ENABLE 00000008  00004478  00004478  0000450c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.FLASH_NAND_CS_DISABLE 00000008  00004480  00004480  00004514  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.Print_To_User 000000ac  00003360  00003360  000033f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .progmemx.data 000002ff  0000017a  0000017a  0000020e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 30 .text.HEX_Verification 000000bc  00002fda  00002fda  0000306e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.NAND_Address_Checker 00000074  00003a90  00003a90  00003b24  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.ExecuteCommand 0000035a  00001b44  00001b44  00001bd8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.UserInput 000000bc  00003096  00003096  0000312a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.COLUMN_BLOCK_PAGE_ADDRESSER 00000150  0000240e  0000240e  000024a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .bss.input_counter 00000002  0080122e  0080122e  00004540  2**0
                  ALLOC
 36 .bss.arr_address 00000002  00801230  00801230  00004540  2**0
                  ALLOC
 37 .text.CLEAR_ARR 0000005e  00003bd0  00003bd0  00003c64  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.SPI_MASTER_Init 00000024  000041dc  000041dc  00004270  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.FLASH_Write_Enable 0000001a  000042d8  000042d8  0000436c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.FLASH_Write_Disable 0000001a  000042f2  000042f2  00004386  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .progmemx.data 000000ae  00000479  00000479  0000050d  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 42 .text.FLASH_ID 0000008a  00003990  00003990  00003a24  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.FLASH_Block_Lock_Setter 000000b0  00003152  00003152  000031e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.FLASH_Block_Lock 000000ae  000032b2  000032b2  00003346  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.FLASH_Reset 0000001e  00004266  00004266  000042fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.FLASH_MainArray_Address 000000a6  0000340c  0000340c  000034a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.FLASH_Column_Address 0000005c  00003c8c  00003c8c  00003d20  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.FLASH_Data_Storage 000000a0  00003740  00003740  000037d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.FLASH_Read_From_Cache_x1 00000050  00003ce8  00003ce8  00003d7c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.FLASH_Status 00000092  000037e0  000037e0  00003874  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.FLASH_Program_Execute 00000034  00004086  00004086  0000411a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.FLASH_Page_Read 0000003c  00003f6a  00003f6a  00003ffe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.FLASH_Para_Pg 00000050  00003d38  00003d38  00003dcc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.FLASH_Block_Erase 00000042  00003ee8  00003ee8  00003f7c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.FLASH_Page_Program 00000076  00003a1a  00003a1a  00003aae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .progmemx.data 0000007f  00000527  00000527  000005bb  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 57 .text.Page_Tester 000000c0  00002f1a  00002f1a  00002fae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.libgcc  0000000e  00004404  00004404  00004498  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.__dummy_fini 00000002  000044a6  000044a6  0000453a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.__dummy_funcs_on_exit 00000002  000044a8  000044a8  0000453c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.__dummy_simulator_exit 00000002  000044aa  000044aa  0000453e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.exit    00000016  00004382  00004382  00004416  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.__wrap_sprintf 00000026  00004190  00004190  00004224  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .progmemx.data 00000007  000005ef  000005ef  00000683  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 65 .text.__fmt_s 000000ca  00002e50  00002e50  00002ee4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text.__out   0000006a  00003b04  00003b04  00003b98  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.__pad   0000010e  00002916  00002916  000029aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.__fmt_state 000000a4  000034b2  000034b2  00003546  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .progmemx.data 00000006  000005f6  000005f6  0000068a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 70 .text.__printf_core 00000832  000005fc  000005fc  00000690  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .progmemx.data.state_table 00000016  000005a6  000005a6  0000063a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 72 .text.fputc   00000092  00003872  00003872  00003906  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .text.__fmt_d 0000017e  0000211e  0000211e  000021b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.__fmt_o 000000d4  00002bda  00002bda  00002c6e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.__cvt_u 0000014a  0000255e  0000255e  000025f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.__fmt_u 000000b0  00003202  00003202  00003296  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.__fmt_x 00000280  00001e9e  00001e9e  00001f32  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.__pop_float 00000040  00003f2a  00003f2a  00003fbe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.__pop_int 00000172  0000229c  0000229c  00002330  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.__pop_ptr 000000d8  00002b02  00002b02  00002b96  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text.sprintf 00000026  000041b6  000041b6  0000424a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.vsprintf 00000018  0000430c  0000430c  000043a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .text.atoi    0000008c  00003904  00003904  00003998  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 .text.memset  00000012  00004398  00004398  0000442c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 .text.strcmp  00000044  00003e60  00003e60  00003ef4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 .text.strlen  00000024  00004200  00004200  00004294  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 .text.tolower 00000010  000043bc  000043bc  00004450  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 .text.toupper 00000012  000043aa  000043aa  0000443e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 .text._Exit   00000004  000044a2  000044a2  00004536  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 .text.__vsprintf 00000018  00004324  00004324  000043b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 .text.__vsnprintf 000000a4  00003556  00003556  000035ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 .text.vsnprintf 000000a4  000035fa  000035fa  0000368e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 .text.vfprintf 00000030  000040ba  000040ba  0000414e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 .text.__vfprintf 00000030  000040ea  000040ea  0000417e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 .progmemx.data 00000010  000005cf  000005cf  00000663  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 96 .text.__fmt_fp 000006ba  00000e2e  00000e2e  00000ec2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 97 .progmemx.data 00000010  000005df  000005df  00000673  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 98 .text.__fmt_a 0000065c  000014e8  000014e8  0000157c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 99 .text.strcpy  0000001c  00004284  00004284  00004318  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 .text.libgcc.div 00000028  0000411a  0000411a  000041ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 .text.libgcc.div 0000001c  000042a0  000042a0  00004334  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 .text.libgcc.div 000000a2  0000369e  0000369e  00003732  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 .text.libgcc  00000020  00004246  00004246  000042da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 .text.libgcc.prologue 00000038  00003fe2  00003fe2  00004076  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 .text.libgcc.prologue 00000036  00004050  00004050  000040e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 .text.libgcc  0000001c  000042bc  000042bc  00004350  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 .text.libgcc.builtins 0000003c  00003fa6  00003fa6  0000403a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 .text.libgcc  00000018  0000433c  0000433c  000043d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 .text.libgcc.div 00000028  00004142  00004142  000041d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 .text         0000000e  00004412  00004412  000044a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 .text         000000ce  00002d82  00002d82  00002e16  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 .text         0000000a  00004464  00004464  000044f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 .text         00000008  00004488  00004488  0000451c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 .text         000000de  00002a24  00002a24  00002ab8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 .text         0000000e  00004420  00004420  000044b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 .text         0000005e  00003c2e  00003c2e  00003cc2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 .text         00000048  00003dd4  00003dd4  00003e68  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 .text         0000000c  00004458  00004458  000044ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 .text         00000006  00004498  00004498  0000452c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 .text         0000000e  0000442e  0000442e  000044c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 .text         0000000e  0000443c  0000443c  000044d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 .text         00000022  00004224  00004224  000042b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 .text         00000044  00003ea4  00003ea4  00003f38  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 .text         0000000e  0000444a  0000444a  000044de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 .text         0000000a  0000446e  0000446e  00004502  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 .text         00000008  00004490  00004490  00004524  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 .text         000000d4  00002cae  00002cae  00002d42  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 .text.floorf  00000132  000027e4  000027e4  00002878  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 .text.fmaf    0000013c  000026a8  000026a8  0000273c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 .text.libgcc  00000018  00004354  00004354  000043e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__ctors_end>
   4:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
   8:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
   c:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  10:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  14:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  18:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  1c:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  20:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  24:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  28:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  2c:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  30:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  34:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  38:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  3c:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  40:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  44:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  48:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  4c:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  50:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  54:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  58:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  5c:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  60:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  64:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  68:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  6c:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  70:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  74:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  78:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  7c:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  80:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  84:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  88:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  8c:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  90:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  94:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  98:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  9c:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  a0:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  a4:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  a8:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  ac:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  b0:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  b4:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  b8:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  bc:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  c0:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  c4:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  c8:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  cc:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  d0:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  d4:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  d8:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  dc:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>
  e0:	0c 94 4f 22 	jmp	0x449e	; 0x449e <__bad_interrupt>

000000e4 <.dinit>:
  e4:	02 00       	.word	0x0002	; ????
  e6:	12 32       	cpi	r17, 0x22	; 34
  e8:	80 00       	.word	0x0080	; ????

000000ea <__trampolines_start>:
  ea:	0c 94 f3 15 	jmp	0x2be6	; 0x2be6 <__fmt_o+0xc>
  ee:	0c 94 04 03 	jmp	0x608	; 0x608 <__printf_core+0xc>
  f2:	0c 94 1d 07 	jmp	0xe3a	; 0xe3a <__fmt_fp+0xc>
  f6:	0c 94 55 0f 	jmp	0x1eaa	; 0x1eaa <__fmt_x+0xc>
  fa:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__fmt_a+0xc>
  fe:	0c 94 7b 20 	jmp	0x40f6	; 0x40f6 <__vfprintf+0xc>
 102:	0c 94 5a 13 	jmp	0x26b4	; 0x26b4 <fmaf+0xc>
 106:	0c 94 63 20 	jmp	0x40c6	; 0x40c6 <vfprintf+0xc>
 10a:	0c 94 95 10 	jmp	0x212a	; 0x212a <__fmt_d+0xc>
 10e:	0c 94 ce 20 	jmp	0x419c	; 0x419c <_sprintf_cdnopuxX+0xc>
 112:	0c 94 e1 20 	jmp	0x41c2	; 0x41c2 <sprintf+0xc>
 116:	0c 94 b5 12 	jmp	0x256a	; 0x256a <__cvt_u+0xc>
 11a:	0c 94 07 19 	jmp	0x320e	; 0x320e <__fmt_u+0xc>

0000011e <__ctors_end>:
 11e:	11 24       	eor	r1, r1
 120:	1f be       	out	0x3f, r1	; 63
 122:	cf ef       	ldi	r28, 0xFF	; 255
 124:	d1 e2       	ldi	r29, 0x21	; 33
 126:	de bf       	out	0x3e, r29	; 62
 128:	cd bf       	out	0x3d, r28	; 61
 12a:	00 e0       	ldi	r16, 0x00	; 0
 12c:	0c bf       	out	0x3c, r16	; 60

0000012e <__do_copy_data>:
 12e:	e4 ee       	ldi	r30, 0xE4	; 228
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	40 e0       	ldi	r20, 0x00	; 0
 134:	19 c0       	rjmp	.+50     	; 0x168 <__do_clear_bss+0x8>
 136:	b7 91       	elpm	r27, Z+
 138:	a7 91       	elpm	r26, Z+
 13a:	37 91       	elpm	r19, Z+
 13c:	27 91       	elpm	r18, Z+
 13e:	07 91       	elpm	r16, Z+
 140:	07 fd       	sbrc	r16, 7
 142:	0e c0       	rjmp	.+28     	; 0x160 <__do_clear_bss>
 144:	97 91       	elpm	r25, Z+
 146:	87 91       	elpm	r24, Z+
 148:	ef 01       	movw	r28, r30
 14a:	f9 2f       	mov	r31, r25
 14c:	e8 2f       	mov	r30, r24
 14e:	0b bf       	out	0x3b, r16	; 59
 150:	07 90       	elpm	r0, Z+
 152:	0d 92       	st	X+, r0
 154:	a2 17       	cp	r26, r18
 156:	b3 07       	cpc	r27, r19
 158:	d9 f7       	brne	.-10     	; 0x150 <__do_copy_data+0x22>
 15a:	fe 01       	movw	r30, r28
 15c:	1b be       	out	0x3b, r1	; 59
 15e:	04 c0       	rjmp	.+8      	; 0x168 <__do_clear_bss+0x8>

00000160 <__do_clear_bss>:
 160:	1d 92       	st	X+, r1
 162:	a2 17       	cp	r26, r18
 164:	b3 07       	cpc	r27, r19
 166:	e1 f7       	brne	.-8      	; 0x160 <__do_clear_bss>
 168:	e9 3e       	cpi	r30, 0xE9	; 233
 16a:	f4 07       	cpc	r31, r20
 16c:	21 f7       	brne	.-56     	; 0x136 <__do_copy_data+0x8>
 16e:	0e 94 0e 1f 	call	0x3e1c	; 0x3e1c <main>
 172:	0c 94 c1 21 	jmp	0x4382	; 0x4382 <exit>

00000176 <_exit>:
 176:	f8 94       	cli

00000178 <__stop_program>:
 178:	ff cf       	rjmp	.-2      	; 0x178 <__stop_program>

Disassembly of section .text:

0000449e <__bad_interrupt>:
    449e:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00003e1c <main>:

//#include "MEGA_1284P_SPI.h" //adding MEGA_1284P SPI Testing code

int main(void)
{
	LED_Init();
    3e1c:	0e 94 b6 21 	call	0x436c	; 0x436c <LED_Init>
	VOLTAGE_Translator_Init();
    3e20:	0e 94 b5 20 	call	0x416a	; 0x416a <VOLTAGE_Translator_Init>
	USART_Init();
    3e24:	0e 94 0d 20 	call	0x401a	; 0x401a <USART_Init>
	SLAVE_CS_Deselect();
    3e28:	0e 94 b7 1d 	call	0x3b6e	; 0x3b6e <SLAVE_CS_Deselect>
	SPI_MASTER_Init();
    3e2c:	0e 94 ee 20 	call	0x41dc	; 0x41dc <SPI_MASTER_Init>
	LED_Green_Toggle();
    3e30:	0e 94 fb 21 	call	0x43f6	; 0x43f6 <LED_Green_Toggle>
	//PORTA &= ~(1 << PA3); //~CS pin set low for selecting slave device
	
    while(1)
    {		
		CLEAR_ARR();
    3e34:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <CLEAR_ARR>
		USART_Data("->Arrays Cleared \n");
    3e38:	6c eb       	ldi	r22, 0xBC	; 188
    3e3a:	75 e0       	ldi	r23, 0x05	; 5
    3e3c:	80 e0       	ldi	r24, 0x00	; 0
    3e3e:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		
		UserInput(true); //true therefore command
    3e42:	81 e0       	ldi	r24, 0x01	; 1
    3e44:	0e 94 4b 18 	call	0x3096	; 0x3096 <UserInput>
		
		LED_Red_Toggle();
    3e48:	0e 94 f4 21 	call	0x43e8	; 0x43e8 <LED_Red_Toggle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3e4c:	2f ef       	ldi	r18, 0xFF	; 255
    3e4e:	81 ee       	ldi	r24, 0xE1	; 225
    3e50:	94 e0       	ldi	r25, 0x04	; 4
    3e52:	21 50       	subi	r18, 0x01	; 1
    3e54:	80 40       	sbci	r24, 0x00	; 0
    3e56:	90 40       	sbci	r25, 0x00	; 0
    3e58:	e1 f7       	brne	.-8      	; 0x3e52 <main+0x36>
    3e5a:	00 c0       	rjmp	.+0      	; 0x3e5c <main+0x40>
    3e5c:	00 00       	nop
    3e5e:	ea cf       	rjmp	.-44     	; 0x3e34 <main+0x18>

Disassembly of section .text.USART_Init:

0000401a <USART_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    401a:	87 e6       	ldi	r24, 0x67	; 103
    401c:	90 e0       	ldi	r25, 0x00	; 0
    401e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
    4022:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
    4026:	8d b1       	in	r24, 0x0d	; 13
    4028:	82 60       	ori	r24, 0x02	; 2
    402a:	8d b9       	out	0x0d, r24	; 13
    402c:	e1 ec       	ldi	r30, 0xC1	; 193
    402e:	f0 e0       	ldi	r31, 0x00	; 0
    4030:	80 81       	ld	r24, Z
    4032:	88 60       	ori	r24, 0x08	; 8
    4034:	80 83       	st	Z, r24
    4036:	8d b1       	in	r24, 0x0d	; 13
    4038:	8e 7f       	andi	r24, 0xFE	; 254
    403a:	8d b9       	out	0x0d, r24	; 13
    403c:	80 81       	ld	r24, Z
    403e:	80 61       	ori	r24, 0x10	; 16
    4040:	80 83       	st	Z, r24
    4042:	81 b1       	in	r24, 0x01	; 1
    4044:	84 60       	ori	r24, 0x04	; 4
    4046:	81 b9       	out	0x01, r24	; 1
    4048:	82 b1       	in	r24, 0x02	; 2
    404a:	84 60       	ori	r24, 0x04	; 4
    404c:	82 b9       	out	0x02, r24	; 2
    404e:	08 95       	ret

Disassembly of section .text.USART_TX_Data:

000043cc <USART_TX_Data>:
    43cc:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    43d0:	95 ff       	sbrs	r25, 5
    43d2:	fc cf       	rjmp	.-8      	; 0x43cc <USART_TX_Data>
    43d4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    43d8:	08 95       	ret

Disassembly of section .text.USART_Data:

00003d88 <USART_Data>:
    3d88:	cf 92       	push	r12
    3d8a:	df 92       	push	r13
    3d8c:	ef 92       	push	r14
    3d8e:	cf 93       	push	r28
    3d90:	df 93       	push	r29
    3d92:	6b 01       	movw	r12, r22
    3d94:	e8 2e       	mov	r14, r24
    3d96:	c0 e0       	ldi	r28, 0x00	; 0
    3d98:	d0 e0       	ldi	r29, 0x00	; 0
    3d9a:	0f c0       	rjmp	.+30     	; 0x3dba <USART_Data+0x32>
    3d9c:	ae 2d       	mov	r26, r14
    3d9e:	c6 01       	movw	r24, r12
    3da0:	8c 0f       	add	r24, r28
    3da2:	9d 1f       	adc	r25, r29
    3da4:	a1 1d       	adc	r26, r1
    3da6:	d7 fd       	sbrc	r29, 7
    3da8:	aa 95       	dec	r26
    3daa:	fc 01       	movw	r30, r24
    3dac:	5a 2f       	mov	r21, r26
    3dae:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    3db2:	86 2f       	mov	r24, r22
    3db4:	0e 94 e6 21 	call	0x43cc	; 0x43cc <USART_TX_Data>
    3db8:	21 96       	adiw	r28, 0x01	; 1
    3dba:	8e 2d       	mov	r24, r14
    3dbc:	b6 01       	movw	r22, r12
    3dbe:	0e 94 00 21 	call	0x4200	; 0x4200 <strlen>
    3dc2:	c8 17       	cp	r28, r24
    3dc4:	d9 07       	cpc	r29, r25
    3dc6:	50 f3       	brcs	.-44     	; 0x3d9c <USART_Data+0x14>
    3dc8:	df 91       	pop	r29
    3dca:	cf 91       	pop	r28
    3dcc:	ef 90       	pop	r14
    3dce:	df 90       	pop	r13
    3dd0:	cf 90       	pop	r12
    3dd2:	08 95       	ret

Disassembly of section .text.USART_RX_Data:

000043da <USART_RX_Data>:
    43da:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    43de:	88 23       	and	r24, r24
    43e0:	e4 f7       	brge	.-8      	; 0x43da <USART_RX_Data>
    43e2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    43e6:	08 95       	ret

Disassembly of section .text.LED_Init:

0000436c <LED_Init>:
    436c:	e1 e0       	ldi	r30, 0x01	; 1
    436e:	f1 e0       	ldi	r31, 0x01	; 1
    4370:	80 81       	ld	r24, Z
    4372:	80 66       	ori	r24, 0x60	; 96
    4374:	80 83       	st	Z, r24
    4376:	e2 e0       	ldi	r30, 0x02	; 2
    4378:	f1 e0       	ldi	r31, 0x01	; 1
    437a:	80 81       	ld	r24, Z
    437c:	80 66       	ori	r24, 0x60	; 96
    437e:	80 83       	st	Z, r24
    4380:	08 95       	ret

Disassembly of section .text.LED_Red_Toggle:

000043e8 <LED_Red_Toggle>:
}

void LED_Red_Toggle()
{
	PORTH ^= (1 << PH6); //toggle RED_LED (PH6)
    43e8:	e2 e0       	ldi	r30, 0x02	; 2
    43ea:	f1 e0       	ldi	r31, 0x01	; 1
    43ec:	90 81       	ld	r25, Z
    43ee:	80 e4       	ldi	r24, 0x40	; 64
    43f0:	89 27       	eor	r24, r25
    43f2:	80 83       	st	Z, r24
    43f4:	08 95       	ret

Disassembly of section .text.LED_Green_Toggle:

000043f6 <LED_Green_Toggle>:
}

void LED_Green_Toggle()
{
	PORTH ^= (1 << PH5); //toggle GREEN_LED (PH5)
    43f6:	e2 e0       	ldi	r30, 0x02	; 2
    43f8:	f1 e0       	ldi	r31, 0x01	; 1
    43fa:	90 81       	ld	r25, Z
    43fc:	80 e2       	ldi	r24, 0x20	; 32
    43fe:	89 27       	eor	r24, r25
    4400:	80 83       	st	Z, r24
    4402:	08 95       	ret

Disassembly of section .text.VOLTAGE_Translator_Init:

0000416a <VOLTAGE_Translator_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    416a:	87 b1       	in	r24, 0x07	; 7
    416c:	80 64       	ori	r24, 0x40	; 64
    416e:	87 b9       	out	0x07, r24	; 7
    4170:	88 b1       	in	r24, 0x08	; 8
    4172:	80 64       	ori	r24, 0x40	; 64
    4174:	88 b9       	out	0x08, r24	; 8
    4176:	83 b3       	in	r24, 0x13	; 19
    4178:	81 60       	ori	r24, 0x01	; 1
    417a:	83 bb       	out	0x13, r24	; 19
    417c:	84 b3       	in	r24, 0x14	; 20
    417e:	81 60       	ori	r24, 0x01	; 1
    4180:	84 bb       	out	0x14, r24	; 20
    4182:	83 b3       	in	r24, 0x13	; 19
    4184:	82 60       	ori	r24, 0x02	; 2
    4186:	83 bb       	out	0x13, r24	; 19
    4188:	84 b3       	in	r24, 0x14	; 20
    418a:	82 60       	ori	r24, 0x02	; 2
    418c:	84 bb       	out	0x14, r24	; 20
    418e:	08 95       	ret

Disassembly of section .text.SLAVE_CS_Deselect:

00003b6e <SLAVE_CS_Deselect>:
    3b6e:	81 b1       	in	r24, 0x01	; 1
    3b70:	88 60       	ori	r24, 0x08	; 8
    3b72:	81 b9       	out	0x01, r24	; 1
    3b74:	82 b1       	in	r24, 0x02	; 2
    3b76:	88 60       	ori	r24, 0x08	; 8
    3b78:	82 b9       	out	0x02, r24	; 2
    3b7a:	81 b1       	in	r24, 0x01	; 1
    3b7c:	80 61       	ori	r24, 0x10	; 16
    3b7e:	81 b9       	out	0x01, r24	; 1
    3b80:	82 b1       	in	r24, 0x02	; 2
    3b82:	80 61       	ori	r24, 0x10	; 16
    3b84:	82 b9       	out	0x02, r24	; 2
    3b86:	81 b1       	in	r24, 0x01	; 1
    3b88:	80 62       	ori	r24, 0x20	; 32
    3b8a:	81 b9       	out	0x01, r24	; 1
    3b8c:	82 b1       	in	r24, 0x02	; 2
    3b8e:	80 62       	ori	r24, 0x20	; 32
    3b90:	82 b9       	out	0x02, r24	; 2
    3b92:	81 b1       	in	r24, 0x01	; 1
    3b94:	80 64       	ori	r24, 0x40	; 64
    3b96:	81 b9       	out	0x01, r24	; 1
    3b98:	82 b1       	in	r24, 0x02	; 2
    3b9a:	80 64       	ori	r24, 0x40	; 64
    3b9c:	82 b9       	out	0x02, r24	; 2
    3b9e:	81 b1       	in	r24, 0x01	; 1
    3ba0:	80 68       	ori	r24, 0x80	; 128
    3ba2:	81 b9       	out	0x01, r24	; 1
    3ba4:	82 b1       	in	r24, 0x02	; 2
    3ba6:	80 68       	ori	r24, 0x80	; 128
    3ba8:	82 b9       	out	0x02, r24	; 2
    3baa:	81 b1       	in	r24, 0x01	; 1
    3bac:	82 60       	ori	r24, 0x02	; 2
    3bae:	81 b9       	out	0x01, r24	; 1
    3bb0:	82 b1       	in	r24, 0x02	; 2
    3bb2:	82 60       	ori	r24, 0x02	; 2
    3bb4:	82 b9       	out	0x02, r24	; 2
    3bb6:	81 b1       	in	r24, 0x01	; 1
    3bb8:	84 60       	ori	r24, 0x04	; 4
    3bba:	81 b9       	out	0x01, r24	; 1
    3bbc:	82 b1       	in	r24, 0x02	; 2
    3bbe:	84 60       	ori	r24, 0x04	; 4
    3bc0:	82 b9       	out	0x02, r24	; 2
    3bc2:	81 b1       	in	r24, 0x01	; 1
    3bc4:	88 60       	ori	r24, 0x08	; 8
    3bc6:	81 b9       	out	0x01, r24	; 1
    3bc8:	82 b1       	in	r24, 0x02	; 2
    3bca:	88 60       	ori	r24, 0x08	; 8
    3bcc:	82 b9       	out	0x02, r24	; 2
    3bce:	08 95       	ret

Disassembly of section .text.FLASH_NAND_CS_ENABLE:

00004478 <FLASH_NAND_CS_ENABLE>:
	PORTA |= (1 << PF3); //setting ~CS pin (PF3) high to de-select the slave device (we are not working on it yet)
}

void FLASH_NAND_CS_ENABLE() //enable the Chip Select of the FLASH NAND
{
	PORTA &= ~(1 << PA3); //~CS pin set low for selecting slave device
    4478:	82 b1       	in	r24, 0x02	; 2
    447a:	87 7f       	andi	r24, 0xF7	; 247
    447c:	82 b9       	out	0x02, r24	; 2
    447e:	08 95       	ret

Disassembly of section .text.FLASH_NAND_CS_DISABLE:

00004480 <FLASH_NAND_CS_DISABLE>:
}

void FLASH_NAND_CS_DISABLE() //disable the Chip Select of the FLASH NAND
{
	PORTA |= (1 << PA3); //~CS pin set high for de-selecting slave device; to end the command sequence
    4480:	82 b1       	in	r24, 0x02	; 2
    4482:	88 60       	ori	r24, 0x08	; 8
    4484:	82 b9       	out	0x02, r24	; 2
    4486:	08 95       	ret

Disassembly of section .text.Print_To_User:

00003360 <Print_To_User>:
	if (command)
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
}

void Print_To_User(int num_elements, int offset, const char *msg, const uint8_t *arr_start, uint8_t *arr_dest) //# of elements to print along with message, and to which array
{
    3360:	3f 92       	push	r3
    3362:	4f 92       	push	r4
    3364:	5f 92       	push	r5
    3366:	6f 92       	push	r6
    3368:	7f 92       	push	r7
    336a:	8f 92       	push	r8
    336c:	9f 92       	push	r9
    336e:	af 92       	push	r10
    3370:	bf 92       	push	r11
    3372:	cf 92       	push	r12
    3374:	df 92       	push	r13
    3376:	ef 92       	push	r14
    3378:	ff 92       	push	r15
    337a:	0f 93       	push	r16
    337c:	1f 93       	push	r17
    337e:	cf 93       	push	r28
    3380:	df 93       	push	r29
    3382:	5c 01       	movw	r10, r24
    3384:	4b 01       	movw	r8, r22
    3386:	72 2e       	mov	r7, r18
    3388:	13 2f       	mov	r17, r19
    338a:	34 2e       	mov	r3, r20
    338c:	27 01       	movw	r4, r14
    338e:	60 2e       	mov	r6, r16
	for (int i = 0; i < num_elements; i++)
    3390:	c0 e0       	ldi	r28, 0x00	; 0
    3392:	d0 e0       	ldi	r29, 0x00	; 0
    3394:	26 c0       	rjmp	.+76     	; 0x33e2 <Print_To_User+0x82>
	{
		sprintf(arr_dest, msg, arr_start[i + offset]);
    3396:	ce 01       	movw	r24, r28
    3398:	88 0d       	add	r24, r8
    339a:	99 1d       	adc	r25, r9
    339c:	46 2d       	mov	r20, r6
    339e:	92 01       	movw	r18, r4
    33a0:	28 0f       	add	r18, r24
    33a2:	39 1f       	adc	r19, r25
    33a4:	41 1d       	adc	r20, r1
    33a6:	97 fd       	sbrc	r25, 7
    33a8:	4a 95       	dec	r20
    33aa:	a4 2f       	mov	r26, r20
    33ac:	c9 01       	movw	r24, r18
    33ae:	f9 01       	movw	r30, r18
    33b0:	5a 2f       	mov	r21, r26
    33b2:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    33b6:	1f 92       	push	r1
    33b8:	6f 93       	push	r22
    33ba:	3f 92       	push	r3
    33bc:	1f 93       	push	r17
    33be:	7f 92       	push	r7
    33c0:	df 92       	push	r13
    33c2:	cf 92       	push	r12
    33c4:	0e 94 db 20 	call	0x41b6	; 0x41b6 <sprintf>
		USART_Data(arr_dest);
    33c8:	b6 01       	movw	r22, r12
    33ca:	80 e8       	ldi	r24, 0x80	; 128
    33cc:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
}

void Print_To_User(int num_elements, int offset, const char *msg, const uint8_t *arr_start, uint8_t *arr_dest) //# of elements to print along with message, and to which array
{
	for (int i = 0; i < num_elements; i++)
    33d0:	21 96       	adiw	r28, 0x01	; 1
    33d2:	8d b7       	in	r24, 0x3d	; 61
    33d4:	9e b7       	in	r25, 0x3e	; 62
    33d6:	07 96       	adiw	r24, 0x07	; 7
    33d8:	0f b6       	in	r0, 0x3f	; 63
    33da:	f8 94       	cli
    33dc:	9e bf       	out	0x3e, r25	; 62
    33de:	0f be       	out	0x3f, r0	; 63
    33e0:	8d bf       	out	0x3d, r24	; 61
    33e2:	ca 15       	cp	r28, r10
    33e4:	db 05       	cpc	r29, r11
    33e6:	bc f2       	brlt	.-82     	; 0x3396 <Print_To_User+0x36>
	{
		sprintf(arr_dest, msg, arr_start[i + offset]);
		USART_Data(arr_dest);
	}
}
    33e8:	df 91       	pop	r29
    33ea:	cf 91       	pop	r28
    33ec:	1f 91       	pop	r17
    33ee:	0f 91       	pop	r16
    33f0:	ff 90       	pop	r15
    33f2:	ef 90       	pop	r14
    33f4:	df 90       	pop	r13
    33f6:	cf 90       	pop	r12
    33f8:	bf 90       	pop	r11
    33fa:	af 90       	pop	r10
    33fc:	9f 90       	pop	r9
    33fe:	8f 90       	pop	r8
    3400:	7f 90       	pop	r7
    3402:	6f 90       	pop	r6
    3404:	5f 90       	pop	r5
    3406:	4f 90       	pop	r4
    3408:	3f 90       	pop	r3
    340a:	08 95       	ret

Disassembly of section .text.HEX_Verification:

00002fda <HEX_Verification>:
		}
	}
}

bool HEX_Verification() //verifies uint8_t (ASCII) to Hex validity and allocates in appropriated location
{
    2fda:	cf 92       	push	r12
    2fdc:	df 92       	push	r13
    2fde:	ef 92       	push	r14
    2fe0:	ff 92       	push	r15
    2fe2:	0f 93       	push	r16
	//parse the data into usable hex values
	for (int i = 0; i <= FLASH_NAND_ADDRESS_MAX; i++)
    2fe4:	80 e0       	ldi	r24, 0x00	; 0
    2fe6:	90 e0       	ldi	r25, 0x00	; 0
    2fe8:	45 c0       	rjmp	.+138    	; 0x3074 <HEX_Verification+0x9a>
	{
		if (CommandBuffer[i] >= '0' && CommandBuffer[i] <= '9')
    2fea:	fc 01       	movw	r30, r24
    2fec:	e0 50       	subi	r30, 0x00	; 0
    2fee:	fe 4f       	sbci	r31, 0xFE	; 254
    2ff0:	20 81       	ld	r18, Z
    2ff2:	30 ed       	ldi	r19, 0xD0	; 208
    2ff4:	32 0f       	add	r19, r18
    2ff6:	3a 30       	cpi	r19, 0x0A	; 10
    2ff8:	28 f4       	brcc	.+10     	; 0x3004 <HEX_Verification+0x2a>
		{
			CommandBuffer[i] = CommandBuffer[i] - '0';
    2ffa:	fc 01       	movw	r30, r24
    2ffc:	e0 50       	subi	r30, 0x00	; 0
    2ffe:	fe 4f       	sbci	r31, 0xFE	; 254
    3000:	30 83       	st	Z, r19
    3002:	37 c0       	rjmp	.+110    	; 0x3072 <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] >= 'A' && CommandBuffer[i] <= 'F')
    3004:	3f eb       	ldi	r19, 0xBF	; 191
    3006:	32 0f       	add	r19, r18
    3008:	36 30       	cpi	r19, 0x06	; 6
    300a:	30 f4       	brcc	.+12     	; 0x3018 <HEX_Verification+0x3e>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'A' + 10;
    300c:	fc 01       	movw	r30, r24
    300e:	e0 50       	subi	r30, 0x00	; 0
    3010:	fe 4f       	sbci	r31, 0xFE	; 254
    3012:	27 53       	subi	r18, 0x37	; 55
    3014:	20 83       	st	Z, r18
    3016:	2d c0       	rjmp	.+90     	; 0x3072 <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] >= 'a' && CommandBuffer[i] <= 'f')
    3018:	3f e9       	ldi	r19, 0x9F	; 159
    301a:	32 0f       	add	r19, r18
    301c:	36 30       	cpi	r19, 0x06	; 6
    301e:	30 f4       	brcc	.+12     	; 0x302c <HEX_Verification+0x52>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'a' + 10;
    3020:	fc 01       	movw	r30, r24
    3022:	e0 50       	subi	r30, 0x00	; 0
    3024:	fe 4f       	sbci	r31, 0xFE	; 254
    3026:	27 55       	subi	r18, 0x57	; 87
    3028:	20 83       	st	Z, r18
    302a:	23 c0       	rjmp	.+70     	; 0x3072 <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] == '\r' || CommandBuffer[i] == '\n' || CommandBuffer[i] == '\0')
    302c:	2d 30       	cpi	r18, 0x0D	; 13
    302e:	41 f1       	breq	.+80     	; 0x3080 <HEX_Verification+0xa6>
    3030:	2a 30       	cpi	r18, 0x0A	; 10
    3032:	41 f1       	breq	.+80     	; 0x3084 <HEX_Verification+0xaa>
    3034:	22 23       	and	r18, r18
    3036:	41 f1       	breq	.+80     	; 0x3088 <HEX_Verification+0xae>
		{
			break;
		}
		else
		{
			USART_Data("Wrong Input \nMake sure input is HEX valid [0 - F] \n");
    3038:	6a e7       	ldi	r22, 0x7A	; 122
    303a:	71 e0       	ldi	r23, 0x01	; 1
    303c:	80 e0       	ldi	r24, 0x00	; 0
    303e:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
			Print_To_User(1, 0, "Here is what was inputted: 0x%02X \n", CommandBuffer, status_feature);
    3042:	80 e0       	ldi	r24, 0x00	; 0
    3044:	92 e0       	ldi	r25, 0x02	; 2
    3046:	7c 01       	movw	r14, r24
    3048:	20 e8       	ldi	r18, 0x80	; 128
    304a:	02 2f       	mov	r16, r18
    304c:	0f 2e       	mov	r0, r31
    304e:	f0 e0       	ldi	r31, 0x00	; 0
    3050:	cf 2e       	mov	r12, r31
    3052:	fa e0       	ldi	r31, 0x0A	; 10
    3054:	df 2e       	mov	r13, r31
    3056:	f0 2d       	mov	r31, r0
    3058:	2e ea       	ldi	r18, 0xAE	; 174
    305a:	31 e0       	ldi	r19, 0x01	; 1
    305c:	40 e0       	ldi	r20, 0x00	; 0
    305e:	60 e0       	ldi	r22, 0x00	; 0
    3060:	70 e0       	ldi	r23, 0x00	; 0
    3062:	81 e0       	ldi	r24, 0x01	; 1
    3064:	90 e0       	ldi	r25, 0x00	; 0
    3066:	0e 94 b0 19 	call	0x3360	; 0x3360 <Print_To_User>
			CLEAR_ARR();
    306a:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <CLEAR_ARR>
			return false; //return false, indicating failed test
    306e:	80 e0       	ldi	r24, 0x00	; 0
    3070:	0c c0       	rjmp	.+24     	; 0x308a <HEX_Verification+0xb0>
}

bool HEX_Verification() //verifies uint8_t (ASCII) to Hex validity and allocates in appropriated location
{
	//parse the data into usable hex values
	for (int i = 0; i <= FLASH_NAND_ADDRESS_MAX; i++)
    3072:	01 96       	adiw	r24, 0x01	; 1
    3074:	86 30       	cpi	r24, 0x06	; 6
    3076:	91 05       	cpc	r25, r1
    3078:	0c f4       	brge	.+2      	; 0x307c <HEX_Verification+0xa2>
    307a:	b7 cf       	rjmp	.-146    	; 0x2fea <HEX_Verification+0x10>
			Print_To_User(1, 0, "Here is what was inputted: 0x%02X \n", CommandBuffer, status_feature);
			CLEAR_ARR();
			return false; //return false, indicating failed test
		}
	}
	return true; //return true, indicating passed test
    307c:	81 e0       	ldi	r24, 0x01	; 1
    307e:	05 c0       	rjmp	.+10     	; 0x308a <HEX_Verification+0xb0>
    3080:	81 e0       	ldi	r24, 0x01	; 1
    3082:	03 c0       	rjmp	.+6      	; 0x308a <HEX_Verification+0xb0>
    3084:	81 e0       	ldi	r24, 0x01	; 1
    3086:	01 c0       	rjmp	.+2      	; 0x308a <HEX_Verification+0xb0>
    3088:	81 e0       	ldi	r24, 0x01	; 1
	//Print_To_User(6, 0, "Parsed nibble: 0x%02X\n", CommandBuffer, status_feature); //troubleshooting, verifies if ASCII is converted to hex values
}
    308a:	0f 91       	pop	r16
    308c:	ff 90       	pop	r15
    308e:	ef 90       	pop	r14
    3090:	df 90       	pop	r13
    3092:	cf 90       	pop	r12
    3094:	08 95       	ret

Disassembly of section .text.NAND_Address_Checker:

00003a90 <NAND_Address_Checker>:

void NAND_Address_Checker() //returns user the Column and Block/Page Addresses
{
    3a90:	6f 92       	push	r6
    3a92:	7f 92       	push	r7
    3a94:	8f 92       	push	r8
    3a96:	cf 92       	push	r12
    3a98:	df 92       	push	r13
    3a9a:	ef 92       	push	r14
    3a9c:	ff 92       	push	r15
    3a9e:	0f 93       	push	r16
	USART_Data("---Column Address--- 2 bytes \n");
    3aa0:	62 ed       	ldi	r22, 0xD2	; 210
    3aa2:	71 e0       	ldi	r23, 0x01	; 1
    3aa4:	80 e0       	ldi	r24, 0x00	; 0
    3aa6:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
	Print_To_User(COLUMN_ADDRESS, 0, "0x%02X \n", Byte_Address, status_feature);
    3aaa:	86 e2       	ldi	r24, 0x26	; 38
    3aac:	92 e1       	ldi	r25, 0x12	; 18
    3aae:	3c 01       	movw	r6, r24
    3ab0:	20 e8       	ldi	r18, 0x80	; 128
    3ab2:	82 2e       	mov	r8, r18
    3ab4:	0f 2e       	mov	r0, r31
    3ab6:	f0 e0       	ldi	r31, 0x00	; 0
    3ab8:	cf 2e       	mov	r12, r31
    3aba:	fa e0       	ldi	r31, 0x0A	; 10
    3abc:	df 2e       	mov	r13, r31
    3abe:	f0 2d       	mov	r31, r0
    3ac0:	08 2d       	mov	r16, r8
    3ac2:	73 01       	movw	r14, r6
    3ac4:	21 ef       	ldi	r18, 0xF1	; 241
    3ac6:	31 e0       	ldi	r19, 0x01	; 1
    3ac8:	40 e0       	ldi	r20, 0x00	; 0
    3aca:	60 e0       	ldi	r22, 0x00	; 0
    3acc:	70 e0       	ldi	r23, 0x00	; 0
    3ace:	82 e0       	ldi	r24, 0x02	; 2
    3ad0:	90 e0       	ldi	r25, 0x00	; 0
    3ad2:	0e 94 b0 19 	call	0x3360	; 0x3360 <Print_To_User>

	USART_Data("---Block/Page Address--- 3 bytes \n");	
    3ad6:	6a ef       	ldi	r22, 0xFA	; 250
    3ad8:	71 e0       	ldi	r23, 0x01	; 1
    3ada:	80 e0       	ldi	r24, 0x00	; 0
    3adc:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
	Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "0x%02X \n", Byte_Address, status_feature);
    3ae0:	21 ef       	ldi	r18, 0xF1	; 241
    3ae2:	31 e0       	ldi	r19, 0x01	; 1
    3ae4:	40 e0       	ldi	r20, 0x00	; 0
    3ae6:	62 e0       	ldi	r22, 0x02	; 2
    3ae8:	70 e0       	ldi	r23, 0x00	; 0
    3aea:	83 e0       	ldi	r24, 0x03	; 3
    3aec:	90 e0       	ldi	r25, 0x00	; 0
    3aee:	0e 94 b0 19 	call	0x3360	; 0x3360 <Print_To_User>
}
    3af2:	0f 91       	pop	r16
    3af4:	ff 90       	pop	r15
    3af6:	ef 90       	pop	r14
    3af8:	df 90       	pop	r13
    3afa:	cf 90       	pop	r12
    3afc:	8f 90       	pop	r8
    3afe:	7f 90       	pop	r7
    3b00:	6f 90       	pop	r6
    3b02:	08 95       	ret

Disassembly of section .text.ExecuteCommand:

00001b44 <ExecuteCommand>:

void ExecuteCommand(const uint8_t *str) //Execute Command Line function
{
    1b44:	cf 92       	push	r12
    1b46:	df 92       	push	r13
    1b48:	ef 92       	push	r14
    1b4a:	ff 92       	push	r15
    1b4c:	0f 93       	push	r16
    1b4e:	1f 93       	push	r17
    1b50:	cf 93       	push	r28
    1b52:	df 93       	push	r29
    1b54:	6b 01       	movw	r12, r22
    1b56:	e8 2e       	mov	r14, r24
	if (strcmp(str, "Flash ID") == 0) //Flash ID Command
    1b58:	2d e1       	ldi	r18, 0x1D	; 29
    1b5a:	32 e0       	ldi	r19, 0x02	; 2
    1b5c:	40 e0       	ldi	r20, 0x00	; 0
    1b5e:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <strcmp>
    1b62:	89 2b       	or	r24, r25
    1b64:	29 f4       	brne	.+10     	; 0x1b70 <ExecuteCommand+0x2c>
	{
		CLEAR_ARR();
    1b66:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <CLEAR_ARR>
		FLASH_ID(); //reads Device ID
    1b6a:	0e 94 c8 1c 	call	0x3990	; 0x3990 <FLASH_ID>
    1b6e:	8e c1       	rjmp	.+796    	; 0x1e8c <ExecuteCommand+0x348>
	}
	
	else if (strcmp(str, "Erase Memory") == 0) //Erase Flash Memory Command
    1b70:	26 e2       	ldi	r18, 0x26	; 38
    1b72:	32 e0       	ldi	r19, 0x02	; 2
    1b74:	40 e0       	ldi	r20, 0x00	; 0
    1b76:	8e 2d       	mov	r24, r14
    1b78:	b6 01       	movw	r22, r12
    1b7a:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <strcmp>
    1b7e:	89 2b       	or	r24, r25
    1b80:	49 f4       	brne	.+18     	; 0x1b94 <ExecuteCommand+0x50>
	{
		s = 0; //sets main array address to normal operation
    1b82:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1b86:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
		CLEAR_ARR();
    1b8a:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <CLEAR_ARR>
		FLASH_Block_Erase(); //Erases Flash Block
    1b8e:	0e 94 74 1f 	call	0x3ee8	; 0x3ee8 <FLASH_Block_Erase>
    1b92:	7c c1       	rjmp	.+760    	; 0x1e8c <ExecuteCommand+0x348>
	}
	
	else if (strcmp(str, "NAND Addresses") == 0) //Tells user what is Column and Block/Page Addresses
    1b94:	23 e3       	ldi	r18, 0x33	; 51
    1b96:	32 e0       	ldi	r19, 0x02	; 2
    1b98:	40 e0       	ldi	r20, 0x00	; 0
    1b9a:	8e 2d       	mov	r24, r14
    1b9c:	b6 01       	movw	r22, r12
    1b9e:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <strcmp>
    1ba2:	89 2b       	or	r24, r25
    1ba4:	19 f4       	brne	.+6      	; 0x1bac <ExecuteCommand+0x68>
	{
		NAND_Address_Checker();
    1ba6:	0e 94 48 1d 	call	0x3a90	; 0x3a90 <NAND_Address_Checker>
    1baa:	70 c1       	rjmp	.+736    	; 0x1e8c <ExecuteCommand+0x348>
	}
	
	else if (strcmp(str, "Write Test") == 0) //Basic Flash Test Command
    1bac:	22 e4       	ldi	r18, 0x42	; 66
    1bae:	32 e0       	ldi	r19, 0x02	; 2
    1bb0:	40 e0       	ldi	r20, 0x00	; 0
    1bb2:	8e 2d       	mov	r24, r14
    1bb4:	b6 01       	movw	r22, r12
    1bb6:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <strcmp>
    1bba:	89 2b       	or	r24, r25
    1bbc:	81 f5       	brne	.+96     	; 0x1c1e <ExecuteCommand+0xda>
	{
		s = 0;
    1bbe:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1bc2:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
		CLEAR_ARR();
    1bc6:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <CLEAR_ARR>
		
		UserInput(false); //User Input is added into an array, which will be written to memory
    1bca:	80 e0       	ldi	r24, 0x00	; 0
    1bcc:	0e 94 4b 18 	call	0x3096	; 0x3096 <UserInput>
		
		USART_Data("---Column Address--- 2 bytes \n");
    1bd0:	62 ed       	ldi	r22, 0xD2	; 210
    1bd2:	71 e0       	ldi	r23, 0x01	; 1
    1bd4:	80 e0       	ldi	r24, 0x00	; 0
    1bd6:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		COLUMN_BLOCK_PAGE_ADDRESSER(false);
    1bda:	80 e0       	ldi	r24, 0x00	; 0
    1bdc:	0e 94 07 12 	call	0x240e	; 0x240e <COLUMN_BLOCK_PAGE_ADDRESSER>

		USART_Data("---Block/Page Address--- 3 bytes \n");
    1be0:	6a ef       	ldi	r22, 0xFA	; 250
    1be2:	71 e0       	ldi	r23, 0x01	; 1
    1be4:	80 e0       	ldi	r24, 0x00	; 0
    1be6:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		COLUMN_BLOCK_PAGE_ADDRESSER(true);
    1bea:	81 e0       	ldi	r24, 0x01	; 1
    1bec:	0e 94 07 12 	call	0x240e	; 0x240e <COLUMN_BLOCK_PAGE_ADDRESSER>
		
		Print_To_User(FLASH_NAND_ADDRESS_MAX, 0, "Here is what was inputted: 0x%02X \n", Byte_Address, status_feature);
    1bf0:	86 e2       	ldi	r24, 0x26	; 38
    1bf2:	92 e1       	ldi	r25, 0x12	; 18
    1bf4:	7c 01       	movw	r14, r24
    1bf6:	20 e8       	ldi	r18, 0x80	; 128
    1bf8:	02 2f       	mov	r16, r18
    1bfa:	0f 2e       	mov	r0, r31
    1bfc:	f0 e0       	ldi	r31, 0x00	; 0
    1bfe:	cf 2e       	mov	r12, r31
    1c00:	fa e0       	ldi	r31, 0x0A	; 10
    1c02:	df 2e       	mov	r13, r31
    1c04:	f0 2d       	mov	r31, r0
    1c06:	2e ea       	ldi	r18, 0xAE	; 174
    1c08:	31 e0       	ldi	r19, 0x01	; 1
    1c0a:	40 e0       	ldi	r20, 0x00	; 0
    1c0c:	60 e0       	ldi	r22, 0x00	; 0
    1c0e:	70 e0       	ldi	r23, 0x00	; 0
    1c10:	85 e0       	ldi	r24, 0x05	; 5
    1c12:	90 e0       	ldi	r25, 0x00	; 0
    1c14:	0e 94 b0 19 	call	0x3360	; 0x3360 <Print_To_User>
		
		FLASH_Page_Program(); //adds user input into Flash Write Function, to memory...
    1c18:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <FLASH_Page_Program>
    1c1c:	37 c1       	rjmp	.+622    	; 0x1e8c <ExecuteCommand+0x348>
	}
	
	else if (strcmp(str, "Read Memory") == 0) //Basic Read Test Command
    1c1e:	2d e4       	ldi	r18, 0x4D	; 77
    1c20:	32 e0       	ldi	r19, 0x02	; 2
    1c22:	40 e0       	ldi	r20, 0x00	; 0
    1c24:	8e 2d       	mov	r24, r14
    1c26:	b6 01       	movw	r22, r12
    1c28:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <strcmp>
    1c2c:	89 2b       	or	r24, r25
    1c2e:	89 f4       	brne	.+34     	; 0x1c52 <ExecuteCommand+0x10e>
	{
		s = 0; //sets main array to normal operations
    1c30:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1c34:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
		CLEAR_ARR();
    1c38:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <CLEAR_ARR>
		FLASH_Page_Read();
    1c3c:	0e 94 b5 1f 	call	0x3f6a	; 0x3f6a <FLASH_Page_Read>

		USART_Data(data);
    1c40:	6f e1       	ldi	r22, 0x1F	; 31
    1c42:	7a e0       	ldi	r23, 0x0A	; 10
    1c44:	80 e8       	ldi	r24, 0x80	; 128
    1c46:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		USART_TX_Data('\n');
    1c4a:	8a e0       	ldi	r24, 0x0A	; 10
    1c4c:	0e 94 e6 21 	call	0x43cc	; 0x43cc <USART_TX_Data>
    1c50:	1d c1       	rjmp	.+570    	; 0x1e8c <ExecuteCommand+0x348>
	}
	
	else if (strcmp(str, "Parameter Page") == 0) //Basic Read Test Command
    1c52:	29 e5       	ldi	r18, 0x59	; 89
    1c54:	32 e0       	ldi	r19, 0x02	; 2
    1c56:	40 e0       	ldi	r20, 0x00	; 0
    1c58:	8e 2d       	mov	r24, r14
    1c5a:	b6 01       	movw	r22, r12
    1c5c:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <strcmp>
    1c60:	89 2b       	or	r24, r25
    1c62:	99 f5       	brne	.+102    	; 0x1cca <ExecuteCommand+0x186>
	{
		s = 1; //sets main array address to the correct place
    1c64:	81 e0       	ldi	r24, 0x01	; 1
    1c66:	90 e0       	ldi	r25, 0x00	; 0
    1c68:	90 93 25 12 	sts	0x1225, r25	; 0x801225 <s+0x1>
    1c6c:	80 93 24 12 	sts	0x1224, r24	; 0x801224 <s>
		CLEAR_ARR();
    1c70:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <CLEAR_ARR>
		FLASH_Para_Pg();
    1c74:	0e 94 9c 1e 	call	0x3d38	; 0x3d38 <FLASH_Para_Pg>
		
		//reading data from Data array
		//Print_To_User(PARAMETER_PAGE_SIZE, 0, "%i->Data Received: 0x%02X \n", data, status_feature);
		
		for (int i = 0; i < PARAMETER_PAGE_SIZE; i++) //address is incremented automatically after each byte is shifted out
    1c78:	c0 e0       	ldi	r28, 0x00	; 0
    1c7a:	d0 e0       	ldi	r29, 0x00	; 0
    1c7c:	21 c0       	rjmp	.+66     	; 0x1cc0 <ExecuteCommand+0x17c>
		{
			sprintf(status_feature, "%i->Data Received: 0x%02X \n", i, data[i]); //hex data to string
    1c7e:	fe 01       	movw	r30, r28
    1c80:	e1 5e       	subi	r30, 0xE1	; 225
    1c82:	f5 4f       	sbci	r31, 0xF5	; 245
    1c84:	80 81       	ld	r24, Z
    1c86:	1f 92       	push	r1
    1c88:	8f 93       	push	r24
    1c8a:	df 93       	push	r29
    1c8c:	cf 93       	push	r28
    1c8e:	88 e6       	ldi	r24, 0x68	; 104
    1c90:	92 e0       	ldi	r25, 0x02	; 2
    1c92:	a0 e0       	ldi	r26, 0x00	; 0
    1c94:	af 93       	push	r26
    1c96:	9f 93       	push	r25
    1c98:	8f 93       	push	r24
    1c9a:	00 e0       	ldi	r16, 0x00	; 0
    1c9c:	1a e0       	ldi	r17, 0x0A	; 10
    1c9e:	1f 93       	push	r17
    1ca0:	0f 93       	push	r16
    1ca2:	0e 94 c8 20 	call	0x4190	; 0x4190 <_sprintf_cdnopuxX>
			USART_Data(status_feature);
    1ca6:	b8 01       	movw	r22, r16
    1ca8:	80 e8       	ldi	r24, 0x80	; 128
    1caa:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		FLASH_Para_Pg();
		
		//reading data from Data array
		//Print_To_User(PARAMETER_PAGE_SIZE, 0, "%i->Data Received: 0x%02X \n", data, status_feature);
		
		for (int i = 0; i < PARAMETER_PAGE_SIZE; i++) //address is incremented automatically after each byte is shifted out
    1cae:	21 96       	adiw	r28, 0x01	; 1
    1cb0:	8d b7       	in	r24, 0x3d	; 61
    1cb2:	9e b7       	in	r25, 0x3e	; 62
    1cb4:	09 96       	adiw	r24, 0x09	; 9
    1cb6:	0f b6       	in	r0, 0x3f	; 63
    1cb8:	f8 94       	cli
    1cba:	9e bf       	out	0x3e, r25	; 62
    1cbc:	0f be       	out	0x3f, r0	; 63
    1cbe:	8d bf       	out	0x3d, r24	; 61
    1cc0:	cf 3f       	cpi	r28, 0xFF	; 255
    1cc2:	d1 05       	cpc	r29, r1
    1cc4:	e1 f2       	breq	.-72     	; 0x1c7e <ExecuteCommand+0x13a>
    1cc6:	dc f2       	brlt	.-74     	; 0x1c7e <ExecuteCommand+0x13a>
    1cc8:	e1 c0       	rjmp	.+450    	; 0x1e8c <ExecuteCommand+0x348>
			sprintf(status_feature, "%i->Data Received: 0x%02X \n", i, data[i]); //hex data to string
			USART_Data(status_feature);
		}	
	}
	
	else if (strcmp(str, "Flash Status") == 0) //Read Flash NAND status register
    1cca:	24 e8       	ldi	r18, 0x84	; 132
    1ccc:	32 e0       	ldi	r19, 0x02	; 2
    1cce:	40 e0       	ldi	r20, 0x00	; 0
    1cd0:	8e 2d       	mov	r24, r14
    1cd2:	b6 01       	movw	r22, r12
    1cd4:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <strcmp>
    1cd8:	89 2b       	or	r24, r25
    1cda:	29 f4       	brne	.+10     	; 0x1ce6 <ExecuteCommand+0x1a2>
	{
		CLEAR_ARR();
    1cdc:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <CLEAR_ARR>
		FLASH_Status();
    1ce0:	0e 94 f0 1b 	call	0x37e0	; 0x37e0 <FLASH_Status>
    1ce4:	d3 c0       	rjmp	.+422    	; 0x1e8c <ExecuteCommand+0x348>
	}
	
	else if (strcmp(str, "Flash Block Lock") == 0) //read Block Lock register
    1ce6:	21 e9       	ldi	r18, 0x91	; 145
    1ce8:	32 e0       	ldi	r19, 0x02	; 2
    1cea:	40 e0       	ldi	r20, 0x00	; 0
    1cec:	8e 2d       	mov	r24, r14
    1cee:	b6 01       	movw	r22, r12
    1cf0:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <strcmp>
    1cf4:	89 2b       	or	r24, r25
    1cf6:	09 f0       	breq	.+2      	; 0x1cfa <ExecuteCommand+0x1b6>
    1cf8:	53 c0       	rjmp	.+166    	; 0x1da0 <ExecuteCommand+0x25c>
	{
		CLEAR_ARR();
    1cfa:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <CLEAR_ARR>
		
		USART_Data("1) Lock \n");
    1cfe:	62 ea       	ldi	r22, 0xA2	; 162
    1d00:	72 e0       	ldi	r23, 0x02	; 2
    1d02:	80 e0       	ldi	r24, 0x00	; 0
    1d04:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		USART_Data("2) Unlock \n");
    1d08:	6c ea       	ldi	r22, 0xAC	; 172
    1d0a:	72 e0       	ldi	r23, 0x02	; 2
    1d0c:	80 e0       	ldi	r24, 0x00	; 0
    1d0e:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		USART_Data("3) Read \n");
    1d12:	68 eb       	ldi	r22, 0xB8	; 184
    1d14:	72 e0       	ldi	r23, 0x02	; 2
    1d16:	80 e0       	ldi	r24, 0x00	; 0
    1d18:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		USART_Data("4) Configure \n");
    1d1c:	62 ec       	ldi	r22, 0xC2	; 194
    1d1e:	72 e0       	ldi	r23, 0x02	; 2
    1d20:	80 e0       	ldi	r24, 0x00	; 0
    1d22:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		
		UserInput(false); //User Input is added into an array, which will be written to memory
    1d26:	80 e0       	ldi	r24, 0x00	; 0
    1d28:	0e 94 4b 18 	call	0x3096	; 0x3096 <UserInput>
		
		if (strcmp(CommandBuffer, "Lock") == 0) //Locks Flash Device
    1d2c:	80 e0       	ldi	r24, 0x00	; 0
    1d2e:	92 e0       	ldi	r25, 0x02	; 2
    1d30:	6c 01       	movw	r12, r24
    1d32:	20 e8       	ldi	r18, 0x80	; 128
    1d34:	e2 2e       	mov	r14, r18
    1d36:	21 ed       	ldi	r18, 0xD1	; 209
    1d38:	32 e0       	ldi	r19, 0x02	; 2
    1d3a:	40 e0       	ldi	r20, 0x00	; 0
    1d3c:	8e 2d       	mov	r24, r14
    1d3e:	b6 01       	movw	r22, r12
    1d40:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <strcmp>
    1d44:	89 2b       	or	r24, r25
    1d46:	21 f4       	brne	.+8      	; 0x1d50 <ExecuteCommand+0x20c>
		{
			FLASH_Block_Lock_Setter(true);
    1d48:	81 e0       	ldi	r24, 0x01	; 1
    1d4a:	0e 94 a9 18 	call	0x3152	; 0x3152 <FLASH_Block_Lock_Setter>
    1d4e:	9e c0       	rjmp	.+316    	; 0x1e8c <ExecuteCommand+0x348>
		}
		else if (strcmp(CommandBuffer, "Unlock") == 0) //Unlocks Flash Device
    1d50:	26 ed       	ldi	r18, 0xD6	; 214
    1d52:	32 e0       	ldi	r19, 0x02	; 2
    1d54:	40 e0       	ldi	r20, 0x00	; 0
    1d56:	8e 2d       	mov	r24, r14
    1d58:	b6 01       	movw	r22, r12
    1d5a:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <strcmp>
    1d5e:	89 2b       	or	r24, r25
    1d60:	21 f4       	brne	.+8      	; 0x1d6a <ExecuteCommand+0x226>
		{
			FLASH_Block_Lock_Setter(false);
    1d62:	80 e0       	ldi	r24, 0x00	; 0
    1d64:	0e 94 a9 18 	call	0x3152	; 0x3152 <FLASH_Block_Lock_Setter>
    1d68:	91 c0       	rjmp	.+290    	; 0x1e8c <ExecuteCommand+0x348>
		}
		else if (strcmp(CommandBuffer, "Read") == 0) //Read Block Lock Register
    1d6a:	2d ed       	ldi	r18, 0xDD	; 221
    1d6c:	32 e0       	ldi	r19, 0x02	; 2
    1d6e:	40 e0       	ldi	r20, 0x00	; 0
    1d70:	8e 2d       	mov	r24, r14
    1d72:	b6 01       	movw	r22, r12
    1d74:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <strcmp>
    1d78:	89 2b       	or	r24, r25
    1d7a:	21 f4       	brne	.+8      	; 0x1d84 <ExecuteCommand+0x240>
		{
			FLASH_Block_Lock(false);
    1d7c:	80 e0       	ldi	r24, 0x00	; 0
    1d7e:	0e 94 59 19 	call	0x32b2	; 0x32b2 <FLASH_Block_Lock>
    1d82:	84 c0       	rjmp	.+264    	; 0x1e8c <ExecuteCommand+0x348>
		}
		else if (strcmp(CommandBuffer, "Configure") == 0) //Configure Block Lock Register
    1d84:	22 ee       	ldi	r18, 0xE2	; 226
    1d86:	32 e0       	ldi	r19, 0x02	; 2
    1d88:	40 e0       	ldi	r20, 0x00	; 0
    1d8a:	8e 2d       	mov	r24, r14
    1d8c:	b6 01       	movw	r22, r12
    1d8e:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <strcmp>
    1d92:	89 2b       	or	r24, r25
    1d94:	09 f0       	breq	.+2      	; 0x1d98 <ExecuteCommand+0x254>
    1d96:	7a c0       	rjmp	.+244    	; 0x1e8c <ExecuteCommand+0x348>
		{
			FLASH_Block_Lock(true);
    1d98:	81 e0       	ldi	r24, 0x01	; 1
    1d9a:	0e 94 59 19 	call	0x32b2	; 0x32b2 <FLASH_Block_Lock>
    1d9e:	76 c0       	rjmp	.+236    	; 0x1e8c <ExecuteCommand+0x348>
		}
	}
	
	//this might stick as part of the main options, but its mostly meant for debugging bad blocks...
	else if (strcmp(str, "Block Checker") == 0) //Determines if block is good or bad...
    1da0:	2c ee       	ldi	r18, 0xEC	; 236
    1da2:	32 e0       	ldi	r19, 0x02	; 2
    1da4:	40 e0       	ldi	r20, 0x00	; 0
    1da6:	8e 2d       	mov	r24, r14
    1da8:	b6 01       	movw	r22, r12
    1daa:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <strcmp>
    1dae:	89 2b       	or	r24, r25
    1db0:	c1 f4       	brne	.+48     	; 0x1de2 <ExecuteCommand+0x29e>
	{
		s = 0;
    1db2:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1db6:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
		CLEAR_ARR();
    1dba:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <CLEAR_ARR>
		FLASH_Page_Read();
    1dbe:	0e 94 b5 1f 	call	0x3f6a	; 0x3f6a <FLASH_Page_Read>

		if (HEX_ID[0] != 0xFF) 
    1dc2:	80 91 1f 12 	lds	r24, 0x121F	; 0x80121f <HEX_ID>
    1dc6:	8f 3f       	cpi	r24, 0xFF	; 255
    1dc8:	31 f0       	breq	.+12     	; 0x1dd6 <ExecuteCommand+0x292>
		{
			USART_Data("Block is marked bad\n");
    1dca:	6a ef       	ldi	r22, 0xFA	; 250
    1dcc:	72 e0       	ldi	r23, 0x02	; 2
    1dce:	80 e0       	ldi	r24, 0x00	; 0
    1dd0:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
    1dd4:	5b c0       	rjmp	.+182    	; 0x1e8c <ExecuteCommand+0x348>
		} 
		else 
		{
			USART_Data("Block appears clean\n");
    1dd6:	6f e0       	ldi	r22, 0x0F	; 15
    1dd8:	73 e0       	ldi	r23, 0x03	; 3
    1dda:	80 e0       	ldi	r24, 0x00	; 0
    1ddc:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
    1de0:	55 c0       	rjmp	.+170    	; 0x1e8c <ExecuteCommand+0x348>
		}
	}
	
	//meant for debugging bad pages in block...
	else if (strcmp(str, "Page Checker") == 0) //Determines if page is good or bad...
    1de2:	24 e2       	ldi	r18, 0x24	; 36
    1de4:	33 e0       	ldi	r19, 0x03	; 3
    1de6:	40 e0       	ldi	r20, 0x00	; 0
    1de8:	8e 2d       	mov	r24, r14
    1dea:	b6 01       	movw	r22, r12
    1dec:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <strcmp>
    1df0:	89 2b       	or	r24, r25
    1df2:	39 f4       	brne	.+14     	; 0x1e02 <ExecuteCommand+0x2be>
	{
		s = 0;
    1df4:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1df8:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
		Page_Tester();
    1dfc:	0e 94 8d 17 	call	0x2f1a	; 0x2f1a <Page_Tester>
    1e00:	45 c0       	rjmp	.+138    	; 0x1e8c <ExecuteCommand+0x348>
	}
	
	else if (strcmp(str, "Reset") == 0) //Basic Read Test Command
    1e02:	21 e3       	ldi	r18, 0x31	; 49
    1e04:	33 e0       	ldi	r19, 0x03	; 3
    1e06:	40 e0       	ldi	r20, 0x00	; 0
    1e08:	8e 2d       	mov	r24, r14
    1e0a:	b6 01       	movw	r22, r12
    1e0c:	0e 94 30 1f 	call	0x3e60	; 0x3e60 <strcmp>
    1e10:	89 2b       	or	r24, r25
    1e12:	29 f4       	brne	.+10     	; 0x1e1e <ExecuteCommand+0x2da>
	{
		CLEAR_ARR();
    1e14:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <CLEAR_ARR>
		FLASH_Reset();
    1e18:	0e 94 33 21 	call	0x4266	; 0x4266 <FLASH_Reset>
    1e1c:	37 c0       	rjmp	.+110    	; 0x1e8c <ExecuteCommand+0x348>
	}
	
	else
	{
		USART_Data("1) Flash ID \n");
    1e1e:	67 e3       	ldi	r22, 0x37	; 55
    1e20:	73 e0       	ldi	r23, 0x03	; 3
    1e22:	80 e0       	ldi	r24, 0x00	; 0
    1e24:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		USART_Data("2) Erase Memory \n");
    1e28:	65 e4       	ldi	r22, 0x45	; 69
    1e2a:	73 e0       	ldi	r23, 0x03	; 3
    1e2c:	80 e0       	ldi	r24, 0x00	; 0
    1e2e:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		USART_Data("3) Write Test \n");
    1e32:	67 e5       	ldi	r22, 0x57	; 87
    1e34:	73 e0       	ldi	r23, 0x03	; 3
    1e36:	80 e0       	ldi	r24, 0x00	; 0
    1e38:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		USART_Data("4) Read Memory \n");
    1e3c:	67 e6       	ldi	r22, 0x67	; 103
    1e3e:	73 e0       	ldi	r23, 0x03	; 3
    1e40:	80 e0       	ldi	r24, 0x00	; 0
    1e42:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		USART_Data("5) Parameter Page \n");
    1e46:	68 e7       	ldi	r22, 0x78	; 120
    1e48:	73 e0       	ldi	r23, 0x03	; 3
    1e4a:	80 e0       	ldi	r24, 0x00	; 0
    1e4c:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		USART_Data("6) Flash Status \n");
    1e50:	6c e8       	ldi	r22, 0x8C	; 140
    1e52:	73 e0       	ldi	r23, 0x03	; 3
    1e54:	80 e0       	ldi	r24, 0x00	; 0
    1e56:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		USART_Data("7) Flash Block Lock \n");
    1e5a:	6e e9       	ldi	r22, 0x9E	; 158
    1e5c:	73 e0       	ldi	r23, 0x03	; 3
    1e5e:	80 e0       	ldi	r24, 0x00	; 0
    1e60:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		USART_Data("8) Block Checker \n");
    1e64:	64 eb       	ldi	r22, 0xB4	; 180
    1e66:	73 e0       	ldi	r23, 0x03	; 3
    1e68:	80 e0       	ldi	r24, 0x00	; 0
    1e6a:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		USART_Data("9) Page Checker \n");
    1e6e:	67 ec       	ldi	r22, 0xC7	; 199
    1e70:	73 e0       	ldi	r23, 0x03	; 3
    1e72:	80 e0       	ldi	r24, 0x00	; 0
    1e74:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		USART_Data("10) NAND Addresses \n");
    1e78:	69 ed       	ldi	r22, 0xD9	; 217
    1e7a:	73 e0       	ldi	r23, 0x03	; 3
    1e7c:	80 e0       	ldi	r24, 0x00	; 0
    1e7e:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
		USART_Data("11) Reset \n");
    1e82:	6e ee       	ldi	r22, 0xEE	; 238
    1e84:	73 e0       	ldi	r23, 0x03	; 3
    1e86:	80 e0       	ldi	r24, 0x00	; 0
    1e88:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
	}
}
    1e8c:	df 91       	pop	r29
    1e8e:	cf 91       	pop	r28
    1e90:	1f 91       	pop	r17
    1e92:	0f 91       	pop	r16
    1e94:	ff 90       	pop	r15
    1e96:	ef 90       	pop	r14
    1e98:	df 90       	pop	r13
    1e9a:	cf 90       	pop	r12
    1e9c:	08 95       	ret

Disassembly of section .text.UserInput:

00003096 <UserInput>:

int arr_address = 0; //for CommandBuffer array
int input_counter = 0; //to count the number of input characters 

void UserInput(bool command) //asking for user input
{
    3096:	cf 92       	push	r12
    3098:	df 92       	push	r13
    309a:	ef 92       	push	r14
    309c:	cf 93       	push	r28
    309e:	c8 2f       	mov	r28, r24
	USART_Data("->User Input:\n"); //asking for User Input
    30a0:	6a ef       	ldi	r22, 0xFA	; 250
    30a2:	73 e0       	ldi	r23, 0x03	; 3
    30a4:	80 e0       	ldi	r24, 0x00	; 0
    30a6:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
	
	input_counter = 0; //reset input counter
    30aa:	10 92 2f 12 	sts	0x122F, r1	; 0x80122f <_end+0x1>
    30ae:	10 92 2e 12 	sts	0x122E, r1	; 0x80122e <_end>
	
	c = USART_RX_Data(); //receive user uint8_t data type input
    30b2:	0e 94 ed 21 	call	0x43da	; 0x43da <USART_RX_Data>
    30b6:	80 93 1e 0a 	sts	0x0A1E, r24	; 0x800a1e <c>
	
	while ((c != '\r')) //(c != '\n') &&
    30ba:	25 c0       	rjmp	.+74     	; 0x3106 <UserInput+0x70>
	{
		input_counter++; //increment input counter
    30bc:	80 91 2e 12 	lds	r24, 0x122E	; 0x80122e <_end>
    30c0:	90 91 2f 12 	lds	r25, 0x122F	; 0x80122f <_end+0x1>
    30c4:	01 96       	adiw	r24, 0x01	; 1
    30c6:	90 93 2f 12 	sts	0x122F, r25	; 0x80122f <_end+0x1>
    30ca:	80 93 2e 12 	sts	0x122E, r24	; 0x80122e <_end>
		CommandBuffer[arr_address] = c; //adding uint8_t into array at index, creating a string
    30ce:	80 91 30 12 	lds	r24, 0x1230	; 0x801230 <arr_address>
    30d2:	90 91 31 12 	lds	r25, 0x1231	; 0x801231 <arr_address+0x1>
    30d6:	fc 01       	movw	r30, r24
    30d8:	e0 50       	subi	r30, 0x00	; 0
    30da:	fe 4f       	sbci	r31, 0xFE	; 254
    30dc:	20 83       	st	Z, r18
		if (arr_address >= sizeof(CommandBuffer)) //making this an endless array for command lines
    30de:	81 15       	cp	r24, r1
    30e0:	98 40       	sbci	r25, 0x08	; 8
    30e2:	20 f0       	brcs	.+8      	; 0x30ec <UserInput+0x56>
		{
			arr_address = 0; //resets array at address 0
    30e4:	10 92 31 12 	sts	0x1231, r1	; 0x801231 <arr_address+0x1>
    30e8:	10 92 30 12 	sts	0x1230, r1	; 0x801230 <arr_address>
		}
		arr_address++;
    30ec:	80 91 30 12 	lds	r24, 0x1230	; 0x801230 <arr_address>
    30f0:	90 91 31 12 	lds	r25, 0x1231	; 0x801231 <arr_address+0x1>
    30f4:	01 96       	adiw	r24, 0x01	; 1
    30f6:	90 93 31 12 	sts	0x1231, r25	; 0x801231 <arr_address+0x1>
    30fa:	80 93 30 12 	sts	0x1230, r24	; 0x801230 <arr_address>
		c = USART_RX_Data(); //receive user uint8_t data type input
    30fe:	0e 94 ed 21 	call	0x43da	; 0x43da <USART_RX_Data>
    3102:	80 93 1e 0a 	sts	0x0A1E, r24	; 0x800a1e <c>
	
	input_counter = 0; //reset input counter
	
	c = USART_RX_Data(); //receive user uint8_t data type input
	
	while ((c != '\r')) //(c != '\n') &&
    3106:	20 91 1e 0a 	lds	r18, 0x0A1E	; 0x800a1e <c>
    310a:	2d 30       	cpi	r18, 0x0D	; 13
    310c:	b9 f6       	brne	.-82     	; 0x30bc <UserInput+0x26>
		}
		arr_address++;
		c = USART_RX_Data(); //receive user uint8_t data type input
	}
	
	CommandBuffer[arr_address] = '\0'; //adding NULL '\0' to mark end of Command String...; adding carriage return '\r' until I can get NULL to work...
    310e:	e0 91 30 12 	lds	r30, 0x1230	; 0x801230 <arr_address>
    3112:	f0 91 31 12 	lds	r31, 0x1231	; 0x801231 <arr_address+0x1>
    3116:	e0 50       	subi	r30, 0x00	; 0
    3118:	fe 4f       	sbci	r31, 0xFE	; 254
    311a:	10 82       	st	Z, r1
	arr_address = 0; //resets array at address 0
    311c:	10 92 31 12 	sts	0x1231, r1	; 0x801231 <arr_address+0x1>
    3120:	10 92 30 12 	sts	0x1230, r1	; 0x801230 <arr_address>
	
	USART_Data(CommandBuffer); //shows what the user wrote on terminal
    3124:	80 e0       	ldi	r24, 0x00	; 0
    3126:	92 e0       	ldi	r25, 0x02	; 2
    3128:	6c 01       	movw	r12, r24
    312a:	20 e8       	ldi	r18, 0x80	; 128
    312c:	e2 2e       	mov	r14, r18
    312e:	8e 2d       	mov	r24, r14
    3130:	b6 01       	movw	r22, r12
    3132:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
	USART_TX_Data('\n');
    3136:	8a e0       	ldi	r24, 0x0A	; 10
    3138:	0e 94 e6 21 	call	0x43cc	; 0x43cc <USART_TX_Data>
	
	if (command)
    313c:	cc 23       	and	r28, r28
    313e:	21 f0       	breq	.+8      	; 0x3148 <UserInput+0xb2>
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
    3140:	8e 2d       	mov	r24, r14
    3142:	b6 01       	movw	r22, r12
    3144:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <ExecuteCommand>
}
    3148:	cf 91       	pop	r28
    314a:	ef 90       	pop	r14
    314c:	df 90       	pop	r13
    314e:	cf 90       	pop	r12
    3150:	08 95       	ret

Disassembly of section .text.COLUMN_BLOCK_PAGE_ADDRESSER:

0000240e <COLUMN_BLOCK_PAGE_ADDRESSER>:
		USART_Data(arr_dest);
	}
}

void COLUMN_BLOCK_PAGE_ADDRESSER(bool addr_type) //gets hex number for Column and Block/Page address
{
    240e:	cf 92       	push	r12
    2410:	df 92       	push	r13
    2412:	ef 92       	push	r14
    2414:	ff 92       	push	r15
    2416:	0f 93       	push	r16
    2418:	cf 93       	push	r28
    241a:	c8 2f       	mov	r28, r24
	UserInput(false); //get the hex numbers, false because not command
    241c:	80 e0       	ldi	r24, 0x00	; 0
    241e:	0e 94 4b 18 	call	0x3096	; 0x3096 <UserInput>
	
	if (addr_type == false) //false, so address type is Column Address
    2422:	c1 11       	cpse	r28, r1
    2424:	4b c0       	rjmp	.+150    	; 0x24bc <COLUMN_BLOCK_PAGE_ADDRESSER+0xae>
	{
		if (input_counter != 4) //has to be 4 inputs
    2426:	80 91 2e 12 	lds	r24, 0x122E	; 0x80122e <_end>
    242a:	90 91 2f 12 	lds	r25, 0x122F	; 0x80122f <_end+0x1>
    242e:	04 97       	sbiw	r24, 0x04	; 4
    2430:	41 f0       	breq	.+16     	; 0x2442 <COLUMN_BLOCK_PAGE_ADDRESSER+0x34>
		{
			USART_Data("Make sure only 4 inputs. \n");
    2432:	69 e0       	ldi	r22, 0x09	; 9
    2434:	74 e0       	ldi	r23, 0x04	; 4
    2436:	80 e0       	ldi	r24, 0x00	; 0
    2438:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
			UserInput(false);
    243c:	80 e0       	ldi	r24, 0x00	; 0
    243e:	0e 94 4b 18 	call	0x3096	; 0x3096 <UserInput>
		}
		
		if (HEX_Verification()) //if true (valid)
    2442:	0e 94 ed 17 	call	0x2fda	; 0x2fda <HEX_Verification>
    2446:	81 11       	cpse	r24, r1
    2448:	1b c0       	rjmp	.+54     	; 0x2480 <COLUMN_BLOCK_PAGE_ADDRESSER+0x72>
    244a:	34 c0       	rjmp	.+104    	; 0x24b4 <COLUMN_BLOCK_PAGE_ADDRESSER+0xa6>
		{
			for (int i = 0; i < COLUMN_ADDRESS + 1; i+=2)
			{
				Byte_Address[i / 2] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
    244c:	9c 01       	movw	r18, r24
    244e:	99 23       	and	r25, r25
    2450:	14 f4       	brge	.+4      	; 0x2456 <COLUMN_BLOCK_PAGE_ADDRESSER+0x48>
    2452:	2f 5f       	subi	r18, 0xFF	; 255
    2454:	3f 4f       	sbci	r19, 0xFF	; 255
    2456:	35 95       	asr	r19
    2458:	27 95       	ror	r18
    245a:	fc 01       	movw	r30, r24
    245c:	e0 50       	subi	r30, 0x00	; 0
    245e:	fe 4f       	sbci	r31, 0xFE	; 254
    2460:	40 81       	ld	r20, Z
    2462:	60 e1       	ldi	r22, 0x10	; 16
    2464:	46 9f       	mul	r20, r22
    2466:	a0 01       	movw	r20, r0
    2468:	11 24       	eor	r1, r1
    246a:	fc 01       	movw	r30, r24
    246c:	ef 5f       	subi	r30, 0xFF	; 255
    246e:	fd 4f       	sbci	r31, 0xFD	; 253
    2470:	50 81       	ld	r21, Z
    2472:	f9 01       	movw	r30, r18
    2474:	ea 5d       	subi	r30, 0xDA	; 218
    2476:	fd 4e       	sbci	r31, 0xED	; 237
    2478:	45 2b       	or	r20, r21
    247a:	40 83       	st	Z, r20
			UserInput(false);
		}
		
		if (HEX_Verification()) //if true (valid)
		{
			for (int i = 0; i < COLUMN_ADDRESS + 1; i+=2)
    247c:	02 96       	adiw	r24, 0x02	; 2
    247e:	02 c0       	rjmp	.+4      	; 0x2484 <COLUMN_BLOCK_PAGE_ADDRESSER+0x76>
    2480:	80 e0       	ldi	r24, 0x00	; 0
    2482:	90 e0       	ldi	r25, 0x00	; 0
    2484:	83 30       	cpi	r24, 0x03	; 3
    2486:	91 05       	cpc	r25, r1
    2488:	0c f3       	brlt	.-62     	; 0x244c <COLUMN_BLOCK_PAGE_ADDRESSER+0x3e>
			{
				Byte_Address[i / 2] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
			}
			
			Print_To_User(COLUMN_ADDRESS, 0, "Column Address -> 0x%02X \n", Byte_Address, status_feature);	
    248a:	86 e2       	ldi	r24, 0x26	; 38
    248c:	92 e1       	ldi	r25, 0x12	; 18
    248e:	7c 01       	movw	r14, r24
    2490:	20 e8       	ldi	r18, 0x80	; 128
    2492:	02 2f       	mov	r16, r18
    2494:	0f 2e       	mov	r0, r31
    2496:	f0 e0       	ldi	r31, 0x00	; 0
    2498:	cf 2e       	mov	r12, r31
    249a:	fa e0       	ldi	r31, 0x0A	; 10
    249c:	df 2e       	mov	r13, r31
    249e:	f0 2d       	mov	r31, r0
    24a0:	24 e2       	ldi	r18, 0x24	; 36
    24a2:	34 e0       	ldi	r19, 0x04	; 4
    24a4:	40 e0       	ldi	r20, 0x00	; 0
    24a6:	60 e0       	ldi	r22, 0x00	; 0
    24a8:	70 e0       	ldi	r23, 0x00	; 0
    24aa:	82 e0       	ldi	r24, 0x02	; 2
    24ac:	90 e0       	ldi	r25, 0x00	; 0
    24ae:	0e 94 b0 19 	call	0x3360	; 0x3360 <Print_To_User>
    24b2:	4e c0       	rjmp	.+156    	; 0x2550 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
		else
		{
			COLUMN_BLOCK_PAGE_ADDRESSER(addr_type); //call again
    24b4:	8c 2f       	mov	r24, r28
    24b6:	0e 94 07 12 	call	0x240e	; 0x240e <COLUMN_BLOCK_PAGE_ADDRESSER>
    24ba:	4a c0       	rjmp	.+148    	; 0x2550 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
	}
	else //true, so address type is Block/Page Address
	{
		if (input_counter != 6) //has to be 6 inputs
    24bc:	80 91 2e 12 	lds	r24, 0x122E	; 0x80122e <_end>
    24c0:	90 91 2f 12 	lds	r25, 0x122F	; 0x80122f <_end+0x1>
    24c4:	06 97       	sbiw	r24, 0x06	; 6
    24c6:	41 f0       	breq	.+16     	; 0x24d8 <COLUMN_BLOCK_PAGE_ADDRESSER+0xca>
		{
			USART_Data("Make sure only 6 inputs. \n");
    24c8:	6f e3       	ldi	r22, 0x3F	; 63
    24ca:	74 e0       	ldi	r23, 0x04	; 4
    24cc:	80 e0       	ldi	r24, 0x00	; 0
    24ce:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
			UserInput(false);
    24d2:	80 e0       	ldi	r24, 0x00	; 0
    24d4:	0e 94 4b 18 	call	0x3096	; 0x3096 <UserInput>
		}
		
		if(HEX_Verification()) //if true (valid)
    24d8:	0e 94 ed 17 	call	0x2fda	; 0x2fda <HEX_Verification>
    24dc:	81 11       	cpse	r24, r1
    24de:	1b c0       	rjmp	.+54     	; 0x2516 <COLUMN_BLOCK_PAGE_ADDRESSER+0x108>
    24e0:	34 c0       	rjmp	.+104    	; 0x254a <COLUMN_BLOCK_PAGE_ADDRESSER+0x13c>
		{
			for (int i = 0; i < BLOCK_PAGE_ADDRESS + 2; i+=2)
			{
				Byte_Address[COLUMN_ADDRESS + (i / 2)] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
    24e2:	9c 01       	movw	r18, r24
    24e4:	99 23       	and	r25, r25
    24e6:	14 f4       	brge	.+4      	; 0x24ec <COLUMN_BLOCK_PAGE_ADDRESSER+0xde>
    24e8:	2f 5f       	subi	r18, 0xFF	; 255
    24ea:	3f 4f       	sbci	r19, 0xFF	; 255
    24ec:	35 95       	asr	r19
    24ee:	27 95       	ror	r18
    24f0:	fc 01       	movw	r30, r24
    24f2:	e0 50       	subi	r30, 0x00	; 0
    24f4:	fe 4f       	sbci	r31, 0xFE	; 254
    24f6:	40 81       	ld	r20, Z
    24f8:	60 e1       	ldi	r22, 0x10	; 16
    24fa:	46 9f       	mul	r20, r22
    24fc:	a0 01       	movw	r20, r0
    24fe:	11 24       	eor	r1, r1
    2500:	fc 01       	movw	r30, r24
    2502:	ef 5f       	subi	r30, 0xFF	; 255
    2504:	fd 4f       	sbci	r31, 0xFD	; 253
    2506:	50 81       	ld	r21, Z
    2508:	f9 01       	movw	r30, r18
    250a:	e8 5d       	subi	r30, 0xD8	; 216
    250c:	fd 4e       	sbci	r31, 0xED	; 237
    250e:	45 2b       	or	r20, r21
    2510:	40 83       	st	Z, r20
			UserInput(false);
		}
		
		if(HEX_Verification()) //if true (valid)
		{
			for (int i = 0; i < BLOCK_PAGE_ADDRESS + 2; i+=2)
    2512:	02 96       	adiw	r24, 0x02	; 2
    2514:	02 c0       	rjmp	.+4      	; 0x251a <COLUMN_BLOCK_PAGE_ADDRESSER+0x10c>
    2516:	80 e0       	ldi	r24, 0x00	; 0
    2518:	90 e0       	ldi	r25, 0x00	; 0
    251a:	85 30       	cpi	r24, 0x05	; 5
    251c:	91 05       	cpc	r25, r1
    251e:	0c f3       	brlt	.-62     	; 0x24e2 <COLUMN_BLOCK_PAGE_ADDRESSER+0xd4>
			{
				Byte_Address[COLUMN_ADDRESS + (i / 2)] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
			}
			
			Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "Block/Page Address -> 0x%02X \n", Byte_Address, status_feature);
    2520:	86 e2       	ldi	r24, 0x26	; 38
    2522:	92 e1       	ldi	r25, 0x12	; 18
    2524:	7c 01       	movw	r14, r24
    2526:	20 e8       	ldi	r18, 0x80	; 128
    2528:	02 2f       	mov	r16, r18
    252a:	0f 2e       	mov	r0, r31
    252c:	f0 e0       	ldi	r31, 0x00	; 0
    252e:	cf 2e       	mov	r12, r31
    2530:	fa e0       	ldi	r31, 0x0A	; 10
    2532:	df 2e       	mov	r13, r31
    2534:	f0 2d       	mov	r31, r0
    2536:	2a e5       	ldi	r18, 0x5A	; 90
    2538:	34 e0       	ldi	r19, 0x04	; 4
    253a:	40 e0       	ldi	r20, 0x00	; 0
    253c:	62 e0       	ldi	r22, 0x02	; 2
    253e:	70 e0       	ldi	r23, 0x00	; 0
    2540:	83 e0       	ldi	r24, 0x03	; 3
    2542:	90 e0       	ldi	r25, 0x00	; 0
    2544:	0e 94 b0 19 	call	0x3360	; 0x3360 <Print_To_User>
    2548:	03 c0       	rjmp	.+6      	; 0x2550 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
		else
		{
			COLUMN_BLOCK_PAGE_ADDRESSER(addr_type); //call again
    254a:	8c 2f       	mov	r24, r28
    254c:	0e 94 07 12 	call	0x240e	; 0x240e <COLUMN_BLOCK_PAGE_ADDRESSER>
		}
	}
}
    2550:	cf 91       	pop	r28
    2552:	0f 91       	pop	r16
    2554:	ff 90       	pop	r15
    2556:	ef 90       	pop	r14
    2558:	df 90       	pop	r13
    255a:	cf 90       	pop	r12
    255c:	08 95       	ret

Disassembly of section .text.CLEAR_ARR:

00003bd0 <CLEAR_ARR>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3bd0:	80 e0       	ldi	r24, 0x00	; 0
    3bd2:	90 e0       	ldi	r25, 0x00	; 0
    3bd4:	05 c0       	rjmp	.+10     	; 0x3be0 <CLEAR_ARR+0x10>
    3bd6:	fc 01       	movw	r30, r24
    3bd8:	e1 5e       	subi	r30, 0xE1	; 225
    3bda:	fd 4e       	sbci	r31, 0xED	; 237
    3bdc:	10 82       	st	Z, r1
    3bde:	01 96       	adiw	r24, 0x01	; 1
    3be0:	85 30       	cpi	r24, 0x05	; 5
    3be2:	91 05       	cpc	r25, r1
    3be4:	c0 f3       	brcs	.-16     	; 0x3bd6 <CLEAR_ARR+0x6>
    3be6:	80 e0       	ldi	r24, 0x00	; 0
    3be8:	90 e0       	ldi	r25, 0x00	; 0
    3bea:	05 c0       	rjmp	.+10     	; 0x3bf6 <CLEAR_ARR+0x26>
    3bec:	fc 01       	movw	r30, r24
    3bee:	e1 5e       	subi	r30, 0xE1	; 225
    3bf0:	f5 4f       	sbci	r31, 0xF5	; 245
    3bf2:	10 82       	st	Z, r1
    3bf4:	01 96       	adiw	r24, 0x01	; 1
    3bf6:	81 15       	cp	r24, r1
    3bf8:	28 e0       	ldi	r18, 0x08	; 8
    3bfa:	92 07       	cpc	r25, r18
    3bfc:	b8 f3       	brcs	.-18     	; 0x3bec <CLEAR_ARR+0x1c>
    3bfe:	80 e0       	ldi	r24, 0x00	; 0
    3c00:	90 e0       	ldi	r25, 0x00	; 0
    3c02:	05 c0       	rjmp	.+10     	; 0x3c0e <CLEAR_ARR+0x3e>
    3c04:	fc 01       	movw	r30, r24
    3c06:	e0 50       	subi	r30, 0x00	; 0
    3c08:	fe 4f       	sbci	r31, 0xFE	; 254
    3c0a:	10 82       	st	Z, r1
    3c0c:	01 96       	adiw	r24, 0x01	; 1
    3c0e:	81 15       	cp	r24, r1
    3c10:	28 e0       	ldi	r18, 0x08	; 8
    3c12:	92 07       	cpc	r25, r18
    3c14:	b8 f3       	brcs	.-18     	; 0x3c04 <CLEAR_ARR+0x34>
    3c16:	80 e0       	ldi	r24, 0x00	; 0
    3c18:	90 e0       	ldi	r25, 0x00	; 0
    3c1a:	05 c0       	rjmp	.+10     	; 0x3c26 <CLEAR_ARR+0x56>
    3c1c:	fc 01       	movw	r30, r24
    3c1e:	e0 50       	subi	r30, 0x00	; 0
    3c20:	f6 4f       	sbci	r31, 0xF6	; 246
    3c22:	10 82       	st	Z, r1
    3c24:	01 96       	adiw	r24, 0x01	; 1
    3c26:	8e 31       	cpi	r24, 0x1E	; 30
    3c28:	91 05       	cpc	r25, r1
    3c2a:	c0 f3       	brcs	.-16     	; 0x3c1c <CLEAR_ARR+0x4c>
    3c2c:	08 95       	ret

Disassembly of section .text.SPI_MASTER_Init:

000041dc <SPI_MASTER_Init>:

//Master Mode (for ATmega 2560) allows full duplex communication between the ATmega 2560 to Flash NAND Memory chip
void SPI_MASTER_Init() //initializes Serial Peripheral Interference (SPI) operations in Master Mode
{
	//DDR pin assignment, ~CS, MOSI, SCK are outputs (1), and MISO is input (0) (in Master Mode)
	DDRB |= (1 << PB2) | (1 << PB1); //setting MASTER_MOSI (PB2) as output; setting MASTER_SCK (PB1) as output;
    41dc:	84 b1       	in	r24, 0x04	; 4
    41de:	86 60       	ori	r24, 0x06	; 6
    41e0:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << PB3); //setting MASTER_MISO (PB3) as input;
    41e2:	84 b1       	in	r24, 0x04	; 4
    41e4:	87 7f       	andi	r24, 0xF7	; 247
    41e6:	84 b9       	out	0x04, r24	; 4
	
	//MUST set ~SS on the ATmega 2560 in order to get SPI operations working...
	DDRB |= (1 << PB0); //setting ~SS pin (PB0) as output;
    41e8:	84 b1       	in	r24, 0x04	; 4
    41ea:	81 60       	ori	r24, 0x01	; 1
    41ec:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1 << PB0); //setting ~SS pin (PB0) high to "de-select" slave device (not connected to the Flash NAND anyway)
    41ee:	85 b1       	in	r24, 0x05	; 5
    41f0:	81 60       	ori	r24, 0x01	; 1
    41f2:	85 b9       	out	0x05, r24	; 5
	//PORTB &= ~(1 << PB0); //setting ~SS pin (PB0) low to "select" slave device (not connected to the Flash NAND anyway)
	
	SPCR |= (1 << SPE) | (1 << MSTR) | (1 << SPR0); // SPE: enables the SPI; MSTR: sets SPI to Master SPI mode; SPR1 and SPR0: sets the SCK Frequency (divisor of 16);
    41f4:	8c b5       	in	r24, 0x2c	; 44
    41f6:	81 65       	ori	r24, 0x51	; 81
    41f8:	8c bd       	out	0x2c, r24	; 44
	SPCR &= ~(1 << DORD) | ~(1 << CPOL) | ~(1 << CPHA) | ~(1 << SPR1);//DORD, Data order set to MSB transmitted first; SPI Timing Mode is 0, where CPOL and CPHA are both 0
    41fa:	8c b5       	in	r24, 0x2c	; 44
    41fc:	8c bd       	out	0x2c, r24	; 44
    41fe:	08 95       	ret

Disassembly of section .text.FLASH_Write_Enable:

000042d8 <FLASH_Write_Enable>:
}

void FLASH_Write_Enable (void) //select Slave device and initializes Write operations onto Flash NAND
{
	FLASH_NAND_CS_ENABLE();
    42d8:	0e 94 3c 22 	call	0x4478	; 0x4478 <FLASH_NAND_CS_ENABLE>
	
	SPDR = WRITE_ENABLED; //Flash NAND's Write Enable command into SPI Data Register (SPDR)
    42dc:	86 e0       	ldi	r24, 0x06	; 6
    42de:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete; waits for SPIF to be logic high
    42e0:	0d b4       	in	r0, 0x2d	; 45
    42e2:	07 fe       	sbrs	r0, 7
    42e4:	fd cf       	rjmp	.-6      	; 0x42e0 <FLASH_Write_Enable+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    42e6:	8e b5       	in	r24, 0x2e	; 46
    42e8:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	
	FLASH_NAND_CS_DISABLE();
    42ec:	0e 94 40 22 	call	0x4480	; 0x4480 <FLASH_NAND_CS_DISABLE>
    42f0:	08 95       	ret

Disassembly of section .text.FLASH_Write_Disable:

000042f2 <FLASH_Write_Disable>:
	//USART_Data("Write Enable \n");
}

void FLASH_Write_Disable(void) //de-select Slave device and disable Write operations onto Flash NAND
{
	FLASH_NAND_CS_ENABLE();
    42f2:	0e 94 3c 22 	call	0x4478	; 0x4478 <FLASH_NAND_CS_ENABLE>
	
	SPDR = WRITE_DISABLED; //Flash NAND's Write Disable command into SPI Data Register (SPDR)
    42f6:	84 e0       	ldi	r24, 0x04	; 4
    42f8:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    42fa:	0d b4       	in	r0, 0x2d	; 45
    42fc:	07 fe       	sbrs	r0, 7
    42fe:	fd cf       	rjmp	.-6      	; 0x42fa <FLASH_Write_Disable+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    4300:	8e b5       	in	r24, 0x2e	; 46
    4302:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	
	FLASH_NAND_CS_DISABLE();
    4306:	0e 94 40 22 	call	0x4480	; 0x4480 <FLASH_NAND_CS_DISABLE>
    430a:	08 95       	ret

Disassembly of section .text.FLASH_ID:

00003990 <FLASH_ID>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3990:	cf 93       	push	r28
    3992:	df 93       	push	r29
    3994:	0e 94 3c 22 	call	0x4478	; 0x4478 <FLASH_NAND_CS_ENABLE>
    3998:	8f e9       	ldi	r24, 0x9F	; 159
    399a:	8e bd       	out	0x2e, r24	; 46
    399c:	0d b4       	in	r0, 0x2d	; 45
    399e:	07 fe       	sbrs	r0, 7
    39a0:	fd cf       	rjmp	.-6      	; 0x399c <FLASH_ID+0xc>
    39a2:	8e b5       	in	r24, 0x2e	; 46
    39a4:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    39a8:	1e bc       	out	0x2e, r1	; 46
    39aa:	0d b4       	in	r0, 0x2d	; 45
    39ac:	07 fe       	sbrs	r0, 7
    39ae:	fd cf       	rjmp	.-6      	; 0x39aa <FLASH_ID+0x1a>
    39b0:	8e b5       	in	r24, 0x2e	; 46
    39b2:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    39b6:	1e bc       	out	0x2e, r1	; 46
    39b8:	0d b4       	in	r0, 0x2d	; 45
    39ba:	07 fe       	sbrs	r0, 7
    39bc:	fd cf       	rjmp	.-6      	; 0x39b8 <FLASH_ID+0x28>
    39be:	8e b5       	in	r24, 0x2e	; 46
    39c0:	80 93 1f 12 	sts	0x121F, r24	; 0x80121f <HEX_ID>
    39c4:	1e bc       	out	0x2e, r1	; 46
    39c6:	0d b4       	in	r0, 0x2d	; 45
    39c8:	07 fe       	sbrs	r0, 7
    39ca:	fd cf       	rjmp	.-6      	; 0x39c6 <FLASH_ID+0x36>
    39cc:	8e b5       	in	r24, 0x2e	; 46
    39ce:	cf e1       	ldi	r28, 0x1F	; 31
    39d0:	d2 e1       	ldi	r29, 0x12	; 18
    39d2:	89 83       	std	Y+1, r24	; 0x01
    39d4:	0e 94 40 22 	call	0x4480	; 0x4480 <FLASH_NAND_CS_DISABLE>
    39d8:	99 81       	ldd	r25, Y+1	; 0x01
    39da:	88 81       	ld	r24, Y
    39dc:	1f 92       	push	r1
    39de:	9f 93       	push	r25
    39e0:	1f 92       	push	r1
    39e2:	8f 93       	push	r24
    39e4:	89 e7       	ldi	r24, 0x79	; 121
    39e6:	94 e0       	ldi	r25, 0x04	; 4
    39e8:	a0 e0       	ldi	r26, 0x00	; 0
    39ea:	af 93       	push	r26
    39ec:	9f 93       	push	r25
    39ee:	8f 93       	push	r24
    39f0:	c0 e0       	ldi	r28, 0x00	; 0
    39f2:	da e0       	ldi	r29, 0x0A	; 10
    39f4:	df 93       	push	r29
    39f6:	cf 93       	push	r28
    39f8:	0e 94 c8 20 	call	0x4190	; 0x4190 <_sprintf_cdnopuxX>
    39fc:	be 01       	movw	r22, r28
    39fe:	80 e8       	ldi	r24, 0x80	; 128
    3a00:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
    3a04:	8d b7       	in	r24, 0x3d	; 61
    3a06:	9e b7       	in	r25, 0x3e	; 62
    3a08:	09 96       	adiw	r24, 0x09	; 9
    3a0a:	0f b6       	in	r0, 0x3f	; 63
    3a0c:	f8 94       	cli
    3a0e:	9e bf       	out	0x3e, r25	; 62
    3a10:	0f be       	out	0x3f, r0	; 63
    3a12:	8d bf       	out	0x3d, r24	; 61
    3a14:	df 91       	pop	r29
    3a16:	cf 91       	pop	r28
    3a18:	08 95       	ret

Disassembly of section .text.FLASH_Block_Lock_Setter:

00003152 <FLASH_Block_Lock_Setter>:
    3152:	cf 93       	push	r28
    3154:	df 93       	push	r29
    3156:	c8 2f       	mov	r28, r24
    3158:	0e 94 3c 22 	call	0x4478	; 0x4478 <FLASH_NAND_CS_ENABLE>
    315c:	cc 23       	and	r28, r28
    315e:	c9 f0       	breq	.+50     	; 0x3192 <FLASH_Block_Lock_Setter+0x40>
    3160:	8f e1       	ldi	r24, 0x1F	; 31
    3162:	8e bd       	out	0x2e, r24	; 46
    3164:	0d b4       	in	r0, 0x2d	; 45
    3166:	07 fe       	sbrs	r0, 7
    3168:	fd cf       	rjmp	.-6      	; 0x3164 <FLASH_Block_Lock_Setter+0x12>
    316a:	8e b5       	in	r24, 0x2e	; 46
    316c:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3170:	80 ea       	ldi	r24, 0xA0	; 160
    3172:	8e bd       	out	0x2e, r24	; 46
    3174:	0d b4       	in	r0, 0x2d	; 45
    3176:	07 fe       	sbrs	r0, 7
    3178:	fd cf       	rjmp	.-6      	; 0x3174 <FLASH_Block_Lock_Setter+0x22>
    317a:	8e b5       	in	r24, 0x2e	; 46
    317c:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3180:	8c e7       	ldi	r24, 0x7C	; 124
    3182:	8e bd       	out	0x2e, r24	; 46
    3184:	0d b4       	in	r0, 0x2d	; 45
    3186:	07 fe       	sbrs	r0, 7
    3188:	fd cf       	rjmp	.-6      	; 0x3184 <FLASH_Block_Lock_Setter+0x32>
    318a:	8e b5       	in	r24, 0x2e	; 46
    318c:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3190:	17 c0       	rjmp	.+46     	; 0x31c0 <FLASH_Block_Lock_Setter+0x6e>
    3192:	8f e1       	ldi	r24, 0x1F	; 31
    3194:	8e bd       	out	0x2e, r24	; 46
    3196:	0d b4       	in	r0, 0x2d	; 45
    3198:	07 fe       	sbrs	r0, 7
    319a:	fd cf       	rjmp	.-6      	; 0x3196 <FLASH_Block_Lock_Setter+0x44>
    319c:	8e b5       	in	r24, 0x2e	; 46
    319e:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    31a2:	80 ea       	ldi	r24, 0xA0	; 160
    31a4:	8e bd       	out	0x2e, r24	; 46
    31a6:	0d b4       	in	r0, 0x2d	; 45
    31a8:	07 fe       	sbrs	r0, 7
    31aa:	fd cf       	rjmp	.-6      	; 0x31a6 <FLASH_Block_Lock_Setter+0x54>
    31ac:	8e b5       	in	r24, 0x2e	; 46
    31ae:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    31b2:	1e bc       	out	0x2e, r1	; 46
    31b4:	0d b4       	in	r0, 0x2d	; 45
    31b6:	07 fe       	sbrs	r0, 7
    31b8:	fd cf       	rjmp	.-6      	; 0x31b4 <FLASH_Block_Lock_Setter+0x62>
    31ba:	8e b5       	in	r24, 0x2e	; 46
    31bc:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    31c0:	0e 94 40 22 	call	0x4480	; 0x4480 <FLASH_NAND_CS_DISABLE>
    31c4:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <data>
    31c8:	1f 92       	push	r1
    31ca:	8f 93       	push	r24
    31cc:	81 eb       	ldi	r24, 0xB1	; 177
    31ce:	94 e0       	ldi	r25, 0x04	; 4
    31d0:	a0 e0       	ldi	r26, 0x00	; 0
    31d2:	af 93       	push	r26
    31d4:	9f 93       	push	r25
    31d6:	8f 93       	push	r24
    31d8:	c0 e0       	ldi	r28, 0x00	; 0
    31da:	da e0       	ldi	r29, 0x0A	; 10
    31dc:	df 93       	push	r29
    31de:	cf 93       	push	r28
    31e0:	0e 94 c8 20 	call	0x4190	; 0x4190 <_sprintf_cdnopuxX>
    31e4:	be 01       	movw	r22, r28
    31e6:	80 e8       	ldi	r24, 0x80	; 128
    31e8:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
    31ec:	8d b7       	in	r24, 0x3d	; 61
    31ee:	9e b7       	in	r25, 0x3e	; 62
    31f0:	07 96       	adiw	r24, 0x07	; 7
    31f2:	0f b6       	in	r0, 0x3f	; 63
    31f4:	f8 94       	cli
    31f6:	9e bf       	out	0x3e, r25	; 62
    31f8:	0f be       	out	0x3f, r0	; 63
    31fa:	8d bf       	out	0x3d, r24	; 61
    31fc:	df 91       	pop	r29
    31fe:	cf 91       	pop	r28
    3200:	08 95       	ret

Disassembly of section .text.FLASH_Block_Lock:

000032b2 <FLASH_Block_Lock>:
    32b2:	cf 93       	push	r28
    32b4:	df 93       	push	r29
    32b6:	c8 2f       	mov	r28, r24
    32b8:	0e 94 3c 22 	call	0x4478	; 0x4478 <FLASH_NAND_CS_ENABLE>
    32bc:	cc 23       	and	r28, r28
    32be:	c1 f0       	breq	.+48     	; 0x32f0 <FLASH_Block_Lock+0x3e>
    32c0:	8f e1       	ldi	r24, 0x1F	; 31
    32c2:	8e bd       	out	0x2e, r24	; 46
    32c4:	0d b4       	in	r0, 0x2d	; 45
    32c6:	07 fe       	sbrs	r0, 7
    32c8:	fd cf       	rjmp	.-6      	; 0x32c4 <FLASH_Block_Lock+0x12>
    32ca:	8e b5       	in	r24, 0x2e	; 46
    32cc:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    32d0:	80 ea       	ldi	r24, 0xA0	; 160
    32d2:	8e bd       	out	0x2e, r24	; 46
    32d4:	0d b4       	in	r0, 0x2d	; 45
    32d6:	07 fe       	sbrs	r0, 7
    32d8:	fd cf       	rjmp	.-6      	; 0x32d4 <FLASH_Block_Lock+0x22>
    32da:	8e b5       	in	r24, 0x2e	; 46
    32dc:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    32e0:	1e bc       	out	0x2e, r1	; 46
    32e2:	0d b4       	in	r0, 0x2d	; 45
    32e4:	07 fe       	sbrs	r0, 7
    32e6:	fd cf       	rjmp	.-6      	; 0x32e2 <FLASH_Block_Lock+0x30>
    32e8:	8e b5       	in	r24, 0x2e	; 46
    32ea:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    32ee:	17 c0       	rjmp	.+46     	; 0x331e <FLASH_Block_Lock+0x6c>
    32f0:	8f e0       	ldi	r24, 0x0F	; 15
    32f2:	8e bd       	out	0x2e, r24	; 46
    32f4:	0d b4       	in	r0, 0x2d	; 45
    32f6:	07 fe       	sbrs	r0, 7
    32f8:	fd cf       	rjmp	.-6      	; 0x32f4 <FLASH_Block_Lock+0x42>
    32fa:	8e b5       	in	r24, 0x2e	; 46
    32fc:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3300:	80 ea       	ldi	r24, 0xA0	; 160
    3302:	8e bd       	out	0x2e, r24	; 46
    3304:	0d b4       	in	r0, 0x2d	; 45
    3306:	07 fe       	sbrs	r0, 7
    3308:	fd cf       	rjmp	.-6      	; 0x3304 <FLASH_Block_Lock+0x52>
    330a:	8e b5       	in	r24, 0x2e	; 46
    330c:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3310:	1e bc       	out	0x2e, r1	; 46
    3312:	0d b4       	in	r0, 0x2d	; 45
    3314:	07 fe       	sbrs	r0, 7
    3316:	fd cf       	rjmp	.-6      	; 0x3312 <FLASH_Block_Lock+0x60>
    3318:	8e b5       	in	r24, 0x2e	; 46
    331a:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    331e:	0e 94 40 22 	call	0x4480	; 0x4480 <FLASH_NAND_CS_DISABLE>
    3322:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <data>
    3326:	1f 92       	push	r1
    3328:	8f 93       	push	r24
    332a:	81 eb       	ldi	r24, 0xB1	; 177
    332c:	94 e0       	ldi	r25, 0x04	; 4
    332e:	a0 e0       	ldi	r26, 0x00	; 0
    3330:	af 93       	push	r26
    3332:	9f 93       	push	r25
    3334:	8f 93       	push	r24
    3336:	c0 e0       	ldi	r28, 0x00	; 0
    3338:	da e0       	ldi	r29, 0x0A	; 10
    333a:	df 93       	push	r29
    333c:	cf 93       	push	r28
    333e:	0e 94 c8 20 	call	0x4190	; 0x4190 <_sprintf_cdnopuxX>
    3342:	be 01       	movw	r22, r28
    3344:	80 e8       	ldi	r24, 0x80	; 128
    3346:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
    334a:	8d b7       	in	r24, 0x3d	; 61
    334c:	9e b7       	in	r25, 0x3e	; 62
    334e:	07 96       	adiw	r24, 0x07	; 7
    3350:	0f b6       	in	r0, 0x3f	; 63
    3352:	f8 94       	cli
    3354:	9e bf       	out	0x3e, r25	; 62
    3356:	0f be       	out	0x3f, r0	; 63
    3358:	8d bf       	out	0x3d, r24	; 61
    335a:	df 91       	pop	r29
    335c:	cf 91       	pop	r28
    335e:	08 95       	ret

Disassembly of section .text.FLASH_Reset:

00004266 <FLASH_Reset>:
	USART_Data(status_feature);
}

void FLASH_Reset() //reset memory device
{
	FLASH_NAND_CS_ENABLE();
    4266:	0e 94 3c 22 	call	0x4478	; 0x4478 <FLASH_NAND_CS_ENABLE>
	
	SPDR = RESET; //Sending READ_ID Command into SPI Data Register (SPDR)
    426a:	8f ef       	ldi	r24, 0xFF	; 255
    426c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    426e:	0d b4       	in	r0, 0x2d	; 45
    4270:	07 fe       	sbrs	r0, 7
    4272:	fd cf       	rjmp	.-6      	; 0x426e <FLASH_Reset+0x8>
	
	FLASH_NAND_CS_DISABLE();
    4274:	0e 94 40 22 	call	0x4480	; 0x4480 <FLASH_NAND_CS_DISABLE>

	USART_Data("Device Reseted \n");
    4278:	6f ec       	ldi	r22, 0xCF	; 207
    427a:	74 e0       	ldi	r23, 0x04	; 4
    427c:	80 e0       	ldi	r24, 0x00	; 0
    427e:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
    4282:	08 95       	ret

Disassembly of section .text.FLASH_MainArray_Address:

0000340c <FLASH_MainArray_Address>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    340c:	cf 92       	push	r12
    340e:	df 92       	push	r13
    3410:	ef 92       	push	r14
    3412:	9a 01       	movw	r18, r20
    3414:	46 2f       	mov	r20, r22
    3416:	00 97       	sbiw	r24, 0x00	; 0
    3418:	81 f5       	brne	.+96     	; 0x347a <FLASH_MainArray_Address+0x6e>
    341a:	69 01       	movw	r12, r18
    341c:	e4 2e       	mov	r14, r20
    341e:	52 e0       	ldi	r21, 0x02	; 2
    3420:	c5 0e       	add	r12, r21
    3422:	d1 1c       	adc	r13, r1
    3424:	e1 1c       	adc	r14, r1
    3426:	f6 01       	movw	r30, r12
    3428:	5e 2d       	mov	r21, r14
    342a:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    342e:	6e bd       	out	0x2e, r22	; 46
    3430:	0d b4       	in	r0, 0x2d	; 45
    3432:	07 fe       	sbrs	r0, 7
    3434:	fd cf       	rjmp	.-6      	; 0x3430 <FLASH_MainArray_Address+0x24>
    3436:	5e b5       	in	r21, 0x2e	; 46
    3438:	50 93 2b 12 	sts	0x122B, r21	; 0x80122b <status>
    343c:	69 01       	movw	r12, r18
    343e:	e4 2e       	mov	r14, r20
    3440:	53 e0       	ldi	r21, 0x03	; 3
    3442:	c5 0e       	add	r12, r21
    3444:	d1 1c       	adc	r13, r1
    3446:	e1 1c       	adc	r14, r1
    3448:	f6 01       	movw	r30, r12
    344a:	5e 2d       	mov	r21, r14
    344c:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    3450:	6e bd       	out	0x2e, r22	; 46
    3452:	0d b4       	in	r0, 0x2d	; 45
    3454:	07 fe       	sbrs	r0, 7
    3456:	fd cf       	rjmp	.-6      	; 0x3452 <FLASH_MainArray_Address+0x46>
    3458:	5e b5       	in	r21, 0x2e	; 46
    345a:	50 93 2b 12 	sts	0x122B, r21	; 0x80122b <status>
    345e:	2c 5f       	subi	r18, 0xFC	; 252
    3460:	3f 4f       	sbci	r19, 0xFF	; 255
    3462:	4f 4f       	sbci	r20, 0xFF	; 255
    3464:	f9 01       	movw	r30, r18
    3466:	54 2f       	mov	r21, r20
    3468:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    346c:	6e bd       	out	0x2e, r22	; 46
    346e:	0d b4       	in	r0, 0x2d	; 45
    3470:	07 fe       	sbrs	r0, 7
    3472:	fd cf       	rjmp	.-6      	; 0x346e <FLASH_MainArray_Address+0x62>
    3474:	2e b5       	in	r18, 0x2e	; 46
    3476:	20 93 2b 12 	sts	0x122B, r18	; 0x80122b <status>
    347a:	01 97       	sbiw	r24, 0x01	; 1
    347c:	b1 f4       	brne	.+44     	; 0x34aa <FLASH_MainArray_Address+0x9e>
    347e:	1e bc       	out	0x2e, r1	; 46
    3480:	0d b4       	in	r0, 0x2d	; 45
    3482:	07 fe       	sbrs	r0, 7
    3484:	fd cf       	rjmp	.-6      	; 0x3480 <FLASH_MainArray_Address+0x74>
    3486:	8e b5       	in	r24, 0x2e	; 46
    3488:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    348c:	1e bc       	out	0x2e, r1	; 46
    348e:	0d b4       	in	r0, 0x2d	; 45
    3490:	07 fe       	sbrs	r0, 7
    3492:	fd cf       	rjmp	.-6      	; 0x348e <FLASH_MainArray_Address+0x82>
    3494:	8e b5       	in	r24, 0x2e	; 46
    3496:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    349a:	81 e0       	ldi	r24, 0x01	; 1
    349c:	8e bd       	out	0x2e, r24	; 46
    349e:	0d b4       	in	r0, 0x2d	; 45
    34a0:	07 fe       	sbrs	r0, 7
    34a2:	fd cf       	rjmp	.-6      	; 0x349e <FLASH_MainArray_Address+0x92>
    34a4:	8e b5       	in	r24, 0x2e	; 46
    34a6:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    34aa:	ef 90       	pop	r14
    34ac:	df 90       	pop	r13
    34ae:	cf 90       	pop	r12
    34b0:	08 95       	ret

Disassembly of section .text.FLASH_Column_Address:

00003c8c <FLASH_Column_Address>:
    3c8c:	9a 01       	movw	r18, r20
    3c8e:	46 2f       	mov	r20, r22
    3c90:	00 97       	sbiw	r24, 0x00	; 0
    3c92:	c9 f4       	brne	.+50     	; 0x3cc6 <FLASH_Column_Address+0x3a>
    3c94:	f9 01       	movw	r30, r18
    3c96:	54 2f       	mov	r21, r20
    3c98:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    3c9c:	6e bd       	out	0x2e, r22	; 46
    3c9e:	0d b4       	in	r0, 0x2d	; 45
    3ca0:	07 fe       	sbrs	r0, 7
    3ca2:	fd cf       	rjmp	.-6      	; 0x3c9e <FLASH_Column_Address+0x12>
    3ca4:	5e b5       	in	r21, 0x2e	; 46
    3ca6:	50 93 2b 12 	sts	0x122B, r21	; 0x80122b <status>
    3caa:	2f 5f       	subi	r18, 0xFF	; 255
    3cac:	3f 4f       	sbci	r19, 0xFF	; 255
    3cae:	4f 4f       	sbci	r20, 0xFF	; 255
    3cb0:	f9 01       	movw	r30, r18
    3cb2:	54 2f       	mov	r21, r20
    3cb4:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    3cb8:	6e bd       	out	0x2e, r22	; 46
    3cba:	0d b4       	in	r0, 0x2d	; 45
    3cbc:	07 fe       	sbrs	r0, 7
    3cbe:	fd cf       	rjmp	.-6      	; 0x3cba <FLASH_Column_Address+0x2e>
    3cc0:	2e b5       	in	r18, 0x2e	; 46
    3cc2:	20 93 2b 12 	sts	0x122B, r18	; 0x80122b <status>
    3cc6:	01 97       	sbiw	r24, 0x01	; 1
    3cc8:	71 f4       	brne	.+28     	; 0x3ce6 <FLASH_Column_Address+0x5a>
    3cca:	1e bc       	out	0x2e, r1	; 46
    3ccc:	0d b4       	in	r0, 0x2d	; 45
    3cce:	07 fe       	sbrs	r0, 7
    3cd0:	fd cf       	rjmp	.-6      	; 0x3ccc <FLASH_Column_Address+0x40>
    3cd2:	8e b5       	in	r24, 0x2e	; 46
    3cd4:	80 93 1f 12 	sts	0x121F, r24	; 0x80121f <HEX_ID>
    3cd8:	1e bc       	out	0x2e, r1	; 46
    3cda:	0d b4       	in	r0, 0x2d	; 45
    3cdc:	07 fe       	sbrs	r0, 7
    3cde:	fd cf       	rjmp	.-6      	; 0x3cda <FLASH_Column_Address+0x4e>
    3ce0:	8e b5       	in	r24, 0x2e	; 46
    3ce2:	80 93 20 12 	sts	0x1220, r24	; 0x801220 <HEX_ID+0x1>
    3ce6:	08 95       	ret

Disassembly of section .text.FLASH_Data_Storage:

00003740 <FLASH_Data_Storage>:
    3740:	0f 93       	push	r16
    3742:	1f 93       	push	r17
    3744:	cf 93       	push	r28
    3746:	df 93       	push	r29
    3748:	ec 01       	movw	r28, r24
    374a:	89 2b       	or	r24, r25
    374c:	51 f1       	breq	.+84     	; 0x37a2 <FLASH_Data_Storage+0x62>
    374e:	2f c0       	rjmp	.+94     	; 0x37ae <FLASH_Data_Storage+0x6e>
    3750:	1e bc       	out	0x2e, r1	; 46
    3752:	0d b4       	in	r0, 0x2d	; 45
    3754:	07 fe       	sbrs	r0, 7
    3756:	fd cf       	rjmp	.-6      	; 0x3752 <FLASH_Data_Storage+0x12>
    3758:	2e b5       	in	r18, 0x2e	; 46
    375a:	fc 01       	movw	r30, r24
    375c:	e1 5e       	subi	r30, 0xE1	; 225
    375e:	f5 4f       	sbci	r31, 0xF5	; 245
    3760:	20 83       	st	Z, r18
    3762:	2e b5       	in	r18, 0x2e	; 46
    3764:	2d 30       	cpi	r18, 0x0D	; 13
    3766:	d9 f4       	brne	.+54     	; 0x379e <FLASH_Data_Storage+0x5e>
    3768:	9f 93       	push	r25
    376a:	8f 93       	push	r24
    376c:	80 ee       	ldi	r24, 0xE0	; 224
    376e:	94 e0       	ldi	r25, 0x04	; 4
    3770:	a0 e0       	ldi	r26, 0x00	; 0
    3772:	af 93       	push	r26
    3774:	9f 93       	push	r25
    3776:	8f 93       	push	r24
    3778:	00 e0       	ldi	r16, 0x00	; 0
    377a:	1a e0       	ldi	r17, 0x0A	; 10
    377c:	1f 93       	push	r17
    377e:	0f 93       	push	r16
    3780:	0e 94 c8 20 	call	0x4190	; 0x4190 <_sprintf_cdnopuxX>
    3784:	b8 01       	movw	r22, r16
    3786:	80 e8       	ldi	r24, 0x80	; 128
    3788:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
    378c:	8d b7       	in	r24, 0x3d	; 61
    378e:	9e b7       	in	r25, 0x3e	; 62
    3790:	07 96       	adiw	r24, 0x07	; 7
    3792:	0f b6       	in	r0, 0x3f	; 63
    3794:	f8 94       	cli
    3796:	9e bf       	out	0x3e, r25	; 62
    3798:	0f be       	out	0x3f, r0	; 63
    379a:	8d bf       	out	0x3d, r24	; 61
    379c:	08 c0       	rjmp	.+16     	; 0x37ae <FLASH_Data_Storage+0x6e>
    379e:	01 96       	adiw	r24, 0x01	; 1
    37a0:	02 c0       	rjmp	.+4      	; 0x37a6 <FLASH_Data_Storage+0x66>
    37a2:	80 e0       	ldi	r24, 0x00	; 0
    37a4:	90 e0       	ldi	r25, 0x00	; 0
    37a6:	81 15       	cp	r24, r1
    37a8:	28 e0       	ldi	r18, 0x08	; 8
    37aa:	92 07       	cpc	r25, r18
    37ac:	88 f2       	brcs	.-94     	; 0x3750 <FLASH_Data_Storage+0x10>
    37ae:	21 97       	sbiw	r28, 0x01	; 1
    37b0:	91 f4       	brne	.+36     	; 0x37d6 <FLASH_Data_Storage+0x96>
    37b2:	0b c0       	rjmp	.+22     	; 0x37ca <FLASH_Data_Storage+0x8a>
    37b4:	1e bc       	out	0x2e, r1	; 46
    37b6:	0d b4       	in	r0, 0x2d	; 45
    37b8:	07 fe       	sbrs	r0, 7
    37ba:	fd cf       	rjmp	.-6      	; 0x37b6 <FLASH_Data_Storage+0x76>
    37bc:	2e b5       	in	r18, 0x2e	; 46
    37be:	fc 01       	movw	r30, r24
    37c0:	e1 5e       	subi	r30, 0xE1	; 225
    37c2:	f5 4f       	sbci	r31, 0xF5	; 245
    37c4:	20 83       	st	Z, r18
    37c6:	01 96       	adiw	r24, 0x01	; 1
    37c8:	02 c0       	rjmp	.+4      	; 0x37ce <FLASH_Data_Storage+0x8e>
    37ca:	80 e0       	ldi	r24, 0x00	; 0
    37cc:	90 e0       	ldi	r25, 0x00	; 0
    37ce:	81 15       	cp	r24, r1
    37d0:	28 e0       	ldi	r18, 0x08	; 8
    37d2:	92 07       	cpc	r25, r18
    37d4:	78 f3       	brcs	.-34     	; 0x37b4 <FLASH_Data_Storage+0x74>
    37d6:	df 91       	pop	r29
    37d8:	cf 91       	pop	r28
    37da:	1f 91       	pop	r17
    37dc:	0f 91       	pop	r16
    37de:	08 95       	ret

Disassembly of section .text.FLASH_Read_From_Cache_x1:

00003ce8 <FLASH_Read_From_Cache_x1>:
    3ce8:	0e 94 3c 22 	call	0x4478	; 0x4478 <FLASH_NAND_CS_ENABLE>
    3cec:	8b e0       	ldi	r24, 0x0B	; 11
    3cee:	8e bd       	out	0x2e, r24	; 46
    3cf0:	0d b4       	in	r0, 0x2d	; 45
    3cf2:	07 fe       	sbrs	r0, 7
    3cf4:	fd cf       	rjmp	.-6      	; 0x3cf0 <FLASH_Read_From_Cache_x1+0x8>
    3cf6:	8e b5       	in	r24, 0x2e	; 46
    3cf8:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3cfc:	8a e1       	ldi	r24, 0x1A	; 26
    3cfe:	8a 95       	dec	r24
    3d00:	f1 f7       	brne	.-4      	; 0x3cfe <FLASH_Read_From_Cache_x1+0x16>
    3d02:	00 c0       	rjmp	.+0      	; 0x3d04 <FLASH_Read_From_Cache_x1+0x1c>
    3d04:	46 e2       	ldi	r20, 0x26	; 38
    3d06:	52 e1       	ldi	r21, 0x12	; 18
    3d08:	60 e8       	ldi	r22, 0x80	; 128
    3d0a:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    3d0e:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    3d12:	0e 94 46 1e 	call	0x3c8c	; 0x3c8c <FLASH_Column_Address>
    3d16:	8f ef       	ldi	r24, 0xFF	; 255
    3d18:	8e bd       	out	0x2e, r24	; 46
    3d1a:	0d b4       	in	r0, 0x2d	; 45
    3d1c:	07 fe       	sbrs	r0, 7
    3d1e:	fd cf       	rjmp	.-6      	; 0x3d1a <FLASH_Read_From_Cache_x1+0x32>
    3d20:	8e b5       	in	r24, 0x2e	; 46
    3d22:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3d26:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    3d2a:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    3d2e:	0e 94 a0 1b 	call	0x3740	; 0x3740 <FLASH_Data_Storage>
    3d32:	0e 94 40 22 	call	0x4480	; 0x4480 <FLASH_NAND_CS_DISABLE>
    3d36:	08 95       	ret

Disassembly of section .text.FLASH_Status:

000037e0 <FLASH_Status>:
    37e0:	0f 93       	push	r16
    37e2:	1f 93       	push	r17
    37e4:	cf 93       	push	r28
    37e6:	df 93       	push	r29
    37e8:	0e 94 3c 22 	call	0x4478	; 0x4478 <FLASH_NAND_CS_ENABLE>
    37ec:	8f e0       	ldi	r24, 0x0F	; 15
    37ee:	8e bd       	out	0x2e, r24	; 46
    37f0:	0d b4       	in	r0, 0x2d	; 45
    37f2:	07 fe       	sbrs	r0, 7
    37f4:	fd cf       	rjmp	.-6      	; 0x37f0 <FLASH_Status+0x10>
    37f6:	8e b5       	in	r24, 0x2e	; 46
    37f8:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    37fc:	80 ec       	ldi	r24, 0xC0	; 192
    37fe:	8e bd       	out	0x2e, r24	; 46
    3800:	0d b4       	in	r0, 0x2d	; 45
    3802:	07 fe       	sbrs	r0, 7
    3804:	fd cf       	rjmp	.-6      	; 0x3800 <FLASH_Status+0x20>
    3806:	8e b5       	in	r24, 0x2e	; 46
    3808:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    380c:	1e bc       	out	0x2e, r1	; 46
    380e:	0d b4       	in	r0, 0x2d	; 45
    3810:	07 fe       	sbrs	r0, 7
    3812:	fd cf       	rjmp	.-6      	; 0x380e <FLASH_Status+0x2e>
    3814:	8e b5       	in	r24, 0x2e	; 46
    3816:	0f e1       	ldi	r16, 0x1F	; 31
    3818:	12 e1       	ldi	r17, 0x12	; 18
    381a:	f8 01       	movw	r30, r16
    381c:	80 83       	st	Z, r24
    381e:	1f 92       	push	r1
    3820:	8f 93       	push	r24
    3822:	8a ef       	ldi	r24, 0xFA	; 250
    3824:	94 e0       	ldi	r25, 0x04	; 4
    3826:	a0 e0       	ldi	r26, 0x00	; 0
    3828:	af 93       	push	r26
    382a:	9f 93       	push	r25
    382c:	8f 93       	push	r24
    382e:	c0 e0       	ldi	r28, 0x00	; 0
    3830:	da e0       	ldi	r29, 0x0A	; 10
    3832:	df 93       	push	r29
    3834:	cf 93       	push	r28
    3836:	0e 94 c8 20 	call	0x4190	; 0x4190 <_sprintf_cdnopuxX>
    383a:	be 01       	movw	r22, r28
    383c:	80 e8       	ldi	r24, 0x80	; 128
    383e:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
    3842:	3a e1       	ldi	r19, 0x1A	; 26
    3844:	3a 95       	dec	r19
    3846:	f1 f7       	brne	.-4      	; 0x3844 <FLASH_Status+0x64>
    3848:	00 c0       	rjmp	.+0      	; 0x384a <FLASH_Status+0x6a>
    384a:	f8 01       	movw	r30, r16
    384c:	80 81       	ld	r24, Z
    384e:	2d b7       	in	r18, 0x3d	; 61
    3850:	3e b7       	in	r19, 0x3e	; 62
    3852:	29 5f       	subi	r18, 0xF9	; 249
    3854:	3f 4f       	sbci	r19, 0xFF	; 255
    3856:	0f b6       	in	r0, 0x3f	; 63
    3858:	f8 94       	cli
    385a:	3e bf       	out	0x3e, r19	; 62
    385c:	0f be       	out	0x3f, r0	; 63
    385e:	2d bf       	out	0x3d, r18	; 61
    3860:	80 fd       	sbrc	r24, 0
    3862:	d4 cf       	rjmp	.-88     	; 0x380c <FLASH_Status+0x2c>
    3864:	0e 94 40 22 	call	0x4480	; 0x4480 <FLASH_NAND_CS_DISABLE>
    3868:	df 91       	pop	r29
    386a:	cf 91       	pop	r28
    386c:	1f 91       	pop	r17
    386e:	0f 91       	pop	r16
    3870:	08 95       	ret

Disassembly of section .text.FLASH_Program_Execute:

00004086 <FLASH_Program_Execute>:

void FLASH_Program_Execute() //new command to transfer data from cache to main array
{	
	FLASH_NAND_CS_ENABLE();
    4086:	0e 94 3c 22 	call	0x4478	; 0x4478 <FLASH_NAND_CS_ENABLE>
	
	//code below sends Program_Execute command with the starting address of the main array
	SPDR = PROGRAM_EXECUTE; //Sending Program Execute Command into SPI Data Register (SPDR)
    408a:	80 e1       	ldi	r24, 0x10	; 16
    408c:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1 << SPIF))); 
    408e:	0d b4       	in	r0, 0x2d	; 45
    4090:	07 fe       	sbrs	r0, 7
    4092:	fd cf       	rjmp	.-6      	; 0x408e <FLASH_Program_Execute+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    4094:	8e b5       	in	r24, 0x2e	; 46
    4096:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	
	//_delay_us(5);
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to write data to in MainArray
    409a:	46 e2       	ldi	r20, 0x26	; 38
    409c:	52 e1       	ldi	r21, 0x12	; 18
    409e:	60 e8       	ldi	r22, 0x80	; 128
    40a0:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    40a4:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    40a8:	0e 94 06 1a 	call	0x340c	; 0x340c <FLASH_MainArray_Address>
	
	FLASH_NAND_CS_DISABLE();
    40ac:	0e 94 40 22 	call	0x4480	; 0x4480 <FLASH_NAND_CS_DISABLE>
	
	//USART_Data("Program Execute \n");
	
	FLASH_Status(); //checks for the status of data transfer from cache to main array from program_execute command
    40b0:	0e 94 f0 1b 	call	0x37e0	; 0x37e0 <FLASH_Status>

	FLASH_Write_Disable();
    40b4:	0e 94 79 21 	call	0x42f2	; 0x42f2 <FLASH_Write_Disable>
    40b8:	08 95       	ret

Disassembly of section .text.FLASH_Page_Read:

00003f6a <FLASH_Page_Read>:
}

void FLASH_Page_Read() //reads a single page data from Block/Page array to transfer to Cache register
{
	FLASH_NAND_CS_ENABLE();
    3f6a:	0e 94 3c 22 	call	0x4478	; 0x4478 <FLASH_NAND_CS_ENABLE>
	
	SPDR = PAGE_READ; //Sending Page_Read Command into SPI Data Register (SPDR)
    3f6e:	83 e1       	ldi	r24, 0x13	; 19
    3f70:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    3f72:	0d b4       	in	r0, 0x2d	; 45
    3f74:	07 fe       	sbrs	r0, 7
    3f76:	fd cf       	rjmp	.-6      	; 0x3f72 <FLASH_Page_Read+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    3f78:	8e b5       	in	r24, 0x2e	; 46
    3f7a:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3f7e:	8a e1       	ldi	r24, 0x1A	; 26
    3f80:	8a 95       	dec	r24
    3f82:	f1 f7       	brne	.-4      	; 0x3f80 <FLASH_Page_Read+0x16>
    3f84:	00 c0       	rjmp	.+0      	; 0x3f86 <FLASH_Page_Read+0x1c>
	
	_delay_us(5);
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to read data from in MainArray
    3f86:	46 e2       	ldi	r20, 0x26	; 38
    3f88:	52 e1       	ldi	r21, 0x12	; 18
    3f8a:	60 e8       	ldi	r22, 0x80	; 128
    3f8c:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    3f90:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    3f94:	0e 94 06 1a 	call	0x340c	; 0x340c <FLASH_MainArray_Address>
	
	FLASH_NAND_CS_DISABLE();
    3f98:	0e 94 40 22 	call	0x4480	; 0x4480 <FLASH_NAND_CS_DISABLE>
	
	FLASH_Status(); //checks for the status of data transfer from main array to cache from page_read command
    3f9c:	0e 94 f0 1b 	call	0x37e0	; 0x37e0 <FLASH_Status>
	
	//USART_Data("Page Read \n");
	
	FLASH_Read_From_Cache_x1();
    3fa0:	0e 94 74 1e 	call	0x3ce8	; 0x3ce8 <FLASH_Read_From_Cache_x1>
    3fa4:	08 95       	ret

Disassembly of section .text.FLASH_Para_Pg:

00003d38 <FLASH_Para_Pg>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3d38:	0e 94 3c 22 	call	0x4478	; 0x4478 <FLASH_NAND_CS_ENABLE>
    3d3c:	8f e1       	ldi	r24, 0x1F	; 31
    3d3e:	8e bd       	out	0x2e, r24	; 46
    3d40:	0d b4       	in	r0, 0x2d	; 45
    3d42:	07 fe       	sbrs	r0, 7
    3d44:	fd cf       	rjmp	.-6      	; 0x3d40 <FLASH_Para_Pg+0x8>
    3d46:	80 eb       	ldi	r24, 0xB0	; 176
    3d48:	8e bd       	out	0x2e, r24	; 46
    3d4a:	0d b4       	in	r0, 0x2d	; 45
    3d4c:	07 fe       	sbrs	r0, 7
    3d4e:	fd cf       	rjmp	.-6      	; 0x3d4a <FLASH_Para_Pg+0x12>
    3d50:	80 e4       	ldi	r24, 0x40	; 64
    3d52:	8e bd       	out	0x2e, r24	; 46
    3d54:	0d b4       	in	r0, 0x2d	; 45
    3d56:	07 fe       	sbrs	r0, 7
    3d58:	fd cf       	rjmp	.-6      	; 0x3d54 <FLASH_Para_Pg+0x1c>
    3d5a:	0e 94 40 22 	call	0x4480	; 0x4480 <FLASH_NAND_CS_DISABLE>
    3d5e:	0e 94 b5 1f 	call	0x3f6a	; 0x3f6a <FLASH_Page_Read>
    3d62:	0e 94 3c 22 	call	0x4478	; 0x4478 <FLASH_NAND_CS_ENABLE>
    3d66:	8f e1       	ldi	r24, 0x1F	; 31
    3d68:	8e bd       	out	0x2e, r24	; 46
    3d6a:	0d b4       	in	r0, 0x2d	; 45
    3d6c:	07 fe       	sbrs	r0, 7
    3d6e:	fd cf       	rjmp	.-6      	; 0x3d6a <FLASH_Para_Pg+0x32>
    3d70:	80 eb       	ldi	r24, 0xB0	; 176
    3d72:	8e bd       	out	0x2e, r24	; 46
    3d74:	0d b4       	in	r0, 0x2d	; 45
    3d76:	07 fe       	sbrs	r0, 7
    3d78:	fd cf       	rjmp	.-6      	; 0x3d74 <FLASH_Para_Pg+0x3c>
    3d7a:	1e bc       	out	0x2e, r1	; 46
    3d7c:	0d b4       	in	r0, 0x2d	; 45
    3d7e:	07 fe       	sbrs	r0, 7
    3d80:	fd cf       	rjmp	.-6      	; 0x3d7c <FLASH_Para_Pg+0x44>
    3d82:	0e 94 40 22 	call	0x4480	; 0x4480 <FLASH_NAND_CS_DISABLE>
    3d86:	08 95       	ret

Disassembly of section .text.FLASH_Block_Erase:

00003ee8 <FLASH_Block_Erase>:
    3ee8:	0e 94 6c 21 	call	0x42d8	; 0x42d8 <FLASH_Write_Enable>
    3eec:	0e 94 3c 22 	call	0x4478	; 0x4478 <FLASH_NAND_CS_ENABLE>
    3ef0:	88 ed       	ldi	r24, 0xD8	; 216
    3ef2:	8e bd       	out	0x2e, r24	; 46
    3ef4:	0d b4       	in	r0, 0x2d	; 45
    3ef6:	07 fe       	sbrs	r0, 7
    3ef8:	fd cf       	rjmp	.-6      	; 0x3ef4 <FLASH_Block_Erase+0xc>
    3efa:	8e b5       	in	r24, 0x2e	; 46
    3efc:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3f00:	46 e2       	ldi	r20, 0x26	; 38
    3f02:	52 e1       	ldi	r21, 0x12	; 18
    3f04:	60 e8       	ldi	r22, 0x80	; 128
    3f06:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    3f0a:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    3f0e:	0e 94 06 1a 	call	0x340c	; 0x340c <FLASH_MainArray_Address>
    3f12:	0e 94 40 22 	call	0x4480	; 0x4480 <FLASH_NAND_CS_DISABLE>
    3f16:	69 e1       	ldi	r22, 0x19	; 25
    3f18:	75 e0       	ldi	r23, 0x05	; 5
    3f1a:	80 e0       	ldi	r24, 0x00	; 0
    3f1c:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
    3f20:	0e 94 f0 1b 	call	0x37e0	; 0x37e0 <FLASH_Status>
    3f24:	0e 94 79 21 	call	0x42f2	; 0x42f2 <FLASH_Write_Disable>
    3f28:	08 95       	ret

Disassembly of section .text.FLASH_Page_Program:

00003a1a <FLASH_Page_Program>:
    3a1a:	cf 93       	push	r28
    3a1c:	df 93       	push	r29
    3a1e:	0e 94 74 1f 	call	0x3ee8	; 0x3ee8 <FLASH_Block_Erase>
    3a22:	0e 94 6c 21 	call	0x42d8	; 0x42d8 <FLASH_Write_Enable>
    3a26:	0e 94 3c 22 	call	0x4478	; 0x4478 <FLASH_NAND_CS_ENABLE>
    3a2a:	82 e0       	ldi	r24, 0x02	; 2
    3a2c:	8e bd       	out	0x2e, r24	; 46
    3a2e:	0d b4       	in	r0, 0x2d	; 45
    3a30:	07 fe       	sbrs	r0, 7
    3a32:	fd cf       	rjmp	.-6      	; 0x3a2e <FLASH_Page_Program+0x14>
    3a34:	8e b5       	in	r24, 0x2e	; 46
    3a36:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3a3a:	8a e1       	ldi	r24, 0x1A	; 26
    3a3c:	8a 95       	dec	r24
    3a3e:	f1 f7       	brne	.-4      	; 0x3a3c <FLASH_Page_Program+0x22>
    3a40:	00 c0       	rjmp	.+0      	; 0x3a42 <FLASH_Page_Program+0x28>
    3a42:	46 e2       	ldi	r20, 0x26	; 38
    3a44:	52 e1       	ldi	r21, 0x12	; 18
    3a46:	60 e8       	ldi	r22, 0x80	; 128
    3a48:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    3a4c:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    3a50:	0e 94 46 1e 	call	0x3c8c	; 0x3c8c <FLASH_Column_Address>
    3a54:	c0 e0       	ldi	r28, 0x00	; 0
    3a56:	d0 e0       	ldi	r29, 0x00	; 0
    3a58:	0c c0       	rjmp	.+24     	; 0x3a72 <FLASH_Page_Program+0x58>
    3a5a:	fe 01       	movw	r30, r28
    3a5c:	e0 50       	subi	r30, 0x00	; 0
    3a5e:	fe 4f       	sbci	r31, 0xFE	; 254
    3a60:	80 81       	ld	r24, Z
    3a62:	8e bd       	out	0x2e, r24	; 46
    3a64:	0d b4       	in	r0, 0x2d	; 45
    3a66:	07 fe       	sbrs	r0, 7
    3a68:	fd cf       	rjmp	.-6      	; 0x3a64 <FLASH_Page_Program+0x4a>
    3a6a:	8e b5       	in	r24, 0x2e	; 46
    3a6c:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3a70:	21 96       	adiw	r28, 0x01	; 1
    3a72:	60 e0       	ldi	r22, 0x00	; 0
    3a74:	72 e0       	ldi	r23, 0x02	; 2
    3a76:	80 e8       	ldi	r24, 0x80	; 128
    3a78:	0e 94 00 21 	call	0x4200	; 0x4200 <strlen>
    3a7c:	c8 17       	cp	r28, r24
    3a7e:	d9 07       	cpc	r29, r25
    3a80:	60 f3       	brcs	.-40     	; 0x3a5a <FLASH_Page_Program+0x40>
    3a82:	0e 94 40 22 	call	0x4480	; 0x4480 <FLASH_NAND_CS_DISABLE>
    3a86:	0e 94 43 20 	call	0x4086	; 0x4086 <FLASH_Program_Execute>
    3a8a:	df 91       	pop	r29
    3a8c:	cf 91       	pop	r28
    3a8e:	08 95       	ret

Disassembly of section .text.Page_Tester:

00002f1a <Page_Tester>:
#include "../include/FLASH_NAND_MEMORY.h"
#include "../include/AWS_Board_Operations.h"
#include "../include/NAND_Flash_Formatter.h"

void Page_Tester() //tests each page per block
{
    2f1a:	cf 92       	push	r12
    2f1c:	df 92       	push	r13
    2f1e:	ef 92       	push	r14
    2f20:	ff 92       	push	r15
    2f22:	0f 93       	push	r16
    2f24:	cf 93       	push	r28
    2f26:	df 93       	push	r29
	 //first obtain Columns and Block/Page addresses
	USART_Data("---Column Address--- 2 bytes \n");
    2f28:	67 e2       	ldi	r22, 0x27	; 39
    2f2a:	75 e0       	ldi	r23, 0x05	; 5
    2f2c:	80 e0       	ldi	r24, 0x00	; 0
    2f2e:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
	COLUMN_BLOCK_PAGE_ADDRESSER(false); //obtain the column address
    2f32:	80 e0       	ldi	r24, 0x00	; 0
    2f34:	0e 94 07 12 	call	0x240e	; 0x240e <COLUMN_BLOCK_PAGE_ADDRESSER>

	USART_Data("---Block/Page Address--- 3 bytes \n");
    2f38:	66 e4       	ldi	r22, 0x46	; 70
    2f3a:	75 e0       	ldi	r23, 0x05	; 5
    2f3c:	80 e0       	ldi	r24, 0x00	; 0
    2f3e:	0e 94 c4 1e 	call	0x3d88	; 0x3d88 <USART_Data>
	COLUMN_BLOCK_PAGE_ADDRESSER(true); //obtain the Block/Page address
    2f42:	81 e0       	ldi	r24, 0x01	; 1
    2f44:	0e 94 07 12 	call	0x240e	; 0x240e <COLUMN_BLOCK_PAGE_ADDRESSER>
		
	for (int i = 0; i < PAGES_PER_BLOCK; i++)
    2f48:	c0 e0       	ldi	r28, 0x00	; 0
    2f4a:	d0 e0       	ldi	r29, 0x00	; 0
    2f4c:	3b c0       	rjmp	.+118    	; 0x2fc4 <Page_Tester+0xaa>
	{
		CLEAR_ARR();
    2f4e:	0e 94 e8 1d 	call	0x3bd0	; 0x3bd0 <CLEAR_ARR>
		FLASH_Page_Read();
    2f52:	0e 94 b5 1f 	call	0x3f6a	; 0x3f6a <FLASH_Page_Read>
		
		if (Byte_Address[4] == 0x40) //break loop if passed this point (x3F) is where all page bits are set to 1
    2f56:	80 91 2a 12 	lds	r24, 0x122A	; 0x80122a <Byte_Address+0x4>
    2f5a:	80 34       	cpi	r24, 0x40	; 64
    2f5c:	b1 f1       	breq	.+108    	; 0x2fca <Page_Tester+0xb0>
		{
			break;
		}
		
		if (data[0] != 0xFF)
    2f5e:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <data>
    2f62:	8f 3f       	cpi	r24, 0xFF	; 255
    2f64:	a9 f0       	breq	.+42     	; 0x2f90 <Page_Tester+0x76>
		{
			Print_To_User(1, 4, "0x%02X This Page is marked bad \n", Byte_Address, status_feature);
    2f66:	86 e2       	ldi	r24, 0x26	; 38
    2f68:	92 e1       	ldi	r25, 0x12	; 18
    2f6a:	7c 01       	movw	r14, r24
    2f6c:	20 e8       	ldi	r18, 0x80	; 128
    2f6e:	02 2f       	mov	r16, r18
    2f70:	0f 2e       	mov	r0, r31
    2f72:	f0 e0       	ldi	r31, 0x00	; 0
    2f74:	cf 2e       	mov	r12, r31
    2f76:	fa e0       	ldi	r31, 0x0A	; 10
    2f78:	df 2e       	mov	r13, r31
    2f7a:	f0 2d       	mov	r31, r0
    2f7c:	29 e6       	ldi	r18, 0x69	; 105
    2f7e:	35 e0       	ldi	r19, 0x05	; 5
    2f80:	40 e0       	ldi	r20, 0x00	; 0
    2f82:	64 e0       	ldi	r22, 0x04	; 4
    2f84:	70 e0       	ldi	r23, 0x00	; 0
    2f86:	81 e0       	ldi	r24, 0x01	; 1
    2f88:	90 e0       	ldi	r25, 0x00	; 0
    2f8a:	0e 94 b0 19 	call	0x3360	; 0x3360 <Print_To_User>
    2f8e:	14 c0       	rjmp	.+40     	; 0x2fb8 <Page_Tester+0x9e>
		}
		else
		{
			Print_To_User(1, 4, "0x%02X This Page is clean \n", Byte_Address, status_feature);
    2f90:	86 e2       	ldi	r24, 0x26	; 38
    2f92:	92 e1       	ldi	r25, 0x12	; 18
    2f94:	7c 01       	movw	r14, r24
    2f96:	20 e8       	ldi	r18, 0x80	; 128
    2f98:	02 2f       	mov	r16, r18
    2f9a:	0f 2e       	mov	r0, r31
    2f9c:	f0 e0       	ldi	r31, 0x00	; 0
    2f9e:	cf 2e       	mov	r12, r31
    2fa0:	fa e0       	ldi	r31, 0x0A	; 10
    2fa2:	df 2e       	mov	r13, r31
    2fa4:	f0 2d       	mov	r31, r0
    2fa6:	2a e8       	ldi	r18, 0x8A	; 138
    2fa8:	35 e0       	ldi	r19, 0x05	; 5
    2faa:	40 e0       	ldi	r20, 0x00	; 0
    2fac:	64 e0       	ldi	r22, 0x04	; 4
    2fae:	70 e0       	ldi	r23, 0x00	; 0
    2fb0:	81 e0       	ldi	r24, 0x01	; 1
    2fb2:	90 e0       	ldi	r25, 0x00	; 0
    2fb4:	0e 94 b0 19 	call	0x3360	; 0x3360 <Print_To_User>
		}
		
		Byte_Address[4]++; //increment page hopefully...
    2fb8:	e6 e2       	ldi	r30, 0x26	; 38
    2fba:	f2 e1       	ldi	r31, 0x12	; 18
    2fbc:	84 81       	ldd	r24, Z+4	; 0x04
    2fbe:	8f 5f       	subi	r24, 0xFF	; 255
    2fc0:	84 83       	std	Z+4, r24	; 0x04
	COLUMN_BLOCK_PAGE_ADDRESSER(false); //obtain the column address

	USART_Data("---Block/Page Address--- 3 bytes \n");
	COLUMN_BLOCK_PAGE_ADDRESSER(true); //obtain the Block/Page address
		
	for (int i = 0; i < PAGES_PER_BLOCK; i++)
    2fc2:	21 96       	adiw	r28, 0x01	; 1
    2fc4:	c0 34       	cpi	r28, 0x40	; 64
    2fc6:	d1 05       	cpc	r29, r1
    2fc8:	14 f2       	brlt	.-124    	; 0x2f4e <Page_Tester+0x34>
			Print_To_User(1, 4, "0x%02X This Page is clean \n", Byte_Address, status_feature);
		}
		
		Byte_Address[4]++; //increment page hopefully...
	}
}
    2fca:	df 91       	pop	r29
    2fcc:	cf 91       	pop	r28
    2fce:	0f 91       	pop	r16
    2fd0:	ff 90       	pop	r15
    2fd2:	ef 90       	pop	r14
    2fd4:	df 90       	pop	r13
    2fd6:	cf 90       	pop	r12
    2fd8:	08 95       	ret

Disassembly of section .text.libgcc:

00004404 <__xload_1>:
    4404:	57 fd       	sbrc	r21, 7
    4406:	03 c0       	rjmp	.+6      	; 0x440e <__xload_1+0xa>
    4408:	5b bf       	out	0x3b, r21	; 59
    440a:	67 91       	elpm	r22, Z+
    440c:	08 95       	ret
    440e:	60 81       	ld	r22, Z
    4410:	08 95       	ret

Disassembly of section .text.__dummy_fini:

000044a6 <_fini>:
    44a6:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000044a8 <__funcs_on_exit>:
    44a8:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000044aa <__simulator_exit>:
    44aa:	08 95       	ret

Disassembly of section .text.exit:

00004382 <exit>:
    4382:	ec 01       	movw	r28, r24
    4384:	0e 94 54 22 	call	0x44a8	; 0x44a8 <__funcs_on_exit>
    4388:	0e 94 53 22 	call	0x44a6	; 0x44a6 <_fini>
    438c:	ce 01       	movw	r24, r28
    438e:	0e 94 55 22 	call	0x44aa	; 0x44aa <__simulator_exit>
    4392:	ce 01       	movw	r24, r28
    4394:	0e 94 51 22 	call	0x44a2	; 0x44a2 <_Exit>

Disassembly of section .text.__wrap_sprintf:

00004190 <_sprintf_cdnopuxX>:
    4190:	a0 e0       	ldi	r26, 0x00	; 0
    4192:	b0 e0       	ldi	r27, 0x00	; 0
    4194:	ee ec       	ldi	r30, 0xCE	; 206
    4196:	f0 e2       	ldi	r31, 0x20	; 32
    4198:	0c 94 01 20 	jmp	0x4002	; 0x4002 <__prologue_saves__+0x20>
    419c:	9e 01       	movw	r18, r28
    419e:	25 5f       	subi	r18, 0xF5	; 245
    41a0:	3f 4f       	sbci	r19, 0xFF	; 255
    41a2:	48 85       	ldd	r20, Y+8	; 0x08
    41a4:	59 85       	ldd	r21, Y+9	; 0x09
    41a6:	6a 85       	ldd	r22, Y+10	; 0x0a
    41a8:	8e 81       	ldd	r24, Y+6	; 0x06
    41aa:	9f 81       	ldd	r25, Y+7	; 0x07
    41ac:	0e 94 92 21 	call	0x4324	; 0x4324 <__vsprintf>
    41b0:	e2 e0       	ldi	r30, 0x02	; 2
    41b2:	0c 94 38 20 	jmp	0x4070	; 0x4070 <__epilogue_restores__+0x20>

Disassembly of section .text.__fmt_s:

00002e50 <__fmt_s>:
    2e50:	2f 92       	push	r2
    2e52:	3f 92       	push	r3
    2e54:	4f 92       	push	r4
    2e56:	6f 92       	push	r6
    2e58:	7f 92       	push	r7
    2e5a:	8f 92       	push	r8
    2e5c:	af 92       	push	r10
    2e5e:	bf 92       	push	r11
    2e60:	cf 92       	push	r12
    2e62:	df 92       	push	r13
    2e64:	ef 92       	push	r14
    2e66:	ff 92       	push	r15
    2e68:	0f 93       	push	r16
    2e6a:	1f 93       	push	r17
    2e6c:	cf 93       	push	r28
    2e6e:	df 93       	push	r29
    2e70:	cd b7       	in	r28, 0x3d	; 61
    2e72:	de b7       	in	r29, 0x3e	; 62
    2e74:	27 97       	sbiw	r28, 0x07	; 7
    2e76:	0f b6       	in	r0, 0x3f	; 63
    2e78:	f8 94       	cli
    2e7a:	de bf       	out	0x3e, r29	; 62
    2e7c:	0f be       	out	0x3f, r0	; 63
    2e7e:	cd bf       	out	0x3d, r28	; 61
    2e80:	6c 01       	movw	r12, r24
    2e82:	7b 01       	movw	r14, r22
    2e84:	39 01       	movw	r6, r18
    2e86:	84 2e       	mov	r8, r20
    2e88:	98 01       	movw	r18, r16
    2e8a:	8f ee       	ldi	r24, 0xEF	; 239
    2e8c:	28 2e       	mov	r2, r24
    2e8e:	85 e0       	ldi	r24, 0x05	; 5
    2e90:	38 2e       	mov	r3, r24
    2e92:	80 e0       	ldi	r24, 0x00	; 0
    2e94:	48 2e       	mov	r4, r24
    2e96:	87 e0       	ldi	r24, 0x07	; 7
    2e98:	f1 01       	movw	r30, r2
    2e9a:	ae 01       	movw	r20, r28
    2e9c:	4f 5f       	subi	r20, 0xFF	; 255
    2e9e:	5f 4f       	sbci	r21, 0xFF	; 255
    2ea0:	da 01       	movw	r26, r20
    2ea2:	74 2d       	mov	r23, r4
    2ea4:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__movmemx_qi>
    2ea8:	f7 01       	movw	r30, r14
    2eaa:	02 81       	ldd	r16, Z+2	; 0x02
    2eac:	13 81       	ldd	r17, Z+3	; 0x03
    2eae:	a4 80       	ldd	r10, Z+4	; 0x04
    2eb0:	b5 80       	ldd	r11, Z+5	; 0x05
    2eb2:	e0 80       	ld	r14, Z
    2eb4:	f1 80       	ldd	r15, Z+1	; 0x01
    2eb6:	61 14       	cp	r6, r1
    2eb8:	71 04       	cpc	r7, r1
    2eba:	81 04       	cpc	r8, r1
    2ebc:	19 f4       	brne	.+6      	; 0x2ec4 <__fmt_s+0x74>
    2ebe:	3a 01       	movw	r6, r20
    2ec0:	f0 e8       	ldi	r31, 0x80	; 128
    2ec2:	8f 2e       	mov	r8, r31
    2ec4:	21 15       	cp	r18, r1
    2ec6:	31 05       	cpc	r19, r1
    2ec8:	29 f4       	brne	.+10     	; 0x2ed4 <__fmt_s+0x84>
    2eca:	88 2d       	mov	r24, r8
    2ecc:	b3 01       	movw	r22, r6
    2ece:	0e 94 00 21 	call	0x4200	; 0x4200 <strlen>
    2ed2:	9c 01       	movw	r18, r24
    2ed4:	17 fd       	sbrc	r17, 7
    2ed6:	04 c0       	rjmp	.+8      	; 0x2ee0 <__fmt_s+0x90>
    2ed8:	02 17       	cp	r16, r18
    2eda:	13 07       	cpc	r17, r19
    2edc:	08 f4       	brcc	.+2      	; 0x2ee0 <__fmt_s+0x90>
    2ede:	98 01       	movw	r18, r16
    2ee0:	85 01       	movw	r16, r10
    2ee2:	68 2d       	mov	r22, r8
    2ee4:	a3 01       	movw	r20, r6
    2ee6:	c6 01       	movw	r24, r12
    2ee8:	0e 94 8b 14 	call	0x2916	; 0x2916 <__pad>
    2eec:	27 96       	adiw	r28, 0x07	; 7
    2eee:	0f b6       	in	r0, 0x3f	; 63
    2ef0:	f8 94       	cli
    2ef2:	de bf       	out	0x3e, r29	; 62
    2ef4:	0f be       	out	0x3f, r0	; 63
    2ef6:	cd bf       	out	0x3d, r28	; 61
    2ef8:	df 91       	pop	r29
    2efa:	cf 91       	pop	r28
    2efc:	1f 91       	pop	r17
    2efe:	0f 91       	pop	r16
    2f00:	ff 90       	pop	r15
    2f02:	ef 90       	pop	r14
    2f04:	df 90       	pop	r13
    2f06:	cf 90       	pop	r12
    2f08:	bf 90       	pop	r11
    2f0a:	af 90       	pop	r10
    2f0c:	8f 90       	pop	r8
    2f0e:	7f 90       	pop	r7
    2f10:	6f 90       	pop	r6
    2f12:	4f 90       	pop	r4
    2f14:	3f 90       	pop	r3
    2f16:	2f 90       	pop	r2
    2f18:	08 95       	ret

Disassembly of section .text.__out:

00003b04 <__out>:
    3b04:	6f 92       	push	r6
    3b06:	7f 92       	push	r7
    3b08:	8f 92       	push	r8
    3b0a:	cf 92       	push	r12
    3b0c:	df 92       	push	r13
    3b0e:	ef 92       	push	r14
    3b10:	0f 93       	push	r16
    3b12:	1f 93       	push	r17
    3b14:	cf 93       	push	r28
    3b16:	df 93       	push	r29
    3b18:	8c 01       	movw	r16, r24
    3b1a:	6a 01       	movw	r12, r20
    3b1c:	e6 2e       	mov	r14, r22
    3b1e:	e9 01       	movw	r28, r18
    3b20:	3a 01       	movw	r6, r20
    3b22:	86 2e       	mov	r8, r22
    3b24:	62 0e       	add	r6, r18
    3b26:	73 1e       	adc	r7, r19
    3b28:	81 1c       	adc	r8, r1
    3b2a:	37 fd       	sbrc	r19, 7
    3b2c:	8a 94       	dec	r8
    3b2e:	c6 14       	cp	r12, r6
    3b30:	d7 04       	cpc	r13, r7
    3b32:	e8 04       	cpc	r14, r8
    3b34:	81 f0       	breq	.+32     	; 0x3b56 <__out+0x52>
    3b36:	f6 01       	movw	r30, r12
    3b38:	5e 2d       	mov	r21, r14
    3b3a:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    3b3e:	86 2f       	mov	r24, r22
    3b40:	b8 01       	movw	r22, r16
    3b42:	08 2e       	mov	r0, r24
    3b44:	00 0c       	add	r0, r0
    3b46:	99 0b       	sbc	r25, r25
    3b48:	0e 94 39 1c 	call	0x3872	; 0x3872 <fputc>
    3b4c:	8f ef       	ldi	r24, 0xFF	; 255
    3b4e:	c8 1a       	sub	r12, r24
    3b50:	d8 0a       	sbc	r13, r24
    3b52:	e8 0a       	sbc	r14, r24
    3b54:	ec cf       	rjmp	.-40     	; 0x3b2e <__out+0x2a>
    3b56:	ce 01       	movw	r24, r28
    3b58:	df 91       	pop	r29
    3b5a:	cf 91       	pop	r28
    3b5c:	1f 91       	pop	r17
    3b5e:	0f 91       	pop	r16
    3b60:	ef 90       	pop	r14
    3b62:	df 90       	pop	r13
    3b64:	cf 90       	pop	r12
    3b66:	8f 90       	pop	r8
    3b68:	7f 90       	pop	r7
    3b6a:	6f 90       	pop	r6
    3b6c:	08 95       	ret

Disassembly of section .text.__pad:

00002916 <__pad>:
    2916:	2f 92       	push	r2
    2918:	3f 92       	push	r3
    291a:	4f 92       	push	r4
    291c:	6f 92       	push	r6
    291e:	7f 92       	push	r7
    2920:	8f 92       	push	r8
    2922:	af 92       	push	r10
    2924:	bf 92       	push	r11
    2926:	cf 92       	push	r12
    2928:	df 92       	push	r13
    292a:	ef 92       	push	r14
    292c:	ff 92       	push	r15
    292e:	0f 93       	push	r16
    2930:	1f 93       	push	r17
    2932:	cf 93       	push	r28
    2934:	df 93       	push	r29
    2936:	cd b7       	in	r28, 0x3d	; 61
    2938:	de b7       	in	r29, 0x3e	; 62
    293a:	66 97       	sbiw	r28, 0x16	; 22
    293c:	0f b6       	in	r0, 0x3f	; 63
    293e:	f8 94       	cli
    2940:	de bf       	out	0x3e, r29	; 62
    2942:	0f be       	out	0x3f, r0	; 63
    2944:	cd bf       	out	0x3d, r28	; 61
    2946:	5c 01       	movw	r10, r24
    2948:	3a 01       	movw	r6, r20
    294a:	86 2e       	mov	r8, r22
    294c:	69 01       	movw	r12, r18
    294e:	c7 01       	movw	r24, r14
    2950:	81 70       	andi	r24, 0x01	; 1
    2952:	99 27       	eor	r25, r25
    2954:	9c 8b       	std	Y+20, r25	; 0x14
    2956:	8b 8b       	std	Y+19, r24	; 0x13
    2958:	e0 fc       	sbrc	r14, 0
    295a:	1d c0       	rjmp	.+58     	; 0x2996 <__pad+0x80>
    295c:	20 17       	cp	r18, r16
    295e:	31 07       	cpc	r19, r17
    2960:	d4 f4       	brge	.+52     	; 0x2996 <__pad+0x80>
    2962:	78 01       	movw	r14, r16
    2964:	ec 18       	sub	r14, r12
    2966:	fd 08       	sbc	r15, r13
    2968:	fe 8a       	std	Y+22, r15	; 0x16
    296a:	ed 8a       	std	Y+21, r14	; 0x15
    296c:	a7 01       	movw	r20, r14
    296e:	91 e1       	ldi	r25, 0x11	; 17
    2970:	e9 16       	cp	r14, r25
    2972:	f1 04       	cpc	r15, r1
    2974:	10 f0       	brcs	.+4      	; 0x297a <__pad+0x64>
    2976:	40 e1       	ldi	r20, 0x10	; 16
    2978:	50 e0       	ldi	r21, 0x00	; 0
    297a:	60 e2       	ldi	r22, 0x20	; 32
    297c:	70 e0       	ldi	r23, 0x00	; 0
    297e:	ce 01       	movw	r24, r28
    2980:	01 96       	adiw	r24, 0x01	; 1
    2982:	9a 8b       	std	Y+18, r25	; 0x12
    2984:	89 8b       	std	Y+17, r24	; 0x11
    2986:	0e 94 cc 21 	call	0x4398	; 0x4398 <memset>
    298a:	89 89       	ldd	r24, Y+17	; 0x11
    298c:	9a 89       	ldd	r25, Y+18	; 0x12
    298e:	1c 01       	movw	r2, r24
    2990:	20 e8       	ldi	r18, 0x80	; 128
    2992:	42 2e       	mov	r4, r18
    2994:	0b c0       	rjmp	.+22     	; 0x29ac <__pad+0x96>
    2996:	96 01       	movw	r18, r12
    2998:	68 2d       	mov	r22, r8
    299a:	a3 01       	movw	r20, r6
    299c:	c5 01       	movw	r24, r10
    299e:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <__out>
    29a2:	c0 16       	cp	r12, r16
    29a4:	d1 06       	cpc	r13, r17
    29a6:	ec f2       	brlt	.-70     	; 0x2962 <__pad+0x4c>
    29a8:	c6 01       	movw	r24, r12
    29aa:	25 c0       	rjmp	.+74     	; 0x29f6 <__pad+0xe0>
    29ac:	90 e1       	ldi	r25, 0x10	; 16
    29ae:	e9 16       	cp	r14, r25
    29b0:	f1 04       	cpc	r15, r1
    29b2:	58 f0       	brcs	.+22     	; 0x29ca <__pad+0xb4>
    29b4:	20 e1       	ldi	r18, 0x10	; 16
    29b6:	30 e0       	ldi	r19, 0x00	; 0
    29b8:	64 2d       	mov	r22, r4
    29ba:	a1 01       	movw	r20, r2
    29bc:	c5 01       	movw	r24, r10
    29be:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <__out>
    29c2:	80 e1       	ldi	r24, 0x10	; 16
    29c4:	e8 1a       	sub	r14, r24
    29c6:	f1 08       	sbc	r15, r1
    29c8:	f1 cf       	rjmp	.-30     	; 0x29ac <__pad+0x96>
    29ca:	2d 89       	ldd	r18, Y+21	; 0x15
    29cc:	3e 89       	ldd	r19, Y+22	; 0x16
    29ce:	2f 70       	andi	r18, 0x0F	; 15
    29d0:	33 27       	eor	r19, r19
    29d2:	89 89       	ldd	r24, Y+17	; 0x11
    29d4:	9a 89       	ldd	r25, Y+18	; 0x12
    29d6:	ac 01       	movw	r20, r24
    29d8:	60 e8       	ldi	r22, 0x80	; 128
    29da:	c5 01       	movw	r24, r10
    29dc:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <__out>
    29e0:	8b 89       	ldd	r24, Y+19	; 0x13
    29e2:	9c 89       	ldd	r25, Y+20	; 0x14
    29e4:	89 2b       	or	r24, r25
    29e6:	31 f4       	brne	.+12     	; 0x29f4 <__pad+0xde>
    29e8:	96 01       	movw	r18, r12
    29ea:	68 2d       	mov	r22, r8
    29ec:	a3 01       	movw	r20, r6
    29ee:	c5 01       	movw	r24, r10
    29f0:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <__out>
    29f4:	c8 01       	movw	r24, r16
    29f6:	66 96       	adiw	r28, 0x16	; 22
    29f8:	0f b6       	in	r0, 0x3f	; 63
    29fa:	f8 94       	cli
    29fc:	de bf       	out	0x3e, r29	; 62
    29fe:	0f be       	out	0x3f, r0	; 63
    2a00:	cd bf       	out	0x3d, r28	; 61
    2a02:	df 91       	pop	r29
    2a04:	cf 91       	pop	r28
    2a06:	1f 91       	pop	r17
    2a08:	0f 91       	pop	r16
    2a0a:	ff 90       	pop	r15
    2a0c:	ef 90       	pop	r14
    2a0e:	df 90       	pop	r13
    2a10:	cf 90       	pop	r12
    2a12:	bf 90       	pop	r11
    2a14:	af 90       	pop	r10
    2a16:	8f 90       	pop	r8
    2a18:	7f 90       	pop	r7
    2a1a:	6f 90       	pop	r6
    2a1c:	4f 90       	pop	r4
    2a1e:	3f 90       	pop	r3
    2a20:	2f 90       	pop	r2
    2a22:	08 95       	ret

Disassembly of section .text.__fmt_state:

000034b2 <__fmt_state>:
    34b2:	cf 92       	push	r12
    34b4:	df 92       	push	r13
    34b6:	ef 92       	push	r14
    34b8:	dc 01       	movw	r26, r24
    34ba:	90 e0       	ldi	r25, 0x00	; 0
    34bc:	29 2f       	mov	r18, r25
    34be:	30 e0       	ldi	r19, 0x00	; 0
    34c0:	22 0f       	add	r18, r18
    34c2:	33 1f       	adc	r19, r19
    34c4:	69 01       	movw	r12, r18
    34c6:	03 2e       	mov	r0, r19
    34c8:	00 0c       	add	r0, r0
    34ca:	ee 08       	sbc	r14, r14
    34cc:	6e 2d       	mov	r22, r14
    34ce:	a6 01       	movw	r20, r12
    34d0:	4a 55       	subi	r20, 0x5A	; 90
    34d2:	5a 4f       	sbci	r21, 0xFA	; 250
    34d4:	6f 4f       	sbci	r22, 0xFF	; 255
    34d6:	6a 01       	movw	r12, r20
    34d8:	e6 2e       	mov	r14, r22
    34da:	fa 01       	movw	r30, r20
    34dc:	5e 2d       	mov	r21, r14
    34de:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    34e2:	86 2f       	mov	r24, r22
    34e4:	61 11       	cpse	r22, r1
    34e6:	0e c0       	rjmp	.+28     	; 0x3504 <__fmt_state+0x52>
    34e8:	2f 5f       	subi	r18, 0xFF	; 255
    34ea:	3f 4f       	sbci	r19, 0xFF	; 255
    34ec:	03 2e       	mov	r0, r19
    34ee:	00 0c       	add	r0, r0
    34f0:	44 0b       	sbc	r20, r20
    34f2:	2a 55       	subi	r18, 0x5A	; 90
    34f4:	3a 4f       	sbci	r19, 0xFA	; 250
    34f6:	4f 4f       	sbci	r20, 0xFF	; 255
    34f8:	f9 01       	movw	r30, r18
    34fa:	54 2f       	mov	r21, r20
    34fc:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    3500:	86 2f       	mov	r24, r22
    3502:	25 c0       	rjmp	.+74     	; 0x354e <__fmt_state+0x9c>
    3504:	cd 90       	ld	r12, X+
    3506:	dd 90       	ld	r13, X+
    3508:	ec 90       	ld	r14, X
    350a:	12 97       	sbiw	r26, 0x02	; 2
    350c:	f6 01       	movw	r30, r12
    350e:	5e 2d       	mov	r21, r14
    3510:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    3514:	86 13       	cpse	r24, r22
    3516:	16 c0       	rjmp	.+44     	; 0x3544 <__fmt_state+0x92>
    3518:	2f 5f       	subi	r18, 0xFF	; 255
    351a:	3f 4f       	sbci	r19, 0xFF	; 255
    351c:	03 2e       	mov	r0, r19
    351e:	00 0c       	add	r0, r0
    3520:	44 0b       	sbc	r20, r20
    3522:	2a 55       	subi	r18, 0x5A	; 90
    3524:	3a 4f       	sbci	r19, 0xFA	; 250
    3526:	4f 4f       	sbci	r20, 0xFF	; 255
    3528:	f9 01       	movw	r30, r18
    352a:	54 2f       	mov	r21, r20
    352c:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    3530:	96 2f       	mov	r25, r22
    3532:	5f ef       	ldi	r21, 0xFF	; 255
    3534:	c5 1a       	sub	r12, r21
    3536:	d5 0a       	sbc	r13, r21
    3538:	e5 0a       	sbc	r14, r21
    353a:	cd 92       	st	X+, r12
    353c:	dd 92       	st	X+, r13
    353e:	ec 92       	st	X, r14
    3540:	12 97       	sbiw	r26, 0x02	; 2
    3542:	01 c0       	rjmp	.+2      	; 0x3546 <__fmt_state+0x94>
    3544:	9f 5f       	subi	r25, 0xFF	; 255
    3546:	9b 30       	cpi	r25, 0x0B	; 11
    3548:	08 f4       	brcc	.+2      	; 0x354c <__fmt_state+0x9a>
    354a:	b8 cf       	rjmp	.-144    	; 0x34bc <__fmt_state+0xa>
    354c:	89 2f       	mov	r24, r25
    354e:	ef 90       	pop	r14
    3550:	df 90       	pop	r13
    3552:	cf 90       	pop	r12
    3554:	08 95       	ret

Disassembly of section .text.__printf_core:

000005fc <__printf_core>:
 5fc:	a3 ea       	ldi	r26, 0xA3	; 163
 5fe:	b0 e0       	ldi	r27, 0x00	; 0
 600:	e4 e0       	ldi	r30, 0x04	; 4
 602:	f3 e0       	ldi	r31, 0x03	; 3
 604:	0c 94 f1 1f 	jmp	0x3fe2	; 0x3fe2 <__prologue_saves__>
 608:	4c 01       	movw	r8, r24
 60a:	59 01       	movw	r10, r18
 60c:	c7 56       	subi	r28, 0x67	; 103
 60e:	df 4f       	sbci	r29, 0xFF	; 255
 610:	48 83       	st	Y, r20
 612:	59 83       	std	Y+1, r21	; 0x01
 614:	6a 83       	std	Y+2, r22	; 0x02
 616:	c9 59       	subi	r28, 0x99	; 153
 618:	d0 40       	sbci	r29, 0x00	; 0
 61a:	21 2c       	mov	r2, r1
 61c:	31 2c       	mov	r3, r1
 61e:	6e 01       	movw	r12, r28
 620:	2b e8       	ldi	r18, 0x8B	; 139
 622:	c2 0e       	add	r12, r18
 624:	d1 1c       	adc	r13, r1
 626:	85 e2       	ldi	r24, 0x25	; 37
 628:	78 2e       	mov	r7, r24
 62a:	26 01       	movw	r4, r12
 62c:	30 e8       	ldi	r19, 0x80	; 128
 62e:	63 2e       	mov	r6, r19
 630:	ce 01       	movw	r24, r28
 632:	8d 56       	subi	r24, 0x6D	; 109
 634:	9f 4f       	sbci	r25, 0xFF	; 255
 636:	c4 56       	subi	r28, 0x64	; 100
 638:	df 4f       	sbci	r29, 0xFF	; 255
 63a:	99 83       	std	Y+1, r25	; 0x01
 63c:	88 83       	st	Y, r24
 63e:	cc 59       	subi	r28, 0x9C	; 156
 640:	d0 40       	sbci	r29, 0x00	; 0
 642:	9c 01       	movw	r18, r24
 644:	40 e8       	ldi	r20, 0x80	; 128
 646:	cf 55       	subi	r28, 0x5F	; 95
 648:	df 4f       	sbci	r29, 0xFF	; 255
 64a:	28 83       	st	Y, r18
 64c:	39 83       	std	Y+1, r19	; 0x01
 64e:	4a 83       	std	Y+2, r20	; 0x02
 650:	c1 5a       	subi	r28, 0xA1	; 161
 652:	d0 40       	sbci	r29, 0x00	; 0
 654:	c7 56       	subi	r28, 0x67	; 103
 656:	df 4f       	sbci	r29, 0xFF	; 255
 658:	48 81       	ld	r20, Y
 65a:	c9 59       	subi	r28, 0x99	; 153
 65c:	d0 40       	sbci	r29, 0x00	; 0
 65e:	c6 56       	subi	r28, 0x66	; 102
 660:	df 4f       	sbci	r29, 0xFF	; 255
 662:	b8 81       	ld	r27, Y
 664:	ca 59       	subi	r28, 0x9A	; 154
 666:	d0 40       	sbci	r29, 0x00	; 0
 668:	c5 56       	subi	r28, 0x65	; 101
 66a:	df 4f       	sbci	r29, 0xFF	; 255
 66c:	78 81       	ld	r23, Y
 66e:	cb 59       	subi	r28, 0x9B	; 155
 670:	d0 40       	sbci	r29, 0x00	; 0
 672:	e4 2f       	mov	r30, r20
 674:	fb 2f       	mov	r31, r27
 676:	57 2f       	mov	r21, r23
 678:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
 67c:	66 23       	and	r22, r22
 67e:	09 f4       	brne	.+2      	; 0x682 <__printf_core+0x86>
 680:	d0 c3       	rjmp	.+1952   	; 0xe22 <__printf_core+0x826>
 682:	cf 57       	subi	r28, 0x7F	; 127
 684:	df 4f       	sbci	r29, 0xFF	; 255
 686:	19 82       	std	Y+1, r1	; 0x01
 688:	18 82       	st	Y, r1
 68a:	c1 58       	subi	r28, 0x81	; 129
 68c:	d0 40       	sbci	r29, 0x00	; 0
 68e:	8f ef       	ldi	r24, 0xFF	; 255
 690:	9f ef       	ldi	r25, 0xFF	; 255
 692:	cd 57       	subi	r28, 0x7D	; 125
 694:	df 4f       	sbci	r29, 0xFF	; 255
 696:	99 83       	std	Y+1, r25	; 0x01
 698:	88 83       	st	Y, r24
 69a:	c3 58       	subi	r28, 0x83	; 131
 69c:	d0 40       	sbci	r29, 0x00	; 0
 69e:	cb 57       	subi	r28, 0x7B	; 123
 6a0:	df 4f       	sbci	r29, 0xFF	; 255
 6a2:	19 82       	std	Y+1, r1	; 0x01
 6a4:	18 82       	st	Y, r1
 6a6:	c5 58       	subi	r28, 0x85	; 133
 6a8:	d0 40       	sbci	r29, 0x00	; 0
 6aa:	e1 e0       	ldi	r30, 0x01	; 1
 6ac:	f0 e0       	ldi	r31, 0x00	; 0
 6ae:	ec 0f       	add	r30, r28
 6b0:	fd 1f       	adc	r31, r29
 6b2:	c9 57       	subi	r28, 0x79	; 121
 6b4:	df 4f       	sbci	r29, 0xFF	; 255
 6b6:	f9 83       	std	Y+1, r31	; 0x01
 6b8:	e8 83       	st	Y, r30
 6ba:	c7 58       	subi	r28, 0x87	; 135
 6bc:	d0 40       	sbci	r29, 0x00	; 0
 6be:	20 e8       	ldi	r18, 0x80	; 128
 6c0:	30 e0       	ldi	r19, 0x00	; 0
 6c2:	c7 57       	subi	r28, 0x77	; 119
 6c4:	df 4f       	sbci	r29, 0xFF	; 255
 6c6:	39 83       	std	Y+1, r19	; 0x01
 6c8:	28 83       	st	Y, r18
 6ca:	c9 58       	subi	r28, 0x89	; 137
 6cc:	d0 40       	sbci	r29, 0x00	; 0
 6ce:	84 2f       	mov	r24, r20
 6d0:	9b 2f       	mov	r25, r27
 6d2:	a7 2f       	mov	r26, r23
 6d4:	e1 2c       	mov	r14, r1
 6d6:	f1 2c       	mov	r15, r1
 6d8:	fc 01       	movw	r30, r24
 6da:	5a 2f       	mov	r21, r26
 6dc:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
 6e0:	61 11       	cpse	r22, r1
 6e2:	1d c0       	rjmp	.+58     	; 0x71e <__printf_core+0x122>
 6e4:	e1 14       	cp	r14, r1
 6e6:	f1 04       	cpc	r15, r1
 6e8:	11 f1       	breq	.+68     	; 0x72e <__printf_core+0x132>
 6ea:	97 01       	movw	r18, r14
 6ec:	5b 2f       	mov	r21, r27
 6ee:	67 2f       	mov	r22, r23
 6f0:	c4 01       	movw	r24, r8
 6f2:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <__out>
 6f6:	c7 56       	subi	r28, 0x67	; 103
 6f8:	df 4f       	sbci	r29, 0xFF	; 255
 6fa:	88 81       	ld	r24, Y
 6fc:	99 81       	ldd	r25, Y+1	; 0x01
 6fe:	aa 81       	ldd	r26, Y+2	; 0x02
 700:	c9 59       	subi	r28, 0x99	; 153
 702:	d0 40       	sbci	r29, 0x00	; 0
 704:	8e 0d       	add	r24, r14
 706:	9f 1d       	adc	r25, r15
 708:	a1 1d       	adc	r26, r1
 70a:	f7 fc       	sbrc	r15, 7
 70c:	aa 95       	dec	r26
 70e:	c7 56       	subi	r28, 0x67	; 103
 710:	df 4f       	sbci	r29, 0xFF	; 255
 712:	88 83       	st	Y, r24
 714:	99 83       	std	Y+1, r25	; 0x01
 716:	aa 83       	std	Y+2, r26	; 0x02
 718:	c9 59       	subi	r28, 0x99	; 153
 71a:	d0 40       	sbci	r29, 0x00	; 0
 71c:	08 c0       	rjmp	.+16     	; 0x72e <__printf_core+0x132>
 71e:	01 96       	adiw	r24, 0x01	; 1
 720:	a1 1d       	adc	r26, r1
 722:	65 32       	cpi	r22, 0x25	; 37
 724:	f9 f2       	breq	.-66     	; 0x6e4 <__printf_core+0xe8>
 726:	3f ef       	ldi	r19, 0xFF	; 255
 728:	e3 1a       	sub	r14, r19
 72a:	f3 0a       	sbc	r15, r19
 72c:	d5 cf       	rjmp	.-86     	; 0x6d8 <__printf_core+0xdc>
 72e:	c7 56       	subi	r28, 0x67	; 103
 730:	df 4f       	sbci	r29, 0xFF	; 255
 732:	88 81       	ld	r24, Y
 734:	99 81       	ldd	r25, Y+1	; 0x01
 736:	aa 81       	ldd	r26, Y+2	; 0x02
 738:	c9 59       	subi	r28, 0x99	; 153
 73a:	d0 40       	sbci	r29, 0x00	; 0
 73c:	fc 01       	movw	r30, r24
 73e:	5a 2f       	mov	r21, r26
 740:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
 744:	65 32       	cpi	r22, 0x25	; 37
 746:	09 f0       	breq	.+2      	; 0x74a <__printf_core+0x14e>
 748:	5a c3       	rjmp	.+1716   	; 0xdfe <__printf_core+0x802>
 74a:	9c 01       	movw	r18, r24
 74c:	4a 2f       	mov	r20, r26
 74e:	2f 5f       	subi	r18, 0xFF	; 255
 750:	3f 4f       	sbci	r19, 0xFF	; 255
 752:	4f 4f       	sbci	r20, 0xFF	; 255
 754:	c2 56       	subi	r28, 0x62	; 98
 756:	df 4f       	sbci	r29, 0xFF	; 255
 758:	28 83       	st	Y, r18
 75a:	39 83       	std	Y+1, r19	; 0x01
 75c:	4a 83       	std	Y+2, r20	; 0x02
 75e:	ce 59       	subi	r28, 0x9E	; 158
 760:	d0 40       	sbci	r29, 0x00	; 0
 762:	c7 56       	subi	r28, 0x67	; 103
 764:	df 4f       	sbci	r29, 0xFF	; 255
 766:	28 83       	st	Y, r18
 768:	39 83       	std	Y+1, r19	; 0x01
 76a:	4a 83       	std	Y+2, r20	; 0x02
 76c:	c9 59       	subi	r28, 0x99	; 153
 76e:	d0 40       	sbci	r29, 0x00	; 0
 770:	c7 56       	subi	r28, 0x67	; 103
 772:	df 4f       	sbci	r29, 0xFF	; 255
 774:	88 81       	ld	r24, Y
 776:	99 81       	ldd	r25, Y+1	; 0x01
 778:	aa 81       	ldd	r26, Y+2	; 0x02
 77a:	c9 59       	subi	r28, 0x99	; 153
 77c:	d0 40       	sbci	r29, 0x00	; 0
 77e:	fc 01       	movw	r30, r24
 780:	5a 2f       	mov	r21, r26
 782:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
 786:	6b 32       	cpi	r22, 0x2B	; 43
 788:	41 f4       	brne	.+16     	; 0x79a <__printf_core+0x19e>
 78a:	cf 57       	subi	r28, 0x7F	; 127
 78c:	df 4f       	sbci	r29, 0xFF	; 255
 78e:	28 81       	ld	r18, Y
 790:	39 81       	ldd	r19, Y+1	; 0x01
 792:	c1 58       	subi	r28, 0x81	; 129
 794:	d0 40       	sbci	r29, 0x00	; 0
 796:	24 60       	ori	r18, 0x04	; 4
 798:	0b c0       	rjmp	.+22     	; 0x7b0 <__printf_core+0x1b4>
 79a:	6c 32       	cpi	r22, 0x2C	; 44
 79c:	cc f0       	brlt	.+50     	; 0x7d0 <__printf_core+0x1d4>
 79e:	6d 32       	cpi	r22, 0x2D	; 45
 7a0:	59 f5       	brne	.+86     	; 0x7f8 <__printf_core+0x1fc>
 7a2:	cf 57       	subi	r28, 0x7F	; 127
 7a4:	df 4f       	sbci	r29, 0xFF	; 255
 7a6:	28 81       	ld	r18, Y
 7a8:	39 81       	ldd	r19, Y+1	; 0x01
 7aa:	c1 58       	subi	r28, 0x81	; 129
 7ac:	d0 40       	sbci	r29, 0x00	; 0
 7ae:	21 60       	ori	r18, 0x01	; 1
 7b0:	cf 57       	subi	r28, 0x7F	; 127
 7b2:	df 4f       	sbci	r29, 0xFF	; 255
 7b4:	39 83       	std	Y+1, r19	; 0x01
 7b6:	28 83       	st	Y, r18
 7b8:	c1 58       	subi	r28, 0x81	; 129
 7ba:	d0 40       	sbci	r29, 0x00	; 0
 7bc:	01 96       	adiw	r24, 0x01	; 1
 7be:	a1 1d       	adc	r26, r1
 7c0:	c7 56       	subi	r28, 0x67	; 103
 7c2:	df 4f       	sbci	r29, 0xFF	; 255
 7c4:	88 83       	st	Y, r24
 7c6:	99 83       	std	Y+1, r25	; 0x01
 7c8:	aa 83       	std	Y+2, r26	; 0x02
 7ca:	c9 59       	subi	r28, 0x99	; 153
 7cc:	d0 40       	sbci	r29, 0x00	; 0
 7ce:	d0 cf       	rjmp	.-96     	; 0x770 <__printf_core+0x174>
 7d0:	60 32       	cpi	r22, 0x20	; 32
 7d2:	41 f4       	brne	.+16     	; 0x7e4 <__printf_core+0x1e8>
 7d4:	cf 57       	subi	r28, 0x7F	; 127
 7d6:	df 4f       	sbci	r29, 0xFF	; 255
 7d8:	28 81       	ld	r18, Y
 7da:	39 81       	ldd	r19, Y+1	; 0x01
 7dc:	c1 58       	subi	r28, 0x81	; 129
 7de:	d0 40       	sbci	r29, 0x00	; 0
 7e0:	28 60       	ori	r18, 0x08	; 8
 7e2:	e6 cf       	rjmp	.-52     	; 0x7b0 <__printf_core+0x1b4>
 7e4:	63 32       	cpi	r22, 0x23	; 35
 7e6:	91 f4       	brne	.+36     	; 0x80c <__printf_core+0x210>
 7e8:	cf 57       	subi	r28, 0x7F	; 127
 7ea:	df 4f       	sbci	r29, 0xFF	; 255
 7ec:	28 81       	ld	r18, Y
 7ee:	39 81       	ldd	r19, Y+1	; 0x01
 7f0:	c1 58       	subi	r28, 0x81	; 129
 7f2:	d0 40       	sbci	r29, 0x00	; 0
 7f4:	20 61       	ori	r18, 0x10	; 16
 7f6:	dc cf       	rjmp	.-72     	; 0x7b0 <__printf_core+0x1b4>
 7f8:	60 33       	cpi	r22, 0x30	; 48
 7fa:	41 f4       	brne	.+16     	; 0x80c <__printf_core+0x210>
 7fc:	cf 57       	subi	r28, 0x7F	; 127
 7fe:	df 4f       	sbci	r29, 0xFF	; 255
 800:	28 81       	ld	r18, Y
 802:	39 81       	ldd	r19, Y+1	; 0x01
 804:	c1 58       	subi	r28, 0x81	; 129
 806:	d0 40       	sbci	r29, 0x00	; 0
 808:	22 60       	ori	r18, 0x02	; 2
 80a:	d2 cf       	rjmp	.-92     	; 0x7b0 <__printf_core+0x1b4>
 80c:	6a 32       	cpi	r22, 0x2A	; 42
 80e:	99 f5       	brne	.+102    	; 0x876 <__printf_core+0x27a>
 810:	01 96       	adiw	r24, 0x01	; 1
 812:	a1 1d       	adc	r26, r1
 814:	c7 56       	subi	r28, 0x67	; 103
 816:	df 4f       	sbci	r29, 0xFF	; 255
 818:	88 83       	st	Y, r24
 81a:	99 83       	std	Y+1, r25	; 0x01
 81c:	aa 83       	std	Y+2, r26	; 0x02
 81e:	c9 59       	subi	r28, 0x99	; 153
 820:	d0 40       	sbci	r29, 0x00	; 0
 822:	d5 01       	movw	r26, r10
 824:	ed 91       	ld	r30, X+
 826:	fc 91       	ld	r31, X
 828:	11 97       	sbiw	r26, 0x01	; 1
 82a:	cf 01       	movw	r24, r30
 82c:	02 96       	adiw	r24, 0x02	; 2
 82e:	8d 93       	st	X+, r24
 830:	9c 93       	st	X, r25
 832:	80 81       	ld	r24, Z
 834:	91 81       	ldd	r25, Z+1	; 0x01
 836:	cb 57       	subi	r28, 0x7B	; 123
 838:	df 4f       	sbci	r29, 0xFF	; 255
 83a:	99 83       	std	Y+1, r25	; 0x01
 83c:	88 83       	st	Y, r24
 83e:	c5 58       	subi	r28, 0x85	; 133
 840:	d0 40       	sbci	r29, 0x00	; 0
 842:	97 ff       	sbrs	r25, 7
 844:	3f c0       	rjmp	.+126    	; 0x8c4 <__printf_core+0x2c8>
 846:	cf 57       	subi	r28, 0x7F	; 127
 848:	df 4f       	sbci	r29, 0xFF	; 255
 84a:	28 81       	ld	r18, Y
 84c:	39 81       	ldd	r19, Y+1	; 0x01
 84e:	c1 58       	subi	r28, 0x81	; 129
 850:	d0 40       	sbci	r29, 0x00	; 0
 852:	b1 e0       	ldi	r27, 0x01	; 1
 854:	2b 27       	eor	r18, r27
 856:	cf 57       	subi	r28, 0x7F	; 127
 858:	df 4f       	sbci	r29, 0xFF	; 255
 85a:	39 83       	std	Y+1, r19	; 0x01
 85c:	28 83       	st	Y, r18
 85e:	c1 58       	subi	r28, 0x81	; 129
 860:	d0 40       	sbci	r29, 0x00	; 0
 862:	91 95       	neg	r25
 864:	81 95       	neg	r24
 866:	91 09       	sbc	r25, r1
 868:	cb 57       	subi	r28, 0x7B	; 123
 86a:	df 4f       	sbci	r29, 0xFF	; 255
 86c:	99 83       	std	Y+1, r25	; 0x01
 86e:	88 83       	st	Y, r24
 870:	c5 58       	subi	r28, 0x85	; 133
 872:	d0 40       	sbci	r29, 0x00	; 0
 874:	27 c0       	rjmp	.+78     	; 0x8c4 <__printf_core+0x2c8>
 876:	bc 01       	movw	r22, r24
 878:	8a 2f       	mov	r24, r26
 87a:	0e 94 82 1c 	call	0x3904	; 0x3904 <atoi>
 87e:	cb 57       	subi	r28, 0x7B	; 123
 880:	df 4f       	sbci	r29, 0xFF	; 255
 882:	99 83       	std	Y+1, r25	; 0x01
 884:	88 83       	st	Y, r24
 886:	c5 58       	subi	r28, 0x85	; 133
 888:	d0 40       	sbci	r29, 0x00	; 0
 88a:	c7 56       	subi	r28, 0x67	; 103
 88c:	df 4f       	sbci	r29, 0xFF	; 255
 88e:	88 81       	ld	r24, Y
 890:	99 81       	ldd	r25, Y+1	; 0x01
 892:	aa 81       	ldd	r26, Y+2	; 0x02
 894:	c9 59       	subi	r28, 0x99	; 153
 896:	d0 40       	sbci	r29, 0x00	; 0
 898:	fc 01       	movw	r30, r24
 89a:	5a 2f       	mov	r21, r26
 89c:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
 8a0:	06 2e       	mov	r0, r22
 8a2:	00 0c       	add	r0, r0
 8a4:	77 0b       	sbc	r23, r23
 8a6:	60 53       	subi	r22, 0x30	; 48
 8a8:	71 09       	sbc	r23, r1
 8aa:	6a 30       	cpi	r22, 0x0A	; 10
 8ac:	71 05       	cpc	r23, r1
 8ae:	50 f4       	brcc	.+20     	; 0x8c4 <__printf_core+0x2c8>
 8b0:	01 96       	adiw	r24, 0x01	; 1
 8b2:	a1 1d       	adc	r26, r1
 8b4:	c7 56       	subi	r28, 0x67	; 103
 8b6:	df 4f       	sbci	r29, 0xFF	; 255
 8b8:	88 83       	st	Y, r24
 8ba:	99 83       	std	Y+1, r25	; 0x01
 8bc:	aa 83       	std	Y+2, r26	; 0x02
 8be:	c9 59       	subi	r28, 0x99	; 153
 8c0:	d0 40       	sbci	r29, 0x00	; 0
 8c2:	e3 cf       	rjmp	.-58     	; 0x88a <__printf_core+0x28e>
 8c4:	cf 57       	subi	r28, 0x7F	; 127
 8c6:	df 4f       	sbci	r29, 0xFF	; 255
 8c8:	88 81       	ld	r24, Y
 8ca:	99 81       	ldd	r25, Y+1	; 0x01
 8cc:	c1 58       	subi	r28, 0x81	; 129
 8ce:	d0 40       	sbci	r29, 0x00	; 0
 8d0:	80 ff       	sbrs	r24, 0
 8d2:	07 c0       	rjmp	.+14     	; 0x8e2 <__printf_core+0x2e6>
 8d4:	8d 7f       	andi	r24, 0xFD	; 253
 8d6:	cf 57       	subi	r28, 0x7F	; 127
 8d8:	df 4f       	sbci	r29, 0xFF	; 255
 8da:	99 83       	std	Y+1, r25	; 0x01
 8dc:	88 83       	st	Y, r24
 8de:	c1 58       	subi	r28, 0x81	; 129
 8e0:	d0 40       	sbci	r29, 0x00	; 0
 8e2:	c7 56       	subi	r28, 0x67	; 103
 8e4:	df 4f       	sbci	r29, 0xFF	; 255
 8e6:	88 81       	ld	r24, Y
 8e8:	99 81       	ldd	r25, Y+1	; 0x01
 8ea:	aa 81       	ldd	r26, Y+2	; 0x02
 8ec:	c9 59       	subi	r28, 0x99	; 153
 8ee:	d0 40       	sbci	r29, 0x00	; 0
 8f0:	fc 01       	movw	r30, r24
 8f2:	5a 2f       	mov	r21, r26
 8f4:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
 8f8:	6e 32       	cpi	r22, 0x2E	; 46
 8fa:	09 f0       	breq	.+2      	; 0x8fe <__printf_core+0x302>
 8fc:	59 c0       	rjmp	.+178    	; 0x9b0 <__printf_core+0x3b4>
 8fe:	cd 57       	subi	r28, 0x7D	; 125
 900:	df 4f       	sbci	r29, 0xFF	; 255
 902:	19 82       	std	Y+1, r1	; 0x01
 904:	18 82       	st	Y, r1
 906:	c3 58       	subi	r28, 0x83	; 131
 908:	d0 40       	sbci	r29, 0x00	; 0
 90a:	9c 01       	movw	r18, r24
 90c:	4a 2f       	mov	r20, r26
 90e:	2f 5f       	subi	r18, 0xFF	; 255
 910:	3f 4f       	sbci	r19, 0xFF	; 255
 912:	4f 4f       	sbci	r20, 0xFF	; 255
 914:	c7 56       	subi	r28, 0x67	; 103
 916:	df 4f       	sbci	r29, 0xFF	; 255
 918:	28 83       	st	Y, r18
 91a:	39 83       	std	Y+1, r19	; 0x01
 91c:	4a 83       	std	Y+2, r20	; 0x02
 91e:	c9 59       	subi	r28, 0x99	; 153
 920:	d0 40       	sbci	r29, 0x00	; 0
 922:	f9 01       	movw	r30, r18
 924:	54 2f       	mov	r21, r20
 926:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
 92a:	6a 32       	cpi	r22, 0x2A	; 42
 92c:	d1 f4       	brne	.+52     	; 0x962 <__printf_core+0x366>
 92e:	02 96       	adiw	r24, 0x02	; 2
 930:	a1 1d       	adc	r26, r1
 932:	c7 56       	subi	r28, 0x67	; 103
 934:	df 4f       	sbci	r29, 0xFF	; 255
 936:	88 83       	st	Y, r24
 938:	99 83       	std	Y+1, r25	; 0x01
 93a:	aa 83       	std	Y+2, r26	; 0x02
 93c:	c9 59       	subi	r28, 0x99	; 153
 93e:	d0 40       	sbci	r29, 0x00	; 0
 940:	d5 01       	movw	r26, r10
 942:	ed 91       	ld	r30, X+
 944:	fc 91       	ld	r31, X
 946:	11 97       	sbiw	r26, 0x01	; 1
 948:	cf 01       	movw	r24, r30
 94a:	02 96       	adiw	r24, 0x02	; 2
 94c:	8d 93       	st	X+, r24
 94e:	9c 93       	st	X, r25
 950:	80 81       	ld	r24, Z
 952:	91 81       	ldd	r25, Z+1	; 0x01
 954:	cd 57       	subi	r28, 0x7D	; 125
 956:	df 4f       	sbci	r29, 0xFF	; 255
 958:	99 83       	std	Y+1, r25	; 0x01
 95a:	88 83       	st	Y, r24
 95c:	c3 58       	subi	r28, 0x83	; 131
 95e:	d0 40       	sbci	r29, 0x00	; 0
 960:	27 c0       	rjmp	.+78     	; 0x9b0 <__printf_core+0x3b4>
 962:	84 2f       	mov	r24, r20
 964:	b9 01       	movw	r22, r18
 966:	0e 94 82 1c 	call	0x3904	; 0x3904 <atoi>
 96a:	cd 57       	subi	r28, 0x7D	; 125
 96c:	df 4f       	sbci	r29, 0xFF	; 255
 96e:	99 83       	std	Y+1, r25	; 0x01
 970:	88 83       	st	Y, r24
 972:	c3 58       	subi	r28, 0x83	; 131
 974:	d0 40       	sbci	r29, 0x00	; 0
 976:	c7 56       	subi	r28, 0x67	; 103
 978:	df 4f       	sbci	r29, 0xFF	; 255
 97a:	88 81       	ld	r24, Y
 97c:	99 81       	ldd	r25, Y+1	; 0x01
 97e:	aa 81       	ldd	r26, Y+2	; 0x02
 980:	c9 59       	subi	r28, 0x99	; 153
 982:	d0 40       	sbci	r29, 0x00	; 0
 984:	fc 01       	movw	r30, r24
 986:	5a 2f       	mov	r21, r26
 988:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
 98c:	06 2e       	mov	r0, r22
 98e:	00 0c       	add	r0, r0
 990:	77 0b       	sbc	r23, r23
 992:	60 53       	subi	r22, 0x30	; 48
 994:	71 09       	sbc	r23, r1
 996:	6a 30       	cpi	r22, 0x0A	; 10
 998:	71 05       	cpc	r23, r1
 99a:	50 f4       	brcc	.+20     	; 0x9b0 <__printf_core+0x3b4>
 99c:	01 96       	adiw	r24, 0x01	; 1
 99e:	a1 1d       	adc	r26, r1
 9a0:	c7 56       	subi	r28, 0x67	; 103
 9a2:	df 4f       	sbci	r29, 0xFF	; 255
 9a4:	88 83       	st	Y, r24
 9a6:	99 83       	std	Y+1, r25	; 0x01
 9a8:	aa 83       	std	Y+2, r26	; 0x02
 9aa:	c9 59       	subi	r28, 0x99	; 153
 9ac:	d0 40       	sbci	r29, 0x00	; 0
 9ae:	e3 cf       	rjmp	.-58     	; 0x976 <__printf_core+0x37a>
 9b0:	ce 01       	movw	r24, r28
 9b2:	87 56       	subi	r24, 0x67	; 103
 9b4:	9f 4f       	sbci	r25, 0xFF	; 255
 9b6:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <__fmt_state>
 9ba:	18 2f       	mov	r17, r24
 9bc:	c7 56       	subi	r28, 0x67	; 103
 9be:	df 4f       	sbci	r29, 0xFF	; 255
 9c0:	98 81       	ld	r25, Y
 9c2:	c9 59       	subi	r28, 0x99	; 153
 9c4:	d0 40       	sbci	r29, 0x00	; 0
 9c6:	c6 56       	subi	r28, 0x66	; 102
 9c8:	df 4f       	sbci	r29, 0xFF	; 255
 9ca:	88 81       	ld	r24, Y
 9cc:	ca 59       	subi	r28, 0x9A	; 154
 9ce:	d0 40       	sbci	r29, 0x00	; 0
 9d0:	c5 56       	subi	r28, 0x65	; 101
 9d2:	df 4f       	sbci	r29, 0xFF	; 255
 9d4:	58 81       	ld	r21, Y
 9d6:	cb 59       	subi	r28, 0x9B	; 155
 9d8:	d0 40       	sbci	r29, 0x00	; 0
 9da:	e9 2f       	mov	r30, r25
 9dc:	f8 2f       	mov	r31, r24
 9de:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
 9e2:	86 2f       	mov	r24, r22
 9e4:	66 0f       	add	r22, r22
 9e6:	99 0b       	sbc	r25, r25
 9e8:	0e 94 de 21 	call	0x43bc	; 0x43bc <tolower>
 9ec:	89 36       	cpi	r24, 0x69	; 105
 9ee:	91 05       	cpc	r25, r1
 9f0:	09 f4       	brne	.+2      	; 0x9f4 <__printf_core+0x3f8>
 9f2:	5b c0       	rjmp	.+182    	; 0xaaa <__printf_core+0x4ae>
 9f4:	b4 f4       	brge	.+44     	; 0xa22 <__printf_core+0x426>
 9f6:	83 36       	cpi	r24, 0x63	; 99
 9f8:	91 05       	cpc	r25, r1
 9fa:	09 f4       	brne	.+2      	; 0x9fe <__printf_core+0x402>
 9fc:	69 c1       	rjmp	.+722    	; 0xcd0 <__printf_core+0x6d4>
 9fe:	44 f4       	brge	.+16     	; 0xa10 <__printf_core+0x414>
 a00:	85 32       	cpi	r24, 0x25	; 37
 a02:	91 05       	cpc	r25, r1
 a04:	09 f4       	brne	.+2      	; 0xa08 <__printf_core+0x40c>
 a06:	a4 c1       	rjmp	.+840    	; 0xd50 <__printf_core+0x754>
 a08:	81 36       	cpi	r24, 0x61	; 97
 a0a:	91 05       	cpc	r25, r1
 a0c:	29 f1       	breq	.+74     	; 0xa58 <__printf_core+0x45c>
 a0e:	b6 c1       	rjmp	.+876    	; 0xd7c <__printf_core+0x780>
 a10:	84 36       	cpi	r24, 0x64	; 100
 a12:	91 05       	cpc	r25, r1
 a14:	09 f4       	brne	.+2      	; 0xa18 <__printf_core+0x41c>
 a16:	49 c0       	rjmp	.+146    	; 0xaaa <__printf_core+0x4ae>
 a18:	88 36       	cpi	r24, 0x68	; 104
 a1a:	91 05       	cpc	r25, r1
 a1c:	0c f4       	brge	.+2      	; 0xa20 <__printf_core+0x424>
 a1e:	2f c1       	rjmp	.+606    	; 0xc7e <__printf_core+0x682>
 a20:	ad c1       	rjmp	.+858    	; 0xd7c <__printf_core+0x780>
 a22:	80 37       	cpi	r24, 0x70	; 112
 a24:	91 05       	cpc	r25, r1
 a26:	09 f4       	brne	.+2      	; 0xa2a <__printf_core+0x42e>
 a28:	cd c0       	rjmp	.+410    	; 0xbc4 <__printf_core+0x5c8>
 a2a:	4c f4       	brge	.+18     	; 0xa3e <__printf_core+0x442>
 a2c:	8e 36       	cpi	r24, 0x6E	; 110
 a2e:	91 05       	cpc	r25, r1
 a30:	09 f4       	brne	.+2      	; 0xa34 <__printf_core+0x438>
 a32:	1b c1       	rjmp	.+566    	; 0xc6a <__printf_core+0x66e>
 a34:	8f 36       	cpi	r24, 0x6F	; 111
 a36:	91 05       	cpc	r25, r1
 a38:	09 f4       	brne	.+2      	; 0xa3c <__printf_core+0x440>
 a3a:	7d c0       	rjmp	.+250    	; 0xb36 <__printf_core+0x53a>
 a3c:	9f c1       	rjmp	.+830    	; 0xd7c <__printf_core+0x780>
 a3e:	85 37       	cpi	r24, 0x75	; 117
 a40:	91 05       	cpc	r25, r1
 a42:	09 f4       	brne	.+2      	; 0xa46 <__printf_core+0x44a>
 a44:	55 c0       	rjmp	.+170    	; 0xaf0 <__printf_core+0x4f4>
 a46:	88 37       	cpi	r24, 0x78	; 120
 a48:	91 05       	cpc	r25, r1
 a4a:	09 f4       	brne	.+2      	; 0xa4e <__printf_core+0x452>
 a4c:	97 c0       	rjmp	.+302    	; 0xb7c <__printf_core+0x580>
 a4e:	83 37       	cpi	r24, 0x73	; 115
 a50:	91 05       	cpc	r25, r1
 a52:	09 f0       	breq	.+2      	; 0xa56 <__printf_core+0x45a>
 a54:	93 c1       	rjmp	.+806    	; 0xd7c <__printf_core+0x780>
 a56:	5b c1       	rjmp	.+694    	; 0xd0e <__printf_core+0x712>
 a58:	61 2f       	mov	r22, r17
 a5a:	70 e0       	ldi	r23, 0x00	; 0
 a5c:	a5 01       	movw	r20, r10
 a5e:	c6 01       	movw	r24, r12
 a60:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__pop_float>
 a64:	89 2b       	or	r24, r25
 a66:	09 f4       	brne	.+2      	; 0xa6a <__printf_core+0x46e>
 a68:	ba c1       	rjmp	.+884    	; 0xdde <__printf_core+0x7e2>
 a6a:	c7 56       	subi	r28, 0x67	; 103
 a6c:	df 4f       	sbci	r29, 0xFF	; 255
 a6e:	88 81       	ld	r24, Y
 a70:	99 81       	ldd	r25, Y+1	; 0x01
 a72:	aa 81       	ldd	r26, Y+2	; 0x02
 a74:	c9 59       	subi	r28, 0x99	; 153
 a76:	d0 40       	sbci	r29, 0x00	; 0
 a78:	9c 01       	movw	r18, r24
 a7a:	4a 2f       	mov	r20, r26
 a7c:	2f 5f       	subi	r18, 0xFF	; 255
 a7e:	3f 4f       	sbci	r19, 0xFF	; 255
 a80:	4f 4f       	sbci	r20, 0xFF	; 255
 a82:	c7 56       	subi	r28, 0x67	; 103
 a84:	df 4f       	sbci	r29, 0xFF	; 255
 a86:	28 83       	st	Y, r18
 a88:	39 83       	std	Y+1, r19	; 0x01
 a8a:	4a 83       	std	Y+2, r20	; 0x02
 a8c:	c9 59       	subi	r28, 0x99	; 153
 a8e:	d0 40       	sbci	r29, 0x00	; 0
 a90:	fc 01       	movw	r30, r24
 a92:	5a 2f       	mov	r21, r26
 a94:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
 a98:	26 2f       	mov	r18, r22
 a9a:	a6 01       	movw	r20, r12
 a9c:	be 01       	movw	r22, r28
 a9e:	6f 57       	subi	r22, 0x7F	; 127
 aa0:	7f 4f       	sbci	r23, 0xFF	; 255
 aa2:	c4 01       	movw	r24, r8
 aa4:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__fmt_a>
 aa8:	97 c1       	rjmp	.+814    	; 0xdd8 <__printf_core+0x7dc>
 aaa:	61 2f       	mov	r22, r17
 aac:	70 e0       	ldi	r23, 0x00	; 0
 aae:	95 01       	movw	r18, r10
 ab0:	41 e0       	ldi	r20, 0x01	; 1
 ab2:	50 e0       	ldi	r21, 0x00	; 0
 ab4:	c6 01       	movw	r24, r12
 ab6:	0e 94 4e 11 	call	0x229c	; 0x229c <__pop_int>
 aba:	89 2b       	or	r24, r25
 abc:	09 f4       	brne	.+2      	; 0xac0 <__printf_core+0x4c4>
 abe:	8f c1       	rjmp	.+798    	; 0xdde <__printf_core+0x7e2>
 ac0:	c7 56       	subi	r28, 0x67	; 103
 ac2:	df 4f       	sbci	r29, 0xFF	; 255
 ac4:	88 81       	ld	r24, Y
 ac6:	99 81       	ldd	r25, Y+1	; 0x01
 ac8:	aa 81       	ldd	r26, Y+2	; 0x02
 aca:	c9 59       	subi	r28, 0x99	; 153
 acc:	d0 40       	sbci	r29, 0x00	; 0
 ace:	01 96       	adiw	r24, 0x01	; 1
 ad0:	a1 1d       	adc	r26, r1
 ad2:	c7 56       	subi	r28, 0x67	; 103
 ad4:	df 4f       	sbci	r29, 0xFF	; 255
 ad6:	88 83       	st	Y, r24
 ad8:	99 83       	std	Y+1, r25	; 0x01
 ada:	aa 83       	std	Y+2, r26	; 0x02
 adc:	c9 59       	subi	r28, 0x99	; 153
 ade:	d0 40       	sbci	r29, 0x00	; 0
 ae0:	a6 01       	movw	r20, r12
 ae2:	be 01       	movw	r22, r28
 ae4:	6f 57       	subi	r22, 0x7F	; 127
 ae6:	7f 4f       	sbci	r23, 0xFF	; 255
 ae8:	c4 01       	movw	r24, r8
 aea:	0e 94 8f 10 	call	0x211e	; 0x211e <__fmt_d>
 aee:	74 c1       	rjmp	.+744    	; 0xdd8 <__printf_core+0x7dc>
 af0:	61 2f       	mov	r22, r17
 af2:	70 e0       	ldi	r23, 0x00	; 0
 af4:	95 01       	movw	r18, r10
 af6:	40 e0       	ldi	r20, 0x00	; 0
 af8:	50 e0       	ldi	r21, 0x00	; 0
 afa:	c6 01       	movw	r24, r12
 afc:	0e 94 4e 11 	call	0x229c	; 0x229c <__pop_int>
 b00:	89 2b       	or	r24, r25
 b02:	09 f4       	brne	.+2      	; 0xb06 <__printf_core+0x50a>
 b04:	6c c1       	rjmp	.+728    	; 0xdde <__printf_core+0x7e2>
 b06:	c7 56       	subi	r28, 0x67	; 103
 b08:	df 4f       	sbci	r29, 0xFF	; 255
 b0a:	88 81       	ld	r24, Y
 b0c:	99 81       	ldd	r25, Y+1	; 0x01
 b0e:	aa 81       	ldd	r26, Y+2	; 0x02
 b10:	c9 59       	subi	r28, 0x99	; 153
 b12:	d0 40       	sbci	r29, 0x00	; 0
 b14:	01 96       	adiw	r24, 0x01	; 1
 b16:	a1 1d       	adc	r26, r1
 b18:	c7 56       	subi	r28, 0x67	; 103
 b1a:	df 4f       	sbci	r29, 0xFF	; 255
 b1c:	88 83       	st	Y, r24
 b1e:	99 83       	std	Y+1, r25	; 0x01
 b20:	aa 83       	std	Y+2, r26	; 0x02
 b22:	c9 59       	subi	r28, 0x99	; 153
 b24:	d0 40       	sbci	r29, 0x00	; 0
 b26:	a6 01       	movw	r20, r12
 b28:	be 01       	movw	r22, r28
 b2a:	6f 57       	subi	r22, 0x7F	; 127
 b2c:	7f 4f       	sbci	r23, 0xFF	; 255
 b2e:	c4 01       	movw	r24, r8
 b30:	0e 94 01 19 	call	0x3202	; 0x3202 <__fmt_u>
 b34:	51 c1       	rjmp	.+674    	; 0xdd8 <__printf_core+0x7dc>
 b36:	61 2f       	mov	r22, r17
 b38:	70 e0       	ldi	r23, 0x00	; 0
 b3a:	95 01       	movw	r18, r10
 b3c:	40 e0       	ldi	r20, 0x00	; 0
 b3e:	50 e0       	ldi	r21, 0x00	; 0
 b40:	c6 01       	movw	r24, r12
 b42:	0e 94 4e 11 	call	0x229c	; 0x229c <__pop_int>
 b46:	89 2b       	or	r24, r25
 b48:	09 f4       	brne	.+2      	; 0xb4c <__printf_core+0x550>
 b4a:	49 c1       	rjmp	.+658    	; 0xdde <__printf_core+0x7e2>
 b4c:	c7 56       	subi	r28, 0x67	; 103
 b4e:	df 4f       	sbci	r29, 0xFF	; 255
 b50:	88 81       	ld	r24, Y
 b52:	99 81       	ldd	r25, Y+1	; 0x01
 b54:	aa 81       	ldd	r26, Y+2	; 0x02
 b56:	c9 59       	subi	r28, 0x99	; 153
 b58:	d0 40       	sbci	r29, 0x00	; 0
 b5a:	01 96       	adiw	r24, 0x01	; 1
 b5c:	a1 1d       	adc	r26, r1
 b5e:	c7 56       	subi	r28, 0x67	; 103
 b60:	df 4f       	sbci	r29, 0xFF	; 255
 b62:	88 83       	st	Y, r24
 b64:	99 83       	std	Y+1, r25	; 0x01
 b66:	aa 83       	std	Y+2, r26	; 0x02
 b68:	c9 59       	subi	r28, 0x99	; 153
 b6a:	d0 40       	sbci	r29, 0x00	; 0
 b6c:	a6 01       	movw	r20, r12
 b6e:	be 01       	movw	r22, r28
 b70:	6f 57       	subi	r22, 0x7F	; 127
 b72:	7f 4f       	sbci	r23, 0xFF	; 255
 b74:	c4 01       	movw	r24, r8
 b76:	0e 94 ed 15 	call	0x2bda	; 0x2bda <__fmt_o>
 b7a:	2e c1       	rjmp	.+604    	; 0xdd8 <__printf_core+0x7dc>
 b7c:	61 2f       	mov	r22, r17
 b7e:	70 e0       	ldi	r23, 0x00	; 0
 b80:	95 01       	movw	r18, r10
 b82:	40 e0       	ldi	r20, 0x00	; 0
 b84:	50 e0       	ldi	r21, 0x00	; 0
 b86:	c6 01       	movw	r24, r12
 b88:	0e 94 4e 11 	call	0x229c	; 0x229c <__pop_int>
 b8c:	89 2b       	or	r24, r25
 b8e:	09 f4       	brne	.+2      	; 0xb92 <__printf_core+0x596>
 b90:	26 c1       	rjmp	.+588    	; 0xdde <__printf_core+0x7e2>
 b92:	c7 56       	subi	r28, 0x67	; 103
 b94:	df 4f       	sbci	r29, 0xFF	; 255
 b96:	88 81       	ld	r24, Y
 b98:	99 81       	ldd	r25, Y+1	; 0x01
 b9a:	aa 81       	ldd	r26, Y+2	; 0x02
 b9c:	c9 59       	subi	r28, 0x99	; 153
 b9e:	d0 40       	sbci	r29, 0x00	; 0
 ba0:	9c 01       	movw	r18, r24
 ba2:	4a 2f       	mov	r20, r26
 ba4:	2f 5f       	subi	r18, 0xFF	; 255
 ba6:	3f 4f       	sbci	r19, 0xFF	; 255
 ba8:	4f 4f       	sbci	r20, 0xFF	; 255
 baa:	c7 56       	subi	r28, 0x67	; 103
 bac:	df 4f       	sbci	r29, 0xFF	; 255
 bae:	28 83       	st	Y, r18
 bb0:	39 83       	std	Y+1, r19	; 0x01
 bb2:	4a 83       	std	Y+2, r20	; 0x02
 bb4:	c9 59       	subi	r28, 0x99	; 153
 bb6:	d0 40       	sbci	r29, 0x00	; 0
 bb8:	fc 01       	movw	r30, r24
 bba:	5a 2f       	mov	r21, r26
 bbc:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
 bc0:	26 2f       	mov	r18, r22
 bc2:	4b c0       	rjmp	.+150    	; 0xc5a <__printf_core+0x65e>
 bc4:	95 01       	movw	r18, r10
 bc6:	40 e0       	ldi	r20, 0x00	; 0
 bc8:	50 e0       	ldi	r21, 0x00	; 0
 bca:	60 ef       	ldi	r22, 0xF0	; 240
 bcc:	70 e0       	ldi	r23, 0x00	; 0
 bce:	c6 01       	movw	r24, r12
 bd0:	0e 94 4e 11 	call	0x229c	; 0x229c <__pop_int>
 bd4:	89 2b       	or	r24, r25
 bd6:	09 f4       	brne	.+2      	; 0xbda <__printf_core+0x5de>
 bd8:	02 c1       	rjmp	.+516    	; 0xdde <__printf_core+0x7e2>
 bda:	c7 56       	subi	r28, 0x67	; 103
 bdc:	df 4f       	sbci	r29, 0xFF	; 255
 bde:	88 81       	ld	r24, Y
 be0:	99 81       	ldd	r25, Y+1	; 0x01
 be2:	aa 81       	ldd	r26, Y+2	; 0x02
 be4:	c9 59       	subi	r28, 0x99	; 153
 be6:	d0 40       	sbci	r29, 0x00	; 0
 be8:	01 96       	adiw	r24, 0x01	; 1
 bea:	a1 1d       	adc	r26, r1
 bec:	c7 56       	subi	r28, 0x67	; 103
 bee:	df 4f       	sbci	r29, 0xFF	; 255
 bf0:	88 83       	st	Y, r24
 bf2:	99 83       	std	Y+1, r25	; 0x01
 bf4:	aa 83       	std	Y+2, r26	; 0x02
 bf6:	c9 59       	subi	r28, 0x99	; 153
 bf8:	d0 40       	sbci	r29, 0x00	; 0
 bfa:	86 e0       	ldi	r24, 0x06	; 6
 bfc:	26 ef       	ldi	r18, 0xF6	; 246
 bfe:	35 e0       	ldi	r19, 0x05	; 5
 c00:	40 e0       	ldi	r20, 0x00	; 0
 c02:	f9 01       	movw	r30, r18
 c04:	de 01       	movw	r26, r28
 c06:	ad 56       	subi	r26, 0x6D	; 109
 c08:	bf 4f       	sbci	r27, 0xFF	; 255
 c0a:	74 2f       	mov	r23, r20
 c0c:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__movmemx_qi>
 c10:	d6 01       	movw	r26, r12
 c12:	2c 91       	ld	r18, X
 c14:	11 96       	adiw	r26, 0x01	; 1
 c16:	3c 91       	ld	r19, X
 c18:	11 97       	sbiw	r26, 0x01	; 1
 c1a:	12 96       	adiw	r26, 0x02	; 2
 c1c:	4c 91       	ld	r20, X
 c1e:	12 97       	sbiw	r26, 0x02	; 2
 c20:	13 96       	adiw	r26, 0x03	; 3
 c22:	5c 91       	ld	r21, X
 c24:	13 97       	sbiw	r26, 0x03	; 3
 c26:	14 96       	adiw	r26, 0x04	; 4
 c28:	6c 91       	ld	r22, X
 c2a:	14 97       	sbiw	r26, 0x04	; 4
 c2c:	15 96       	adiw	r26, 0x05	; 5
 c2e:	7c 91       	ld	r23, X
 c30:	15 97       	sbiw	r26, 0x05	; 5
 c32:	16 96       	adiw	r26, 0x06	; 6
 c34:	8c 91       	ld	r24, X
 c36:	16 97       	sbiw	r26, 0x06	; 6
 c38:	17 96       	adiw	r26, 0x07	; 7
 c3a:	9c 91       	ld	r25, X
 c3c:	a0 e0       	ldi	r26, 0x00	; 0
 c3e:	0e 94 9e 21 	call	0x433c	; 0x433c <__cmpdi2_s8>
 c42:	51 f4       	brne	.+20     	; 0xc58 <__printf_core+0x65c>
 c44:	00 e0       	ldi	r16, 0x00	; 0
 c46:	10 e0       	ldi	r17, 0x00	; 0
 c48:	cf 55       	subi	r28, 0x5F	; 95
 c4a:	df 4f       	sbci	r29, 0xFF	; 255
 c4c:	28 81       	ld	r18, Y
 c4e:	39 81       	ldd	r19, Y+1	; 0x01
 c50:	4a 81       	ldd	r20, Y+2	; 0x02
 c52:	c1 5a       	subi	r28, 0xA1	; 161
 c54:	d0 40       	sbci	r29, 0x00	; 0
 c56:	ba c0       	rjmp	.+372    	; 0xdcc <__printf_core+0x7d0>
 c58:	28 e7       	ldi	r18, 0x78	; 120
 c5a:	a6 01       	movw	r20, r12
 c5c:	be 01       	movw	r22, r28
 c5e:	6f 57       	subi	r22, 0x7F	; 127
 c60:	7f 4f       	sbci	r23, 0xFF	; 255
 c62:	c4 01       	movw	r24, r8
 c64:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <__fmt_x>
 c68:	b7 c0       	rjmp	.+366    	; 0xdd8 <__printf_core+0x7dc>
 c6a:	61 2f       	mov	r22, r17
 c6c:	70 e0       	ldi	r23, 0x00	; 0
 c6e:	95 01       	movw	r18, r10
 c70:	a1 01       	movw	r20, r2
 c72:	4e 0d       	add	r20, r14
 c74:	5f 1d       	adc	r21, r15
 c76:	c6 01       	movw	r24, r12
 c78:	0e 94 81 15 	call	0x2b02	; 0x2b02 <__pop_ptr>
 c7c:	b0 c0       	rjmp	.+352    	; 0xdde <__printf_core+0x7e2>
 c7e:	61 2f       	mov	r22, r17
 c80:	70 e0       	ldi	r23, 0x00	; 0
 c82:	a5 01       	movw	r20, r10
 c84:	c6 01       	movw	r24, r12
 c86:	0e 94 95 1f 	call	0x3f2a	; 0x3f2a <__pop_float>
 c8a:	89 2b       	or	r24, r25
 c8c:	09 f4       	brne	.+2      	; 0xc90 <__printf_core+0x694>
 c8e:	a7 c0       	rjmp	.+334    	; 0xdde <__printf_core+0x7e2>
 c90:	c7 56       	subi	r28, 0x67	; 103
 c92:	df 4f       	sbci	r29, 0xFF	; 255
 c94:	88 81       	ld	r24, Y
 c96:	99 81       	ldd	r25, Y+1	; 0x01
 c98:	aa 81       	ldd	r26, Y+2	; 0x02
 c9a:	c9 59       	subi	r28, 0x99	; 153
 c9c:	d0 40       	sbci	r29, 0x00	; 0
 c9e:	9c 01       	movw	r18, r24
 ca0:	4a 2f       	mov	r20, r26
 ca2:	2f 5f       	subi	r18, 0xFF	; 255
 ca4:	3f 4f       	sbci	r19, 0xFF	; 255
 ca6:	4f 4f       	sbci	r20, 0xFF	; 255
 ca8:	c7 56       	subi	r28, 0x67	; 103
 caa:	df 4f       	sbci	r29, 0xFF	; 255
 cac:	28 83       	st	Y, r18
 cae:	39 83       	std	Y+1, r19	; 0x01
 cb0:	4a 83       	std	Y+2, r20	; 0x02
 cb2:	c9 59       	subi	r28, 0x99	; 153
 cb4:	d0 40       	sbci	r29, 0x00	; 0
 cb6:	fc 01       	movw	r30, r24
 cb8:	5a 2f       	mov	r21, r26
 cba:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
 cbe:	26 2f       	mov	r18, r22
 cc0:	a6 01       	movw	r20, r12
 cc2:	be 01       	movw	r22, r28
 cc4:	6f 57       	subi	r22, 0x7F	; 127
 cc6:	7f 4f       	sbci	r23, 0xFF	; 255
 cc8:	c4 01       	movw	r24, r8
 cca:	0e 94 17 07 	call	0xe2e	; 0xe2e <__fmt_fp>
 cce:	84 c0       	rjmp	.+264    	; 0xdd8 <__printf_core+0x7dc>
 cd0:	10 38       	cpi	r17, 0x80	; 128
 cd2:	09 f0       	breq	.+2      	; 0xcd6 <__printf_core+0x6da>
 cd4:	84 c0       	rjmp	.+264    	; 0xdde <__printf_core+0x7e2>
 cd6:	c7 56       	subi	r28, 0x67	; 103
 cd8:	df 4f       	sbci	r29, 0xFF	; 255
 cda:	88 81       	ld	r24, Y
 cdc:	99 81       	ldd	r25, Y+1	; 0x01
 cde:	aa 81       	ldd	r26, Y+2	; 0x02
 ce0:	c9 59       	subi	r28, 0x99	; 153
 ce2:	d0 40       	sbci	r29, 0x00	; 0
 ce4:	01 96       	adiw	r24, 0x01	; 1
 ce6:	a1 1d       	adc	r26, r1
 ce8:	c7 56       	subi	r28, 0x67	; 103
 cea:	df 4f       	sbci	r29, 0xFF	; 255
 cec:	88 83       	st	Y, r24
 cee:	99 83       	std	Y+1, r25	; 0x01
 cf0:	aa 83       	std	Y+2, r26	; 0x02
 cf2:	c9 59       	subi	r28, 0x99	; 153
 cf4:	d0 40       	sbci	r29, 0x00	; 0
 cf6:	d5 01       	movw	r26, r10
 cf8:	ed 91       	ld	r30, X+
 cfa:	fc 91       	ld	r31, X
 cfc:	11 97       	sbiw	r26, 0x01	; 1
 cfe:	cf 01       	movw	r24, r30
 d00:	02 96       	adiw	r24, 0x02	; 2
 d02:	8d 93       	st	X+, r24
 d04:	9c 93       	st	X, r25
 d06:	80 81       	ld	r24, Z
 d08:	f6 01       	movw	r30, r12
 d0a:	80 83       	st	Z, r24
 d0c:	5b c0       	rjmp	.+182    	; 0xdc4 <__printf_core+0x7c8>
 d0e:	10 38       	cpi	r17, 0x80	; 128
 d10:	09 f0       	breq	.+2      	; 0xd14 <__printf_core+0x718>
 d12:	65 c0       	rjmp	.+202    	; 0xdde <__printf_core+0x7e2>
 d14:	c7 56       	subi	r28, 0x67	; 103
 d16:	df 4f       	sbci	r29, 0xFF	; 255
 d18:	88 81       	ld	r24, Y
 d1a:	99 81       	ldd	r25, Y+1	; 0x01
 d1c:	aa 81       	ldd	r26, Y+2	; 0x02
 d1e:	c9 59       	subi	r28, 0x99	; 153
 d20:	d0 40       	sbci	r29, 0x00	; 0
 d22:	01 96       	adiw	r24, 0x01	; 1
 d24:	a1 1d       	adc	r26, r1
 d26:	c7 56       	subi	r28, 0x67	; 103
 d28:	df 4f       	sbci	r29, 0xFF	; 255
 d2a:	88 83       	st	Y, r24
 d2c:	99 83       	std	Y+1, r25	; 0x01
 d2e:	aa 83       	std	Y+2, r26	; 0x02
 d30:	c9 59       	subi	r28, 0x99	; 153
 d32:	d0 40       	sbci	r29, 0x00	; 0
 d34:	d5 01       	movw	r26, r10
 d36:	ed 91       	ld	r30, X+
 d38:	fc 91       	ld	r31, X
 d3a:	11 97       	sbiw	r26, 0x01	; 1
 d3c:	cf 01       	movw	r24, r30
 d3e:	03 96       	adiw	r24, 0x03	; 3
 d40:	8d 93       	st	X+, r24
 d42:	9c 93       	st	X, r25
 d44:	20 81       	ld	r18, Z
 d46:	31 81       	ldd	r19, Z+1	; 0x01
 d48:	42 81       	ldd	r20, Z+2	; 0x02
 d4a:	00 e0       	ldi	r16, 0x00	; 0
 d4c:	10 e0       	ldi	r17, 0x00	; 0
 d4e:	3e c0       	rjmp	.+124    	; 0xdcc <__printf_core+0x7d0>
 d50:	10 38       	cpi	r17, 0x80	; 128
 d52:	09 f0       	breq	.+2      	; 0xd56 <__printf_core+0x75a>
 d54:	44 c0       	rjmp	.+136    	; 0xdde <__printf_core+0x7e2>
 d56:	c7 56       	subi	r28, 0x67	; 103
 d58:	df 4f       	sbci	r29, 0xFF	; 255
 d5a:	88 81       	ld	r24, Y
 d5c:	99 81       	ldd	r25, Y+1	; 0x01
 d5e:	aa 81       	ldd	r26, Y+2	; 0x02
 d60:	c9 59       	subi	r28, 0x99	; 153
 d62:	d0 40       	sbci	r29, 0x00	; 0
 d64:	01 96       	adiw	r24, 0x01	; 1
 d66:	a1 1d       	adc	r26, r1
 d68:	c7 56       	subi	r28, 0x67	; 103
 d6a:	df 4f       	sbci	r29, 0xFF	; 255
 d6c:	88 83       	st	Y, r24
 d6e:	99 83       	std	Y+1, r25	; 0x01
 d70:	aa 83       	std	Y+2, r26	; 0x02
 d72:	c9 59       	subi	r28, 0x99	; 153
 d74:	d0 40       	sbci	r29, 0x00	; 0
 d76:	f6 01       	movw	r30, r12
 d78:	70 82       	st	Z, r7
 d7a:	24 c0       	rjmp	.+72     	; 0xdc4 <__printf_core+0x7c8>
 d7c:	d6 01       	movw	r26, r12
 d7e:	7c 92       	st	X, r7
 d80:	c2 56       	subi	r28, 0x62	; 98
 d82:	df 4f       	sbci	r29, 0xFF	; 255
 d84:	28 81       	ld	r18, Y
 d86:	39 81       	ldd	r19, Y+1	; 0x01
 d88:	4a 81       	ldd	r20, Y+2	; 0x02
 d8a:	ce 59       	subi	r28, 0x9E	; 158
 d8c:	d0 40       	sbci	r29, 0x00	; 0
 d8e:	c7 56       	subi	r28, 0x67	; 103
 d90:	df 4f       	sbci	r29, 0xFF	; 255
 d92:	28 83       	st	Y, r18
 d94:	39 83       	std	Y+1, r19	; 0x01
 d96:	4a 83       	std	Y+2, r20	; 0x02
 d98:	c9 59       	subi	r28, 0x99	; 153
 d9a:	d0 40       	sbci	r29, 0x00	; 0
 d9c:	cf 57       	subi	r28, 0x7F	; 127
 d9e:	df 4f       	sbci	r29, 0xFF	; 255
 da0:	19 82       	std	Y+1, r1	; 0x01
 da2:	18 82       	st	Y, r1
 da4:	c1 58       	subi	r28, 0x81	; 129
 da6:	d0 40       	sbci	r29, 0x00	; 0
 da8:	cb 57       	subi	r28, 0x7B	; 123
 daa:	df 4f       	sbci	r29, 0xFF	; 255
 dac:	19 82       	std	Y+1, r1	; 0x01
 dae:	18 82       	st	Y, r1
 db0:	c5 58       	subi	r28, 0x85	; 133
 db2:	d0 40       	sbci	r29, 0x00	; 0
 db4:	8f ef       	ldi	r24, 0xFF	; 255
 db6:	9f ef       	ldi	r25, 0xFF	; 255
 db8:	cd 57       	subi	r28, 0x7D	; 125
 dba:	df 4f       	sbci	r29, 0xFF	; 255
 dbc:	99 83       	std	Y+1, r25	; 0x01
 dbe:	88 83       	st	Y, r24
 dc0:	c3 58       	subi	r28, 0x83	; 131
 dc2:	d0 40       	sbci	r29, 0x00	; 0
 dc4:	01 e0       	ldi	r16, 0x01	; 1
 dc6:	10 e0       	ldi	r17, 0x00	; 0
 dc8:	46 2d       	mov	r20, r6
 dca:	92 01       	movw	r18, r4
 dcc:	be 01       	movw	r22, r28
 dce:	6f 57       	subi	r22, 0x7F	; 127
 dd0:	7f 4f       	sbci	r23, 0xFF	; 255
 dd2:	c4 01       	movw	r24, r8
 dd4:	0e 94 28 17 	call	0x2e50	; 0x2e50 <__fmt_s>
 dd8:	8e 0d       	add	r24, r14
 dda:	9f 1d       	adc	r25, r15
 ddc:	11 c0       	rjmp	.+34     	; 0xe00 <__printf_core+0x804>
 dde:	c7 56       	subi	r28, 0x67	; 103
 de0:	df 4f       	sbci	r29, 0xFF	; 255
 de2:	88 81       	ld	r24, Y
 de4:	99 81       	ldd	r25, Y+1	; 0x01
 de6:	aa 81       	ldd	r26, Y+2	; 0x02
 de8:	c9 59       	subi	r28, 0x99	; 153
 dea:	d0 40       	sbci	r29, 0x00	; 0
 dec:	01 96       	adiw	r24, 0x01	; 1
 dee:	a1 1d       	adc	r26, r1
 df0:	c7 56       	subi	r28, 0x67	; 103
 df2:	df 4f       	sbci	r29, 0xFF	; 255
 df4:	88 83       	st	Y, r24
 df6:	99 83       	std	Y+1, r25	; 0x01
 df8:	aa 83       	std	Y+2, r26	; 0x02
 dfa:	c9 59       	subi	r28, 0x99	; 153
 dfc:	d0 40       	sbci	r29, 0x00	; 0
 dfe:	c7 01       	movw	r24, r14
 e00:	71 01       	movw	r14, r2
 e02:	e8 0e       	add	r14, r24
 e04:	f9 1e       	adc	r15, r25
 e06:	e2 14       	cp	r14, r2
 e08:	f3 04       	cpc	r15, r3
 e0a:	4c f4       	brge	.+18     	; 0xe1e <__printf_core+0x822>
 e0c:	8f e4       	ldi	r24, 0x4F	; 79
 e0e:	90 e0       	ldi	r25, 0x00	; 0
 e10:	90 93 2d 12 	sts	0x122D, r25	; 0x80122d <__errno_val+0x1>
 e14:	80 93 2c 12 	sts	0x122C, r24	; 0x80122c <__errno_val>
 e18:	8f ef       	ldi	r24, 0xFF	; 255
 e1a:	9f ef       	ldi	r25, 0xFF	; 255
 e1c:	03 c0       	rjmp	.+6      	; 0xe24 <__printf_core+0x828>
 e1e:	17 01       	movw	r2, r14
 e20:	19 cc       	rjmp	.-1998   	; 0x654 <__printf_core+0x58>
 e22:	c1 01       	movw	r24, r2
 e24:	cd 55       	subi	r28, 0x5D	; 93
 e26:	df 4f       	sbci	r29, 0xFF	; 255
 e28:	e2 e1       	ldi	r30, 0x12	; 18
 e2a:	0c 94 28 20 	jmp	0x4050	; 0x4050 <__epilogue_restores__>

Disassembly of section .text.fputc:

00003872 <fputc>:
    3872:	0f 93       	push	r16
    3874:	1f 93       	push	r17
    3876:	cf 93       	push	r28
    3878:	df 93       	push	r29
    387a:	db 01       	movw	r26, r22
    387c:	2d 91       	ld	r18, X+
    387e:	3c 91       	ld	r19, X
    3880:	11 97       	sbiw	r26, 0x01	; 1
    3882:	30 ff       	sbrs	r19, 0
    3884:	25 c0       	rjmp	.+74     	; 0x38d0 <fputc+0x5e>
    3886:	17 96       	adiw	r26, 0x07	; 7
    3888:	4d 91       	ld	r20, X+
    388a:	5c 91       	ld	r21, X
    388c:	18 97       	sbiw	r26, 0x08	; 8
    388e:	15 96       	adiw	r26, 0x05	; 5
    3890:	2d 91       	ld	r18, X+
    3892:	3c 91       	ld	r19, X
    3894:	16 97       	sbiw	r26, 0x06	; 6
    3896:	42 17       	cp	r20, r18
    3898:	53 07       	cpc	r21, r19
    389a:	78 f4       	brcc	.+30     	; 0x38ba <fputc+0x48>
    389c:	12 96       	adiw	r26, 0x02	; 2
    389e:	ed 91       	ld	r30, X+
    38a0:	fc 91       	ld	r31, X
    38a2:	13 97       	sbiw	r26, 0x03	; 3
    38a4:	80 83       	st	Z, r24
    38a6:	12 96       	adiw	r26, 0x02	; 2
    38a8:	2d 91       	ld	r18, X+
    38aa:	3c 91       	ld	r19, X
    38ac:	13 97       	sbiw	r26, 0x03	; 3
    38ae:	2f 5f       	subi	r18, 0xFF	; 255
    38b0:	3f 4f       	sbci	r19, 0xFF	; 255
    38b2:	13 96       	adiw	r26, 0x03	; 3
    38b4:	3c 93       	st	X, r19
    38b6:	2e 93       	st	-X, r18
    38b8:	12 97       	sbiw	r26, 0x02	; 2
    38ba:	17 96       	adiw	r26, 0x07	; 7
    38bc:	2d 91       	ld	r18, X+
    38be:	3c 91       	ld	r19, X
    38c0:	18 97       	sbiw	r26, 0x08	; 8
    38c2:	2f 5f       	subi	r18, 0xFF	; 255
    38c4:	3f 4f       	sbci	r19, 0xFF	; 255
    38c6:	18 96       	adiw	r26, 0x08	; 8
    38c8:	3c 93       	st	X, r19
    38ca:	2e 93       	st	-X, r18
    38cc:	17 97       	sbiw	r26, 0x07	; 7
    38ce:	15 c0       	rjmp	.+42     	; 0x38fa <fputc+0x88>
    38d0:	1d 96       	adiw	r26, 0x0d	; 13
    38d2:	ed 91       	ld	r30, X+
    38d4:	fc 91       	ld	r31, X
    38d6:	1e 97       	sbiw	r26, 0x0e	; 14
    38d8:	30 97       	sbiw	r30, 0x00	; 0
    38da:	19 f4       	brne	.+6      	; 0x38e2 <fputc+0x70>
    38dc:	8f ef       	ldi	r24, 0xFF	; 255
    38de:	9f ef       	ldi	r25, 0xFF	; 255
    38e0:	0c c0       	rjmp	.+24     	; 0x38fa <fputc+0x88>
    38e2:	8b 01       	movw	r16, r22
    38e4:	ec 01       	movw	r28, r24
    38e6:	19 95       	eicall
    38e8:	89 2b       	or	r24, r25
    38ea:	c1 f7       	brne	.-16     	; 0x38dc <fputc+0x6a>
    38ec:	f8 01       	movw	r30, r16
    38ee:	87 81       	ldd	r24, Z+7	; 0x07
    38f0:	90 85       	ldd	r25, Z+8	; 0x08
    38f2:	01 96       	adiw	r24, 0x01	; 1
    38f4:	90 87       	std	Z+8, r25	; 0x08
    38f6:	87 83       	std	Z+7, r24	; 0x07
    38f8:	ce 01       	movw	r24, r28
    38fa:	df 91       	pop	r29
    38fc:	cf 91       	pop	r28
    38fe:	1f 91       	pop	r17
    3900:	0f 91       	pop	r16
    3902:	08 95       	ret

Disassembly of section .text.__fmt_d:

0000211e <__fmt_d>:
    211e:	ad e0       	ldi	r26, 0x0D	; 13
    2120:	b0 e0       	ldi	r27, 0x00	; 0
    2122:	e5 e9       	ldi	r30, 0x95	; 149
    2124:	f0 e1       	ldi	r31, 0x10	; 16
    2126:	0c 94 f1 1f 	jmp	0x3fe2	; 0x3fe2 <__prologue_saves__>
    212a:	9a 87       	std	Y+10, r25	; 0x0a
    212c:	89 87       	std	Y+9, r24	; 0x09
    212e:	7c 83       	std	Y+4, r23	; 0x04
    2130:	6b 83       	std	Y+3, r22	; 0x03
    2132:	fa 01       	movw	r30, r20
    2134:	db 01       	movw	r26, r22
    2136:	12 96       	adiw	r26, 0x02	; 2
    2138:	cd 90       	ld	r12, X+
    213a:	dc 90       	ld	r13, X
    213c:	13 97       	sbiw	r26, 0x03	; 3
    213e:	14 96       	adiw	r26, 0x04	; 4
    2140:	8d 91       	ld	r24, X+
    2142:	9c 91       	ld	r25, X
    2144:	15 97       	sbiw	r26, 0x05	; 5
    2146:	9e 83       	std	Y+6, r25	; 0x06
    2148:	8d 83       	std	Y+5, r24	; 0x05
    214a:	ed 90       	ld	r14, X+
    214c:	fc 90       	ld	r15, X
    214e:	11 97       	sbiw	r26, 0x01	; 1
    2150:	fa 82       	std	Y+2, r15	; 0x02
    2152:	e9 82       	std	Y+1, r14	; 0x01
    2154:	16 96       	adiw	r26, 0x06	; 6
    2156:	0d 90       	ld	r0, X+
    2158:	bc 91       	ld	r27, X
    215a:	a0 2d       	mov	r26, r0
    215c:	b8 87       	std	Y+8, r27	; 0x08
    215e:	af 83       	std	Y+7, r26	; 0x07
    2160:	20 80       	ld	r2, Z
    2162:	31 80       	ldd	r3, Z+1	; 0x01
    2164:	42 80       	ldd	r4, Z+2	; 0x02
    2166:	53 80       	ldd	r5, Z+3	; 0x03
    2168:	64 80       	ldd	r6, Z+4	; 0x04
    216a:	75 80       	ldd	r7, Z+5	; 0x05
    216c:	86 80       	ldd	r8, Z+6	; 0x06
    216e:	97 80       	ldd	r9, Z+7	; 0x07
    2170:	81 01       	movw	r16, r2
    2172:	b4 2d       	mov	r27, r4
    2174:	f5 2d       	mov	r31, r5
    2176:	e6 2d       	mov	r30, r6
    2178:	7b 86       	std	Y+11, r7	; 0x0b
    217a:	8c 86       	std	Y+12, r8	; 0x0c
    217c:	9d 86       	std	Y+13, r9	; 0x0d
    217e:	91 01       	movw	r18, r2
    2180:	a2 01       	movw	r20, r4
    2182:	b3 01       	movw	r22, r6
    2184:	c4 01       	movw	r24, r8
    2186:	a0 e0       	ldi	r26, 0x00	; 0
    2188:	0e 94 9e 21 	call	0x433c	; 0x433c <__cmpdi2_s8>
    218c:	4c f4       	brge	.+18     	; 0x21a0 <__fmt_d+0x82>
    218e:	0e 94 23 21 	call	0x4246	; 0x4246 <__negdi2>
    2192:	89 01       	movw	r16, r18
    2194:	b4 2f       	mov	r27, r20
    2196:	f5 2f       	mov	r31, r21
    2198:	e6 2f       	mov	r30, r22
    219a:	7b 87       	std	Y+11, r23	; 0x0b
    219c:	8c 87       	std	Y+12, r24	; 0x0c
    219e:	9d 87       	std	Y+13, r25	; 0x0d
    21a0:	d7 fc       	sbrc	r13, 7
    21a2:	04 c0       	rjmp	.+8      	; 0x21ac <__fmt_d+0x8e>
    21a4:	e8 94       	clt
    21a6:	e1 f8       	bld	r14, 1
    21a8:	fa 82       	std	Y+2, r15	; 0x02
    21aa:	e9 82       	std	Y+1, r14	; 0x01
    21ac:	91 01       	movw	r18, r2
    21ae:	a2 01       	movw	r20, r4
    21b0:	b3 01       	movw	r22, r6
    21b2:	c4 01       	movw	r24, r8
    21b4:	a0 e0       	ldi	r26, 0x00	; 0
    21b6:	ed 80       	ldd	r14, Y+5	; 0x05
    21b8:	fe 80       	ldd	r15, Y+6	; 0x06
    21ba:	0e 94 9e 21 	call	0x433c	; 0x433c <__cmpdi2_s8>
    21be:	1c f0       	brlt	.+6      	; 0x21c6 <__fmt_d+0xa8>
    21c0:	89 81       	ldd	r24, Y+1	; 0x01
    21c2:	82 ff       	sbrs	r24, 2
    21c4:	04 c0       	rjmp	.+8      	; 0x21ce <__fmt_d+0xb0>
    21c6:	81 e0       	ldi	r24, 0x01	; 1
    21c8:	e8 1a       	sub	r14, r24
    21ca:	f1 08       	sbc	r15, r1
    21cc:	05 c0       	rjmp	.+10     	; 0x21d8 <__fmt_d+0xba>
    21ce:	83 ff       	sbrs	r24, 3
    21d0:	03 c0       	rjmp	.+6      	; 0x21d8 <__fmt_d+0xba>
    21d2:	91 e0       	ldi	r25, 0x01	; 1
    21d4:	e9 1a       	sub	r14, r25
    21d6:	f1 08       	sbc	r15, r1
    21d8:	ce 01       	movw	r24, r28
    21da:	01 96       	adiw	r24, 0x01	; 1
    21dc:	5c 01       	movw	r10, r24
    21de:	8a e0       	ldi	r24, 0x0A	; 10
    21e0:	c8 2e       	mov	r12, r24
    21e2:	d1 2c       	mov	r13, r1
    21e4:	2b 2f       	mov	r18, r27
    21e6:	3f 2f       	mov	r19, r31
    21e8:	4e 2f       	mov	r20, r30
    21ea:	5b 85       	ldd	r21, Y+11	; 0x0b
    21ec:	6c 85       	ldd	r22, Y+12	; 0x0c
    21ee:	7d 85       	ldd	r23, Y+13	; 0x0d
    21f0:	8b 81       	ldd	r24, Y+3	; 0x03
    21f2:	9c 81       	ldd	r25, Y+4	; 0x04
    21f4:	0e 94 af 12 	call	0x255e	; 0x255e <__cvt_u>
    21f8:	fc 01       	movw	r30, r24
    21fa:	91 01       	movw	r18, r2
    21fc:	a2 01       	movw	r20, r4
    21fe:	b3 01       	movw	r22, r6
    2200:	c4 01       	movw	r24, r8
    2202:	a0 e0       	ldi	r26, 0x00	; 0
    2204:	0e 94 9e 21 	call	0x433c	; 0x433c <__cmpdi2_s8>
    2208:	1c f0       	brlt	.+6      	; 0x2210 <__stack+0x11>
    220a:	89 81       	ldd	r24, Y+1	; 0x01
    220c:	82 ff       	sbrs	r24, 2
    220e:	12 c0       	rjmp	.+36     	; 0x2234 <__stack+0x35>
    2210:	31 97       	sbiw	r30, 0x01	; 1
    2212:	0f 81       	ldd	r16, Y+7	; 0x07
    2214:	18 85       	ldd	r17, Y+8	; 0x08
    2216:	0e 0f       	add	r16, r30
    2218:	1f 1f       	adc	r17, r31
    221a:	91 01       	movw	r18, r2
    221c:	a2 01       	movw	r20, r4
    221e:	b3 01       	movw	r22, r6
    2220:	c4 01       	movw	r24, r8
    2222:	a0 e0       	ldi	r26, 0x00	; 0
    2224:	0e 94 9e 21 	call	0x433c	; 0x433c <__cmpdi2_s8>
    2228:	14 f0       	brlt	.+4      	; 0x222e <__stack+0x2f>
    222a:	8b e2       	ldi	r24, 0x2B	; 43
    222c:	01 c0       	rjmp	.+2      	; 0x2230 <__stack+0x31>
    222e:	8d e2       	ldi	r24, 0x2D	; 45
    2230:	d8 01       	movw	r26, r16
    2232:	08 c0       	rjmp	.+16     	; 0x2244 <__stack+0x45>
    2234:	83 ff       	sbrs	r24, 3
    2236:	07 c0       	rjmp	.+14     	; 0x2246 <__stack+0x47>
    2238:	31 97       	sbiw	r30, 0x01	; 1
    223a:	af 81       	ldd	r26, Y+7	; 0x07
    223c:	b8 85       	ldd	r27, Y+8	; 0x08
    223e:	ae 0f       	add	r26, r30
    2240:	bf 1f       	adc	r27, r31
    2242:	80 e2       	ldi	r24, 0x20	; 32
    2244:	8c 93       	st	X, r24
    2246:	e9 80       	ldd	r14, Y+1	; 0x01
    2248:	fa 80       	ldd	r15, Y+2	; 0x02
    224a:	ab 81       	ldd	r26, Y+3	; 0x03
    224c:	bc 81       	ldd	r27, Y+4	; 0x04
    224e:	18 96       	adiw	r26, 0x08	; 8
    2250:	2d 91       	ld	r18, X+
    2252:	3c 91       	ld	r19, X
    2254:	19 97       	sbiw	r26, 0x09	; 9
    2256:	21 50       	subi	r18, 0x01	; 1
    2258:	31 09       	sbc	r19, r1
    225a:	2e 1b       	sub	r18, r30
    225c:	3f 0b       	sbc	r19, r31
    225e:	8f 81       	ldd	r24, Y+7	; 0x07
    2260:	98 85       	ldd	r25, Y+8	; 0x08
    2262:	e8 0f       	add	r30, r24
    2264:	f9 1f       	adc	r31, r25
    2266:	af 01       	movw	r20, r30
    2268:	60 e8       	ldi	r22, 0x80	; 128
    226a:	0d 81       	ldd	r16, Y+5	; 0x05
    226c:	1e 81       	ldd	r17, Y+6	; 0x06
    226e:	89 85       	ldd	r24, Y+9	; 0x09
    2270:	9a 85       	ldd	r25, Y+10	; 0x0a
    2272:	0e 94 8b 14 	call	0x2916	; 0x2916 <__pad>
    2276:	9c 01       	movw	r18, r24
    2278:	a9 85       	ldd	r26, Y+9	; 0x09
    227a:	ba 85       	ldd	r27, Y+10	; 0x0a
    227c:	8d 91       	ld	r24, X+
    227e:	9c 91       	ld	r25, X
    2280:	90 ff       	sbrs	r25, 0
    2282:	07 c0       	rjmp	.+14     	; 0x2292 <__stack+0x93>
    2284:	eb 81       	ldd	r30, Y+3	; 0x03
    2286:	fc 81       	ldd	r31, Y+4	; 0x04
    2288:	82 81       	ldd	r24, Z+2	; 0x02
    228a:	93 81       	ldd	r25, Z+3	; 0x03
    228c:	82 17       	cp	r24, r18
    228e:	93 07       	cpc	r25, r19
    2290:	0c f4       	brge	.+2      	; 0x2294 <__stack+0x95>
    2292:	c9 01       	movw	r24, r18
    2294:	2d 96       	adiw	r28, 0x0d	; 13
    2296:	e2 e1       	ldi	r30, 0x12	; 18
    2298:	0c 94 28 20 	jmp	0x4050	; 0x4050 <__epilogue_restores__>

Disassembly of section .text.__fmt_o:

00002bda <__fmt_o>:
    2bda:	a2 e0       	ldi	r26, 0x02	; 2
    2bdc:	b0 e0       	ldi	r27, 0x00	; 0
    2bde:	e3 ef       	ldi	r30, 0xF3	; 243
    2be0:	f5 e1       	ldi	r31, 0x15	; 21
    2be2:	0c 94 f1 1f 	jmp	0x3fe2	; 0x3fe2 <__prologue_saves__>
    2be6:	1c 01       	movw	r2, r24
    2be8:	4b 01       	movw	r8, r22
    2bea:	fa 01       	movw	r30, r20
    2bec:	db 01       	movw	r26, r22
    2bee:	12 96       	adiw	r26, 0x02	; 2
    2bf0:	2d 91       	ld	r18, X+
    2bf2:	3c 91       	ld	r19, X
    2bf4:	13 97       	sbiw	r26, 0x03	; 3
    2bf6:	14 96       	adiw	r26, 0x04	; 4
    2bf8:	4d 90       	ld	r4, X+
    2bfa:	5c 90       	ld	r5, X
    2bfc:	15 97       	sbiw	r26, 0x05	; 5
    2bfe:	8d 91       	ld	r24, X+
    2c00:	9c 91       	ld	r25, X
    2c02:	11 97       	sbiw	r26, 0x01	; 1
    2c04:	9a 83       	std	Y+2, r25	; 0x02
    2c06:	89 83       	std	Y+1, r24	; 0x01
    2c08:	16 96       	adiw	r26, 0x06	; 6
    2c0a:	6d 90       	ld	r6, X+
    2c0c:	7c 90       	ld	r7, X
    2c0e:	17 97       	sbiw	r26, 0x07	; 7
    2c10:	37 fd       	sbrc	r19, 7
    2c12:	03 c0       	rjmp	.+6      	; 0x2c1a <__fmt_o+0x40>
    2c14:	8d 7f       	andi	r24, 0xFD	; 253
    2c16:	9a 83       	std	Y+2, r25	; 0x02
    2c18:	89 83       	std	Y+1, r24	; 0x01
    2c1a:	00 81       	ld	r16, Z
    2c1c:	11 81       	ldd	r17, Z+1	; 0x01
    2c1e:	22 81       	ldd	r18, Z+2	; 0x02
    2c20:	33 81       	ldd	r19, Z+3	; 0x03
    2c22:	44 81       	ldd	r20, Z+4	; 0x04
    2c24:	55 81       	ldd	r21, Z+5	; 0x05
    2c26:	66 81       	ldd	r22, Z+6	; 0x06
    2c28:	77 81       	ldd	r23, Z+7	; 0x07
    2c2a:	fe 01       	movw	r30, r28
    2c2c:	31 96       	adiw	r30, 0x01	; 1
    2c2e:	5f 01       	movw	r10, r30
    2c30:	88 e0       	ldi	r24, 0x08	; 8
    2c32:	c8 2e       	mov	r12, r24
    2c34:	d1 2c       	mov	r13, r1
    2c36:	72 01       	movw	r14, r4
    2c38:	c4 01       	movw	r24, r8
    2c3a:	0e 94 af 12 	call	0x255e	; 0x255e <__cvt_u>
    2c3e:	29 81       	ldd	r18, Y+1	; 0x01
    2c40:	24 ff       	sbrs	r18, 4
    2c42:	06 c0       	rjmp	.+12     	; 0x2c50 <__fmt_o+0x76>
    2c44:	01 97       	sbiw	r24, 0x01	; 1
    2c46:	f3 01       	movw	r30, r6
    2c48:	e8 0f       	add	r30, r24
    2c4a:	f9 1f       	adc	r31, r25
    2c4c:	20 e3       	ldi	r18, 0x30	; 48
    2c4e:	20 83       	st	Z, r18
    2c50:	29 81       	ldd	r18, Y+1	; 0x01
    2c52:	23 ff       	sbrs	r18, 3
    2c54:	06 c0       	rjmp	.+12     	; 0x2c62 <__fmt_o+0x88>
    2c56:	01 97       	sbiw	r24, 0x01	; 1
    2c58:	f3 01       	movw	r30, r6
    2c5a:	e8 0f       	add	r30, r24
    2c5c:	f9 1f       	adc	r31, r25
    2c5e:	20 e2       	ldi	r18, 0x20	; 32
    2c60:	20 83       	st	Z, r18
    2c62:	e9 80       	ldd	r14, Y+1	; 0x01
    2c64:	fa 80       	ldd	r15, Y+2	; 0x02
    2c66:	d4 01       	movw	r26, r8
    2c68:	18 96       	adiw	r26, 0x08	; 8
    2c6a:	2d 91       	ld	r18, X+
    2c6c:	3c 91       	ld	r19, X
    2c6e:	19 97       	sbiw	r26, 0x09	; 9
    2c70:	21 50       	subi	r18, 0x01	; 1
    2c72:	31 09       	sbc	r19, r1
    2c74:	28 1b       	sub	r18, r24
    2c76:	39 0b       	sbc	r19, r25
    2c78:	86 0d       	add	r24, r6
    2c7a:	97 1d       	adc	r25, r7
    2c7c:	ac 01       	movw	r20, r24
    2c7e:	60 e8       	ldi	r22, 0x80	; 128
    2c80:	82 01       	movw	r16, r4
    2c82:	c1 01       	movw	r24, r2
    2c84:	0e 94 8b 14 	call	0x2916	; 0x2916 <__pad>
    2c88:	9c 01       	movw	r18, r24
    2c8a:	f1 01       	movw	r30, r2
    2c8c:	80 81       	ld	r24, Z
    2c8e:	91 81       	ldd	r25, Z+1	; 0x01
    2c90:	90 ff       	sbrs	r25, 0
    2c92:	08 c0       	rjmp	.+16     	; 0x2ca4 <__fmt_o+0xca>
    2c94:	d4 01       	movw	r26, r8
    2c96:	12 96       	adiw	r26, 0x02	; 2
    2c98:	8d 91       	ld	r24, X+
    2c9a:	9c 91       	ld	r25, X
    2c9c:	13 97       	sbiw	r26, 0x03	; 3
    2c9e:	82 17       	cp	r24, r18
    2ca0:	93 07       	cpc	r25, r19
    2ca2:	0c f4       	brge	.+2      	; 0x2ca6 <__fmt_o+0xcc>
    2ca4:	c9 01       	movw	r24, r18
    2ca6:	22 96       	adiw	r28, 0x02	; 2
    2ca8:	e2 e1       	ldi	r30, 0x12	; 18
    2caa:	0c 94 28 20 	jmp	0x4050	; 0x4050 <__epilogue_restores__>

Disassembly of section .text.__cvt_u:

0000255e <__cvt_u>:
    255e:	a2 e1       	ldi	r26, 0x12	; 18
    2560:	b0 e0       	ldi	r27, 0x00	; 0
    2562:	e5 eb       	ldi	r30, 0xB5	; 181
    2564:	f2 e1       	ldi	r31, 0x12	; 18
    2566:	0c 94 f1 1f 	jmp	0x3fe2	; 0x3fe2 <__prologue_saves__>
    256a:	fc 01       	movw	r30, r24
    256c:	0a 8b       	std	Y+18, r16	; 0x12
    256e:	1b 83       	std	Y+3, r17	; 0x03
    2570:	2c 83       	std	Y+4, r18	; 0x04
    2572:	73 2e       	mov	r7, r19
    2574:	64 2e       	mov	r6, r20
    2576:	55 2e       	mov	r5, r21
    2578:	46 2e       	mov	r4, r22
    257a:	7d 83       	std	Y+5, r23	; 0x05
    257c:	cc 86       	std	Y+12, r12	; 0x0c
    257e:	d8 86       	std	Y+8, r13	; 0x08
    2580:	bf 82       	std	Y+7, r11	; 0x07
    2582:	ae 82       	std	Y+6, r10	; 0x06
    2584:	86 81       	ldd	r24, Z+6	; 0x06
    2586:	97 81       	ldd	r25, Z+7	; 0x07
    2588:	9b 87       	std	Y+11, r25	; 0x0b
    258a:	8a 87       	std	Y+10, r24	; 0x0a
    258c:	d5 01       	movw	r26, r10
    258e:	4d 91       	ld	r20, X+
    2590:	5c 91       	ld	r21, X
    2592:	22 81       	ldd	r18, Z+2	; 0x02
    2594:	33 81       	ldd	r19, Z+3	; 0x03
    2596:	80 85       	ldd	r24, Z+8	; 0x08
    2598:	91 85       	ldd	r25, Z+9	; 0x09
    259a:	01 97       	sbiw	r24, 0x01	; 1
    259c:	1c 01       	movw	r2, r24
    259e:	37 ff       	sbrs	r19, 7
    25a0:	02 c0       	rjmp	.+4      	; 0x25a6 <__cvt_u+0x48>
    25a2:	21 e0       	ldi	r18, 0x01	; 1
    25a4:	30 e0       	ldi	r19, 0x00	; 0
    25a6:	ea 85       	ldd	r30, Y+10	; 0x0a
    25a8:	fb 85       	ldd	r31, Y+11	; 0x0b
    25aa:	e8 0f       	add	r30, r24
    25ac:	f9 1f       	adc	r31, r25
    25ae:	10 82       	st	Z, r1
    25b0:	47 01       	movw	r8, r14
    25b2:	e1 e0       	ldi	r30, 0x01	; 1
    25b4:	f0 e0       	ldi	r31, 0x00	; 0
    25b6:	fa 83       	std	Y+2, r31	; 0x02
    25b8:	e9 83       	std	Y+1, r30	; 0x01
    25ba:	c9 01       	movw	r24, r18
    25bc:	8e 19       	sub	r24, r14
    25be:	9f 09       	sbc	r25, r15
    25c0:	9e 87       	std	Y+14, r25	; 0x0e
    25c2:	8d 87       	std	Y+13, r24	; 0x0d
    25c4:	da 01       	movw	r26, r20
    25c6:	a2 70       	andi	r26, 0x02	; 2
    25c8:	bb 27       	eor	r27, r27
    25ca:	b8 8b       	std	Y+16, r27	; 0x10
    25cc:	af 87       	std	Y+15, r26	; 0x0f
    25ce:	b8 85       	ldd	r27, Y+8	; 0x08
    25d0:	bb 0f       	add	r27, r27
    25d2:	bb 0b       	sbc	r27, r27
    25d4:	b9 8b       	std	Y+17, r27	; 0x11
    25d6:	12 14       	cp	r1, r2
    25d8:	13 04       	cpc	r1, r3
    25da:	74 f0       	brlt	.+28     	; 0x25f8 <__cvt_u+0x9a>
    25dc:	a9 81       	ldd	r26, Y+1	; 0x01
    25de:	ba 81       	ldd	r27, Y+2	; 0x02
    25e0:	ab 2b       	or	r26, r27
    25e2:	09 f0       	breq	.+2      	; 0x25e6 <__cvt_u+0x88>
    25e4:	5c c0       	rjmp	.+184    	; 0x269e <__cvt_u+0x140>
    25e6:	ae 81       	ldd	r26, Y+6	; 0x06
    25e8:	bf 81       	ldd	r27, Y+7	; 0x07
    25ea:	8d 91       	ld	r24, X+
    25ec:	9c 91       	ld	r25, X
    25ee:	11 97       	sbiw	r26, 0x01	; 1
    25f0:	8f 7e       	andi	r24, 0xEF	; 239
    25f2:	8d 93       	st	X+, r24
    25f4:	9c 93       	st	X, r25
    25f6:	53 c0       	rjmp	.+166    	; 0x269e <__cvt_u+0x140>
    25f8:	2a 89       	ldd	r18, Y+18	; 0x12
    25fa:	3b 81       	ldd	r19, Y+3	; 0x03
    25fc:	4c 81       	ldd	r20, Y+4	; 0x04
    25fe:	57 2d       	mov	r21, r7
    2600:	66 2d       	mov	r22, r6
    2602:	75 2d       	mov	r23, r5
    2604:	84 2d       	mov	r24, r4
    2606:	9d 81       	ldd	r25, Y+5	; 0x05
    2608:	a0 e0       	ldi	r26, 0x00	; 0
    260a:	0e 94 9e 21 	call	0x433c	; 0x433c <__cmpdi2_s8>
    260e:	b1 f1       	breq	.+108    	; 0x267c <__cvt_u+0x11e>
    2610:	e1 e0       	ldi	r30, 0x01	; 1
    2612:	2e 1a       	sub	r2, r30
    2614:	31 08       	sbc	r3, r1
    2616:	fc 85       	ldd	r31, Y+12	; 0x0c
    2618:	f9 87       	std	Y+9, r31	; 0x09
    261a:	af 2e       	mov	r10, r31
    261c:	b8 84       	ldd	r11, Y+8	; 0x08
    261e:	c9 88       	ldd	r12, Y+17	; 0x11
    2620:	dc 2c       	mov	r13, r12
    2622:	ec 2c       	mov	r14, r12
    2624:	fc 2c       	mov	r15, r12
    2626:	0c 2d       	mov	r16, r12
    2628:	1c 2d       	mov	r17, r12
    262a:	2a 89       	ldd	r18, Y+18	; 0x12
    262c:	3b 81       	ldd	r19, Y+3	; 0x03
    262e:	4c 81       	ldd	r20, Y+4	; 0x04
    2630:	57 2d       	mov	r21, r7
    2632:	66 2d       	mov	r22, r6
    2634:	75 2d       	mov	r23, r5
    2636:	84 2d       	mov	r24, r4
    2638:	9d 81       	ldd	r25, Y+5	; 0x05
    263a:	0e 94 50 21 	call	0x42a0	; 0x42a0 <__umoddi3>
    263e:	c9 01       	movw	r24, r18
    2640:	29 83       	std	Y+1, r18	; 0x01
    2642:	9a 83       	std	Y+2, r25	; 0x02
    2644:	ea 85       	ldd	r30, Y+10	; 0x0a
    2646:	fb 85       	ldd	r31, Y+11	; 0x0b
    2648:	e2 0d       	add	r30, r2
    264a:	f3 1d       	adc	r31, r3
    264c:	80 5d       	subi	r24, 0xD0	; 208
    264e:	80 83       	st	Z, r24
    2650:	81 e0       	ldi	r24, 0x01	; 1
    2652:	88 1a       	sub	r8, r24
    2654:	91 08       	sbc	r9, r1
    2656:	2a 89       	ldd	r18, Y+18	; 0x12
    2658:	3b 81       	ldd	r19, Y+3	; 0x03
    265a:	4c 81       	ldd	r20, Y+4	; 0x04
    265c:	57 2d       	mov	r21, r7
    265e:	66 2d       	mov	r22, r6
    2660:	75 2d       	mov	r23, r5
    2662:	84 2d       	mov	r24, r4
    2664:	9d 81       	ldd	r25, Y+5	; 0x05
    2666:	0e 94 52 21 	call	0x42a4	; 0x42a4 <__udivdi3>
    266a:	2a 8b       	std	Y+18, r18	; 0x12
    266c:	3b 83       	std	Y+3, r19	; 0x03
    266e:	4c 83       	std	Y+4, r20	; 0x04
    2670:	75 2e       	mov	r7, r21
    2672:	66 2e       	mov	r6, r22
    2674:	57 2e       	mov	r5, r23
    2676:	48 2e       	mov	r4, r24
    2678:	9d 83       	std	Y+5, r25	; 0x05
    267a:	ad cf       	rjmp	.-166    	; 0x25d6 <__cvt_u+0x78>
    267c:	8d 85       	ldd	r24, Y+13	; 0x0d
    267e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2680:	88 0d       	add	r24, r8
    2682:	99 1d       	adc	r25, r9
    2684:	18 16       	cp	r1, r24
    2686:	19 06       	cpc	r1, r25
    2688:	1c f2       	brlt	.-122    	; 0x2610 <__cvt_u+0xb2>
    268a:	18 14       	cp	r1, r8
    268c:	19 04       	cpc	r1, r9
    268e:	0c f0       	brlt	.+2      	; 0x2692 <__cvt_u+0x134>
    2690:	a5 cf       	rjmp	.-182    	; 0x25dc <__cvt_u+0x7e>
    2692:	ef 85       	ldd	r30, Y+15	; 0x0f
    2694:	f8 89       	ldd	r31, Y+16	; 0x10
    2696:	ef 2b       	or	r30, r31
    2698:	09 f0       	breq	.+2      	; 0x269c <__cvt_u+0x13e>
    269a:	ba cf       	rjmp	.-140    	; 0x2610 <__cvt_u+0xb2>
    269c:	9f cf       	rjmp	.-194    	; 0x25dc <__cvt_u+0x7e>
    269e:	c1 01       	movw	r24, r2
    26a0:	62 96       	adiw	r28, 0x12	; 18
    26a2:	e2 e1       	ldi	r30, 0x12	; 18
    26a4:	0c 94 28 20 	jmp	0x4050	; 0x4050 <__epilogue_restores__>

Disassembly of section .text.__fmt_u:

00003202 <__fmt_u>:
    3202:	a2 e0       	ldi	r26, 0x02	; 2
    3204:	b0 e0       	ldi	r27, 0x00	; 0
    3206:	e7 e0       	ldi	r30, 0x07	; 7
    3208:	f9 e1       	ldi	r31, 0x19	; 25
    320a:	0c 94 f1 1f 	jmp	0x3fe2	; 0x3fe2 <__prologue_saves__>
    320e:	3c 01       	movw	r6, r24
    3210:	4b 01       	movw	r8, r22
    3212:	fa 01       	movw	r30, r20
    3214:	db 01       	movw	r26, r22
    3216:	12 96       	adiw	r26, 0x02	; 2
    3218:	2d 91       	ld	r18, X+
    321a:	3c 91       	ld	r19, X
    321c:	13 97       	sbiw	r26, 0x03	; 3
    321e:	14 96       	adiw	r26, 0x04	; 4
    3220:	4d 90       	ld	r4, X+
    3222:	5c 90       	ld	r5, X
    3224:	15 97       	sbiw	r26, 0x05	; 5
    3226:	8d 91       	ld	r24, X+
    3228:	9c 91       	ld	r25, X
    322a:	11 97       	sbiw	r26, 0x01	; 1
    322c:	9a 83       	std	Y+2, r25	; 0x02
    322e:	89 83       	std	Y+1, r24	; 0x01
    3230:	16 96       	adiw	r26, 0x06	; 6
    3232:	2d 90       	ld	r2, X+
    3234:	3c 90       	ld	r3, X
    3236:	17 97       	sbiw	r26, 0x07	; 7
    3238:	37 fd       	sbrc	r19, 7
    323a:	03 c0       	rjmp	.+6      	; 0x3242 <__fmt_u+0x40>
    323c:	8d 7f       	andi	r24, 0xFD	; 253
    323e:	9a 83       	std	Y+2, r25	; 0x02
    3240:	89 83       	std	Y+1, r24	; 0x01
    3242:	00 81       	ld	r16, Z
    3244:	11 81       	ldd	r17, Z+1	; 0x01
    3246:	22 81       	ldd	r18, Z+2	; 0x02
    3248:	33 81       	ldd	r19, Z+3	; 0x03
    324a:	44 81       	ldd	r20, Z+4	; 0x04
    324c:	55 81       	ldd	r21, Z+5	; 0x05
    324e:	66 81       	ldd	r22, Z+6	; 0x06
    3250:	77 81       	ldd	r23, Z+7	; 0x07
    3252:	fe 01       	movw	r30, r28
    3254:	31 96       	adiw	r30, 0x01	; 1
    3256:	5f 01       	movw	r10, r30
    3258:	8a e0       	ldi	r24, 0x0A	; 10
    325a:	c8 2e       	mov	r12, r24
    325c:	d1 2c       	mov	r13, r1
    325e:	72 01       	movw	r14, r4
    3260:	c4 01       	movw	r24, r8
    3262:	0e 94 af 12 	call	0x255e	; 0x255e <__cvt_u>
    3266:	e9 80       	ldd	r14, Y+1	; 0x01
    3268:	fa 80       	ldd	r15, Y+2	; 0x02
    326a:	d4 01       	movw	r26, r8
    326c:	18 96       	adiw	r26, 0x08	; 8
    326e:	2d 91       	ld	r18, X+
    3270:	3c 91       	ld	r19, X
    3272:	19 97       	sbiw	r26, 0x09	; 9
    3274:	21 50       	subi	r18, 0x01	; 1
    3276:	31 09       	sbc	r19, r1
    3278:	28 1b       	sub	r18, r24
    327a:	39 0b       	sbc	r19, r25
    327c:	82 0d       	add	r24, r2
    327e:	93 1d       	adc	r25, r3
    3280:	ac 01       	movw	r20, r24
    3282:	60 e8       	ldi	r22, 0x80	; 128
    3284:	82 01       	movw	r16, r4
    3286:	c3 01       	movw	r24, r6
    3288:	0e 94 8b 14 	call	0x2916	; 0x2916 <__pad>
    328c:	9c 01       	movw	r18, r24
    328e:	f3 01       	movw	r30, r6
    3290:	80 81       	ld	r24, Z
    3292:	91 81       	ldd	r25, Z+1	; 0x01
    3294:	90 ff       	sbrs	r25, 0
    3296:	08 c0       	rjmp	.+16     	; 0x32a8 <__fmt_u+0xa6>
    3298:	d4 01       	movw	r26, r8
    329a:	12 96       	adiw	r26, 0x02	; 2
    329c:	8d 91       	ld	r24, X+
    329e:	9c 91       	ld	r25, X
    32a0:	13 97       	sbiw	r26, 0x03	; 3
    32a2:	82 17       	cp	r24, r18
    32a4:	93 07       	cpc	r25, r19
    32a6:	0c f4       	brge	.+2      	; 0x32aa <__fmt_u+0xa8>
    32a8:	c9 01       	movw	r24, r18
    32aa:	22 96       	adiw	r28, 0x02	; 2
    32ac:	e2 e1       	ldi	r30, 0x12	; 18
    32ae:	0c 94 28 20 	jmp	0x4050	; 0x4050 <__epilogue_restores__>

Disassembly of section .text.__fmt_x:

00001e9e <__fmt_x>:
    1e9e:	a4 e1       	ldi	r26, 0x14	; 20
    1ea0:	b0 e0       	ldi	r27, 0x00	; 0
    1ea2:	e5 e5       	ldi	r30, 0x55	; 85
    1ea4:	ff e0       	ldi	r31, 0x0F	; 15
    1ea6:	0c 94 f1 1f 	jmp	0x3fe2	; 0x3fe2 <__prologue_saves__>
    1eaa:	98 87       	std	Y+8, r25	; 0x08
    1eac:	8f 83       	std	Y+7, r24	; 0x07
    1eae:	7a 83       	std	Y+2, r23	; 0x02
    1eb0:	69 83       	std	Y+1, r22	; 0x01
    1eb2:	5c 8b       	std	Y+20, r21	; 0x14
    1eb4:	4b 8b       	std	Y+19, r20	; 0x13
    1eb6:	12 2f       	mov	r17, r18
    1eb8:	db 01       	movw	r26, r22
    1eba:	12 96       	adiw	r26, 0x02	; 2
    1ebc:	ed 91       	ld	r30, X+
    1ebe:	fc 91       	ld	r31, X
    1ec0:	13 97       	sbiw	r26, 0x03	; 3
    1ec2:	14 96       	adiw	r26, 0x04	; 4
    1ec4:	2d 91       	ld	r18, X+
    1ec6:	3c 91       	ld	r19, X
    1ec8:	15 97       	sbiw	r26, 0x05	; 5
    1eca:	3e 83       	std	Y+6, r19	; 0x06
    1ecc:	2d 83       	std	Y+5, r18	; 0x05
    1ece:	ed 90       	ld	r14, X+
    1ed0:	fc 90       	ld	r15, X
    1ed2:	11 97       	sbiw	r26, 0x01	; 1
    1ed4:	16 96       	adiw	r26, 0x06	; 6
    1ed6:	2d 90       	ld	r2, X+
    1ed8:	3c 90       	ld	r3, X
    1eda:	17 97       	sbiw	r26, 0x07	; 7
    1edc:	f7 fd       	sbrc	r31, 7
    1ede:	03 c0       	rjmp	.+6      	; 0x1ee6 <__fmt_x+0x48>
    1ee0:	e8 94       	clt
    1ee2:	e1 f8       	bld	r14, 1
    1ee4:	02 c0       	rjmp	.+4      	; 0x1eea <__fmt_x+0x4c>
    1ee6:	e1 e0       	ldi	r30, 0x01	; 1
    1ee8:	f0 e0       	ldi	r31, 0x00	; 0
    1eea:	c7 01       	movw	r24, r14
    1eec:	80 71       	andi	r24, 0x10	; 16
    1eee:	99 27       	eor	r25, r25
    1ef0:	9a 87       	std	Y+10, r25	; 0x0a
    1ef2:	89 87       	std	Y+9, r24	; 0x09
    1ef4:	e4 fe       	sbrs	r14, 4
    1ef6:	1f c0       	rjmp	.+62     	; 0x1f36 <__fmt_x+0x98>
    1ef8:	ab 89       	ldd	r26, Y+19	; 0x13
    1efa:	bc 89       	ldd	r27, Y+20	; 0x14
    1efc:	2c 91       	ld	r18, X
    1efe:	11 96       	adiw	r26, 0x01	; 1
    1f00:	3c 91       	ld	r19, X
    1f02:	11 97       	sbiw	r26, 0x01	; 1
    1f04:	12 96       	adiw	r26, 0x02	; 2
    1f06:	4c 91       	ld	r20, X
    1f08:	12 97       	sbiw	r26, 0x02	; 2
    1f0a:	13 96       	adiw	r26, 0x03	; 3
    1f0c:	5c 91       	ld	r21, X
    1f0e:	13 97       	sbiw	r26, 0x03	; 3
    1f10:	14 96       	adiw	r26, 0x04	; 4
    1f12:	6c 91       	ld	r22, X
    1f14:	14 97       	sbiw	r26, 0x04	; 4
    1f16:	15 96       	adiw	r26, 0x05	; 5
    1f18:	7c 91       	ld	r23, X
    1f1a:	15 97       	sbiw	r26, 0x05	; 5
    1f1c:	16 96       	adiw	r26, 0x06	; 6
    1f1e:	8c 91       	ld	r24, X
    1f20:	16 97       	sbiw	r26, 0x06	; 6
    1f22:	17 96       	adiw	r26, 0x07	; 7
    1f24:	9c 91       	ld	r25, X
    1f26:	a0 e0       	ldi	r26, 0x00	; 0
    1f28:	0e 94 9e 21 	call	0x433c	; 0x433c <__cmpdi2_s8>
    1f2c:	21 f0       	breq	.+8      	; 0x1f36 <__fmt_x+0x98>
    1f2e:	8d 81       	ldd	r24, Y+5	; 0x05
    1f30:	9e 81       	ldd	r25, Y+6	; 0x06
    1f32:	02 97       	sbiw	r24, 0x02	; 2
    1f34:	02 c0       	rjmp	.+4      	; 0x1f3a <__fmt_x+0x9c>
    1f36:	8d 81       	ldd	r24, Y+5	; 0x05
    1f38:	9e 81       	ldd	r25, Y+6	; 0x06
    1f3a:	97 01       	movw	r18, r14
    1f3c:	28 70       	andi	r18, 0x08	; 8
    1f3e:	33 27       	eor	r19, r19
    1f40:	3c 87       	std	Y+12, r19	; 0x0c
    1f42:	2b 87       	std	Y+11, r18	; 0x0b
    1f44:	e3 fc       	sbrc	r14, 3
    1f46:	01 97       	sbiw	r24, 0x01	; 1
    1f48:	ab 89       	ldd	r26, Y+19	; 0x13
    1f4a:	bc 89       	ldd	r27, Y+20	; 0x14
    1f4c:	4c 90       	ld	r4, X
    1f4e:	11 96       	adiw	r26, 0x01	; 1
    1f50:	5c 90       	ld	r5, X
    1f52:	11 97       	sbiw	r26, 0x01	; 1
    1f54:	12 96       	adiw	r26, 0x02	; 2
    1f56:	6c 90       	ld	r6, X
    1f58:	12 97       	sbiw	r26, 0x02	; 2
    1f5a:	13 96       	adiw	r26, 0x03	; 3
    1f5c:	7c 90       	ld	r7, X
    1f5e:	13 97       	sbiw	r26, 0x03	; 3
    1f60:	14 96       	adiw	r26, 0x04	; 4
    1f62:	8c 90       	ld	r8, X
    1f64:	14 97       	sbiw	r26, 0x04	; 4
    1f66:	15 96       	adiw	r26, 0x05	; 5
    1f68:	9c 90       	ld	r9, X
    1f6a:	15 97       	sbiw	r26, 0x05	; 5
    1f6c:	16 96       	adiw	r26, 0x06	; 6
    1f6e:	ac 90       	ld	r10, X
    1f70:	16 97       	sbiw	r26, 0x06	; 6
    1f72:	17 96       	adiw	r26, 0x07	; 7
    1f74:	bc 90       	ld	r11, X
    1f76:	a9 81       	ldd	r26, Y+1	; 0x01
    1f78:	ba 81       	ldd	r27, Y+2	; 0x02
    1f7a:	18 96       	adiw	r26, 0x08	; 8
    1f7c:	cd 90       	ld	r12, X+
    1f7e:	dc 90       	ld	r13, X
    1f80:	19 97       	sbiw	r26, 0x09	; 9
    1f82:	b1 e0       	ldi	r27, 0x01	; 1
    1f84:	cb 1a       	sub	r12, r27
    1f86:	d1 08       	sbc	r13, r1
    1f88:	d1 01       	movw	r26, r2
    1f8a:	ac 0d       	add	r26, r12
    1f8c:	bd 1d       	adc	r27, r13
    1f8e:	1c 92       	st	X, r1
    1f90:	9c 83       	std	Y+4, r25	; 0x04
    1f92:	8b 83       	std	Y+3, r24	; 0x03
    1f94:	9f 01       	movw	r18, r30
    1f96:	28 1b       	sub	r18, r24
    1f98:	39 0b       	sbc	r19, r25
    1f9a:	3e 87       	std	Y+14, r19	; 0x0e
    1f9c:	2d 87       	std	Y+13, r18	; 0x0d
    1f9e:	c7 01       	movw	r24, r14
    1fa0:	82 70       	andi	r24, 0x02	; 2
    1fa2:	99 27       	eor	r25, r25
    1fa4:	98 8b       	std	Y+16, r25	; 0x10
    1fa6:	8f 87       	std	Y+15, r24	; 0x0f
    1fa8:	81 2f       	mov	r24, r17
    1faa:	01 2e       	mov	r0, r17
    1fac:	00 0c       	add	r0, r0
    1fae:	99 0b       	sbc	r25, r25
    1fb0:	dc 01       	movw	r26, r24
    1fb2:	a1 54       	subi	r26, 0x41	; 65
    1fb4:	b1 09       	sbc	r27, r1
    1fb6:	ba 8b       	std	Y+18, r27	; 0x12
    1fb8:	a9 8b       	std	Y+17, r26	; 0x11
    1fba:	32 e0       	ldi	r19, 0x02	; 2
    1fbc:	c3 16       	cp	r12, r19
    1fbe:	d1 04       	cpc	r13, r1
    1fc0:	34 f4       	brge	.+12     	; 0x1fce <__fmt_x+0x130>
    1fc2:	89 85       	ldd	r24, Y+9	; 0x09
    1fc4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fc6:	89 2b       	or	r24, r25
    1fc8:	09 f0       	breq	.+2      	; 0x1fcc <__fmt_x+0x12e>
    1fca:	4c c0       	rjmp	.+152    	; 0x2064 <__DATA_REGION_LENGTH__+0x64>
    1fcc:	73 c0       	rjmp	.+230    	; 0x20b4 <__DATA_REGION_LENGTH__+0xb4>
    1fce:	92 01       	movw	r18, r4
    1fd0:	a3 01       	movw	r20, r6
    1fd2:	b4 01       	movw	r22, r8
    1fd4:	c5 01       	movw	r24, r10
    1fd6:	a0 e0       	ldi	r26, 0x00	; 0
    1fd8:	0e 94 9e 21 	call	0x433c	; 0x433c <__cmpdi2_s8>
    1fdc:	81 f1       	breq	.+96     	; 0x203e <__DATA_REGION_LENGTH__+0x3e>
    1fde:	b1 e0       	ldi	r27, 0x01	; 1
    1fe0:	cb 1a       	sub	r12, r27
    1fe2:	d1 08       	sbc	r13, r1
    1fe4:	c2 01       	movw	r24, r4
    1fe6:	8f 70       	andi	r24, 0x0F	; 15
    1fe8:	99 27       	eor	r25, r25
    1fea:	8a 30       	cpi	r24, 0x0A	; 10
    1fec:	91 05       	cpc	r25, r1
    1fee:	14 f4       	brge	.+4      	; 0x1ff4 <__fmt_x+0x156>
    1ff0:	c0 96       	adiw	r24, 0x30	; 48
    1ff2:	02 c0       	rjmp	.+4      	; 0x1ff8 <__fmt_x+0x15a>
    1ff4:	89 5a       	subi	r24, 0xA9	; 169
    1ff6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ff8:	e9 89       	ldd	r30, Y+17	; 0x11
    1ffa:	fa 89       	ldd	r31, Y+18	; 0x12
    1ffc:	7a 97       	sbiw	r30, 0x1a	; 26
    1ffe:	48 f4       	brcc	.+18     	; 0x2012 <__DATA_REGION_LENGTH__+0x12>
    2000:	9c 01       	movw	r18, r24
    2002:	20 62       	ori	r18, 0x20	; 32
    2004:	21 56       	subi	r18, 0x61	; 97
    2006:	31 09       	sbc	r19, r1
    2008:	2a 31       	cpi	r18, 0x1A	; 26
    200a:	31 05       	cpc	r19, r1
    200c:	10 f4       	brcc	.+4      	; 0x2012 <__DATA_REGION_LENGTH__+0x12>
    200e:	0e 94 d5 21 	call	0x43aa	; 0x43aa <toupper>
    2012:	f1 01       	movw	r30, r2
    2014:	ec 0d       	add	r30, r12
    2016:	fd 1d       	adc	r31, r13
    2018:	80 83       	st	Z, r24
    201a:	2b 81       	ldd	r18, Y+3	; 0x03
    201c:	3c 81       	ldd	r19, Y+4	; 0x04
    201e:	21 50       	subi	r18, 0x01	; 1
    2020:	31 09       	sbc	r19, r1
    2022:	3c 83       	std	Y+4, r19	; 0x04
    2024:	2b 83       	std	Y+3, r18	; 0x03
    2026:	92 01       	movw	r18, r4
    2028:	a3 01       	movw	r20, r6
    202a:	b4 01       	movw	r22, r8
    202c:	c5 01       	movw	r24, r10
    202e:	04 e0       	ldi	r16, 0x04	; 4
    2030:	0e 94 d5 1f 	call	0x3faa	; 0x3faa <__lshrdi3>
    2034:	29 01       	movw	r4, r18
    2036:	3a 01       	movw	r6, r20
    2038:	4b 01       	movw	r8, r22
    203a:	5c 01       	movw	r10, r24
    203c:	be cf       	rjmp	.-132    	; 0x1fba <__fmt_x+0x11c>
    203e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2040:	9e 85       	ldd	r25, Y+14	; 0x0e
    2042:	ab 81       	ldd	r26, Y+3	; 0x03
    2044:	bc 81       	ldd	r27, Y+4	; 0x04
    2046:	8a 0f       	add	r24, r26
    2048:	9b 1f       	adc	r25, r27
    204a:	18 16       	cp	r1, r24
    204c:	19 06       	cpc	r1, r25
    204e:	3c f2       	brlt	.-114    	; 0x1fde <__fmt_x+0x140>
    2050:	1a 16       	cp	r1, r26
    2052:	1b 06       	cpc	r1, r27
    2054:	0c f0       	brlt	.+2      	; 0x2058 <__DATA_REGION_LENGTH__+0x58>
    2056:	b5 cf       	rjmp	.-150    	; 0x1fc2 <__fmt_x+0x124>
    2058:	ef 85       	ldd	r30, Y+15	; 0x0f
    205a:	f8 89       	ldd	r31, Y+16	; 0x10
    205c:	ef 2b       	or	r30, r31
    205e:	09 f0       	breq	.+2      	; 0x2062 <__DATA_REGION_LENGTH__+0x62>
    2060:	be cf       	rjmp	.-132    	; 0x1fde <__fmt_x+0x140>
    2062:	af cf       	rjmp	.-162    	; 0x1fc2 <__fmt_x+0x124>
    2064:	ab 89       	ldd	r26, Y+19	; 0x13
    2066:	bc 89       	ldd	r27, Y+20	; 0x14
    2068:	2c 91       	ld	r18, X
    206a:	11 96       	adiw	r26, 0x01	; 1
    206c:	3c 91       	ld	r19, X
    206e:	11 97       	sbiw	r26, 0x01	; 1
    2070:	12 96       	adiw	r26, 0x02	; 2
    2072:	4c 91       	ld	r20, X
    2074:	12 97       	sbiw	r26, 0x02	; 2
    2076:	13 96       	adiw	r26, 0x03	; 3
    2078:	5c 91       	ld	r21, X
    207a:	13 97       	sbiw	r26, 0x03	; 3
    207c:	14 96       	adiw	r26, 0x04	; 4
    207e:	6c 91       	ld	r22, X
    2080:	14 97       	sbiw	r26, 0x04	; 4
    2082:	15 96       	adiw	r26, 0x05	; 5
    2084:	7c 91       	ld	r23, X
    2086:	15 97       	sbiw	r26, 0x05	; 5
    2088:	16 96       	adiw	r26, 0x06	; 6
    208a:	8c 91       	ld	r24, X
    208c:	16 97       	sbiw	r26, 0x06	; 6
    208e:	17 96       	adiw	r26, 0x07	; 7
    2090:	9c 91       	ld	r25, X
    2092:	a0 e0       	ldi	r26, 0x00	; 0
    2094:	0e 94 9e 21 	call	0x433c	; 0x433c <__cmpdi2_s8>
    2098:	69 f0       	breq	.+26     	; 0x20b4 <__DATA_REGION_LENGTH__+0xb4>
    209a:	f1 01       	movw	r30, r2
    209c:	ec 0d       	add	r30, r12
    209e:	fd 1d       	adc	r31, r13
    20a0:	31 97       	sbiw	r30, 0x01	; 1
    20a2:	10 83       	st	Z, r17
    20a4:	b2 e0       	ldi	r27, 0x02	; 2
    20a6:	cb 1a       	sub	r12, r27
    20a8:	d1 08       	sbc	r13, r1
    20aa:	f1 01       	movw	r30, r2
    20ac:	ec 0d       	add	r30, r12
    20ae:	fd 1d       	adc	r31, r13
    20b0:	80 e3       	ldi	r24, 0x30	; 48
    20b2:	80 83       	st	Z, r24
    20b4:	eb 85       	ldd	r30, Y+11	; 0x0b
    20b6:	fc 85       	ldd	r31, Y+12	; 0x0c
    20b8:	ef 2b       	or	r30, r31
    20ba:	41 f0       	breq	.+16     	; 0x20cc <__DATA_REGION_LENGTH__+0xcc>
    20bc:	f1 e0       	ldi	r31, 0x01	; 1
    20be:	cf 1a       	sub	r12, r31
    20c0:	d1 08       	sbc	r13, r1
    20c2:	f1 01       	movw	r30, r2
    20c4:	ec 0d       	add	r30, r12
    20c6:	fd 1d       	adc	r31, r13
    20c8:	80 e2       	ldi	r24, 0x20	; 32
    20ca:	80 83       	st	Z, r24
    20cc:	a9 81       	ldd	r26, Y+1	; 0x01
    20ce:	ba 81       	ldd	r27, Y+2	; 0x02
    20d0:	18 96       	adiw	r26, 0x08	; 8
    20d2:	2d 91       	ld	r18, X+
    20d4:	3c 91       	ld	r19, X
    20d6:	19 97       	sbiw	r26, 0x09	; 9
    20d8:	21 50       	subi	r18, 0x01	; 1
    20da:	31 09       	sbc	r19, r1
    20dc:	2c 19       	sub	r18, r12
    20de:	3d 09       	sbc	r19, r13
    20e0:	c2 0c       	add	r12, r2
    20e2:	d3 1c       	adc	r13, r3
    20e4:	a6 01       	movw	r20, r12
    20e6:	60 e8       	ldi	r22, 0x80	; 128
    20e8:	0d 81       	ldd	r16, Y+5	; 0x05
    20ea:	1e 81       	ldd	r17, Y+6	; 0x06
    20ec:	8f 81       	ldd	r24, Y+7	; 0x07
    20ee:	98 85       	ldd	r25, Y+8	; 0x08
    20f0:	0e 94 8b 14 	call	0x2916	; 0x2916 <__pad>
    20f4:	9c 01       	movw	r18, r24
    20f6:	ef 81       	ldd	r30, Y+7	; 0x07
    20f8:	f8 85       	ldd	r31, Y+8	; 0x08
    20fa:	80 81       	ld	r24, Z
    20fc:	91 81       	ldd	r25, Z+1	; 0x01
    20fe:	90 ff       	sbrs	r25, 0
    2100:	09 c0       	rjmp	.+18     	; 0x2114 <__DATA_REGION_LENGTH__+0x114>
    2102:	a9 81       	ldd	r26, Y+1	; 0x01
    2104:	ba 81       	ldd	r27, Y+2	; 0x02
    2106:	12 96       	adiw	r26, 0x02	; 2
    2108:	8d 91       	ld	r24, X+
    210a:	9c 91       	ld	r25, X
    210c:	13 97       	sbiw	r26, 0x03	; 3
    210e:	82 17       	cp	r24, r18
    2110:	93 07       	cpc	r25, r19
    2112:	0c f4       	brge	.+2      	; 0x2116 <__DATA_REGION_LENGTH__+0x116>
    2114:	c9 01       	movw	r24, r18
    2116:	64 96       	adiw	r28, 0x14	; 20
    2118:	e2 e1       	ldi	r30, 0x12	; 18
    211a:	0c 94 28 20 	jmp	0x4050	; 0x4050 <__epilogue_restores__>

Disassembly of section .text.__pop_float:

00003f2a <__pop_float>:
    3f2a:	fa 01       	movw	r30, r20
    3f2c:	60 38       	cpi	r22, 0x80	; 128
    3f2e:	71 05       	cpc	r23, r1
    3f30:	cc f0       	brlt	.+50     	; 0x3f64 <__pop_float+0x3a>
    3f32:	62 38       	cpi	r22, 0x82	; 130
    3f34:	71 05       	cpc	r23, r1
    3f36:	1c f0       	brlt	.+6      	; 0x3f3e <__pop_float+0x14>
    3f38:	63 38       	cpi	r22, 0x83	; 131
    3f3a:	71 05       	cpc	r23, r1
    3f3c:	99 f4       	brne	.+38     	; 0x3f64 <__pop_float+0x3a>
    3f3e:	a0 81       	ld	r26, Z
    3f40:	b1 81       	ldd	r27, Z+1	; 0x01
    3f42:	9d 01       	movw	r18, r26
    3f44:	2c 5f       	subi	r18, 0xFC	; 252
    3f46:	3f 4f       	sbci	r19, 0xFF	; 255
    3f48:	31 83       	std	Z+1, r19	; 0x01
    3f4a:	20 83       	st	Z, r18
    3f4c:	4d 91       	ld	r20, X+
    3f4e:	5d 91       	ld	r21, X+
    3f50:	6d 91       	ld	r22, X+
    3f52:	7c 91       	ld	r23, X
    3f54:	fc 01       	movw	r30, r24
    3f56:	40 83       	st	Z, r20
    3f58:	51 83       	std	Z+1, r21	; 0x01
    3f5a:	62 83       	std	Z+2, r22	; 0x02
    3f5c:	73 83       	std	Z+3, r23	; 0x03
    3f5e:	81 e0       	ldi	r24, 0x01	; 1
    3f60:	90 e0       	ldi	r25, 0x00	; 0
    3f62:	08 95       	ret
    3f64:	80 e0       	ldi	r24, 0x00	; 0
    3f66:	90 e0       	ldi	r25, 0x00	; 0
    3f68:	08 95       	ret

Disassembly of section .text.__pop_int:

0000229c <__pop_int>:
    229c:	0f 93       	push	r16
    229e:	1f 93       	push	r17
    22a0:	cf 93       	push	r28
    22a2:	df 93       	push	r29
    22a4:	fc 01       	movw	r30, r24
    22a6:	d9 01       	movw	r26, r18
    22a8:	68 38       	cpi	r22, 0x88	; 136
    22aa:	71 05       	cpc	r23, r1
    22ac:	31 f1       	breq	.+76     	; 0x22fa <__pop_int+0x5e>
    22ae:	94 f4       	brge	.+36     	; 0x22d4 <__pop_int+0x38>
    22b0:	61 38       	cpi	r22, 0x81	; 129
    22b2:	71 05       	cpc	r23, r1
    22b4:	b1 f1       	breq	.+108    	; 0x2322 <__pop_int+0x86>
    22b6:	2c f4       	brge	.+10     	; 0x22c2 <__pop_int+0x26>
    22b8:	60 38       	cpi	r22, 0x80	; 128
    22ba:	71 05       	cpc	r23, r1
    22bc:	09 f4       	brne	.+2      	; 0x22c0 <__pop_int+0x24>
    22be:	78 c0       	rjmp	.+240    	; 0x23b0 <__pop_int+0x114>
    22c0:	9f c0       	rjmp	.+318    	; 0x2400 <__pop_int+0x164>
    22c2:	62 38       	cpi	r22, 0x82	; 130
    22c4:	71 05       	cpc	r23, r1
    22c6:	09 f4       	brne	.+2      	; 0x22ca <__pop_int+0x2e>
    22c8:	59 c0       	rjmp	.+178    	; 0x237c <__pop_int+0xe0>
    22ca:	64 38       	cpi	r22, 0x84	; 132
    22cc:	71 05       	cpc	r23, r1
    22ce:	09 f4       	brne	.+2      	; 0x22d2 <__pop_int+0x36>
    22d0:	6f c0       	rjmp	.+222    	; 0x23b0 <__pop_int+0x114>
    22d2:	96 c0       	rjmp	.+300    	; 0x2400 <__pop_int+0x164>
    22d4:	60 3a       	cpi	r22, 0xA0	; 160
    22d6:	71 05       	cpc	r23, r1
    22d8:	09 f4       	brne	.+2      	; 0x22dc <__pop_int+0x40>
    22da:	48 c0       	rjmp	.+144    	; 0x236c <__pop_int+0xd0>
    22dc:	2c f4       	brge	.+10     	; 0x22e8 <__pop_int+0x4c>
    22de:	60 39       	cpi	r22, 0x90	; 144
    22e0:	71 05       	cpc	r23, r1
    22e2:	09 f4       	brne	.+2      	; 0x22e6 <__pop_int+0x4a>
    22e4:	4b c0       	rjmp	.+150    	; 0x237c <__pop_int+0xe0>
    22e6:	8c c0       	rjmp	.+280    	; 0x2400 <__pop_int+0x164>
    22e8:	60 3c       	cpi	r22, 0xC0	; 192
    22ea:	71 05       	cpc	r23, r1
    22ec:	09 f4       	brne	.+2      	; 0x22f0 <__pop_int+0x54>
    22ee:	76 c0       	rjmp	.+236    	; 0x23dc <__pop_int+0x140>
    22f0:	60 3f       	cpi	r22, 0xF0	; 240
    22f2:	71 05       	cpc	r23, r1
    22f4:	09 f4       	brne	.+2      	; 0x22f8 <__pop_int+0x5c>
    22f6:	72 c0       	rjmp	.+228    	; 0x23dc <__pop_int+0x140>
    22f8:	83 c0       	rjmp	.+262    	; 0x2400 <__pop_int+0x164>
    22fa:	cd 91       	ld	r28, X+
    22fc:	dc 91       	ld	r29, X
    22fe:	11 97       	sbiw	r26, 0x01	; 1
    2300:	ce 01       	movw	r24, r28
    2302:	02 96       	adiw	r24, 0x02	; 2
    2304:	8d 93       	st	X+, r24
    2306:	9c 93       	st	X, r25
    2308:	45 2b       	or	r20, r21
    230a:	39 f0       	breq	.+14     	; 0x231a <__pop_int+0x7e>
    230c:	98 81       	ld	r25, Y
    230e:	89 2f       	mov	r24, r25
    2310:	88 0f       	add	r24, r24
    2312:	88 0b       	sbc	r24, r24
    2314:	90 83       	st	Z, r25
    2316:	81 83       	std	Z+1, r24	; 0x01
    2318:	5b c0       	rjmp	.+182    	; 0x23d0 <__pop_int+0x134>
    231a:	88 81       	ld	r24, Y
    231c:	80 83       	st	Z, r24
    231e:	11 82       	std	Z+1, r1	; 0x01
    2320:	68 c0       	rjmp	.+208    	; 0x23f2 <__pop_int+0x156>
    2322:	cd 91       	ld	r28, X+
    2324:	dc 91       	ld	r29, X
    2326:	11 97       	sbiw	r26, 0x01	; 1
    2328:	ce 01       	movw	r24, r28
    232a:	04 96       	adiw	r24, 0x04	; 4
    232c:	8d 93       	st	X+, r24
    232e:	9c 93       	st	X, r25
    2330:	45 2b       	or	r20, r21
    2332:	99 f0       	breq	.+38     	; 0x235a <__pop_int+0xbe>
    2334:	88 81       	ld	r24, Y
    2336:	99 81       	ldd	r25, Y+1	; 0x01
    2338:	aa 81       	ldd	r26, Y+2	; 0x02
    233a:	bb 81       	ldd	r27, Y+3	; 0x03
    233c:	ac 01       	movw	r20, r24
    233e:	bd 01       	movw	r22, r26
    2340:	77 0f       	add	r23, r23
    2342:	44 0b       	sbc	r20, r20
    2344:	54 2f       	mov	r21, r20
    2346:	ba 01       	movw	r22, r20
    2348:	80 83       	st	Z, r24
    234a:	91 83       	std	Z+1, r25	; 0x01
    234c:	a2 83       	std	Z+2, r26	; 0x02
    234e:	b3 83       	std	Z+3, r27	; 0x03
    2350:	44 83       	std	Z+4, r20	; 0x04
    2352:	45 83       	std	Z+5, r20	; 0x05
    2354:	46 83       	std	Z+6, r20	; 0x06
    2356:	47 83       	std	Z+7, r20	; 0x07
    2358:	28 c0       	rjmp	.+80     	; 0x23aa <__pop_int+0x10e>
    235a:	08 81       	ld	r16, Y
    235c:	19 81       	ldd	r17, Y+1	; 0x01
    235e:	2a 81       	ldd	r18, Y+2	; 0x02
    2360:	3b 81       	ldd	r19, Y+3	; 0x03
    2362:	00 83       	st	Z, r16
    2364:	11 83       	std	Z+1, r17	; 0x01
    2366:	22 83       	std	Z+2, r18	; 0x02
    2368:	33 83       	std	Z+3, r19	; 0x03
    236a:	45 c0       	rjmp	.+138    	; 0x23f6 <__pop_int+0x15a>
    236c:	cd 91       	ld	r28, X+
    236e:	dc 91       	ld	r29, X
    2370:	11 97       	sbiw	r26, 0x01	; 1
    2372:	ce 01       	movw	r24, r28
    2374:	02 96       	adiw	r24, 0x02	; 2
    2376:	8d 93       	st	X+, r24
    2378:	9c 93       	st	X, r25
    237a:	23 c0       	rjmp	.+70     	; 0x23c2 <__pop_int+0x126>
    237c:	cd 91       	ld	r28, X+
    237e:	dc 91       	ld	r29, X
    2380:	11 97       	sbiw	r26, 0x01	; 1
    2382:	ce 01       	movw	r24, r28
    2384:	08 96       	adiw	r24, 0x08	; 8
    2386:	8d 93       	st	X+, r24
    2388:	9c 93       	st	X, r25
    238a:	78 81       	ld	r23, Y
    238c:	69 81       	ldd	r22, Y+1	; 0x01
    238e:	5a 81       	ldd	r21, Y+2	; 0x02
    2390:	4b 81       	ldd	r20, Y+3	; 0x03
    2392:	3c 81       	ldd	r19, Y+4	; 0x04
    2394:	2d 81       	ldd	r18, Y+5	; 0x05
    2396:	9e 81       	ldd	r25, Y+6	; 0x06
    2398:	8f 81       	ldd	r24, Y+7	; 0x07
    239a:	70 83       	st	Z, r23
    239c:	61 83       	std	Z+1, r22	; 0x01
    239e:	52 83       	std	Z+2, r21	; 0x02
    23a0:	43 83       	std	Z+3, r20	; 0x03
    23a2:	34 83       	std	Z+4, r19	; 0x04
    23a4:	25 83       	std	Z+5, r18	; 0x05
    23a6:	96 83       	std	Z+6, r25	; 0x06
    23a8:	87 83       	std	Z+7, r24	; 0x07
    23aa:	81 e0       	ldi	r24, 0x01	; 1
    23ac:	90 e0       	ldi	r25, 0x00	; 0
    23ae:	2a c0       	rjmp	.+84     	; 0x2404 <__pop_int+0x168>
    23b0:	cd 91       	ld	r28, X+
    23b2:	dc 91       	ld	r29, X
    23b4:	11 97       	sbiw	r26, 0x01	; 1
    23b6:	ce 01       	movw	r24, r28
    23b8:	02 96       	adiw	r24, 0x02	; 2
    23ba:	8d 93       	st	X+, r24
    23bc:	9c 93       	st	X, r25
    23be:	45 2b       	or	r20, r21
    23c0:	a1 f0       	breq	.+40     	; 0x23ea <__pop_int+0x14e>
    23c2:	99 81       	ldd	r25, Y+1	; 0x01
    23c4:	28 81       	ld	r18, Y
    23c6:	89 2f       	mov	r24, r25
    23c8:	88 0f       	add	r24, r24
    23ca:	88 0b       	sbc	r24, r24
    23cc:	20 83       	st	Z, r18
    23ce:	91 83       	std	Z+1, r25	; 0x01
    23d0:	82 83       	std	Z+2, r24	; 0x02
    23d2:	83 83       	std	Z+3, r24	; 0x03
    23d4:	84 83       	std	Z+4, r24	; 0x04
    23d6:	85 83       	std	Z+5, r24	; 0x05
    23d8:	86 83       	std	Z+6, r24	; 0x06
    23da:	e6 cf       	rjmp	.-52     	; 0x23a8 <__pop_int+0x10c>
    23dc:	cd 91       	ld	r28, X+
    23de:	dc 91       	ld	r29, X
    23e0:	11 97       	sbiw	r26, 0x01	; 1
    23e2:	ce 01       	movw	r24, r28
    23e4:	02 96       	adiw	r24, 0x02	; 2
    23e6:	8d 93       	st	X+, r24
    23e8:	9c 93       	st	X, r25
    23ea:	08 81       	ld	r16, Y
    23ec:	19 81       	ldd	r17, Y+1	; 0x01
    23ee:	00 83       	st	Z, r16
    23f0:	11 83       	std	Z+1, r17	; 0x01
    23f2:	12 82       	std	Z+2, r1	; 0x02
    23f4:	13 82       	std	Z+3, r1	; 0x03
    23f6:	14 82       	std	Z+4, r1	; 0x04
    23f8:	15 82       	std	Z+5, r1	; 0x05
    23fa:	16 82       	std	Z+6, r1	; 0x06
    23fc:	17 82       	std	Z+7, r1	; 0x07
    23fe:	d5 cf       	rjmp	.-86     	; 0x23aa <__pop_int+0x10e>
    2400:	80 e0       	ldi	r24, 0x00	; 0
    2402:	90 e0       	ldi	r25, 0x00	; 0
    2404:	df 91       	pop	r29
    2406:	cf 91       	pop	r28
    2408:	1f 91       	pop	r17
    240a:	0f 91       	pop	r16
    240c:	08 95       	ret

Disassembly of section .text.__pop_ptr:

00002b02 <__pop_ptr>:
    2b02:	cf 93       	push	r28
    2b04:	df 93       	push	r29
    2b06:	dc 01       	movw	r26, r24
    2b08:	f9 01       	movw	r30, r18
    2b0a:	64 38       	cpi	r22, 0x84	; 132
    2b0c:	71 05       	cpc	r23, r1
    2b0e:	d9 f1       	breq	.+118    	; 0x2b86 <__pop_ptr+0x84>
    2b10:	64 f4       	brge	.+24     	; 0x2b2a <__pop_ptr+0x28>
    2b12:	61 38       	cpi	r22, 0x81	; 129
    2b14:	71 05       	cpc	r23, r1
    2b16:	21 f1       	breq	.+72     	; 0x2b60 <__pop_ptr+0x5e>
    2b18:	62 38       	cpi	r22, 0x82	; 130
    2b1a:	71 05       	cpc	r23, r1
    2b1c:	09 f4       	brne	.+2      	; 0x2b20 <__pop_ptr+0x1e>
    2b1e:	40 c0       	rjmp	.+128    	; 0x2ba0 <__pop_ptr+0x9e>
    2b20:	60 38       	cpi	r22, 0x80	; 128
    2b22:	71 05       	cpc	r23, r1
    2b24:	09 f0       	breq	.+2      	; 0x2b28 <__pop_ptr+0x26>
    2b26:	54 c0       	rjmp	.+168    	; 0x2bd0 <__pop_ptr+0xce>
    2b28:	2e c0       	rjmp	.+92     	; 0x2b86 <__pop_ptr+0x84>
    2b2a:	60 39       	cpi	r22, 0x90	; 144
    2b2c:	71 05       	cpc	r23, r1
    2b2e:	c1 f1       	breq	.+112    	; 0x2ba0 <__pop_ptr+0x9e>
    2b30:	84 f4       	brge	.+32     	; 0x2b52 <__pop_ptr+0x50>
    2b32:	68 38       	cpi	r22, 0x88	; 136
    2b34:	71 05       	cpc	r23, r1
    2b36:	09 f0       	breq	.+2      	; 0x2b3a <__pop_ptr+0x38>
    2b38:	4b c0       	rjmp	.+150    	; 0x2bd0 <__pop_ptr+0xce>
    2b3a:	c0 81       	ld	r28, Z
    2b3c:	d1 81       	ldd	r29, Z+1	; 0x01
    2b3e:	ce 01       	movw	r24, r28
    2b40:	02 96       	adiw	r24, 0x02	; 2
    2b42:	91 83       	std	Z+1, r25	; 0x01
    2b44:	80 83       	st	Z, r24
    2b46:	e8 81       	ld	r30, Y
    2b48:	f9 81       	ldd	r31, Y+1	; 0x01
    2b4a:	ed 93       	st	X+, r30
    2b4c:	fc 93       	st	X, r31
    2b4e:	40 83       	st	Z, r20
    2b50:	3c c0       	rjmp	.+120    	; 0x2bca <__pop_ptr+0xc8>
    2b52:	60 3a       	cpi	r22, 0xA0	; 160
    2b54:	71 05       	cpc	r23, r1
    2b56:	b9 f0       	breq	.+46     	; 0x2b86 <__pop_ptr+0x84>
    2b58:	60 3c       	cpi	r22, 0xC0	; 192
    2b5a:	71 05       	cpc	r23, r1
    2b5c:	a1 f0       	breq	.+40     	; 0x2b86 <__pop_ptr+0x84>
    2b5e:	38 c0       	rjmp	.+112    	; 0x2bd0 <__pop_ptr+0xce>
    2b60:	c0 81       	ld	r28, Z
    2b62:	d1 81       	ldd	r29, Z+1	; 0x01
    2b64:	ce 01       	movw	r24, r28
    2b66:	02 96       	adiw	r24, 0x02	; 2
    2b68:	91 83       	std	Z+1, r25	; 0x01
    2b6a:	80 83       	st	Z, r24
    2b6c:	e8 81       	ld	r30, Y
    2b6e:	f9 81       	ldd	r31, Y+1	; 0x01
    2b70:	ed 93       	st	X+, r30
    2b72:	fc 93       	st	X, r31
    2b74:	05 2e       	mov	r0, r21
    2b76:	00 0c       	add	r0, r0
    2b78:	66 0b       	sbc	r22, r22
    2b7a:	77 0b       	sbc	r23, r23
    2b7c:	40 83       	st	Z, r20
    2b7e:	51 83       	std	Z+1, r21	; 0x01
    2b80:	62 83       	std	Z+2, r22	; 0x02
    2b82:	73 83       	std	Z+3, r23	; 0x03
    2b84:	22 c0       	rjmp	.+68     	; 0x2bca <__pop_ptr+0xc8>
    2b86:	c0 81       	ld	r28, Z
    2b88:	d1 81       	ldd	r29, Z+1	; 0x01
    2b8a:	ce 01       	movw	r24, r28
    2b8c:	02 96       	adiw	r24, 0x02	; 2
    2b8e:	91 83       	std	Z+1, r25	; 0x01
    2b90:	80 83       	st	Z, r24
    2b92:	e8 81       	ld	r30, Y
    2b94:	f9 81       	ldd	r31, Y+1	; 0x01
    2b96:	ed 93       	st	X+, r30
    2b98:	fc 93       	st	X, r31
    2b9a:	51 83       	std	Z+1, r21	; 0x01
    2b9c:	40 83       	st	Z, r20
    2b9e:	15 c0       	rjmp	.+42     	; 0x2bca <__pop_ptr+0xc8>
    2ba0:	c0 81       	ld	r28, Z
    2ba2:	d1 81       	ldd	r29, Z+1	; 0x01
    2ba4:	ce 01       	movw	r24, r28
    2ba6:	02 96       	adiw	r24, 0x02	; 2
    2ba8:	91 83       	std	Z+1, r25	; 0x01
    2baa:	80 83       	st	Z, r24
    2bac:	e8 81       	ld	r30, Y
    2bae:	f9 81       	ldd	r31, Y+1	; 0x01
    2bb0:	ed 93       	st	X+, r30
    2bb2:	fc 93       	st	X, r31
    2bb4:	51 83       	std	Z+1, r21	; 0x01
    2bb6:	40 83       	st	Z, r20
    2bb8:	85 2f       	mov	r24, r21
    2bba:	88 0f       	add	r24, r24
    2bbc:	88 0b       	sbc	r24, r24
    2bbe:	82 83       	std	Z+2, r24	; 0x02
    2bc0:	83 83       	std	Z+3, r24	; 0x03
    2bc2:	84 83       	std	Z+4, r24	; 0x04
    2bc4:	85 83       	std	Z+5, r24	; 0x05
    2bc6:	86 83       	std	Z+6, r24	; 0x06
    2bc8:	87 83       	std	Z+7, r24	; 0x07
    2bca:	81 e0       	ldi	r24, 0x01	; 1
    2bcc:	90 e0       	ldi	r25, 0x00	; 0
    2bce:	02 c0       	rjmp	.+4      	; 0x2bd4 <__pop_ptr+0xd2>
    2bd0:	80 e0       	ldi	r24, 0x00	; 0
    2bd2:	90 e0       	ldi	r25, 0x00	; 0
    2bd4:	df 91       	pop	r29
    2bd6:	cf 91       	pop	r28
    2bd8:	08 95       	ret

Disassembly of section .text.sprintf:

000041b6 <sprintf>:
    41b6:	a0 e0       	ldi	r26, 0x00	; 0
    41b8:	b0 e0       	ldi	r27, 0x00	; 0
    41ba:	e1 ee       	ldi	r30, 0xE1	; 225
    41bc:	f0 e2       	ldi	r31, 0x20	; 32
    41be:	0c 94 01 20 	jmp	0x4002	; 0x4002 <__prologue_saves__+0x20>
    41c2:	9e 01       	movw	r18, r28
    41c4:	25 5f       	subi	r18, 0xF5	; 245
    41c6:	3f 4f       	sbci	r19, 0xFF	; 255
    41c8:	48 85       	ldd	r20, Y+8	; 0x08
    41ca:	59 85       	ldd	r21, Y+9	; 0x09
    41cc:	6a 85       	ldd	r22, Y+10	; 0x0a
    41ce:	8e 81       	ldd	r24, Y+6	; 0x06
    41d0:	9f 81       	ldd	r25, Y+7	; 0x07
    41d2:	0e 94 86 21 	call	0x430c	; 0x430c <vsprintf>
    41d6:	e2 e0       	ldi	r30, 0x02	; 2
    41d8:	0c 94 38 20 	jmp	0x4070	; 0x4070 <__epilogue_restores__+0x20>

Disassembly of section .text.vsprintf:

0000430c <vsprintf>:
    430c:	0f 93       	push	r16
    430e:	1f 93       	push	r17
    4310:	89 01       	movw	r16, r18
    4312:	9a 01       	movw	r18, r20
    4314:	46 2f       	mov	r20, r22
    4316:	6f ef       	ldi	r22, 0xFF	; 255
    4318:	7f e7       	ldi	r23, 0x7F	; 127
    431a:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <vsnprintf>
    431e:	1f 91       	pop	r17
    4320:	0f 91       	pop	r16
    4322:	08 95       	ret

Disassembly of section .text.atoi:

00003904 <atoi>:
    3904:	cf 93       	push	r28
    3906:	9b 01       	movw	r18, r22
    3908:	48 2f       	mov	r20, r24
    390a:	f9 01       	movw	r30, r18
    390c:	54 2f       	mov	r21, r20
    390e:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    3912:	60 32       	cpi	r22, 0x20	; 32
    3914:	b9 f1       	breq	.+110    	; 0x3984 <atoi+0x80>
    3916:	86 2f       	mov	r24, r22
    3918:	06 2e       	mov	r0, r22
    391a:	00 0c       	add	r0, r0
    391c:	99 0b       	sbc	r25, r25
    391e:	09 97       	sbiw	r24, 0x09	; 9
    3920:	05 97       	sbiw	r24, 0x05	; 5
    3922:	80 f1       	brcs	.+96     	; 0x3984 <atoi+0x80>
    3924:	6b 32       	cpi	r22, 0x2B	; 43
    3926:	49 f5       	brne	.+82     	; 0x397a <atoi+0x76>
    3928:	a0 e0       	ldi	r26, 0x00	; 0
    392a:	b0 e0       	ldi	r27, 0x00	; 0
    392c:	2f 5f       	subi	r18, 0xFF	; 255
    392e:	3f 4f       	sbci	r19, 0xFF	; 255
    3930:	4f 4f       	sbci	r20, 0xFF	; 255
    3932:	02 c0       	rjmp	.+4      	; 0x3938 <atoi+0x34>
    3934:	a0 e0       	ldi	r26, 0x00	; 0
    3936:	b0 e0       	ldi	r27, 0x00	; 0
    3938:	80 e0       	ldi	r24, 0x00	; 0
    393a:	90 e0       	ldi	r25, 0x00	; 0
    393c:	ca e0       	ldi	r28, 0x0A	; 10
    393e:	f9 01       	movw	r30, r18
    3940:	54 2f       	mov	r21, r20
    3942:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    3946:	06 2e       	mov	r0, r22
    3948:	00 0c       	add	r0, r0
    394a:	77 0b       	sbc	r23, r23
    394c:	60 53       	subi	r22, 0x30	; 48
    394e:	71 09       	sbc	r23, r1
    3950:	6a 30       	cpi	r22, 0x0A	; 10
    3952:	71 05       	cpc	r23, r1
    3954:	60 f4       	brcc	.+24     	; 0x396e <atoi+0x6a>
    3956:	c8 9f       	mul	r28, r24
    3958:	f0 01       	movw	r30, r0
    395a:	c9 9f       	mul	r28, r25
    395c:	f0 0d       	add	r31, r0
    395e:	11 24       	eor	r1, r1
    3960:	2f 5f       	subi	r18, 0xFF	; 255
    3962:	3f 4f       	sbci	r19, 0xFF	; 255
    3964:	4f 4f       	sbci	r20, 0xFF	; 255
    3966:	cf 01       	movw	r24, r30
    3968:	86 1b       	sub	r24, r22
    396a:	97 0b       	sbc	r25, r23
    396c:	e8 cf       	rjmp	.-48     	; 0x393e <atoi+0x3a>
    396e:	ab 2b       	or	r26, r27
    3970:	69 f4       	brne	.+26     	; 0x398c <atoi+0x88>
    3972:	91 95       	neg	r25
    3974:	81 95       	neg	r24
    3976:	91 09       	sbc	r25, r1
    3978:	09 c0       	rjmp	.+18     	; 0x398c <atoi+0x88>
    397a:	6d 32       	cpi	r22, 0x2D	; 45
    397c:	d9 f6       	brne	.-74     	; 0x3934 <atoi+0x30>
    397e:	a1 e0       	ldi	r26, 0x01	; 1
    3980:	b0 e0       	ldi	r27, 0x00	; 0
    3982:	d4 cf       	rjmp	.-88     	; 0x392c <atoi+0x28>
    3984:	2f 5f       	subi	r18, 0xFF	; 255
    3986:	3f 4f       	sbci	r19, 0xFF	; 255
    3988:	4f 4f       	sbci	r20, 0xFF	; 255
    398a:	bf cf       	rjmp	.-130    	; 0x390a <atoi+0x6>
    398c:	cf 91       	pop	r28
    398e:	08 95       	ret

Disassembly of section .text.memset:

00004398 <memset>:
    4398:	fc 01       	movw	r30, r24
    439a:	48 0f       	add	r20, r24
    439c:	59 1f       	adc	r21, r25
    439e:	e4 17       	cp	r30, r20
    43a0:	f5 07       	cpc	r31, r21
    43a2:	11 f0       	breq	.+4      	; 0x43a8 <memset+0x10>
    43a4:	61 93       	st	Z+, r22
    43a6:	fb cf       	rjmp	.-10     	; 0x439e <memset+0x6>
    43a8:	08 95       	ret

Disassembly of section .text.strcmp:

00003e60 <strcmp>:
    3e60:	cf 92       	push	r12
    3e62:	df 92       	push	r13
    3e64:	ef 92       	push	r14
    3e66:	6b 01       	movw	r12, r22
    3e68:	e8 2e       	mov	r14, r24
    3e6a:	f6 01       	movw	r30, r12
    3e6c:	5e 2d       	mov	r21, r14
    3e6e:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    3e72:	86 2f       	mov	r24, r22
    3e74:	f9 01       	movw	r30, r18
    3e76:	54 2f       	mov	r21, r20
    3e78:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    3e7c:	86 13       	cpse	r24, r22
    3e7e:	0b c0       	rjmp	.+22     	; 0x3e96 <strcmp+0x36>
    3e80:	88 23       	and	r24, r24
    3e82:	41 f0       	breq	.+16     	; 0x3e94 <strcmp+0x34>
    3e84:	8f ef       	ldi	r24, 0xFF	; 255
    3e86:	c8 1a       	sub	r12, r24
    3e88:	d8 0a       	sbc	r13, r24
    3e8a:	e8 0a       	sbc	r14, r24
    3e8c:	2f 5f       	subi	r18, 0xFF	; 255
    3e8e:	3f 4f       	sbci	r19, 0xFF	; 255
    3e90:	4f 4f       	sbci	r20, 0xFF	; 255
    3e92:	eb cf       	rjmp	.-42     	; 0x3e6a <strcmp+0xa>
    3e94:	68 2f       	mov	r22, r24
    3e96:	90 e0       	ldi	r25, 0x00	; 0
    3e98:	86 1b       	sub	r24, r22
    3e9a:	91 09       	sbc	r25, r1
    3e9c:	ef 90       	pop	r14
    3e9e:	df 90       	pop	r13
    3ea0:	cf 90       	pop	r12
    3ea2:	08 95       	ret

Disassembly of section .text.strlen:

00004200 <strlen>:
    4200:	9b 01       	movw	r18, r22
    4202:	48 2f       	mov	r20, r24
    4204:	a8 2f       	mov	r26, r24
    4206:	cb 01       	movw	r24, r22
    4208:	fc 01       	movw	r30, r24
    420a:	5a 2f       	mov	r21, r26
    420c:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    4210:	66 23       	and	r22, r22
    4212:	19 f0       	breq	.+6      	; 0x421a <strlen+0x1a>
    4214:	01 96       	adiw	r24, 0x01	; 1
    4216:	a1 1d       	adc	r26, r1
    4218:	f7 cf       	rjmp	.-18     	; 0x4208 <strlen+0x8>
    421a:	64 2f       	mov	r22, r20
    421c:	a9 01       	movw	r20, r18
    421e:	84 1b       	sub	r24, r20
    4220:	95 0b       	sbc	r25, r21
    4222:	08 95       	ret

Disassembly of section .text.tolower:

000043bc <tolower>:
    43bc:	9c 01       	movw	r18, r24
    43be:	21 54       	subi	r18, 0x41	; 65
    43c0:	31 09       	sbc	r19, r1
    43c2:	2a 31       	cpi	r18, 0x1A	; 26
    43c4:	31 05       	cpc	r19, r1
    43c6:	08 f4       	brcc	.+2      	; 0x43ca <tolower+0xe>
    43c8:	80 62       	ori	r24, 0x20	; 32
    43ca:	08 95       	ret

Disassembly of section .text.toupper:

000043aa <toupper>:
    43aa:	9c 01       	movw	r18, r24
    43ac:	21 56       	subi	r18, 0x61	; 97
    43ae:	31 09       	sbc	r19, r1
    43b0:	2a 31       	cpi	r18, 0x1A	; 26
    43b2:	31 05       	cpc	r19, r1
    43b4:	10 f4       	brcc	.+4      	; 0x43ba <toupper+0x10>
    43b6:	8f 75       	andi	r24, 0x5F	; 95
    43b8:	99 27       	eor	r25, r25
    43ba:	08 95       	ret

Disassembly of section .text._Exit:

000044a2 <_Exit>:
    44a2:	0e 94 bb 00 	call	0x176	; 0x176 <_exit>

Disassembly of section .text.__vsprintf:

00004324 <__vsprintf>:
    4324:	0f 93       	push	r16
    4326:	1f 93       	push	r17
    4328:	89 01       	movw	r16, r18
    432a:	9a 01       	movw	r18, r20
    432c:	46 2f       	mov	r20, r22
    432e:	6f ef       	ldi	r22, 0xFF	; 255
    4330:	7f e7       	ldi	r23, 0x7F	; 127
    4332:	0e 94 ab 1a 	call	0x3556	; 0x3556 <__vsnprintf>
    4336:	1f 91       	pop	r17
    4338:	0f 91       	pop	r16
    433a:	08 95       	ret

Disassembly of section .text.__vsnprintf:

00003556 <__vsnprintf>:
    3556:	6f 92       	push	r6
    3558:	7f 92       	push	r7
    355a:	8f 92       	push	r8
    355c:	ef 92       	push	r14
    355e:	ff 92       	push	r15
    3560:	0f 93       	push	r16
    3562:	1f 93       	push	r17
    3564:	cf 93       	push	r28
    3566:	df 93       	push	r29
    3568:	cd b7       	in	r28, 0x3d	; 61
    356a:	de b7       	in	r29, 0x3e	; 62
    356c:	61 97       	sbiw	r28, 0x11	; 17
    356e:	0f b6       	in	r0, 0x3f	; 63
    3570:	f8 94       	cli
    3572:	de bf       	out	0x3e, r29	; 62
    3574:	0f be       	out	0x3f, r0	; 63
    3576:	cd bf       	out	0x3d, r28	; 61
    3578:	fe 01       	movw	r30, r28
    357a:	31 96       	adiw	r30, 0x01	; 1
    357c:	51 e1       	ldi	r21, 0x11	; 17
    357e:	df 01       	movw	r26, r30
    3580:	1d 92       	st	X+, r1
    3582:	5a 95       	dec	r21
    3584:	e9 f7       	brne	.-6      	; 0x3580 <__vsnprintf+0x2a>
    3586:	a2 e0       	ldi	r26, 0x02	; 2
    3588:	b1 e0       	ldi	r27, 0x01	; 1
    358a:	ba 83       	std	Y+2, r27	; 0x02
    358c:	a9 83       	std	Y+1, r26	; 0x01
    358e:	9c 83       	std	Y+4, r25	; 0x04
    3590:	8b 83       	std	Y+3, r24	; 0x03
    3592:	77 ff       	sbrs	r23, 7
    3594:	09 c0       	rjmp	.+18     	; 0x35a8 <__vsnprintf+0x52>
    3596:	8f e4       	ldi	r24, 0x4F	; 79
    3598:	90 e0       	ldi	r25, 0x00	; 0
    359a:	90 93 2d 12 	sts	0x122D, r25	; 0x80122d <__errno_val+0x1>
    359e:	80 93 2c 12 	sts	0x122C, r24	; 0x80122c <__errno_val>
    35a2:	8f ef       	ldi	r24, 0xFF	; 255
    35a4:	9f ef       	ldi	r25, 0xFF	; 255
    35a6:	19 c0       	rjmp	.+50     	; 0x35da <__vsnprintf+0x84>
    35a8:	39 01       	movw	r6, r18
    35aa:	84 2e       	mov	r8, r20
    35ac:	7c 01       	movw	r14, r24
    35ae:	61 50       	subi	r22, 0x01	; 1
    35b0:	71 09       	sbc	r23, r1
    35b2:	7f 83       	std	Y+7, r23	; 0x07
    35b4:	6e 83       	std	Y+6, r22	; 0x06
    35b6:	98 01       	movw	r18, r16
    35b8:	68 2d       	mov	r22, r8
    35ba:	a3 01       	movw	r20, r6
    35bc:	cf 01       	movw	r24, r30
    35be:	0e 94 75 20 	call	0x40ea	; 0x40ea <__vfprintf>
    35c2:	48 85       	ldd	r20, Y+8	; 0x08
    35c4:	59 85       	ldd	r21, Y+9	; 0x09
    35c6:	2e 81       	ldd	r18, Y+6	; 0x06
    35c8:	3f 81       	ldd	r19, Y+7	; 0x07
    35ca:	42 17       	cp	r20, r18
    35cc:	53 07       	cpc	r21, r19
    35ce:	08 f4       	brcc	.+2      	; 0x35d2 <__vsnprintf+0x7c>
    35d0:	9a 01       	movw	r18, r20
    35d2:	f7 01       	movw	r30, r14
    35d4:	e2 0f       	add	r30, r18
    35d6:	f3 1f       	adc	r31, r19
    35d8:	10 82       	st	Z, r1
    35da:	61 96       	adiw	r28, 0x11	; 17
    35dc:	0f b6       	in	r0, 0x3f	; 63
    35de:	f8 94       	cli
    35e0:	de bf       	out	0x3e, r29	; 62
    35e2:	0f be       	out	0x3f, r0	; 63
    35e4:	cd bf       	out	0x3d, r28	; 61
    35e6:	df 91       	pop	r29
    35e8:	cf 91       	pop	r28
    35ea:	1f 91       	pop	r17
    35ec:	0f 91       	pop	r16
    35ee:	ff 90       	pop	r15
    35f0:	ef 90       	pop	r14
    35f2:	8f 90       	pop	r8
    35f4:	7f 90       	pop	r7
    35f6:	6f 90       	pop	r6
    35f8:	08 95       	ret

Disassembly of section .text.vsnprintf:

000035fa <vsnprintf>:
    35fa:	6f 92       	push	r6
    35fc:	7f 92       	push	r7
    35fe:	8f 92       	push	r8
    3600:	ef 92       	push	r14
    3602:	ff 92       	push	r15
    3604:	0f 93       	push	r16
    3606:	1f 93       	push	r17
    3608:	cf 93       	push	r28
    360a:	df 93       	push	r29
    360c:	cd b7       	in	r28, 0x3d	; 61
    360e:	de b7       	in	r29, 0x3e	; 62
    3610:	61 97       	sbiw	r28, 0x11	; 17
    3612:	0f b6       	in	r0, 0x3f	; 63
    3614:	f8 94       	cli
    3616:	de bf       	out	0x3e, r29	; 62
    3618:	0f be       	out	0x3f, r0	; 63
    361a:	cd bf       	out	0x3d, r28	; 61
    361c:	fe 01       	movw	r30, r28
    361e:	31 96       	adiw	r30, 0x01	; 1
    3620:	51 e1       	ldi	r21, 0x11	; 17
    3622:	df 01       	movw	r26, r30
    3624:	1d 92       	st	X+, r1
    3626:	5a 95       	dec	r21
    3628:	e9 f7       	brne	.-6      	; 0x3624 <vsnprintf+0x2a>
    362a:	a2 e0       	ldi	r26, 0x02	; 2
    362c:	b1 e0       	ldi	r27, 0x01	; 1
    362e:	ba 83       	std	Y+2, r27	; 0x02
    3630:	a9 83       	std	Y+1, r26	; 0x01
    3632:	9c 83       	std	Y+4, r25	; 0x04
    3634:	8b 83       	std	Y+3, r24	; 0x03
    3636:	77 ff       	sbrs	r23, 7
    3638:	09 c0       	rjmp	.+18     	; 0x364c <vsnprintf+0x52>
    363a:	8f e4       	ldi	r24, 0x4F	; 79
    363c:	90 e0       	ldi	r25, 0x00	; 0
    363e:	90 93 2d 12 	sts	0x122D, r25	; 0x80122d <__errno_val+0x1>
    3642:	80 93 2c 12 	sts	0x122C, r24	; 0x80122c <__errno_val>
    3646:	8f ef       	ldi	r24, 0xFF	; 255
    3648:	9f ef       	ldi	r25, 0xFF	; 255
    364a:	19 c0       	rjmp	.+50     	; 0x367e <vsnprintf+0x84>
    364c:	39 01       	movw	r6, r18
    364e:	84 2e       	mov	r8, r20
    3650:	7c 01       	movw	r14, r24
    3652:	61 50       	subi	r22, 0x01	; 1
    3654:	71 09       	sbc	r23, r1
    3656:	7f 83       	std	Y+7, r23	; 0x07
    3658:	6e 83       	std	Y+6, r22	; 0x06
    365a:	98 01       	movw	r18, r16
    365c:	68 2d       	mov	r22, r8
    365e:	a3 01       	movw	r20, r6
    3660:	cf 01       	movw	r24, r30
    3662:	0e 94 5d 20 	call	0x40ba	; 0x40ba <vfprintf>
    3666:	48 85       	ldd	r20, Y+8	; 0x08
    3668:	59 85       	ldd	r21, Y+9	; 0x09
    366a:	2e 81       	ldd	r18, Y+6	; 0x06
    366c:	3f 81       	ldd	r19, Y+7	; 0x07
    366e:	42 17       	cp	r20, r18
    3670:	53 07       	cpc	r21, r19
    3672:	08 f4       	brcc	.+2      	; 0x3676 <vsnprintf+0x7c>
    3674:	9a 01       	movw	r18, r20
    3676:	f7 01       	movw	r30, r14
    3678:	e2 0f       	add	r30, r18
    367a:	f3 1f       	adc	r31, r19
    367c:	10 82       	st	Z, r1
    367e:	61 96       	adiw	r28, 0x11	; 17
    3680:	0f b6       	in	r0, 0x3f	; 63
    3682:	f8 94       	cli
    3684:	de bf       	out	0x3e, r29	; 62
    3686:	0f be       	out	0x3f, r0	; 63
    3688:	cd bf       	out	0x3d, r28	; 61
    368a:	df 91       	pop	r29
    368c:	cf 91       	pop	r28
    368e:	1f 91       	pop	r17
    3690:	0f 91       	pop	r16
    3692:	ff 90       	pop	r15
    3694:	ef 90       	pop	r14
    3696:	8f 90       	pop	r8
    3698:	7f 90       	pop	r7
    369a:	6f 90       	pop	r6
    369c:	08 95       	ret

Disassembly of section .text.vfprintf:

000040ba <vfprintf>:
    40ba:	a2 e0       	ldi	r26, 0x02	; 2
    40bc:	b0 e0       	ldi	r27, 0x00	; 0
    40be:	e3 e6       	ldi	r30, 0x63	; 99
    40c0:	f0 e2       	ldi	r31, 0x20	; 32
    40c2:	0c 94 ff 1f 	jmp	0x3ffe	; 0x3ffe <__prologue_saves__+0x1c>
    40c6:	8c 01       	movw	r16, r24
    40c8:	3a 83       	std	Y+2, r19	; 0x02
    40ca:	29 83       	std	Y+1, r18	; 0x01
    40cc:	9e 01       	movw	r18, r28
    40ce:	2f 5f       	subi	r18, 0xFF	; 255
    40d0:	3f 4f       	sbci	r19, 0xFF	; 255
    40d2:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__printf_core>
    40d6:	f8 01       	movw	r30, r16
    40d8:	20 81       	ld	r18, Z
    40da:	24 ff       	sbrs	r18, 4
    40dc:	02 c0       	rjmp	.+4      	; 0x40e2 <vfprintf+0x28>
    40de:	8f ef       	ldi	r24, 0xFF	; 255
    40e0:	9f ef       	ldi	r25, 0xFF	; 255
    40e2:	22 96       	adiw	r28, 0x02	; 2
    40e4:	e4 e0       	ldi	r30, 0x04	; 4
    40e6:	0c 94 36 20 	jmp	0x406c	; 0x406c <__epilogue_restores__+0x1c>

Disassembly of section .text.__vfprintf:

000040ea <__vfprintf>:
    40ea:	a2 e0       	ldi	r26, 0x02	; 2
    40ec:	b0 e0       	ldi	r27, 0x00	; 0
    40ee:	eb e7       	ldi	r30, 0x7B	; 123
    40f0:	f0 e2       	ldi	r31, 0x20	; 32
    40f2:	0c 94 ff 1f 	jmp	0x3ffe	; 0x3ffe <__prologue_saves__+0x1c>
    40f6:	8c 01       	movw	r16, r24
    40f8:	3a 83       	std	Y+2, r19	; 0x02
    40fa:	29 83       	std	Y+1, r18	; 0x01
    40fc:	9e 01       	movw	r18, r28
    40fe:	2f 5f       	subi	r18, 0xFF	; 255
    4100:	3f 4f       	sbci	r19, 0xFF	; 255
    4102:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__printf_core>
    4106:	f8 01       	movw	r30, r16
    4108:	20 81       	ld	r18, Z
    410a:	24 ff       	sbrs	r18, 4
    410c:	02 c0       	rjmp	.+4      	; 0x4112 <__vfprintf+0x28>
    410e:	8f ef       	ldi	r24, 0xFF	; 255
    4110:	9f ef       	ldi	r25, 0xFF	; 255
    4112:	22 96       	adiw	r28, 0x02	; 2
    4114:	e4 e0       	ldi	r30, 0x04	; 4
    4116:	0c 94 36 20 	jmp	0x406c	; 0x406c <__epilogue_restores__+0x1c>

Disassembly of section .text.__fmt_fp:

00000e2e <__fmt_fp>:
     e2e:	a6 e2       	ldi	r26, 0x26	; 38
     e30:	b0 e0       	ldi	r27, 0x00	; 0
     e32:	ed e1       	ldi	r30, 0x1D	; 29
     e34:	f7 e0       	ldi	r31, 0x07	; 7
     e36:	0c 94 f1 1f 	jmp	0x3fe2	; 0x3fe2 <__prologue_saves__>
     e3a:	9f 8f       	std	Y+31, r25	; 0x1f
     e3c:	8e 8f       	std	Y+30, r24	; 0x1e
     e3e:	79 8f       	std	Y+25, r23	; 0x19
     e40:	68 8f       	std	Y+24, r22	; 0x18
     e42:	12 2f       	mov	r17, r18
     e44:	fb 01       	movw	r30, r22
     e46:	01 90       	ld	r0, Z+
     e48:	f0 81       	ld	r31, Z
     e4a:	e0 2d       	mov	r30, r0
     e4c:	fa 87       	std	Y+10, r31	; 0x0a
     e4e:	e9 87       	std	Y+9, r30	; 0x09
     e50:	fb 01       	movw	r30, r22
     e52:	c2 80       	ldd	r12, Z+2	; 0x02
     e54:	d3 80       	ldd	r13, Z+3	; 0x03
     e56:	24 81       	ldd	r18, Z+4	; 0x04
     e58:	35 81       	ldd	r19, Z+5	; 0x05
     e5a:	3c 8b       	std	Y+20, r19	; 0x14
     e5c:	2b 8b       	std	Y+19, r18	; 0x13
     e5e:	80 85       	ldd	r24, Z+8	; 0x08
     e60:	91 85       	ldd	r25, Z+9	; 0x09
     e62:	99 a3       	std	Y+33, r25	; 0x21
     e64:	88 a3       	std	Y+32, r24	; 0x20
     e66:	06 80       	ldd	r0, Z+6	; 0x06
     e68:	f7 81       	ldd	r31, Z+7	; 0x07
     e6a:	e0 2d       	mov	r30, r0
     e6c:	fa 83       	std	Y+2, r31	; 0x02
     e6e:	e9 83       	std	Y+1, r30	; 0x01
     e70:	fa 01       	movw	r30, r20
     e72:	80 80       	ld	r8, Z
     e74:	91 80       	ldd	r9, Z+1	; 0x01
     e76:	a2 80       	ldd	r10, Z+2	; 0x02
     e78:	b3 80       	ldd	r11, Z+3	; 0x03
     e7a:	20 e0       	ldi	r18, 0x00	; 0
     e7c:	30 e0       	ldi	r19, 0x00	; 0
     e7e:	a9 01       	movw	r20, r18
     e80:	c5 01       	movw	r24, r10
     e82:	b4 01       	movw	r22, r8
     e84:	0e 94 32 22 	call	0x4464	; 0x4464 <__cmpsf2>
     e88:	87 ff       	sbrs	r24, 7
     e8a:	06 c0       	rjmp	.+12     	; 0xe98 <__fmt_fp+0x6a>
     e8c:	b7 fa       	bst	r11, 7
     e8e:	b0 94       	com	r11
     e90:	b7 f8       	bld	r11, 7
     e92:	b0 94       	com	r11
     e94:	8d e2       	ldi	r24, 0x2D	; 45
     e96:	04 c0       	rjmp	.+8      	; 0xea0 <__fmt_fp+0x72>
     e98:	f9 85       	ldd	r31, Y+9	; 0x09
     e9a:	f2 ff       	sbrs	r31, 2
     e9c:	0c c3       	rjmp	.+1560   	; 0x14b6 <__EEPROM_REGION_LENGTH__+0x4b6>
     e9e:	8b e2       	ldi	r24, 0x2B	; 43
     ea0:	e9 81       	ldd	r30, Y+1	; 0x01
     ea2:	fa 81       	ldd	r31, Y+2	; 0x02
     ea4:	80 83       	st	Z, r24
     ea6:	2b 89       	ldd	r18, Y+19	; 0x13
     ea8:	3c 89       	ldd	r19, Y+20	; 0x14
     eaa:	21 50       	subi	r18, 0x01	; 1
     eac:	31 09       	sbc	r19, r1
     eae:	38 87       	std	Y+8, r19	; 0x08
     eb0:	2f 83       	std	Y+7, r18	; 0x07
     eb2:	41 e0       	ldi	r20, 0x01	; 1
     eb4:	50 e0       	ldi	r21, 0x00	; 0
     eb6:	5a 8b       	std	Y+18, r21	; 0x12
     eb8:	49 8b       	std	Y+17, r20	; 0x11
     eba:	06 c0       	rjmp	.+12     	; 0xec8 <__fmt_fp+0x9a>
     ebc:	8b 89       	ldd	r24, Y+19	; 0x13
     ebe:	9c 89       	ldd	r25, Y+20	; 0x14
     ec0:	98 87       	std	Y+8, r25	; 0x08
     ec2:	8f 83       	std	Y+7, r24	; 0x07
     ec4:	1a 8a       	std	Y+18, r1	; 0x12
     ec6:	19 8a       	std	Y+17, r1	; 0x11
     ec8:	d5 01       	movw	r26, r10
     eca:	c4 01       	movw	r24, r8
     ecc:	bf 77       	andi	r27, 0x7F	; 127
     ece:	00 97       	sbiw	r24, 0x00	; 0
     ed0:	e0 e8       	ldi	r30, 0x80	; 128
     ed2:	ae 07       	cpc	r26, r30
     ed4:	ef e7       	ldi	r30, 0x7F	; 127
     ed6:	be 07       	cpc	r27, r30
     ed8:	d9 f4       	brne	.+54     	; 0xf10 <__fmt_fp+0xe2>
     eda:	21 2f       	mov	r18, r17
     edc:	11 0f       	add	r17, r17
     ede:	33 0b       	sbc	r19, r19
     ee0:	21 54       	subi	r18, 0x41	; 65
     ee2:	31 09       	sbc	r19, r1
     ee4:	89 81       	ldd	r24, Y+1	; 0x01
     ee6:	9a 81       	ldd	r25, Y+2	; 0x02
     ee8:	49 89       	ldd	r20, Y+17	; 0x11
     eea:	5a 89       	ldd	r21, Y+18	; 0x12
     eec:	84 0f       	add	r24, r20
     eee:	95 1f       	adc	r25, r21
     ef0:	2a 31       	cpi	r18, 0x1A	; 26
     ef2:	31 05       	cpc	r19, r1
     ef4:	20 f4       	brcc	.+8      	; 0xefe <__fmt_fp+0xd0>
     ef6:	4f ec       	ldi	r20, 0xCF	; 207
     ef8:	55 e0       	ldi	r21, 0x05	; 5
     efa:	60 e0       	ldi	r22, 0x00	; 0
     efc:	03 c0       	rjmp	.+6      	; 0xf04 <__fmt_fp+0xd6>
     efe:	43 ed       	ldi	r20, 0xD3	; 211
     f00:	55 e0       	ldi	r21, 0x05	; 5
     f02:	60 e0       	ldi	r22, 0x00	; 0
     f04:	0e 94 42 21 	call	0x4284	; 0x4284 <strcpy>
     f08:	63 ed       	ldi	r22, 0xD3	; 211
     f0a:	75 e0       	ldi	r23, 0x05	; 5
     f0c:	80 e0       	ldi	r24, 0x00	; 0
     f0e:	1e c0       	rjmp	.+60     	; 0xf4c <__fmt_fp+0x11e>
     f10:	01 97       	sbiw	r24, 0x01	; 1
     f12:	a0 48       	sbci	r26, 0x80	; 128
     f14:	bf 47       	sbci	r27, 0x7F	; 127
     f16:	30 f1       	brcs	.+76     	; 0xf64 <__fmt_fp+0x136>
     f18:	21 2f       	mov	r18, r17
     f1a:	11 0f       	add	r17, r17
     f1c:	33 0b       	sbc	r19, r19
     f1e:	21 54       	subi	r18, 0x41	; 65
     f20:	31 09       	sbc	r19, r1
     f22:	89 81       	ldd	r24, Y+1	; 0x01
     f24:	9a 81       	ldd	r25, Y+2	; 0x02
     f26:	49 89       	ldd	r20, Y+17	; 0x11
     f28:	5a 89       	ldd	r21, Y+18	; 0x12
     f2a:	84 0f       	add	r24, r20
     f2c:	95 1f       	adc	r25, r21
     f2e:	2a 31       	cpi	r18, 0x1A	; 26
     f30:	31 05       	cpc	r19, r1
     f32:	20 f4       	brcc	.+8      	; 0xf3c <__fmt_fp+0x10e>
     f34:	47 ed       	ldi	r20, 0xD7	; 215
     f36:	55 e0       	ldi	r21, 0x05	; 5
     f38:	60 e0       	ldi	r22, 0x00	; 0
     f3a:	03 c0       	rjmp	.+6      	; 0xf42 <__fmt_fp+0x114>
     f3c:	4b ed       	ldi	r20, 0xDB	; 219
     f3e:	55 e0       	ldi	r21, 0x05	; 5
     f40:	60 e0       	ldi	r22, 0x00	; 0
     f42:	0e 94 42 21 	call	0x4284	; 0x4284 <strcpy>
     f46:	6b ed       	ldi	r22, 0xDB	; 219
     f48:	75 e0       	ldi	r23, 0x05	; 5
     f4a:	80 e0       	ldi	r24, 0x00	; 0
     f4c:	0e 94 00 21 	call	0x4200	; 0x4200 <strlen>
     f50:	e9 81       	ldd	r30, Y+1	; 0x01
     f52:	fa 81       	ldd	r31, Y+2	; 0x02
     f54:	af 01       	movw	r20, r30
     f56:	60 e8       	ldi	r22, 0x80	; 128
     f58:	e9 84       	ldd	r14, Y+9	; 0x09
     f5a:	fa 84       	ldd	r15, Y+10	; 0x0a
     f5c:	0b 89       	ldd	r16, Y+19	; 0x13
     f5e:	1c 89       	ldd	r17, Y+20	; 0x14
     f60:	9c 01       	movw	r18, r24
     f62:	a1 c2       	rjmp	.+1346   	; 0x14a6 <__EEPROM_REGION_LENGTH__+0x4a6>
     f64:	20 e0       	ldi	r18, 0x00	; 0
     f66:	30 e0       	ldi	r19, 0x00	; 0
     f68:	a9 01       	movw	r20, r18
     f6a:	c5 01       	movw	r24, r10
     f6c:	b4 01       	movw	r22, r8
     f6e:	0e 94 32 22 	call	0x4464	; 0x4464 <__cmpsf2>
     f72:	1b 82       	std	Y+3, r1	; 0x03
     f74:	1c 82       	std	Y+4, r1	; 0x04
     f76:	88 23       	and	r24, r24
     f78:	09 f4       	brne	.+2      	; 0xf7c <__fmt_fp+0x14e>
     f7a:	67 c0       	rjmp	.+206    	; 0x104a <__EEPROM_REGION_LENGTH__+0x4a>
     f7c:	f0 e8       	ldi	r31, 0x80	; 128
     f7e:	fd 83       	std	Y+5, r31	; 0x05
     f80:	2f e3       	ldi	r18, 0x3F	; 63
     f82:	2e 83       	std	Y+6, r18	; 0x06
     f84:	21 2c       	mov	r2, r1
     f86:	31 2c       	mov	r3, r1
     f88:	20 e0       	ldi	r18, 0x00	; 0
     f8a:	30 e0       	ldi	r19, 0x00	; 0
     f8c:	40 e2       	ldi	r20, 0x20	; 32
     f8e:	51 e4       	ldi	r21, 0x41	; 65
     f90:	6b 81       	ldd	r22, Y+3	; 0x03
     f92:	7c 81       	ldd	r23, Y+4	; 0x04
     f94:	8d 81       	ldd	r24, Y+5	; 0x05
     f96:	9e 81       	ldd	r25, Y+6	; 0x06
     f98:	0e 94 48 22 	call	0x4490	; 0x4490 <__mulsf3>
     f9c:	f6 2e       	mov	r15, r22
     f9e:	07 2f       	mov	r16, r23
     fa0:	8d 87       	std	Y+13, r24	; 0x0d
     fa2:	9b 87       	std	Y+11, r25	; 0x0b
     fa4:	a5 01       	movw	r20, r10
     fa6:	94 01       	movw	r18, r8
     fa8:	0e 94 37 22 	call	0x446e	; 0x446e <__gesf2>
     fac:	18 16       	cp	r1, r24
     fae:	54 f0       	brlt	.+20     	; 0xfc4 <__fmt_fp+0x196>
     fb0:	3f ef       	ldi	r19, 0xFF	; 255
     fb2:	23 1a       	sub	r2, r19
     fb4:	33 0a       	sbc	r3, r19
     fb6:	fb 82       	std	Y+3, r15	; 0x03
     fb8:	0c 83       	std	Y+4, r16	; 0x04
     fba:	4d 85       	ldd	r20, Y+13	; 0x0d
     fbc:	4d 83       	std	Y+5, r20	; 0x05
     fbe:	5b 85       	ldd	r21, Y+11	; 0x0b
     fc0:	5e 83       	std	Y+6, r21	; 0x06
     fc2:	e2 cf       	rjmp	.-60     	; 0xf88 <__fmt_fp+0x15a>
     fc4:	1c 86       	std	Y+12, r1	; 0x0c
     fc6:	1b 86       	std	Y+11, r1	; 0x0b
     fc8:	2b 81       	ldd	r18, Y+3	; 0x03
     fca:	3c 81       	ldd	r19, Y+4	; 0x04
     fcc:	4d 81       	ldd	r20, Y+5	; 0x05
     fce:	5e 81       	ldd	r21, Y+6	; 0x06
     fd0:	c5 01       	movw	r24, r10
     fd2:	b4 01       	movw	r22, r8
     fd4:	0e 94 32 22 	call	0x4464	; 0x4464 <__cmpsf2>
     fd8:	87 ff       	sbrs	r24, 7
     fda:	3d c0       	rjmp	.+122    	; 0x1056 <__EEPROM_REGION_LENGTH__+0x56>
     fdc:	84 ed       	ldi	r24, 0xD4	; 212
     fde:	28 16       	cp	r2, r24
     fe0:	8e ef       	ldi	r24, 0xFE	; 254
     fe2:	38 06       	cpc	r3, r24
     fe4:	04 f5       	brge	.+64     	; 0x1026 <__EEPROM_REGION_LENGTH__+0x26>
     fe6:	eb 85       	ldd	r30, Y+11	; 0x0b
     fe8:	fc 85       	ldd	r31, Y+12	; 0x0c
     fea:	ef 2b       	or	r30, r31
     fec:	e1 f4       	brne	.+56     	; 0x1026 <__EEPROM_REGION_LENGTH__+0x26>
     fee:	20 e0       	ldi	r18, 0x00	; 0
     ff0:	30 e0       	ldi	r19, 0x00	; 0
     ff2:	40 e8       	ldi	r20, 0x80	; 128
     ff4:	5a e5       	ldi	r21, 0x5A	; 90
     ff6:	c5 01       	movw	r24, r10
     ff8:	b4 01       	movw	r22, r8
     ffa:	0e 94 48 22 	call	0x4490	; 0x4490 <__mulsf3>
     ffe:	4b 01       	movw	r8, r22
    1000:	5c 01       	movw	r10, r24
    1002:	20 e0       	ldi	r18, 0x00	; 0
    1004:	30 e0       	ldi	r19, 0x00	; 0
    1006:	40 e8       	ldi	r20, 0x80	; 128
    1008:	5a e5       	ldi	r21, 0x5A	; 90
    100a:	6b 81       	ldd	r22, Y+3	; 0x03
    100c:	7c 81       	ldd	r23, Y+4	; 0x04
    100e:	8d 81       	ldd	r24, Y+5	; 0x05
    1010:	9e 81       	ldd	r25, Y+6	; 0x06
    1012:	0e 94 48 22 	call	0x4490	; 0x4490 <__mulsf3>
    1016:	6b 83       	std	Y+3, r22	; 0x03
    1018:	7c 83       	std	Y+4, r23	; 0x04
    101a:	8d 83       	std	Y+5, r24	; 0x05
    101c:	9e 83       	std	Y+6, r25	; 0x06
    101e:	21 e0       	ldi	r18, 0x01	; 1
    1020:	30 e0       	ldi	r19, 0x00	; 0
    1022:	3c 87       	std	Y+12, r19	; 0x0c
    1024:	2b 87       	std	Y+11, r18	; 0x0b
    1026:	20 e0       	ldi	r18, 0x00	; 0
    1028:	30 e0       	ldi	r19, 0x00	; 0
    102a:	40 e2       	ldi	r20, 0x20	; 32
    102c:	51 e4       	ldi	r21, 0x41	; 65
    102e:	6b 81       	ldd	r22, Y+3	; 0x03
    1030:	7c 81       	ldd	r23, Y+4	; 0x04
    1032:	8d 81       	ldd	r24, Y+5	; 0x05
    1034:	9e 81       	ldd	r25, Y+6	; 0x06
    1036:	0e 94 44 22 	call	0x4488	; 0x4488 <__divsf3>
    103a:	6b 83       	std	Y+3, r22	; 0x03
    103c:	7c 83       	std	Y+4, r23	; 0x04
    103e:	8d 83       	std	Y+5, r24	; 0x05
    1040:	9e 83       	std	Y+6, r25	; 0x06
    1042:	31 e0       	ldi	r19, 0x01	; 1
    1044:	23 1a       	sub	r2, r19
    1046:	31 08       	sbc	r3, r1
    1048:	bf cf       	rjmp	.-130    	; 0xfc8 <__fmt_fp+0x19a>
    104a:	40 e8       	ldi	r20, 0x80	; 128
    104c:	4d 83       	std	Y+5, r20	; 0x05
    104e:	5f e3       	ldi	r21, 0x3F	; 63
    1050:	5e 83       	std	Y+6, r21	; 0x06
    1052:	21 2c       	mov	r2, r1
    1054:	31 2c       	mov	r3, r1
    1056:	81 2f       	mov	r24, r17
    1058:	11 0f       	add	r17, r17
    105a:	99 0b       	sbc	r25, r25
    105c:	9b a3       	std	Y+35, r25	; 0x23
    105e:	8a a3       	std	Y+34, r24	; 0x22
    1060:	0e 94 de 21 	call	0x43bc	; 0x43bc <tolower>
    1064:	8b 8f       	std	Y+27, r24	; 0x1b
    1066:	d7 fc       	sbrc	r13, 7
    1068:	03 c0       	rjmp	.+6      	; 0x1070 <__EEPROM_REGION_LENGTH__+0x70>
    106a:	de a2       	std	Y+38, r13	; 0x26
    106c:	cd a2       	std	Y+37, r12	; 0x25
    106e:	04 c0       	rjmp	.+8      	; 0x1078 <__EEPROM_REGION_LENGTH__+0x78>
    1070:	e6 e0       	ldi	r30, 0x06	; 6
    1072:	f0 e0       	ldi	r31, 0x00	; 0
    1074:	fe a3       	std	Y+38, r31	; 0x26
    1076:	ed a3       	std	Y+37, r30	; 0x25
    1078:	fb 8d       	ldd	r31, Y+27	; 0x1b
    107a:	f7 36       	cpi	r31, 0x67	; 103
    107c:	41 f4       	brne	.+16     	; 0x108e <__EEPROM_REGION_LENGTH__+0x8e>
    107e:	cd 28       	or	r12, r13
    1080:	09 f0       	breq	.+2      	; 0x1084 <__EEPROM_REGION_LENGTH__+0x84>
    1082:	1e c2       	rjmp	.+1084   	; 0x14c0 <__EEPROM_REGION_LENGTH__+0x4c0>
    1084:	21 e0       	ldi	r18, 0x01	; 1
    1086:	30 e0       	ldi	r19, 0x00	; 0
    1088:	3e a3       	std	Y+38, r19	; 0x26
    108a:	2d a3       	std	Y+37, r18	; 0x25
    108c:	19 c2       	rjmp	.+1074   	; 0x14c0 <__EEPROM_REGION_LENGTH__+0x4c0>
    108e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1090:	8d 8b       	std	Y+21, r24	; 0x15
    1092:	04 c0       	rjmp	.+8      	; 0x109c <__EEPROM_REGION_LENGTH__+0x9c>
    1094:	37 fe       	sbrs	r3, 7
    1096:	25 c2       	rjmp	.+1098   	; 0x14e2 <__EEPROM_REGION_LENGTH__+0x4e2>
    1098:	96 e6       	ldi	r25, 0x66	; 102
    109a:	9d 8b       	std	Y+21, r25	; 0x15
    109c:	ed a1       	ldd	r30, Y+37	; 0x25
    109e:	fe a1       	ldd	r31, Y+38	; 0x26
    10a0:	31 96       	adiw	r30, 0x01	; 1
    10a2:	fe a3       	std	Y+38, r31	; 0x26
    10a4:	ed a3       	std	Y+37, r30	; 0x25
    10a6:	fd 89       	ldd	r31, Y+21	; 0x15
    10a8:	f6 36       	cpi	r31, 0x66	; 102
    10aa:	99 f4       	brne	.+38     	; 0x10d2 <__EEPROM_REGION_LENGTH__+0xd2>
    10ac:	37 fe       	sbrs	r3, 7
    10ae:	08 c0       	rjmp	.+16     	; 0x10c0 <__EEPROM_REGION_LENGTH__+0xc0>
    10b0:	1b 82       	std	Y+3, r1	; 0x03
    10b2:	1c 82       	std	Y+4, r1	; 0x04
    10b4:	20 e8       	ldi	r18, 0x80	; 128
    10b6:	2d 83       	std	Y+5, r18	; 0x05
    10b8:	3f e3       	ldi	r19, 0x3F	; 63
    10ba:	3e 83       	std	Y+6, r19	; 0x06
    10bc:	21 2c       	mov	r2, r1
    10be:	31 2c       	mov	r3, r1
    10c0:	4b 8d       	ldd	r20, Y+27	; 0x1b
    10c2:	47 36       	cpi	r20, 0x67	; 103
    10c4:	31 f0       	breq	.+12     	; 0x10d2 <__EEPROM_REGION_LENGTH__+0xd2>
    10c6:	8d a1       	ldd	r24, Y+37	; 0x25
    10c8:	9e a1       	ldd	r25, Y+38	; 0x26
    10ca:	82 0d       	add	r24, r2
    10cc:	93 1d       	adc	r25, r3
    10ce:	9e a3       	std	Y+38, r25	; 0x26
    10d0:	8d a3       	std	Y+37, r24	; 0x25
    10d2:	9b 81       	ldd	r25, Y+3	; 0x03
    10d4:	9b 87       	std	Y+11, r25	; 0x0b
    10d6:	ec 81       	ldd	r30, Y+4	; 0x04
    10d8:	ed 87       	std	Y+13, r30	; 0x0d
    10da:	fd 81       	ldd	r31, Y+5	; 0x05
    10dc:	fe 8b       	std	Y+22, r31	; 0x16
    10de:	2e 81       	ldd	r18, Y+6	; 0x06
    10e0:	2a 8f       	std	Y+26, r18	; 0x1a
    10e2:	75 01       	movw	r14, r10
    10e4:	64 01       	movw	r12, r8
    10e6:	1d 8e       	std	Y+29, r1	; 0x1d
    10e8:	1c 8e       	std	Y+28, r1	; 0x1c
    10ea:	8c 8d       	ldd	r24, Y+28	; 0x1c
    10ec:	9d 8d       	ldd	r25, Y+29	; 0x1d
    10ee:	ed a1       	ldd	r30, Y+37	; 0x25
    10f0:	fe a1       	ldd	r31, Y+38	; 0x26
    10f2:	8e 17       	cp	r24, r30
    10f4:	9f 07       	cpc	r25, r31
    10f6:	c1 f1       	breq	.+112    	; 0x1168 <__EEPROM_REGION_LENGTH__+0x168>
    10f8:	2b 85       	ldd	r18, Y+11	; 0x0b
    10fa:	3d 85       	ldd	r19, Y+13	; 0x0d
    10fc:	4e 89       	ldd	r20, Y+22	; 0x16
    10fe:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1100:	c7 01       	movw	r24, r14
    1102:	b6 01       	movw	r22, r12
    1104:	0e 94 44 22 	call	0x4488	; 0x4488 <__divsf3>
    1108:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <floorf>
    110c:	2b 01       	movw	r4, r22
    110e:	3c 01       	movw	r6, r24
    1110:	0e 94 10 22 	call	0x4420	; 0x4420 <__fixsfsi>
    1114:	6c a3       	std	Y+36, r22	; 0x24
    1116:	87 01       	movw	r16, r14
    1118:	76 01       	movw	r14, r12
    111a:	17 fb       	bst	r17, 7
    111c:	10 95       	com	r17
    111e:	17 f9       	bld	r17, 7
    1120:	10 95       	com	r17
    1122:	2b 85       	ldd	r18, Y+11	; 0x0b
    1124:	3d 85       	ldd	r19, Y+13	; 0x0d
    1126:	4e 89       	ldd	r20, Y+22	; 0x16
    1128:	5a 8d       	ldd	r21, Y+26	; 0x1a
    112a:	c3 01       	movw	r24, r6
    112c:	b2 01       	movw	r22, r4
    112e:	0e 94 54 13 	call	0x26a8	; 0x26a8 <fmaf>
    1132:	6b 01       	movw	r12, r22
    1134:	7c 01       	movw	r14, r24
    1136:	f7 fa       	bst	r15, 7
    1138:	f0 94       	com	r15
    113a:	f7 f8       	bld	r15, 7
    113c:	f0 94       	com	r15
    113e:	20 e0       	ldi	r18, 0x00	; 0
    1140:	30 e0       	ldi	r19, 0x00	; 0
    1142:	40 e2       	ldi	r20, 0x20	; 32
    1144:	51 e4       	ldi	r21, 0x41	; 65
    1146:	6b 85       	ldd	r22, Y+11	; 0x0b
    1148:	7d 85       	ldd	r23, Y+13	; 0x0d
    114a:	8e 89       	ldd	r24, Y+22	; 0x16
    114c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    114e:	0e 94 44 22 	call	0x4488	; 0x4488 <__divsf3>
    1152:	6b 87       	std	Y+11, r22	; 0x0b
    1154:	7d 87       	std	Y+13, r23	; 0x0d
    1156:	8e 8b       	std	Y+22, r24	; 0x16
    1158:	9a 8f       	std	Y+26, r25	; 0x1a
    115a:	4c 8d       	ldd	r20, Y+28	; 0x1c
    115c:	5d 8d       	ldd	r21, Y+29	; 0x1d
    115e:	4f 5f       	subi	r20, 0xFF	; 255
    1160:	5f 4f       	sbci	r21, 0xFF	; 255
    1162:	5d 8f       	std	Y+29, r21	; 0x1d
    1164:	4c 8f       	std	Y+28, r20	; 0x1c
    1166:	c1 cf       	rjmp	.-126    	; 0x10ea <__EEPROM_REGION_LENGTH__+0xea>
    1168:	20 e0       	ldi	r18, 0x00	; 0
    116a:	30 e0       	ldi	r19, 0x00	; 0
    116c:	40 ea       	ldi	r20, 0xA0	; 160
    116e:	50 e4       	ldi	r21, 0x40	; 64
    1170:	6b 85       	ldd	r22, Y+11	; 0x0b
    1172:	7d 85       	ldd	r23, Y+13	; 0x0d
    1174:	8e 89       	ldd	r24, Y+22	; 0x16
    1176:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1178:	0e 94 48 22 	call	0x4490	; 0x4490 <__mulsf3>
    117c:	2b 01       	movw	r4, r22
    117e:	3c 01       	movw	r6, r24
    1180:	9b 01       	movw	r18, r22
    1182:	ac 01       	movw	r20, r24
    1184:	c7 01       	movw	r24, r14
    1186:	b6 01       	movw	r22, r12
    1188:	0e 94 32 22 	call	0x4464	; 0x4464 <__cmpsf2>
    118c:	87 fd       	sbrc	r24, 7
    118e:	0b c0       	rjmp	.+22     	; 0x11a6 <__EEPROM_REGION_LENGTH__+0x1a6>
    1190:	a3 01       	movw	r20, r6
    1192:	92 01       	movw	r18, r4
    1194:	c7 01       	movw	r24, r14
    1196:	b6 01       	movw	r22, r12
    1198:	0e 94 32 22 	call	0x4464	; 0x4464 <__cmpsf2>
    119c:	81 11       	cpse	r24, r1
    119e:	06 c0       	rjmp	.+12     	; 0x11ac <__EEPROM_REGION_LENGTH__+0x1ac>
    11a0:	fc a1       	ldd	r31, Y+36	; 0x24
    11a2:	f0 fd       	sbrc	r31, 0
    11a4:	03 c0       	rjmp	.+6      	; 0x11ac <__EEPROM_REGION_LENGTH__+0x1ac>
    11a6:	41 2c       	mov	r4, r1
    11a8:	51 2c       	mov	r5, r1
    11aa:	32 01       	movw	r6, r4
    11ac:	a3 01       	movw	r20, r6
    11ae:	92 01       	movw	r18, r4
    11b0:	c5 01       	movw	r24, r10
    11b2:	b4 01       	movw	r22, r8
    11b4:	0e 94 0a 22 	call	0x4414	; 0x4414 <__addsf3>
    11b8:	4b 01       	movw	r8, r22
    11ba:	5c 01       	movw	r10, r24
    11bc:	2d 89       	ldd	r18, Y+21	; 0x15
    11be:	25 36       	cpi	r18, 0x65	; 101
    11c0:	11 f0       	breq	.+4      	; 0x11c6 <__EEPROM_REGION_LENGTH__+0x1c6>
    11c2:	31 01       	movw	r6, r2
    11c4:	02 c0       	rjmp	.+4      	; 0x11ca <__EEPROM_REGION_LENGTH__+0x1ca>
    11c6:	61 2c       	mov	r6, r1
    11c8:	71 2c       	mov	r7, r1
    11ca:	23 01       	movw	r4, r6
    11cc:	4d a1       	ldd	r20, Y+37	; 0x25
    11ce:	5e a1       	ldd	r21, Y+38	; 0x26
    11d0:	44 1a       	sub	r4, r20
    11d2:	55 0a       	sbc	r5, r21
    11d4:	c9 88       	ldd	r12, Y+17	; 0x11
    11d6:	da 88       	ldd	r13, Y+18	; 0x12
    11d8:	00 e0       	ldi	r16, 0x00	; 0
    11da:	10 e0       	ldi	r17, 0x00	; 0
    11dc:	1c 86       	std	Y+12, r1	; 0x0c
    11de:	1b 86       	std	Y+11, r1	; 0x0b
    11e0:	89 85       	ldd	r24, Y+9	; 0x09
    11e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    11e4:	80 71       	andi	r24, 0x10	; 16
    11e6:	99 27       	eor	r25, r25
    11e8:	9f 8b       	std	Y+23, r25	; 0x17
    11ea:	8e 8b       	std	Y+22, r24	; 0x16
    11ec:	64 14       	cp	r6, r4
    11ee:	75 04       	cpc	r7, r5
    11f0:	31 f4       	brne	.+12     	; 0x11fe <__EEPROM_REGION_LENGTH__+0x1fe>
    11f2:	8b 85       	ldd	r24, Y+11	; 0x0b
    11f4:	9c 85       	ldd	r25, Y+12	; 0x0c
    11f6:	89 2b       	or	r24, r25
    11f8:	09 f4       	brne	.+2      	; 0x11fc <__EEPROM_REGION_LENGTH__+0x1fc>
    11fa:	9a c0       	rjmp	.+308    	; 0x1330 <__EEPROM_REGION_LENGTH__+0x330>
    11fc:	a6 c0       	rjmp	.+332    	; 0x134a <__EEPROM_REGION_LENGTH__+0x34a>
    11fe:	dd 8e       	std	Y+29, r13	; 0x1d
    1200:	cc 8e       	std	Y+28, r12	; 0x1c
    1202:	e8 8d       	ldd	r30, Y+24	; 0x18
    1204:	f9 8d       	ldd	r31, Y+25	; 0x19
    1206:	80 85       	ldd	r24, Z+8	; 0x08
    1208:	91 85       	ldd	r25, Z+9	; 0x09
    120a:	05 97       	sbiw	r24, 0x05	; 5
    120c:	c8 16       	cp	r12, r24
    120e:	d9 06       	cpc	r13, r25
    1210:	80 f7       	brcc	.-32     	; 0x11f2 <__EEPROM_REGION_LENGTH__+0x1f2>
    1212:	2b 81       	ldd	r18, Y+3	; 0x03
    1214:	3c 81       	ldd	r19, Y+4	; 0x04
    1216:	4d 81       	ldd	r20, Y+5	; 0x05
    1218:	5e 81       	ldd	r21, Y+6	; 0x06
    121a:	c5 01       	movw	r24, r10
    121c:	b4 01       	movw	r22, r8
    121e:	0e 94 44 22 	call	0x4488	; 0x4488 <__divsf3>
    1222:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <floorf>
    1226:	6d 87       	std	Y+13, r22	; 0x0d
    1228:	7e 87       	std	Y+14, r23	; 0x0e
    122a:	8f 87       	std	Y+15, r24	; 0x0f
    122c:	98 8b       	std	Y+16, r25	; 0x10
    122e:	0e 94 10 22 	call	0x4420	; 0x4420 <__fixsfsi>
    1232:	cb 01       	movw	r24, r22
    1234:	ee 89       	ldd	r30, Y+22	; 0x16
    1236:	ff 89       	ldd	r31, Y+23	; 0x17
    1238:	ef 2b       	or	r30, r31
    123a:	69 f4       	brne	.+26     	; 0x1256 <__EEPROM_REGION_LENGTH__+0x256>
    123c:	89 2b       	or	r24, r25
    123e:	59 f4       	brne	.+22     	; 0x1256 <__EEPROM_REGION_LENGTH__+0x256>
    1240:	fb 8d       	ldd	r31, Y+27	; 0x1b
    1242:	f7 36       	cpi	r31, 0x67	; 103
    1244:	41 f4       	brne	.+16     	; 0x1256 <__EEPROM_REGION_LENGTH__+0x256>
    1246:	77 fe       	sbrs	r7, 7
    1248:	06 c0       	rjmp	.+12     	; 0x1256 <__EEPROM_REGION_LENGTH__+0x256>
    124a:	98 01       	movw	r18, r16
    124c:	2f 5f       	subi	r18, 0xFF	; 255
    124e:	3f 4f       	sbci	r19, 0xFF	; 255
    1250:	3d 8f       	std	Y+29, r19	; 0x1d
    1252:	2c 8f       	std	Y+28, r18	; 0x1c
    1254:	43 c0       	rjmp	.+134    	; 0x12dc <__EEPROM_REGION_LENGTH__+0x2dc>
    1256:	4b 85       	ldd	r20, Y+11	; 0x0b
    1258:	5c 85       	ldd	r21, Y+12	; 0x0c
    125a:	45 2b       	or	r20, r21
    125c:	b1 f4       	brne	.+44     	; 0x128a <__EEPROM_REGION_LENGTH__+0x28a>
    125e:	77 fe       	sbrs	r7, 7
    1260:	14 c0       	rjmp	.+40     	; 0x128a <__EEPROM_REGION_LENGTH__+0x28a>
    1262:	5f ef       	ldi	r21, 0xFF	; 255
    1264:	c5 1a       	sub	r12, r21
    1266:	d5 0a       	sbc	r13, r21
    1268:	e9 81       	ldd	r30, Y+1	; 0x01
    126a:	fa 81       	ldd	r31, Y+2	; 0x02
    126c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    126e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1270:	e8 0f       	add	r30, r24
    1272:	f9 1f       	adc	r31, r25
    1274:	9e e2       	ldi	r25, 0x2E	; 46
    1276:	90 83       	st	Z, r25
    1278:	ef 81       	ldd	r30, Y+7	; 0x07
    127a:	f8 85       	ldd	r31, Y+8	; 0x08
    127c:	31 97       	sbiw	r30, 0x01	; 1
    127e:	f8 87       	std	Y+8, r31	; 0x08
    1280:	ef 83       	std	Y+7, r30	; 0x07
    1282:	21 e0       	ldi	r18, 0x01	; 1
    1284:	30 e0       	ldi	r19, 0x00	; 0
    1286:	3c 87       	std	Y+12, r19	; 0x0c
    1288:	2b 87       	std	Y+11, r18	; 0x0b
    128a:	e9 81       	ldd	r30, Y+1	; 0x01
    128c:	fa 81       	ldd	r31, Y+2	; 0x02
    128e:	ec 0d       	add	r30, r12
    1290:	fd 1d       	adc	r31, r13
    1292:	1d 8f       	std	Y+29, r17	; 0x1d
    1294:	0c 8f       	std	Y+28, r16	; 0x1c
    1296:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1298:	9d 8d       	ldd	r25, Y+29	; 0x1d
    129a:	89 2b       	or	r24, r25
    129c:	49 f0       	breq	.+18     	; 0x12b0 <__EEPROM_REGION_LENGTH__+0x2b0>
    129e:	30 e3       	ldi	r19, 0x30	; 48
    12a0:	31 93       	st	Z+, r19
    12a2:	4c 8d       	ldd	r20, Y+28	; 0x1c
    12a4:	5d 8d       	ldd	r21, Y+29	; 0x1d
    12a6:	41 50       	subi	r20, 0x01	; 1
    12a8:	51 09       	sbc	r21, r1
    12aa:	5d 8f       	std	Y+29, r21	; 0x1d
    12ac:	4c 8f       	std	Y+28, r20	; 0x1c
    12ae:	f3 cf       	rjmp	.-26     	; 0x1296 <__EEPROM_REGION_LENGTH__+0x296>
    12b0:	c8 01       	movw	r24, r16
    12b2:	8c 0d       	add	r24, r12
    12b4:	9d 1d       	adc	r25, r13
    12b6:	2f 81       	ldd	r18, Y+7	; 0x07
    12b8:	38 85       	ldd	r19, Y+8	; 0x08
    12ba:	20 1b       	sub	r18, r16
    12bc:	31 0b       	sbc	r19, r17
    12be:	6c 01       	movw	r12, r24
    12c0:	ef ef       	ldi	r30, 0xFF	; 255
    12c2:	ce 1a       	sub	r12, r30
    12c4:	de 0a       	sbc	r13, r30
    12c6:	e9 81       	ldd	r30, Y+1	; 0x01
    12c8:	fa 81       	ldd	r31, Y+2	; 0x02
    12ca:	e8 0f       	add	r30, r24
    12cc:	f9 1f       	adc	r31, r25
    12ce:	60 5d       	subi	r22, 0xD0	; 208
    12d0:	60 83       	st	Z, r22
    12d2:	a9 01       	movw	r20, r18
    12d4:	41 50       	subi	r20, 0x01	; 1
    12d6:	51 09       	sbc	r21, r1
    12d8:	58 87       	std	Y+8, r21	; 0x08
    12da:	4f 83       	std	Y+7, r20	; 0x07
    12dc:	85 01       	movw	r16, r10
    12de:	74 01       	movw	r14, r8
    12e0:	17 fb       	bst	r17, 7
    12e2:	10 95       	com	r17
    12e4:	17 f9       	bld	r17, 7
    12e6:	10 95       	com	r17
    12e8:	2b 81       	ldd	r18, Y+3	; 0x03
    12ea:	3c 81       	ldd	r19, Y+4	; 0x04
    12ec:	4d 81       	ldd	r20, Y+5	; 0x05
    12ee:	5e 81       	ldd	r21, Y+6	; 0x06
    12f0:	6d 85       	ldd	r22, Y+13	; 0x0d
    12f2:	7e 85       	ldd	r23, Y+14	; 0x0e
    12f4:	8f 85       	ldd	r24, Y+15	; 0x0f
    12f6:	98 89       	ldd	r25, Y+16	; 0x10
    12f8:	0e 94 54 13 	call	0x26a8	; 0x26a8 <fmaf>
    12fc:	4b 01       	movw	r8, r22
    12fe:	5c 01       	movw	r10, r24
    1300:	b7 fa       	bst	r11, 7
    1302:	b0 94       	com	r11
    1304:	b7 f8       	bld	r11, 7
    1306:	b0 94       	com	r11
    1308:	20 e0       	ldi	r18, 0x00	; 0
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	40 e2       	ldi	r20, 0x20	; 32
    130e:	51 e4       	ldi	r21, 0x41	; 65
    1310:	6b 81       	ldd	r22, Y+3	; 0x03
    1312:	7c 81       	ldd	r23, Y+4	; 0x04
    1314:	8d 81       	ldd	r24, Y+5	; 0x05
    1316:	9e 81       	ldd	r25, Y+6	; 0x06
    1318:	0e 94 44 22 	call	0x4488	; 0x4488 <__divsf3>
    131c:	6b 83       	std	Y+3, r22	; 0x03
    131e:	7c 83       	std	Y+4, r23	; 0x04
    1320:	8d 83       	std	Y+5, r24	; 0x05
    1322:	9e 83       	std	Y+6, r25	; 0x06
    1324:	51 e0       	ldi	r21, 0x01	; 1
    1326:	65 1a       	sub	r6, r21
    1328:	71 08       	sbc	r7, r1
    132a:	0c 8d       	ldd	r16, Y+28	; 0x1c
    132c:	1d 8d       	ldd	r17, Y+29	; 0x1d
    132e:	5e cf       	rjmp	.-324    	; 0x11ec <__EEPROM_REGION_LENGTH__+0x1ec>
    1330:	f9 85       	ldd	r31, Y+9	; 0x09
    1332:	f4 ff       	sbrs	r31, 4
    1334:	0a c0       	rjmp	.+20     	; 0x134a <__EEPROM_REGION_LENGTH__+0x34a>
    1336:	e9 81       	ldd	r30, Y+1	; 0x01
    1338:	fa 81       	ldd	r31, Y+2	; 0x02
    133a:	ec 0d       	add	r30, r12
    133c:	fd 1d       	adc	r31, r13
    133e:	8e e2       	ldi	r24, 0x2E	; 46
    1340:	80 83       	st	Z, r24
    1342:	96 01       	movw	r18, r12
    1344:	2f 5f       	subi	r18, 0xFF	; 255
    1346:	3f 4f       	sbci	r19, 0xFF	; 255
    1348:	69 01       	movw	r12, r18
    134a:	49 81       	ldd	r20, Y+1	; 0x01
    134c:	5a 81       	ldd	r21, Y+2	; 0x02
    134e:	4c 0d       	add	r20, r12
    1350:	5d 1d       	adc	r21, r13
    1352:	5c 87       	std	Y+12, r21	; 0x0c
    1354:	4b 87       	std	Y+11, r20	; 0x0b
    1356:	fa 01       	movw	r30, r20
    1358:	10 82       	st	Z, r1
    135a:	fd 89       	ldd	r31, Y+21	; 0x15
    135c:	f5 36       	cpi	r31, 0x65	; 101
    135e:	09 f0       	breq	.+2      	; 0x1362 <__EEPROM_REGION_LENGTH__+0x362>
    1360:	61 c0       	rjmp	.+194    	; 0x1424 <__EEPROM_REGION_LENGTH__+0x424>
    1362:	e9 81       	ldd	r30, Y+1	; 0x01
    1364:	fa 81       	ldd	r31, Y+2	; 0x02
    1366:	28 a1       	ldd	r18, Y+32	; 0x20
    1368:	39 a1       	ldd	r19, Y+33	; 0x21
    136a:	e2 0f       	add	r30, r18
    136c:	f3 1f       	adc	r31, r19
    136e:	31 97       	sbiw	r30, 0x01	; 1
    1370:	10 82       	st	Z, r1
    1372:	37 fe       	sbrs	r3, 7
    1374:	06 c0       	rjmp	.+12     	; 0x1382 <__EEPROM_REGION_LENGTH__+0x382>
    1376:	31 94       	neg	r3
    1378:	21 94       	neg	r2
    137a:	31 08       	sbc	r3, r1
    137c:	01 e0       	ldi	r16, 0x01	; 1
    137e:	10 e0       	ldi	r17, 0x00	; 0
    1380:	02 c0       	rjmp	.+4      	; 0x1386 <__EEPROM_REGION_LENGTH__+0x386>
    1382:	00 e0       	ldi	r16, 0x00	; 0
    1384:	10 e0       	ldi	r17, 0x00	; 0
    1386:	e8 a1       	ldd	r30, Y+32	; 0x20
    1388:	f9 a1       	ldd	r31, Y+33	; 0x21
    138a:	31 97       	sbiw	r30, 0x01	; 1
    138c:	49 81       	ldd	r20, Y+1	; 0x01
    138e:	5a 81       	ldd	r21, Y+2	; 0x02
    1390:	e4 0f       	add	r30, r20
    1392:	f5 1f       	adc	r31, r21
    1394:	22 e0       	ldi	r18, 0x02	; 2
    1396:	30 e0       	ldi	r19, 0x00	; 0
    1398:	8a e0       	ldi	r24, 0x0A	; 10
    139a:	e8 2e       	mov	r14, r24
    139c:	f1 2c       	mov	r15, r1
    139e:	cf 01       	movw	r24, r30
    13a0:	49 81       	ldd	r20, Y+1	; 0x01
    13a2:	5a 81       	ldd	r21, Y+2	; 0x02
    13a4:	84 1b       	sub	r24, r20
    13a6:	95 0b       	sbc	r25, r21
    13a8:	21 14       	cp	r2, r1
    13aa:	31 04       	cpc	r3, r1
    13ac:	79 f0       	breq	.+30     	; 0x13cc <__EEPROM_REGION_LENGTH__+0x3cc>
    13ae:	c1 01       	movw	r24, r2
    13b0:	b7 01       	movw	r22, r14
    13b2:	0e 94 8d 20 	call	0x411a	; 0x411a <__divmodhi4>
    13b6:	80 5d       	subi	r24, 0xD0	; 208
    13b8:	82 93       	st	-Z, r24
    13ba:	1b 01       	movw	r2, r22
    13bc:	21 50       	subi	r18, 0x01	; 1
    13be:	31 09       	sbc	r19, r1
    13c0:	8f 81       	ldd	r24, Y+7	; 0x07
    13c2:	98 85       	ldd	r25, Y+8	; 0x08
    13c4:	01 97       	sbiw	r24, 0x01	; 1
    13c6:	98 87       	std	Y+8, r25	; 0x08
    13c8:	8f 83       	std	Y+7, r24	; 0x07
    13ca:	e9 cf       	rjmp	.-46     	; 0x139e <__EEPROM_REGION_LENGTH__+0x39e>
    13cc:	12 16       	cp	r1, r18
    13ce:	13 06       	cpc	r1, r19
    13d0:	74 f3       	brlt	.-36     	; 0x13ae <__EEPROM_REGION_LENGTH__+0x3ae>
    13d2:	fc 01       	movw	r30, r24
    13d4:	31 97       	sbiw	r30, 0x01	; 1
    13d6:	e4 0f       	add	r30, r20
    13d8:	f5 1f       	adc	r31, r21
    13da:	01 2b       	or	r16, r17
    13dc:	11 f4       	brne	.+4      	; 0x13e2 <__EEPROM_REGION_LENGTH__+0x3e2>
    13de:	2b e2       	ldi	r18, 0x2B	; 43
    13e0:	01 c0       	rjmp	.+2      	; 0x13e4 <__EEPROM_REGION_LENGTH__+0x3e4>
    13e2:	2d e2       	ldi	r18, 0x2D	; 45
    13e4:	20 83       	st	Z, r18
    13e6:	02 97       	sbiw	r24, 0x02	; 2
    13e8:	e9 81       	ldd	r30, Y+1	; 0x01
    13ea:	fa 81       	ldd	r31, Y+2	; 0x02
    13ec:	e8 0f       	add	r30, r24
    13ee:	f9 1f       	adc	r31, r25
    13f0:	2a a1       	ldd	r18, Y+34	; 0x22
    13f2:	3b a1       	ldd	r19, Y+35	; 0x23
    13f4:	21 54       	subi	r18, 0x41	; 65
    13f6:	31 09       	sbc	r19, r1
    13f8:	2a 31       	cpi	r18, 0x1A	; 26
    13fa:	31 05       	cpc	r19, r1
    13fc:	10 f0       	brcs	.+4      	; 0x1402 <__EEPROM_REGION_LENGTH__+0x402>
    13fe:	25 e6       	ldi	r18, 0x65	; 101
    1400:	01 c0       	rjmp	.+2      	; 0x1404 <__EEPROM_REGION_LENGTH__+0x404>
    1402:	25 e4       	ldi	r18, 0x45	; 69
    1404:	20 83       	st	Z, r18
    1406:	2f 81       	ldd	r18, Y+7	; 0x07
    1408:	38 85       	ldd	r19, Y+8	; 0x08
    140a:	22 50       	subi	r18, 0x02	; 2
    140c:	31 09       	sbc	r19, r1
    140e:	38 87       	std	Y+8, r19	; 0x08
    1410:	2f 83       	std	Y+7, r18	; 0x07
    1412:	c8 16       	cp	r12, r24
    1414:	d9 06       	cpc	r13, r25
    1416:	34 f4       	brge	.+12     	; 0x1424 <__EEPROM_REGION_LENGTH__+0x424>
    1418:	af 01       	movw	r20, r30
    141a:	60 e8       	ldi	r22, 0x80	; 128
    141c:	8b 85       	ldd	r24, Y+11	; 0x0b
    141e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1420:	0e 94 42 21 	call	0x4284	; 0x4284 <strcpy>
    1424:	49 81       	ldd	r20, Y+1	; 0x01
    1426:	5a 81       	ldd	r21, Y+2	; 0x02
    1428:	3a 01       	movw	r6, r20
    142a:	80 e8       	ldi	r24, 0x80	; 128
    142c:	88 2e       	mov	r8, r24
    142e:	99 85       	ldd	r25, Y+9	; 0x09
    1430:	91 ff       	sbrs	r25, 1
    1432:	2e c0       	rjmp	.+92     	; 0x1490 <__EEPROM_REGION_LENGTH__+0x490>
    1434:	90 fd       	sbrc	r25, 0
    1436:	2c c0       	rjmp	.+88     	; 0x1490 <__EEPROM_REGION_LENGTH__+0x490>
    1438:	ef 81       	ldd	r30, Y+7	; 0x07
    143a:	f8 85       	ldd	r31, Y+8	; 0x08
    143c:	1e 16       	cp	r1, r30
    143e:	1f 06       	cpc	r1, r31
    1440:	3c f5       	brge	.+78     	; 0x1490 <__EEPROM_REGION_LENGTH__+0x490>
    1442:	88 2d       	mov	r24, r8
    1444:	b3 01       	movw	r22, r6
    1446:	0e 94 00 21 	call	0x4200	; 0x4200 <strlen>
    144a:	29 81       	ldd	r18, Y+1	; 0x01
    144c:	3a 81       	ldd	r19, Y+2	; 0x02
    144e:	82 0f       	add	r24, r18
    1450:	93 1f       	adc	r25, r19
    1452:	9c 01       	movw	r18, r24
    1454:	49 81       	ldd	r20, Y+1	; 0x01
    1456:	5a 81       	ldd	r21, Y+2	; 0x02
    1458:	24 1b       	sub	r18, r20
    145a:	35 0b       	sbc	r19, r21
    145c:	e9 89       	ldd	r30, Y+17	; 0x11
    145e:	fa 89       	ldd	r31, Y+18	; 0x12
    1460:	2e 17       	cp	r18, r30
    1462:	3f 07       	cpc	r19, r31
    1464:	4c f0       	brlt	.+18     	; 0x1478 <__EEPROM_REGION_LENGTH__+0x478>
    1466:	fc 01       	movw	r30, r24
    1468:	20 81       	ld	r18, Z
    146a:	ef 81       	ldd	r30, Y+7	; 0x07
    146c:	f8 85       	ldd	r31, Y+8	; 0x08
    146e:	e8 0f       	add	r30, r24
    1470:	f9 1f       	adc	r31, r25
    1472:	20 83       	st	Z, r18
    1474:	01 97       	sbiw	r24, 0x01	; 1
    1476:	ed cf       	rjmp	.-38     	; 0x1452 <__EEPROM_REGION_LENGTH__+0x452>
    1478:	4f 81       	ldd	r20, Y+7	; 0x07
    147a:	58 85       	ldd	r21, Y+8	; 0x08
    147c:	60 e3       	ldi	r22, 0x30	; 48
    147e:	70 e0       	ldi	r23, 0x00	; 0
    1480:	89 81       	ldd	r24, Y+1	; 0x01
    1482:	9a 81       	ldd	r25, Y+2	; 0x02
    1484:	8e 0f       	add	r24, r30
    1486:	9f 1f       	adc	r25, r31
    1488:	0e 94 cc 21 	call	0x4398	; 0x4398 <memset>
    148c:	1c 8a       	std	Y+20, r1	; 0x14
    148e:	1b 8a       	std	Y+19, r1	; 0x13
    1490:	88 2d       	mov	r24, r8
    1492:	b3 01       	movw	r22, r6
    1494:	0e 94 00 21 	call	0x4200	; 0x4200 <strlen>
    1498:	e9 84       	ldd	r14, Y+9	; 0x09
    149a:	fa 84       	ldd	r15, Y+10	; 0x0a
    149c:	0b 89       	ldd	r16, Y+19	; 0x13
    149e:	1c 89       	ldd	r17, Y+20	; 0x14
    14a0:	9c 01       	movw	r18, r24
    14a2:	68 2d       	mov	r22, r8
    14a4:	a3 01       	movw	r20, r6
    14a6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    14a8:	9f 8d       	ldd	r25, Y+31	; 0x1f
    14aa:	0e 94 8b 14 	call	0x2916	; 0x2916 <__pad>
    14ae:	a6 96       	adiw	r28, 0x26	; 38
    14b0:	e2 e1       	ldi	r30, 0x12	; 18
    14b2:	0c 94 28 20 	jmp	0x4050	; 0x4050 <__epilogue_restores__>
    14b6:	59 85       	ldd	r21, Y+9	; 0x09
    14b8:	53 ff       	sbrs	r21, 3
    14ba:	00 cd       	rjmp	.-1536   	; 0xebc <__fmt_fp+0x8e>
    14bc:	80 e2       	ldi	r24, 0x20	; 32
    14be:	f0 cc       	rjmp	.-1568   	; 0xea0 <__fmt_fp+0x72>
    14c0:	2c ef       	ldi	r18, 0xFC	; 252
    14c2:	22 16       	cp	r2, r18
    14c4:	2f ef       	ldi	r18, 0xFF	; 255
    14c6:	32 06       	cpc	r3, r18
    14c8:	4c f0       	brlt	.+18     	; 0x14dc <__EEPROM_REGION_LENGTH__+0x4dc>
    14ca:	4d a1       	ldd	r20, Y+37	; 0x25
    14cc:	5e a1       	ldd	r21, Y+38	; 0x26
    14ce:	24 16       	cp	r2, r20
    14d0:	35 06       	cpc	r3, r21
    14d2:	0c f4       	brge	.+2      	; 0x14d6 <__EEPROM_REGION_LENGTH__+0x4d6>
    14d4:	df cd       	rjmp	.-1090   	; 0x1094 <__EEPROM_REGION_LENGTH__+0x94>
    14d6:	55 e6       	ldi	r21, 0x65	; 101
    14d8:	5d 8b       	std	Y+21, r21	; 0x15
    14da:	fb cd       	rjmp	.-1034   	; 0x10d2 <__EEPROM_REGION_LENGTH__+0xd2>
    14dc:	35 e6       	ldi	r19, 0x65	; 101
    14de:	3d 8b       	std	Y+21, r19	; 0x15
    14e0:	f8 cd       	rjmp	.-1040   	; 0x10d2 <__EEPROM_REGION_LENGTH__+0xd2>
    14e2:	46 e6       	ldi	r20, 0x66	; 102
    14e4:	4d 8b       	std	Y+21, r20	; 0x15
    14e6:	f5 cd       	rjmp	.-1046   	; 0x10d2 <__EEPROM_REGION_LENGTH__+0xd2>

Disassembly of section .text.__fmt_a:

000014e8 <__fmt_a>:
    14e8:	a0 e2       	ldi	r26, 0x20	; 32
    14ea:	b0 e0       	ldi	r27, 0x00	; 0
    14ec:	ea e7       	ldi	r30, 0x7A	; 122
    14ee:	fa e0       	ldi	r31, 0x0A	; 10
    14f0:	0c 94 f1 1f 	jmp	0x3fe2	; 0x3fe2 <__prologue_saves__>
    14f4:	9d 8f       	std	Y+29, r25	; 0x1d
    14f6:	8c 8f       	std	Y+28, r24	; 0x1c
    14f8:	fb 01       	movw	r30, r22
    14fa:	29 83       	std	Y+1, r18	; 0x01
    14fc:	20 81       	ld	r18, Z
    14fe:	2d 83       	std	Y+5, r18	; 0x05
    1500:	31 81       	ldd	r19, Z+1	; 0x01
    1502:	3e 8f       	std	Y+30, r19	; 0x1e
    1504:	82 81       	ldd	r24, Z+2	; 0x02
    1506:	93 81       	ldd	r25, Z+3	; 0x03
    1508:	9b 8b       	std	Y+19, r25	; 0x13
    150a:	8a 8b       	std	Y+18, r24	; 0x12
    150c:	24 81       	ldd	r18, Z+4	; 0x04
    150e:	35 81       	ldd	r19, Z+5	; 0x05
    1510:	39 87       	std	Y+9, r19	; 0x09
    1512:	28 87       	std	Y+8, r18	; 0x08
    1514:	80 85       	ldd	r24, Z+8	; 0x08
    1516:	91 85       	ldd	r25, Z+9	; 0x09
    1518:	99 8f       	std	Y+25, r25	; 0x19
    151a:	88 8f       	std	Y+24, r24	; 0x18
    151c:	46 80       	ldd	r4, Z+6	; 0x06
    151e:	57 80       	ldd	r5, Z+7	; 0x07
    1520:	fa 01       	movw	r30, r20
    1522:	c0 80       	ld	r12, Z
    1524:	d1 80       	ldd	r13, Z+1	; 0x01
    1526:	e2 80       	ldd	r14, Z+2	; 0x02
    1528:	f3 80       	ldd	r15, Z+3	; 0x03
    152a:	20 e0       	ldi	r18, 0x00	; 0
    152c:	30 e0       	ldi	r19, 0x00	; 0
    152e:	a9 01       	movw	r20, r18
    1530:	c7 01       	movw	r24, r14
    1532:	b6 01       	movw	r22, r12
    1534:	0e 94 32 22 	call	0x4464	; 0x4464 <__cmpsf2>
    1538:	87 ff       	sbrs	r24, 7
    153a:	06 c0       	rjmp	.+12     	; 0x1548 <__fmt_a+0x60>
    153c:	f7 fa       	bst	r15, 7
    153e:	f0 94       	com	r15
    1540:	f7 f8       	bld	r15, 7
    1542:	f0 94       	com	r15
    1544:	8d e2       	ldi	r24, 0x2D	; 45
    1546:	04 c0       	rjmp	.+8      	; 0x1550 <__fmt_a+0x68>
    1548:	5d 81       	ldd	r21, Y+5	; 0x05
    154a:	52 ff       	sbrs	r21, 2
    154c:	f6 c2       	rjmp	.+1516   	; 0x1b3a <__fmt_a+0x652>
    154e:	8b e2       	ldi	r24, 0x2B	; 43
    1550:	f2 01       	movw	r30, r4
    1552:	80 83       	st	Z, r24
    1554:	28 85       	ldd	r18, Y+8	; 0x08
    1556:	39 85       	ldd	r19, Y+9	; 0x09
    1558:	21 50       	subi	r18, 0x01	; 1
    155a:	31 09       	sbc	r19, r1
    155c:	3f 87       	std	Y+15, r19	; 0x0f
    155e:	2e 87       	std	Y+14, r18	; 0x0e
    1560:	41 e0       	ldi	r20, 0x01	; 1
    1562:	50 e0       	ldi	r21, 0x00	; 0
    1564:	5c 83       	std	Y+4, r21	; 0x04
    1566:	4b 83       	std	Y+3, r20	; 0x03
    1568:	06 c0       	rjmp	.+12     	; 0x1576 <__fmt_a+0x8e>
    156a:	88 85       	ldd	r24, Y+8	; 0x08
    156c:	99 85       	ldd	r25, Y+9	; 0x09
    156e:	9f 87       	std	Y+15, r25	; 0x0f
    1570:	8e 87       	std	Y+14, r24	; 0x0e
    1572:	1c 82       	std	Y+4, r1	; 0x04
    1574:	1b 82       	std	Y+3, r1	; 0x03
    1576:	b7 01       	movw	r22, r14
    1578:	a6 01       	movw	r20, r12
    157a:	7f 77       	andi	r23, 0x7F	; 127
    157c:	e9 81       	ldd	r30, Y+1	; 0x01
    157e:	0e 2e       	mov	r0, r30
    1580:	00 0c       	add	r0, r0
    1582:	ff 0b       	sbc	r31, r31
    1584:	f9 8b       	std	Y+17, r31	; 0x11
    1586:	e8 8b       	std	Y+16, r30	; 0x10
    1588:	41 15       	cp	r20, r1
    158a:	51 05       	cpc	r21, r1
    158c:	f0 e8       	ldi	r31, 0x80	; 128
    158e:	6f 07       	cpc	r22, r31
    1590:	ff e7       	ldi	r31, 0x7F	; 127
    1592:	7f 07       	cpc	r23, r31
    1594:	c1 f4       	brne	.+48     	; 0x15c6 <__fmt_a+0xde>
    1596:	28 89       	ldd	r18, Y+16	; 0x10
    1598:	39 89       	ldd	r19, Y+17	; 0x11
    159a:	21 54       	subi	r18, 0x41	; 65
    159c:	31 09       	sbc	r19, r1
    159e:	8b 81       	ldd	r24, Y+3	; 0x03
    15a0:	9c 81       	ldd	r25, Y+4	; 0x04
    15a2:	84 0d       	add	r24, r4
    15a4:	95 1d       	adc	r25, r5
    15a6:	2a 31       	cpi	r18, 0x1A	; 26
    15a8:	31 05       	cpc	r19, r1
    15aa:	20 f4       	brcc	.+8      	; 0x15b4 <__fmt_a+0xcc>
    15ac:	4f ed       	ldi	r20, 0xDF	; 223
    15ae:	55 e0       	ldi	r21, 0x05	; 5
    15b0:	60 e0       	ldi	r22, 0x00	; 0
    15b2:	03 c0       	rjmp	.+6      	; 0x15ba <__fmt_a+0xd2>
    15b4:	43 ee       	ldi	r20, 0xE3	; 227
    15b6:	55 e0       	ldi	r21, 0x05	; 5
    15b8:	60 e0       	ldi	r22, 0x00	; 0
    15ba:	0e 94 42 21 	call	0x4284	; 0x4284 <strcpy>
    15be:	63 ee       	ldi	r22, 0xE3	; 227
    15c0:	75 e0       	ldi	r23, 0x05	; 5
    15c2:	80 e0       	ldi	r24, 0x00	; 0
    15c4:	1c c0       	rjmp	.+56     	; 0x15fe <__fmt_a+0x116>
    15c6:	8b 81       	ldd	r24, Y+3	; 0x03
    15c8:	9c 81       	ldd	r25, Y+4	; 0x04
    15ca:	84 0d       	add	r24, r4
    15cc:	95 1d       	adc	r25, r5
    15ce:	41 30       	cpi	r20, 0x01	; 1
    15d0:	51 05       	cpc	r21, r1
    15d2:	60 48       	sbci	r22, 0x80	; 128
    15d4:	7f 47       	sbci	r23, 0x7F	; 127
    15d6:	e8 f0       	brcs	.+58     	; 0x1612 <__fmt_a+0x12a>
    15d8:	28 89       	ldd	r18, Y+16	; 0x10
    15da:	39 89       	ldd	r19, Y+17	; 0x11
    15dc:	21 54       	subi	r18, 0x41	; 65
    15de:	31 09       	sbc	r19, r1
    15e0:	2a 31       	cpi	r18, 0x1A	; 26
    15e2:	31 05       	cpc	r19, r1
    15e4:	20 f4       	brcc	.+8      	; 0x15ee <__fmt_a+0x106>
    15e6:	47 ee       	ldi	r20, 0xE7	; 231
    15e8:	55 e0       	ldi	r21, 0x05	; 5
    15ea:	60 e0       	ldi	r22, 0x00	; 0
    15ec:	03 c0       	rjmp	.+6      	; 0x15f4 <__fmt_a+0x10c>
    15ee:	4b ee       	ldi	r20, 0xEB	; 235
    15f0:	55 e0       	ldi	r21, 0x05	; 5
    15f2:	60 e0       	ldi	r22, 0x00	; 0
    15f4:	0e 94 42 21 	call	0x4284	; 0x4284 <strcpy>
    15f8:	6b ee       	ldi	r22, 0xEB	; 235
    15fa:	75 e0       	ldi	r23, 0x05	; 5
    15fc:	80 e0       	ldi	r24, 0x00	; 0
    15fe:	0e 94 00 21 	call	0x4200	; 0x4200 <strlen>
    1602:	a2 01       	movw	r20, r4
    1604:	60 e8       	ldi	r22, 0x80	; 128
    1606:	ed 80       	ldd	r14, Y+5	; 0x05
    1608:	fe 8c       	ldd	r15, Y+30	; 0x1e
    160a:	08 85       	ldd	r16, Y+8	; 0x08
    160c:	19 85       	ldd	r17, Y+9	; 0x09
    160e:	9c 01       	movw	r18, r24
    1610:	8c c2       	rjmp	.+1304   	; 0x1b2a <__fmt_a+0x642>
    1612:	20 e3       	ldi	r18, 0x30	; 48
    1614:	fc 01       	movw	r30, r24
    1616:	20 83       	st	Z, r18
    1618:	eb 81       	ldd	r30, Y+3	; 0x03
    161a:	fc 81       	ldd	r31, Y+4	; 0x04
    161c:	31 96       	adiw	r30, 0x01	; 1
    161e:	e4 0d       	add	r30, r4
    1620:	f5 1d       	adc	r31, r5
    1622:	2b 81       	ldd	r18, Y+3	; 0x03
    1624:	3c 81       	ldd	r19, Y+4	; 0x04
    1626:	2e 5f       	subi	r18, 0xFE	; 254
    1628:	3f 4f       	sbci	r19, 0xFF	; 255
    162a:	3c 83       	std	Y+4, r19	; 0x04
    162c:	2b 83       	std	Y+3, r18	; 0x03
    162e:	48 89       	ldd	r20, Y+16	; 0x10
    1630:	59 89       	ldd	r21, Y+17	; 0x11
    1632:	41 54       	subi	r20, 0x41	; 65
    1634:	51 09       	sbc	r21, r1
    1636:	5b 8f       	std	Y+27, r21	; 0x1b
    1638:	4a 8f       	std	Y+26, r20	; 0x1a
    163a:	4a 31       	cpi	r20, 0x1A	; 26
    163c:	51 05       	cpc	r21, r1
    163e:	10 f0       	brcs	.+4      	; 0x1644 <__fmt_a+0x15c>
    1640:	88 e7       	ldi	r24, 0x78	; 120
    1642:	01 c0       	rjmp	.+2      	; 0x1646 <__fmt_a+0x15e>
    1644:	88 e5       	ldi	r24, 0x58	; 88
    1646:	80 83       	st	Z, r24
    1648:	20 e0       	ldi	r18, 0x00	; 0
    164a:	30 e0       	ldi	r19, 0x00	; 0
    164c:	a9 01       	movw	r20, r18
    164e:	c7 01       	movw	r24, r14
    1650:	b6 01       	movw	r22, r12
    1652:	0e 94 32 22 	call	0x4464	; 0x4464 <__cmpsf2>
    1656:	61 2c       	mov	r6, r1
    1658:	71 2c       	mov	r7, r1
    165a:	1f 8e       	std	Y+31, r1	; 0x1f
    165c:	19 82       	std	Y+1, r1	; 0x01
    165e:	88 23       	and	r24, r24
    1660:	09 f4       	brne	.+2      	; 0x1664 <__fmt_a+0x17c>
    1662:	64 c0       	rjmp	.+200    	; 0x172c <__fmt_a+0x244>
    1664:	50 e8       	ldi	r21, 0x80	; 128
    1666:	58 a3       	std	Y+32, r21	; 0x20
    1668:	8f e3       	ldi	r24, 0x3F	; 63
    166a:	8a 83       	std	Y+2, r24	; 0x02
    166c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    166e:	39 81       	ldd	r19, Y+1	; 0x01
    1670:	48 a1       	ldd	r20, Y+32	; 0x20
    1672:	5a 81       	ldd	r21, Y+2	; 0x02
    1674:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1676:	79 81       	ldd	r23, Y+1	; 0x01
    1678:	88 a1       	ldd	r24, Y+32	; 0x20
    167a:	9a 81       	ldd	r25, Y+2	; 0x02
    167c:	0e 94 0a 22 	call	0x4414	; 0x4414 <__addsf3>
    1680:	5b 01       	movw	r10, r22
    1682:	8c 01       	movw	r16, r24
    1684:	a7 01       	movw	r20, r14
    1686:	96 01       	movw	r18, r12
    1688:	0e 94 37 22 	call	0x446e	; 0x446e <__gesf2>
    168c:	18 16       	cp	r1, r24
    168e:	0c f4       	brge	.+2      	; 0x1692 <__fmt_a+0x1aa>
    1690:	42 c0       	rjmp	.+132    	; 0x1716 <__fmt_a+0x22e>
    1692:	9f ef       	ldi	r25, 0xFF	; 255
    1694:	69 1a       	sub	r6, r25
    1696:	79 0a       	sbc	r7, r25
    1698:	af 8e       	std	Y+31, r10	; 0x1f
    169a:	b9 82       	std	Y+1, r11	; 0x01
    169c:	08 a3       	std	Y+32, r16	; 0x20
    169e:	1a 83       	std	Y+2, r17	; 0x02
    16a0:	e5 cf       	rjmp	.-54     	; 0x166c <__fmt_a+0x184>
    16a2:	20 e0       	ldi	r18, 0x00	; 0
    16a4:	30 e0       	ldi	r19, 0x00	; 0
    16a6:	40 e0       	ldi	r20, 0x00	; 0
    16a8:	5f e3       	ldi	r21, 0x3F	; 63
    16aa:	6f 8d       	ldd	r22, Y+31	; 0x1f
    16ac:	79 81       	ldd	r23, Y+1	; 0x01
    16ae:	88 a1       	ldd	r24, Y+32	; 0x20
    16b0:	9a 81       	ldd	r25, Y+2	; 0x02
    16b2:	0e 94 48 22 	call	0x4490	; 0x4490 <__mulsf3>
    16b6:	20 e0       	ldi	r18, 0x00	; 0
    16b8:	30 e0       	ldi	r19, 0x00	; 0
    16ba:	a9 01       	movw	r20, r18
    16bc:	0e 94 32 22 	call	0x4464	; 0x4464 <__cmpsf2>
    16c0:	81 11       	cpse	r24, r1
    16c2:	18 c0       	rjmp	.+48     	; 0x16f4 <__fmt_a+0x20c>
    16c4:	20 e0       	ldi	r18, 0x00	; 0
    16c6:	30 e0       	ldi	r19, 0x00	; 0
    16c8:	40 e8       	ldi	r20, 0x80	; 128
    16ca:	5a e5       	ldi	r21, 0x5A	; 90
    16cc:	6f 8d       	ldd	r22, Y+31	; 0x1f
    16ce:	79 81       	ldd	r23, Y+1	; 0x01
    16d0:	88 a1       	ldd	r24, Y+32	; 0x20
    16d2:	9a 81       	ldd	r25, Y+2	; 0x02
    16d4:	0e 94 48 22 	call	0x4490	; 0x4490 <__mulsf3>
    16d8:	6f 8f       	std	Y+31, r22	; 0x1f
    16da:	79 83       	std	Y+1, r23	; 0x01
    16dc:	88 a3       	std	Y+32, r24	; 0x20
    16de:	9a 83       	std	Y+2, r25	; 0x02
    16e0:	20 e0       	ldi	r18, 0x00	; 0
    16e2:	30 e0       	ldi	r19, 0x00	; 0
    16e4:	40 e8       	ldi	r20, 0x80	; 128
    16e6:	5a e5       	ldi	r21, 0x5A	; 90
    16e8:	c7 01       	movw	r24, r14
    16ea:	b6 01       	movw	r22, r12
    16ec:	0e 94 48 22 	call	0x4490	; 0x4490 <__mulsf3>
    16f0:	6b 01       	movw	r12, r22
    16f2:	7c 01       	movw	r14, r24
    16f4:	20 e0       	ldi	r18, 0x00	; 0
    16f6:	30 e0       	ldi	r19, 0x00	; 0
    16f8:	40 e0       	ldi	r20, 0x00	; 0
    16fa:	5f e3       	ldi	r21, 0x3F	; 63
    16fc:	6f 8d       	ldd	r22, Y+31	; 0x1f
    16fe:	79 81       	ldd	r23, Y+1	; 0x01
    1700:	88 a1       	ldd	r24, Y+32	; 0x20
    1702:	9a 81       	ldd	r25, Y+2	; 0x02
    1704:	0e 94 48 22 	call	0x4490	; 0x4490 <__mulsf3>
    1708:	6f 8f       	std	Y+31, r22	; 0x1f
    170a:	79 83       	std	Y+1, r23	; 0x01
    170c:	88 a3       	std	Y+32, r24	; 0x20
    170e:	9a 83       	std	Y+2, r25	; 0x02
    1710:	a1 e0       	ldi	r26, 0x01	; 1
    1712:	6a 1a       	sub	r6, r26
    1714:	71 08       	sbc	r7, r1
    1716:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1718:	39 81       	ldd	r19, Y+1	; 0x01
    171a:	48 a1       	ldd	r20, Y+32	; 0x20
    171c:	5a 81       	ldd	r21, Y+2	; 0x02
    171e:	c7 01       	movw	r24, r14
    1720:	b6 01       	movw	r22, r12
    1722:	0e 94 32 22 	call	0x4464	; 0x4464 <__cmpsf2>
    1726:	87 fd       	sbrc	r24, 7
    1728:	bc cf       	rjmp	.-136    	; 0x16a2 <__fmt_a+0x1ba>
    172a:	04 c0       	rjmp	.+8      	; 0x1734 <__fmt_a+0x24c>
    172c:	e0 e8       	ldi	r30, 0x80	; 128
    172e:	e8 a3       	std	Y+32, r30	; 0x20
    1730:	ff e3       	ldi	r31, 0x3F	; 63
    1732:	fa 83       	std	Y+2, r31	; 0x02
    1734:	2a 89       	ldd	r18, Y+18	; 0x12
    1736:	3b 89       	ldd	r19, Y+19	; 0x13
    1738:	37 fd       	sbrc	r19, 7
    173a:	02 c0       	rjmp	.+4      	; 0x1740 <__fmt_a+0x258>
    173c:	c9 01       	movw	r24, r18
    173e:	02 c0       	rjmp	.+4      	; 0x1744 <__fmt_a+0x25c>
    1740:	88 e1       	ldi	r24, 0x18	; 24
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	ac 01       	movw	r20, r24
    1746:	4f 5f       	subi	r20, 0xFF	; 255
    1748:	5f 4f       	sbci	r21, 0xFF	; 255
    174a:	5b 87       	std	Y+11, r21	; 0x0b
    174c:	4a 87       	std	Y+10, r20	; 0x0a
    174e:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1750:	99 80       	ldd	r9, Y+1	; 0x01
    1752:	a8 a0       	ldd	r10, Y+32	; 0x20
    1754:	ba 80       	ldd	r11, Y+2	; 0x02
    1756:	16 01       	movw	r2, r12
    1758:	87 01       	movw	r16, r14
    175a:	1f 82       	std	Y+7, r1	; 0x07
    175c:	1e 82       	std	Y+6, r1	; 0x06
    175e:	94 01       	movw	r18, r8
    1760:	a5 01       	movw	r20, r10
    1762:	b1 01       	movw	r22, r2
    1764:	c8 01       	movw	r24, r16
    1766:	0e 94 44 22 	call	0x4488	; 0x4488 <__divsf3>
    176a:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <floorf>
    176e:	6c 8b       	std	Y+20, r22	; 0x14
    1770:	7d 8b       	std	Y+21, r23	; 0x15
    1772:	8e 8b       	std	Y+22, r24	; 0x16
    1774:	9f 8b       	std	Y+23, r25	; 0x17
    1776:	94 01       	movw	r18, r8
    1778:	a5 01       	movw	r20, r10
    177a:	0e 94 48 22 	call	0x4490	; 0x4490 <__mulsf3>
    177e:	9b 01       	movw	r18, r22
    1780:	ac 01       	movw	r20, r24
    1782:	b1 01       	movw	r22, r2
    1784:	c8 01       	movw	r24, r16
    1786:	0e 94 09 22 	call	0x4412	; 0x4412 <__subsf3>
    178a:	1b 01       	movw	r2, r22
    178c:	8c 01       	movw	r16, r24
    178e:	20 e0       	ldi	r18, 0x00	; 0
    1790:	30 e0       	ldi	r19, 0x00	; 0
    1792:	40 e8       	ldi	r20, 0x80	; 128
    1794:	5d e3       	ldi	r21, 0x3D	; 61
    1796:	b4 01       	movw	r22, r8
    1798:	c5 01       	movw	r24, r10
    179a:	0e 94 48 22 	call	0x4490	; 0x4490 <__mulsf3>
    179e:	4b 01       	movw	r8, r22
    17a0:	5c 01       	movw	r10, r24
    17a2:	8e 81       	ldd	r24, Y+6	; 0x06
    17a4:	9f 81       	ldd	r25, Y+7	; 0x07
    17a6:	01 96       	adiw	r24, 0x01	; 1
    17a8:	9f 83       	std	Y+7, r25	; 0x07
    17aa:	8e 83       	std	Y+6, r24	; 0x06
    17ac:	ea 89       	ldd	r30, Y+18	; 0x12
    17ae:	fb 89       	ldd	r31, Y+19	; 0x13
    17b0:	f7 ff       	sbrs	r31, 7
    17b2:	09 c0       	rjmp	.+18     	; 0x17c6 <__fmt_a+0x2de>
    17b4:	20 e0       	ldi	r18, 0x00	; 0
    17b6:	30 e0       	ldi	r19, 0x00	; 0
    17b8:	a9 01       	movw	r20, r18
    17ba:	b1 01       	movw	r22, r2
    17bc:	c8 01       	movw	r24, r16
    17be:	0e 94 32 22 	call	0x4464	; 0x4464 <__cmpsf2>
    17c2:	88 23       	and	r24, r24
    17c4:	41 f0       	breq	.+16     	; 0x17d6 <__fmt_a+0x2ee>
    17c6:	2a 85       	ldd	r18, Y+10	; 0x0a
    17c8:	3b 85       	ldd	r19, Y+11	; 0x0b
    17ca:	4e 81       	ldd	r20, Y+6	; 0x06
    17cc:	5f 81       	ldd	r21, Y+7	; 0x07
    17ce:	42 17       	cp	r20, r18
    17d0:	53 07       	cpc	r21, r19
    17d2:	2c f2       	brlt	.-118    	; 0x175e <__fmt_a+0x276>
    17d4:	04 c0       	rjmp	.+8      	; 0x17de <__fmt_a+0x2f6>
    17d6:	8e 81       	ldd	r24, Y+6	; 0x06
    17d8:	9f 81       	ldd	r25, Y+7	; 0x07
    17da:	9b 87       	std	Y+11, r25	; 0x0b
    17dc:	8a 87       	std	Y+10, r24	; 0x0a
    17de:	20 e0       	ldi	r18, 0x00	; 0
    17e0:	30 e0       	ldi	r19, 0x00	; 0
    17e2:	40 e0       	ldi	r20, 0x00	; 0
    17e4:	51 e4       	ldi	r21, 0x41	; 65
    17e6:	b4 01       	movw	r22, r8
    17e8:	c5 01       	movw	r24, r10
    17ea:	0e 94 48 22 	call	0x4490	; 0x4490 <__mulsf3>
    17ee:	4b 01       	movw	r8, r22
    17f0:	5c 01       	movw	r10, r24
    17f2:	9b 01       	movw	r18, r22
    17f4:	ac 01       	movw	r20, r24
    17f6:	b1 01       	movw	r22, r2
    17f8:	c8 01       	movw	r24, r16
    17fa:	0e 94 32 22 	call	0x4464	; 0x4464 <__cmpsf2>
    17fe:	87 fd       	sbrc	r24, 7
    1800:	12 c0       	rjmp	.+36     	; 0x1826 <__fmt_a+0x33e>
    1802:	a5 01       	movw	r20, r10
    1804:	94 01       	movw	r18, r8
    1806:	b1 01       	movw	r22, r2
    1808:	c8 01       	movw	r24, r16
    180a:	0e 94 32 22 	call	0x4464	; 0x4464 <__cmpsf2>
    180e:	81 11       	cpse	r24, r1
    1810:	0d c0       	rjmp	.+26     	; 0x182c <__fmt_a+0x344>
    1812:	6c 89       	ldd	r22, Y+20	; 0x14
    1814:	7d 89       	ldd	r23, Y+21	; 0x15
    1816:	8e 89       	ldd	r24, Y+22	; 0x16
    1818:	9f 89       	ldd	r25, Y+23	; 0x17
    181a:	0e 94 10 22 	call	0x4420	; 0x4420 <__fixsfsi>
    181e:	61 70       	andi	r22, 0x01	; 1
    1820:	77 27       	eor	r23, r23
    1822:	67 2b       	or	r22, r23
    1824:	19 f4       	brne	.+6      	; 0x182c <__fmt_a+0x344>
    1826:	81 2c       	mov	r8, r1
    1828:	91 2c       	mov	r9, r1
    182a:	54 01       	movw	r10, r8
    182c:	a5 01       	movw	r20, r10
    182e:	94 01       	movw	r18, r8
    1830:	c7 01       	movw	r24, r14
    1832:	b6 01       	movw	r22, r12
    1834:	0e 94 0a 22 	call	0x4414	; 0x4414 <__addsf3>
    1838:	6b 01       	movw	r12, r22
    183a:	7c 01       	movw	r14, r24
    183c:	dc 01       	movw	r26, r24
    183e:	cb 01       	movw	r24, r22
    1840:	bf 77       	andi	r27, 0x7F	; 127
    1842:	00 97       	sbiw	r24, 0x00	; 0
    1844:	a0 48       	sbci	r26, 0x80	; 128
    1846:	bf 47       	sbci	r27, 0x7F	; 127
    1848:	09 f4       	brne	.+2      	; 0x184c <__fmt_a+0x364>
    184a:	a5 ce       	rjmp	.-694    	; 0x1596 <__fmt_a+0xae>
    184c:	2e 84       	ldd	r2, Y+14	; 0x0e
    184e:	3f 84       	ldd	r3, Y+15	; 0x0f
    1850:	f2 e0       	ldi	r31, 0x02	; 2
    1852:	2f 1a       	sub	r2, r31
    1854:	31 08       	sbc	r3, r1
    1856:	2a 85       	ldd	r18, Y+10	; 0x0a
    1858:	3b 85       	ldd	r19, Y+11	; 0x0b
    185a:	31 95       	neg	r19
    185c:	21 95       	neg	r18
    185e:	31 09       	sbc	r19, r1
    1860:	39 8b       	std	Y+17, r19	; 0x11
    1862:	28 8b       	std	Y+16, r18	; 0x10
    1864:	0b 81       	ldd	r16, Y+3	; 0x03
    1866:	1c 81       	ldd	r17, Y+4	; 0x04
    1868:	a1 2c       	mov	r10, r1
    186a:	b1 2c       	mov	r11, r1
    186c:	1f 82       	std	Y+7, r1	; 0x07
    186e:	1e 82       	std	Y+6, r1	; 0x06
    1870:	81 2c       	mov	r8, r1
    1872:	91 2c       	mov	r9, r1
    1874:	48 8d       	ldd	r20, Y+24	; 0x18
    1876:	59 8d       	ldd	r21, Y+25	; 0x19
    1878:	45 50       	subi	r20, 0x05	; 5
    187a:	51 09       	sbc	r21, r1
    187c:	5d 8b       	std	Y+21, r21	; 0x15
    187e:	4c 8b       	std	Y+20, r20	; 0x14
    1880:	ec 89       	ldd	r30, Y+20	; 0x14
    1882:	fd 89       	ldd	r31, Y+21	; 0x15
    1884:	0e 17       	cp	r16, r30
    1886:	1f 07       	cpc	r17, r31
    1888:	0c f0       	brlt	.+2      	; 0x188c <__fmt_a+0x3a4>
    188a:	91 c0       	rjmp	.+290    	; 0x19ae <__fmt_a+0x4c6>
    188c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    188e:	39 81       	ldd	r19, Y+1	; 0x01
    1890:	48 a1       	ldd	r20, Y+32	; 0x20
    1892:	5a 81       	ldd	r21, Y+2	; 0x02
    1894:	c7 01       	movw	r24, r14
    1896:	b6 01       	movw	r22, r12
    1898:	0e 94 44 22 	call	0x4488	; 0x4488 <__divsf3>
    189c:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <floorf>
    18a0:	6a 87       	std	Y+10, r22	; 0x0a
    18a2:	7b 87       	std	Y+11, r23	; 0x0b
    18a4:	8c 87       	std	Y+12, r24	; 0x0c
    18a6:	9d 87       	std	Y+13, r25	; 0x0d
    18a8:	0e 94 10 22 	call	0x4420	; 0x4420 <__fixsfsi>
    18ac:	ab 01       	movw	r20, r22
    18ae:	61 15       	cp	r22, r1
    18b0:	71 05       	cpc	r23, r1
    18b2:	39 f4       	brne	.+14     	; 0x18c2 <__fmt_a+0x3da>
    18b4:	81 14       	cp	r8, r1
    18b6:	91 04       	cpc	r9, r1
    18b8:	21 f0       	breq	.+8      	; 0x18c2 <__fmt_a+0x3da>
    18ba:	5f ef       	ldi	r21, 0xFF	; 255
    18bc:	a5 1a       	sub	r10, r21
    18be:	b5 0a       	sbc	r11, r21
    18c0:	4d c0       	rjmp	.+154    	; 0x195c <__fmt_a+0x474>
    18c2:	ee 81       	ldd	r30, Y+6	; 0x06
    18c4:	ff 81       	ldd	r31, Y+7	; 0x07
    18c6:	ef 2b       	or	r30, r31
    18c8:	89 f4       	brne	.+34     	; 0x18ec <__fmt_a+0x404>
    18ca:	81 14       	cp	r8, r1
    18cc:	91 04       	cpc	r9, r1
    18ce:	71 f0       	breq	.+28     	; 0x18ec <__fmt_a+0x404>
    18d0:	f2 01       	movw	r30, r4
    18d2:	e0 0f       	add	r30, r16
    18d4:	f1 1f       	adc	r31, r17
    18d6:	2e e2       	ldi	r18, 0x2E	; 46
    18d8:	20 83       	st	Z, r18
    18da:	31 e0       	ldi	r19, 0x01	; 1
    18dc:	23 1a       	sub	r2, r19
    18de:	31 08       	sbc	r3, r1
    18e0:	0f 5f       	subi	r16, 0xFF	; 255
    18e2:	1f 4f       	sbci	r17, 0xFF	; 255
    18e4:	e1 e0       	ldi	r30, 0x01	; 1
    18e6:	f0 e0       	ldi	r31, 0x00	; 0
    18e8:	ff 83       	std	Y+7, r31	; 0x07
    18ea:	ee 83       	std	Y+6, r30	; 0x06
    18ec:	f2 01       	movw	r30, r4
    18ee:	e0 0f       	add	r30, r16
    18f0:	f1 1f       	adc	r31, r17
    18f2:	95 01       	movw	r18, r10
    18f4:	21 15       	cp	r18, r1
    18f6:	31 05       	cpc	r19, r1
    18f8:	29 f0       	breq	.+10     	; 0x1904 <__fmt_a+0x41c>
    18fa:	a0 e3       	ldi	r26, 0x30	; 48
    18fc:	a1 93       	st	Z+, r26
    18fe:	21 50       	subi	r18, 0x01	; 1
    1900:	31 09       	sbc	r19, r1
    1902:	f8 cf       	rjmp	.-16     	; 0x18f4 <__fmt_a+0x40c>
    1904:	f8 01       	movw	r30, r16
    1906:	ea 0d       	add	r30, r10
    1908:	fb 1d       	adc	r31, r11
    190a:	ff 87       	std	Y+15, r31	; 0x0f
    190c:	ee 87       	std	Y+14, r30	; 0x0e
    190e:	2a 18       	sub	r2, r10
    1910:	3b 08       	sbc	r3, r11
    1912:	4a 30       	cpi	r20, 0x0A	; 10
    1914:	51 05       	cpc	r21, r1
    1916:	1c f4       	brge	.+6      	; 0x191e <__fmt_a+0x436>
    1918:	60 5d       	subi	r22, 0xD0	; 208
    191a:	7f 4f       	sbci	r23, 0xFF	; 255
    191c:	02 c0       	rjmp	.+4      	; 0x1922 <__fmt_a+0x43a>
    191e:	69 5a       	subi	r22, 0xA9	; 169
    1920:	7f 4f       	sbci	r23, 0xFF	; 255
    1922:	2a 8d       	ldd	r18, Y+26	; 0x1a
    1924:	3b 8d       	ldd	r19, Y+27	; 0x1b
    1926:	2a 31       	cpi	r18, 0x1A	; 26
    1928:	31 05       	cpc	r19, r1
    192a:	50 f4       	brcc	.+20     	; 0x1940 <__fmt_a+0x458>
    192c:	cb 01       	movw	r24, r22
    192e:	80 62       	ori	r24, 0x20	; 32
    1930:	81 56       	subi	r24, 0x61	; 97
    1932:	91 09       	sbc	r25, r1
    1934:	4a 97       	sbiw	r24, 0x1a	; 26
    1936:	20 f4       	brcc	.+8      	; 0x1940 <__fmt_a+0x458>
    1938:	cb 01       	movw	r24, r22
    193a:	0e 94 d5 21 	call	0x43aa	; 0x43aa <toupper>
    193e:	bc 01       	movw	r22, r24
    1940:	0e 85       	ldd	r16, Y+14	; 0x0e
    1942:	1f 85       	ldd	r17, Y+15	; 0x0f
    1944:	0f 5f       	subi	r16, 0xFF	; 255
    1946:	1f 4f       	sbci	r17, 0xFF	; 255
    1948:	ee 85       	ldd	r30, Y+14	; 0x0e
    194a:	ff 85       	ldd	r31, Y+15	; 0x0f
    194c:	e4 0d       	add	r30, r4
    194e:	f5 1d       	adc	r31, r5
    1950:	60 83       	st	Z, r22
    1952:	31 e0       	ldi	r19, 0x01	; 1
    1954:	23 1a       	sub	r2, r19
    1956:	31 08       	sbc	r3, r1
    1958:	a1 2c       	mov	r10, r1
    195a:	b1 2c       	mov	r11, r1
    195c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    195e:	39 81       	ldd	r19, Y+1	; 0x01
    1960:	48 a1       	ldd	r20, Y+32	; 0x20
    1962:	5a 81       	ldd	r21, Y+2	; 0x02
    1964:	6a 85       	ldd	r22, Y+10	; 0x0a
    1966:	7b 85       	ldd	r23, Y+11	; 0x0b
    1968:	8c 85       	ldd	r24, Y+12	; 0x0c
    196a:	9d 85       	ldd	r25, Y+13	; 0x0d
    196c:	0e 94 48 22 	call	0x4490	; 0x4490 <__mulsf3>
    1970:	9b 01       	movw	r18, r22
    1972:	ac 01       	movw	r20, r24
    1974:	c7 01       	movw	r24, r14
    1976:	b6 01       	movw	r22, r12
    1978:	0e 94 09 22 	call	0x4412	; 0x4412 <__subsf3>
    197c:	6b 01       	movw	r12, r22
    197e:	7c 01       	movw	r14, r24
    1980:	20 e0       	ldi	r18, 0x00	; 0
    1982:	30 e0       	ldi	r19, 0x00	; 0
    1984:	40 e8       	ldi	r20, 0x80	; 128
    1986:	5d e3       	ldi	r21, 0x3D	; 61
    1988:	6f 8d       	ldd	r22, Y+31	; 0x1f
    198a:	79 81       	ldd	r23, Y+1	; 0x01
    198c:	88 a1       	ldd	r24, Y+32	; 0x20
    198e:	9a 81       	ldd	r25, Y+2	; 0x02
    1990:	0e 94 48 22 	call	0x4490	; 0x4490 <__mulsf3>
    1994:	6f 8f       	std	Y+31, r22	; 0x1f
    1996:	79 83       	std	Y+1, r23	; 0x01
    1998:	88 a3       	std	Y+32, r24	; 0x20
    199a:	9a 83       	std	Y+2, r25	; 0x02
    199c:	41 e0       	ldi	r20, 0x01	; 1
    199e:	84 1a       	sub	r8, r20
    19a0:	91 08       	sbc	r9, r1
    19a2:	88 89       	ldd	r24, Y+16	; 0x10
    19a4:	99 89       	ldd	r25, Y+17	; 0x11
    19a6:	88 15       	cp	r24, r8
    19a8:	99 05       	cpc	r25, r9
    19aa:	09 f0       	breq	.+2      	; 0x19ae <__fmt_a+0x4c6>
    19ac:	69 cf       	rjmp	.-302    	; 0x1880 <__fmt_a+0x398>
    19ae:	2e 81       	ldd	r18, Y+6	; 0x06
    19b0:	3f 81       	ldd	r19, Y+7	; 0x07
    19b2:	23 2b       	or	r18, r19
    19b4:	51 f5       	brne	.+84     	; 0x1a0a <__fmt_a+0x522>
    19b6:	f2 01       	movw	r30, r4
    19b8:	e0 0f       	add	r30, r16
    19ba:	f1 1f       	adc	r31, r17
    19bc:	a1 14       	cp	r10, r1
    19be:	b1 04       	cpc	r11, r1
    19c0:	e9 f0       	breq	.+58     	; 0x19fc <__fmt_a+0x514>
    19c2:	4a 89       	ldd	r20, Y+18	; 0x12
    19c4:	5b 89       	ldd	r21, Y+19	; 0x13
    19c6:	14 16       	cp	r1, r20
    19c8:	15 06       	cpc	r1, r21
    19ca:	c4 f4       	brge	.+48     	; 0x19fc <__fmt_a+0x514>
    19cc:	5d 81       	ldd	r21, Y+5	; 0x05
    19ce:	50 fd       	sbrc	r21, 0
    19d0:	15 c0       	rjmp	.+42     	; 0x19fc <__fmt_a+0x514>
    19d2:	8e e2       	ldi	r24, 0x2E	; 46
    19d4:	80 83       	st	Z, r24
    19d6:	f8 01       	movw	r30, r16
    19d8:	31 96       	adiw	r30, 0x01	; 1
    19da:	e4 0d       	add	r30, r4
    19dc:	f5 1d       	adc	r31, r5
    19de:	c5 01       	movw	r24, r10
    19e0:	20 e3       	ldi	r18, 0x30	; 48
    19e2:	21 93       	st	Z+, r18
    19e4:	01 97       	sbiw	r24, 0x01	; 1
    19e6:	e9 f7       	brne	.-6      	; 0x19e2 <__fmt_a+0x4fa>
    19e8:	0a 0d       	add	r16, r10
    19ea:	1b 1d       	adc	r17, r11
    19ec:	0f 5f       	subi	r16, 0xFF	; 255
    19ee:	1f 4f       	sbci	r17, 0xFF	; 255
    19f0:	c5 01       	movw	r24, r10
    19f2:	80 95       	com	r24
    19f4:	90 95       	com	r25
    19f6:	28 0e       	add	r2, r24
    19f8:	39 1e       	adc	r3, r25
    19fa:	07 c0       	rjmp	.+14     	; 0x1a0a <__fmt_a+0x522>
    19fc:	8d 81       	ldd	r24, Y+5	; 0x05
    19fe:	84 ff       	sbrs	r24, 4
    1a00:	04 c0       	rjmp	.+8      	; 0x1a0a <__fmt_a+0x522>
    1a02:	8e e2       	ldi	r24, 0x2E	; 46
    1a04:	80 83       	st	Z, r24
    1a06:	0f 5f       	subi	r16, 0xFF	; 255
    1a08:	1f 4f       	sbci	r17, 0xFF	; 255
    1a0a:	f2 01       	movw	r30, r4
    1a0c:	e0 0f       	add	r30, r16
    1a0e:	f1 1f       	adc	r31, r17
    1a10:	ff 83       	std	Y+7, r31	; 0x07
    1a12:	ee 83       	std	Y+6, r30	; 0x06
    1a14:	10 82       	st	Z, r1
    1a16:	e8 8d       	ldd	r30, Y+24	; 0x18
    1a18:	f9 8d       	ldd	r31, Y+25	; 0x19
    1a1a:	e4 0d       	add	r30, r4
    1a1c:	f5 1d       	adc	r31, r5
    1a1e:	31 97       	sbiw	r30, 0x01	; 1
    1a20:	10 82       	st	Z, r1
    1a22:	77 fe       	sbrs	r7, 7
    1a24:	07 c0       	rjmp	.+14     	; 0x1a34 <__fmt_a+0x54c>
    1a26:	71 94       	neg	r7
    1a28:	61 94       	neg	r6
    1a2a:	71 08       	sbc	r7, r1
    1a2c:	ee 24       	eor	r14, r14
    1a2e:	e3 94       	inc	r14
    1a30:	f1 2c       	mov	r15, r1
    1a32:	02 c0       	rjmp	.+4      	; 0x1a38 <__fmt_a+0x550>
    1a34:	e1 2c       	mov	r14, r1
    1a36:	f1 2c       	mov	r15, r1
    1a38:	e8 8d       	ldd	r30, Y+24	; 0x18
    1a3a:	f9 8d       	ldd	r31, Y+25	; 0x19
    1a3c:	31 97       	sbiw	r30, 0x01	; 1
    1a3e:	e4 0d       	add	r30, r4
    1a40:	f5 1d       	adc	r31, r5
    1a42:	21 e0       	ldi	r18, 0x01	; 1
    1a44:	30 e0       	ldi	r19, 0x00	; 0
    1a46:	8a e0       	ldi	r24, 0x0A	; 10
    1a48:	c8 2e       	mov	r12, r24
    1a4a:	d1 2c       	mov	r13, r1
    1a4c:	cf 01       	movw	r24, r30
    1a4e:	84 19       	sub	r24, r4
    1a50:	95 09       	sbc	r25, r5
    1a52:	61 14       	cp	r6, r1
    1a54:	71 04       	cpc	r7, r1
    1a56:	69 f0       	breq	.+26     	; 0x1a72 <__fmt_a+0x58a>
    1a58:	c3 01       	movw	r24, r6
    1a5a:	b6 01       	movw	r22, r12
    1a5c:	0e 94 8d 20 	call	0x411a	; 0x411a <__divmodhi4>
    1a60:	80 5d       	subi	r24, 0xD0	; 208
    1a62:	82 93       	st	-Z, r24
    1a64:	3b 01       	movw	r6, r22
    1a66:	21 50       	subi	r18, 0x01	; 1
    1a68:	31 09       	sbc	r19, r1
    1a6a:	41 e0       	ldi	r20, 0x01	; 1
    1a6c:	24 1a       	sub	r2, r20
    1a6e:	31 08       	sbc	r3, r1
    1a70:	ed cf       	rjmp	.-38     	; 0x1a4c <__fmt_a+0x564>
    1a72:	21 30       	cpi	r18, 0x01	; 1
    1a74:	31 05       	cpc	r19, r1
    1a76:	81 f3       	breq	.-32     	; 0x1a58 <__fmt_a+0x570>
    1a78:	fc 01       	movw	r30, r24
    1a7a:	31 97       	sbiw	r30, 0x01	; 1
    1a7c:	e4 0d       	add	r30, r4
    1a7e:	f5 1d       	adc	r31, r5
    1a80:	ef 28       	or	r14, r15
    1a82:	11 f4       	brne	.+4      	; 0x1a88 <__fmt_a+0x5a0>
    1a84:	2b e2       	ldi	r18, 0x2B	; 43
    1a86:	01 c0       	rjmp	.+2      	; 0x1a8a <__fmt_a+0x5a2>
    1a88:	2d e2       	ldi	r18, 0x2D	; 45
    1a8a:	20 83       	st	Z, r18
    1a8c:	02 97       	sbiw	r24, 0x02	; 2
    1a8e:	f2 01       	movw	r30, r4
    1a90:	e8 0f       	add	r30, r24
    1a92:	f9 1f       	adc	r31, r25
    1a94:	2a 8d       	ldd	r18, Y+26	; 0x1a
    1a96:	3b 8d       	ldd	r19, Y+27	; 0x1b
    1a98:	2a 31       	cpi	r18, 0x1A	; 26
    1a9a:	31 05       	cpc	r19, r1
    1a9c:	10 f0       	brcs	.+4      	; 0x1aa2 <__fmt_a+0x5ba>
    1a9e:	20 e7       	ldi	r18, 0x70	; 112
    1aa0:	01 c0       	rjmp	.+2      	; 0x1aa4 <__fmt_a+0x5bc>
    1aa2:	20 e5       	ldi	r18, 0x50	; 80
    1aa4:	20 83       	st	Z, r18
    1aa6:	08 17       	cp	r16, r24
    1aa8:	19 07       	cpc	r17, r25
    1aaa:	34 f4       	brge	.+12     	; 0x1ab8 <__fmt_a+0x5d0>
    1aac:	af 01       	movw	r20, r30
    1aae:	60 e8       	ldi	r22, 0x80	; 128
    1ab0:	8e 81       	ldd	r24, Y+6	; 0x06
    1ab2:	9f 81       	ldd	r25, Y+7	; 0x07
    1ab4:	0e 94 42 21 	call	0x4284	; 0x4284 <strcpy>
    1ab8:	32 01       	movw	r6, r4
    1aba:	30 e8       	ldi	r19, 0x80	; 128
    1abc:	83 2e       	mov	r8, r19
    1abe:	4d 81       	ldd	r20, Y+5	; 0x05
    1ac0:	41 ff       	sbrs	r20, 1
    1ac2:	28 c0       	rjmp	.+80     	; 0x1b14 <__fmt_a+0x62c>
    1ac4:	40 fd       	sbrc	r20, 0
    1ac6:	26 c0       	rjmp	.+76     	; 0x1b14 <__fmt_a+0x62c>
    1ac8:	52 e0       	ldi	r21, 0x02	; 2
    1aca:	25 1a       	sub	r2, r21
    1acc:	31 08       	sbc	r3, r1
    1ace:	12 14       	cp	r1, r2
    1ad0:	13 04       	cpc	r1, r3
    1ad2:	04 f5       	brge	.+64     	; 0x1b14 <__fmt_a+0x62c>
    1ad4:	88 2d       	mov	r24, r8
    1ad6:	b3 01       	movw	r22, r6
    1ad8:	0e 94 00 21 	call	0x4200	; 0x4200 <strlen>
    1adc:	84 0d       	add	r24, r4
    1ade:	95 1d       	adc	r25, r5
    1ae0:	9c 01       	movw	r18, r24
    1ae2:	24 19       	sub	r18, r4
    1ae4:	35 09       	sbc	r19, r5
    1ae6:	4b 81       	ldd	r20, Y+3	; 0x03
    1ae8:	5c 81       	ldd	r21, Y+4	; 0x04
    1aea:	24 17       	cp	r18, r20
    1aec:	35 07       	cpc	r19, r21
    1aee:	3c f0       	brlt	.+14     	; 0x1afe <__fmt_a+0x616>
    1af0:	fc 01       	movw	r30, r24
    1af2:	20 81       	ld	r18, Z
    1af4:	e2 0d       	add	r30, r2
    1af6:	f3 1d       	adc	r31, r3
    1af8:	20 83       	st	Z, r18
    1afa:	01 97       	sbiw	r24, 0x01	; 1
    1afc:	f1 cf       	rjmp	.-30     	; 0x1ae0 <__fmt_a+0x5f8>
    1afe:	a1 01       	movw	r20, r2
    1b00:	60 e3       	ldi	r22, 0x30	; 48
    1b02:	70 e0       	ldi	r23, 0x00	; 0
    1b04:	8b 81       	ldd	r24, Y+3	; 0x03
    1b06:	9c 81       	ldd	r25, Y+4	; 0x04
    1b08:	84 0d       	add	r24, r4
    1b0a:	95 1d       	adc	r25, r5
    1b0c:	0e 94 cc 21 	call	0x4398	; 0x4398 <memset>
    1b10:	19 86       	std	Y+9, r1	; 0x09
    1b12:	18 86       	std	Y+8, r1	; 0x08
    1b14:	88 2d       	mov	r24, r8
    1b16:	b3 01       	movw	r22, r6
    1b18:	0e 94 00 21 	call	0x4200	; 0x4200 <strlen>
    1b1c:	ed 80       	ldd	r14, Y+5	; 0x05
    1b1e:	fe 8c       	ldd	r15, Y+30	; 0x1e
    1b20:	08 85       	ldd	r16, Y+8	; 0x08
    1b22:	19 85       	ldd	r17, Y+9	; 0x09
    1b24:	9c 01       	movw	r18, r24
    1b26:	68 2d       	mov	r22, r8
    1b28:	a3 01       	movw	r20, r6
    1b2a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1b2c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1b2e:	0e 94 8b 14 	call	0x2916	; 0x2916 <__pad>
    1b32:	a0 96       	adiw	r28, 0x20	; 32
    1b34:	e2 e1       	ldi	r30, 0x12	; 18
    1b36:	0c 94 28 20 	jmp	0x4050	; 0x4050 <__epilogue_restores__>
    1b3a:	5d 81       	ldd	r21, Y+5	; 0x05
    1b3c:	53 ff       	sbrs	r21, 3
    1b3e:	15 cd       	rjmp	.-1494   	; 0x156a <__fmt_a+0x82>
    1b40:	80 e2       	ldi	r24, 0x20	; 32
    1b42:	06 cd       	rjmp	.-1524   	; 0x1550 <__fmt_a+0x68>

Disassembly of section .text.strcpy:

00004284 <strcpy>:
    4284:	9a 01       	movw	r18, r20
    4286:	46 2f       	mov	r20, r22
    4288:	dc 01       	movw	r26, r24
    428a:	f9 01       	movw	r30, r18
    428c:	54 2f       	mov	r21, r20
    428e:	0e 94 02 22 	call	0x4404	; 0x4404 <__xload_1>
    4292:	6d 93       	st	X+, r22
    4294:	2f 5f       	subi	r18, 0xFF	; 255
    4296:	3f 4f       	sbci	r19, 0xFF	; 255
    4298:	4f 4f       	sbci	r20, 0xFF	; 255
    429a:	61 11       	cpse	r22, r1
    429c:	f6 cf       	rjmp	.-20     	; 0x428a <strcpy+0x6>
    429e:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000411a <__divmodhi4>:
    411a:	97 fb       	bst	r25, 7
    411c:	07 2e       	mov	r0, r23
    411e:	16 f4       	brtc	.+4      	; 0x4124 <__divmodhi4+0xa>
    4120:	00 94       	com	r0
    4122:	07 d0       	rcall	.+14     	; 0x4132 <__divmodhi4_neg1>
    4124:	77 fd       	sbrc	r23, 7
    4126:	09 d0       	rcall	.+18     	; 0x413a <__divmodhi4_neg2>
    4128:	0e 94 a1 20 	call	0x4142	; 0x4142 <__udivmodhi4>
    412c:	07 fc       	sbrc	r0, 7
    412e:	05 d0       	rcall	.+10     	; 0x413a <__divmodhi4_neg2>
    4130:	3e f4       	brtc	.+14     	; 0x4140 <__divmodhi4_exit>

00004132 <__divmodhi4_neg1>:
    4132:	90 95       	com	r25
    4134:	81 95       	neg	r24
    4136:	9f 4f       	sbci	r25, 0xFF	; 255
    4138:	08 95       	ret

0000413a <__divmodhi4_neg2>:
    413a:	70 95       	com	r23
    413c:	61 95       	neg	r22
    413e:	7f 4f       	sbci	r23, 0xFF	; 255

00004140 <__divmodhi4_exit>:
    4140:	08 95       	ret

Disassembly of section .text.libgcc.div:

000042a0 <__umoddi3>:
    42a0:	68 94       	set
    42a2:	01 c0       	rjmp	.+2      	; 0x42a6 <__udivdi3_umoddi3>

000042a4 <__udivdi3>:
    42a4:	e8 94       	clt

000042a6 <__udivdi3_umoddi3>:
    42a6:	8f 92       	push	r8
    42a8:	9f 92       	push	r9
    42aa:	cf 93       	push	r28
    42ac:	df 93       	push	r29
    42ae:	0e 94 4f 1b 	call	0x369e	; 0x369e <__udivmod64>
    42b2:	df 91       	pop	r29
    42b4:	cf 91       	pop	r28
    42b6:	9f 90       	pop	r9
    42b8:	8f 90       	pop	r8
    42ba:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000369e <__udivmod64>:
    369e:	88 24       	eor	r8, r8
    36a0:	99 24       	eor	r9, r9
    36a2:	f4 01       	movw	r30, r8
    36a4:	e4 01       	movw	r28, r8
    36a6:	b0 e4       	ldi	r27, 0x40	; 64
    36a8:	9f 93       	push	r25
    36aa:	aa 27       	eor	r26, r26
    36ac:	9a 15       	cp	r25, r10
    36ae:	8b 04       	cpc	r8, r11
    36b0:	9c 04       	cpc	r9, r12
    36b2:	ed 05       	cpc	r30, r13
    36b4:	fe 05       	cpc	r31, r14
    36b6:	cf 05       	cpc	r28, r15
    36b8:	d0 07       	cpc	r29, r16
    36ba:	a1 07       	cpc	r26, r17
    36bc:	98 f4       	brcc	.+38     	; 0x36e4 <__udivmod64+0x46>
    36be:	ad 2f       	mov	r26, r29
    36c0:	dc 2f       	mov	r29, r28
    36c2:	cf 2f       	mov	r28, r31
    36c4:	fe 2f       	mov	r31, r30
    36c6:	e9 2d       	mov	r30, r9
    36c8:	98 2c       	mov	r9, r8
    36ca:	89 2e       	mov	r8, r25
    36cc:	98 2f       	mov	r25, r24
    36ce:	87 2f       	mov	r24, r23
    36d0:	76 2f       	mov	r23, r22
    36d2:	65 2f       	mov	r22, r21
    36d4:	54 2f       	mov	r21, r20
    36d6:	43 2f       	mov	r20, r19
    36d8:	32 2f       	mov	r19, r18
    36da:	22 27       	eor	r18, r18
    36dc:	b8 50       	subi	r27, 0x08	; 8
    36de:	31 f7       	brne	.-52     	; 0x36ac <__udivmod64+0xe>
    36e0:	bf 91       	pop	r27
    36e2:	27 c0       	rjmp	.+78     	; 0x3732 <__udivmod64+0x94>
    36e4:	1b 2e       	mov	r1, r27
    36e6:	bf 91       	pop	r27
    36e8:	bb 27       	eor	r27, r27
    36ea:	22 0f       	add	r18, r18
    36ec:	33 1f       	adc	r19, r19
    36ee:	44 1f       	adc	r20, r20
    36f0:	55 1f       	adc	r21, r21
    36f2:	66 1f       	adc	r22, r22
    36f4:	77 1f       	adc	r23, r23
    36f6:	88 1f       	adc	r24, r24
    36f8:	99 1f       	adc	r25, r25
    36fa:	88 1c       	adc	r8, r8
    36fc:	99 1c       	adc	r9, r9
    36fe:	ee 1f       	adc	r30, r30
    3700:	ff 1f       	adc	r31, r31
    3702:	cc 1f       	adc	r28, r28
    3704:	dd 1f       	adc	r29, r29
    3706:	aa 1f       	adc	r26, r26
    3708:	bb 1f       	adc	r27, r27
    370a:	8a 14       	cp	r8, r10
    370c:	9b 04       	cpc	r9, r11
    370e:	ec 05       	cpc	r30, r12
    3710:	fd 05       	cpc	r31, r13
    3712:	ce 05       	cpc	r28, r14
    3714:	df 05       	cpc	r29, r15
    3716:	a0 07       	cpc	r26, r16
    3718:	b1 07       	cpc	r27, r17
    371a:	48 f0       	brcs	.+18     	; 0x372e <__udivmod64+0x90>
    371c:	8a 18       	sub	r8, r10
    371e:	9b 08       	sbc	r9, r11
    3720:	ec 09       	sbc	r30, r12
    3722:	fd 09       	sbc	r31, r13
    3724:	ce 09       	sbc	r28, r14
    3726:	df 09       	sbc	r29, r15
    3728:	a0 0b       	sbc	r26, r16
    372a:	b1 0b       	sbc	r27, r17
    372c:	21 60       	ori	r18, 0x01	; 1
    372e:	1a 94       	dec	r1
    3730:	e1 f6       	brne	.-72     	; 0x36ea <__udivmod64+0x4c>
    3732:	2e f4       	brtc	.+10     	; 0x373e <__udivmod64+0xa0>
    3734:	94 01       	movw	r18, r8
    3736:	af 01       	movw	r20, r30
    3738:	be 01       	movw	r22, r28
    373a:	cd 01       	movw	r24, r26
    373c:	00 0c       	add	r0, r0
    373e:	08 95       	ret

Disassembly of section .text.libgcc:

00004246 <__negdi2>:
    4246:	60 95       	com	r22
    4248:	70 95       	com	r23
    424a:	80 95       	com	r24
    424c:	90 95       	com	r25
    424e:	30 95       	com	r19
    4250:	40 95       	com	r20
    4252:	50 95       	com	r21
    4254:	21 95       	neg	r18
    4256:	3f 4f       	sbci	r19, 0xFF	; 255
    4258:	4f 4f       	sbci	r20, 0xFF	; 255
    425a:	5f 4f       	sbci	r21, 0xFF	; 255
    425c:	6f 4f       	sbci	r22, 0xFF	; 255
    425e:	7f 4f       	sbci	r23, 0xFF	; 255
    4260:	8f 4f       	sbci	r24, 0xFF	; 255
    4262:	9f 4f       	sbci	r25, 0xFF	; 255
    4264:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

00003fe2 <__prologue_saves__>:
    3fe2:	2f 92       	push	r2
    3fe4:	3f 92       	push	r3
    3fe6:	4f 92       	push	r4
    3fe8:	5f 92       	push	r5
    3fea:	6f 92       	push	r6
    3fec:	7f 92       	push	r7
    3fee:	8f 92       	push	r8
    3ff0:	9f 92       	push	r9
    3ff2:	af 92       	push	r10
    3ff4:	bf 92       	push	r11
    3ff6:	cf 92       	push	r12
    3ff8:	df 92       	push	r13
    3ffa:	ef 92       	push	r14
    3ffc:	ff 92       	push	r15
    3ffe:	0f 93       	push	r16
    4000:	1f 93       	push	r17
    4002:	cf 93       	push	r28
    4004:	df 93       	push	r29
    4006:	cd b7       	in	r28, 0x3d	; 61
    4008:	de b7       	in	r29, 0x3e	; 62
    400a:	ca 1b       	sub	r28, r26
    400c:	db 0b       	sbc	r29, r27
    400e:	0f b6       	in	r0, 0x3f	; 63
    4010:	f8 94       	cli
    4012:	de bf       	out	0x3e, r29	; 62
    4014:	0f be       	out	0x3f, r0	; 63
    4016:	cd bf       	out	0x3d, r28	; 61
    4018:	19 94       	eijmp

Disassembly of section .text.libgcc.prologue:

00004050 <__epilogue_restores__>:
    4050:	2a 88       	ldd	r2, Y+18	; 0x12
    4052:	39 88       	ldd	r3, Y+17	; 0x11
    4054:	48 88       	ldd	r4, Y+16	; 0x10
    4056:	5f 84       	ldd	r5, Y+15	; 0x0f
    4058:	6e 84       	ldd	r6, Y+14	; 0x0e
    405a:	7d 84       	ldd	r7, Y+13	; 0x0d
    405c:	8c 84       	ldd	r8, Y+12	; 0x0c
    405e:	9b 84       	ldd	r9, Y+11	; 0x0b
    4060:	aa 84       	ldd	r10, Y+10	; 0x0a
    4062:	b9 84       	ldd	r11, Y+9	; 0x09
    4064:	c8 84       	ldd	r12, Y+8	; 0x08
    4066:	df 80       	ldd	r13, Y+7	; 0x07
    4068:	ee 80       	ldd	r14, Y+6	; 0x06
    406a:	fd 80       	ldd	r15, Y+5	; 0x05
    406c:	0c 81       	ldd	r16, Y+4	; 0x04
    406e:	1b 81       	ldd	r17, Y+3	; 0x03
    4070:	aa 81       	ldd	r26, Y+2	; 0x02
    4072:	b9 81       	ldd	r27, Y+1	; 0x01
    4074:	ce 0f       	add	r28, r30
    4076:	d1 1d       	adc	r29, r1
    4078:	0f b6       	in	r0, 0x3f	; 63
    407a:	f8 94       	cli
    407c:	de bf       	out	0x3e, r29	; 62
    407e:	0f be       	out	0x3f, r0	; 63
    4080:	cd bf       	out	0x3d, r28	; 61
    4082:	ed 01       	movw	r28, r26
    4084:	08 95       	ret

Disassembly of section .text.libgcc:

000042bc <__movmemx_qi>:
    42bc:	99 27       	eor	r25, r25

000042be <__movmemx_hi>:
    42be:	77 fd       	sbrc	r23, 7
    42c0:	06 c0       	rjmp	.+12     	; 0x42ce <__movmemx_hi+0x10>
    42c2:	7b bf       	out	0x3b, r23	; 59
    42c4:	07 90       	elpm	r0, Z+
    42c6:	0d 92       	st	X+, r0
    42c8:	01 97       	sbiw	r24, 0x01	; 1
    42ca:	e1 f7       	brne	.-8      	; 0x42c4 <__movmemx_hi+0x6>
    42cc:	08 95       	ret
    42ce:	01 90       	ld	r0, Z+
    42d0:	0d 92       	st	X+, r0
    42d2:	01 97       	sbiw	r24, 0x01	; 1
    42d4:	e1 f7       	brne	.-8      	; 0x42ce <__movmemx_hi+0x10>
    42d6:	08 95       	ret

Disassembly of section .text.libgcc.builtins:

00003fa6 <__ashrdi3>:
    3fa6:	97 fb       	bst	r25, 7
    3fa8:	10 f8       	bld	r1, 0

00003faa <__lshrdi3>:
    3faa:	16 94       	lsr	r1
    3fac:	00 08       	sbc	r0, r0
    3fae:	0f 93       	push	r16
    3fb0:	08 30       	cpi	r16, 0x08	; 8
    3fb2:	98 f0       	brcs	.+38     	; 0x3fda <__lshrdi3+0x30>
    3fb4:	08 50       	subi	r16, 0x08	; 8
    3fb6:	23 2f       	mov	r18, r19
    3fb8:	34 2f       	mov	r19, r20
    3fba:	45 2f       	mov	r20, r21
    3fbc:	56 2f       	mov	r21, r22
    3fbe:	67 2f       	mov	r22, r23
    3fc0:	78 2f       	mov	r23, r24
    3fc2:	89 2f       	mov	r24, r25
    3fc4:	90 2d       	mov	r25, r0
    3fc6:	f4 cf       	rjmp	.-24     	; 0x3fb0 <__lshrdi3+0x6>
    3fc8:	05 94       	asr	r0
    3fca:	97 95       	ror	r25
    3fcc:	87 95       	ror	r24
    3fce:	77 95       	ror	r23
    3fd0:	67 95       	ror	r22
    3fd2:	57 95       	ror	r21
    3fd4:	47 95       	ror	r20
    3fd6:	37 95       	ror	r19
    3fd8:	27 95       	ror	r18
    3fda:	0a 95       	dec	r16
    3fdc:	aa f7       	brpl	.-22     	; 0x3fc8 <__lshrdi3+0x1e>
    3fde:	0f 91       	pop	r16
    3fe0:	08 95       	ret

Disassembly of section .text.libgcc:

0000433c <__cmpdi2_s8>:
    433c:	00 24       	eor	r0, r0
    433e:	a7 fd       	sbrc	r26, 7
    4340:	00 94       	com	r0
    4342:	2a 17       	cp	r18, r26
    4344:	30 05       	cpc	r19, r0
    4346:	40 05       	cpc	r20, r0
    4348:	50 05       	cpc	r21, r0
    434a:	60 05       	cpc	r22, r0
    434c:	70 05       	cpc	r23, r0
    434e:	80 05       	cpc	r24, r0
    4350:	90 05       	cpc	r25, r0
    4352:	08 95       	ret

Disassembly of section .text.libgcc.div:

00004142 <__udivmodhi4>:
    4142:	aa 1b       	sub	r26, r26
    4144:	bb 1b       	sub	r27, r27
    4146:	51 e1       	ldi	r21, 0x11	; 17
    4148:	07 c0       	rjmp	.+14     	; 0x4158 <__udivmodhi4_ep>

0000414a <__udivmodhi4_loop>:
    414a:	aa 1f       	adc	r26, r26
    414c:	bb 1f       	adc	r27, r27
    414e:	a6 17       	cp	r26, r22
    4150:	b7 07       	cpc	r27, r23
    4152:	10 f0       	brcs	.+4      	; 0x4158 <__udivmodhi4_ep>
    4154:	a6 1b       	sub	r26, r22
    4156:	b7 0b       	sbc	r27, r23

00004158 <__udivmodhi4_ep>:
    4158:	88 1f       	adc	r24, r24
    415a:	99 1f       	adc	r25, r25
    415c:	5a 95       	dec	r21
    415e:	a9 f7       	brne	.-22     	; 0x414a <__udivmodhi4_loop>
    4160:	80 95       	com	r24
    4162:	90 95       	com	r25
    4164:	bc 01       	movw	r22, r24
    4166:	cd 01       	movw	r24, r26
    4168:	08 95       	ret

Disassembly of section .text:

00004412 <__subsf3>:
    4412:	50 58       	subi	r21, 0x80	; 128

00004414 <__addsf3>:
    4414:	bb 27       	eor	r27, r27
    4416:	aa 27       	eor	r26, r26
    4418:	0e 94 c1 16 	call	0x2d82	; 0x2d82 <__addsf3x>
    441c:	0c 94 12 21 	jmp	0x4224	; 0x4224 <__fp_round>

Disassembly of section .text:

00002d82 <__addsf3x>:
    2d82:	11 c0       	rjmp	.+34     	; 0x2da6 <__addsf3x+0x24>
    2d84:	0e 94 17 22 	call	0x442e	; 0x442e <__fp_pscA>
    2d88:	38 f0       	brcs	.+14     	; 0x2d98 <__addsf3x+0x16>
    2d8a:	0e 94 1e 22 	call	0x443c	; 0x443c <__fp_pscB>
    2d8e:	20 f0       	brcs	.+8      	; 0x2d98 <__addsf3x+0x16>
    2d90:	39 f4       	brne	.+14     	; 0x2da0 <__addsf3x+0x1e>
    2d92:	9f 3f       	cpi	r25, 0xFF	; 255
    2d94:	19 f4       	brne	.+6      	; 0x2d9c <__addsf3x+0x1a>
    2d96:	26 f4       	brtc	.+8      	; 0x2da0 <__addsf3x+0x1e>
    2d98:	0c 94 4c 22 	jmp	0x4498	; 0x4498 <__fp_nan>
    2d9c:	0e f4       	brtc	.+2      	; 0x2da0 <__addsf3x+0x1e>
    2d9e:	e0 95       	com	r30
    2da0:	e7 fb       	bst	r30, 7
    2da2:	0c 94 2c 22 	jmp	0x4458	; 0x4458 <__fp_inf>
    2da6:	e9 2f       	mov	r30, r25
    2da8:	0e 94 52 1f 	call	0x3ea4	; 0x3ea4 <__fp_split3>
    2dac:	58 f3       	brcs	.-42     	; 0x2d84 <__addsf3x+0x2>
    2dae:	ba 17       	cp	r27, r26
    2db0:	62 07       	cpc	r22, r18
    2db2:	73 07       	cpc	r23, r19
    2db4:	84 07       	cpc	r24, r20
    2db6:	95 07       	cpc	r25, r21
    2db8:	20 f0       	brcs	.+8      	; 0x2dc2 <__addsf3x+0x40>
    2dba:	79 f4       	brne	.+30     	; 0x2dda <__addsf3x+0x58>
    2dbc:	a6 f5       	brtc	.+104    	; 0x2e26 <__addsf3x+0xa4>
    2dbe:	0c 94 25 22 	jmp	0x444a	; 0x444a <__fp_zero>
    2dc2:	0e f4       	brtc	.+2      	; 0x2dc6 <__addsf3x+0x44>
    2dc4:	e0 95       	com	r30
    2dc6:	0b 2e       	mov	r0, r27
    2dc8:	ba 2f       	mov	r27, r26
    2dca:	a0 2d       	mov	r26, r0
    2dcc:	0b 01       	movw	r0, r22
    2dce:	b9 01       	movw	r22, r18
    2dd0:	90 01       	movw	r18, r0
    2dd2:	0c 01       	movw	r0, r24
    2dd4:	ca 01       	movw	r24, r20
    2dd6:	a0 01       	movw	r20, r0
    2dd8:	11 24       	eor	r1, r1
    2dda:	ff 27       	eor	r31, r31
    2ddc:	59 1b       	sub	r21, r25
    2dde:	99 f0       	breq	.+38     	; 0x2e06 <__addsf3x+0x84>
    2de0:	59 3f       	cpi	r21, 0xF9	; 249
    2de2:	50 f4       	brcc	.+20     	; 0x2df8 <__addsf3x+0x76>
    2de4:	50 3e       	cpi	r21, 0xE0	; 224
    2de6:	68 f1       	brcs	.+90     	; 0x2e42 <__addsf3x+0xc0>
    2de8:	1a 16       	cp	r1, r26
    2dea:	f0 40       	sbci	r31, 0x00	; 0
    2dec:	a2 2f       	mov	r26, r18
    2dee:	23 2f       	mov	r18, r19
    2df0:	34 2f       	mov	r19, r20
    2df2:	44 27       	eor	r20, r20
    2df4:	58 5f       	subi	r21, 0xF8	; 248
    2df6:	f3 cf       	rjmp	.-26     	; 0x2dde <__addsf3x+0x5c>
    2df8:	46 95       	lsr	r20
    2dfa:	37 95       	ror	r19
    2dfc:	27 95       	ror	r18
    2dfe:	a7 95       	ror	r26
    2e00:	f0 40       	sbci	r31, 0x00	; 0
    2e02:	53 95       	inc	r21
    2e04:	c9 f7       	brne	.-14     	; 0x2df8 <__addsf3x+0x76>
    2e06:	7e f4       	brtc	.+30     	; 0x2e26 <__addsf3x+0xa4>
    2e08:	1f 16       	cp	r1, r31
    2e0a:	ba 0b       	sbc	r27, r26
    2e0c:	62 0b       	sbc	r22, r18
    2e0e:	73 0b       	sbc	r23, r19
    2e10:	84 0b       	sbc	r24, r20
    2e12:	ba f0       	brmi	.+46     	; 0x2e42 <__addsf3x+0xc0>
    2e14:	91 50       	subi	r25, 0x01	; 1
    2e16:	a1 f0       	breq	.+40     	; 0x2e40 <__addsf3x+0xbe>
    2e18:	ff 0f       	add	r31, r31
    2e1a:	bb 1f       	adc	r27, r27
    2e1c:	66 1f       	adc	r22, r22
    2e1e:	77 1f       	adc	r23, r23
    2e20:	88 1f       	adc	r24, r24
    2e22:	c2 f7       	brpl	.-16     	; 0x2e14 <__addsf3x+0x92>
    2e24:	0e c0       	rjmp	.+28     	; 0x2e42 <__addsf3x+0xc0>
    2e26:	ba 0f       	add	r27, r26
    2e28:	62 1f       	adc	r22, r18
    2e2a:	73 1f       	adc	r23, r19
    2e2c:	84 1f       	adc	r24, r20
    2e2e:	48 f4       	brcc	.+18     	; 0x2e42 <__addsf3x+0xc0>
    2e30:	87 95       	ror	r24
    2e32:	77 95       	ror	r23
    2e34:	67 95       	ror	r22
    2e36:	b7 95       	ror	r27
    2e38:	f7 95       	ror	r31
    2e3a:	9e 3f       	cpi	r25, 0xFE	; 254
    2e3c:	08 f0       	brcs	.+2      	; 0x2e40 <__addsf3x+0xbe>
    2e3e:	b0 cf       	rjmp	.-160    	; 0x2da0 <__addsf3x+0x1e>
    2e40:	93 95       	inc	r25
    2e42:	88 0f       	add	r24, r24
    2e44:	08 f0       	brcs	.+2      	; 0x2e48 <__addsf3x+0xc6>
    2e46:	99 27       	eor	r25, r25
    2e48:	ee 0f       	add	r30, r30
    2e4a:	97 95       	ror	r25
    2e4c:	87 95       	ror	r24
    2e4e:	08 95       	ret

Disassembly of section .text:

00004464 <__cmpsf2>:
    4464:	0e 94 ea 1e 	call	0x3dd4	; 0x3dd4 <__fp_cmp>
    4468:	08 f4       	brcc	.+2      	; 0x446c <__cmpsf2+0x8>
    446a:	81 e0       	ldi	r24, 0x01	; 1
    446c:	08 95       	ret

Disassembly of section .text:

00004488 <__divsf3>:
    4488:	0e 94 12 15 	call	0x2a24	; 0x2a24 <__divsf3x>
    448c:	0c 94 12 21 	jmp	0x4224	; 0x4224 <__fp_round>

Disassembly of section .text:

00002a24 <__divsf3x>:
    2a24:	10 c0       	rjmp	.+32     	; 0x2a46 <__divsf3x+0x22>
    2a26:	0e 94 1e 22 	call	0x443c	; 0x443c <__fp_pscB>
    2a2a:	58 f0       	brcs	.+22     	; 0x2a42 <__divsf3x+0x1e>
    2a2c:	0e 94 17 22 	call	0x442e	; 0x442e <__fp_pscA>
    2a30:	40 f0       	brcs	.+16     	; 0x2a42 <__divsf3x+0x1e>
    2a32:	29 f4       	brne	.+10     	; 0x2a3e <__divsf3x+0x1a>
    2a34:	5f 3f       	cpi	r21, 0xFF	; 255
    2a36:	29 f0       	breq	.+10     	; 0x2a42 <__divsf3x+0x1e>
    2a38:	0c 94 2c 22 	jmp	0x4458	; 0x4458 <__fp_inf>
    2a3c:	51 11       	cpse	r21, r1
    2a3e:	0c 94 26 22 	jmp	0x444c	; 0x444c <__fp_szero>
    2a42:	0c 94 4c 22 	jmp	0x4498	; 0x4498 <__fp_nan>
    2a46:	0e 94 52 1f 	call	0x3ea4	; 0x3ea4 <__fp_split3>
    2a4a:	68 f3       	brcs	.-38     	; 0x2a26 <__divsf3x+0x2>

00002a4c <__divsf3_pse>:
    2a4c:	99 23       	and	r25, r25
    2a4e:	b1 f3       	breq	.-20     	; 0x2a3c <__divsf3x+0x18>
    2a50:	55 23       	and	r21, r21
    2a52:	91 f3       	breq	.-28     	; 0x2a38 <__divsf3x+0x14>
    2a54:	95 1b       	sub	r25, r21
    2a56:	55 0b       	sbc	r21, r21
    2a58:	bb 27       	eor	r27, r27
    2a5a:	aa 27       	eor	r26, r26
    2a5c:	62 17       	cp	r22, r18
    2a5e:	73 07       	cpc	r23, r19
    2a60:	84 07       	cpc	r24, r20
    2a62:	38 f0       	brcs	.+14     	; 0x2a72 <__divsf3_pse+0x26>
    2a64:	9f 5f       	subi	r25, 0xFF	; 255
    2a66:	5f 4f       	sbci	r21, 0xFF	; 255
    2a68:	22 0f       	add	r18, r18
    2a6a:	33 1f       	adc	r19, r19
    2a6c:	44 1f       	adc	r20, r20
    2a6e:	aa 1f       	adc	r26, r26
    2a70:	a9 f3       	breq	.-22     	; 0x2a5c <__divsf3_pse+0x10>
    2a72:	35 d0       	rcall	.+106    	; 0x2ade <__divsf3_pse+0x92>
    2a74:	0e 2e       	mov	r0, r30
    2a76:	3a f0       	brmi	.+14     	; 0x2a86 <__divsf3_pse+0x3a>
    2a78:	e0 e8       	ldi	r30, 0x80	; 128
    2a7a:	32 d0       	rcall	.+100    	; 0x2ae0 <__divsf3_pse+0x94>
    2a7c:	91 50       	subi	r25, 0x01	; 1
    2a7e:	50 40       	sbci	r21, 0x00	; 0
    2a80:	e6 95       	lsr	r30
    2a82:	00 1c       	adc	r0, r0
    2a84:	ca f7       	brpl	.-14     	; 0x2a78 <__divsf3_pse+0x2c>
    2a86:	2b d0       	rcall	.+86     	; 0x2ade <__divsf3_pse+0x92>
    2a88:	fe 2f       	mov	r31, r30
    2a8a:	29 d0       	rcall	.+82     	; 0x2ade <__divsf3_pse+0x92>
    2a8c:	66 0f       	add	r22, r22
    2a8e:	77 1f       	adc	r23, r23
    2a90:	88 1f       	adc	r24, r24
    2a92:	bb 1f       	adc	r27, r27
    2a94:	26 17       	cp	r18, r22
    2a96:	37 07       	cpc	r19, r23
    2a98:	48 07       	cpc	r20, r24
    2a9a:	ab 07       	cpc	r26, r27
    2a9c:	b0 e8       	ldi	r27, 0x80	; 128
    2a9e:	09 f0       	breq	.+2      	; 0x2aa2 <__divsf3_pse+0x56>
    2aa0:	bb 0b       	sbc	r27, r27
    2aa2:	80 2d       	mov	r24, r0
    2aa4:	bf 01       	movw	r22, r30
    2aa6:	ff 27       	eor	r31, r31
    2aa8:	93 58       	subi	r25, 0x83	; 131
    2aaa:	5f 4f       	sbci	r21, 0xFF	; 255
    2aac:	3a f0       	brmi	.+14     	; 0x2abc <__divsf3_pse+0x70>
    2aae:	9e 3f       	cpi	r25, 0xFE	; 254
    2ab0:	51 05       	cpc	r21, r1
    2ab2:	78 f0       	brcs	.+30     	; 0x2ad2 <__divsf3_pse+0x86>
    2ab4:	0c 94 2c 22 	jmp	0x4458	; 0x4458 <__fp_inf>
    2ab8:	0c 94 26 22 	jmp	0x444c	; 0x444c <__fp_szero>
    2abc:	5f 3f       	cpi	r21, 0xFF	; 255
    2abe:	e4 f3       	brlt	.-8      	; 0x2ab8 <__divsf3_pse+0x6c>
    2ac0:	98 3e       	cpi	r25, 0xE8	; 232
    2ac2:	d4 f3       	brlt	.-12     	; 0x2ab8 <__divsf3_pse+0x6c>
    2ac4:	86 95       	lsr	r24
    2ac6:	77 95       	ror	r23
    2ac8:	67 95       	ror	r22
    2aca:	b7 95       	ror	r27
    2acc:	f7 95       	ror	r31
    2ace:	9f 5f       	subi	r25, 0xFF	; 255
    2ad0:	c9 f7       	brne	.-14     	; 0x2ac4 <__divsf3_pse+0x78>
    2ad2:	88 0f       	add	r24, r24
    2ad4:	91 1d       	adc	r25, r1
    2ad6:	96 95       	lsr	r25
    2ad8:	87 95       	ror	r24
    2ada:	97 f9       	bld	r25, 7
    2adc:	08 95       	ret
    2ade:	e1 e0       	ldi	r30, 0x01	; 1
    2ae0:	66 0f       	add	r22, r22
    2ae2:	77 1f       	adc	r23, r23
    2ae4:	88 1f       	adc	r24, r24
    2ae6:	bb 1f       	adc	r27, r27
    2ae8:	62 17       	cp	r22, r18
    2aea:	73 07       	cpc	r23, r19
    2aec:	84 07       	cpc	r24, r20
    2aee:	ba 07       	cpc	r27, r26
    2af0:	20 f0       	brcs	.+8      	; 0x2afa <__divsf3_pse+0xae>
    2af2:	62 1b       	sub	r22, r18
    2af4:	73 0b       	sbc	r23, r19
    2af6:	84 0b       	sbc	r24, r20
    2af8:	ba 0b       	sbc	r27, r26
    2afa:	ee 1f       	adc	r30, r30
    2afc:	88 f7       	brcc	.-30     	; 0x2ae0 <__divsf3_pse+0x94>
    2afe:	e0 95       	com	r30
    2b00:	08 95       	ret

Disassembly of section .text:

00004420 <__fixsfsi>:
    4420:	0e 94 17 1e 	call	0x3c2e	; 0x3c2e <__fixunssfsi>
    4424:	68 94       	set
    4426:	b1 11       	cpse	r27, r1
    4428:	0c 94 26 22 	jmp	0x444c	; 0x444c <__fp_szero>
    442c:	08 95       	ret

Disassembly of section .text:

00003c2e <__fixunssfsi>:
    3c2e:	0e 94 5a 1f 	call	0x3eb4	; 0x3eb4 <__fp_splitA>
    3c32:	88 f0       	brcs	.+34     	; 0x3c56 <__fixunssfsi+0x28>
    3c34:	9f 57       	subi	r25, 0x7F	; 127
    3c36:	98 f0       	brcs	.+38     	; 0x3c5e <__fixunssfsi+0x30>
    3c38:	b9 2f       	mov	r27, r25
    3c3a:	99 27       	eor	r25, r25
    3c3c:	b7 51       	subi	r27, 0x17	; 23
    3c3e:	b0 f0       	brcs	.+44     	; 0x3c6c <__fixunssfsi+0x3e>
    3c40:	e1 f0       	breq	.+56     	; 0x3c7a <__fixunssfsi+0x4c>
    3c42:	66 0f       	add	r22, r22
    3c44:	77 1f       	adc	r23, r23
    3c46:	88 1f       	adc	r24, r24
    3c48:	99 1f       	adc	r25, r25
    3c4a:	1a f0       	brmi	.+6      	; 0x3c52 <__fixunssfsi+0x24>
    3c4c:	ba 95       	dec	r27
    3c4e:	c9 f7       	brne	.-14     	; 0x3c42 <__fixunssfsi+0x14>
    3c50:	14 c0       	rjmp	.+40     	; 0x3c7a <__fixunssfsi+0x4c>
    3c52:	b1 30       	cpi	r27, 0x01	; 1
    3c54:	91 f0       	breq	.+36     	; 0x3c7a <__fixunssfsi+0x4c>
    3c56:	0e 94 25 22 	call	0x444a	; 0x444a <__fp_zero>
    3c5a:	b1 e0       	ldi	r27, 0x01	; 1
    3c5c:	08 95       	ret
    3c5e:	0c 94 25 22 	jmp	0x444a	; 0x444a <__fp_zero>
    3c62:	67 2f       	mov	r22, r23
    3c64:	78 2f       	mov	r23, r24
    3c66:	88 27       	eor	r24, r24
    3c68:	b8 5f       	subi	r27, 0xF8	; 248
    3c6a:	39 f0       	breq	.+14     	; 0x3c7a <__fixunssfsi+0x4c>
    3c6c:	b9 3f       	cpi	r27, 0xF9	; 249
    3c6e:	cc f3       	brlt	.-14     	; 0x3c62 <__fixunssfsi+0x34>
    3c70:	86 95       	lsr	r24
    3c72:	77 95       	ror	r23
    3c74:	67 95       	ror	r22
    3c76:	b3 95       	inc	r27
    3c78:	d9 f7       	brne	.-10     	; 0x3c70 <__fixunssfsi+0x42>
    3c7a:	3e f4       	brtc	.+14     	; 0x3c8a <__fixunssfsi+0x5c>
    3c7c:	90 95       	com	r25
    3c7e:	80 95       	com	r24
    3c80:	70 95       	com	r23
    3c82:	61 95       	neg	r22
    3c84:	7f 4f       	sbci	r23, 0xFF	; 255
    3c86:	8f 4f       	sbci	r24, 0xFF	; 255
    3c88:	9f 4f       	sbci	r25, 0xFF	; 255
    3c8a:	08 95       	ret

Disassembly of section .text:

00003dd4 <__fp_cmp>:
    3dd4:	99 0f       	add	r25, r25
    3dd6:	00 08       	sbc	r0, r0
    3dd8:	55 0f       	add	r21, r21
    3dda:	aa 0b       	sbc	r26, r26
    3ddc:	e0 e8       	ldi	r30, 0x80	; 128
    3dde:	fe ef       	ldi	r31, 0xFE	; 254
    3de0:	16 16       	cp	r1, r22
    3de2:	17 06       	cpc	r1, r23
    3de4:	e8 07       	cpc	r30, r24
    3de6:	f9 07       	cpc	r31, r25
    3de8:	c0 f0       	brcs	.+48     	; 0x3e1a <__fp_cmp+0x46>
    3dea:	12 16       	cp	r1, r18
    3dec:	13 06       	cpc	r1, r19
    3dee:	e4 07       	cpc	r30, r20
    3df0:	f5 07       	cpc	r31, r21
    3df2:	98 f0       	brcs	.+38     	; 0x3e1a <__fp_cmp+0x46>
    3df4:	62 1b       	sub	r22, r18
    3df6:	73 0b       	sbc	r23, r19
    3df8:	84 0b       	sbc	r24, r20
    3dfa:	95 0b       	sbc	r25, r21
    3dfc:	39 f4       	brne	.+14     	; 0x3e0c <__fp_cmp+0x38>
    3dfe:	0a 26       	eor	r0, r26
    3e00:	61 f0       	breq	.+24     	; 0x3e1a <__fp_cmp+0x46>
    3e02:	23 2b       	or	r18, r19
    3e04:	24 2b       	or	r18, r20
    3e06:	25 2b       	or	r18, r21
    3e08:	21 f4       	brne	.+8      	; 0x3e12 <__fp_cmp+0x3e>
    3e0a:	08 95       	ret
    3e0c:	0a 26       	eor	r0, r26
    3e0e:	09 f4       	brne	.+2      	; 0x3e12 <__fp_cmp+0x3e>
    3e10:	a1 40       	sbci	r26, 0x01	; 1
    3e12:	a6 95       	lsr	r26
    3e14:	8f ef       	ldi	r24, 0xFF	; 255
    3e16:	81 1d       	adc	r24, r1
    3e18:	81 1d       	adc	r24, r1
    3e1a:	08 95       	ret

Disassembly of section .text:

00004458 <__fp_inf>:
    4458:	97 f9       	bld	r25, 7
    445a:	9f 67       	ori	r25, 0x7F	; 127
    445c:	80 e8       	ldi	r24, 0x80	; 128
    445e:	70 e0       	ldi	r23, 0x00	; 0
    4460:	60 e0       	ldi	r22, 0x00	; 0
    4462:	08 95       	ret

Disassembly of section .text:

00004498 <__fp_nan>:
    4498:	9f ef       	ldi	r25, 0xFF	; 255
    449a:	80 ec       	ldi	r24, 0xC0	; 192
    449c:	08 95       	ret

Disassembly of section .text:

0000442e <__fp_pscA>:
    442e:	00 24       	eor	r0, r0
    4430:	0a 94       	dec	r0
    4432:	16 16       	cp	r1, r22
    4434:	17 06       	cpc	r1, r23
    4436:	18 06       	cpc	r1, r24
    4438:	09 06       	cpc	r0, r25
    443a:	08 95       	ret

Disassembly of section .text:

0000443c <__fp_pscB>:
    443c:	00 24       	eor	r0, r0
    443e:	0a 94       	dec	r0
    4440:	12 16       	cp	r1, r18
    4442:	13 06       	cpc	r1, r19
    4444:	14 06       	cpc	r1, r20
    4446:	05 06       	cpc	r0, r21
    4448:	08 95       	ret

Disassembly of section .text:

00004224 <__fp_round>:
    4224:	09 2e       	mov	r0, r25
    4226:	03 94       	inc	r0
    4228:	00 0c       	add	r0, r0
    422a:	11 f4       	brne	.+4      	; 0x4230 <__fp_round+0xc>
    422c:	88 23       	and	r24, r24
    422e:	52 f0       	brmi	.+20     	; 0x4244 <__fp_round+0x20>
    4230:	bb 0f       	add	r27, r27
    4232:	40 f4       	brcc	.+16     	; 0x4244 <__fp_round+0x20>
    4234:	bf 2b       	or	r27, r31
    4236:	11 f4       	brne	.+4      	; 0x423c <__fp_round+0x18>
    4238:	60 ff       	sbrs	r22, 0
    423a:	04 c0       	rjmp	.+8      	; 0x4244 <__fp_round+0x20>
    423c:	6f 5f       	subi	r22, 0xFF	; 255
    423e:	7f 4f       	sbci	r23, 0xFF	; 255
    4240:	8f 4f       	sbci	r24, 0xFF	; 255
    4242:	9f 4f       	sbci	r25, 0xFF	; 255
    4244:	08 95       	ret

Disassembly of section .text:

00003ea4 <__fp_split3>:
    3ea4:	57 fd       	sbrc	r21, 7
    3ea6:	90 58       	subi	r25, 0x80	; 128
    3ea8:	44 0f       	add	r20, r20
    3eaa:	55 1f       	adc	r21, r21
    3eac:	59 f0       	breq	.+22     	; 0x3ec4 <__fp_splitA+0x10>
    3eae:	5f 3f       	cpi	r21, 0xFF	; 255
    3eb0:	71 f0       	breq	.+28     	; 0x3ece <__fp_splitA+0x1a>
    3eb2:	47 95       	ror	r20

00003eb4 <__fp_splitA>:
    3eb4:	88 0f       	add	r24, r24
    3eb6:	97 fb       	bst	r25, 7
    3eb8:	99 1f       	adc	r25, r25
    3eba:	61 f0       	breq	.+24     	; 0x3ed4 <__fp_splitA+0x20>
    3ebc:	9f 3f       	cpi	r25, 0xFF	; 255
    3ebe:	79 f0       	breq	.+30     	; 0x3ede <__fp_splitA+0x2a>
    3ec0:	87 95       	ror	r24
    3ec2:	08 95       	ret
    3ec4:	12 16       	cp	r1, r18
    3ec6:	13 06       	cpc	r1, r19
    3ec8:	14 06       	cpc	r1, r20
    3eca:	55 1f       	adc	r21, r21
    3ecc:	f2 cf       	rjmp	.-28     	; 0x3eb2 <__fp_split3+0xe>
    3ece:	46 95       	lsr	r20
    3ed0:	f1 df       	rcall	.-30     	; 0x3eb4 <__fp_splitA>
    3ed2:	08 c0       	rjmp	.+16     	; 0x3ee4 <__fp_splitA+0x30>
    3ed4:	16 16       	cp	r1, r22
    3ed6:	17 06       	cpc	r1, r23
    3ed8:	18 06       	cpc	r1, r24
    3eda:	99 1f       	adc	r25, r25
    3edc:	f1 cf       	rjmp	.-30     	; 0x3ec0 <__fp_splitA+0xc>
    3ede:	86 95       	lsr	r24
    3ee0:	71 05       	cpc	r23, r1
    3ee2:	61 05       	cpc	r22, r1
    3ee4:	08 94       	sec
    3ee6:	08 95       	ret

Disassembly of section .text:

0000444a <__fp_zero>:
    444a:	e8 94       	clt

0000444c <__fp_szero>:
    444c:	bb 27       	eor	r27, r27
    444e:	66 27       	eor	r22, r22
    4450:	77 27       	eor	r23, r23
    4452:	cb 01       	movw	r24, r22
    4454:	97 f9       	bld	r25, 7
    4456:	08 95       	ret

Disassembly of section .text:

0000446e <__gesf2>:
    446e:	0e 94 ea 1e 	call	0x3dd4	; 0x3dd4 <__fp_cmp>
    4472:	08 f4       	brcc	.+2      	; 0x4476 <__gesf2+0x8>
    4474:	8f ef       	ldi	r24, 0xFF	; 255
    4476:	08 95       	ret

Disassembly of section .text:

00004490 <__mulsf3>:
    4490:	0e 94 57 16 	call	0x2cae	; 0x2cae <__mulsf3x>
    4494:	0c 94 12 21 	jmp	0x4224	; 0x4224 <__fp_round>

Disassembly of section .text:

00002cae <__mulsf3x>:
    2cae:	0f c0       	rjmp	.+30     	; 0x2cce <__mulsf3x+0x20>
    2cb0:	0e 94 17 22 	call	0x442e	; 0x442e <__fp_pscA>
    2cb4:	38 f0       	brcs	.+14     	; 0x2cc4 <__mulsf3x+0x16>
    2cb6:	0e 94 1e 22 	call	0x443c	; 0x443c <__fp_pscB>
    2cba:	20 f0       	brcs	.+8      	; 0x2cc4 <__mulsf3x+0x16>
    2cbc:	95 23       	and	r25, r21
    2cbe:	11 f0       	breq	.+4      	; 0x2cc4 <__mulsf3x+0x16>
    2cc0:	0c 94 2c 22 	jmp	0x4458	; 0x4458 <__fp_inf>
    2cc4:	0c 94 4c 22 	jmp	0x4498	; 0x4498 <__fp_nan>
    2cc8:	11 24       	eor	r1, r1
    2cca:	0c 94 26 22 	jmp	0x444c	; 0x444c <__fp_szero>
    2cce:	0e 94 52 1f 	call	0x3ea4	; 0x3ea4 <__fp_split3>
    2cd2:	70 f3       	brcs	.-36     	; 0x2cb0 <__mulsf3x+0x2>

00002cd4 <__mulsf3_pse>:
    2cd4:	95 9f       	mul	r25, r21
    2cd6:	c1 f3       	breq	.-16     	; 0x2cc8 <__mulsf3x+0x1a>
    2cd8:	95 0f       	add	r25, r21
    2cda:	50 e0       	ldi	r21, 0x00	; 0
    2cdc:	55 1f       	adc	r21, r21
    2cde:	62 9f       	mul	r22, r18
    2ce0:	f0 01       	movw	r30, r0
    2ce2:	72 9f       	mul	r23, r18
    2ce4:	bb 27       	eor	r27, r27
    2ce6:	f0 0d       	add	r31, r0
    2ce8:	b1 1d       	adc	r27, r1
    2cea:	63 9f       	mul	r22, r19
    2cec:	aa 27       	eor	r26, r26
    2cee:	f0 0d       	add	r31, r0
    2cf0:	b1 1d       	adc	r27, r1
    2cf2:	aa 1f       	adc	r26, r26
    2cf4:	64 9f       	mul	r22, r20
    2cf6:	66 27       	eor	r22, r22
    2cf8:	b0 0d       	add	r27, r0
    2cfa:	a1 1d       	adc	r26, r1
    2cfc:	66 1f       	adc	r22, r22
    2cfe:	82 9f       	mul	r24, r18
    2d00:	22 27       	eor	r18, r18
    2d02:	b0 0d       	add	r27, r0
    2d04:	a1 1d       	adc	r26, r1
    2d06:	62 1f       	adc	r22, r18
    2d08:	73 9f       	mul	r23, r19
    2d0a:	b0 0d       	add	r27, r0
    2d0c:	a1 1d       	adc	r26, r1
    2d0e:	62 1f       	adc	r22, r18
    2d10:	83 9f       	mul	r24, r19
    2d12:	a0 0d       	add	r26, r0
    2d14:	61 1d       	adc	r22, r1
    2d16:	22 1f       	adc	r18, r18
    2d18:	74 9f       	mul	r23, r20
    2d1a:	33 27       	eor	r19, r19
    2d1c:	a0 0d       	add	r26, r0
    2d1e:	61 1d       	adc	r22, r1
    2d20:	23 1f       	adc	r18, r19
    2d22:	84 9f       	mul	r24, r20
    2d24:	60 0d       	add	r22, r0
    2d26:	21 1d       	adc	r18, r1
    2d28:	82 2f       	mov	r24, r18
    2d2a:	76 2f       	mov	r23, r22
    2d2c:	6a 2f       	mov	r22, r26
    2d2e:	11 24       	eor	r1, r1
    2d30:	9f 57       	subi	r25, 0x7F	; 127
    2d32:	50 40       	sbci	r21, 0x00	; 0
    2d34:	9a f0       	brmi	.+38     	; 0x2d5c <__mulsf3_pse+0x88>
    2d36:	f1 f0       	breq	.+60     	; 0x2d74 <__mulsf3_pse+0xa0>
    2d38:	88 23       	and	r24, r24
    2d3a:	4a f0       	brmi	.+18     	; 0x2d4e <__mulsf3_pse+0x7a>
    2d3c:	ee 0f       	add	r30, r30
    2d3e:	ff 1f       	adc	r31, r31
    2d40:	bb 1f       	adc	r27, r27
    2d42:	66 1f       	adc	r22, r22
    2d44:	77 1f       	adc	r23, r23
    2d46:	88 1f       	adc	r24, r24
    2d48:	91 50       	subi	r25, 0x01	; 1
    2d4a:	50 40       	sbci	r21, 0x00	; 0
    2d4c:	a9 f7       	brne	.-22     	; 0x2d38 <__mulsf3_pse+0x64>
    2d4e:	9e 3f       	cpi	r25, 0xFE	; 254
    2d50:	51 05       	cpc	r21, r1
    2d52:	80 f0       	brcs	.+32     	; 0x2d74 <__mulsf3_pse+0xa0>
    2d54:	0c 94 2c 22 	jmp	0x4458	; 0x4458 <__fp_inf>
    2d58:	0c 94 26 22 	jmp	0x444c	; 0x444c <__fp_szero>
    2d5c:	5f 3f       	cpi	r21, 0xFF	; 255
    2d5e:	e4 f3       	brlt	.-8      	; 0x2d58 <__mulsf3_pse+0x84>
    2d60:	98 3e       	cpi	r25, 0xE8	; 232
    2d62:	d4 f3       	brlt	.-12     	; 0x2d58 <__mulsf3_pse+0x84>
    2d64:	86 95       	lsr	r24
    2d66:	77 95       	ror	r23
    2d68:	67 95       	ror	r22
    2d6a:	b7 95       	ror	r27
    2d6c:	f7 95       	ror	r31
    2d6e:	e7 95       	ror	r30
    2d70:	9f 5f       	subi	r25, 0xFF	; 255
    2d72:	c1 f7       	brne	.-16     	; 0x2d64 <__mulsf3_pse+0x90>
    2d74:	fe 2b       	or	r31, r30
    2d76:	88 0f       	add	r24, r24
    2d78:	91 1d       	adc	r25, r1
    2d7a:	96 95       	lsr	r25
    2d7c:	87 95       	ror	r24
    2d7e:	97 f9       	bld	r25, 7
    2d80:	08 95       	ret

Disassembly of section .text.floorf:

000027e4 <floorf>:
    27e4:	4f 92       	push	r4
    27e6:	5f 92       	push	r5
    27e8:	6f 92       	push	r6
    27ea:	7f 92       	push	r7
    27ec:	8f 92       	push	r8
    27ee:	9f 92       	push	r9
    27f0:	af 92       	push	r10
    27f2:	bf 92       	push	r11
    27f4:	cf 92       	push	r12
    27f6:	df 92       	push	r13
    27f8:	ef 92       	push	r14
    27fa:	ff 92       	push	r15
    27fc:	cf 93       	push	r28
    27fe:	df 93       	push	r29
    2800:	cd b7       	in	r28, 0x3d	; 61
    2802:	de b7       	in	r29, 0x3e	; 62
    2804:	28 97       	sbiw	r28, 0x08	; 8
    2806:	0f b6       	in	r0, 0x3f	; 63
    2808:	f8 94       	cli
    280a:	de bf       	out	0x3e, r29	; 62
    280c:	0f be       	out	0x3f, r0	; 63
    280e:	cd bf       	out	0x3d, r28	; 61
    2810:	6b 01       	movw	r12, r22
    2812:	7c 01       	movw	r14, r24
    2814:	dc 01       	movw	r26, r24
    2816:	cb 01       	movw	r24, r22
    2818:	47 e1       	ldi	r20, 0x17	; 23
    281a:	b6 95       	lsr	r27
    281c:	a7 95       	ror	r26
    281e:	97 95       	ror	r25
    2820:	87 95       	ror	r24
    2822:	4a 95       	dec	r20
    2824:	d1 f7       	brne	.-12     	; 0x281a <floorf+0x36>
    2826:	99 27       	eor	r25, r25
    2828:	8f 57       	subi	r24, 0x7F	; 127
    282a:	91 09       	sbc	r25, r1
    282c:	87 31       	cpi	r24, 0x17	; 23
    282e:	91 05       	cpc	r25, r1
    2830:	9c f5       	brge	.+102    	; 0x2898 <floorf+0xb4>
    2832:	97 fd       	sbrc	r25, 7
    2834:	36 c0       	rjmp	.+108    	; 0x28a2 <floorf+0xbe>
    2836:	88 24       	eor	r8, r8
    2838:	8a 94       	dec	r8
    283a:	98 2c       	mov	r9, r8
    283c:	3f e7       	ldi	r19, 0x7F	; 127
    283e:	a3 2e       	mov	r10, r19
    2840:	b1 2c       	mov	r11, r1
    2842:	04 c0       	rjmp	.+8      	; 0x284c <floorf+0x68>
    2844:	b5 94       	asr	r11
    2846:	a7 94       	ror	r10
    2848:	97 94       	ror	r9
    284a:	87 94       	ror	r8
    284c:	8a 95       	dec	r24
    284e:	d2 f7       	brpl	.-12     	; 0x2844 <floorf+0x60>
    2850:	d5 01       	movw	r26, r10
    2852:	c4 01       	movw	r24, r8
    2854:	8c 21       	and	r24, r12
    2856:	9d 21       	and	r25, r13
    2858:	ae 21       	and	r26, r14
    285a:	bf 21       	and	r27, r15
    285c:	89 2b       	or	r24, r25
    285e:	8a 2b       	or	r24, r26
    2860:	8b 2b       	or	r24, r27
    2862:	d1 f0       	breq	.+52     	; 0x2898 <floorf+0xb4>
    2864:	20 e0       	ldi	r18, 0x00	; 0
    2866:	30 e0       	ldi	r19, 0x00	; 0
    2868:	40 e8       	ldi	r20, 0x80	; 128
    286a:	5b e7       	ldi	r21, 0x7B	; 123
    286c:	c7 01       	movw	r24, r14
    286e:	b6 01       	movw	r22, r12
    2870:	0e 94 0a 22 	call	0x4414	; 0x4414 <__addsf3>
    2874:	6d 83       	std	Y+5, r22	; 0x05
    2876:	7e 83       	std	Y+6, r23	; 0x06
    2878:	8f 83       	std	Y+7, r24	; 0x07
    287a:	98 87       	std	Y+8, r25	; 0x08
    287c:	f7 fe       	sbrs	r15, 7
    287e:	04 c0       	rjmp	.+8      	; 0x2888 <floorf+0xa4>
    2880:	c8 0c       	add	r12, r8
    2882:	d9 1c       	adc	r13, r9
    2884:	ea 1c       	adc	r14, r10
    2886:	fb 1c       	adc	r15, r11
    2888:	80 94       	com	r8
    288a:	90 94       	com	r9
    288c:	a0 94       	com	r10
    288e:	b0 94       	com	r11
    2890:	c8 20       	and	r12, r8
    2892:	d9 20       	and	r13, r9
    2894:	ea 20       	and	r14, r10
    2896:	fb 20       	and	r15, r11
    2898:	5c 2d       	mov	r21, r12
    289a:	4d 2d       	mov	r20, r13
    289c:	3e 2d       	mov	r19, r14
    289e:	2f 2d       	mov	r18, r15
    28a0:	21 c0       	rjmp	.+66     	; 0x28e4 <floorf+0x100>
    28a2:	20 e0       	ldi	r18, 0x00	; 0
    28a4:	30 e0       	ldi	r19, 0x00	; 0
    28a6:	40 e8       	ldi	r20, 0x80	; 128
    28a8:	5b e7       	ldi	r21, 0x7B	; 123
    28aa:	c7 01       	movw	r24, r14
    28ac:	b6 01       	movw	r22, r12
    28ae:	0e 94 0a 22 	call	0x4414	; 0x4414 <__addsf3>
    28b2:	69 83       	std	Y+1, r22	; 0x01
    28b4:	7a 83       	std	Y+2, r23	; 0x02
    28b6:	8b 83       	std	Y+3, r24	; 0x03
    28b8:	9c 83       	std	Y+4, r25	; 0x04
    28ba:	f7 fe       	sbrs	r15, 7
    28bc:	0f c0       	rjmp	.+30     	; 0x28dc <floorf+0xf8>
    28be:	d7 01       	movw	r26, r14
    28c0:	c6 01       	movw	r24, r12
    28c2:	88 0f       	add	r24, r24
    28c4:	99 1f       	adc	r25, r25
    28c6:	aa 1f       	adc	r26, r26
    28c8:	bb 1f       	adc	r27, r27
    28ca:	89 2b       	or	r24, r25
    28cc:	8a 2b       	or	r24, r26
    28ce:	8b 2b       	or	r24, r27
    28d0:	19 f3       	breq	.-58     	; 0x2898 <floorf+0xb4>
    28d2:	50 e0       	ldi	r21, 0x00	; 0
    28d4:	40 e0       	ldi	r20, 0x00	; 0
    28d6:	30 e8       	ldi	r19, 0x80	; 128
    28d8:	2f eb       	ldi	r18, 0xBF	; 191
    28da:	04 c0       	rjmp	.+8      	; 0x28e4 <floorf+0x100>
    28dc:	50 e0       	ldi	r21, 0x00	; 0
    28de:	40 e0       	ldi	r20, 0x00	; 0
    28e0:	30 e0       	ldi	r19, 0x00	; 0
    28e2:	20 e0       	ldi	r18, 0x00	; 0
    28e4:	65 2f       	mov	r22, r21
    28e6:	74 2f       	mov	r23, r20
    28e8:	83 2f       	mov	r24, r19
    28ea:	92 2f       	mov	r25, r18
    28ec:	28 96       	adiw	r28, 0x08	; 8
    28ee:	0f b6       	in	r0, 0x3f	; 63
    28f0:	f8 94       	cli
    28f2:	de bf       	out	0x3e, r29	; 62
    28f4:	0f be       	out	0x3f, r0	; 63
    28f6:	cd bf       	out	0x3d, r28	; 61
    28f8:	df 91       	pop	r29
    28fa:	cf 91       	pop	r28
    28fc:	ff 90       	pop	r15
    28fe:	ef 90       	pop	r14
    2900:	df 90       	pop	r13
    2902:	cf 90       	pop	r12
    2904:	bf 90       	pop	r11
    2906:	af 90       	pop	r10
    2908:	9f 90       	pop	r9
    290a:	8f 90       	pop	r8
    290c:	7f 90       	pop	r7
    290e:	6f 90       	pop	r6
    2910:	5f 90       	pop	r5
    2912:	4f 90       	pop	r4
    2914:	08 95       	ret

Disassembly of section .text.fmaf:

000026a8 <fmaf>:
    26a8:	a5 e1       	ldi	r26, 0x15	; 21
    26aa:	b0 e0       	ldi	r27, 0x00	; 0
    26ac:	ea e5       	ldi	r30, 0x5A	; 90
    26ae:	f3 e1       	ldi	r31, 0x13	; 19
    26b0:	0c 94 f1 1f 	jmp	0x3fe2	; 0x3fe2 <__prologue_saves__>
    26b4:	47 01       	movw	r8, r14
    26b6:	58 01       	movw	r10, r16
    26b8:	0e 94 48 22 	call	0x4490	; 0x4490 <__mulsf3>
    26bc:	2b 01       	movw	r4, r22
    26be:	3c 01       	movw	r6, r24
    26c0:	a8 01       	movw	r20, r16
    26c2:	97 01       	movw	r18, r14
    26c4:	0e 94 0a 22 	call	0x4414	; 0x4414 <__addsf3>
    26c8:	16 2f       	mov	r17, r22
    26ca:	c7 2e       	mov	r12, r23
    26cc:	d8 2e       	mov	r13, r24
    26ce:	f9 2e       	mov	r15, r25
    26d0:	86 2f       	mov	r24, r22
    26d2:	9c 2d       	mov	r25, r12
    26d4:	ad 2d       	mov	r26, r13
    26d6:	bf 2d       	mov	r27, r15
    26d8:	89 83       	std	Y+1, r24	; 0x01
    26da:	9a 83       	std	Y+2, r25	; 0x02
    26dc:	ab 83       	std	Y+3, r26	; 0x03
    26de:	bc 83       	std	Y+4, r27	; 0x04
    26e0:	aa 81       	ldd	r26, Y+2	; 0x02
    26e2:	fb 81       	ldd	r31, Y+3	; 0x03
    26e4:	ec 81       	ldd	r30, Y+4	; 0x04
    26e6:	ed 80       	ldd	r14, Y+5	; 0x05
    26e8:	3e 80       	ldd	r3, Y+6	; 0x06
    26ea:	2f 80       	ldd	r2, Y+7	; 0x07
    26ec:	08 85       	ldd	r16, Y+8	; 0x08
    26ee:	0d 8b       	std	Y+21, r16	; 0x15
    26f0:	5e 2f       	mov	r21, r30
    26f2:	5f 71       	andi	r21, 0x1F	; 31
    26f4:	21 2f       	mov	r18, r17
    26f6:	3a 2f       	mov	r19, r26
    26f8:	4f 2f       	mov	r20, r31
    26fa:	60 e0       	ldi	r22, 0x00	; 0
    26fc:	70 e0       	ldi	r23, 0x00	; 0
    26fe:	80 e0       	ldi	r24, 0x00	; 0
    2700:	90 e0       	ldi	r25, 0x00	; 0
    2702:	21 15       	cp	r18, r1
    2704:	31 05       	cpc	r19, r1
    2706:	41 05       	cpc	r20, r1
    2708:	00 e1       	ldi	r16, 0x10	; 16
    270a:	50 07       	cpc	r21, r16
    270c:	61 05       	cpc	r22, r1
    270e:	71 05       	cpc	r23, r1
    2710:	81 05       	cpc	r24, r1
    2712:	91 05       	cpc	r25, r1
    2714:	09 f0       	breq	.+2      	; 0x2718 <fmaf+0x70>
    2716:	5e c0       	rjmp	.+188    	; 0x27d4 <fmaf+0x12c>
    2718:	5e 2f       	mov	r21, r30
    271a:	6e 2d       	mov	r22, r14
    271c:	73 2d       	mov	r23, r3
    271e:	82 2d       	mov	r24, r2
    2720:	9d 89       	ldd	r25, Y+21	; 0x15
    2722:	04 e3       	ldi	r16, 0x34	; 52
    2724:	0e 94 d5 1f 	call	0x3faa	; 0x3faa <__lshrdi3>
    2728:	2d 87       	std	Y+13, r18	; 0x0d
    272a:	3e 87       	std	Y+14, r19	; 0x0e
    272c:	4f 87       	std	Y+15, r20	; 0x0f
    272e:	58 8b       	std	Y+16, r21	; 0x10
    2730:	69 8b       	std	Y+17, r22	; 0x11
    2732:	7a 8b       	std	Y+18, r23	; 0x12
    2734:	8b 8b       	std	Y+19, r24	; 0x13
    2736:	9c 8b       	std	Y+20, r25	; 0x14
    2738:	8d 85       	ldd	r24, Y+13	; 0x0d
    273a:	9e 85       	ldd	r25, Y+14	; 0x0e
    273c:	97 70       	andi	r25, 0x07	; 7
    273e:	8f 3f       	cpi	r24, 0xFF	; 255
    2740:	97 40       	sbci	r25, 0x07	; 7
    2742:	09 f4       	brne	.+2      	; 0x2746 <fmaf+0x9e>
    2744:	47 c0       	rjmp	.+142    	; 0x27d4 <fmaf+0x12c>
    2746:	a3 01       	movw	r20, r6
    2748:	92 01       	movw	r18, r4
    274a:	61 2f       	mov	r22, r17
    274c:	7c 2d       	mov	r23, r12
    274e:	8d 2d       	mov	r24, r13
    2750:	9f 2d       	mov	r25, r15
    2752:	0e 94 09 22 	call	0x4412	; 0x4412 <__subsf3>
    2756:	9b 01       	movw	r18, r22
    2758:	ac 01       	movw	r20, r24
    275a:	c5 01       	movw	r24, r10
    275c:	b4 01       	movw	r22, r8
    275e:	0e 94 32 22 	call	0x4464	; 0x4464 <__cmpsf2>
    2762:	88 23       	and	r24, r24
    2764:	b9 f1       	breq	.+110    	; 0x27d4 <fmaf+0x12c>
    2766:	49 86       	std	Y+9, r4	; 0x09
    2768:	5a 86       	std	Y+10, r5	; 0x0a
    276a:	6b 86       	std	Y+11, r6	; 0x0b
    276c:	7c 86       	std	Y+12, r7	; 0x0c
    276e:	29 85       	ldd	r18, Y+9	; 0x09
    2770:	3a 85       	ldd	r19, Y+10	; 0x0a
    2772:	4b 85       	ldd	r20, Y+11	; 0x0b
    2774:	5c 85       	ldd	r21, Y+12	; 0x0c
    2776:	c5 01       	movw	r24, r10
    2778:	b4 01       	movw	r22, r8
    277a:	0e 94 0a 22 	call	0x4414	; 0x4414 <__addsf3>
    277e:	b6 2e       	mov	r11, r22
    2780:	87 2e       	mov	r8, r23
    2782:	98 2e       	mov	r9, r24
    2784:	a9 2e       	mov	r10, r25
    2786:	26 2f       	mov	r18, r22
    2788:	37 2f       	mov	r19, r23
    278a:	48 2f       	mov	r20, r24
    278c:	59 2f       	mov	r21, r25
    278e:	61 2f       	mov	r22, r17
    2790:	7c 2d       	mov	r23, r12
    2792:	8d 2d       	mov	r24, r13
    2794:	9f 2d       	mov	r25, r15
    2796:	0e 94 32 22 	call	0x4464	; 0x4464 <__cmpsf2>
    279a:	81 11       	cpse	r24, r1
    279c:	18 c0       	rjmp	.+48     	; 0x27ce <fmaf+0x126>
    279e:	2b 2d       	mov	r18, r11
    27a0:	8b 2d       	mov	r24, r11
    27a2:	98 2d       	mov	r25, r8
    27a4:	a9 2d       	mov	r26, r9
    27a6:	ba 2d       	mov	r27, r10
    27a8:	89 83       	std	Y+1, r24	; 0x01
    27aa:	9a 83       	std	Y+2, r25	; 0x02
    27ac:	ab 83       	std	Y+3, r26	; 0x03
    27ae:	bc 83       	std	Y+4, r27	; 0x04
    27b0:	3a 81       	ldd	r19, Y+2	; 0x02
    27b2:	4b 81       	ldd	r20, Y+3	; 0x03
    27b4:	5c 81       	ldd	r21, Y+4	; 0x04
    27b6:	6e 2d       	mov	r22, r14
    27b8:	73 2d       	mov	r23, r3
    27ba:	82 2d       	mov	r24, r2
    27bc:	9d 89       	ldd	r25, Y+21	; 0x15
    27be:	a1 e0       	ldi	r26, 0x01	; 1
    27c0:	0e 94 aa 21 	call	0x4354	; 0x4354 <__adddi3_s8>
    27c4:	12 2f       	mov	r17, r18
    27c6:	c3 2e       	mov	r12, r19
    27c8:	d4 2e       	mov	r13, r20
    27ca:	f5 2e       	mov	r15, r21
    27cc:	03 c0       	rjmp	.+6      	; 0x27d4 <fmaf+0x12c>
    27ce:	1b 2d       	mov	r17, r11
    27d0:	64 01       	movw	r12, r8
    27d2:	fa 2c       	mov	r15, r10
    27d4:	61 2f       	mov	r22, r17
    27d6:	7c 2d       	mov	r23, r12
    27d8:	8d 2d       	mov	r24, r13
    27da:	9f 2d       	mov	r25, r15
    27dc:	65 96       	adiw	r28, 0x15	; 21
    27de:	e2 e1       	ldi	r30, 0x12	; 18
    27e0:	0c 94 28 20 	jmp	0x4050	; 0x4050 <__epilogue_restores__>

Disassembly of section .text.libgcc:

00004354 <__adddi3_s8>:
    4354:	00 24       	eor	r0, r0
    4356:	a7 fd       	sbrc	r26, 7
    4358:	00 94       	com	r0
    435a:	2a 0f       	add	r18, r26
    435c:	30 1d       	adc	r19, r0
    435e:	40 1d       	adc	r20, r0
    4360:	50 1d       	adc	r21, r0
    4362:	60 1d       	adc	r22, r0
    4364:	70 1d       	adc	r23, r0
    4366:	80 1d       	adc	r24, r0
    4368:	90 1d       	adc	r25, r0
    436a:	08 95       	ret
