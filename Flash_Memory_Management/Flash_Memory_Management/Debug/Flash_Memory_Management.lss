
Flash_Memory_Management.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00004801  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000186  00000000  00000000  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000102e  00800200  00800200  00004801  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00004801  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 00000196  00000000  00000000  00004830  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  000049c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000315e  00000000  00000000  00004b86  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001207  00000000  00000000  00007ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000017a9  00000000  00000000  00008eeb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000057c  00000000  00000000  0000a694  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000537  00000000  00000000  0000ac10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d64  00000000  00000000  0000b147  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  0000beab  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  000046b2  000046b2  00004786  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000c094  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .progmemx.data 00000013  00000650  00000650  00000724  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 16 .text.main    00000044  00004060  00004060  00004134  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.USART_Init 00000036  00004218  00004218  000042ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.USART_TX_Data 0000000e  000045e0  000045e0  000046b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.USART_Data 0000004c  00003fcc  00003fcc  000040a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.USART_RX_Data 0000000e  000045ee  000045ee  000046c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.LED_Init 00000016  00004580  00004580  00004654  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.LED_Red_Toggle 0000000e  000045fc  000045fc  000046d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.LED_Green_Toggle 0000000e  0000460a  0000460a  000046de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.VOLTAGE_Translator_Init 00000026  00004398  00004398  0000446c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.SLAVE_CS_Deselect 00000062  00003db4  00003db4  00003e88  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.FLASH_NAND_CS_ENABLE 00000008  0000468c  0000468c  00004760  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.FLASH_NAND_CS_DISABLE 00000008  00004694  00004694  00004768  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.Print_To_User 000000ac  000033a4  000033a4  00003478  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .progmemx.data 00000361  00000186  00000186  0000025a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 30 .text.HEX_Verification 000000bc  0000317c  0000317c  00003250  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.NAND_Address_Checker 00000074  00003c62  00003c62  00003d36  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.ExecuteCommand 00000468  00001bd8  00001bd8  00001cac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.UserInput 000000bc  00003238  00003238  0000330c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.COLUMN_BLOCK_PAGE_ADDRESSER 00000150  000025b0  000025b0  00002684  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .bss.input_counter 00000002  0080129b  0080129b  00004801  2**0
                  ALLOC
 36 .bss.arr_address 00000002  0080129d  0080129d  00004801  2**0
                  ALLOC
 37 .text.CLEAR_ARR 0000005e  00003e16  00003e16  00003eea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.SPI_MASTER_Init 00000024  0000440a  0000440a  000044de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.FLASH_Write_Enable 0000001a  00004506  00004506  000045da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .progmemx.data 000000d4  000004e7  000004e7  000005bb  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 41 .text.FLASH_ID 0000008a  000039ee  000039ee  00003ac2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.FLASH_Die_Selection 0000007a  00003af8  00003af8  00003bcc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.FLASH_Configuration 0000007a  00003b72  00003b72  00003c46  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.FLASH_Block_Lock_Setter 00000074  00003cd6  00003cd6  00003daa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.FLASH_Block_Lock 000000aa  00003450  00003450  00003524  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.FLASH_Reset 0000001e  00004494  00004494  00004568  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.FLASH_MainArray_Address 000000a6  000034fa  000034fa  000035ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.FLASH_Column_Address 0000005c  00003ed2  00003ed2  00003fa6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.FLASH_Data_Storage 000000a2  0000378c  0000378c  00003860  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.FLASH_Read_From_Cache_x1 0000004e  00003f7e  00003f7e  00004052  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.FLASH_Status 00000080  00003a78  00003a78  00003b4c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.FLASH_Program_Execute 00000030  000042b8  000042b8  0000438c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.FLASH_Page_Read 00000038  000041a8  000041a8  0000427c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.FLASH_Para_Pg 00000050  00003f2e  00003f2e  00004002  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.FLASH_Block_Erase 00000034  00004284  00004284  00004358  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.FLASH_Page_Program 00000076  00003bec  00003bec  00003cc0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .data.write_test 0000006d  0080122e  000046c0  00004794  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 58 .progmemx.data 0000007f  000005bb  000005bb  0000068f  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 59 .text.Page_Tester 000000c0  000030bc  000030bc  00003190  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.libgcc  0000000e  00004618  00004618  000046ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.__dummy_fini 00000002  000046ba  000046ba  0000478e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.__dummy_funcs_on_exit 00000002  000046bc  000046bc  00004790  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.__dummy_simulator_exit 00000002  000046be  000046be  00004792  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.exit    00000016  00004596  00004596  0000466a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.__wrap_sprintf 00000026  000043be  000043be  00004492  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .progmemx.data 00000007  00000683  00000683  00000757  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 67 .text.__fmt_s 000000ca  00002ff2  00002ff2  000030c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.__out   0000006a  00003d4a  00003d4a  00003e1e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.__pad   0000010e  00002ab8  00002ab8  00002b8c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .text.__fmt_state 000000a4  000035a0  000035a0  00003674  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .progmemx.data 00000006  0000068a  0000068a  0000075e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 72 .text.__printf_core 00000832  00000690  00000690  00000764  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .progmemx.data.state_table 00000016  0000063a  0000063a  0000070e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 74 .text.fputc   00000092  000038d0  000038d0  000039a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.__fmt_d 0000017e  000022c0  000022c0  00002394  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.__fmt_o 000000d4  00002d7c  00002d7c  00002e50  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.__cvt_u 0000014a  00002700  00002700  000027d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.__fmt_u 000000b0  000032f4  000032f4  000033c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.__fmt_x 00000280  00002040  00002040  00002114  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.__pop_float 00000040  0000412c  0000412c  00004200  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text.__pop_int 00000172  0000243e  0000243e  00002512  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.__pop_ptr 000000d8  00002ca4  00002ca4  00002d78  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .text.sprintf 00000026  000043e4  000043e4  000044b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 .text.vsprintf 00000018  00004520  00004520  000045f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 .text.atoi    0000008c  00003962  00003962  00003a36  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 .text.memset  00000012  000045ac  000045ac  00004680  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 .text.strcmp  00000044  000040a4  000040a4  00004178  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 .text.strlen  00000024  0000442e  0000442e  00004502  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 .text.tolower 00000010  000045d0  000045d0  000046a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 .text.toupper 00000012  000045be  000045be  00004692  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 .text._Exit   00000004  000046b6  000046b6  0000478a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 .text.__vsprintf 00000018  00004538  00004538  0000460c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 .text.__vsnprintf 000000a4  00003644  00003644  00003718  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 .text.vsnprintf 000000a4  000036e8  000036e8  000037bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 .text.vfprintf 00000030  000042e8  000042e8  000043bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 .text.__vfprintf 00000030  00004318  00004318  000043ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 97 .progmemx.data 00000010  00000663  00000663  00000737  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 98 .text.__fmt_fp 000006ba  00000ec2  00000ec2  00000f96  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 99 .progmemx.data 00000010  00000673  00000673  00000747  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
100 .text.__fmt_a 0000065c  0000157c  0000157c  00001650  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 .text.strcpy  0000001c  000044b2  000044b2  00004586  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 .text.libgcc.div 00000028  00004348  00004348  0000441c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 .text.libgcc.div 0000001c  000044ce  000044ce  000045a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 .text.libgcc.div 000000a2  0000382e  0000382e  00003902  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 .text.libgcc  00000020  00004474  00004474  00004548  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 .text.libgcc.prologue 00000038  000041e0  000041e0  000042b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 .text.libgcc.prologue 00000036  0000424e  0000424e  00004322  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 .text.libgcc  0000001c  000044ea  000044ea  000045be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 .text.libgcc.builtins 0000003c  0000416c  0000416c  00004240  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 .text.libgcc  00000018  00004550  00004550  00004624  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 .text.libgcc.div 00000028  00004370  00004370  00004444  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 .text         0000000e  00004626  00004626  000046fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 .text         000000ce  00002f24  00002f24  00002ff8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 .text         0000000a  00004678  00004678  0000474c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 .text         00000008  0000469c  0000469c  00004770  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 .text         000000de  00002bc6  00002bc6  00002c9a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 .text         0000000e  00004634  00004634  00004708  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 .text         0000005e  00003e74  00003e74  00003f48  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 .text         00000048  00004018  00004018  000040ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 .text         0000000c  0000466c  0000466c  00004740  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 .text         00000006  000046ac  000046ac  00004780  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 .text         0000000e  00004642  00004642  00004716  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 .text         0000000e  00004650  00004650  00004724  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 .text         00000022  00004452  00004452  00004526  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 .text         00000044  000040e8  000040e8  000041bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 .text         0000000e  0000465e  0000465e  00004732  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 .text         0000000a  00004682  00004682  00004756  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 .text         00000008  000046a4  000046a4  00004778  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 .text         000000d4  00002e50  00002e50  00002f24  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 .text.floorf  00000132  00002986  00002986  00002a5a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 .text.fmaf    0000013c  0000284a  0000284a  0000291e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
132 .text.libgcc  00000018  00004568  00004568  0000463c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 95 00 	jmp	0x12a	; 0x12a <__ctors_end>
   4:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
   8:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
   c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  10:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  14:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  18:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  1c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  20:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  24:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  28:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  2c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  30:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  34:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  38:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  3c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  40:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  44:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  48:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  4c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  50:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  54:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  58:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  5c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  60:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  64:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  68:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  6c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  70:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  74:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  78:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  7c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  80:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  84:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  88:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  8c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  90:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  94:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  98:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  9c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  a0:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  a4:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  a8:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  ac:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  b0:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  b4:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  b8:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  bc:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  c0:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  c4:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  c8:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  cc:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  d0:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  d4:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  d8:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  dc:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  e0:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>

000000e4 <.dinit>:
  e4:	02 00       	.word	0x0002	; ????
  e6:	12 2e       	mov	r1, r18
  e8:	80 12       	cpse	r8, r16
  ea:	2e 12       	cpse	r2, r30
  ec:	9b 00       	.word	0x009b	; ????
  ee:	46 c0       	rjmp	.+140    	; 0x17c <__do_clear_bss+0x10>
  f0:	12 9b       	sbis	0x02, 2	; 2
  f2:	12 9f       	mul	r17, r18
  f4:	80 00       	.word	0x0080	; ????

000000f6 <__trampolines_start>:
  f6:	0c 94 f8 21 	jmp	0x43f0	; 0x43f0 <sprintf+0xc>
  fa:	0c 94 4e 03 	jmp	0x69c	; 0x69c <__printf_core+0xc>
  fe:	0c 94 67 07 	jmp	0xece	; 0xece <__fmt_fp+0xc>
 102:	0c 94 2b 14 	jmp	0x2856	; 0x2856 <fmaf+0xc>
 106:	0c 94 7a 21 	jmp	0x42f4	; 0x42f4 <vfprintf+0xc>
 10a:	0c 94 e5 21 	jmp	0x43ca	; 0x43ca <_sprintf_cdnopuxX+0xc>
 10e:	0c 94 c4 0a 	jmp	0x1588	; 0x1588 <__fmt_a+0xc>
 112:	0c 94 80 19 	jmp	0x3300	; 0x3300 <__fmt_u+0xc>
 116:	0c 94 c4 16 	jmp	0x2d88	; 0x2d88 <__fmt_o+0xc>
 11a:	0c 94 26 10 	jmp	0x204c	; 0x204c <__fmt_x+0xc>
 11e:	0c 94 92 21 	jmp	0x4324	; 0x4324 <__vfprintf+0xc>
 122:	0c 94 66 11 	jmp	0x22cc	; 0x22cc <__fmt_d+0xc>
 126:	0c 94 86 13 	jmp	0x270c	; 0x270c <__cvt_u+0xc>

0000012a <__ctors_end>:
 12a:	11 24       	eor	r1, r1
 12c:	1f be       	out	0x3f, r1	; 63
 12e:	cf ef       	ldi	r28, 0xFF	; 255
 130:	d1 e2       	ldi	r29, 0x21	; 33
 132:	de bf       	out	0x3e, r29	; 62
 134:	cd bf       	out	0x3d, r28	; 61
 136:	00 e0       	ldi	r16, 0x00	; 0
 138:	0c bf       	out	0x3c, r16	; 60

0000013a <__do_copy_data>:
 13a:	e4 ee       	ldi	r30, 0xE4	; 228
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	40 e0       	ldi	r20, 0x00	; 0
 140:	19 c0       	rjmp	.+50     	; 0x174 <__do_clear_bss+0x8>
 142:	b7 91       	elpm	r27, Z+
 144:	a7 91       	elpm	r26, Z+
 146:	37 91       	elpm	r19, Z+
 148:	27 91       	elpm	r18, Z+
 14a:	07 91       	elpm	r16, Z+
 14c:	07 fd       	sbrc	r16, 7
 14e:	0e c0       	rjmp	.+28     	; 0x16c <__do_clear_bss>
 150:	97 91       	elpm	r25, Z+
 152:	87 91       	elpm	r24, Z+
 154:	ef 01       	movw	r28, r30
 156:	f9 2f       	mov	r31, r25
 158:	e8 2f       	mov	r30, r24
 15a:	0b bf       	out	0x3b, r16	; 59
 15c:	07 90       	elpm	r0, Z+
 15e:	0d 92       	st	X+, r0
 160:	a2 17       	cp	r26, r18
 162:	b3 07       	cpc	r27, r19
 164:	d9 f7       	brne	.-10     	; 0x15c <__do_copy_data+0x22>
 166:	fe 01       	movw	r30, r28
 168:	1b be       	out	0x3b, r1	; 59
 16a:	04 c0       	rjmp	.+8      	; 0x174 <__do_clear_bss+0x8>

0000016c <__do_clear_bss>:
 16c:	1d 92       	st	X+, r1
 16e:	a2 17       	cp	r26, r18
 170:	b3 07       	cpc	r27, r19
 172:	e1 f7       	brne	.-8      	; 0x16c <__do_clear_bss>
 174:	e5 3f       	cpi	r30, 0xF5	; 245
 176:	f4 07       	cpc	r31, r20
 178:	21 f7       	brne	.-56     	; 0x142 <__do_copy_data+0x8>
 17a:	0e 94 30 20 	call	0x4060	; 0x4060 <main>
 17e:	0c 94 cb 22 	jmp	0x4596	; 0x4596 <exit>

00000182 <_exit>:
 182:	f8 94       	cli

00000184 <__stop_program>:
 184:	ff cf       	rjmp	.-2      	; 0x184 <__stop_program>

Disassembly of section .text:

000046b2 <__bad_interrupt>:
    46b2:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00004060 <main>:

//#include "MEGA_1284P_SPI.h" //adding MEGA_1284P SPI Testing code

int main(void)
{
	LED_Init();
    4060:	0e 94 c0 22 	call	0x4580	; 0x4580 <LED_Init>
	VOLTAGE_Translator_Init();
    4064:	0e 94 cc 21 	call	0x4398	; 0x4398 <VOLTAGE_Translator_Init>
	USART_Init();
    4068:	0e 94 0c 21 	call	0x4218	; 0x4218 <USART_Init>
	SLAVE_CS_Deselect();
    406c:	0e 94 da 1e 	call	0x3db4	; 0x3db4 <SLAVE_CS_Deselect>
	SPI_MASTER_Init();
    4070:	0e 94 05 22 	call	0x440a	; 0x440a <SPI_MASTER_Init>
	LED_Green_Toggle();
    4074:	0e 94 05 23 	call	0x460a	; 0x460a <LED_Green_Toggle>
	//PORTA &= ~(1 << PA3); //~CS pin set low for selecting slave device
	
    while(1)
    {		
		CLEAR_ARR();
    4078:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
		USART_Data("->Arrays Cleared \n");
    407c:	60 e5       	ldi	r22, 0x50	; 80
    407e:	76 e0       	ldi	r23, 0x06	; 6
    4080:	80 e0       	ldi	r24, 0x00	; 0
    4082:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		
		UserInput(true); //true therefore command
    4086:	81 e0       	ldi	r24, 0x01	; 1
    4088:	0e 94 1c 19 	call	0x3238	; 0x3238 <UserInput>
		
		LED_Red_Toggle();
    408c:	0e 94 fe 22 	call	0x45fc	; 0x45fc <LED_Red_Toggle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    4090:	2f ef       	ldi	r18, 0xFF	; 255
    4092:	81 ee       	ldi	r24, 0xE1	; 225
    4094:	94 e0       	ldi	r25, 0x04	; 4
    4096:	21 50       	subi	r18, 0x01	; 1
    4098:	80 40       	sbci	r24, 0x00	; 0
    409a:	90 40       	sbci	r25, 0x00	; 0
    409c:	e1 f7       	brne	.-8      	; 0x4096 <main+0x36>
    409e:	00 c0       	rjmp	.+0      	; 0x40a0 <main+0x40>
    40a0:	00 00       	nop
    40a2:	ea cf       	rjmp	.-44     	; 0x4078 <main+0x18>

Disassembly of section .text.USART_Init:

00004218 <USART_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    4218:	87 e6       	ldi	r24, 0x67	; 103
    421a:	90 e0       	ldi	r25, 0x00	; 0
    421c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
    4220:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
    4224:	8d b1       	in	r24, 0x0d	; 13
    4226:	82 60       	ori	r24, 0x02	; 2
    4228:	8d b9       	out	0x0d, r24	; 13
    422a:	e1 ec       	ldi	r30, 0xC1	; 193
    422c:	f0 e0       	ldi	r31, 0x00	; 0
    422e:	80 81       	ld	r24, Z
    4230:	88 60       	ori	r24, 0x08	; 8
    4232:	80 83       	st	Z, r24
    4234:	8d b1       	in	r24, 0x0d	; 13
    4236:	8e 7f       	andi	r24, 0xFE	; 254
    4238:	8d b9       	out	0x0d, r24	; 13
    423a:	80 81       	ld	r24, Z
    423c:	80 61       	ori	r24, 0x10	; 16
    423e:	80 83       	st	Z, r24
    4240:	81 b1       	in	r24, 0x01	; 1
    4242:	84 60       	ori	r24, 0x04	; 4
    4244:	81 b9       	out	0x01, r24	; 1
    4246:	82 b1       	in	r24, 0x02	; 2
    4248:	84 60       	ori	r24, 0x04	; 4
    424a:	82 b9       	out	0x02, r24	; 2
    424c:	08 95       	ret

Disassembly of section .text.USART_TX_Data:

000045e0 <USART_TX_Data>:
    45e0:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    45e4:	95 ff       	sbrs	r25, 5
    45e6:	fc cf       	rjmp	.-8      	; 0x45e0 <USART_TX_Data>
    45e8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    45ec:	08 95       	ret

Disassembly of section .text.USART_Data:

00003fcc <USART_Data>:
    3fcc:	cf 92       	push	r12
    3fce:	df 92       	push	r13
    3fd0:	ef 92       	push	r14
    3fd2:	cf 93       	push	r28
    3fd4:	df 93       	push	r29
    3fd6:	6b 01       	movw	r12, r22
    3fd8:	e8 2e       	mov	r14, r24
    3fda:	c0 e0       	ldi	r28, 0x00	; 0
    3fdc:	d0 e0       	ldi	r29, 0x00	; 0
    3fde:	0f c0       	rjmp	.+30     	; 0x3ffe <USART_Data+0x32>
    3fe0:	ae 2d       	mov	r26, r14
    3fe2:	c6 01       	movw	r24, r12
    3fe4:	8c 0f       	add	r24, r28
    3fe6:	9d 1f       	adc	r25, r29
    3fe8:	a1 1d       	adc	r26, r1
    3fea:	d7 fd       	sbrc	r29, 7
    3fec:	aa 95       	dec	r26
    3fee:	fc 01       	movw	r30, r24
    3ff0:	5a 2f       	mov	r21, r26
    3ff2:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    3ff6:	86 2f       	mov	r24, r22
    3ff8:	0e 94 f0 22 	call	0x45e0	; 0x45e0 <USART_TX_Data>
    3ffc:	21 96       	adiw	r28, 0x01	; 1
    3ffe:	8e 2d       	mov	r24, r14
    4000:	b6 01       	movw	r22, r12
    4002:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    4006:	c8 17       	cp	r28, r24
    4008:	d9 07       	cpc	r29, r25
    400a:	50 f3       	brcs	.-44     	; 0x3fe0 <USART_Data+0x14>
    400c:	df 91       	pop	r29
    400e:	cf 91       	pop	r28
    4010:	ef 90       	pop	r14
    4012:	df 90       	pop	r13
    4014:	cf 90       	pop	r12
    4016:	08 95       	ret

Disassembly of section .text.USART_RX_Data:

000045ee <USART_RX_Data>:
    45ee:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    45f2:	88 23       	and	r24, r24
    45f4:	e4 f7       	brge	.-8      	; 0x45ee <USART_RX_Data>
    45f6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    45fa:	08 95       	ret

Disassembly of section .text.LED_Init:

00004580 <LED_Init>:
    4580:	e1 e0       	ldi	r30, 0x01	; 1
    4582:	f1 e0       	ldi	r31, 0x01	; 1
    4584:	80 81       	ld	r24, Z
    4586:	80 66       	ori	r24, 0x60	; 96
    4588:	80 83       	st	Z, r24
    458a:	e2 e0       	ldi	r30, 0x02	; 2
    458c:	f1 e0       	ldi	r31, 0x01	; 1
    458e:	80 81       	ld	r24, Z
    4590:	80 66       	ori	r24, 0x60	; 96
    4592:	80 83       	st	Z, r24
    4594:	08 95       	ret

Disassembly of section .text.LED_Red_Toggle:

000045fc <LED_Red_Toggle>:
}

void LED_Red_Toggle()
{
	PORTH ^= (1 << PH6); //toggle RED_LED (PH6)
    45fc:	e2 e0       	ldi	r30, 0x02	; 2
    45fe:	f1 e0       	ldi	r31, 0x01	; 1
    4600:	90 81       	ld	r25, Z
    4602:	80 e4       	ldi	r24, 0x40	; 64
    4604:	89 27       	eor	r24, r25
    4606:	80 83       	st	Z, r24
    4608:	08 95       	ret

Disassembly of section .text.LED_Green_Toggle:

0000460a <LED_Green_Toggle>:
}

void LED_Green_Toggle()
{
	PORTH ^= (1 << PH5); //toggle GREEN_LED (PH5)
    460a:	e2 e0       	ldi	r30, 0x02	; 2
    460c:	f1 e0       	ldi	r31, 0x01	; 1
    460e:	90 81       	ld	r25, Z
    4610:	80 e2       	ldi	r24, 0x20	; 32
    4612:	89 27       	eor	r24, r25
    4614:	80 83       	st	Z, r24
    4616:	08 95       	ret

Disassembly of section .text.VOLTAGE_Translator_Init:

00004398 <VOLTAGE_Translator_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    4398:	87 b1       	in	r24, 0x07	; 7
    439a:	80 64       	ori	r24, 0x40	; 64
    439c:	87 b9       	out	0x07, r24	; 7
    439e:	88 b1       	in	r24, 0x08	; 8
    43a0:	80 64       	ori	r24, 0x40	; 64
    43a2:	88 b9       	out	0x08, r24	; 8
    43a4:	83 b3       	in	r24, 0x13	; 19
    43a6:	81 60       	ori	r24, 0x01	; 1
    43a8:	83 bb       	out	0x13, r24	; 19
    43aa:	84 b3       	in	r24, 0x14	; 20
    43ac:	81 60       	ori	r24, 0x01	; 1
    43ae:	84 bb       	out	0x14, r24	; 20
    43b0:	83 b3       	in	r24, 0x13	; 19
    43b2:	82 60       	ori	r24, 0x02	; 2
    43b4:	83 bb       	out	0x13, r24	; 19
    43b6:	84 b3       	in	r24, 0x14	; 20
    43b8:	82 60       	ori	r24, 0x02	; 2
    43ba:	84 bb       	out	0x14, r24	; 20
    43bc:	08 95       	ret

Disassembly of section .text.SLAVE_CS_Deselect:

00003db4 <SLAVE_CS_Deselect>:
    3db4:	81 b1       	in	r24, 0x01	; 1
    3db6:	88 60       	ori	r24, 0x08	; 8
    3db8:	81 b9       	out	0x01, r24	; 1
    3dba:	82 b1       	in	r24, 0x02	; 2
    3dbc:	88 60       	ori	r24, 0x08	; 8
    3dbe:	82 b9       	out	0x02, r24	; 2
    3dc0:	81 b1       	in	r24, 0x01	; 1
    3dc2:	80 61       	ori	r24, 0x10	; 16
    3dc4:	81 b9       	out	0x01, r24	; 1
    3dc6:	82 b1       	in	r24, 0x02	; 2
    3dc8:	80 61       	ori	r24, 0x10	; 16
    3dca:	82 b9       	out	0x02, r24	; 2
    3dcc:	81 b1       	in	r24, 0x01	; 1
    3dce:	80 62       	ori	r24, 0x20	; 32
    3dd0:	81 b9       	out	0x01, r24	; 1
    3dd2:	82 b1       	in	r24, 0x02	; 2
    3dd4:	80 62       	ori	r24, 0x20	; 32
    3dd6:	82 b9       	out	0x02, r24	; 2
    3dd8:	81 b1       	in	r24, 0x01	; 1
    3dda:	80 64       	ori	r24, 0x40	; 64
    3ddc:	81 b9       	out	0x01, r24	; 1
    3dde:	82 b1       	in	r24, 0x02	; 2
    3de0:	80 64       	ori	r24, 0x40	; 64
    3de2:	82 b9       	out	0x02, r24	; 2
    3de4:	81 b1       	in	r24, 0x01	; 1
    3de6:	80 68       	ori	r24, 0x80	; 128
    3de8:	81 b9       	out	0x01, r24	; 1
    3dea:	82 b1       	in	r24, 0x02	; 2
    3dec:	80 68       	ori	r24, 0x80	; 128
    3dee:	82 b9       	out	0x02, r24	; 2
    3df0:	81 b1       	in	r24, 0x01	; 1
    3df2:	82 60       	ori	r24, 0x02	; 2
    3df4:	81 b9       	out	0x01, r24	; 1
    3df6:	82 b1       	in	r24, 0x02	; 2
    3df8:	82 60       	ori	r24, 0x02	; 2
    3dfa:	82 b9       	out	0x02, r24	; 2
    3dfc:	81 b1       	in	r24, 0x01	; 1
    3dfe:	84 60       	ori	r24, 0x04	; 4
    3e00:	81 b9       	out	0x01, r24	; 1
    3e02:	82 b1       	in	r24, 0x02	; 2
    3e04:	84 60       	ori	r24, 0x04	; 4
    3e06:	82 b9       	out	0x02, r24	; 2
    3e08:	81 b1       	in	r24, 0x01	; 1
    3e0a:	88 60       	ori	r24, 0x08	; 8
    3e0c:	81 b9       	out	0x01, r24	; 1
    3e0e:	82 b1       	in	r24, 0x02	; 2
    3e10:	88 60       	ori	r24, 0x08	; 8
    3e12:	82 b9       	out	0x02, r24	; 2
    3e14:	08 95       	ret

Disassembly of section .text.FLASH_NAND_CS_ENABLE:

0000468c <FLASH_NAND_CS_ENABLE>:
	PORTA |= (1 << PF3); //setting ~CS pin (PF3) high to de-select the slave device (we are not working on it yet)
}

void FLASH_NAND_CS_ENABLE() //enable the Chip Select of the FLASH NAND
{
	PORTA &= ~(1 << PA3); //~CS pin set low for selecting slave device
    468c:	82 b1       	in	r24, 0x02	; 2
    468e:	87 7f       	andi	r24, 0xF7	; 247
    4690:	82 b9       	out	0x02, r24	; 2
    4692:	08 95       	ret

Disassembly of section .text.FLASH_NAND_CS_DISABLE:

00004694 <FLASH_NAND_CS_DISABLE>:
}

void FLASH_NAND_CS_DISABLE() //disable the Chip Select of the FLASH NAND
{
	PORTA |= (1 << PA3); //~CS pin set high for de-selecting slave device; to end the command sequence
    4694:	82 b1       	in	r24, 0x02	; 2
    4696:	88 60       	ori	r24, 0x08	; 8
    4698:	82 b9       	out	0x02, r24	; 2
    469a:	08 95       	ret

Disassembly of section .text.Print_To_User:

000033a4 <Print_To_User>:
	if (command)
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
}

void Print_To_User(int num_elements, int offset, const char *msg, const uint8_t *arr_start, uint8_t *arr_dest) //# of elements to print along with message, and to which array
{
    33a4:	3f 92       	push	r3
    33a6:	4f 92       	push	r4
    33a8:	5f 92       	push	r5
    33aa:	6f 92       	push	r6
    33ac:	7f 92       	push	r7
    33ae:	8f 92       	push	r8
    33b0:	9f 92       	push	r9
    33b2:	af 92       	push	r10
    33b4:	bf 92       	push	r11
    33b6:	cf 92       	push	r12
    33b8:	df 92       	push	r13
    33ba:	ef 92       	push	r14
    33bc:	ff 92       	push	r15
    33be:	0f 93       	push	r16
    33c0:	1f 93       	push	r17
    33c2:	cf 93       	push	r28
    33c4:	df 93       	push	r29
    33c6:	5c 01       	movw	r10, r24
    33c8:	4b 01       	movw	r8, r22
    33ca:	72 2e       	mov	r7, r18
    33cc:	13 2f       	mov	r17, r19
    33ce:	34 2e       	mov	r3, r20
    33d0:	27 01       	movw	r4, r14
    33d2:	60 2e       	mov	r6, r16
	for (int i = 0; i < num_elements; i++)
    33d4:	c0 e0       	ldi	r28, 0x00	; 0
    33d6:	d0 e0       	ldi	r29, 0x00	; 0
    33d8:	26 c0       	rjmp	.+76     	; 0x3426 <Print_To_User+0x82>
	{
		sprintf(arr_dest, msg, arr_start[i + offset]);
    33da:	ce 01       	movw	r24, r28
    33dc:	88 0d       	add	r24, r8
    33de:	99 1d       	adc	r25, r9
    33e0:	46 2d       	mov	r20, r6
    33e2:	92 01       	movw	r18, r4
    33e4:	28 0f       	add	r18, r24
    33e6:	39 1f       	adc	r19, r25
    33e8:	41 1d       	adc	r20, r1
    33ea:	97 fd       	sbrc	r25, 7
    33ec:	4a 95       	dec	r20
    33ee:	a4 2f       	mov	r26, r20
    33f0:	c9 01       	movw	r24, r18
    33f2:	f9 01       	movw	r30, r18
    33f4:	5a 2f       	mov	r21, r26
    33f6:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    33fa:	1f 92       	push	r1
    33fc:	6f 93       	push	r22
    33fe:	3f 92       	push	r3
    3400:	1f 93       	push	r17
    3402:	7f 92       	push	r7
    3404:	df 92       	push	r13
    3406:	cf 92       	push	r12
    3408:	0e 94 f2 21 	call	0x43e4	; 0x43e4 <sprintf>
		USART_Data(arr_dest);
    340c:	b6 01       	movw	r22, r12
    340e:	80 e8       	ldi	r24, 0x80	; 128
    3410:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
}

void Print_To_User(int num_elements, int offset, const char *msg, const uint8_t *arr_start, uint8_t *arr_dest) //# of elements to print along with message, and to which array
{
	for (int i = 0; i < num_elements; i++)
    3414:	21 96       	adiw	r28, 0x01	; 1
    3416:	8d b7       	in	r24, 0x3d	; 61
    3418:	9e b7       	in	r25, 0x3e	; 62
    341a:	07 96       	adiw	r24, 0x07	; 7
    341c:	0f b6       	in	r0, 0x3f	; 63
    341e:	f8 94       	cli
    3420:	9e bf       	out	0x3e, r25	; 62
    3422:	0f be       	out	0x3f, r0	; 63
    3424:	8d bf       	out	0x3d, r24	; 61
    3426:	ca 15       	cp	r28, r10
    3428:	db 05       	cpc	r29, r11
    342a:	bc f2       	brlt	.-82     	; 0x33da <Print_To_User+0x36>
	{
		sprintf(arr_dest, msg, arr_start[i + offset]);
		USART_Data(arr_dest);
	}
}
    342c:	df 91       	pop	r29
    342e:	cf 91       	pop	r28
    3430:	1f 91       	pop	r17
    3432:	0f 91       	pop	r16
    3434:	ff 90       	pop	r15
    3436:	ef 90       	pop	r14
    3438:	df 90       	pop	r13
    343a:	cf 90       	pop	r12
    343c:	bf 90       	pop	r11
    343e:	af 90       	pop	r10
    3440:	9f 90       	pop	r9
    3442:	8f 90       	pop	r8
    3444:	7f 90       	pop	r7
    3446:	6f 90       	pop	r6
    3448:	5f 90       	pop	r5
    344a:	4f 90       	pop	r4
    344c:	3f 90       	pop	r3
    344e:	08 95       	ret

Disassembly of section .text.HEX_Verification:

0000317c <HEX_Verification>:
		}
	}
}

bool HEX_Verification() //verifies uint8_t (ASCII) to Hex validity and allocates in appropriated location
{
    317c:	cf 92       	push	r12
    317e:	df 92       	push	r13
    3180:	ef 92       	push	r14
    3182:	ff 92       	push	r15
    3184:	0f 93       	push	r16
	//parse the data into usable hex values
	for (int i = 0; i <= FLASH_NAND_ADDRESS_MAX; i++)
    3186:	80 e0       	ldi	r24, 0x00	; 0
    3188:	90 e0       	ldi	r25, 0x00	; 0
    318a:	45 c0       	rjmp	.+138    	; 0x3216 <HEX_Verification+0x9a>
	{
		if (CommandBuffer[i] >= '0' && CommandBuffer[i] <= '9')
    318c:	fc 01       	movw	r30, r24
    318e:	e0 50       	subi	r30, 0x00	; 0
    3190:	fe 4f       	sbci	r31, 0xFE	; 254
    3192:	20 81       	ld	r18, Z
    3194:	30 ed       	ldi	r19, 0xD0	; 208
    3196:	32 0f       	add	r19, r18
    3198:	3a 30       	cpi	r19, 0x0A	; 10
    319a:	28 f4       	brcc	.+10     	; 0x31a6 <HEX_Verification+0x2a>
		{
			CommandBuffer[i] = CommandBuffer[i] - '0';
    319c:	fc 01       	movw	r30, r24
    319e:	e0 50       	subi	r30, 0x00	; 0
    31a0:	fe 4f       	sbci	r31, 0xFE	; 254
    31a2:	30 83       	st	Z, r19
    31a4:	37 c0       	rjmp	.+110    	; 0x3214 <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] >= 'A' && CommandBuffer[i] <= 'F')
    31a6:	3f eb       	ldi	r19, 0xBF	; 191
    31a8:	32 0f       	add	r19, r18
    31aa:	36 30       	cpi	r19, 0x06	; 6
    31ac:	30 f4       	brcc	.+12     	; 0x31ba <HEX_Verification+0x3e>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'A' + 10;
    31ae:	fc 01       	movw	r30, r24
    31b0:	e0 50       	subi	r30, 0x00	; 0
    31b2:	fe 4f       	sbci	r31, 0xFE	; 254
    31b4:	27 53       	subi	r18, 0x37	; 55
    31b6:	20 83       	st	Z, r18
    31b8:	2d c0       	rjmp	.+90     	; 0x3214 <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] >= 'a' && CommandBuffer[i] <= 'f')
    31ba:	3f e9       	ldi	r19, 0x9F	; 159
    31bc:	32 0f       	add	r19, r18
    31be:	36 30       	cpi	r19, 0x06	; 6
    31c0:	30 f4       	brcc	.+12     	; 0x31ce <HEX_Verification+0x52>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'a' + 10;
    31c2:	fc 01       	movw	r30, r24
    31c4:	e0 50       	subi	r30, 0x00	; 0
    31c6:	fe 4f       	sbci	r31, 0xFE	; 254
    31c8:	27 55       	subi	r18, 0x57	; 87
    31ca:	20 83       	st	Z, r18
    31cc:	23 c0       	rjmp	.+70     	; 0x3214 <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] == '\r' || CommandBuffer[i] == '\n' || CommandBuffer[i] == '\0')
    31ce:	2d 30       	cpi	r18, 0x0D	; 13
    31d0:	41 f1       	breq	.+80     	; 0x3222 <HEX_Verification+0xa6>
    31d2:	2a 30       	cpi	r18, 0x0A	; 10
    31d4:	41 f1       	breq	.+80     	; 0x3226 <HEX_Verification+0xaa>
    31d6:	22 23       	and	r18, r18
    31d8:	41 f1       	breq	.+80     	; 0x322a <HEX_Verification+0xae>
		{
			break;
		}
		else
		{
			USART_Data("Wrong Input \nMake sure input is HEX valid [0 - F] \n");
    31da:	66 e8       	ldi	r22, 0x86	; 134
    31dc:	71 e0       	ldi	r23, 0x01	; 1
    31de:	80 e0       	ldi	r24, 0x00	; 0
    31e0:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			Print_To_User(1, 0, "Here is what was inputted: 0x%02X \n", CommandBuffer, status_feature);
    31e4:	80 e0       	ldi	r24, 0x00	; 0
    31e6:	92 e0       	ldi	r25, 0x02	; 2
    31e8:	7c 01       	movw	r14, r24
    31ea:	20 e8       	ldi	r18, 0x80	; 128
    31ec:	02 2f       	mov	r16, r18
    31ee:	0f 2e       	mov	r0, r31
    31f0:	f0 e0       	ldi	r31, 0x00	; 0
    31f2:	cf 2e       	mov	r12, r31
    31f4:	fa e0       	ldi	r31, 0x0A	; 10
    31f6:	df 2e       	mov	r13, r31
    31f8:	f0 2d       	mov	r31, r0
    31fa:	2a eb       	ldi	r18, 0xBA	; 186
    31fc:	31 e0       	ldi	r19, 0x01	; 1
    31fe:	40 e0       	ldi	r20, 0x00	; 0
    3200:	60 e0       	ldi	r22, 0x00	; 0
    3202:	70 e0       	ldi	r23, 0x00	; 0
    3204:	81 e0       	ldi	r24, 0x01	; 1
    3206:	90 e0       	ldi	r25, 0x00	; 0
    3208:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <Print_To_User>
			CLEAR_ARR();
    320c:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			return false; //return false, indicating failed test
    3210:	80 e0       	ldi	r24, 0x00	; 0
    3212:	0c c0       	rjmp	.+24     	; 0x322c <HEX_Verification+0xb0>
}

bool HEX_Verification() //verifies uint8_t (ASCII) to Hex validity and allocates in appropriated location
{
	//parse the data into usable hex values
	for (int i = 0; i <= FLASH_NAND_ADDRESS_MAX; i++)
    3214:	01 96       	adiw	r24, 0x01	; 1
    3216:	86 30       	cpi	r24, 0x06	; 6
    3218:	91 05       	cpc	r25, r1
    321a:	0c f4       	brge	.+2      	; 0x321e <HEX_Verification+0xa2>
    321c:	b7 cf       	rjmp	.-146    	; 0x318c <HEX_Verification+0x10>
			Print_To_User(1, 0, "Here is what was inputted: 0x%02X \n", CommandBuffer, status_feature);
			CLEAR_ARR();
			return false; //return false, indicating failed test
		}
	}
	return true; //return true, indicating passed test
    321e:	81 e0       	ldi	r24, 0x01	; 1
    3220:	05 c0       	rjmp	.+10     	; 0x322c <HEX_Verification+0xb0>
    3222:	81 e0       	ldi	r24, 0x01	; 1
    3224:	03 c0       	rjmp	.+6      	; 0x322c <HEX_Verification+0xb0>
    3226:	81 e0       	ldi	r24, 0x01	; 1
    3228:	01 c0       	rjmp	.+2      	; 0x322c <HEX_Verification+0xb0>
    322a:	81 e0       	ldi	r24, 0x01	; 1
	//Print_To_User(6, 0, "Parsed nibble: 0x%02X\n", CommandBuffer, status_feature); //troubleshooting, verifies if ASCII is converted to hex values
}
    322c:	0f 91       	pop	r16
    322e:	ff 90       	pop	r15
    3230:	ef 90       	pop	r14
    3232:	df 90       	pop	r13
    3234:	cf 90       	pop	r12
    3236:	08 95       	ret

Disassembly of section .text.NAND_Address_Checker:

00003c62 <NAND_Address_Checker>:

void NAND_Address_Checker() //returns user the Column and Block/Page Addresses
{
    3c62:	6f 92       	push	r6
    3c64:	7f 92       	push	r7
    3c66:	8f 92       	push	r8
    3c68:	cf 92       	push	r12
    3c6a:	df 92       	push	r13
    3c6c:	ef 92       	push	r14
    3c6e:	ff 92       	push	r15
    3c70:	0f 93       	push	r16
	USART_Data("---Column Address--- 2 bytes \n");
    3c72:	6e ed       	ldi	r22, 0xDE	; 222
    3c74:	71 e0       	ldi	r23, 0x01	; 1
    3c76:	80 e0       	ldi	r24, 0x00	; 0
    3c78:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
	Print_To_User(COLUMN_ADDRESS, 0, "0x%02X \n", Byte_Address, status_feature);
    3c7c:	86 e2       	ldi	r24, 0x26	; 38
    3c7e:	92 e1       	ldi	r25, 0x12	; 18
    3c80:	3c 01       	movw	r6, r24
    3c82:	20 e8       	ldi	r18, 0x80	; 128
    3c84:	82 2e       	mov	r8, r18
    3c86:	0f 2e       	mov	r0, r31
    3c88:	f0 e0       	ldi	r31, 0x00	; 0
    3c8a:	cf 2e       	mov	r12, r31
    3c8c:	fa e0       	ldi	r31, 0x0A	; 10
    3c8e:	df 2e       	mov	r13, r31
    3c90:	f0 2d       	mov	r31, r0
    3c92:	08 2d       	mov	r16, r8
    3c94:	73 01       	movw	r14, r6
    3c96:	2d ef       	ldi	r18, 0xFD	; 253
    3c98:	31 e0       	ldi	r19, 0x01	; 1
    3c9a:	40 e0       	ldi	r20, 0x00	; 0
    3c9c:	60 e0       	ldi	r22, 0x00	; 0
    3c9e:	70 e0       	ldi	r23, 0x00	; 0
    3ca0:	82 e0       	ldi	r24, 0x02	; 2
    3ca2:	90 e0       	ldi	r25, 0x00	; 0
    3ca4:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <Print_To_User>

	USART_Data("---Block/Page Address--- 3 bytes \n");	
    3ca8:	66 e0       	ldi	r22, 0x06	; 6
    3caa:	72 e0       	ldi	r23, 0x02	; 2
    3cac:	80 e0       	ldi	r24, 0x00	; 0
    3cae:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
	Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "0x%02X \n", Byte_Address, status_feature);
    3cb2:	2d ef       	ldi	r18, 0xFD	; 253
    3cb4:	31 e0       	ldi	r19, 0x01	; 1
    3cb6:	40 e0       	ldi	r20, 0x00	; 0
    3cb8:	62 e0       	ldi	r22, 0x02	; 2
    3cba:	70 e0       	ldi	r23, 0x00	; 0
    3cbc:	83 e0       	ldi	r24, 0x03	; 3
    3cbe:	90 e0       	ldi	r25, 0x00	; 0
    3cc0:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <Print_To_User>
}
    3cc4:	0f 91       	pop	r16
    3cc6:	ff 90       	pop	r15
    3cc8:	ef 90       	pop	r14
    3cca:	df 90       	pop	r13
    3ccc:	cf 90       	pop	r12
    3cce:	8f 90       	pop	r8
    3cd0:	7f 90       	pop	r7
    3cd2:	6f 90       	pop	r6
    3cd4:	08 95       	ret

Disassembly of section .text.ExecuteCommand:

00001bd8 <ExecuteCommand>:

void ExecuteCommand(const uint8_t *str) //Execute Command Line function
{
    1bd8:	6f 92       	push	r6
    1bda:	7f 92       	push	r7
    1bdc:	8f 92       	push	r8
    1bde:	cf 92       	push	r12
    1be0:	df 92       	push	r13
    1be2:	ef 92       	push	r14
    1be4:	ff 92       	push	r15
    1be6:	0f 93       	push	r16
    1be8:	1f 93       	push	r17
    1bea:	cf 93       	push	r28
    1bec:	df 93       	push	r29
    1bee:	6b 01       	movw	r12, r22
    1bf0:	e8 2e       	mov	r14, r24
	if (strcmp(str, "Flash ID") == 0) //Flash ID Command
    1bf2:	29 e2       	ldi	r18, 0x29	; 41
    1bf4:	32 e0       	ldi	r19, 0x02	; 2
    1bf6:	40 e0       	ldi	r20, 0x00	; 0
    1bf8:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1bfc:	89 2b       	or	r24, r25
    1bfe:	29 f4       	brne	.+10     	; 0x1c0a <ExecuteCommand+0x32>
	{
		CLEAR_ARR();
    1c00:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
		FLASH_ID(); //reads Device ID
    1c04:	0e 94 f7 1c 	call	0x39ee	; 0x39ee <FLASH_ID>
    1c08:	0f c2       	rjmp	.+1054   	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
	}
	
	else if (strcmp(str, "NAND Addresses") == 0) //Tells user what is Column and Block/Page Addresses
    1c0a:	22 e3       	ldi	r18, 0x32	; 50
    1c0c:	32 e0       	ldi	r19, 0x02	; 2
    1c0e:	40 e0       	ldi	r20, 0x00	; 0
    1c10:	8e 2d       	mov	r24, r14
    1c12:	b6 01       	movw	r22, r12
    1c14:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1c18:	89 2b       	or	r24, r25
    1c1a:	19 f4       	brne	.+6      	; 0x1c22 <ExecuteCommand+0x4a>
	{
		NAND_Address_Checker();
    1c1c:	0e 94 31 1e 	call	0x3c62	; 0x3c62 <NAND_Address_Checker>
    1c20:	03 c2       	rjmp	.+1030   	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
	}
	
	else if (strcmp(str, "Parameter Page") == 0) //Basic Read Test Command
    1c22:	21 e4       	ldi	r18, 0x41	; 65
    1c24:	32 e0       	ldi	r19, 0x02	; 2
    1c26:	40 e0       	ldi	r20, 0x00	; 0
    1c28:	8e 2d       	mov	r24, r14
    1c2a:	b6 01       	movw	r22, r12
    1c2c:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1c30:	89 2b       	or	r24, r25
    1c32:	99 f5       	brne	.+102    	; 0x1c9a <ExecuteCommand+0xc2>
	{
		s = 1; //sets main array address to the correct place
    1c34:	81 e0       	ldi	r24, 0x01	; 1
    1c36:	90 e0       	ldi	r25, 0x00	; 0
    1c38:	90 93 25 12 	sts	0x1225, r25	; 0x801225 <s+0x1>
    1c3c:	80 93 24 12 	sts	0x1224, r24	; 0x801224 <s>
		CLEAR_ARR();
    1c40:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
		FLASH_Para_Pg();
    1c44:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <FLASH_Para_Pg>
		
		//reading data from Data array
		//Print_To_User(PARAMETER_PAGE_SIZE, 0, "%i->Data Received: 0x%02X \n", data, status_feature);
		
		for (int i = 0; i < PARAMETER_PAGE_SIZE; i++) //address is incremented automatically after each byte is shifted out
    1c48:	c0 e0       	ldi	r28, 0x00	; 0
    1c4a:	d0 e0       	ldi	r29, 0x00	; 0
    1c4c:	21 c0       	rjmp	.+66     	; 0x1c90 <ExecuteCommand+0xb8>
		{
			sprintf(status_feature, "%i->Data Received: 0x%02X \n", i, data[i]); //hex data to string
    1c4e:	fe 01       	movw	r30, r28
    1c50:	e1 5e       	subi	r30, 0xE1	; 225
    1c52:	f5 4f       	sbci	r31, 0xF5	; 245
    1c54:	80 81       	ld	r24, Z
    1c56:	1f 92       	push	r1
    1c58:	8f 93       	push	r24
    1c5a:	df 93       	push	r29
    1c5c:	cf 93       	push	r28
    1c5e:	80 e5       	ldi	r24, 0x50	; 80
    1c60:	92 e0       	ldi	r25, 0x02	; 2
    1c62:	a0 e0       	ldi	r26, 0x00	; 0
    1c64:	af 93       	push	r26
    1c66:	9f 93       	push	r25
    1c68:	8f 93       	push	r24
    1c6a:	00 e0       	ldi	r16, 0x00	; 0
    1c6c:	1a e0       	ldi	r17, 0x0A	; 10
    1c6e:	1f 93       	push	r17
    1c70:	0f 93       	push	r16
    1c72:	0e 94 df 21 	call	0x43be	; 0x43be <_sprintf_cdnopuxX>
			USART_Data(status_feature);
    1c76:	b8 01       	movw	r22, r16
    1c78:	80 e8       	ldi	r24, 0x80	; 128
    1c7a:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		FLASH_Para_Pg();
		
		//reading data from Data array
		//Print_To_User(PARAMETER_PAGE_SIZE, 0, "%i->Data Received: 0x%02X \n", data, status_feature);
		
		for (int i = 0; i < PARAMETER_PAGE_SIZE; i++) //address is incremented automatically after each byte is shifted out
    1c7e:	21 96       	adiw	r28, 0x01	; 1
    1c80:	8d b7       	in	r24, 0x3d	; 61
    1c82:	9e b7       	in	r25, 0x3e	; 62
    1c84:	09 96       	adiw	r24, 0x09	; 9
    1c86:	0f b6       	in	r0, 0x3f	; 63
    1c88:	f8 94       	cli
    1c8a:	9e bf       	out	0x3e, r25	; 62
    1c8c:	0f be       	out	0x3f, r0	; 63
    1c8e:	8d bf       	out	0x3d, r24	; 61
    1c90:	cf 3f       	cpi	r28, 0xFF	; 255
    1c92:	d1 05       	cpc	r29, r1
    1c94:	e1 f2       	breq	.-72     	; 0x1c4e <ExecuteCommand+0x76>
    1c96:	dc f2       	brlt	.-74     	; 0x1c4e <ExecuteCommand+0x76>
    1c98:	c7 c1       	rjmp	.+910    	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
			sprintf(status_feature, "%i->Data Received: 0x%02X \n", i, data[i]); //hex data to string
			USART_Data(status_feature);
		}	
	}
	
	else if (strcmp(str, "Feature Registers") == 0) //leads user to the Feature registers of the device
    1c9a:	2c e6       	ldi	r18, 0x6C	; 108
    1c9c:	32 e0       	ldi	r19, 0x02	; 2
    1c9e:	40 e0       	ldi	r20, 0x00	; 0
    1ca0:	8e 2d       	mov	r24, r14
    1ca2:	b6 01       	movw	r22, r12
    1ca4:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1ca8:	89 2b       	or	r24, r25
    1caa:	09 f0       	breq	.+2      	; 0x1cae <ExecuteCommand+0xd6>
    1cac:	b5 c0       	rjmp	.+362    	; 0x1e18 <ExecuteCommand+0x240>
	{
		CLEAR_ARR();
    1cae:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
		
		USART_Data("1) Block Lock \n");
    1cb2:	6e e7       	ldi	r22, 0x7E	; 126
    1cb4:	72 e0       	ldi	r23, 0x02	; 2
    1cb6:	80 e0       	ldi	r24, 0x00	; 0
    1cb8:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("2) Configuration \n");
    1cbc:	6e e8       	ldi	r22, 0x8E	; 142
    1cbe:	72 e0       	ldi	r23, 0x02	; 2
    1cc0:	80 e0       	ldi	r24, 0x00	; 0
    1cc2:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("3) Status \n");
    1cc6:	61 ea       	ldi	r22, 0xA1	; 161
    1cc8:	72 e0       	ldi	r23, 0x02	; 2
    1cca:	80 e0       	ldi	r24, 0x00	; 0
    1ccc:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("4) Die Select \n");
    1cd0:	6d ea       	ldi	r22, 0xAD	; 173
    1cd2:	72 e0       	ldi	r23, 0x02	; 2
    1cd4:	80 e0       	ldi	r24, 0x00	; 0
    1cd6:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		
		UserInput(false);
    1cda:	80 e0       	ldi	r24, 0x00	; 0
    1cdc:	0e 94 1c 19 	call	0x3238	; 0x3238 <UserInput>
		
		if (strcmp(CommandBuffer, "Block Lock") == 0) //goes to Block Lock Register
    1ce0:	80 e0       	ldi	r24, 0x00	; 0
    1ce2:	92 e0       	ldi	r25, 0x02	; 2
    1ce4:	6c 01       	movw	r12, r24
    1ce6:	20 e8       	ldi	r18, 0x80	; 128
    1ce8:	e2 2e       	mov	r14, r18
    1cea:	2d eb       	ldi	r18, 0xBD	; 189
    1cec:	32 e0       	ldi	r19, 0x02	; 2
    1cee:	40 e0       	ldi	r20, 0x00	; 0
    1cf0:	8e 2d       	mov	r24, r14
    1cf2:	b6 01       	movw	r22, r12
    1cf4:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1cf8:	89 2b       	or	r24, r25
    1cfa:	09 f0       	breq	.+2      	; 0x1cfe <ExecuteCommand+0x126>
    1cfc:	53 c0       	rjmp	.+166    	; 0x1da4 <ExecuteCommand+0x1cc>
		{
			CLEAR_ARR();
    1cfe:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			
			USART_Data("1) Lock \n");
    1d02:	68 ec       	ldi	r22, 0xC8	; 200
    1d04:	72 e0       	ldi	r23, 0x02	; 2
    1d06:	80 e0       	ldi	r24, 0x00	; 0
    1d08:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			USART_Data("2) Unlock \n");
    1d0c:	62 ed       	ldi	r22, 0xD2	; 210
    1d0e:	72 e0       	ldi	r23, 0x02	; 2
    1d10:	80 e0       	ldi	r24, 0x00	; 0
    1d12:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			USART_Data("3) Read \n");
    1d16:	6e ed       	ldi	r22, 0xDE	; 222
    1d18:	72 e0       	ldi	r23, 0x02	; 2
    1d1a:	80 e0       	ldi	r24, 0x00	; 0
    1d1c:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			USART_Data("4) Configure \n");
    1d20:	68 ee       	ldi	r22, 0xE8	; 232
    1d22:	72 e0       	ldi	r23, 0x02	; 2
    1d24:	80 e0       	ldi	r24, 0x00	; 0
    1d26:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			
			UserInput(false); //User Input is added into an array, which will be written to memory
    1d2a:	80 e0       	ldi	r24, 0x00	; 0
    1d2c:	0e 94 1c 19 	call	0x3238	; 0x3238 <UserInput>
			
			if (strcmp(CommandBuffer, "Lock") == 0) //Locks Flash Device
    1d30:	27 ef       	ldi	r18, 0xF7	; 247
    1d32:	32 e0       	ldi	r19, 0x02	; 2
    1d34:	40 e0       	ldi	r20, 0x00	; 0
    1d36:	8e 2d       	mov	r24, r14
    1d38:	b6 01       	movw	r22, r12
    1d3a:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1d3e:	89 2b       	or	r24, r25
    1d40:	21 f4       	brne	.+8      	; 0x1d4a <ExecuteCommand+0x172>
			{
				FLASH_Block_Lock_Setter(true);
    1d42:	81 e0       	ldi	r24, 0x01	; 1
    1d44:	0e 94 6b 1e 	call	0x3cd6	; 0x3cd6 <FLASH_Block_Lock_Setter>
    1d48:	6f c1       	rjmp	.+734    	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
			}
			else if (strcmp(CommandBuffer, "Unlock") == 0) //Unlocks Flash Device
    1d4a:	2c ef       	ldi	r18, 0xFC	; 252
    1d4c:	32 e0       	ldi	r19, 0x02	; 2
    1d4e:	40 e0       	ldi	r20, 0x00	; 0
    1d50:	8e 2d       	mov	r24, r14
    1d52:	b6 01       	movw	r22, r12
    1d54:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1d58:	89 2b       	or	r24, r25
    1d5a:	21 f4       	brne	.+8      	; 0x1d64 <ExecuteCommand+0x18c>
			{
				FLASH_Block_Lock_Setter(false);
    1d5c:	80 e0       	ldi	r24, 0x00	; 0
    1d5e:	0e 94 6b 1e 	call	0x3cd6	; 0x3cd6 <FLASH_Block_Lock_Setter>
    1d62:	62 c1       	rjmp	.+708    	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
			}
			else if (strcmp(CommandBuffer, "Read") == 0) //Read Block Lock Register
    1d64:	23 e0       	ldi	r18, 0x03	; 3
    1d66:	33 e0       	ldi	r19, 0x03	; 3
    1d68:	40 e0       	ldi	r20, 0x00	; 0
    1d6a:	8e 2d       	mov	r24, r14
    1d6c:	b6 01       	movw	r22, r12
    1d6e:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1d72:	89 2b       	or	r24, r25
    1d74:	21 f4       	brne	.+8      	; 0x1d7e <ExecuteCommand+0x1a6>
			{
				FLASH_Block_Lock(false);
    1d76:	80 e0       	ldi	r24, 0x00	; 0
    1d78:	0e 94 28 1a 	call	0x3450	; 0x3450 <FLASH_Block_Lock>
    1d7c:	55 c1       	rjmp	.+682    	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
			}
			else if (strcmp(CommandBuffer, "Configure") == 0) //Configure Block Lock Register
    1d7e:	28 e0       	ldi	r18, 0x08	; 8
    1d80:	33 e0       	ldi	r19, 0x03	; 3
    1d82:	40 e0       	ldi	r20, 0x00	; 0
    1d84:	8e 2d       	mov	r24, r14
    1d86:	b6 01       	movw	r22, r12
    1d88:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1d8c:	89 2b       	or	r24, r25
    1d8e:	21 f4       	brne	.+8      	; 0x1d98 <ExecuteCommand+0x1c0>
			{
				FLASH_Block_Lock(true);
    1d90:	81 e0       	ldi	r24, 0x01	; 1
    1d92:	0e 94 28 1a 	call	0x3450	; 0x3450 <FLASH_Block_Lock>
    1d96:	48 c1       	rjmp	.+656    	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
			}
			else 
			{
				ExecuteCommand("Feature Registers");
    1d98:	6c e6       	ldi	r22, 0x6C	; 108
    1d9a:	72 e0       	ldi	r23, 0x02	; 2
    1d9c:	80 e0       	ldi	r24, 0x00	; 0
    1d9e:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <ExecuteCommand>
    1da2:	42 c1       	rjmp	.+644    	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
			}
		}
		
		else if (strcmp(CommandBuffer, "Configuration") == 0) //goes to the Configuration Register
    1da4:	22 e1       	ldi	r18, 0x12	; 18
    1da6:	33 e0       	ldi	r19, 0x03	; 3
    1da8:	40 e0       	ldi	r20, 0x00	; 0
    1daa:	8e 2d       	mov	r24, r14
    1dac:	b6 01       	movw	r22, r12
    1dae:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1db2:	89 2b       	or	r24, r25
    1db4:	51 f4       	brne	.+20     	; 0x1dca <ExecuteCommand+0x1f2>
		{
			CLEAR_ARR();
    1db6:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			FLASH_Configuration(); //get Configuration Register Data
    1dba:	0e 94 b9 1d 	call	0x3b72	; 0x3b72 <FLASH_Configuration>
			ExecuteCommand("Feature Registers");
    1dbe:	6c e6       	ldi	r22, 0x6C	; 108
    1dc0:	72 e0       	ldi	r23, 0x02	; 2
    1dc2:	80 e0       	ldi	r24, 0x00	; 0
    1dc4:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <ExecuteCommand>
    1dc8:	2f c1       	rjmp	.+606    	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
		}
		
		else if (strcmp(CommandBuffer, "Status") == 0) //goes to the Status Register
    1dca:	20 e2       	ldi	r18, 0x20	; 32
    1dcc:	33 e0       	ldi	r19, 0x03	; 3
    1dce:	40 e0       	ldi	r20, 0x00	; 0
    1dd0:	8e 2d       	mov	r24, r14
    1dd2:	b6 01       	movw	r22, r12
    1dd4:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1dd8:	89 2b       	or	r24, r25
    1dda:	51 f4       	brne	.+20     	; 0x1df0 <ExecuteCommand+0x218>
		{
			CLEAR_ARR();
    1ddc:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			FLASH_Status(); //reads status register
    1de0:	0e 94 3c 1d 	call	0x3a78	; 0x3a78 <FLASH_Status>
			
			ExecuteCommand("Feature Registers");
    1de4:	6c e6       	ldi	r22, 0x6C	; 108
    1de6:	72 e0       	ldi	r23, 0x02	; 2
    1de8:	80 e0       	ldi	r24, 0x00	; 0
    1dea:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <ExecuteCommand>
    1dee:	1c c1       	rjmp	.+568    	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
		}
		
		else if (strcmp(CommandBuffer, "Die Select") == 0) //goes to the Die Register
    1df0:	27 e2       	ldi	r18, 0x27	; 39
    1df2:	33 e0       	ldi	r19, 0x03	; 3
    1df4:	40 e0       	ldi	r20, 0x00	; 0
    1df6:	8e 2d       	mov	r24, r14
    1df8:	b6 01       	movw	r22, r12
    1dfa:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1dfe:	89 2b       	or	r24, r25
    1e00:	09 f0       	breq	.+2      	; 0x1e04 <ExecuteCommand+0x22c>
    1e02:	12 c1       	rjmp	.+548    	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
		{
			CLEAR_ARR();
    1e04:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			FLASH_Die_Selection(); //at the moment only reads to this
    1e08:	0e 94 7c 1d 	call	0x3af8	; 0x3af8 <FLASH_Die_Selection>
			ExecuteCommand("Feature Registers");
    1e0c:	6c e6       	ldi	r22, 0x6C	; 108
    1e0e:	72 e0       	ldi	r23, 0x02	; 2
    1e10:	80 e0       	ldi	r24, 0x00	; 0
    1e12:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <ExecuteCommand>
    1e16:	08 c1       	rjmp	.+528    	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
		}
	}
	
	else if (strcmp(str, "Test Methods") == 0) //this holds test methods of the device
    1e18:	22 e3       	ldi	r18, 0x32	; 50
    1e1a:	33 e0       	ldi	r19, 0x03	; 3
    1e1c:	40 e0       	ldi	r20, 0x00	; 0
    1e1e:	8e 2d       	mov	r24, r14
    1e20:	b6 01       	movw	r22, r12
    1e22:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1e26:	89 2b       	or	r24, r25
    1e28:	09 f0       	breq	.+2      	; 0x1e2c <ExecuteCommand+0x254>
    1e2a:	d2 c0       	rjmp	.+420    	; 0x1fd0 <ExecuteCommand+0x3f8>
	{
		CLEAR_ARR();
    1e2c:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
		
		USART_Data("1) Write Test \n");
    1e30:	6f e3       	ldi	r22, 0x3F	; 63
    1e32:	73 e0       	ldi	r23, 0x03	; 3
    1e34:	80 e0       	ldi	r24, 0x00	; 0
    1e36:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("2) Read Test \n");
    1e3a:	6f e4       	ldi	r22, 0x4F	; 79
    1e3c:	73 e0       	ldi	r23, 0x03	; 3
    1e3e:	80 e0       	ldi	r24, 0x00	; 0
    1e40:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("3) Erase Test \n");
    1e44:	6e e5       	ldi	r22, 0x5E	; 94
    1e46:	73 e0       	ldi	r23, 0x03	; 3
    1e48:	80 e0       	ldi	r24, 0x00	; 0
    1e4a:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("4) Block Checker \n");
    1e4e:	6e e6       	ldi	r22, 0x6E	; 110
    1e50:	73 e0       	ldi	r23, 0x03	; 3
    1e52:	80 e0       	ldi	r24, 0x00	; 0
    1e54:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("5) Page Checker \n");
    1e58:	61 e8       	ldi	r22, 0x81	; 129
    1e5a:	73 e0       	ldi	r23, 0x03	; 3
    1e5c:	80 e0       	ldi	r24, 0x00	; 0
    1e5e:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		
		UserInput(false);
    1e62:	80 e0       	ldi	r24, 0x00	; 0
    1e64:	0e 94 1c 19 	call	0x3238	; 0x3238 <UserInput>
		
		if (strcmp(CommandBuffer, "Write Test") == 0) //write to memory test
    1e68:	80 e0       	ldi	r24, 0x00	; 0
    1e6a:	92 e0       	ldi	r25, 0x02	; 2
    1e6c:	3c 01       	movw	r6, r24
    1e6e:	20 e8       	ldi	r18, 0x80	; 128
    1e70:	82 2e       	mov	r8, r18
    1e72:	23 e9       	ldi	r18, 0x93	; 147
    1e74:	33 e0       	ldi	r19, 0x03	; 3
    1e76:	40 e0       	ldi	r20, 0x00	; 0
    1e78:	88 2d       	mov	r24, r8
    1e7a:	b3 01       	movw	r22, r6
    1e7c:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1e80:	89 2b       	or	r24, r25
    1e82:	a9 f5       	brne	.+106    	; 0x1eee <ExecuteCommand+0x316>
		{
			s = 0;
    1e84:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1e88:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
			CLEAR_ARR();
    1e8c:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			
			UserInput(false); //User Input is added into an array, which will be written to memory
    1e90:	80 e0       	ldi	r24, 0x00	; 0
    1e92:	0e 94 1c 19 	call	0x3238	; 0x3238 <UserInput>
			
			USART_Data("---Column Address--- 2 bytes \n");
    1e96:	6e ed       	ldi	r22, 0xDE	; 222
    1e98:	71 e0       	ldi	r23, 0x01	; 1
    1e9a:	80 e0       	ldi	r24, 0x00	; 0
    1e9c:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			COLUMN_BLOCK_PAGE_ADDRESSER(false);
    1ea0:	80 e0       	ldi	r24, 0x00	; 0
    1ea2:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <COLUMN_BLOCK_PAGE_ADDRESSER>

			USART_Data("---Block/Page Address--- 3 bytes \n");
    1ea6:	66 e0       	ldi	r22, 0x06	; 6
    1ea8:	72 e0       	ldi	r23, 0x02	; 2
    1eaa:	80 e0       	ldi	r24, 0x00	; 0
    1eac:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			COLUMN_BLOCK_PAGE_ADDRESSER(true);
    1eb0:	81 e0       	ldi	r24, 0x01	; 1
    1eb2:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <COLUMN_BLOCK_PAGE_ADDRESSER>
			
			Print_To_User(FLASH_NAND_ADDRESS_MAX, 0, "Here is what was inputted: 0x%02X \n", Byte_Address, status_feature);
    1eb6:	86 e2       	ldi	r24, 0x26	; 38
    1eb8:	92 e1       	ldi	r25, 0x12	; 18
    1eba:	7c 01       	movw	r14, r24
    1ebc:	20 e8       	ldi	r18, 0x80	; 128
    1ebe:	02 2f       	mov	r16, r18
    1ec0:	0f 2e       	mov	r0, r31
    1ec2:	f0 e0       	ldi	r31, 0x00	; 0
    1ec4:	cf 2e       	mov	r12, r31
    1ec6:	fa e0       	ldi	r31, 0x0A	; 10
    1ec8:	df 2e       	mov	r13, r31
    1eca:	f0 2d       	mov	r31, r0
    1ecc:	2a eb       	ldi	r18, 0xBA	; 186
    1ece:	31 e0       	ldi	r19, 0x01	; 1
    1ed0:	40 e0       	ldi	r20, 0x00	; 0
    1ed2:	60 e0       	ldi	r22, 0x00	; 0
    1ed4:	70 e0       	ldi	r23, 0x00	; 0
    1ed6:	85 e0       	ldi	r24, 0x05	; 5
    1ed8:	90 e0       	ldi	r25, 0x00	; 0
    1eda:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <Print_To_User>
			
			FLASH_Page_Program(); //adds user input into Flash Write Function, to memory...
    1ede:	0e 94 f6 1d 	call	0x3bec	; 0x3bec <FLASH_Page_Program>
			
			ExecuteCommand("Test Methods");
    1ee2:	62 e3       	ldi	r22, 0x32	; 50
    1ee4:	73 e0       	ldi	r23, 0x03	; 3
    1ee6:	80 e0       	ldi	r24, 0x00	; 0
    1ee8:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <ExecuteCommand>
    1eec:	9d c0       	rjmp	.+314    	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
		}
		
		else if (strcmp(CommandBuffer, "Read Test") == 0) //read from memory test
    1eee:	2e e9       	ldi	r18, 0x9E	; 158
    1ef0:	33 e0       	ldi	r19, 0x03	; 3
    1ef2:	40 e0       	ldi	r20, 0x00	; 0
    1ef4:	88 2d       	mov	r24, r8
    1ef6:	b3 01       	movw	r22, r6
    1ef8:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1efc:	89 2b       	or	r24, r25
    1efe:	b1 f4       	brne	.+44     	; 0x1f2c <ExecuteCommand+0x354>
		{
			s = 0; //sets main array to normal operations
    1f00:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1f04:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
			CLEAR_ARR();
    1f08:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			FLASH_Page_Read();
    1f0c:	0e 94 d4 20 	call	0x41a8	; 0x41a8 <FLASH_Page_Read>

			USART_Data(data);
    1f10:	6f e1       	ldi	r22, 0x1F	; 31
    1f12:	7a e0       	ldi	r23, 0x0A	; 10
    1f14:	80 e8       	ldi	r24, 0x80	; 128
    1f16:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			USART_TX_Data('\n');
    1f1a:	8a e0       	ldi	r24, 0x0A	; 10
    1f1c:	0e 94 f0 22 	call	0x45e0	; 0x45e0 <USART_TX_Data>
			
			ExecuteCommand("Test Methods");
    1f20:	62 e3       	ldi	r22, 0x32	; 50
    1f22:	73 e0       	ldi	r23, 0x03	; 3
    1f24:	80 e0       	ldi	r24, 0x00	; 0
    1f26:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <ExecuteCommand>
    1f2a:	7e c0       	rjmp	.+252    	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
		}
		
		else if (strcmp(CommandBuffer, "Erase Test") == 0) //erases by blocks
    1f2c:	28 ea       	ldi	r18, 0xA8	; 168
    1f2e:	33 e0       	ldi	r19, 0x03	; 3
    1f30:	40 e0       	ldi	r20, 0x00	; 0
    1f32:	88 2d       	mov	r24, r8
    1f34:	b3 01       	movw	r22, r6
    1f36:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1f3a:	89 2b       	or	r24, r25
    1f3c:	71 f4       	brne	.+28     	; 0x1f5a <ExecuteCommand+0x382>
		{
			s = 0; //sets main array address to normal operation
    1f3e:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1f42:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
			CLEAR_ARR();
    1f46:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			FLASH_Block_Erase(); //Erases Flash Block
    1f4a:	0e 94 42 21 	call	0x4284	; 0x4284 <FLASH_Block_Erase>
			
			ExecuteCommand("Test Methods");
    1f4e:	62 e3       	ldi	r22, 0x32	; 50
    1f50:	73 e0       	ldi	r23, 0x03	; 3
    1f52:	80 e0       	ldi	r24, 0x00	; 0
    1f54:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <ExecuteCommand>
    1f58:	67 c0       	rjmp	.+206    	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
		}
		
		//this might stick as part of the main options, but its mostly meant for debugging bad blocks...
		else if (strcmp(CommandBuffer, "Block Checker") == 0) //verifies availability of the block
    1f5a:	23 eb       	ldi	r18, 0xB3	; 179
    1f5c:	33 e0       	ldi	r19, 0x03	; 3
    1f5e:	40 e0       	ldi	r20, 0x00	; 0
    1f60:	88 2d       	mov	r24, r8
    1f62:	b3 01       	movw	r22, r6
    1f64:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1f68:	89 2b       	or	r24, r25
    1f6a:	e9 f4       	brne	.+58     	; 0x1fa6 <ExecuteCommand+0x3ce>
		{
			s = 0;
    1f6c:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1f70:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
			CLEAR_ARR();
    1f74:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			FLASH_Page_Read();
    1f78:	0e 94 d4 20 	call	0x41a8	; 0x41a8 <FLASH_Page_Read>

			if (HEX_ID[0] != 0xFF)
    1f7c:	80 91 1f 12 	lds	r24, 0x121F	; 0x80121f <HEX_ID>
    1f80:	8f 3f       	cpi	r24, 0xFF	; 255
    1f82:	31 f0       	breq	.+12     	; 0x1f90 <ExecuteCommand+0x3b8>
			{
				USART_Data("Block is marked bad\n");
    1f84:	61 ec       	ldi	r22, 0xC1	; 193
    1f86:	73 e0       	ldi	r23, 0x03	; 3
    1f88:	80 e0       	ldi	r24, 0x00	; 0
    1f8a:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
    1f8e:	05 c0       	rjmp	.+10     	; 0x1f9a <ExecuteCommand+0x3c2>
			}
			else
			{
				USART_Data("Block appears clean\n");
    1f90:	66 ed       	ldi	r22, 0xD6	; 214
    1f92:	73 e0       	ldi	r23, 0x03	; 3
    1f94:	80 e0       	ldi	r24, 0x00	; 0
    1f96:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			}
			
			ExecuteCommand("Test Methods");
    1f9a:	62 e3       	ldi	r22, 0x32	; 50
    1f9c:	73 e0       	ldi	r23, 0x03	; 3
    1f9e:	80 e0       	ldi	r24, 0x00	; 0
    1fa0:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <ExecuteCommand>
    1fa4:	41 c0       	rjmp	.+130    	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
		}
		
		//meant for debugging bad pages in block...
		else if (strcmp(str, "Page Checker") == 0) //determines if page is good or bad...
    1fa6:	2b ee       	ldi	r18, 0xEB	; 235
    1fa8:	33 e0       	ldi	r19, 0x03	; 3
    1faa:	40 e0       	ldi	r20, 0x00	; 0
    1fac:	8e 2d       	mov	r24, r14
    1fae:	b6 01       	movw	r22, r12
    1fb0:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1fb4:	89 2b       	or	r24, r25
    1fb6:	c1 f5       	brne	.+112    	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
		{
			s = 0;
    1fb8:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1fbc:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
			Page_Tester();
    1fc0:	0e 94 5e 18 	call	0x30bc	; 0x30bc <Page_Tester>
			
			ExecuteCommand("Test Methods");
    1fc4:	62 e3       	ldi	r22, 0x32	; 50
    1fc6:	73 e0       	ldi	r23, 0x03	; 3
    1fc8:	80 e0       	ldi	r24, 0x00	; 0
    1fca:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <ExecuteCommand>
    1fce:	2c c0       	rjmp	.+88     	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
		}
	}
	
	else if (strcmp(str, "Reset") == 0) //Basic Read Test Command
    1fd0:	28 ef       	ldi	r18, 0xF8	; 248
    1fd2:	33 e0       	ldi	r19, 0x03	; 3
    1fd4:	40 e0       	ldi	r20, 0x00	; 0
    1fd6:	8e 2d       	mov	r24, r14
    1fd8:	b6 01       	movw	r22, r12
    1fda:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1fde:	89 2b       	or	r24, r25
    1fe0:	29 f4       	brne	.+10     	; 0x1fec <ExecuteCommand+0x414>
	{
		CLEAR_ARR();
    1fe2:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
		FLASH_Reset();
    1fe6:	0e 94 4a 22 	call	0x4494	; 0x4494 <FLASH_Reset>
    1fea:	1e c0       	rjmp	.+60     	; 0x2028 <__DATA_REGION_LENGTH__+0x28>
	}
	
	else
	{
		USART_Data("1) Flash ID \n");
    1fec:	6e ef       	ldi	r22, 0xFE	; 254
    1fee:	73 e0       	ldi	r23, 0x03	; 3
    1ff0:	80 e0       	ldi	r24, 0x00	; 0
    1ff2:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("2) NAND Addresses \n");
    1ff6:	6c e0       	ldi	r22, 0x0C	; 12
    1ff8:	74 e0       	ldi	r23, 0x04	; 4
    1ffa:	80 e0       	ldi	r24, 0x00	; 0
    1ffc:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("3) Parameter Page \n");
    2000:	60 e2       	ldi	r22, 0x20	; 32
    2002:	74 e0       	ldi	r23, 0x04	; 4
    2004:	80 e0       	ldi	r24, 0x00	; 0
    2006:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("4) Feature Registers \n");
    200a:	64 e3       	ldi	r22, 0x34	; 52
    200c:	74 e0       	ldi	r23, 0x04	; 4
    200e:	80 e0       	ldi	r24, 0x00	; 0
    2010:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("5) Test Methods \n");
    2014:	6b e4       	ldi	r22, 0x4B	; 75
    2016:	74 e0       	ldi	r23, 0x04	; 4
    2018:	80 e0       	ldi	r24, 0x00	; 0
    201a:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("6) Reset \n");
    201e:	6d e5       	ldi	r22, 0x5D	; 93
    2020:	74 e0       	ldi	r23, 0x04	; 4
    2022:	80 e0       	ldi	r24, 0x00	; 0
    2024:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
	}
}
    2028:	df 91       	pop	r29
    202a:	cf 91       	pop	r28
    202c:	1f 91       	pop	r17
    202e:	0f 91       	pop	r16
    2030:	ff 90       	pop	r15
    2032:	ef 90       	pop	r14
    2034:	df 90       	pop	r13
    2036:	cf 90       	pop	r12
    2038:	8f 90       	pop	r8
    203a:	7f 90       	pop	r7
    203c:	6f 90       	pop	r6
    203e:	08 95       	ret

Disassembly of section .text.UserInput:

00003238 <UserInput>:

int arr_address = 0; //for CommandBuffer array
int input_counter = 0; //to count the number of input characters 

void UserInput(bool command) //asking for user input
{
    3238:	cf 92       	push	r12
    323a:	df 92       	push	r13
    323c:	ef 92       	push	r14
    323e:	cf 93       	push	r28
    3240:	c8 2f       	mov	r28, r24
	USART_Data("->User Input:\n"); //asking for User Input
    3242:	68 e6       	ldi	r22, 0x68	; 104
    3244:	74 e0       	ldi	r23, 0x04	; 4
    3246:	80 e0       	ldi	r24, 0x00	; 0
    3248:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
	
	input_counter = 0; //reset input counter
    324c:	10 92 9c 12 	sts	0x129C, r1	; 0x80129c <input_counter+0x1>
    3250:	10 92 9b 12 	sts	0x129B, r1	; 0x80129b <input_counter>
	
	c = USART_RX_Data(); //receive user uint8_t data type input
    3254:	0e 94 f7 22 	call	0x45ee	; 0x45ee <USART_RX_Data>
    3258:	80 93 1e 0a 	sts	0x0A1E, r24	; 0x800a1e <c>
	
	while ((c != '\r')) //(c != '\n') &&
    325c:	25 c0       	rjmp	.+74     	; 0x32a8 <UserInput+0x70>
	{
		input_counter++; //increment input counter
    325e:	80 91 9b 12 	lds	r24, 0x129B	; 0x80129b <input_counter>
    3262:	90 91 9c 12 	lds	r25, 0x129C	; 0x80129c <input_counter+0x1>
    3266:	01 96       	adiw	r24, 0x01	; 1
    3268:	90 93 9c 12 	sts	0x129C, r25	; 0x80129c <input_counter+0x1>
    326c:	80 93 9b 12 	sts	0x129B, r24	; 0x80129b <input_counter>
		CommandBuffer[arr_address] = c; //adding uint8_t into array at index, creating a string
    3270:	80 91 9d 12 	lds	r24, 0x129D	; 0x80129d <arr_address>
    3274:	90 91 9e 12 	lds	r25, 0x129E	; 0x80129e <arr_address+0x1>
    3278:	fc 01       	movw	r30, r24
    327a:	e0 50       	subi	r30, 0x00	; 0
    327c:	fe 4f       	sbci	r31, 0xFE	; 254
    327e:	20 83       	st	Z, r18
		if (arr_address >= sizeof(CommandBuffer)) //making this an endless array for command lines
    3280:	81 15       	cp	r24, r1
    3282:	98 40       	sbci	r25, 0x08	; 8
    3284:	20 f0       	brcs	.+8      	; 0x328e <UserInput+0x56>
		{
			arr_address = 0; //resets array at address 0
    3286:	10 92 9e 12 	sts	0x129E, r1	; 0x80129e <arr_address+0x1>
    328a:	10 92 9d 12 	sts	0x129D, r1	; 0x80129d <arr_address>
		}
		arr_address++;
    328e:	80 91 9d 12 	lds	r24, 0x129D	; 0x80129d <arr_address>
    3292:	90 91 9e 12 	lds	r25, 0x129E	; 0x80129e <arr_address+0x1>
    3296:	01 96       	adiw	r24, 0x01	; 1
    3298:	90 93 9e 12 	sts	0x129E, r25	; 0x80129e <arr_address+0x1>
    329c:	80 93 9d 12 	sts	0x129D, r24	; 0x80129d <arr_address>
		c = USART_RX_Data(); //receive user uint8_t data type input
    32a0:	0e 94 f7 22 	call	0x45ee	; 0x45ee <USART_RX_Data>
    32a4:	80 93 1e 0a 	sts	0x0A1E, r24	; 0x800a1e <c>
	
	input_counter = 0; //reset input counter
	
	c = USART_RX_Data(); //receive user uint8_t data type input
	
	while ((c != '\r')) //(c != '\n') &&
    32a8:	20 91 1e 0a 	lds	r18, 0x0A1E	; 0x800a1e <c>
    32ac:	2d 30       	cpi	r18, 0x0D	; 13
    32ae:	b9 f6       	brne	.-82     	; 0x325e <UserInput+0x26>
		arr_address++;
		c = USART_RX_Data(); //receive user uint8_t data type input
	}
	
	//CommandBuffer[arr_address + 1] = '\r';
	CommandBuffer[arr_address] = '\0'; //adding NULL '\0' to mark end of Command String...; adding carriage return '\r' until I can get NULL to work...
    32b0:	e0 91 9d 12 	lds	r30, 0x129D	; 0x80129d <arr_address>
    32b4:	f0 91 9e 12 	lds	r31, 0x129E	; 0x80129e <arr_address+0x1>
    32b8:	e0 50       	subi	r30, 0x00	; 0
    32ba:	fe 4f       	sbci	r31, 0xFE	; 254
    32bc:	10 82       	st	Z, r1
	arr_address = 0; //resets array at address 0
    32be:	10 92 9e 12 	sts	0x129E, r1	; 0x80129e <arr_address+0x1>
    32c2:	10 92 9d 12 	sts	0x129D, r1	; 0x80129d <arr_address>
	
	USART_Data(CommandBuffer); //shows what the user wrote on terminal
    32c6:	80 e0       	ldi	r24, 0x00	; 0
    32c8:	92 e0       	ldi	r25, 0x02	; 2
    32ca:	6c 01       	movw	r12, r24
    32cc:	20 e8       	ldi	r18, 0x80	; 128
    32ce:	e2 2e       	mov	r14, r18
    32d0:	8e 2d       	mov	r24, r14
    32d2:	b6 01       	movw	r22, r12
    32d4:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
	USART_TX_Data('\n');
    32d8:	8a e0       	ldi	r24, 0x0A	; 10
    32da:	0e 94 f0 22 	call	0x45e0	; 0x45e0 <USART_TX_Data>
	
	if (command)
    32de:	cc 23       	and	r28, r28
    32e0:	21 f0       	breq	.+8      	; 0x32ea <UserInput+0xb2>
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
    32e2:	8e 2d       	mov	r24, r14
    32e4:	b6 01       	movw	r22, r12
    32e6:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <ExecuteCommand>
}
    32ea:	cf 91       	pop	r28
    32ec:	ef 90       	pop	r14
    32ee:	df 90       	pop	r13
    32f0:	cf 90       	pop	r12
    32f2:	08 95       	ret

Disassembly of section .text.COLUMN_BLOCK_PAGE_ADDRESSER:

000025b0 <COLUMN_BLOCK_PAGE_ADDRESSER>:
		USART_Data(arr_dest);
	}
}

void COLUMN_BLOCK_PAGE_ADDRESSER(bool addr_type) //gets hex number for Column and Block/Page address
{
    25b0:	cf 92       	push	r12
    25b2:	df 92       	push	r13
    25b4:	ef 92       	push	r14
    25b6:	ff 92       	push	r15
    25b8:	0f 93       	push	r16
    25ba:	cf 93       	push	r28
    25bc:	c8 2f       	mov	r28, r24
	UserInput(false); //get the hex numbers, false because not command
    25be:	80 e0       	ldi	r24, 0x00	; 0
    25c0:	0e 94 1c 19 	call	0x3238	; 0x3238 <UserInput>
	
	if (addr_type == false) //false, so address type is Column Address
    25c4:	c1 11       	cpse	r28, r1
    25c6:	4b c0       	rjmp	.+150    	; 0x265e <COLUMN_BLOCK_PAGE_ADDRESSER+0xae>
	{
		if (input_counter != 4) //has to be 4 inputs
    25c8:	80 91 9b 12 	lds	r24, 0x129B	; 0x80129b <input_counter>
    25cc:	90 91 9c 12 	lds	r25, 0x129C	; 0x80129c <input_counter+0x1>
    25d0:	04 97       	sbiw	r24, 0x04	; 4
    25d2:	41 f0       	breq	.+16     	; 0x25e4 <COLUMN_BLOCK_PAGE_ADDRESSER+0x34>
		{
			USART_Data("Make sure only 4 inputs. \n");
    25d4:	67 e7       	ldi	r22, 0x77	; 119
    25d6:	74 e0       	ldi	r23, 0x04	; 4
    25d8:	80 e0       	ldi	r24, 0x00	; 0
    25da:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			UserInput(false);
    25de:	80 e0       	ldi	r24, 0x00	; 0
    25e0:	0e 94 1c 19 	call	0x3238	; 0x3238 <UserInput>
		}
		
		if (HEX_Verification()) //if true (valid)
    25e4:	0e 94 be 18 	call	0x317c	; 0x317c <HEX_Verification>
    25e8:	81 11       	cpse	r24, r1
    25ea:	1b c0       	rjmp	.+54     	; 0x2622 <COLUMN_BLOCK_PAGE_ADDRESSER+0x72>
    25ec:	34 c0       	rjmp	.+104    	; 0x2656 <COLUMN_BLOCK_PAGE_ADDRESSER+0xa6>
		{
			for (int i = 0; i < COLUMN_ADDRESS + 1; i+=2)
			{
				Byte_Address[i / 2] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
    25ee:	9c 01       	movw	r18, r24
    25f0:	99 23       	and	r25, r25
    25f2:	14 f4       	brge	.+4      	; 0x25f8 <COLUMN_BLOCK_PAGE_ADDRESSER+0x48>
    25f4:	2f 5f       	subi	r18, 0xFF	; 255
    25f6:	3f 4f       	sbci	r19, 0xFF	; 255
    25f8:	35 95       	asr	r19
    25fa:	27 95       	ror	r18
    25fc:	fc 01       	movw	r30, r24
    25fe:	e0 50       	subi	r30, 0x00	; 0
    2600:	fe 4f       	sbci	r31, 0xFE	; 254
    2602:	40 81       	ld	r20, Z
    2604:	60 e1       	ldi	r22, 0x10	; 16
    2606:	46 9f       	mul	r20, r22
    2608:	a0 01       	movw	r20, r0
    260a:	11 24       	eor	r1, r1
    260c:	fc 01       	movw	r30, r24
    260e:	ef 5f       	subi	r30, 0xFF	; 255
    2610:	fd 4f       	sbci	r31, 0xFD	; 253
    2612:	50 81       	ld	r21, Z
    2614:	f9 01       	movw	r30, r18
    2616:	ea 5d       	subi	r30, 0xDA	; 218
    2618:	fd 4e       	sbci	r31, 0xED	; 237
    261a:	45 2b       	or	r20, r21
    261c:	40 83       	st	Z, r20
			UserInput(false);
		}
		
		if (HEX_Verification()) //if true (valid)
		{
			for (int i = 0; i < COLUMN_ADDRESS + 1; i+=2)
    261e:	02 96       	adiw	r24, 0x02	; 2
    2620:	02 c0       	rjmp	.+4      	; 0x2626 <COLUMN_BLOCK_PAGE_ADDRESSER+0x76>
    2622:	80 e0       	ldi	r24, 0x00	; 0
    2624:	90 e0       	ldi	r25, 0x00	; 0
    2626:	83 30       	cpi	r24, 0x03	; 3
    2628:	91 05       	cpc	r25, r1
    262a:	0c f3       	brlt	.-62     	; 0x25ee <COLUMN_BLOCK_PAGE_ADDRESSER+0x3e>
			{
				Byte_Address[i / 2] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
			}
			
			Print_To_User(COLUMN_ADDRESS, 0, "Column Address -> 0x%02X \n", Byte_Address, status_feature);	
    262c:	86 e2       	ldi	r24, 0x26	; 38
    262e:	92 e1       	ldi	r25, 0x12	; 18
    2630:	7c 01       	movw	r14, r24
    2632:	20 e8       	ldi	r18, 0x80	; 128
    2634:	02 2f       	mov	r16, r18
    2636:	0f 2e       	mov	r0, r31
    2638:	f0 e0       	ldi	r31, 0x00	; 0
    263a:	cf 2e       	mov	r12, r31
    263c:	fa e0       	ldi	r31, 0x0A	; 10
    263e:	df 2e       	mov	r13, r31
    2640:	f0 2d       	mov	r31, r0
    2642:	22 e9       	ldi	r18, 0x92	; 146
    2644:	34 e0       	ldi	r19, 0x04	; 4
    2646:	40 e0       	ldi	r20, 0x00	; 0
    2648:	60 e0       	ldi	r22, 0x00	; 0
    264a:	70 e0       	ldi	r23, 0x00	; 0
    264c:	82 e0       	ldi	r24, 0x02	; 2
    264e:	90 e0       	ldi	r25, 0x00	; 0
    2650:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <Print_To_User>
    2654:	4e c0       	rjmp	.+156    	; 0x26f2 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
		else
		{
			COLUMN_BLOCK_PAGE_ADDRESSER(addr_type); //call again
    2656:	8c 2f       	mov	r24, r28
    2658:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <COLUMN_BLOCK_PAGE_ADDRESSER>
    265c:	4a c0       	rjmp	.+148    	; 0x26f2 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
	}
	else //true, so address type is Block/Page Address
	{
		if (input_counter != 6) //has to be 6 inputs
    265e:	80 91 9b 12 	lds	r24, 0x129B	; 0x80129b <input_counter>
    2662:	90 91 9c 12 	lds	r25, 0x129C	; 0x80129c <input_counter+0x1>
    2666:	06 97       	sbiw	r24, 0x06	; 6
    2668:	41 f0       	breq	.+16     	; 0x267a <COLUMN_BLOCK_PAGE_ADDRESSER+0xca>
		{
			USART_Data("Make sure only 6 inputs. \n");
    266a:	6d ea       	ldi	r22, 0xAD	; 173
    266c:	74 e0       	ldi	r23, 0x04	; 4
    266e:	80 e0       	ldi	r24, 0x00	; 0
    2670:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			UserInput(false);
    2674:	80 e0       	ldi	r24, 0x00	; 0
    2676:	0e 94 1c 19 	call	0x3238	; 0x3238 <UserInput>
		}
		
		if(HEX_Verification()) //if true (valid)
    267a:	0e 94 be 18 	call	0x317c	; 0x317c <HEX_Verification>
    267e:	81 11       	cpse	r24, r1
    2680:	1b c0       	rjmp	.+54     	; 0x26b8 <COLUMN_BLOCK_PAGE_ADDRESSER+0x108>
    2682:	34 c0       	rjmp	.+104    	; 0x26ec <COLUMN_BLOCK_PAGE_ADDRESSER+0x13c>
		{
			for (int i = 0; i < BLOCK_PAGE_ADDRESS + 2; i+=2)
			{
				Byte_Address[COLUMN_ADDRESS + (i / 2)] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
    2684:	9c 01       	movw	r18, r24
    2686:	99 23       	and	r25, r25
    2688:	14 f4       	brge	.+4      	; 0x268e <COLUMN_BLOCK_PAGE_ADDRESSER+0xde>
    268a:	2f 5f       	subi	r18, 0xFF	; 255
    268c:	3f 4f       	sbci	r19, 0xFF	; 255
    268e:	35 95       	asr	r19
    2690:	27 95       	ror	r18
    2692:	fc 01       	movw	r30, r24
    2694:	e0 50       	subi	r30, 0x00	; 0
    2696:	fe 4f       	sbci	r31, 0xFE	; 254
    2698:	40 81       	ld	r20, Z
    269a:	60 e1       	ldi	r22, 0x10	; 16
    269c:	46 9f       	mul	r20, r22
    269e:	a0 01       	movw	r20, r0
    26a0:	11 24       	eor	r1, r1
    26a2:	fc 01       	movw	r30, r24
    26a4:	ef 5f       	subi	r30, 0xFF	; 255
    26a6:	fd 4f       	sbci	r31, 0xFD	; 253
    26a8:	50 81       	ld	r21, Z
    26aa:	f9 01       	movw	r30, r18
    26ac:	e8 5d       	subi	r30, 0xD8	; 216
    26ae:	fd 4e       	sbci	r31, 0xED	; 237
    26b0:	45 2b       	or	r20, r21
    26b2:	40 83       	st	Z, r20
			UserInput(false);
		}
		
		if(HEX_Verification()) //if true (valid)
		{
			for (int i = 0; i < BLOCK_PAGE_ADDRESS + 2; i+=2)
    26b4:	02 96       	adiw	r24, 0x02	; 2
    26b6:	02 c0       	rjmp	.+4      	; 0x26bc <COLUMN_BLOCK_PAGE_ADDRESSER+0x10c>
    26b8:	80 e0       	ldi	r24, 0x00	; 0
    26ba:	90 e0       	ldi	r25, 0x00	; 0
    26bc:	85 30       	cpi	r24, 0x05	; 5
    26be:	91 05       	cpc	r25, r1
    26c0:	0c f3       	brlt	.-62     	; 0x2684 <COLUMN_BLOCK_PAGE_ADDRESSER+0xd4>
			{
				Byte_Address[COLUMN_ADDRESS + (i / 2)] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
			}
			
			Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "Block/Page Address -> 0x%02X \n", Byte_Address, status_feature);
    26c2:	86 e2       	ldi	r24, 0x26	; 38
    26c4:	92 e1       	ldi	r25, 0x12	; 18
    26c6:	7c 01       	movw	r14, r24
    26c8:	20 e8       	ldi	r18, 0x80	; 128
    26ca:	02 2f       	mov	r16, r18
    26cc:	0f 2e       	mov	r0, r31
    26ce:	f0 e0       	ldi	r31, 0x00	; 0
    26d0:	cf 2e       	mov	r12, r31
    26d2:	fa e0       	ldi	r31, 0x0A	; 10
    26d4:	df 2e       	mov	r13, r31
    26d6:	f0 2d       	mov	r31, r0
    26d8:	28 ec       	ldi	r18, 0xC8	; 200
    26da:	34 e0       	ldi	r19, 0x04	; 4
    26dc:	40 e0       	ldi	r20, 0x00	; 0
    26de:	62 e0       	ldi	r22, 0x02	; 2
    26e0:	70 e0       	ldi	r23, 0x00	; 0
    26e2:	83 e0       	ldi	r24, 0x03	; 3
    26e4:	90 e0       	ldi	r25, 0x00	; 0
    26e6:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <Print_To_User>
    26ea:	03 c0       	rjmp	.+6      	; 0x26f2 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
		else
		{
			COLUMN_BLOCK_PAGE_ADDRESSER(addr_type); //call again
    26ec:	8c 2f       	mov	r24, r28
    26ee:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <COLUMN_BLOCK_PAGE_ADDRESSER>
		}
	}
}
    26f2:	cf 91       	pop	r28
    26f4:	0f 91       	pop	r16
    26f6:	ff 90       	pop	r15
    26f8:	ef 90       	pop	r14
    26fa:	df 90       	pop	r13
    26fc:	cf 90       	pop	r12
    26fe:	08 95       	ret

Disassembly of section .text.CLEAR_ARR:

00003e16 <CLEAR_ARR>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3e16:	80 e0       	ldi	r24, 0x00	; 0
    3e18:	90 e0       	ldi	r25, 0x00	; 0
    3e1a:	05 c0       	rjmp	.+10     	; 0x3e26 <CLEAR_ARR+0x10>
    3e1c:	fc 01       	movw	r30, r24
    3e1e:	e1 5e       	subi	r30, 0xE1	; 225
    3e20:	fd 4e       	sbci	r31, 0xED	; 237
    3e22:	10 82       	st	Z, r1
    3e24:	01 96       	adiw	r24, 0x01	; 1
    3e26:	85 30       	cpi	r24, 0x05	; 5
    3e28:	91 05       	cpc	r25, r1
    3e2a:	c0 f3       	brcs	.-16     	; 0x3e1c <CLEAR_ARR+0x6>
    3e2c:	80 e0       	ldi	r24, 0x00	; 0
    3e2e:	90 e0       	ldi	r25, 0x00	; 0
    3e30:	05 c0       	rjmp	.+10     	; 0x3e3c <CLEAR_ARR+0x26>
    3e32:	fc 01       	movw	r30, r24
    3e34:	e1 5e       	subi	r30, 0xE1	; 225
    3e36:	f5 4f       	sbci	r31, 0xF5	; 245
    3e38:	10 82       	st	Z, r1
    3e3a:	01 96       	adiw	r24, 0x01	; 1
    3e3c:	81 15       	cp	r24, r1
    3e3e:	28 e0       	ldi	r18, 0x08	; 8
    3e40:	92 07       	cpc	r25, r18
    3e42:	b8 f3       	brcs	.-18     	; 0x3e32 <CLEAR_ARR+0x1c>
    3e44:	80 e0       	ldi	r24, 0x00	; 0
    3e46:	90 e0       	ldi	r25, 0x00	; 0
    3e48:	05 c0       	rjmp	.+10     	; 0x3e54 <CLEAR_ARR+0x3e>
    3e4a:	fc 01       	movw	r30, r24
    3e4c:	e0 50       	subi	r30, 0x00	; 0
    3e4e:	fe 4f       	sbci	r31, 0xFE	; 254
    3e50:	10 82       	st	Z, r1
    3e52:	01 96       	adiw	r24, 0x01	; 1
    3e54:	81 15       	cp	r24, r1
    3e56:	28 e0       	ldi	r18, 0x08	; 8
    3e58:	92 07       	cpc	r25, r18
    3e5a:	b8 f3       	brcs	.-18     	; 0x3e4a <CLEAR_ARR+0x34>
    3e5c:	80 e0       	ldi	r24, 0x00	; 0
    3e5e:	90 e0       	ldi	r25, 0x00	; 0
    3e60:	05 c0       	rjmp	.+10     	; 0x3e6c <CLEAR_ARR+0x56>
    3e62:	fc 01       	movw	r30, r24
    3e64:	e0 50       	subi	r30, 0x00	; 0
    3e66:	f6 4f       	sbci	r31, 0xF6	; 246
    3e68:	10 82       	st	Z, r1
    3e6a:	01 96       	adiw	r24, 0x01	; 1
    3e6c:	8e 31       	cpi	r24, 0x1E	; 30
    3e6e:	91 05       	cpc	r25, r1
    3e70:	c0 f3       	brcs	.-16     	; 0x3e62 <CLEAR_ARR+0x4c>
    3e72:	08 95       	ret

Disassembly of section .text.SPI_MASTER_Init:

0000440a <SPI_MASTER_Init>:

//Master Mode (for ATmega 2560) allows full duplex communication between the ATmega 2560 to Flash NAND Memory chip
void SPI_MASTER_Init() //initializes Serial Peripheral Interference (SPI) operations in Master Mode
{
	//DDR pin assignment, ~CS, MOSI, SCK are outputs (1), and MISO is input (0) (in Master Mode)
	DDRB |= (1 << PB2) | (1 << PB1); //setting MASTER_MOSI (PB2) as output; setting MASTER_SCK (PB1) as output;
    440a:	84 b1       	in	r24, 0x04	; 4
    440c:	86 60       	ori	r24, 0x06	; 6
    440e:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << PB3); //setting MASTER_MISO (PB3) as input;
    4410:	84 b1       	in	r24, 0x04	; 4
    4412:	87 7f       	andi	r24, 0xF7	; 247
    4414:	84 b9       	out	0x04, r24	; 4
	
	//MUST set ~SS on the ATmega 2560 in order to get SPI operations working...
	DDRB |= (1 << PB0); //setting ~SS pin (PB0) as output;
    4416:	84 b1       	in	r24, 0x04	; 4
    4418:	81 60       	ori	r24, 0x01	; 1
    441a:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1 << PB0); //setting ~SS pin (PB0) high to "de-select" slave device (not connected to the Flash NAND anyway)
    441c:	85 b1       	in	r24, 0x05	; 5
    441e:	81 60       	ori	r24, 0x01	; 1
    4420:	85 b9       	out	0x05, r24	; 5
	//PORTB &= ~(1 << PB0); //setting ~SS pin (PB0) low to "select" slave device (not connected to the Flash NAND anyway)
	
	SPCR |= (1 << SPE) | (1 << MSTR) | (1 << SPR0); // SPE: enables the SPI; MSTR: sets SPI to Master SPI mode; SPR1 and SPR0: sets the SCK Frequency (divisor of 16);
    4422:	8c b5       	in	r24, 0x2c	; 44
    4424:	81 65       	ori	r24, 0x51	; 81
    4426:	8c bd       	out	0x2c, r24	; 44
	SPCR &= ~(1 << DORD) | ~(1 << CPOL) | ~(1 << CPHA) | ~(1 << SPR1);//DORD, Data order set to MSB transmitted first; SPI Timing Mode is 0, where CPOL and CPHA are both 0
    4428:	8c b5       	in	r24, 0x2c	; 44
    442a:	8c bd       	out	0x2c, r24	; 44
    442c:	08 95       	ret

Disassembly of section .text.FLASH_Write_Enable:

00004506 <FLASH_Write_Enable>:
}

void FLASH_Write_Enable (void) //select Slave device and initializes Write operations onto Flash NAND
{
	FLASH_NAND_CS_ENABLE();
    4506:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
	
	SPDR = WRITE_ENABLED; //Flash NAND's Write Enable command into SPI Data Register (SPDR)
    450a:	86 e0       	ldi	r24, 0x06	; 6
    450c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete; waits for SPIF to be logic high
    450e:	0d b4       	in	r0, 0x2d	; 45
    4510:	07 fe       	sbrs	r0, 7
    4512:	fd cf       	rjmp	.-6      	; 0x450e <FLASH_Write_Enable+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    4514:	8e b5       	in	r24, 0x2e	; 46
    4516:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	
	FLASH_NAND_CS_DISABLE();
    451a:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    451e:	08 95       	ret

Disassembly of section .text.FLASH_ID:

000039ee <FLASH_ID>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    39ee:	cf 93       	push	r28
    39f0:	df 93       	push	r29
    39f2:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    39f6:	8f e9       	ldi	r24, 0x9F	; 159
    39f8:	8e bd       	out	0x2e, r24	; 46
    39fa:	0d b4       	in	r0, 0x2d	; 45
    39fc:	07 fe       	sbrs	r0, 7
    39fe:	fd cf       	rjmp	.-6      	; 0x39fa <FLASH_ID+0xc>
    3a00:	8e b5       	in	r24, 0x2e	; 46
    3a02:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3a06:	1e bc       	out	0x2e, r1	; 46
    3a08:	0d b4       	in	r0, 0x2d	; 45
    3a0a:	07 fe       	sbrs	r0, 7
    3a0c:	fd cf       	rjmp	.-6      	; 0x3a08 <FLASH_ID+0x1a>
    3a0e:	8e b5       	in	r24, 0x2e	; 46
    3a10:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3a14:	1e bc       	out	0x2e, r1	; 46
    3a16:	0d b4       	in	r0, 0x2d	; 45
    3a18:	07 fe       	sbrs	r0, 7
    3a1a:	fd cf       	rjmp	.-6      	; 0x3a16 <FLASH_ID+0x28>
    3a1c:	8e b5       	in	r24, 0x2e	; 46
    3a1e:	80 93 1f 12 	sts	0x121F, r24	; 0x80121f <HEX_ID>
    3a22:	1e bc       	out	0x2e, r1	; 46
    3a24:	0d b4       	in	r0, 0x2d	; 45
    3a26:	07 fe       	sbrs	r0, 7
    3a28:	fd cf       	rjmp	.-6      	; 0x3a24 <FLASH_ID+0x36>
    3a2a:	8e b5       	in	r24, 0x2e	; 46
    3a2c:	cf e1       	ldi	r28, 0x1F	; 31
    3a2e:	d2 e1       	ldi	r29, 0x12	; 18
    3a30:	89 83       	std	Y+1, r24	; 0x01
    3a32:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3a36:	99 81       	ldd	r25, Y+1	; 0x01
    3a38:	88 81       	ld	r24, Y
    3a3a:	1f 92       	push	r1
    3a3c:	9f 93       	push	r25
    3a3e:	1f 92       	push	r1
    3a40:	8f 93       	push	r24
    3a42:	87 ee       	ldi	r24, 0xE7	; 231
    3a44:	94 e0       	ldi	r25, 0x04	; 4
    3a46:	a0 e0       	ldi	r26, 0x00	; 0
    3a48:	af 93       	push	r26
    3a4a:	9f 93       	push	r25
    3a4c:	8f 93       	push	r24
    3a4e:	c0 e0       	ldi	r28, 0x00	; 0
    3a50:	da e0       	ldi	r29, 0x0A	; 10
    3a52:	df 93       	push	r29
    3a54:	cf 93       	push	r28
    3a56:	0e 94 df 21 	call	0x43be	; 0x43be <_sprintf_cdnopuxX>
    3a5a:	be 01       	movw	r22, r28
    3a5c:	80 e8       	ldi	r24, 0x80	; 128
    3a5e:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
    3a62:	8d b7       	in	r24, 0x3d	; 61
    3a64:	9e b7       	in	r25, 0x3e	; 62
    3a66:	09 96       	adiw	r24, 0x09	; 9
    3a68:	0f b6       	in	r0, 0x3f	; 63
    3a6a:	f8 94       	cli
    3a6c:	9e bf       	out	0x3e, r25	; 62
    3a6e:	0f be       	out	0x3f, r0	; 63
    3a70:	8d bf       	out	0x3d, r24	; 61
    3a72:	df 91       	pop	r29
    3a74:	cf 91       	pop	r28
    3a76:	08 95       	ret

Disassembly of section .text.FLASH_Die_Selection:

00003af8 <FLASH_Die_Selection>:
    3af8:	cf 92       	push	r12
    3afa:	df 92       	push	r13
    3afc:	ef 92       	push	r14
    3afe:	ff 92       	push	r15
    3b00:	0f 93       	push	r16
    3b02:	cf 93       	push	r28
    3b04:	df 93       	push	r29
    3b06:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3b0a:	8f e0       	ldi	r24, 0x0F	; 15
    3b0c:	8e bd       	out	0x2e, r24	; 46
    3b0e:	0d b4       	in	r0, 0x2d	; 45
    3b10:	07 fe       	sbrs	r0, 7
    3b12:	fd cf       	rjmp	.-6      	; 0x3b0e <FLASH_Die_Selection+0x16>
    3b14:	8e b5       	in	r24, 0x2e	; 46
    3b16:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3b1a:	80 ed       	ldi	r24, 0xD0	; 208
    3b1c:	8e bd       	out	0x2e, r24	; 46
    3b1e:	0d b4       	in	r0, 0x2d	; 45
    3b20:	07 fe       	sbrs	r0, 7
    3b22:	fd cf       	rjmp	.-6      	; 0x3b1e <FLASH_Die_Selection+0x26>
    3b24:	8e b5       	in	r24, 0x2e	; 46
    3b26:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3b2a:	1e bc       	out	0x2e, r1	; 46
    3b2c:	0d b4       	in	r0, 0x2d	; 45
    3b2e:	07 fe       	sbrs	r0, 7
    3b30:	fd cf       	rjmp	.-6      	; 0x3b2c <FLASH_Die_Selection+0x34>
    3b32:	8e b5       	in	r24, 0x2e	; 46
    3b34:	cf e1       	ldi	r28, 0x1F	; 31
    3b36:	da e0       	ldi	r29, 0x0A	; 10
    3b38:	88 83       	st	Y, r24
    3b3a:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3b3e:	7e 01       	movw	r14, r28
    3b40:	80 e8       	ldi	r24, 0x80	; 128
    3b42:	08 2f       	mov	r16, r24
    3b44:	0f 2e       	mov	r0, r31
    3b46:	f0 e0       	ldi	r31, 0x00	; 0
    3b48:	cf 2e       	mov	r12, r31
    3b4a:	fa e0       	ldi	r31, 0x0A	; 10
    3b4c:	df 2e       	mov	r13, r31
    3b4e:	f0 2d       	mov	r31, r0
    3b50:	2f e1       	ldi	r18, 0x1F	; 31
    3b52:	35 e0       	ldi	r19, 0x05	; 5
    3b54:	40 e0       	ldi	r20, 0x00	; 0
    3b56:	60 e0       	ldi	r22, 0x00	; 0
    3b58:	70 e0       	ldi	r23, 0x00	; 0
    3b5a:	81 e0       	ldi	r24, 0x01	; 1
    3b5c:	90 e0       	ldi	r25, 0x00	; 0
    3b5e:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <Print_To_User>
    3b62:	df 91       	pop	r29
    3b64:	cf 91       	pop	r28
    3b66:	0f 91       	pop	r16
    3b68:	ff 90       	pop	r15
    3b6a:	ef 90       	pop	r14
    3b6c:	df 90       	pop	r13
    3b6e:	cf 90       	pop	r12
    3b70:	08 95       	ret

Disassembly of section .text.FLASH_Configuration:

00003b72 <FLASH_Configuration>:
    3b72:	cf 92       	push	r12
    3b74:	df 92       	push	r13
    3b76:	ef 92       	push	r14
    3b78:	ff 92       	push	r15
    3b7a:	0f 93       	push	r16
    3b7c:	cf 93       	push	r28
    3b7e:	df 93       	push	r29
    3b80:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3b84:	8f e0       	ldi	r24, 0x0F	; 15
    3b86:	8e bd       	out	0x2e, r24	; 46
    3b88:	0d b4       	in	r0, 0x2d	; 45
    3b8a:	07 fe       	sbrs	r0, 7
    3b8c:	fd cf       	rjmp	.-6      	; 0x3b88 <FLASH_Configuration+0x16>
    3b8e:	8e b5       	in	r24, 0x2e	; 46
    3b90:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3b94:	80 eb       	ldi	r24, 0xB0	; 176
    3b96:	8e bd       	out	0x2e, r24	; 46
    3b98:	0d b4       	in	r0, 0x2d	; 45
    3b9a:	07 fe       	sbrs	r0, 7
    3b9c:	fd cf       	rjmp	.-6      	; 0x3b98 <FLASH_Configuration+0x26>
    3b9e:	8e b5       	in	r24, 0x2e	; 46
    3ba0:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3ba4:	1e bc       	out	0x2e, r1	; 46
    3ba6:	0d b4       	in	r0, 0x2d	; 45
    3ba8:	07 fe       	sbrs	r0, 7
    3baa:	fd cf       	rjmp	.-6      	; 0x3ba6 <FLASH_Configuration+0x34>
    3bac:	8e b5       	in	r24, 0x2e	; 46
    3bae:	cf e1       	ldi	r28, 0x1F	; 31
    3bb0:	da e0       	ldi	r29, 0x0A	; 10
    3bb2:	88 83       	st	Y, r24
    3bb4:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3bb8:	7e 01       	movw	r14, r28
    3bba:	80 e8       	ldi	r24, 0x80	; 128
    3bbc:	08 2f       	mov	r16, r24
    3bbe:	0f 2e       	mov	r0, r31
    3bc0:	f0 e0       	ldi	r31, 0x00	; 0
    3bc2:	cf 2e       	mov	r12, r31
    3bc4:	fa e0       	ldi	r31, 0x0A	; 10
    3bc6:	df 2e       	mov	r13, r31
    3bc8:	f0 2d       	mov	r31, r0
    3bca:	20 e4       	ldi	r18, 0x40	; 64
    3bcc:	35 e0       	ldi	r19, 0x05	; 5
    3bce:	40 e0       	ldi	r20, 0x00	; 0
    3bd0:	60 e0       	ldi	r22, 0x00	; 0
    3bd2:	70 e0       	ldi	r23, 0x00	; 0
    3bd4:	81 e0       	ldi	r24, 0x01	; 1
    3bd6:	90 e0       	ldi	r25, 0x00	; 0
    3bd8:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <Print_To_User>
    3bdc:	df 91       	pop	r29
    3bde:	cf 91       	pop	r28
    3be0:	0f 91       	pop	r16
    3be2:	ff 90       	pop	r15
    3be4:	ef 90       	pop	r14
    3be6:	df 90       	pop	r13
    3be8:	cf 90       	pop	r12
    3bea:	08 95       	ret

Disassembly of section .text.FLASH_Block_Lock_Setter:

00003cd6 <FLASH_Block_Lock_Setter>:
    3cd6:	cf 93       	push	r28
    3cd8:	c8 2f       	mov	r28, r24
    3cda:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3cde:	cc 23       	and	r28, r28
    3ce0:	c9 f0       	breq	.+50     	; 0x3d14 <FLASH_Block_Lock_Setter+0x3e>
    3ce2:	8f e1       	ldi	r24, 0x1F	; 31
    3ce4:	8e bd       	out	0x2e, r24	; 46
    3ce6:	0d b4       	in	r0, 0x2d	; 45
    3ce8:	07 fe       	sbrs	r0, 7
    3cea:	fd cf       	rjmp	.-6      	; 0x3ce6 <FLASH_Block_Lock_Setter+0x10>
    3cec:	8e b5       	in	r24, 0x2e	; 46
    3cee:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3cf2:	80 ea       	ldi	r24, 0xA0	; 160
    3cf4:	8e bd       	out	0x2e, r24	; 46
    3cf6:	0d b4       	in	r0, 0x2d	; 45
    3cf8:	07 fe       	sbrs	r0, 7
    3cfa:	fd cf       	rjmp	.-6      	; 0x3cf6 <FLASH_Block_Lock_Setter+0x20>
    3cfc:	8e b5       	in	r24, 0x2e	; 46
    3cfe:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3d02:	8c e7       	ldi	r24, 0x7C	; 124
    3d04:	8e bd       	out	0x2e, r24	; 46
    3d06:	0d b4       	in	r0, 0x2d	; 45
    3d08:	07 fe       	sbrs	r0, 7
    3d0a:	fd cf       	rjmp	.-6      	; 0x3d06 <FLASH_Block_Lock_Setter+0x30>
    3d0c:	8e b5       	in	r24, 0x2e	; 46
    3d0e:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3d12:	17 c0       	rjmp	.+46     	; 0x3d42 <FLASH_Block_Lock_Setter+0x6c>
    3d14:	8f e1       	ldi	r24, 0x1F	; 31
    3d16:	8e bd       	out	0x2e, r24	; 46
    3d18:	0d b4       	in	r0, 0x2d	; 45
    3d1a:	07 fe       	sbrs	r0, 7
    3d1c:	fd cf       	rjmp	.-6      	; 0x3d18 <FLASH_Block_Lock_Setter+0x42>
    3d1e:	8e b5       	in	r24, 0x2e	; 46
    3d20:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3d24:	80 ea       	ldi	r24, 0xA0	; 160
    3d26:	8e bd       	out	0x2e, r24	; 46
    3d28:	0d b4       	in	r0, 0x2d	; 45
    3d2a:	07 fe       	sbrs	r0, 7
    3d2c:	fd cf       	rjmp	.-6      	; 0x3d28 <FLASH_Block_Lock_Setter+0x52>
    3d2e:	8e b5       	in	r24, 0x2e	; 46
    3d30:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3d34:	1e bc       	out	0x2e, r1	; 46
    3d36:	0d b4       	in	r0, 0x2d	; 45
    3d38:	07 fe       	sbrs	r0, 7
    3d3a:	fd cf       	rjmp	.-6      	; 0x3d36 <FLASH_Block_Lock_Setter+0x60>
    3d3c:	8e b5       	in	r24, 0x2e	; 46
    3d3e:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3d42:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3d46:	cf 91       	pop	r28
    3d48:	08 95       	ret

Disassembly of section .text.FLASH_Block_Lock:

00003450 <FLASH_Block_Lock>:
    3450:	cf 92       	push	r12
    3452:	df 92       	push	r13
    3454:	ef 92       	push	r14
    3456:	ff 92       	push	r15
    3458:	0f 93       	push	r16
    345a:	08 2f       	mov	r16, r24
    345c:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3460:	00 23       	and	r16, r16
    3462:	c1 f0       	breq	.+48     	; 0x3494 <FLASH_Block_Lock+0x44>
    3464:	8f e1       	ldi	r24, 0x1F	; 31
    3466:	8e bd       	out	0x2e, r24	; 46
    3468:	0d b4       	in	r0, 0x2d	; 45
    346a:	07 fe       	sbrs	r0, 7
    346c:	fd cf       	rjmp	.-6      	; 0x3468 <FLASH_Block_Lock+0x18>
    346e:	8e b5       	in	r24, 0x2e	; 46
    3470:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3474:	80 ea       	ldi	r24, 0xA0	; 160
    3476:	8e bd       	out	0x2e, r24	; 46
    3478:	0d b4       	in	r0, 0x2d	; 45
    347a:	07 fe       	sbrs	r0, 7
    347c:	fd cf       	rjmp	.-6      	; 0x3478 <FLASH_Block_Lock+0x28>
    347e:	8e b5       	in	r24, 0x2e	; 46
    3480:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3484:	1e bc       	out	0x2e, r1	; 46
    3486:	0d b4       	in	r0, 0x2d	; 45
    3488:	07 fe       	sbrs	r0, 7
    348a:	fd cf       	rjmp	.-6      	; 0x3486 <FLASH_Block_Lock+0x36>
    348c:	8e b5       	in	r24, 0x2e	; 46
    348e:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3492:	17 c0       	rjmp	.+46     	; 0x34c2 <FLASH_Block_Lock+0x72>
    3494:	8f e0       	ldi	r24, 0x0F	; 15
    3496:	8e bd       	out	0x2e, r24	; 46
    3498:	0d b4       	in	r0, 0x2d	; 45
    349a:	07 fe       	sbrs	r0, 7
    349c:	fd cf       	rjmp	.-6      	; 0x3498 <FLASH_Block_Lock+0x48>
    349e:	8e b5       	in	r24, 0x2e	; 46
    34a0:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    34a4:	80 ea       	ldi	r24, 0xA0	; 160
    34a6:	8e bd       	out	0x2e, r24	; 46
    34a8:	0d b4       	in	r0, 0x2d	; 45
    34aa:	07 fe       	sbrs	r0, 7
    34ac:	fd cf       	rjmp	.-6      	; 0x34a8 <FLASH_Block_Lock+0x58>
    34ae:	8e b5       	in	r24, 0x2e	; 46
    34b0:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    34b4:	1e bc       	out	0x2e, r1	; 46
    34b6:	0d b4       	in	r0, 0x2d	; 45
    34b8:	07 fe       	sbrs	r0, 7
    34ba:	fd cf       	rjmp	.-6      	; 0x34b6 <FLASH_Block_Lock+0x66>
    34bc:	8e b5       	in	r24, 0x2e	; 46
    34be:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    34c2:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    34c6:	8f e1       	ldi	r24, 0x1F	; 31
    34c8:	9a e0       	ldi	r25, 0x0A	; 10
    34ca:	7c 01       	movw	r14, r24
    34cc:	20 e8       	ldi	r18, 0x80	; 128
    34ce:	02 2f       	mov	r16, r18
    34d0:	0f 2e       	mov	r0, r31
    34d2:	f0 e0       	ldi	r31, 0x00	; 0
    34d4:	cf 2e       	mov	r12, r31
    34d6:	fa e0       	ldi	r31, 0x0A	; 10
    34d8:	df 2e       	mov	r13, r31
    34da:	f0 2d       	mov	r31, r0
    34dc:	21 e6       	ldi	r18, 0x61	; 97
    34de:	35 e0       	ldi	r19, 0x05	; 5
    34e0:	40 e0       	ldi	r20, 0x00	; 0
    34e2:	60 e0       	ldi	r22, 0x00	; 0
    34e4:	70 e0       	ldi	r23, 0x00	; 0
    34e6:	81 e0       	ldi	r24, 0x01	; 1
    34e8:	90 e0       	ldi	r25, 0x00	; 0
    34ea:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <Print_To_User>
    34ee:	0f 91       	pop	r16
    34f0:	ff 90       	pop	r15
    34f2:	ef 90       	pop	r14
    34f4:	df 90       	pop	r13
    34f6:	cf 90       	pop	r12
    34f8:	08 95       	ret

Disassembly of section .text.FLASH_Reset:

00004494 <FLASH_Reset>:
	Print_To_User(1, 0, "Block Lock Register: 0x%02X \n", data, status_feature);
}

void FLASH_Reset() //reset memory device
{
	FLASH_NAND_CS_ENABLE();
    4494:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
	
	SPDR = RESET; //Sending READ_ID Command into SPI Data Register (SPDR)
    4498:	8f ef       	ldi	r24, 0xFF	; 255
    449a:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    449c:	0d b4       	in	r0, 0x2d	; 45
    449e:	07 fe       	sbrs	r0, 7
    44a0:	fd cf       	rjmp	.-6      	; 0x449c <FLASH_Reset+0x8>
	
	FLASH_NAND_CS_DISABLE();
    44a2:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>

	USART_Data("Device Reseted \n");
    44a6:	6f e7       	ldi	r22, 0x7F	; 127
    44a8:	75 e0       	ldi	r23, 0x05	; 5
    44aa:	80 e0       	ldi	r24, 0x00	; 0
    44ac:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
    44b0:	08 95       	ret

Disassembly of section .text.FLASH_MainArray_Address:

000034fa <FLASH_MainArray_Address>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    34fa:	cf 92       	push	r12
    34fc:	df 92       	push	r13
    34fe:	ef 92       	push	r14
    3500:	9a 01       	movw	r18, r20
    3502:	46 2f       	mov	r20, r22
    3504:	00 97       	sbiw	r24, 0x00	; 0
    3506:	81 f5       	brne	.+96     	; 0x3568 <FLASH_MainArray_Address+0x6e>
    3508:	69 01       	movw	r12, r18
    350a:	e4 2e       	mov	r14, r20
    350c:	52 e0       	ldi	r21, 0x02	; 2
    350e:	c5 0e       	add	r12, r21
    3510:	d1 1c       	adc	r13, r1
    3512:	e1 1c       	adc	r14, r1
    3514:	f6 01       	movw	r30, r12
    3516:	5e 2d       	mov	r21, r14
    3518:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    351c:	6e bd       	out	0x2e, r22	; 46
    351e:	0d b4       	in	r0, 0x2d	; 45
    3520:	07 fe       	sbrs	r0, 7
    3522:	fd cf       	rjmp	.-6      	; 0x351e <FLASH_MainArray_Address+0x24>
    3524:	5e b5       	in	r21, 0x2e	; 46
    3526:	50 93 2b 12 	sts	0x122B, r21	; 0x80122b <status>
    352a:	69 01       	movw	r12, r18
    352c:	e4 2e       	mov	r14, r20
    352e:	53 e0       	ldi	r21, 0x03	; 3
    3530:	c5 0e       	add	r12, r21
    3532:	d1 1c       	adc	r13, r1
    3534:	e1 1c       	adc	r14, r1
    3536:	f6 01       	movw	r30, r12
    3538:	5e 2d       	mov	r21, r14
    353a:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    353e:	6e bd       	out	0x2e, r22	; 46
    3540:	0d b4       	in	r0, 0x2d	; 45
    3542:	07 fe       	sbrs	r0, 7
    3544:	fd cf       	rjmp	.-6      	; 0x3540 <FLASH_MainArray_Address+0x46>
    3546:	5e b5       	in	r21, 0x2e	; 46
    3548:	50 93 2b 12 	sts	0x122B, r21	; 0x80122b <status>
    354c:	2c 5f       	subi	r18, 0xFC	; 252
    354e:	3f 4f       	sbci	r19, 0xFF	; 255
    3550:	4f 4f       	sbci	r20, 0xFF	; 255
    3552:	f9 01       	movw	r30, r18
    3554:	54 2f       	mov	r21, r20
    3556:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    355a:	6e bd       	out	0x2e, r22	; 46
    355c:	0d b4       	in	r0, 0x2d	; 45
    355e:	07 fe       	sbrs	r0, 7
    3560:	fd cf       	rjmp	.-6      	; 0x355c <FLASH_MainArray_Address+0x62>
    3562:	2e b5       	in	r18, 0x2e	; 46
    3564:	20 93 2b 12 	sts	0x122B, r18	; 0x80122b <status>
    3568:	01 97       	sbiw	r24, 0x01	; 1
    356a:	b1 f4       	brne	.+44     	; 0x3598 <FLASH_MainArray_Address+0x9e>
    356c:	1e bc       	out	0x2e, r1	; 46
    356e:	0d b4       	in	r0, 0x2d	; 45
    3570:	07 fe       	sbrs	r0, 7
    3572:	fd cf       	rjmp	.-6      	; 0x356e <FLASH_MainArray_Address+0x74>
    3574:	8e b5       	in	r24, 0x2e	; 46
    3576:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    357a:	1e bc       	out	0x2e, r1	; 46
    357c:	0d b4       	in	r0, 0x2d	; 45
    357e:	07 fe       	sbrs	r0, 7
    3580:	fd cf       	rjmp	.-6      	; 0x357c <FLASH_MainArray_Address+0x82>
    3582:	8e b5       	in	r24, 0x2e	; 46
    3584:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3588:	81 e0       	ldi	r24, 0x01	; 1
    358a:	8e bd       	out	0x2e, r24	; 46
    358c:	0d b4       	in	r0, 0x2d	; 45
    358e:	07 fe       	sbrs	r0, 7
    3590:	fd cf       	rjmp	.-6      	; 0x358c <FLASH_MainArray_Address+0x92>
    3592:	8e b5       	in	r24, 0x2e	; 46
    3594:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3598:	ef 90       	pop	r14
    359a:	df 90       	pop	r13
    359c:	cf 90       	pop	r12
    359e:	08 95       	ret

Disassembly of section .text.FLASH_Column_Address:

00003ed2 <FLASH_Column_Address>:
    3ed2:	9a 01       	movw	r18, r20
    3ed4:	46 2f       	mov	r20, r22
    3ed6:	00 97       	sbiw	r24, 0x00	; 0
    3ed8:	c9 f4       	brne	.+50     	; 0x3f0c <FLASH_Column_Address+0x3a>
    3eda:	f9 01       	movw	r30, r18
    3edc:	54 2f       	mov	r21, r20
    3ede:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    3ee2:	6e bd       	out	0x2e, r22	; 46
    3ee4:	0d b4       	in	r0, 0x2d	; 45
    3ee6:	07 fe       	sbrs	r0, 7
    3ee8:	fd cf       	rjmp	.-6      	; 0x3ee4 <FLASH_Column_Address+0x12>
    3eea:	5e b5       	in	r21, 0x2e	; 46
    3eec:	50 93 2b 12 	sts	0x122B, r21	; 0x80122b <status>
    3ef0:	2f 5f       	subi	r18, 0xFF	; 255
    3ef2:	3f 4f       	sbci	r19, 0xFF	; 255
    3ef4:	4f 4f       	sbci	r20, 0xFF	; 255
    3ef6:	f9 01       	movw	r30, r18
    3ef8:	54 2f       	mov	r21, r20
    3efa:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    3efe:	6e bd       	out	0x2e, r22	; 46
    3f00:	0d b4       	in	r0, 0x2d	; 45
    3f02:	07 fe       	sbrs	r0, 7
    3f04:	fd cf       	rjmp	.-6      	; 0x3f00 <FLASH_Column_Address+0x2e>
    3f06:	2e b5       	in	r18, 0x2e	; 46
    3f08:	20 93 2b 12 	sts	0x122B, r18	; 0x80122b <status>
    3f0c:	01 97       	sbiw	r24, 0x01	; 1
    3f0e:	71 f4       	brne	.+28     	; 0x3f2c <FLASH_Column_Address+0x5a>
    3f10:	1e bc       	out	0x2e, r1	; 46
    3f12:	0d b4       	in	r0, 0x2d	; 45
    3f14:	07 fe       	sbrs	r0, 7
    3f16:	fd cf       	rjmp	.-6      	; 0x3f12 <FLASH_Column_Address+0x40>
    3f18:	8e b5       	in	r24, 0x2e	; 46
    3f1a:	80 93 1f 12 	sts	0x121F, r24	; 0x80121f <HEX_ID>
    3f1e:	1e bc       	out	0x2e, r1	; 46
    3f20:	0d b4       	in	r0, 0x2d	; 45
    3f22:	07 fe       	sbrs	r0, 7
    3f24:	fd cf       	rjmp	.-6      	; 0x3f20 <FLASH_Column_Address+0x4e>
    3f26:	8e b5       	in	r24, 0x2e	; 46
    3f28:	80 93 20 12 	sts	0x1220, r24	; 0x801220 <HEX_ID+0x1>
    3f2c:	08 95       	ret

Disassembly of section .text.FLASH_Data_Storage:

0000378c <FLASH_Data_Storage>:
    378c:	cf 92       	push	r12
    378e:	df 92       	push	r13
    3790:	ef 92       	push	r14
    3792:	ff 92       	push	r15
    3794:	0f 93       	push	r16
    3796:	1f 93       	push	r17
    3798:	cf 93       	push	r28
    379a:	df 93       	push	r29
    379c:	ec 01       	movw	r28, r24
    379e:	89 2b       	or	r24, r25
    37a0:	19 f1       	breq	.+70     	; 0x37e8 <FLASH_Data_Storage+0x5c>
    37a2:	28 c0       	rjmp	.+80     	; 0x37f4 <FLASH_Data_Storage+0x68>
    37a4:	1e bc       	out	0x2e, r1	; 46
    37a6:	0d b4       	in	r0, 0x2d	; 45
    37a8:	07 fe       	sbrs	r0, 7
    37aa:	fd cf       	rjmp	.-6      	; 0x37a6 <FLASH_Data_Storage+0x1a>
    37ac:	2e b5       	in	r18, 0x2e	; 46
    37ae:	fc 01       	movw	r30, r24
    37b0:	e1 5e       	subi	r30, 0xE1	; 225
    37b2:	f5 4f       	sbci	r31, 0xF5	; 245
    37b4:	20 83       	st	Z, r18
    37b6:	2e b5       	in	r18, 0x2e	; 46
    37b8:	2d 30       	cpi	r18, 0x0D	; 13
    37ba:	a1 f4       	brne	.+40     	; 0x37e4 <FLASH_Data_Storage+0x58>
    37bc:	7c 01       	movw	r14, r24
    37be:	99 0f       	add	r25, r25
    37c0:	00 0b       	sbc	r16, r16
    37c2:	11 0b       	sbc	r17, r17
    37c4:	0f 2e       	mov	r0, r31
    37c6:	f0 e0       	ldi	r31, 0x00	; 0
    37c8:	cf 2e       	mov	r12, r31
    37ca:	fa e0       	ldi	r31, 0x0A	; 10
    37cc:	df 2e       	mov	r13, r31
    37ce:	f0 2d       	mov	r31, r0
    37d0:	20 e9       	ldi	r18, 0x90	; 144
    37d2:	35 e0       	ldi	r19, 0x05	; 5
    37d4:	40 e0       	ldi	r20, 0x00	; 0
    37d6:	60 e0       	ldi	r22, 0x00	; 0
    37d8:	70 e0       	ldi	r23, 0x00	; 0
    37da:	81 e0       	ldi	r24, 0x01	; 1
    37dc:	90 e0       	ldi	r25, 0x00	; 0
    37de:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <Print_To_User>
    37e2:	08 c0       	rjmp	.+16     	; 0x37f4 <FLASH_Data_Storage+0x68>
    37e4:	01 96       	adiw	r24, 0x01	; 1
    37e6:	02 c0       	rjmp	.+4      	; 0x37ec <FLASH_Data_Storage+0x60>
    37e8:	80 e0       	ldi	r24, 0x00	; 0
    37ea:	90 e0       	ldi	r25, 0x00	; 0
    37ec:	81 15       	cp	r24, r1
    37ee:	28 e0       	ldi	r18, 0x08	; 8
    37f0:	92 07       	cpc	r25, r18
    37f2:	c0 f2       	brcs	.-80     	; 0x37a4 <FLASH_Data_Storage+0x18>
    37f4:	21 97       	sbiw	r28, 0x01	; 1
    37f6:	91 f4       	brne	.+36     	; 0x381c <FLASH_Data_Storage+0x90>
    37f8:	0b c0       	rjmp	.+22     	; 0x3810 <FLASH_Data_Storage+0x84>
    37fa:	1e bc       	out	0x2e, r1	; 46
    37fc:	0d b4       	in	r0, 0x2d	; 45
    37fe:	07 fe       	sbrs	r0, 7
    3800:	fd cf       	rjmp	.-6      	; 0x37fc <FLASH_Data_Storage+0x70>
    3802:	2e b5       	in	r18, 0x2e	; 46
    3804:	fc 01       	movw	r30, r24
    3806:	e1 5e       	subi	r30, 0xE1	; 225
    3808:	f5 4f       	sbci	r31, 0xF5	; 245
    380a:	20 83       	st	Z, r18
    380c:	01 96       	adiw	r24, 0x01	; 1
    380e:	02 c0       	rjmp	.+4      	; 0x3814 <FLASH_Data_Storage+0x88>
    3810:	80 e0       	ldi	r24, 0x00	; 0
    3812:	90 e0       	ldi	r25, 0x00	; 0
    3814:	81 15       	cp	r24, r1
    3816:	28 e0       	ldi	r18, 0x08	; 8
    3818:	92 07       	cpc	r25, r18
    381a:	78 f3       	brcs	.-34     	; 0x37fa <FLASH_Data_Storage+0x6e>
    381c:	df 91       	pop	r29
    381e:	cf 91       	pop	r28
    3820:	1f 91       	pop	r17
    3822:	0f 91       	pop	r16
    3824:	ff 90       	pop	r15
    3826:	ef 90       	pop	r14
    3828:	df 90       	pop	r13
    382a:	cf 90       	pop	r12
    382c:	08 95       	ret

Disassembly of section .text.FLASH_Read_From_Cache_x1:

00003f7e <FLASH_Read_From_Cache_x1>:
    3f7e:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3f82:	83 e0       	ldi	r24, 0x03	; 3
    3f84:	8e bd       	out	0x2e, r24	; 46
    3f86:	0d b4       	in	r0, 0x2d	; 45
    3f88:	07 fe       	sbrs	r0, 7
    3f8a:	fd cf       	rjmp	.-6      	; 0x3f86 <FLASH_Read_From_Cache_x1+0x8>
    3f8c:	8e b5       	in	r24, 0x2e	; 46
    3f8e:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3f92:	8a e1       	ldi	r24, 0x1A	; 26
    3f94:	8a 95       	dec	r24
    3f96:	f1 f7       	brne	.-4      	; 0x3f94 <FLASH_Read_From_Cache_x1+0x16>
    3f98:	00 c0       	rjmp	.+0      	; 0x3f9a <FLASH_Read_From_Cache_x1+0x1c>
    3f9a:	46 e2       	ldi	r20, 0x26	; 38
    3f9c:	52 e1       	ldi	r21, 0x12	; 18
    3f9e:	60 e8       	ldi	r22, 0x80	; 128
    3fa0:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    3fa4:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    3fa8:	0e 94 69 1f 	call	0x3ed2	; 0x3ed2 <FLASH_Column_Address>
    3fac:	1e bc       	out	0x2e, r1	; 46
    3fae:	0d b4       	in	r0, 0x2d	; 45
    3fb0:	07 fe       	sbrs	r0, 7
    3fb2:	fd cf       	rjmp	.-6      	; 0x3fae <FLASH_Read_From_Cache_x1+0x30>
    3fb4:	8e b5       	in	r24, 0x2e	; 46
    3fb6:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3fba:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    3fbe:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    3fc2:	0e 94 c6 1b 	call	0x378c	; 0x378c <FLASH_Data_Storage>
    3fc6:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3fca:	08 95       	ret

Disassembly of section .text.FLASH_Status:

00003a78 <FLASH_Status>:
    3a78:	cf 92       	push	r12
    3a7a:	df 92       	push	r13
    3a7c:	ef 92       	push	r14
    3a7e:	ff 92       	push	r15
    3a80:	0f 93       	push	r16
    3a82:	cf 93       	push	r28
    3a84:	df 93       	push	r29
    3a86:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3a8a:	8f e0       	ldi	r24, 0x0F	; 15
    3a8c:	8e bd       	out	0x2e, r24	; 46
    3a8e:	0d b4       	in	r0, 0x2d	; 45
    3a90:	07 fe       	sbrs	r0, 7
    3a92:	fd cf       	rjmp	.-6      	; 0x3a8e <FLASH_Status+0x16>
    3a94:	8e b5       	in	r24, 0x2e	; 46
    3a96:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3a9a:	80 ec       	ldi	r24, 0xC0	; 192
    3a9c:	8e bd       	out	0x2e, r24	; 46
    3a9e:	0d b4       	in	r0, 0x2d	; 45
    3aa0:	07 fe       	sbrs	r0, 7
    3aa2:	fd cf       	rjmp	.-6      	; 0x3a9e <FLASH_Status+0x26>
    3aa4:	8e b5       	in	r24, 0x2e	; 46
    3aa6:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3aaa:	1e bc       	out	0x2e, r1	; 46
    3aac:	0d b4       	in	r0, 0x2d	; 45
    3aae:	07 fe       	sbrs	r0, 7
    3ab0:	fd cf       	rjmp	.-6      	; 0x3aac <FLASH_Status+0x34>
    3ab2:	8e b5       	in	r24, 0x2e	; 46
    3ab4:	cf e1       	ldi	r28, 0x1F	; 31
    3ab6:	d2 e1       	ldi	r29, 0x12	; 18
    3ab8:	88 83       	st	Y, r24
    3aba:	7e 01       	movw	r14, r28
    3abc:	80 e8       	ldi	r24, 0x80	; 128
    3abe:	08 2f       	mov	r16, r24
    3ac0:	0f 2e       	mov	r0, r31
    3ac2:	f0 e0       	ldi	r31, 0x00	; 0
    3ac4:	cf 2e       	mov	r12, r31
    3ac6:	fa e0       	ldi	r31, 0x0A	; 10
    3ac8:	df 2e       	mov	r13, r31
    3aca:	f0 2d       	mov	r31, r0
    3acc:	2a ea       	ldi	r18, 0xAA	; 170
    3ace:	35 e0       	ldi	r19, 0x05	; 5
    3ad0:	40 e0       	ldi	r20, 0x00	; 0
    3ad2:	60 e0       	ldi	r22, 0x00	; 0
    3ad4:	70 e0       	ldi	r23, 0x00	; 0
    3ad6:	81 e0       	ldi	r24, 0x01	; 1
    3ad8:	90 e0       	ldi	r25, 0x00	; 0
    3ada:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <Print_To_User>
    3ade:	88 81       	ld	r24, Y
    3ae0:	80 fd       	sbrc	r24, 0
    3ae2:	e3 cf       	rjmp	.-58     	; 0x3aaa <FLASH_Status+0x32>
    3ae4:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3ae8:	df 91       	pop	r29
    3aea:	cf 91       	pop	r28
    3aec:	0f 91       	pop	r16
    3aee:	ff 90       	pop	r15
    3af0:	ef 90       	pop	r14
    3af2:	df 90       	pop	r13
    3af4:	cf 90       	pop	r12
    3af6:	08 95       	ret

Disassembly of section .text.FLASH_Program_Execute:

000042b8 <FLASH_Program_Execute>:

void FLASH_Program_Execute() //new command to transfer data from cache to main array
{	
	FLASH_NAND_CS_ENABLE();
    42b8:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
	
	//code below sends Program_Execute command with the starting address of the main array
	SPDR = PROGRAM_EXECUTE; //Sending Program Execute Command into SPI Data Register (SPDR)
    42bc:	80 e1       	ldi	r24, 0x10	; 16
    42be:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1 << SPIF))); 
    42c0:	0d b4       	in	r0, 0x2d	; 45
    42c2:	07 fe       	sbrs	r0, 7
    42c4:	fd cf       	rjmp	.-6      	; 0x42c0 <FLASH_Program_Execute+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    42c6:	8e b5       	in	r24, 0x2e	; 46
    42c8:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	
	//_delay_us(5);
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to write data to in MainArray
    42cc:	46 e2       	ldi	r20, 0x26	; 38
    42ce:	52 e1       	ldi	r21, 0x12	; 18
    42d0:	60 e8       	ldi	r22, 0x80	; 128
    42d2:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    42d6:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    42da:	0e 94 7d 1a 	call	0x34fa	; 0x34fa <FLASH_MainArray_Address>
	
	FLASH_NAND_CS_DISABLE();
    42de:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
	
	//USART_Data("Program Execute \n");
	
	FLASH_Status(); //checks for the status of data transfer from cache to main array from program_execute command
    42e2:	0e 94 3c 1d 	call	0x3a78	; 0x3a78 <FLASH_Status>
    42e6:	08 95       	ret

Disassembly of section .text.FLASH_Page_Read:

000041a8 <FLASH_Page_Read>:
}

void FLASH_Page_Read() //reads a single page data from Block/Page array to transfer to Cache register
{
	FLASH_NAND_CS_ENABLE();
    41a8:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
	
	SPDR = PAGE_READ; //Sending Page_Read Command into SPI Data Register (SPDR)
    41ac:	83 e1       	ldi	r24, 0x13	; 19
    41ae:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    41b0:	0d b4       	in	r0, 0x2d	; 45
    41b2:	07 fe       	sbrs	r0, 7
    41b4:	fd cf       	rjmp	.-6      	; 0x41b0 <FLASH_Page_Read+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    41b6:	8e b5       	in	r24, 0x2e	; 46
    41b8:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	
	//_delay_us(5);
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to read data from in MainArray
    41bc:	46 e2       	ldi	r20, 0x26	; 38
    41be:	52 e1       	ldi	r21, 0x12	; 18
    41c0:	60 e8       	ldi	r22, 0x80	; 128
    41c2:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    41c6:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    41ca:	0e 94 7d 1a 	call	0x34fa	; 0x34fa <FLASH_MainArray_Address>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    41ce:	00 c0       	rjmp	.+0      	; 0x41d0 <FLASH_Page_Read+0x28>
    41d0:	00 c0       	rjmp	.+0      	; 0x41d2 <FLASH_Page_Read+0x2a>
	
	_delay_us(0.200);
	
	FLASH_NAND_CS_DISABLE();
    41d2:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>

	FLASH_Status(); //checks for the status of data transfer from main array to cache from page_read command
    41d6:	0e 94 3c 1d 	call	0x3a78	; 0x3a78 <FLASH_Status>
	
	//USART_Data("Page Read \n");
	
	FLASH_Read_From_Cache_x1();
    41da:	0e 94 bf 1f 	call	0x3f7e	; 0x3f7e <FLASH_Read_From_Cache_x1>
    41de:	08 95       	ret

Disassembly of section .text.FLASH_Para_Pg:

00003f2e <FLASH_Para_Pg>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3f2e:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3f32:	8f e1       	ldi	r24, 0x1F	; 31
    3f34:	8e bd       	out	0x2e, r24	; 46
    3f36:	0d b4       	in	r0, 0x2d	; 45
    3f38:	07 fe       	sbrs	r0, 7
    3f3a:	fd cf       	rjmp	.-6      	; 0x3f36 <FLASH_Para_Pg+0x8>
    3f3c:	80 eb       	ldi	r24, 0xB0	; 176
    3f3e:	8e bd       	out	0x2e, r24	; 46
    3f40:	0d b4       	in	r0, 0x2d	; 45
    3f42:	07 fe       	sbrs	r0, 7
    3f44:	fd cf       	rjmp	.-6      	; 0x3f40 <FLASH_Para_Pg+0x12>
    3f46:	80 e4       	ldi	r24, 0x40	; 64
    3f48:	8e bd       	out	0x2e, r24	; 46
    3f4a:	0d b4       	in	r0, 0x2d	; 45
    3f4c:	07 fe       	sbrs	r0, 7
    3f4e:	fd cf       	rjmp	.-6      	; 0x3f4a <FLASH_Para_Pg+0x1c>
    3f50:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3f54:	0e 94 d4 20 	call	0x41a8	; 0x41a8 <FLASH_Page_Read>
    3f58:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3f5c:	8f e1       	ldi	r24, 0x1F	; 31
    3f5e:	8e bd       	out	0x2e, r24	; 46
    3f60:	0d b4       	in	r0, 0x2d	; 45
    3f62:	07 fe       	sbrs	r0, 7
    3f64:	fd cf       	rjmp	.-6      	; 0x3f60 <FLASH_Para_Pg+0x32>
    3f66:	80 eb       	ldi	r24, 0xB0	; 176
    3f68:	8e bd       	out	0x2e, r24	; 46
    3f6a:	0d b4       	in	r0, 0x2d	; 45
    3f6c:	07 fe       	sbrs	r0, 7
    3f6e:	fd cf       	rjmp	.-6      	; 0x3f6a <FLASH_Para_Pg+0x3c>
    3f70:	1e bc       	out	0x2e, r1	; 46
    3f72:	0d b4       	in	r0, 0x2d	; 45
    3f74:	07 fe       	sbrs	r0, 7
    3f76:	fd cf       	rjmp	.-6      	; 0x3f72 <FLASH_Para_Pg+0x44>
    3f78:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3f7c:	08 95       	ret

Disassembly of section .text.FLASH_Block_Erase:

00004284 <FLASH_Block_Erase>:
	//USART_Data("Read from Cache: \n");
}

void FLASH_Block_Erase() //erases data from Flash Nand Memory at the block level
{
	FLASH_Write_Enable();
    4284:	0e 94 83 22 	call	0x4506	; 0x4506 <FLASH_Write_Enable>
	
	FLASH_NAND_CS_ENABLE();
    4288:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
	
	SPDR = BLOCK_ERASE; //Sending Block_Erase Command into SPI Data Register (SPDR)
    428c:	88 ed       	ldi	r24, 0xD8	; 216
    428e:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    4290:	0d b4       	in	r0, 0x2d	; 45
    4292:	07 fe       	sbrs	r0, 7
    4294:	fd cf       	rjmp	.-6      	; 0x4290 <FLASH_Block_Erase+0xc>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    4296:	8e b5       	in	r24, 0x2e	; 46
    4298:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to write/read data to in MainArray
    429c:	46 e2       	ldi	r20, 0x26	; 38
    429e:	52 e1       	ldi	r21, 0x12	; 18
    42a0:	60 e8       	ldi	r22, 0x80	; 128
    42a2:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    42a6:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    42aa:	0e 94 7d 1a 	call	0x34fa	; 0x34fa <FLASH_MainArray_Address>

	FLASH_NAND_CS_DISABLE();
    42ae:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
	
	FLASH_Status(); //checks for the status of data deletion on the block level from Block_Erase command
    42b2:	0e 94 3c 1d 	call	0x3a78	; 0x3a78 <FLASH_Status>
    42b6:	08 95       	ret

Disassembly of section .text.FLASH_Page_Program:

00003bec <FLASH_Page_Program>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3bec:	cf 93       	push	r28
    3bee:	df 93       	push	r29
    3bf0:	0e 94 42 21 	call	0x4284	; 0x4284 <FLASH_Block_Erase>
    3bf4:	0e 94 83 22 	call	0x4506	; 0x4506 <FLASH_Write_Enable>
    3bf8:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3bfc:	82 e0       	ldi	r24, 0x02	; 2
    3bfe:	8e bd       	out	0x2e, r24	; 46
    3c00:	0d b4       	in	r0, 0x2d	; 45
    3c02:	07 fe       	sbrs	r0, 7
    3c04:	fd cf       	rjmp	.-6      	; 0x3c00 <FLASH_Page_Program+0x14>
    3c06:	8e b5       	in	r24, 0x2e	; 46
    3c08:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3c0c:	8a e1       	ldi	r24, 0x1A	; 26
    3c0e:	8a 95       	dec	r24
    3c10:	f1 f7       	brne	.-4      	; 0x3c0e <FLASH_Page_Program+0x22>
    3c12:	00 c0       	rjmp	.+0      	; 0x3c14 <FLASH_Page_Program+0x28>
    3c14:	46 e2       	ldi	r20, 0x26	; 38
    3c16:	52 e1       	ldi	r21, 0x12	; 18
    3c18:	60 e8       	ldi	r22, 0x80	; 128
    3c1a:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    3c1e:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    3c22:	0e 94 69 1f 	call	0x3ed2	; 0x3ed2 <FLASH_Column_Address>
    3c26:	c0 e0       	ldi	r28, 0x00	; 0
    3c28:	d0 e0       	ldi	r29, 0x00	; 0
    3c2a:	0c c0       	rjmp	.+24     	; 0x3c44 <FLASH_Page_Program+0x58>
    3c2c:	fe 01       	movw	r30, r28
    3c2e:	e2 5d       	subi	r30, 0xD2	; 210
    3c30:	fd 4e       	sbci	r31, 0xED	; 237
    3c32:	80 81       	ld	r24, Z
    3c34:	8e bd       	out	0x2e, r24	; 46
    3c36:	0d b4       	in	r0, 0x2d	; 45
    3c38:	07 fe       	sbrs	r0, 7
    3c3a:	fd cf       	rjmp	.-6      	; 0x3c36 <FLASH_Page_Program+0x4a>
    3c3c:	8e b5       	in	r24, 0x2e	; 46
    3c3e:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3c42:	21 96       	adiw	r28, 0x01	; 1
    3c44:	6e e2       	ldi	r22, 0x2E	; 46
    3c46:	72 e1       	ldi	r23, 0x12	; 18
    3c48:	80 e8       	ldi	r24, 0x80	; 128
    3c4a:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    3c4e:	c8 17       	cp	r28, r24
    3c50:	d9 07       	cpc	r29, r25
    3c52:	60 f3       	brcs	.-40     	; 0x3c2c <FLASH_Page_Program+0x40>
    3c54:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3c58:	0e 94 5c 21 	call	0x42b8	; 0x42b8 <FLASH_Program_Execute>
    3c5c:	df 91       	pop	r29
    3c5e:	cf 91       	pop	r28
    3c60:	08 95       	ret

Disassembly of section .text.Page_Tester:

000030bc <Page_Tester>:
#include "../include/FLASH_NAND_MEMORY.h"
#include "../include/AWS_Board_Operations.h"
#include "../include/NAND_Flash_Formatter.h"

void Page_Tester() //tests each page per block
{
    30bc:	cf 92       	push	r12
    30be:	df 92       	push	r13
    30c0:	ef 92       	push	r14
    30c2:	ff 92       	push	r15
    30c4:	0f 93       	push	r16
    30c6:	cf 93       	push	r28
    30c8:	df 93       	push	r29
	 //first obtain Columns and Block/Page addresses
	USART_Data("---Column Address--- 2 bytes \n");
    30ca:	6b eb       	ldi	r22, 0xBB	; 187
    30cc:	75 e0       	ldi	r23, 0x05	; 5
    30ce:	80 e0       	ldi	r24, 0x00	; 0
    30d0:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
	COLUMN_BLOCK_PAGE_ADDRESSER(false); //obtain the column address
    30d4:	80 e0       	ldi	r24, 0x00	; 0
    30d6:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <COLUMN_BLOCK_PAGE_ADDRESSER>

	USART_Data("---Block/Page Address--- 3 bytes \n");
    30da:	6a ed       	ldi	r22, 0xDA	; 218
    30dc:	75 e0       	ldi	r23, 0x05	; 5
    30de:	80 e0       	ldi	r24, 0x00	; 0
    30e0:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
	COLUMN_BLOCK_PAGE_ADDRESSER(true); //obtain the Block/Page address
    30e4:	81 e0       	ldi	r24, 0x01	; 1
    30e6:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <COLUMN_BLOCK_PAGE_ADDRESSER>
		
	for (int i = 0; i < PAGES_PER_BLOCK; i++)
    30ea:	c0 e0       	ldi	r28, 0x00	; 0
    30ec:	d0 e0       	ldi	r29, 0x00	; 0
    30ee:	3b c0       	rjmp	.+118    	; 0x3166 <Page_Tester+0xaa>
	{
		CLEAR_ARR();
    30f0:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
		FLASH_Page_Read();
    30f4:	0e 94 d4 20 	call	0x41a8	; 0x41a8 <FLASH_Page_Read>
		
		if (Byte_Address[4] == 0x40) //break loop if passed this point (x3F) is where all page bits are set to 1
    30f8:	80 91 2a 12 	lds	r24, 0x122A	; 0x80122a <Byte_Address+0x4>
    30fc:	80 34       	cpi	r24, 0x40	; 64
    30fe:	b1 f1       	breq	.+108    	; 0x316c <Page_Tester+0xb0>
		{
			break;
		}
		
		if (data[0] != 0xFF)
    3100:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <data>
    3104:	8f 3f       	cpi	r24, 0xFF	; 255
    3106:	a9 f0       	breq	.+42     	; 0x3132 <Page_Tester+0x76>
		{
			Print_To_User(1, 4, "0x%02X This Page is marked bad \n", Byte_Address, status_feature);
    3108:	86 e2       	ldi	r24, 0x26	; 38
    310a:	92 e1       	ldi	r25, 0x12	; 18
    310c:	7c 01       	movw	r14, r24
    310e:	20 e8       	ldi	r18, 0x80	; 128
    3110:	02 2f       	mov	r16, r18
    3112:	0f 2e       	mov	r0, r31
    3114:	f0 e0       	ldi	r31, 0x00	; 0
    3116:	cf 2e       	mov	r12, r31
    3118:	fa e0       	ldi	r31, 0x0A	; 10
    311a:	df 2e       	mov	r13, r31
    311c:	f0 2d       	mov	r31, r0
    311e:	2d ef       	ldi	r18, 0xFD	; 253
    3120:	35 e0       	ldi	r19, 0x05	; 5
    3122:	40 e0       	ldi	r20, 0x00	; 0
    3124:	64 e0       	ldi	r22, 0x04	; 4
    3126:	70 e0       	ldi	r23, 0x00	; 0
    3128:	81 e0       	ldi	r24, 0x01	; 1
    312a:	90 e0       	ldi	r25, 0x00	; 0
    312c:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <Print_To_User>
    3130:	14 c0       	rjmp	.+40     	; 0x315a <Page_Tester+0x9e>
		}
		else
		{
			Print_To_User(1, 4, "0x%02X This Page is clean \n", Byte_Address, status_feature);
    3132:	86 e2       	ldi	r24, 0x26	; 38
    3134:	92 e1       	ldi	r25, 0x12	; 18
    3136:	7c 01       	movw	r14, r24
    3138:	20 e8       	ldi	r18, 0x80	; 128
    313a:	02 2f       	mov	r16, r18
    313c:	0f 2e       	mov	r0, r31
    313e:	f0 e0       	ldi	r31, 0x00	; 0
    3140:	cf 2e       	mov	r12, r31
    3142:	fa e0       	ldi	r31, 0x0A	; 10
    3144:	df 2e       	mov	r13, r31
    3146:	f0 2d       	mov	r31, r0
    3148:	2e e1       	ldi	r18, 0x1E	; 30
    314a:	36 e0       	ldi	r19, 0x06	; 6
    314c:	40 e0       	ldi	r20, 0x00	; 0
    314e:	64 e0       	ldi	r22, 0x04	; 4
    3150:	70 e0       	ldi	r23, 0x00	; 0
    3152:	81 e0       	ldi	r24, 0x01	; 1
    3154:	90 e0       	ldi	r25, 0x00	; 0
    3156:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <Print_To_User>
		}
		
		Byte_Address[4]++; //increment page hopefully...
    315a:	e6 e2       	ldi	r30, 0x26	; 38
    315c:	f2 e1       	ldi	r31, 0x12	; 18
    315e:	84 81       	ldd	r24, Z+4	; 0x04
    3160:	8f 5f       	subi	r24, 0xFF	; 255
    3162:	84 83       	std	Z+4, r24	; 0x04
	COLUMN_BLOCK_PAGE_ADDRESSER(false); //obtain the column address

	USART_Data("---Block/Page Address--- 3 bytes \n");
	COLUMN_BLOCK_PAGE_ADDRESSER(true); //obtain the Block/Page address
		
	for (int i = 0; i < PAGES_PER_BLOCK; i++)
    3164:	21 96       	adiw	r28, 0x01	; 1
    3166:	c0 34       	cpi	r28, 0x40	; 64
    3168:	d1 05       	cpc	r29, r1
    316a:	14 f2       	brlt	.-124    	; 0x30f0 <Page_Tester+0x34>
			Print_To_User(1, 4, "0x%02X This Page is clean \n", Byte_Address, status_feature);
		}
		
		Byte_Address[4]++; //increment page hopefully...
	}
}
    316c:	df 91       	pop	r29
    316e:	cf 91       	pop	r28
    3170:	0f 91       	pop	r16
    3172:	ff 90       	pop	r15
    3174:	ef 90       	pop	r14
    3176:	df 90       	pop	r13
    3178:	cf 90       	pop	r12
    317a:	08 95       	ret

Disassembly of section .text.libgcc:

00004618 <__xload_1>:
    4618:	57 fd       	sbrc	r21, 7
    461a:	03 c0       	rjmp	.+6      	; 0x4622 <__xload_1+0xa>
    461c:	5b bf       	out	0x3b, r21	; 59
    461e:	67 91       	elpm	r22, Z+
    4620:	08 95       	ret
    4622:	60 81       	ld	r22, Z
    4624:	08 95       	ret

Disassembly of section .text.__dummy_fini:

000046ba <_fini>:
    46ba:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000046bc <__funcs_on_exit>:
    46bc:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000046be <__simulator_exit>:
    46be:	08 95       	ret

Disassembly of section .text.exit:

00004596 <exit>:
    4596:	ec 01       	movw	r28, r24
    4598:	0e 94 5e 23 	call	0x46bc	; 0x46bc <__funcs_on_exit>
    459c:	0e 94 5d 23 	call	0x46ba	; 0x46ba <_fini>
    45a0:	ce 01       	movw	r24, r28
    45a2:	0e 94 5f 23 	call	0x46be	; 0x46be <__simulator_exit>
    45a6:	ce 01       	movw	r24, r28
    45a8:	0e 94 5b 23 	call	0x46b6	; 0x46b6 <_Exit>

Disassembly of section .text.__wrap_sprintf:

000043be <_sprintf_cdnopuxX>:
    43be:	a0 e0       	ldi	r26, 0x00	; 0
    43c0:	b0 e0       	ldi	r27, 0x00	; 0
    43c2:	e5 ee       	ldi	r30, 0xE5	; 229
    43c4:	f1 e2       	ldi	r31, 0x21	; 33
    43c6:	0c 94 00 21 	jmp	0x4200	; 0x4200 <__prologue_saves__+0x20>
    43ca:	9e 01       	movw	r18, r28
    43cc:	25 5f       	subi	r18, 0xF5	; 245
    43ce:	3f 4f       	sbci	r19, 0xFF	; 255
    43d0:	48 85       	ldd	r20, Y+8	; 0x08
    43d2:	59 85       	ldd	r21, Y+9	; 0x09
    43d4:	6a 85       	ldd	r22, Y+10	; 0x0a
    43d6:	8e 81       	ldd	r24, Y+6	; 0x06
    43d8:	9f 81       	ldd	r25, Y+7	; 0x07
    43da:	0e 94 9c 22 	call	0x4538	; 0x4538 <__vsprintf>
    43de:	e2 e0       	ldi	r30, 0x02	; 2
    43e0:	0c 94 37 21 	jmp	0x426e	; 0x426e <__epilogue_restores__+0x20>

Disassembly of section .text.__fmt_s:

00002ff2 <__fmt_s>:
    2ff2:	2f 92       	push	r2
    2ff4:	3f 92       	push	r3
    2ff6:	4f 92       	push	r4
    2ff8:	6f 92       	push	r6
    2ffa:	7f 92       	push	r7
    2ffc:	8f 92       	push	r8
    2ffe:	af 92       	push	r10
    3000:	bf 92       	push	r11
    3002:	cf 92       	push	r12
    3004:	df 92       	push	r13
    3006:	ef 92       	push	r14
    3008:	ff 92       	push	r15
    300a:	0f 93       	push	r16
    300c:	1f 93       	push	r17
    300e:	cf 93       	push	r28
    3010:	df 93       	push	r29
    3012:	cd b7       	in	r28, 0x3d	; 61
    3014:	de b7       	in	r29, 0x3e	; 62
    3016:	27 97       	sbiw	r28, 0x07	; 7
    3018:	0f b6       	in	r0, 0x3f	; 63
    301a:	f8 94       	cli
    301c:	de bf       	out	0x3e, r29	; 62
    301e:	0f be       	out	0x3f, r0	; 63
    3020:	cd bf       	out	0x3d, r28	; 61
    3022:	6c 01       	movw	r12, r24
    3024:	7b 01       	movw	r14, r22
    3026:	39 01       	movw	r6, r18
    3028:	84 2e       	mov	r8, r20
    302a:	98 01       	movw	r18, r16
    302c:	83 e8       	ldi	r24, 0x83	; 131
    302e:	28 2e       	mov	r2, r24
    3030:	86 e0       	ldi	r24, 0x06	; 6
    3032:	38 2e       	mov	r3, r24
    3034:	80 e0       	ldi	r24, 0x00	; 0
    3036:	48 2e       	mov	r4, r24
    3038:	87 e0       	ldi	r24, 0x07	; 7
    303a:	f1 01       	movw	r30, r2
    303c:	ae 01       	movw	r20, r28
    303e:	4f 5f       	subi	r20, 0xFF	; 255
    3040:	5f 4f       	sbci	r21, 0xFF	; 255
    3042:	da 01       	movw	r26, r20
    3044:	74 2d       	mov	r23, r4
    3046:	0e 94 75 22 	call	0x44ea	; 0x44ea <__movmemx_qi>
    304a:	f7 01       	movw	r30, r14
    304c:	02 81       	ldd	r16, Z+2	; 0x02
    304e:	13 81       	ldd	r17, Z+3	; 0x03
    3050:	a4 80       	ldd	r10, Z+4	; 0x04
    3052:	b5 80       	ldd	r11, Z+5	; 0x05
    3054:	e0 80       	ld	r14, Z
    3056:	f1 80       	ldd	r15, Z+1	; 0x01
    3058:	61 14       	cp	r6, r1
    305a:	71 04       	cpc	r7, r1
    305c:	81 04       	cpc	r8, r1
    305e:	19 f4       	brne	.+6      	; 0x3066 <__fmt_s+0x74>
    3060:	3a 01       	movw	r6, r20
    3062:	f0 e8       	ldi	r31, 0x80	; 128
    3064:	8f 2e       	mov	r8, r31
    3066:	21 15       	cp	r18, r1
    3068:	31 05       	cpc	r19, r1
    306a:	29 f4       	brne	.+10     	; 0x3076 <__fmt_s+0x84>
    306c:	88 2d       	mov	r24, r8
    306e:	b3 01       	movw	r22, r6
    3070:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    3074:	9c 01       	movw	r18, r24
    3076:	17 fd       	sbrc	r17, 7
    3078:	04 c0       	rjmp	.+8      	; 0x3082 <__fmt_s+0x90>
    307a:	02 17       	cp	r16, r18
    307c:	13 07       	cpc	r17, r19
    307e:	08 f4       	brcc	.+2      	; 0x3082 <__fmt_s+0x90>
    3080:	98 01       	movw	r18, r16
    3082:	85 01       	movw	r16, r10
    3084:	68 2d       	mov	r22, r8
    3086:	a3 01       	movw	r20, r6
    3088:	c6 01       	movw	r24, r12
    308a:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__pad>
    308e:	27 96       	adiw	r28, 0x07	; 7
    3090:	0f b6       	in	r0, 0x3f	; 63
    3092:	f8 94       	cli
    3094:	de bf       	out	0x3e, r29	; 62
    3096:	0f be       	out	0x3f, r0	; 63
    3098:	cd bf       	out	0x3d, r28	; 61
    309a:	df 91       	pop	r29
    309c:	cf 91       	pop	r28
    309e:	1f 91       	pop	r17
    30a0:	0f 91       	pop	r16
    30a2:	ff 90       	pop	r15
    30a4:	ef 90       	pop	r14
    30a6:	df 90       	pop	r13
    30a8:	cf 90       	pop	r12
    30aa:	bf 90       	pop	r11
    30ac:	af 90       	pop	r10
    30ae:	8f 90       	pop	r8
    30b0:	7f 90       	pop	r7
    30b2:	6f 90       	pop	r6
    30b4:	4f 90       	pop	r4
    30b6:	3f 90       	pop	r3
    30b8:	2f 90       	pop	r2
    30ba:	08 95       	ret

Disassembly of section .text.__out:

00003d4a <__out>:
    3d4a:	6f 92       	push	r6
    3d4c:	7f 92       	push	r7
    3d4e:	8f 92       	push	r8
    3d50:	cf 92       	push	r12
    3d52:	df 92       	push	r13
    3d54:	ef 92       	push	r14
    3d56:	0f 93       	push	r16
    3d58:	1f 93       	push	r17
    3d5a:	cf 93       	push	r28
    3d5c:	df 93       	push	r29
    3d5e:	8c 01       	movw	r16, r24
    3d60:	6a 01       	movw	r12, r20
    3d62:	e6 2e       	mov	r14, r22
    3d64:	e9 01       	movw	r28, r18
    3d66:	3a 01       	movw	r6, r20
    3d68:	86 2e       	mov	r8, r22
    3d6a:	62 0e       	add	r6, r18
    3d6c:	73 1e       	adc	r7, r19
    3d6e:	81 1c       	adc	r8, r1
    3d70:	37 fd       	sbrc	r19, 7
    3d72:	8a 94       	dec	r8
    3d74:	c6 14       	cp	r12, r6
    3d76:	d7 04       	cpc	r13, r7
    3d78:	e8 04       	cpc	r14, r8
    3d7a:	81 f0       	breq	.+32     	; 0x3d9c <__out+0x52>
    3d7c:	f6 01       	movw	r30, r12
    3d7e:	5e 2d       	mov	r21, r14
    3d80:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    3d84:	86 2f       	mov	r24, r22
    3d86:	b8 01       	movw	r22, r16
    3d88:	08 2e       	mov	r0, r24
    3d8a:	00 0c       	add	r0, r0
    3d8c:	99 0b       	sbc	r25, r25
    3d8e:	0e 94 68 1c 	call	0x38d0	; 0x38d0 <fputc>
    3d92:	8f ef       	ldi	r24, 0xFF	; 255
    3d94:	c8 1a       	sub	r12, r24
    3d96:	d8 0a       	sbc	r13, r24
    3d98:	e8 0a       	sbc	r14, r24
    3d9a:	ec cf       	rjmp	.-40     	; 0x3d74 <__out+0x2a>
    3d9c:	ce 01       	movw	r24, r28
    3d9e:	df 91       	pop	r29
    3da0:	cf 91       	pop	r28
    3da2:	1f 91       	pop	r17
    3da4:	0f 91       	pop	r16
    3da6:	ef 90       	pop	r14
    3da8:	df 90       	pop	r13
    3daa:	cf 90       	pop	r12
    3dac:	8f 90       	pop	r8
    3dae:	7f 90       	pop	r7
    3db0:	6f 90       	pop	r6
    3db2:	08 95       	ret

Disassembly of section .text.__pad:

00002ab8 <__pad>:
    2ab8:	2f 92       	push	r2
    2aba:	3f 92       	push	r3
    2abc:	4f 92       	push	r4
    2abe:	6f 92       	push	r6
    2ac0:	7f 92       	push	r7
    2ac2:	8f 92       	push	r8
    2ac4:	af 92       	push	r10
    2ac6:	bf 92       	push	r11
    2ac8:	cf 92       	push	r12
    2aca:	df 92       	push	r13
    2acc:	ef 92       	push	r14
    2ace:	ff 92       	push	r15
    2ad0:	0f 93       	push	r16
    2ad2:	1f 93       	push	r17
    2ad4:	cf 93       	push	r28
    2ad6:	df 93       	push	r29
    2ad8:	cd b7       	in	r28, 0x3d	; 61
    2ada:	de b7       	in	r29, 0x3e	; 62
    2adc:	66 97       	sbiw	r28, 0x16	; 22
    2ade:	0f b6       	in	r0, 0x3f	; 63
    2ae0:	f8 94       	cli
    2ae2:	de bf       	out	0x3e, r29	; 62
    2ae4:	0f be       	out	0x3f, r0	; 63
    2ae6:	cd bf       	out	0x3d, r28	; 61
    2ae8:	5c 01       	movw	r10, r24
    2aea:	3a 01       	movw	r6, r20
    2aec:	86 2e       	mov	r8, r22
    2aee:	69 01       	movw	r12, r18
    2af0:	c7 01       	movw	r24, r14
    2af2:	81 70       	andi	r24, 0x01	; 1
    2af4:	99 27       	eor	r25, r25
    2af6:	9c 8b       	std	Y+20, r25	; 0x14
    2af8:	8b 8b       	std	Y+19, r24	; 0x13
    2afa:	e0 fc       	sbrc	r14, 0
    2afc:	1d c0       	rjmp	.+58     	; 0x2b38 <__pad+0x80>
    2afe:	20 17       	cp	r18, r16
    2b00:	31 07       	cpc	r19, r17
    2b02:	d4 f4       	brge	.+52     	; 0x2b38 <__pad+0x80>
    2b04:	78 01       	movw	r14, r16
    2b06:	ec 18       	sub	r14, r12
    2b08:	fd 08       	sbc	r15, r13
    2b0a:	fe 8a       	std	Y+22, r15	; 0x16
    2b0c:	ed 8a       	std	Y+21, r14	; 0x15
    2b0e:	a7 01       	movw	r20, r14
    2b10:	91 e1       	ldi	r25, 0x11	; 17
    2b12:	e9 16       	cp	r14, r25
    2b14:	f1 04       	cpc	r15, r1
    2b16:	10 f0       	brcs	.+4      	; 0x2b1c <__pad+0x64>
    2b18:	40 e1       	ldi	r20, 0x10	; 16
    2b1a:	50 e0       	ldi	r21, 0x00	; 0
    2b1c:	60 e2       	ldi	r22, 0x20	; 32
    2b1e:	70 e0       	ldi	r23, 0x00	; 0
    2b20:	ce 01       	movw	r24, r28
    2b22:	01 96       	adiw	r24, 0x01	; 1
    2b24:	9a 8b       	std	Y+18, r25	; 0x12
    2b26:	89 8b       	std	Y+17, r24	; 0x11
    2b28:	0e 94 d6 22 	call	0x45ac	; 0x45ac <memset>
    2b2c:	89 89       	ldd	r24, Y+17	; 0x11
    2b2e:	9a 89       	ldd	r25, Y+18	; 0x12
    2b30:	1c 01       	movw	r2, r24
    2b32:	20 e8       	ldi	r18, 0x80	; 128
    2b34:	42 2e       	mov	r4, r18
    2b36:	0b c0       	rjmp	.+22     	; 0x2b4e <__pad+0x96>
    2b38:	96 01       	movw	r18, r12
    2b3a:	68 2d       	mov	r22, r8
    2b3c:	a3 01       	movw	r20, r6
    2b3e:	c5 01       	movw	r24, r10
    2b40:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <__out>
    2b44:	c0 16       	cp	r12, r16
    2b46:	d1 06       	cpc	r13, r17
    2b48:	ec f2       	brlt	.-70     	; 0x2b04 <__pad+0x4c>
    2b4a:	c6 01       	movw	r24, r12
    2b4c:	25 c0       	rjmp	.+74     	; 0x2b98 <__pad+0xe0>
    2b4e:	90 e1       	ldi	r25, 0x10	; 16
    2b50:	e9 16       	cp	r14, r25
    2b52:	f1 04       	cpc	r15, r1
    2b54:	58 f0       	brcs	.+22     	; 0x2b6c <__pad+0xb4>
    2b56:	20 e1       	ldi	r18, 0x10	; 16
    2b58:	30 e0       	ldi	r19, 0x00	; 0
    2b5a:	64 2d       	mov	r22, r4
    2b5c:	a1 01       	movw	r20, r2
    2b5e:	c5 01       	movw	r24, r10
    2b60:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <__out>
    2b64:	80 e1       	ldi	r24, 0x10	; 16
    2b66:	e8 1a       	sub	r14, r24
    2b68:	f1 08       	sbc	r15, r1
    2b6a:	f1 cf       	rjmp	.-30     	; 0x2b4e <__pad+0x96>
    2b6c:	2d 89       	ldd	r18, Y+21	; 0x15
    2b6e:	3e 89       	ldd	r19, Y+22	; 0x16
    2b70:	2f 70       	andi	r18, 0x0F	; 15
    2b72:	33 27       	eor	r19, r19
    2b74:	89 89       	ldd	r24, Y+17	; 0x11
    2b76:	9a 89       	ldd	r25, Y+18	; 0x12
    2b78:	ac 01       	movw	r20, r24
    2b7a:	60 e8       	ldi	r22, 0x80	; 128
    2b7c:	c5 01       	movw	r24, r10
    2b7e:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <__out>
    2b82:	8b 89       	ldd	r24, Y+19	; 0x13
    2b84:	9c 89       	ldd	r25, Y+20	; 0x14
    2b86:	89 2b       	or	r24, r25
    2b88:	31 f4       	brne	.+12     	; 0x2b96 <__pad+0xde>
    2b8a:	96 01       	movw	r18, r12
    2b8c:	68 2d       	mov	r22, r8
    2b8e:	a3 01       	movw	r20, r6
    2b90:	c5 01       	movw	r24, r10
    2b92:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <__out>
    2b96:	c8 01       	movw	r24, r16
    2b98:	66 96       	adiw	r28, 0x16	; 22
    2b9a:	0f b6       	in	r0, 0x3f	; 63
    2b9c:	f8 94       	cli
    2b9e:	de bf       	out	0x3e, r29	; 62
    2ba0:	0f be       	out	0x3f, r0	; 63
    2ba2:	cd bf       	out	0x3d, r28	; 61
    2ba4:	df 91       	pop	r29
    2ba6:	cf 91       	pop	r28
    2ba8:	1f 91       	pop	r17
    2baa:	0f 91       	pop	r16
    2bac:	ff 90       	pop	r15
    2bae:	ef 90       	pop	r14
    2bb0:	df 90       	pop	r13
    2bb2:	cf 90       	pop	r12
    2bb4:	bf 90       	pop	r11
    2bb6:	af 90       	pop	r10
    2bb8:	8f 90       	pop	r8
    2bba:	7f 90       	pop	r7
    2bbc:	6f 90       	pop	r6
    2bbe:	4f 90       	pop	r4
    2bc0:	3f 90       	pop	r3
    2bc2:	2f 90       	pop	r2
    2bc4:	08 95       	ret

Disassembly of section .text.__fmt_state:

000035a0 <__fmt_state>:
    35a0:	cf 92       	push	r12
    35a2:	df 92       	push	r13
    35a4:	ef 92       	push	r14
    35a6:	dc 01       	movw	r26, r24
    35a8:	90 e0       	ldi	r25, 0x00	; 0
    35aa:	29 2f       	mov	r18, r25
    35ac:	30 e0       	ldi	r19, 0x00	; 0
    35ae:	22 0f       	add	r18, r18
    35b0:	33 1f       	adc	r19, r19
    35b2:	69 01       	movw	r12, r18
    35b4:	03 2e       	mov	r0, r19
    35b6:	00 0c       	add	r0, r0
    35b8:	ee 08       	sbc	r14, r14
    35ba:	6e 2d       	mov	r22, r14
    35bc:	a6 01       	movw	r20, r12
    35be:	46 5c       	subi	r20, 0xC6	; 198
    35c0:	59 4f       	sbci	r21, 0xF9	; 249
    35c2:	6f 4f       	sbci	r22, 0xFF	; 255
    35c4:	6a 01       	movw	r12, r20
    35c6:	e6 2e       	mov	r14, r22
    35c8:	fa 01       	movw	r30, r20
    35ca:	5e 2d       	mov	r21, r14
    35cc:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    35d0:	86 2f       	mov	r24, r22
    35d2:	61 11       	cpse	r22, r1
    35d4:	0e c0       	rjmp	.+28     	; 0x35f2 <__fmt_state+0x52>
    35d6:	2f 5f       	subi	r18, 0xFF	; 255
    35d8:	3f 4f       	sbci	r19, 0xFF	; 255
    35da:	03 2e       	mov	r0, r19
    35dc:	00 0c       	add	r0, r0
    35de:	44 0b       	sbc	r20, r20
    35e0:	26 5c       	subi	r18, 0xC6	; 198
    35e2:	39 4f       	sbci	r19, 0xF9	; 249
    35e4:	4f 4f       	sbci	r20, 0xFF	; 255
    35e6:	f9 01       	movw	r30, r18
    35e8:	54 2f       	mov	r21, r20
    35ea:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    35ee:	86 2f       	mov	r24, r22
    35f0:	25 c0       	rjmp	.+74     	; 0x363c <__fmt_state+0x9c>
    35f2:	cd 90       	ld	r12, X+
    35f4:	dd 90       	ld	r13, X+
    35f6:	ec 90       	ld	r14, X
    35f8:	12 97       	sbiw	r26, 0x02	; 2
    35fa:	f6 01       	movw	r30, r12
    35fc:	5e 2d       	mov	r21, r14
    35fe:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    3602:	86 13       	cpse	r24, r22
    3604:	16 c0       	rjmp	.+44     	; 0x3632 <__fmt_state+0x92>
    3606:	2f 5f       	subi	r18, 0xFF	; 255
    3608:	3f 4f       	sbci	r19, 0xFF	; 255
    360a:	03 2e       	mov	r0, r19
    360c:	00 0c       	add	r0, r0
    360e:	44 0b       	sbc	r20, r20
    3610:	26 5c       	subi	r18, 0xC6	; 198
    3612:	39 4f       	sbci	r19, 0xF9	; 249
    3614:	4f 4f       	sbci	r20, 0xFF	; 255
    3616:	f9 01       	movw	r30, r18
    3618:	54 2f       	mov	r21, r20
    361a:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    361e:	96 2f       	mov	r25, r22
    3620:	5f ef       	ldi	r21, 0xFF	; 255
    3622:	c5 1a       	sub	r12, r21
    3624:	d5 0a       	sbc	r13, r21
    3626:	e5 0a       	sbc	r14, r21
    3628:	cd 92       	st	X+, r12
    362a:	dd 92       	st	X+, r13
    362c:	ec 92       	st	X, r14
    362e:	12 97       	sbiw	r26, 0x02	; 2
    3630:	01 c0       	rjmp	.+2      	; 0x3634 <__fmt_state+0x94>
    3632:	9f 5f       	subi	r25, 0xFF	; 255
    3634:	9b 30       	cpi	r25, 0x0B	; 11
    3636:	08 f4       	brcc	.+2      	; 0x363a <__fmt_state+0x9a>
    3638:	b8 cf       	rjmp	.-144    	; 0x35aa <__fmt_state+0xa>
    363a:	89 2f       	mov	r24, r25
    363c:	ef 90       	pop	r14
    363e:	df 90       	pop	r13
    3640:	cf 90       	pop	r12
    3642:	08 95       	ret

Disassembly of section .text.__printf_core:

00000690 <__printf_core>:
 690:	a3 ea       	ldi	r26, 0xA3	; 163
 692:	b0 e0       	ldi	r27, 0x00	; 0
 694:	ee e4       	ldi	r30, 0x4E	; 78
 696:	f3 e0       	ldi	r31, 0x03	; 3
 698:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
 69c:	4c 01       	movw	r8, r24
 69e:	59 01       	movw	r10, r18
 6a0:	c7 56       	subi	r28, 0x67	; 103
 6a2:	df 4f       	sbci	r29, 0xFF	; 255
 6a4:	48 83       	st	Y, r20
 6a6:	59 83       	std	Y+1, r21	; 0x01
 6a8:	6a 83       	std	Y+2, r22	; 0x02
 6aa:	c9 59       	subi	r28, 0x99	; 153
 6ac:	d0 40       	sbci	r29, 0x00	; 0
 6ae:	21 2c       	mov	r2, r1
 6b0:	31 2c       	mov	r3, r1
 6b2:	6e 01       	movw	r12, r28
 6b4:	2b e8       	ldi	r18, 0x8B	; 139
 6b6:	c2 0e       	add	r12, r18
 6b8:	d1 1c       	adc	r13, r1
 6ba:	85 e2       	ldi	r24, 0x25	; 37
 6bc:	78 2e       	mov	r7, r24
 6be:	26 01       	movw	r4, r12
 6c0:	30 e8       	ldi	r19, 0x80	; 128
 6c2:	63 2e       	mov	r6, r19
 6c4:	ce 01       	movw	r24, r28
 6c6:	8d 56       	subi	r24, 0x6D	; 109
 6c8:	9f 4f       	sbci	r25, 0xFF	; 255
 6ca:	c4 56       	subi	r28, 0x64	; 100
 6cc:	df 4f       	sbci	r29, 0xFF	; 255
 6ce:	99 83       	std	Y+1, r25	; 0x01
 6d0:	88 83       	st	Y, r24
 6d2:	cc 59       	subi	r28, 0x9C	; 156
 6d4:	d0 40       	sbci	r29, 0x00	; 0
 6d6:	9c 01       	movw	r18, r24
 6d8:	40 e8       	ldi	r20, 0x80	; 128
 6da:	cf 55       	subi	r28, 0x5F	; 95
 6dc:	df 4f       	sbci	r29, 0xFF	; 255
 6de:	28 83       	st	Y, r18
 6e0:	39 83       	std	Y+1, r19	; 0x01
 6e2:	4a 83       	std	Y+2, r20	; 0x02
 6e4:	c1 5a       	subi	r28, 0xA1	; 161
 6e6:	d0 40       	sbci	r29, 0x00	; 0
 6e8:	c7 56       	subi	r28, 0x67	; 103
 6ea:	df 4f       	sbci	r29, 0xFF	; 255
 6ec:	48 81       	ld	r20, Y
 6ee:	c9 59       	subi	r28, 0x99	; 153
 6f0:	d0 40       	sbci	r29, 0x00	; 0
 6f2:	c6 56       	subi	r28, 0x66	; 102
 6f4:	df 4f       	sbci	r29, 0xFF	; 255
 6f6:	b8 81       	ld	r27, Y
 6f8:	ca 59       	subi	r28, 0x9A	; 154
 6fa:	d0 40       	sbci	r29, 0x00	; 0
 6fc:	c5 56       	subi	r28, 0x65	; 101
 6fe:	df 4f       	sbci	r29, 0xFF	; 255
 700:	78 81       	ld	r23, Y
 702:	cb 59       	subi	r28, 0x9B	; 155
 704:	d0 40       	sbci	r29, 0x00	; 0
 706:	e4 2f       	mov	r30, r20
 708:	fb 2f       	mov	r31, r27
 70a:	57 2f       	mov	r21, r23
 70c:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 710:	66 23       	and	r22, r22
 712:	09 f4       	brne	.+2      	; 0x716 <__printf_core+0x86>
 714:	d0 c3       	rjmp	.+1952   	; 0xeb6 <__printf_core+0x826>
 716:	cf 57       	subi	r28, 0x7F	; 127
 718:	df 4f       	sbci	r29, 0xFF	; 255
 71a:	19 82       	std	Y+1, r1	; 0x01
 71c:	18 82       	st	Y, r1
 71e:	c1 58       	subi	r28, 0x81	; 129
 720:	d0 40       	sbci	r29, 0x00	; 0
 722:	8f ef       	ldi	r24, 0xFF	; 255
 724:	9f ef       	ldi	r25, 0xFF	; 255
 726:	cd 57       	subi	r28, 0x7D	; 125
 728:	df 4f       	sbci	r29, 0xFF	; 255
 72a:	99 83       	std	Y+1, r25	; 0x01
 72c:	88 83       	st	Y, r24
 72e:	c3 58       	subi	r28, 0x83	; 131
 730:	d0 40       	sbci	r29, 0x00	; 0
 732:	cb 57       	subi	r28, 0x7B	; 123
 734:	df 4f       	sbci	r29, 0xFF	; 255
 736:	19 82       	std	Y+1, r1	; 0x01
 738:	18 82       	st	Y, r1
 73a:	c5 58       	subi	r28, 0x85	; 133
 73c:	d0 40       	sbci	r29, 0x00	; 0
 73e:	e1 e0       	ldi	r30, 0x01	; 1
 740:	f0 e0       	ldi	r31, 0x00	; 0
 742:	ec 0f       	add	r30, r28
 744:	fd 1f       	adc	r31, r29
 746:	c9 57       	subi	r28, 0x79	; 121
 748:	df 4f       	sbci	r29, 0xFF	; 255
 74a:	f9 83       	std	Y+1, r31	; 0x01
 74c:	e8 83       	st	Y, r30
 74e:	c7 58       	subi	r28, 0x87	; 135
 750:	d0 40       	sbci	r29, 0x00	; 0
 752:	20 e8       	ldi	r18, 0x80	; 128
 754:	30 e0       	ldi	r19, 0x00	; 0
 756:	c7 57       	subi	r28, 0x77	; 119
 758:	df 4f       	sbci	r29, 0xFF	; 255
 75a:	39 83       	std	Y+1, r19	; 0x01
 75c:	28 83       	st	Y, r18
 75e:	c9 58       	subi	r28, 0x89	; 137
 760:	d0 40       	sbci	r29, 0x00	; 0
 762:	84 2f       	mov	r24, r20
 764:	9b 2f       	mov	r25, r27
 766:	a7 2f       	mov	r26, r23
 768:	e1 2c       	mov	r14, r1
 76a:	f1 2c       	mov	r15, r1
 76c:	fc 01       	movw	r30, r24
 76e:	5a 2f       	mov	r21, r26
 770:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 774:	61 11       	cpse	r22, r1
 776:	1d c0       	rjmp	.+58     	; 0x7b2 <__printf_core+0x122>
 778:	e1 14       	cp	r14, r1
 77a:	f1 04       	cpc	r15, r1
 77c:	11 f1       	breq	.+68     	; 0x7c2 <__printf_core+0x132>
 77e:	97 01       	movw	r18, r14
 780:	5b 2f       	mov	r21, r27
 782:	67 2f       	mov	r22, r23
 784:	c4 01       	movw	r24, r8
 786:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <__out>
 78a:	c7 56       	subi	r28, 0x67	; 103
 78c:	df 4f       	sbci	r29, 0xFF	; 255
 78e:	88 81       	ld	r24, Y
 790:	99 81       	ldd	r25, Y+1	; 0x01
 792:	aa 81       	ldd	r26, Y+2	; 0x02
 794:	c9 59       	subi	r28, 0x99	; 153
 796:	d0 40       	sbci	r29, 0x00	; 0
 798:	8e 0d       	add	r24, r14
 79a:	9f 1d       	adc	r25, r15
 79c:	a1 1d       	adc	r26, r1
 79e:	f7 fc       	sbrc	r15, 7
 7a0:	aa 95       	dec	r26
 7a2:	c7 56       	subi	r28, 0x67	; 103
 7a4:	df 4f       	sbci	r29, 0xFF	; 255
 7a6:	88 83       	st	Y, r24
 7a8:	99 83       	std	Y+1, r25	; 0x01
 7aa:	aa 83       	std	Y+2, r26	; 0x02
 7ac:	c9 59       	subi	r28, 0x99	; 153
 7ae:	d0 40       	sbci	r29, 0x00	; 0
 7b0:	08 c0       	rjmp	.+16     	; 0x7c2 <__printf_core+0x132>
 7b2:	01 96       	adiw	r24, 0x01	; 1
 7b4:	a1 1d       	adc	r26, r1
 7b6:	65 32       	cpi	r22, 0x25	; 37
 7b8:	f9 f2       	breq	.-66     	; 0x778 <__printf_core+0xe8>
 7ba:	3f ef       	ldi	r19, 0xFF	; 255
 7bc:	e3 1a       	sub	r14, r19
 7be:	f3 0a       	sbc	r15, r19
 7c0:	d5 cf       	rjmp	.-86     	; 0x76c <__printf_core+0xdc>
 7c2:	c7 56       	subi	r28, 0x67	; 103
 7c4:	df 4f       	sbci	r29, 0xFF	; 255
 7c6:	88 81       	ld	r24, Y
 7c8:	99 81       	ldd	r25, Y+1	; 0x01
 7ca:	aa 81       	ldd	r26, Y+2	; 0x02
 7cc:	c9 59       	subi	r28, 0x99	; 153
 7ce:	d0 40       	sbci	r29, 0x00	; 0
 7d0:	fc 01       	movw	r30, r24
 7d2:	5a 2f       	mov	r21, r26
 7d4:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 7d8:	65 32       	cpi	r22, 0x25	; 37
 7da:	09 f0       	breq	.+2      	; 0x7de <__printf_core+0x14e>
 7dc:	5a c3       	rjmp	.+1716   	; 0xe92 <__printf_core+0x802>
 7de:	9c 01       	movw	r18, r24
 7e0:	4a 2f       	mov	r20, r26
 7e2:	2f 5f       	subi	r18, 0xFF	; 255
 7e4:	3f 4f       	sbci	r19, 0xFF	; 255
 7e6:	4f 4f       	sbci	r20, 0xFF	; 255
 7e8:	c2 56       	subi	r28, 0x62	; 98
 7ea:	df 4f       	sbci	r29, 0xFF	; 255
 7ec:	28 83       	st	Y, r18
 7ee:	39 83       	std	Y+1, r19	; 0x01
 7f0:	4a 83       	std	Y+2, r20	; 0x02
 7f2:	ce 59       	subi	r28, 0x9E	; 158
 7f4:	d0 40       	sbci	r29, 0x00	; 0
 7f6:	c7 56       	subi	r28, 0x67	; 103
 7f8:	df 4f       	sbci	r29, 0xFF	; 255
 7fa:	28 83       	st	Y, r18
 7fc:	39 83       	std	Y+1, r19	; 0x01
 7fe:	4a 83       	std	Y+2, r20	; 0x02
 800:	c9 59       	subi	r28, 0x99	; 153
 802:	d0 40       	sbci	r29, 0x00	; 0
 804:	c7 56       	subi	r28, 0x67	; 103
 806:	df 4f       	sbci	r29, 0xFF	; 255
 808:	88 81       	ld	r24, Y
 80a:	99 81       	ldd	r25, Y+1	; 0x01
 80c:	aa 81       	ldd	r26, Y+2	; 0x02
 80e:	c9 59       	subi	r28, 0x99	; 153
 810:	d0 40       	sbci	r29, 0x00	; 0
 812:	fc 01       	movw	r30, r24
 814:	5a 2f       	mov	r21, r26
 816:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 81a:	6b 32       	cpi	r22, 0x2B	; 43
 81c:	41 f4       	brne	.+16     	; 0x82e <__printf_core+0x19e>
 81e:	cf 57       	subi	r28, 0x7F	; 127
 820:	df 4f       	sbci	r29, 0xFF	; 255
 822:	28 81       	ld	r18, Y
 824:	39 81       	ldd	r19, Y+1	; 0x01
 826:	c1 58       	subi	r28, 0x81	; 129
 828:	d0 40       	sbci	r29, 0x00	; 0
 82a:	24 60       	ori	r18, 0x04	; 4
 82c:	0b c0       	rjmp	.+22     	; 0x844 <__printf_core+0x1b4>
 82e:	6c 32       	cpi	r22, 0x2C	; 44
 830:	cc f0       	brlt	.+50     	; 0x864 <__printf_core+0x1d4>
 832:	6d 32       	cpi	r22, 0x2D	; 45
 834:	59 f5       	brne	.+86     	; 0x88c <__printf_core+0x1fc>
 836:	cf 57       	subi	r28, 0x7F	; 127
 838:	df 4f       	sbci	r29, 0xFF	; 255
 83a:	28 81       	ld	r18, Y
 83c:	39 81       	ldd	r19, Y+1	; 0x01
 83e:	c1 58       	subi	r28, 0x81	; 129
 840:	d0 40       	sbci	r29, 0x00	; 0
 842:	21 60       	ori	r18, 0x01	; 1
 844:	cf 57       	subi	r28, 0x7F	; 127
 846:	df 4f       	sbci	r29, 0xFF	; 255
 848:	39 83       	std	Y+1, r19	; 0x01
 84a:	28 83       	st	Y, r18
 84c:	c1 58       	subi	r28, 0x81	; 129
 84e:	d0 40       	sbci	r29, 0x00	; 0
 850:	01 96       	adiw	r24, 0x01	; 1
 852:	a1 1d       	adc	r26, r1
 854:	c7 56       	subi	r28, 0x67	; 103
 856:	df 4f       	sbci	r29, 0xFF	; 255
 858:	88 83       	st	Y, r24
 85a:	99 83       	std	Y+1, r25	; 0x01
 85c:	aa 83       	std	Y+2, r26	; 0x02
 85e:	c9 59       	subi	r28, 0x99	; 153
 860:	d0 40       	sbci	r29, 0x00	; 0
 862:	d0 cf       	rjmp	.-96     	; 0x804 <__printf_core+0x174>
 864:	60 32       	cpi	r22, 0x20	; 32
 866:	41 f4       	brne	.+16     	; 0x878 <__printf_core+0x1e8>
 868:	cf 57       	subi	r28, 0x7F	; 127
 86a:	df 4f       	sbci	r29, 0xFF	; 255
 86c:	28 81       	ld	r18, Y
 86e:	39 81       	ldd	r19, Y+1	; 0x01
 870:	c1 58       	subi	r28, 0x81	; 129
 872:	d0 40       	sbci	r29, 0x00	; 0
 874:	28 60       	ori	r18, 0x08	; 8
 876:	e6 cf       	rjmp	.-52     	; 0x844 <__printf_core+0x1b4>
 878:	63 32       	cpi	r22, 0x23	; 35
 87a:	91 f4       	brne	.+36     	; 0x8a0 <__printf_core+0x210>
 87c:	cf 57       	subi	r28, 0x7F	; 127
 87e:	df 4f       	sbci	r29, 0xFF	; 255
 880:	28 81       	ld	r18, Y
 882:	39 81       	ldd	r19, Y+1	; 0x01
 884:	c1 58       	subi	r28, 0x81	; 129
 886:	d0 40       	sbci	r29, 0x00	; 0
 888:	20 61       	ori	r18, 0x10	; 16
 88a:	dc cf       	rjmp	.-72     	; 0x844 <__printf_core+0x1b4>
 88c:	60 33       	cpi	r22, 0x30	; 48
 88e:	41 f4       	brne	.+16     	; 0x8a0 <__printf_core+0x210>
 890:	cf 57       	subi	r28, 0x7F	; 127
 892:	df 4f       	sbci	r29, 0xFF	; 255
 894:	28 81       	ld	r18, Y
 896:	39 81       	ldd	r19, Y+1	; 0x01
 898:	c1 58       	subi	r28, 0x81	; 129
 89a:	d0 40       	sbci	r29, 0x00	; 0
 89c:	22 60       	ori	r18, 0x02	; 2
 89e:	d2 cf       	rjmp	.-92     	; 0x844 <__printf_core+0x1b4>
 8a0:	6a 32       	cpi	r22, 0x2A	; 42
 8a2:	99 f5       	brne	.+102    	; 0x90a <__printf_core+0x27a>
 8a4:	01 96       	adiw	r24, 0x01	; 1
 8a6:	a1 1d       	adc	r26, r1
 8a8:	c7 56       	subi	r28, 0x67	; 103
 8aa:	df 4f       	sbci	r29, 0xFF	; 255
 8ac:	88 83       	st	Y, r24
 8ae:	99 83       	std	Y+1, r25	; 0x01
 8b0:	aa 83       	std	Y+2, r26	; 0x02
 8b2:	c9 59       	subi	r28, 0x99	; 153
 8b4:	d0 40       	sbci	r29, 0x00	; 0
 8b6:	d5 01       	movw	r26, r10
 8b8:	ed 91       	ld	r30, X+
 8ba:	fc 91       	ld	r31, X
 8bc:	11 97       	sbiw	r26, 0x01	; 1
 8be:	cf 01       	movw	r24, r30
 8c0:	02 96       	adiw	r24, 0x02	; 2
 8c2:	8d 93       	st	X+, r24
 8c4:	9c 93       	st	X, r25
 8c6:	80 81       	ld	r24, Z
 8c8:	91 81       	ldd	r25, Z+1	; 0x01
 8ca:	cb 57       	subi	r28, 0x7B	; 123
 8cc:	df 4f       	sbci	r29, 0xFF	; 255
 8ce:	99 83       	std	Y+1, r25	; 0x01
 8d0:	88 83       	st	Y, r24
 8d2:	c5 58       	subi	r28, 0x85	; 133
 8d4:	d0 40       	sbci	r29, 0x00	; 0
 8d6:	97 ff       	sbrs	r25, 7
 8d8:	3f c0       	rjmp	.+126    	; 0x958 <__printf_core+0x2c8>
 8da:	cf 57       	subi	r28, 0x7F	; 127
 8dc:	df 4f       	sbci	r29, 0xFF	; 255
 8de:	28 81       	ld	r18, Y
 8e0:	39 81       	ldd	r19, Y+1	; 0x01
 8e2:	c1 58       	subi	r28, 0x81	; 129
 8e4:	d0 40       	sbci	r29, 0x00	; 0
 8e6:	b1 e0       	ldi	r27, 0x01	; 1
 8e8:	2b 27       	eor	r18, r27
 8ea:	cf 57       	subi	r28, 0x7F	; 127
 8ec:	df 4f       	sbci	r29, 0xFF	; 255
 8ee:	39 83       	std	Y+1, r19	; 0x01
 8f0:	28 83       	st	Y, r18
 8f2:	c1 58       	subi	r28, 0x81	; 129
 8f4:	d0 40       	sbci	r29, 0x00	; 0
 8f6:	91 95       	neg	r25
 8f8:	81 95       	neg	r24
 8fa:	91 09       	sbc	r25, r1
 8fc:	cb 57       	subi	r28, 0x7B	; 123
 8fe:	df 4f       	sbci	r29, 0xFF	; 255
 900:	99 83       	std	Y+1, r25	; 0x01
 902:	88 83       	st	Y, r24
 904:	c5 58       	subi	r28, 0x85	; 133
 906:	d0 40       	sbci	r29, 0x00	; 0
 908:	27 c0       	rjmp	.+78     	; 0x958 <__printf_core+0x2c8>
 90a:	bc 01       	movw	r22, r24
 90c:	8a 2f       	mov	r24, r26
 90e:	0e 94 b1 1c 	call	0x3962	; 0x3962 <atoi>
 912:	cb 57       	subi	r28, 0x7B	; 123
 914:	df 4f       	sbci	r29, 0xFF	; 255
 916:	99 83       	std	Y+1, r25	; 0x01
 918:	88 83       	st	Y, r24
 91a:	c5 58       	subi	r28, 0x85	; 133
 91c:	d0 40       	sbci	r29, 0x00	; 0
 91e:	c7 56       	subi	r28, 0x67	; 103
 920:	df 4f       	sbci	r29, 0xFF	; 255
 922:	88 81       	ld	r24, Y
 924:	99 81       	ldd	r25, Y+1	; 0x01
 926:	aa 81       	ldd	r26, Y+2	; 0x02
 928:	c9 59       	subi	r28, 0x99	; 153
 92a:	d0 40       	sbci	r29, 0x00	; 0
 92c:	fc 01       	movw	r30, r24
 92e:	5a 2f       	mov	r21, r26
 930:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 934:	06 2e       	mov	r0, r22
 936:	00 0c       	add	r0, r0
 938:	77 0b       	sbc	r23, r23
 93a:	60 53       	subi	r22, 0x30	; 48
 93c:	71 09       	sbc	r23, r1
 93e:	6a 30       	cpi	r22, 0x0A	; 10
 940:	71 05       	cpc	r23, r1
 942:	50 f4       	brcc	.+20     	; 0x958 <__printf_core+0x2c8>
 944:	01 96       	adiw	r24, 0x01	; 1
 946:	a1 1d       	adc	r26, r1
 948:	c7 56       	subi	r28, 0x67	; 103
 94a:	df 4f       	sbci	r29, 0xFF	; 255
 94c:	88 83       	st	Y, r24
 94e:	99 83       	std	Y+1, r25	; 0x01
 950:	aa 83       	std	Y+2, r26	; 0x02
 952:	c9 59       	subi	r28, 0x99	; 153
 954:	d0 40       	sbci	r29, 0x00	; 0
 956:	e3 cf       	rjmp	.-58     	; 0x91e <__printf_core+0x28e>
 958:	cf 57       	subi	r28, 0x7F	; 127
 95a:	df 4f       	sbci	r29, 0xFF	; 255
 95c:	88 81       	ld	r24, Y
 95e:	99 81       	ldd	r25, Y+1	; 0x01
 960:	c1 58       	subi	r28, 0x81	; 129
 962:	d0 40       	sbci	r29, 0x00	; 0
 964:	80 ff       	sbrs	r24, 0
 966:	07 c0       	rjmp	.+14     	; 0x976 <__printf_core+0x2e6>
 968:	8d 7f       	andi	r24, 0xFD	; 253
 96a:	cf 57       	subi	r28, 0x7F	; 127
 96c:	df 4f       	sbci	r29, 0xFF	; 255
 96e:	99 83       	std	Y+1, r25	; 0x01
 970:	88 83       	st	Y, r24
 972:	c1 58       	subi	r28, 0x81	; 129
 974:	d0 40       	sbci	r29, 0x00	; 0
 976:	c7 56       	subi	r28, 0x67	; 103
 978:	df 4f       	sbci	r29, 0xFF	; 255
 97a:	88 81       	ld	r24, Y
 97c:	99 81       	ldd	r25, Y+1	; 0x01
 97e:	aa 81       	ldd	r26, Y+2	; 0x02
 980:	c9 59       	subi	r28, 0x99	; 153
 982:	d0 40       	sbci	r29, 0x00	; 0
 984:	fc 01       	movw	r30, r24
 986:	5a 2f       	mov	r21, r26
 988:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 98c:	6e 32       	cpi	r22, 0x2E	; 46
 98e:	09 f0       	breq	.+2      	; 0x992 <__printf_core+0x302>
 990:	59 c0       	rjmp	.+178    	; 0xa44 <__printf_core+0x3b4>
 992:	cd 57       	subi	r28, 0x7D	; 125
 994:	df 4f       	sbci	r29, 0xFF	; 255
 996:	19 82       	std	Y+1, r1	; 0x01
 998:	18 82       	st	Y, r1
 99a:	c3 58       	subi	r28, 0x83	; 131
 99c:	d0 40       	sbci	r29, 0x00	; 0
 99e:	9c 01       	movw	r18, r24
 9a0:	4a 2f       	mov	r20, r26
 9a2:	2f 5f       	subi	r18, 0xFF	; 255
 9a4:	3f 4f       	sbci	r19, 0xFF	; 255
 9a6:	4f 4f       	sbci	r20, 0xFF	; 255
 9a8:	c7 56       	subi	r28, 0x67	; 103
 9aa:	df 4f       	sbci	r29, 0xFF	; 255
 9ac:	28 83       	st	Y, r18
 9ae:	39 83       	std	Y+1, r19	; 0x01
 9b0:	4a 83       	std	Y+2, r20	; 0x02
 9b2:	c9 59       	subi	r28, 0x99	; 153
 9b4:	d0 40       	sbci	r29, 0x00	; 0
 9b6:	f9 01       	movw	r30, r18
 9b8:	54 2f       	mov	r21, r20
 9ba:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 9be:	6a 32       	cpi	r22, 0x2A	; 42
 9c0:	d1 f4       	brne	.+52     	; 0x9f6 <__printf_core+0x366>
 9c2:	02 96       	adiw	r24, 0x02	; 2
 9c4:	a1 1d       	adc	r26, r1
 9c6:	c7 56       	subi	r28, 0x67	; 103
 9c8:	df 4f       	sbci	r29, 0xFF	; 255
 9ca:	88 83       	st	Y, r24
 9cc:	99 83       	std	Y+1, r25	; 0x01
 9ce:	aa 83       	std	Y+2, r26	; 0x02
 9d0:	c9 59       	subi	r28, 0x99	; 153
 9d2:	d0 40       	sbci	r29, 0x00	; 0
 9d4:	d5 01       	movw	r26, r10
 9d6:	ed 91       	ld	r30, X+
 9d8:	fc 91       	ld	r31, X
 9da:	11 97       	sbiw	r26, 0x01	; 1
 9dc:	cf 01       	movw	r24, r30
 9de:	02 96       	adiw	r24, 0x02	; 2
 9e0:	8d 93       	st	X+, r24
 9e2:	9c 93       	st	X, r25
 9e4:	80 81       	ld	r24, Z
 9e6:	91 81       	ldd	r25, Z+1	; 0x01
 9e8:	cd 57       	subi	r28, 0x7D	; 125
 9ea:	df 4f       	sbci	r29, 0xFF	; 255
 9ec:	99 83       	std	Y+1, r25	; 0x01
 9ee:	88 83       	st	Y, r24
 9f0:	c3 58       	subi	r28, 0x83	; 131
 9f2:	d0 40       	sbci	r29, 0x00	; 0
 9f4:	27 c0       	rjmp	.+78     	; 0xa44 <__printf_core+0x3b4>
 9f6:	84 2f       	mov	r24, r20
 9f8:	b9 01       	movw	r22, r18
 9fa:	0e 94 b1 1c 	call	0x3962	; 0x3962 <atoi>
 9fe:	cd 57       	subi	r28, 0x7D	; 125
 a00:	df 4f       	sbci	r29, 0xFF	; 255
 a02:	99 83       	std	Y+1, r25	; 0x01
 a04:	88 83       	st	Y, r24
 a06:	c3 58       	subi	r28, 0x83	; 131
 a08:	d0 40       	sbci	r29, 0x00	; 0
 a0a:	c7 56       	subi	r28, 0x67	; 103
 a0c:	df 4f       	sbci	r29, 0xFF	; 255
 a0e:	88 81       	ld	r24, Y
 a10:	99 81       	ldd	r25, Y+1	; 0x01
 a12:	aa 81       	ldd	r26, Y+2	; 0x02
 a14:	c9 59       	subi	r28, 0x99	; 153
 a16:	d0 40       	sbci	r29, 0x00	; 0
 a18:	fc 01       	movw	r30, r24
 a1a:	5a 2f       	mov	r21, r26
 a1c:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 a20:	06 2e       	mov	r0, r22
 a22:	00 0c       	add	r0, r0
 a24:	77 0b       	sbc	r23, r23
 a26:	60 53       	subi	r22, 0x30	; 48
 a28:	71 09       	sbc	r23, r1
 a2a:	6a 30       	cpi	r22, 0x0A	; 10
 a2c:	71 05       	cpc	r23, r1
 a2e:	50 f4       	brcc	.+20     	; 0xa44 <__printf_core+0x3b4>
 a30:	01 96       	adiw	r24, 0x01	; 1
 a32:	a1 1d       	adc	r26, r1
 a34:	c7 56       	subi	r28, 0x67	; 103
 a36:	df 4f       	sbci	r29, 0xFF	; 255
 a38:	88 83       	st	Y, r24
 a3a:	99 83       	std	Y+1, r25	; 0x01
 a3c:	aa 83       	std	Y+2, r26	; 0x02
 a3e:	c9 59       	subi	r28, 0x99	; 153
 a40:	d0 40       	sbci	r29, 0x00	; 0
 a42:	e3 cf       	rjmp	.-58     	; 0xa0a <__printf_core+0x37a>
 a44:	ce 01       	movw	r24, r28
 a46:	87 56       	subi	r24, 0x67	; 103
 a48:	9f 4f       	sbci	r25, 0xFF	; 255
 a4a:	0e 94 d0 1a 	call	0x35a0	; 0x35a0 <__fmt_state>
 a4e:	18 2f       	mov	r17, r24
 a50:	c7 56       	subi	r28, 0x67	; 103
 a52:	df 4f       	sbci	r29, 0xFF	; 255
 a54:	98 81       	ld	r25, Y
 a56:	c9 59       	subi	r28, 0x99	; 153
 a58:	d0 40       	sbci	r29, 0x00	; 0
 a5a:	c6 56       	subi	r28, 0x66	; 102
 a5c:	df 4f       	sbci	r29, 0xFF	; 255
 a5e:	88 81       	ld	r24, Y
 a60:	ca 59       	subi	r28, 0x9A	; 154
 a62:	d0 40       	sbci	r29, 0x00	; 0
 a64:	c5 56       	subi	r28, 0x65	; 101
 a66:	df 4f       	sbci	r29, 0xFF	; 255
 a68:	58 81       	ld	r21, Y
 a6a:	cb 59       	subi	r28, 0x9B	; 155
 a6c:	d0 40       	sbci	r29, 0x00	; 0
 a6e:	e9 2f       	mov	r30, r25
 a70:	f8 2f       	mov	r31, r24
 a72:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 a76:	86 2f       	mov	r24, r22
 a78:	66 0f       	add	r22, r22
 a7a:	99 0b       	sbc	r25, r25
 a7c:	0e 94 e8 22 	call	0x45d0	; 0x45d0 <tolower>
 a80:	89 36       	cpi	r24, 0x69	; 105
 a82:	91 05       	cpc	r25, r1
 a84:	09 f4       	brne	.+2      	; 0xa88 <__printf_core+0x3f8>
 a86:	5b c0       	rjmp	.+182    	; 0xb3e <__printf_core+0x4ae>
 a88:	b4 f4       	brge	.+44     	; 0xab6 <__printf_core+0x426>
 a8a:	83 36       	cpi	r24, 0x63	; 99
 a8c:	91 05       	cpc	r25, r1
 a8e:	09 f4       	brne	.+2      	; 0xa92 <__printf_core+0x402>
 a90:	69 c1       	rjmp	.+722    	; 0xd64 <__printf_core+0x6d4>
 a92:	44 f4       	brge	.+16     	; 0xaa4 <__printf_core+0x414>
 a94:	85 32       	cpi	r24, 0x25	; 37
 a96:	91 05       	cpc	r25, r1
 a98:	09 f4       	brne	.+2      	; 0xa9c <__printf_core+0x40c>
 a9a:	a4 c1       	rjmp	.+840    	; 0xde4 <__printf_core+0x754>
 a9c:	81 36       	cpi	r24, 0x61	; 97
 a9e:	91 05       	cpc	r25, r1
 aa0:	29 f1       	breq	.+74     	; 0xaec <__printf_core+0x45c>
 aa2:	b6 c1       	rjmp	.+876    	; 0xe10 <__printf_core+0x780>
 aa4:	84 36       	cpi	r24, 0x64	; 100
 aa6:	91 05       	cpc	r25, r1
 aa8:	09 f4       	brne	.+2      	; 0xaac <__printf_core+0x41c>
 aaa:	49 c0       	rjmp	.+146    	; 0xb3e <__printf_core+0x4ae>
 aac:	88 36       	cpi	r24, 0x68	; 104
 aae:	91 05       	cpc	r25, r1
 ab0:	0c f4       	brge	.+2      	; 0xab4 <__printf_core+0x424>
 ab2:	2f c1       	rjmp	.+606    	; 0xd12 <__printf_core+0x682>
 ab4:	ad c1       	rjmp	.+858    	; 0xe10 <__printf_core+0x780>
 ab6:	80 37       	cpi	r24, 0x70	; 112
 ab8:	91 05       	cpc	r25, r1
 aba:	09 f4       	brne	.+2      	; 0xabe <__printf_core+0x42e>
 abc:	cd c0       	rjmp	.+410    	; 0xc58 <__printf_core+0x5c8>
 abe:	4c f4       	brge	.+18     	; 0xad2 <__printf_core+0x442>
 ac0:	8e 36       	cpi	r24, 0x6E	; 110
 ac2:	91 05       	cpc	r25, r1
 ac4:	09 f4       	brne	.+2      	; 0xac8 <__printf_core+0x438>
 ac6:	1b c1       	rjmp	.+566    	; 0xcfe <__printf_core+0x66e>
 ac8:	8f 36       	cpi	r24, 0x6F	; 111
 aca:	91 05       	cpc	r25, r1
 acc:	09 f4       	brne	.+2      	; 0xad0 <__printf_core+0x440>
 ace:	7d c0       	rjmp	.+250    	; 0xbca <__printf_core+0x53a>
 ad0:	9f c1       	rjmp	.+830    	; 0xe10 <__printf_core+0x780>
 ad2:	85 37       	cpi	r24, 0x75	; 117
 ad4:	91 05       	cpc	r25, r1
 ad6:	09 f4       	brne	.+2      	; 0xada <__printf_core+0x44a>
 ad8:	55 c0       	rjmp	.+170    	; 0xb84 <__printf_core+0x4f4>
 ada:	88 37       	cpi	r24, 0x78	; 120
 adc:	91 05       	cpc	r25, r1
 ade:	09 f4       	brne	.+2      	; 0xae2 <__printf_core+0x452>
 ae0:	97 c0       	rjmp	.+302    	; 0xc10 <__printf_core+0x580>
 ae2:	83 37       	cpi	r24, 0x73	; 115
 ae4:	91 05       	cpc	r25, r1
 ae6:	09 f0       	breq	.+2      	; 0xaea <__printf_core+0x45a>
 ae8:	93 c1       	rjmp	.+806    	; 0xe10 <__printf_core+0x780>
 aea:	5b c1       	rjmp	.+694    	; 0xda2 <__printf_core+0x712>
 aec:	61 2f       	mov	r22, r17
 aee:	70 e0       	ldi	r23, 0x00	; 0
 af0:	a5 01       	movw	r20, r10
 af2:	c6 01       	movw	r24, r12
 af4:	0e 94 96 20 	call	0x412c	; 0x412c <__pop_float>
 af8:	89 2b       	or	r24, r25
 afa:	09 f4       	brne	.+2      	; 0xafe <__printf_core+0x46e>
 afc:	ba c1       	rjmp	.+884    	; 0xe72 <__printf_core+0x7e2>
 afe:	c7 56       	subi	r28, 0x67	; 103
 b00:	df 4f       	sbci	r29, 0xFF	; 255
 b02:	88 81       	ld	r24, Y
 b04:	99 81       	ldd	r25, Y+1	; 0x01
 b06:	aa 81       	ldd	r26, Y+2	; 0x02
 b08:	c9 59       	subi	r28, 0x99	; 153
 b0a:	d0 40       	sbci	r29, 0x00	; 0
 b0c:	9c 01       	movw	r18, r24
 b0e:	4a 2f       	mov	r20, r26
 b10:	2f 5f       	subi	r18, 0xFF	; 255
 b12:	3f 4f       	sbci	r19, 0xFF	; 255
 b14:	4f 4f       	sbci	r20, 0xFF	; 255
 b16:	c7 56       	subi	r28, 0x67	; 103
 b18:	df 4f       	sbci	r29, 0xFF	; 255
 b1a:	28 83       	st	Y, r18
 b1c:	39 83       	std	Y+1, r19	; 0x01
 b1e:	4a 83       	std	Y+2, r20	; 0x02
 b20:	c9 59       	subi	r28, 0x99	; 153
 b22:	d0 40       	sbci	r29, 0x00	; 0
 b24:	fc 01       	movw	r30, r24
 b26:	5a 2f       	mov	r21, r26
 b28:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 b2c:	26 2f       	mov	r18, r22
 b2e:	a6 01       	movw	r20, r12
 b30:	be 01       	movw	r22, r28
 b32:	6f 57       	subi	r22, 0x7F	; 127
 b34:	7f 4f       	sbci	r23, 0xFF	; 255
 b36:	c4 01       	movw	r24, r8
 b38:	0e 94 be 0a 	call	0x157c	; 0x157c <__fmt_a>
 b3c:	97 c1       	rjmp	.+814    	; 0xe6c <__printf_core+0x7dc>
 b3e:	61 2f       	mov	r22, r17
 b40:	70 e0       	ldi	r23, 0x00	; 0
 b42:	95 01       	movw	r18, r10
 b44:	41 e0       	ldi	r20, 0x01	; 1
 b46:	50 e0       	ldi	r21, 0x00	; 0
 b48:	c6 01       	movw	r24, r12
 b4a:	0e 94 1f 12 	call	0x243e	; 0x243e <__pop_int>
 b4e:	89 2b       	or	r24, r25
 b50:	09 f4       	brne	.+2      	; 0xb54 <__printf_core+0x4c4>
 b52:	8f c1       	rjmp	.+798    	; 0xe72 <__printf_core+0x7e2>
 b54:	c7 56       	subi	r28, 0x67	; 103
 b56:	df 4f       	sbci	r29, 0xFF	; 255
 b58:	88 81       	ld	r24, Y
 b5a:	99 81       	ldd	r25, Y+1	; 0x01
 b5c:	aa 81       	ldd	r26, Y+2	; 0x02
 b5e:	c9 59       	subi	r28, 0x99	; 153
 b60:	d0 40       	sbci	r29, 0x00	; 0
 b62:	01 96       	adiw	r24, 0x01	; 1
 b64:	a1 1d       	adc	r26, r1
 b66:	c7 56       	subi	r28, 0x67	; 103
 b68:	df 4f       	sbci	r29, 0xFF	; 255
 b6a:	88 83       	st	Y, r24
 b6c:	99 83       	std	Y+1, r25	; 0x01
 b6e:	aa 83       	std	Y+2, r26	; 0x02
 b70:	c9 59       	subi	r28, 0x99	; 153
 b72:	d0 40       	sbci	r29, 0x00	; 0
 b74:	a6 01       	movw	r20, r12
 b76:	be 01       	movw	r22, r28
 b78:	6f 57       	subi	r22, 0x7F	; 127
 b7a:	7f 4f       	sbci	r23, 0xFF	; 255
 b7c:	c4 01       	movw	r24, r8
 b7e:	0e 94 60 11 	call	0x22c0	; 0x22c0 <__fmt_d>
 b82:	74 c1       	rjmp	.+744    	; 0xe6c <__printf_core+0x7dc>
 b84:	61 2f       	mov	r22, r17
 b86:	70 e0       	ldi	r23, 0x00	; 0
 b88:	95 01       	movw	r18, r10
 b8a:	40 e0       	ldi	r20, 0x00	; 0
 b8c:	50 e0       	ldi	r21, 0x00	; 0
 b8e:	c6 01       	movw	r24, r12
 b90:	0e 94 1f 12 	call	0x243e	; 0x243e <__pop_int>
 b94:	89 2b       	or	r24, r25
 b96:	09 f4       	brne	.+2      	; 0xb9a <__printf_core+0x50a>
 b98:	6c c1       	rjmp	.+728    	; 0xe72 <__printf_core+0x7e2>
 b9a:	c7 56       	subi	r28, 0x67	; 103
 b9c:	df 4f       	sbci	r29, 0xFF	; 255
 b9e:	88 81       	ld	r24, Y
 ba0:	99 81       	ldd	r25, Y+1	; 0x01
 ba2:	aa 81       	ldd	r26, Y+2	; 0x02
 ba4:	c9 59       	subi	r28, 0x99	; 153
 ba6:	d0 40       	sbci	r29, 0x00	; 0
 ba8:	01 96       	adiw	r24, 0x01	; 1
 baa:	a1 1d       	adc	r26, r1
 bac:	c7 56       	subi	r28, 0x67	; 103
 bae:	df 4f       	sbci	r29, 0xFF	; 255
 bb0:	88 83       	st	Y, r24
 bb2:	99 83       	std	Y+1, r25	; 0x01
 bb4:	aa 83       	std	Y+2, r26	; 0x02
 bb6:	c9 59       	subi	r28, 0x99	; 153
 bb8:	d0 40       	sbci	r29, 0x00	; 0
 bba:	a6 01       	movw	r20, r12
 bbc:	be 01       	movw	r22, r28
 bbe:	6f 57       	subi	r22, 0x7F	; 127
 bc0:	7f 4f       	sbci	r23, 0xFF	; 255
 bc2:	c4 01       	movw	r24, r8
 bc4:	0e 94 7a 19 	call	0x32f4	; 0x32f4 <__fmt_u>
 bc8:	51 c1       	rjmp	.+674    	; 0xe6c <__printf_core+0x7dc>
 bca:	61 2f       	mov	r22, r17
 bcc:	70 e0       	ldi	r23, 0x00	; 0
 bce:	95 01       	movw	r18, r10
 bd0:	40 e0       	ldi	r20, 0x00	; 0
 bd2:	50 e0       	ldi	r21, 0x00	; 0
 bd4:	c6 01       	movw	r24, r12
 bd6:	0e 94 1f 12 	call	0x243e	; 0x243e <__pop_int>
 bda:	89 2b       	or	r24, r25
 bdc:	09 f4       	brne	.+2      	; 0xbe0 <__printf_core+0x550>
 bde:	49 c1       	rjmp	.+658    	; 0xe72 <__printf_core+0x7e2>
 be0:	c7 56       	subi	r28, 0x67	; 103
 be2:	df 4f       	sbci	r29, 0xFF	; 255
 be4:	88 81       	ld	r24, Y
 be6:	99 81       	ldd	r25, Y+1	; 0x01
 be8:	aa 81       	ldd	r26, Y+2	; 0x02
 bea:	c9 59       	subi	r28, 0x99	; 153
 bec:	d0 40       	sbci	r29, 0x00	; 0
 bee:	01 96       	adiw	r24, 0x01	; 1
 bf0:	a1 1d       	adc	r26, r1
 bf2:	c7 56       	subi	r28, 0x67	; 103
 bf4:	df 4f       	sbci	r29, 0xFF	; 255
 bf6:	88 83       	st	Y, r24
 bf8:	99 83       	std	Y+1, r25	; 0x01
 bfa:	aa 83       	std	Y+2, r26	; 0x02
 bfc:	c9 59       	subi	r28, 0x99	; 153
 bfe:	d0 40       	sbci	r29, 0x00	; 0
 c00:	a6 01       	movw	r20, r12
 c02:	be 01       	movw	r22, r28
 c04:	6f 57       	subi	r22, 0x7F	; 127
 c06:	7f 4f       	sbci	r23, 0xFF	; 255
 c08:	c4 01       	movw	r24, r8
 c0a:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <__fmt_o>
 c0e:	2e c1       	rjmp	.+604    	; 0xe6c <__printf_core+0x7dc>
 c10:	61 2f       	mov	r22, r17
 c12:	70 e0       	ldi	r23, 0x00	; 0
 c14:	95 01       	movw	r18, r10
 c16:	40 e0       	ldi	r20, 0x00	; 0
 c18:	50 e0       	ldi	r21, 0x00	; 0
 c1a:	c6 01       	movw	r24, r12
 c1c:	0e 94 1f 12 	call	0x243e	; 0x243e <__pop_int>
 c20:	89 2b       	or	r24, r25
 c22:	09 f4       	brne	.+2      	; 0xc26 <__printf_core+0x596>
 c24:	26 c1       	rjmp	.+588    	; 0xe72 <__printf_core+0x7e2>
 c26:	c7 56       	subi	r28, 0x67	; 103
 c28:	df 4f       	sbci	r29, 0xFF	; 255
 c2a:	88 81       	ld	r24, Y
 c2c:	99 81       	ldd	r25, Y+1	; 0x01
 c2e:	aa 81       	ldd	r26, Y+2	; 0x02
 c30:	c9 59       	subi	r28, 0x99	; 153
 c32:	d0 40       	sbci	r29, 0x00	; 0
 c34:	9c 01       	movw	r18, r24
 c36:	4a 2f       	mov	r20, r26
 c38:	2f 5f       	subi	r18, 0xFF	; 255
 c3a:	3f 4f       	sbci	r19, 0xFF	; 255
 c3c:	4f 4f       	sbci	r20, 0xFF	; 255
 c3e:	c7 56       	subi	r28, 0x67	; 103
 c40:	df 4f       	sbci	r29, 0xFF	; 255
 c42:	28 83       	st	Y, r18
 c44:	39 83       	std	Y+1, r19	; 0x01
 c46:	4a 83       	std	Y+2, r20	; 0x02
 c48:	c9 59       	subi	r28, 0x99	; 153
 c4a:	d0 40       	sbci	r29, 0x00	; 0
 c4c:	fc 01       	movw	r30, r24
 c4e:	5a 2f       	mov	r21, r26
 c50:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 c54:	26 2f       	mov	r18, r22
 c56:	4b c0       	rjmp	.+150    	; 0xcee <__printf_core+0x65e>
 c58:	95 01       	movw	r18, r10
 c5a:	40 e0       	ldi	r20, 0x00	; 0
 c5c:	50 e0       	ldi	r21, 0x00	; 0
 c5e:	60 ef       	ldi	r22, 0xF0	; 240
 c60:	70 e0       	ldi	r23, 0x00	; 0
 c62:	c6 01       	movw	r24, r12
 c64:	0e 94 1f 12 	call	0x243e	; 0x243e <__pop_int>
 c68:	89 2b       	or	r24, r25
 c6a:	09 f4       	brne	.+2      	; 0xc6e <__printf_core+0x5de>
 c6c:	02 c1       	rjmp	.+516    	; 0xe72 <__printf_core+0x7e2>
 c6e:	c7 56       	subi	r28, 0x67	; 103
 c70:	df 4f       	sbci	r29, 0xFF	; 255
 c72:	88 81       	ld	r24, Y
 c74:	99 81       	ldd	r25, Y+1	; 0x01
 c76:	aa 81       	ldd	r26, Y+2	; 0x02
 c78:	c9 59       	subi	r28, 0x99	; 153
 c7a:	d0 40       	sbci	r29, 0x00	; 0
 c7c:	01 96       	adiw	r24, 0x01	; 1
 c7e:	a1 1d       	adc	r26, r1
 c80:	c7 56       	subi	r28, 0x67	; 103
 c82:	df 4f       	sbci	r29, 0xFF	; 255
 c84:	88 83       	st	Y, r24
 c86:	99 83       	std	Y+1, r25	; 0x01
 c88:	aa 83       	std	Y+2, r26	; 0x02
 c8a:	c9 59       	subi	r28, 0x99	; 153
 c8c:	d0 40       	sbci	r29, 0x00	; 0
 c8e:	86 e0       	ldi	r24, 0x06	; 6
 c90:	2a e8       	ldi	r18, 0x8A	; 138
 c92:	36 e0       	ldi	r19, 0x06	; 6
 c94:	40 e0       	ldi	r20, 0x00	; 0
 c96:	f9 01       	movw	r30, r18
 c98:	de 01       	movw	r26, r28
 c9a:	ad 56       	subi	r26, 0x6D	; 109
 c9c:	bf 4f       	sbci	r27, 0xFF	; 255
 c9e:	74 2f       	mov	r23, r20
 ca0:	0e 94 75 22 	call	0x44ea	; 0x44ea <__movmemx_qi>
 ca4:	d6 01       	movw	r26, r12
 ca6:	2c 91       	ld	r18, X
 ca8:	11 96       	adiw	r26, 0x01	; 1
 caa:	3c 91       	ld	r19, X
 cac:	11 97       	sbiw	r26, 0x01	; 1
 cae:	12 96       	adiw	r26, 0x02	; 2
 cb0:	4c 91       	ld	r20, X
 cb2:	12 97       	sbiw	r26, 0x02	; 2
 cb4:	13 96       	adiw	r26, 0x03	; 3
 cb6:	5c 91       	ld	r21, X
 cb8:	13 97       	sbiw	r26, 0x03	; 3
 cba:	14 96       	adiw	r26, 0x04	; 4
 cbc:	6c 91       	ld	r22, X
 cbe:	14 97       	sbiw	r26, 0x04	; 4
 cc0:	15 96       	adiw	r26, 0x05	; 5
 cc2:	7c 91       	ld	r23, X
 cc4:	15 97       	sbiw	r26, 0x05	; 5
 cc6:	16 96       	adiw	r26, 0x06	; 6
 cc8:	8c 91       	ld	r24, X
 cca:	16 97       	sbiw	r26, 0x06	; 6
 ccc:	17 96       	adiw	r26, 0x07	; 7
 cce:	9c 91       	ld	r25, X
 cd0:	a0 e0       	ldi	r26, 0x00	; 0
 cd2:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
 cd6:	51 f4       	brne	.+20     	; 0xcec <__printf_core+0x65c>
 cd8:	00 e0       	ldi	r16, 0x00	; 0
 cda:	10 e0       	ldi	r17, 0x00	; 0
 cdc:	cf 55       	subi	r28, 0x5F	; 95
 cde:	df 4f       	sbci	r29, 0xFF	; 255
 ce0:	28 81       	ld	r18, Y
 ce2:	39 81       	ldd	r19, Y+1	; 0x01
 ce4:	4a 81       	ldd	r20, Y+2	; 0x02
 ce6:	c1 5a       	subi	r28, 0xA1	; 161
 ce8:	d0 40       	sbci	r29, 0x00	; 0
 cea:	ba c0       	rjmp	.+372    	; 0xe60 <__printf_core+0x7d0>
 cec:	28 e7       	ldi	r18, 0x78	; 120
 cee:	a6 01       	movw	r20, r12
 cf0:	be 01       	movw	r22, r28
 cf2:	6f 57       	subi	r22, 0x7F	; 127
 cf4:	7f 4f       	sbci	r23, 0xFF	; 255
 cf6:	c4 01       	movw	r24, r8
 cf8:	0e 94 20 10 	call	0x2040	; 0x2040 <__fmt_x>
 cfc:	b7 c0       	rjmp	.+366    	; 0xe6c <__printf_core+0x7dc>
 cfe:	61 2f       	mov	r22, r17
 d00:	70 e0       	ldi	r23, 0x00	; 0
 d02:	95 01       	movw	r18, r10
 d04:	a1 01       	movw	r20, r2
 d06:	4e 0d       	add	r20, r14
 d08:	5f 1d       	adc	r21, r15
 d0a:	c6 01       	movw	r24, r12
 d0c:	0e 94 52 16 	call	0x2ca4	; 0x2ca4 <__pop_ptr>
 d10:	b0 c0       	rjmp	.+352    	; 0xe72 <__printf_core+0x7e2>
 d12:	61 2f       	mov	r22, r17
 d14:	70 e0       	ldi	r23, 0x00	; 0
 d16:	a5 01       	movw	r20, r10
 d18:	c6 01       	movw	r24, r12
 d1a:	0e 94 96 20 	call	0x412c	; 0x412c <__pop_float>
 d1e:	89 2b       	or	r24, r25
 d20:	09 f4       	brne	.+2      	; 0xd24 <__printf_core+0x694>
 d22:	a7 c0       	rjmp	.+334    	; 0xe72 <__printf_core+0x7e2>
 d24:	c7 56       	subi	r28, 0x67	; 103
 d26:	df 4f       	sbci	r29, 0xFF	; 255
 d28:	88 81       	ld	r24, Y
 d2a:	99 81       	ldd	r25, Y+1	; 0x01
 d2c:	aa 81       	ldd	r26, Y+2	; 0x02
 d2e:	c9 59       	subi	r28, 0x99	; 153
 d30:	d0 40       	sbci	r29, 0x00	; 0
 d32:	9c 01       	movw	r18, r24
 d34:	4a 2f       	mov	r20, r26
 d36:	2f 5f       	subi	r18, 0xFF	; 255
 d38:	3f 4f       	sbci	r19, 0xFF	; 255
 d3a:	4f 4f       	sbci	r20, 0xFF	; 255
 d3c:	c7 56       	subi	r28, 0x67	; 103
 d3e:	df 4f       	sbci	r29, 0xFF	; 255
 d40:	28 83       	st	Y, r18
 d42:	39 83       	std	Y+1, r19	; 0x01
 d44:	4a 83       	std	Y+2, r20	; 0x02
 d46:	c9 59       	subi	r28, 0x99	; 153
 d48:	d0 40       	sbci	r29, 0x00	; 0
 d4a:	fc 01       	movw	r30, r24
 d4c:	5a 2f       	mov	r21, r26
 d4e:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 d52:	26 2f       	mov	r18, r22
 d54:	a6 01       	movw	r20, r12
 d56:	be 01       	movw	r22, r28
 d58:	6f 57       	subi	r22, 0x7F	; 127
 d5a:	7f 4f       	sbci	r23, 0xFF	; 255
 d5c:	c4 01       	movw	r24, r8
 d5e:	0e 94 61 07 	call	0xec2	; 0xec2 <__fmt_fp>
 d62:	84 c0       	rjmp	.+264    	; 0xe6c <__printf_core+0x7dc>
 d64:	10 38       	cpi	r17, 0x80	; 128
 d66:	09 f0       	breq	.+2      	; 0xd6a <__printf_core+0x6da>
 d68:	84 c0       	rjmp	.+264    	; 0xe72 <__printf_core+0x7e2>
 d6a:	c7 56       	subi	r28, 0x67	; 103
 d6c:	df 4f       	sbci	r29, 0xFF	; 255
 d6e:	88 81       	ld	r24, Y
 d70:	99 81       	ldd	r25, Y+1	; 0x01
 d72:	aa 81       	ldd	r26, Y+2	; 0x02
 d74:	c9 59       	subi	r28, 0x99	; 153
 d76:	d0 40       	sbci	r29, 0x00	; 0
 d78:	01 96       	adiw	r24, 0x01	; 1
 d7a:	a1 1d       	adc	r26, r1
 d7c:	c7 56       	subi	r28, 0x67	; 103
 d7e:	df 4f       	sbci	r29, 0xFF	; 255
 d80:	88 83       	st	Y, r24
 d82:	99 83       	std	Y+1, r25	; 0x01
 d84:	aa 83       	std	Y+2, r26	; 0x02
 d86:	c9 59       	subi	r28, 0x99	; 153
 d88:	d0 40       	sbci	r29, 0x00	; 0
 d8a:	d5 01       	movw	r26, r10
 d8c:	ed 91       	ld	r30, X+
 d8e:	fc 91       	ld	r31, X
 d90:	11 97       	sbiw	r26, 0x01	; 1
 d92:	cf 01       	movw	r24, r30
 d94:	02 96       	adiw	r24, 0x02	; 2
 d96:	8d 93       	st	X+, r24
 d98:	9c 93       	st	X, r25
 d9a:	80 81       	ld	r24, Z
 d9c:	f6 01       	movw	r30, r12
 d9e:	80 83       	st	Z, r24
 da0:	5b c0       	rjmp	.+182    	; 0xe58 <__printf_core+0x7c8>
 da2:	10 38       	cpi	r17, 0x80	; 128
 da4:	09 f0       	breq	.+2      	; 0xda8 <__printf_core+0x718>
 da6:	65 c0       	rjmp	.+202    	; 0xe72 <__printf_core+0x7e2>
 da8:	c7 56       	subi	r28, 0x67	; 103
 daa:	df 4f       	sbci	r29, 0xFF	; 255
 dac:	88 81       	ld	r24, Y
 dae:	99 81       	ldd	r25, Y+1	; 0x01
 db0:	aa 81       	ldd	r26, Y+2	; 0x02
 db2:	c9 59       	subi	r28, 0x99	; 153
 db4:	d0 40       	sbci	r29, 0x00	; 0
 db6:	01 96       	adiw	r24, 0x01	; 1
 db8:	a1 1d       	adc	r26, r1
 dba:	c7 56       	subi	r28, 0x67	; 103
 dbc:	df 4f       	sbci	r29, 0xFF	; 255
 dbe:	88 83       	st	Y, r24
 dc0:	99 83       	std	Y+1, r25	; 0x01
 dc2:	aa 83       	std	Y+2, r26	; 0x02
 dc4:	c9 59       	subi	r28, 0x99	; 153
 dc6:	d0 40       	sbci	r29, 0x00	; 0
 dc8:	d5 01       	movw	r26, r10
 dca:	ed 91       	ld	r30, X+
 dcc:	fc 91       	ld	r31, X
 dce:	11 97       	sbiw	r26, 0x01	; 1
 dd0:	cf 01       	movw	r24, r30
 dd2:	03 96       	adiw	r24, 0x03	; 3
 dd4:	8d 93       	st	X+, r24
 dd6:	9c 93       	st	X, r25
 dd8:	20 81       	ld	r18, Z
 dda:	31 81       	ldd	r19, Z+1	; 0x01
 ddc:	42 81       	ldd	r20, Z+2	; 0x02
 dde:	00 e0       	ldi	r16, 0x00	; 0
 de0:	10 e0       	ldi	r17, 0x00	; 0
 de2:	3e c0       	rjmp	.+124    	; 0xe60 <__printf_core+0x7d0>
 de4:	10 38       	cpi	r17, 0x80	; 128
 de6:	09 f0       	breq	.+2      	; 0xdea <__printf_core+0x75a>
 de8:	44 c0       	rjmp	.+136    	; 0xe72 <__printf_core+0x7e2>
 dea:	c7 56       	subi	r28, 0x67	; 103
 dec:	df 4f       	sbci	r29, 0xFF	; 255
 dee:	88 81       	ld	r24, Y
 df0:	99 81       	ldd	r25, Y+1	; 0x01
 df2:	aa 81       	ldd	r26, Y+2	; 0x02
 df4:	c9 59       	subi	r28, 0x99	; 153
 df6:	d0 40       	sbci	r29, 0x00	; 0
 df8:	01 96       	adiw	r24, 0x01	; 1
 dfa:	a1 1d       	adc	r26, r1
 dfc:	c7 56       	subi	r28, 0x67	; 103
 dfe:	df 4f       	sbci	r29, 0xFF	; 255
 e00:	88 83       	st	Y, r24
 e02:	99 83       	std	Y+1, r25	; 0x01
 e04:	aa 83       	std	Y+2, r26	; 0x02
 e06:	c9 59       	subi	r28, 0x99	; 153
 e08:	d0 40       	sbci	r29, 0x00	; 0
 e0a:	f6 01       	movw	r30, r12
 e0c:	70 82       	st	Z, r7
 e0e:	24 c0       	rjmp	.+72     	; 0xe58 <__printf_core+0x7c8>
 e10:	d6 01       	movw	r26, r12
 e12:	7c 92       	st	X, r7
 e14:	c2 56       	subi	r28, 0x62	; 98
 e16:	df 4f       	sbci	r29, 0xFF	; 255
 e18:	28 81       	ld	r18, Y
 e1a:	39 81       	ldd	r19, Y+1	; 0x01
 e1c:	4a 81       	ldd	r20, Y+2	; 0x02
 e1e:	ce 59       	subi	r28, 0x9E	; 158
 e20:	d0 40       	sbci	r29, 0x00	; 0
 e22:	c7 56       	subi	r28, 0x67	; 103
 e24:	df 4f       	sbci	r29, 0xFF	; 255
 e26:	28 83       	st	Y, r18
 e28:	39 83       	std	Y+1, r19	; 0x01
 e2a:	4a 83       	std	Y+2, r20	; 0x02
 e2c:	c9 59       	subi	r28, 0x99	; 153
 e2e:	d0 40       	sbci	r29, 0x00	; 0
 e30:	cf 57       	subi	r28, 0x7F	; 127
 e32:	df 4f       	sbci	r29, 0xFF	; 255
 e34:	19 82       	std	Y+1, r1	; 0x01
 e36:	18 82       	st	Y, r1
 e38:	c1 58       	subi	r28, 0x81	; 129
 e3a:	d0 40       	sbci	r29, 0x00	; 0
 e3c:	cb 57       	subi	r28, 0x7B	; 123
 e3e:	df 4f       	sbci	r29, 0xFF	; 255
 e40:	19 82       	std	Y+1, r1	; 0x01
 e42:	18 82       	st	Y, r1
 e44:	c5 58       	subi	r28, 0x85	; 133
 e46:	d0 40       	sbci	r29, 0x00	; 0
 e48:	8f ef       	ldi	r24, 0xFF	; 255
 e4a:	9f ef       	ldi	r25, 0xFF	; 255
 e4c:	cd 57       	subi	r28, 0x7D	; 125
 e4e:	df 4f       	sbci	r29, 0xFF	; 255
 e50:	99 83       	std	Y+1, r25	; 0x01
 e52:	88 83       	st	Y, r24
 e54:	c3 58       	subi	r28, 0x83	; 131
 e56:	d0 40       	sbci	r29, 0x00	; 0
 e58:	01 e0       	ldi	r16, 0x01	; 1
 e5a:	10 e0       	ldi	r17, 0x00	; 0
 e5c:	46 2d       	mov	r20, r6
 e5e:	92 01       	movw	r18, r4
 e60:	be 01       	movw	r22, r28
 e62:	6f 57       	subi	r22, 0x7F	; 127
 e64:	7f 4f       	sbci	r23, 0xFF	; 255
 e66:	c4 01       	movw	r24, r8
 e68:	0e 94 f9 17 	call	0x2ff2	; 0x2ff2 <__fmt_s>
 e6c:	8e 0d       	add	r24, r14
 e6e:	9f 1d       	adc	r25, r15
 e70:	11 c0       	rjmp	.+34     	; 0xe94 <__printf_core+0x804>
 e72:	c7 56       	subi	r28, 0x67	; 103
 e74:	df 4f       	sbci	r29, 0xFF	; 255
 e76:	88 81       	ld	r24, Y
 e78:	99 81       	ldd	r25, Y+1	; 0x01
 e7a:	aa 81       	ldd	r26, Y+2	; 0x02
 e7c:	c9 59       	subi	r28, 0x99	; 153
 e7e:	d0 40       	sbci	r29, 0x00	; 0
 e80:	01 96       	adiw	r24, 0x01	; 1
 e82:	a1 1d       	adc	r26, r1
 e84:	c7 56       	subi	r28, 0x67	; 103
 e86:	df 4f       	sbci	r29, 0xFF	; 255
 e88:	88 83       	st	Y, r24
 e8a:	99 83       	std	Y+1, r25	; 0x01
 e8c:	aa 83       	std	Y+2, r26	; 0x02
 e8e:	c9 59       	subi	r28, 0x99	; 153
 e90:	d0 40       	sbci	r29, 0x00	; 0
 e92:	c7 01       	movw	r24, r14
 e94:	71 01       	movw	r14, r2
 e96:	e8 0e       	add	r14, r24
 e98:	f9 1e       	adc	r15, r25
 e9a:	e2 14       	cp	r14, r2
 e9c:	f3 04       	cpc	r15, r3
 e9e:	4c f4       	brge	.+18     	; 0xeb2 <__printf_core+0x822>
 ea0:	8f e4       	ldi	r24, 0x4F	; 79
 ea2:	90 e0       	ldi	r25, 0x00	; 0
 ea4:	90 93 2d 12 	sts	0x122D, r25	; 0x80122d <__errno_val+0x1>
 ea8:	80 93 2c 12 	sts	0x122C, r24	; 0x80122c <__errno_val>
 eac:	8f ef       	ldi	r24, 0xFF	; 255
 eae:	9f ef       	ldi	r25, 0xFF	; 255
 eb0:	03 c0       	rjmp	.+6      	; 0xeb8 <__printf_core+0x828>
 eb2:	17 01       	movw	r2, r14
 eb4:	19 cc       	rjmp	.-1998   	; 0x6e8 <__printf_core+0x58>
 eb6:	c1 01       	movw	r24, r2
 eb8:	cd 55       	subi	r28, 0x5D	; 93
 eba:	df 4f       	sbci	r29, 0xFF	; 255
 ebc:	e2 e1       	ldi	r30, 0x12	; 18
 ebe:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>

Disassembly of section .text.fputc:

000038d0 <fputc>:
    38d0:	0f 93       	push	r16
    38d2:	1f 93       	push	r17
    38d4:	cf 93       	push	r28
    38d6:	df 93       	push	r29
    38d8:	db 01       	movw	r26, r22
    38da:	2d 91       	ld	r18, X+
    38dc:	3c 91       	ld	r19, X
    38de:	11 97       	sbiw	r26, 0x01	; 1
    38e0:	30 ff       	sbrs	r19, 0
    38e2:	25 c0       	rjmp	.+74     	; 0x392e <fputc+0x5e>
    38e4:	17 96       	adiw	r26, 0x07	; 7
    38e6:	4d 91       	ld	r20, X+
    38e8:	5c 91       	ld	r21, X
    38ea:	18 97       	sbiw	r26, 0x08	; 8
    38ec:	15 96       	adiw	r26, 0x05	; 5
    38ee:	2d 91       	ld	r18, X+
    38f0:	3c 91       	ld	r19, X
    38f2:	16 97       	sbiw	r26, 0x06	; 6
    38f4:	42 17       	cp	r20, r18
    38f6:	53 07       	cpc	r21, r19
    38f8:	78 f4       	brcc	.+30     	; 0x3918 <fputc+0x48>
    38fa:	12 96       	adiw	r26, 0x02	; 2
    38fc:	ed 91       	ld	r30, X+
    38fe:	fc 91       	ld	r31, X
    3900:	13 97       	sbiw	r26, 0x03	; 3
    3902:	80 83       	st	Z, r24
    3904:	12 96       	adiw	r26, 0x02	; 2
    3906:	2d 91       	ld	r18, X+
    3908:	3c 91       	ld	r19, X
    390a:	13 97       	sbiw	r26, 0x03	; 3
    390c:	2f 5f       	subi	r18, 0xFF	; 255
    390e:	3f 4f       	sbci	r19, 0xFF	; 255
    3910:	13 96       	adiw	r26, 0x03	; 3
    3912:	3c 93       	st	X, r19
    3914:	2e 93       	st	-X, r18
    3916:	12 97       	sbiw	r26, 0x02	; 2
    3918:	17 96       	adiw	r26, 0x07	; 7
    391a:	2d 91       	ld	r18, X+
    391c:	3c 91       	ld	r19, X
    391e:	18 97       	sbiw	r26, 0x08	; 8
    3920:	2f 5f       	subi	r18, 0xFF	; 255
    3922:	3f 4f       	sbci	r19, 0xFF	; 255
    3924:	18 96       	adiw	r26, 0x08	; 8
    3926:	3c 93       	st	X, r19
    3928:	2e 93       	st	-X, r18
    392a:	17 97       	sbiw	r26, 0x07	; 7
    392c:	15 c0       	rjmp	.+42     	; 0x3958 <fputc+0x88>
    392e:	1d 96       	adiw	r26, 0x0d	; 13
    3930:	ed 91       	ld	r30, X+
    3932:	fc 91       	ld	r31, X
    3934:	1e 97       	sbiw	r26, 0x0e	; 14
    3936:	30 97       	sbiw	r30, 0x00	; 0
    3938:	19 f4       	brne	.+6      	; 0x3940 <fputc+0x70>
    393a:	8f ef       	ldi	r24, 0xFF	; 255
    393c:	9f ef       	ldi	r25, 0xFF	; 255
    393e:	0c c0       	rjmp	.+24     	; 0x3958 <fputc+0x88>
    3940:	8b 01       	movw	r16, r22
    3942:	ec 01       	movw	r28, r24
    3944:	19 95       	eicall
    3946:	89 2b       	or	r24, r25
    3948:	c1 f7       	brne	.-16     	; 0x393a <fputc+0x6a>
    394a:	f8 01       	movw	r30, r16
    394c:	87 81       	ldd	r24, Z+7	; 0x07
    394e:	90 85       	ldd	r25, Z+8	; 0x08
    3950:	01 96       	adiw	r24, 0x01	; 1
    3952:	90 87       	std	Z+8, r25	; 0x08
    3954:	87 83       	std	Z+7, r24	; 0x07
    3956:	ce 01       	movw	r24, r28
    3958:	df 91       	pop	r29
    395a:	cf 91       	pop	r28
    395c:	1f 91       	pop	r17
    395e:	0f 91       	pop	r16
    3960:	08 95       	ret

Disassembly of section .text.__fmt_d:

000022c0 <__fmt_d>:
    22c0:	ad e0       	ldi	r26, 0x0D	; 13
    22c2:	b0 e0       	ldi	r27, 0x00	; 0
    22c4:	e6 e6       	ldi	r30, 0x66	; 102
    22c6:	f1 e1       	ldi	r31, 0x11	; 17
    22c8:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
    22cc:	9a 87       	std	Y+10, r25	; 0x0a
    22ce:	89 87       	std	Y+9, r24	; 0x09
    22d0:	7c 83       	std	Y+4, r23	; 0x04
    22d2:	6b 83       	std	Y+3, r22	; 0x03
    22d4:	fa 01       	movw	r30, r20
    22d6:	db 01       	movw	r26, r22
    22d8:	12 96       	adiw	r26, 0x02	; 2
    22da:	cd 90       	ld	r12, X+
    22dc:	dc 90       	ld	r13, X
    22de:	13 97       	sbiw	r26, 0x03	; 3
    22e0:	14 96       	adiw	r26, 0x04	; 4
    22e2:	8d 91       	ld	r24, X+
    22e4:	9c 91       	ld	r25, X
    22e6:	15 97       	sbiw	r26, 0x05	; 5
    22e8:	9e 83       	std	Y+6, r25	; 0x06
    22ea:	8d 83       	std	Y+5, r24	; 0x05
    22ec:	ed 90       	ld	r14, X+
    22ee:	fc 90       	ld	r15, X
    22f0:	11 97       	sbiw	r26, 0x01	; 1
    22f2:	fa 82       	std	Y+2, r15	; 0x02
    22f4:	e9 82       	std	Y+1, r14	; 0x01
    22f6:	16 96       	adiw	r26, 0x06	; 6
    22f8:	0d 90       	ld	r0, X+
    22fa:	bc 91       	ld	r27, X
    22fc:	a0 2d       	mov	r26, r0
    22fe:	b8 87       	std	Y+8, r27	; 0x08
    2300:	af 83       	std	Y+7, r26	; 0x07
    2302:	20 80       	ld	r2, Z
    2304:	31 80       	ldd	r3, Z+1	; 0x01
    2306:	42 80       	ldd	r4, Z+2	; 0x02
    2308:	53 80       	ldd	r5, Z+3	; 0x03
    230a:	64 80       	ldd	r6, Z+4	; 0x04
    230c:	75 80       	ldd	r7, Z+5	; 0x05
    230e:	86 80       	ldd	r8, Z+6	; 0x06
    2310:	97 80       	ldd	r9, Z+7	; 0x07
    2312:	81 01       	movw	r16, r2
    2314:	b4 2d       	mov	r27, r4
    2316:	f5 2d       	mov	r31, r5
    2318:	e6 2d       	mov	r30, r6
    231a:	7b 86       	std	Y+11, r7	; 0x0b
    231c:	8c 86       	std	Y+12, r8	; 0x0c
    231e:	9d 86       	std	Y+13, r9	; 0x0d
    2320:	91 01       	movw	r18, r2
    2322:	a2 01       	movw	r20, r4
    2324:	b3 01       	movw	r22, r6
    2326:	c4 01       	movw	r24, r8
    2328:	a0 e0       	ldi	r26, 0x00	; 0
    232a:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    232e:	4c f4       	brge	.+18     	; 0x2342 <__fmt_d+0x82>
    2330:	0e 94 3a 22 	call	0x4474	; 0x4474 <__negdi2>
    2334:	89 01       	movw	r16, r18
    2336:	b4 2f       	mov	r27, r20
    2338:	f5 2f       	mov	r31, r21
    233a:	e6 2f       	mov	r30, r22
    233c:	7b 87       	std	Y+11, r23	; 0x0b
    233e:	8c 87       	std	Y+12, r24	; 0x0c
    2340:	9d 87       	std	Y+13, r25	; 0x0d
    2342:	d7 fc       	sbrc	r13, 7
    2344:	04 c0       	rjmp	.+8      	; 0x234e <__fmt_d+0x8e>
    2346:	e8 94       	clt
    2348:	e1 f8       	bld	r14, 1
    234a:	fa 82       	std	Y+2, r15	; 0x02
    234c:	e9 82       	std	Y+1, r14	; 0x01
    234e:	91 01       	movw	r18, r2
    2350:	a2 01       	movw	r20, r4
    2352:	b3 01       	movw	r22, r6
    2354:	c4 01       	movw	r24, r8
    2356:	a0 e0       	ldi	r26, 0x00	; 0
    2358:	ed 80       	ldd	r14, Y+5	; 0x05
    235a:	fe 80       	ldd	r15, Y+6	; 0x06
    235c:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    2360:	1c f0       	brlt	.+6      	; 0x2368 <__fmt_d+0xa8>
    2362:	89 81       	ldd	r24, Y+1	; 0x01
    2364:	82 ff       	sbrs	r24, 2
    2366:	04 c0       	rjmp	.+8      	; 0x2370 <__fmt_d+0xb0>
    2368:	81 e0       	ldi	r24, 0x01	; 1
    236a:	e8 1a       	sub	r14, r24
    236c:	f1 08       	sbc	r15, r1
    236e:	05 c0       	rjmp	.+10     	; 0x237a <__fmt_d+0xba>
    2370:	83 ff       	sbrs	r24, 3
    2372:	03 c0       	rjmp	.+6      	; 0x237a <__fmt_d+0xba>
    2374:	91 e0       	ldi	r25, 0x01	; 1
    2376:	e9 1a       	sub	r14, r25
    2378:	f1 08       	sbc	r15, r1
    237a:	ce 01       	movw	r24, r28
    237c:	01 96       	adiw	r24, 0x01	; 1
    237e:	5c 01       	movw	r10, r24
    2380:	8a e0       	ldi	r24, 0x0A	; 10
    2382:	c8 2e       	mov	r12, r24
    2384:	d1 2c       	mov	r13, r1
    2386:	2b 2f       	mov	r18, r27
    2388:	3f 2f       	mov	r19, r31
    238a:	4e 2f       	mov	r20, r30
    238c:	5b 85       	ldd	r21, Y+11	; 0x0b
    238e:	6c 85       	ldd	r22, Y+12	; 0x0c
    2390:	7d 85       	ldd	r23, Y+13	; 0x0d
    2392:	8b 81       	ldd	r24, Y+3	; 0x03
    2394:	9c 81       	ldd	r25, Y+4	; 0x04
    2396:	0e 94 80 13 	call	0x2700	; 0x2700 <__cvt_u>
    239a:	fc 01       	movw	r30, r24
    239c:	91 01       	movw	r18, r2
    239e:	a2 01       	movw	r20, r4
    23a0:	b3 01       	movw	r22, r6
    23a2:	c4 01       	movw	r24, r8
    23a4:	a0 e0       	ldi	r26, 0x00	; 0
    23a6:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    23aa:	1c f0       	brlt	.+6      	; 0x23b2 <__fmt_d+0xf2>
    23ac:	89 81       	ldd	r24, Y+1	; 0x01
    23ae:	82 ff       	sbrs	r24, 2
    23b0:	12 c0       	rjmp	.+36     	; 0x23d6 <__fmt_d+0x116>
    23b2:	31 97       	sbiw	r30, 0x01	; 1
    23b4:	0f 81       	ldd	r16, Y+7	; 0x07
    23b6:	18 85       	ldd	r17, Y+8	; 0x08
    23b8:	0e 0f       	add	r16, r30
    23ba:	1f 1f       	adc	r17, r31
    23bc:	91 01       	movw	r18, r2
    23be:	a2 01       	movw	r20, r4
    23c0:	b3 01       	movw	r22, r6
    23c2:	c4 01       	movw	r24, r8
    23c4:	a0 e0       	ldi	r26, 0x00	; 0
    23c6:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    23ca:	14 f0       	brlt	.+4      	; 0x23d0 <__fmt_d+0x110>
    23cc:	8b e2       	ldi	r24, 0x2B	; 43
    23ce:	01 c0       	rjmp	.+2      	; 0x23d2 <__fmt_d+0x112>
    23d0:	8d e2       	ldi	r24, 0x2D	; 45
    23d2:	d8 01       	movw	r26, r16
    23d4:	08 c0       	rjmp	.+16     	; 0x23e6 <__fmt_d+0x126>
    23d6:	83 ff       	sbrs	r24, 3
    23d8:	07 c0       	rjmp	.+14     	; 0x23e8 <__fmt_d+0x128>
    23da:	31 97       	sbiw	r30, 0x01	; 1
    23dc:	af 81       	ldd	r26, Y+7	; 0x07
    23de:	b8 85       	ldd	r27, Y+8	; 0x08
    23e0:	ae 0f       	add	r26, r30
    23e2:	bf 1f       	adc	r27, r31
    23e4:	80 e2       	ldi	r24, 0x20	; 32
    23e6:	8c 93       	st	X, r24
    23e8:	e9 80       	ldd	r14, Y+1	; 0x01
    23ea:	fa 80       	ldd	r15, Y+2	; 0x02
    23ec:	ab 81       	ldd	r26, Y+3	; 0x03
    23ee:	bc 81       	ldd	r27, Y+4	; 0x04
    23f0:	18 96       	adiw	r26, 0x08	; 8
    23f2:	2d 91       	ld	r18, X+
    23f4:	3c 91       	ld	r19, X
    23f6:	19 97       	sbiw	r26, 0x09	; 9
    23f8:	21 50       	subi	r18, 0x01	; 1
    23fa:	31 09       	sbc	r19, r1
    23fc:	2e 1b       	sub	r18, r30
    23fe:	3f 0b       	sbc	r19, r31
    2400:	8f 81       	ldd	r24, Y+7	; 0x07
    2402:	98 85       	ldd	r25, Y+8	; 0x08
    2404:	e8 0f       	add	r30, r24
    2406:	f9 1f       	adc	r31, r25
    2408:	af 01       	movw	r20, r30
    240a:	60 e8       	ldi	r22, 0x80	; 128
    240c:	0d 81       	ldd	r16, Y+5	; 0x05
    240e:	1e 81       	ldd	r17, Y+6	; 0x06
    2410:	89 85       	ldd	r24, Y+9	; 0x09
    2412:	9a 85       	ldd	r25, Y+10	; 0x0a
    2414:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__pad>
    2418:	9c 01       	movw	r18, r24
    241a:	a9 85       	ldd	r26, Y+9	; 0x09
    241c:	ba 85       	ldd	r27, Y+10	; 0x0a
    241e:	8d 91       	ld	r24, X+
    2420:	9c 91       	ld	r25, X
    2422:	90 ff       	sbrs	r25, 0
    2424:	07 c0       	rjmp	.+14     	; 0x2434 <__fmt_d+0x174>
    2426:	eb 81       	ldd	r30, Y+3	; 0x03
    2428:	fc 81       	ldd	r31, Y+4	; 0x04
    242a:	82 81       	ldd	r24, Z+2	; 0x02
    242c:	93 81       	ldd	r25, Z+3	; 0x03
    242e:	82 17       	cp	r24, r18
    2430:	93 07       	cpc	r25, r19
    2432:	0c f4       	brge	.+2      	; 0x2436 <__fmt_d+0x176>
    2434:	c9 01       	movw	r24, r18
    2436:	2d 96       	adiw	r28, 0x0d	; 13
    2438:	e2 e1       	ldi	r30, 0x12	; 18
    243a:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>

Disassembly of section .text.__fmt_o:

00002d7c <__fmt_o>:
    2d7c:	a2 e0       	ldi	r26, 0x02	; 2
    2d7e:	b0 e0       	ldi	r27, 0x00	; 0
    2d80:	e4 ec       	ldi	r30, 0xC4	; 196
    2d82:	f6 e1       	ldi	r31, 0x16	; 22
    2d84:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
    2d88:	1c 01       	movw	r2, r24
    2d8a:	4b 01       	movw	r8, r22
    2d8c:	fa 01       	movw	r30, r20
    2d8e:	db 01       	movw	r26, r22
    2d90:	12 96       	adiw	r26, 0x02	; 2
    2d92:	2d 91       	ld	r18, X+
    2d94:	3c 91       	ld	r19, X
    2d96:	13 97       	sbiw	r26, 0x03	; 3
    2d98:	14 96       	adiw	r26, 0x04	; 4
    2d9a:	4d 90       	ld	r4, X+
    2d9c:	5c 90       	ld	r5, X
    2d9e:	15 97       	sbiw	r26, 0x05	; 5
    2da0:	8d 91       	ld	r24, X+
    2da2:	9c 91       	ld	r25, X
    2da4:	11 97       	sbiw	r26, 0x01	; 1
    2da6:	9a 83       	std	Y+2, r25	; 0x02
    2da8:	89 83       	std	Y+1, r24	; 0x01
    2daa:	16 96       	adiw	r26, 0x06	; 6
    2dac:	6d 90       	ld	r6, X+
    2dae:	7c 90       	ld	r7, X
    2db0:	17 97       	sbiw	r26, 0x07	; 7
    2db2:	37 fd       	sbrc	r19, 7
    2db4:	03 c0       	rjmp	.+6      	; 0x2dbc <__fmt_o+0x40>
    2db6:	8d 7f       	andi	r24, 0xFD	; 253
    2db8:	9a 83       	std	Y+2, r25	; 0x02
    2dba:	89 83       	std	Y+1, r24	; 0x01
    2dbc:	00 81       	ld	r16, Z
    2dbe:	11 81       	ldd	r17, Z+1	; 0x01
    2dc0:	22 81       	ldd	r18, Z+2	; 0x02
    2dc2:	33 81       	ldd	r19, Z+3	; 0x03
    2dc4:	44 81       	ldd	r20, Z+4	; 0x04
    2dc6:	55 81       	ldd	r21, Z+5	; 0x05
    2dc8:	66 81       	ldd	r22, Z+6	; 0x06
    2dca:	77 81       	ldd	r23, Z+7	; 0x07
    2dcc:	fe 01       	movw	r30, r28
    2dce:	31 96       	adiw	r30, 0x01	; 1
    2dd0:	5f 01       	movw	r10, r30
    2dd2:	88 e0       	ldi	r24, 0x08	; 8
    2dd4:	c8 2e       	mov	r12, r24
    2dd6:	d1 2c       	mov	r13, r1
    2dd8:	72 01       	movw	r14, r4
    2dda:	c4 01       	movw	r24, r8
    2ddc:	0e 94 80 13 	call	0x2700	; 0x2700 <__cvt_u>
    2de0:	29 81       	ldd	r18, Y+1	; 0x01
    2de2:	24 ff       	sbrs	r18, 4
    2de4:	06 c0       	rjmp	.+12     	; 0x2df2 <__fmt_o+0x76>
    2de6:	01 97       	sbiw	r24, 0x01	; 1
    2de8:	f3 01       	movw	r30, r6
    2dea:	e8 0f       	add	r30, r24
    2dec:	f9 1f       	adc	r31, r25
    2dee:	20 e3       	ldi	r18, 0x30	; 48
    2df0:	20 83       	st	Z, r18
    2df2:	29 81       	ldd	r18, Y+1	; 0x01
    2df4:	23 ff       	sbrs	r18, 3
    2df6:	06 c0       	rjmp	.+12     	; 0x2e04 <__fmt_o+0x88>
    2df8:	01 97       	sbiw	r24, 0x01	; 1
    2dfa:	f3 01       	movw	r30, r6
    2dfc:	e8 0f       	add	r30, r24
    2dfe:	f9 1f       	adc	r31, r25
    2e00:	20 e2       	ldi	r18, 0x20	; 32
    2e02:	20 83       	st	Z, r18
    2e04:	e9 80       	ldd	r14, Y+1	; 0x01
    2e06:	fa 80       	ldd	r15, Y+2	; 0x02
    2e08:	d4 01       	movw	r26, r8
    2e0a:	18 96       	adiw	r26, 0x08	; 8
    2e0c:	2d 91       	ld	r18, X+
    2e0e:	3c 91       	ld	r19, X
    2e10:	19 97       	sbiw	r26, 0x09	; 9
    2e12:	21 50       	subi	r18, 0x01	; 1
    2e14:	31 09       	sbc	r19, r1
    2e16:	28 1b       	sub	r18, r24
    2e18:	39 0b       	sbc	r19, r25
    2e1a:	86 0d       	add	r24, r6
    2e1c:	97 1d       	adc	r25, r7
    2e1e:	ac 01       	movw	r20, r24
    2e20:	60 e8       	ldi	r22, 0x80	; 128
    2e22:	82 01       	movw	r16, r4
    2e24:	c1 01       	movw	r24, r2
    2e26:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__pad>
    2e2a:	9c 01       	movw	r18, r24
    2e2c:	f1 01       	movw	r30, r2
    2e2e:	80 81       	ld	r24, Z
    2e30:	91 81       	ldd	r25, Z+1	; 0x01
    2e32:	90 ff       	sbrs	r25, 0
    2e34:	08 c0       	rjmp	.+16     	; 0x2e46 <__fmt_o+0xca>
    2e36:	d4 01       	movw	r26, r8
    2e38:	12 96       	adiw	r26, 0x02	; 2
    2e3a:	8d 91       	ld	r24, X+
    2e3c:	9c 91       	ld	r25, X
    2e3e:	13 97       	sbiw	r26, 0x03	; 3
    2e40:	82 17       	cp	r24, r18
    2e42:	93 07       	cpc	r25, r19
    2e44:	0c f4       	brge	.+2      	; 0x2e48 <__fmt_o+0xcc>
    2e46:	c9 01       	movw	r24, r18
    2e48:	22 96       	adiw	r28, 0x02	; 2
    2e4a:	e2 e1       	ldi	r30, 0x12	; 18
    2e4c:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>

Disassembly of section .text.__cvt_u:

00002700 <__cvt_u>:
    2700:	a2 e1       	ldi	r26, 0x12	; 18
    2702:	b0 e0       	ldi	r27, 0x00	; 0
    2704:	e6 e8       	ldi	r30, 0x86	; 134
    2706:	f3 e1       	ldi	r31, 0x13	; 19
    2708:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
    270c:	fc 01       	movw	r30, r24
    270e:	0a 8b       	std	Y+18, r16	; 0x12
    2710:	1b 83       	std	Y+3, r17	; 0x03
    2712:	2c 83       	std	Y+4, r18	; 0x04
    2714:	73 2e       	mov	r7, r19
    2716:	64 2e       	mov	r6, r20
    2718:	55 2e       	mov	r5, r21
    271a:	46 2e       	mov	r4, r22
    271c:	7d 83       	std	Y+5, r23	; 0x05
    271e:	cc 86       	std	Y+12, r12	; 0x0c
    2720:	d8 86       	std	Y+8, r13	; 0x08
    2722:	bf 82       	std	Y+7, r11	; 0x07
    2724:	ae 82       	std	Y+6, r10	; 0x06
    2726:	86 81       	ldd	r24, Z+6	; 0x06
    2728:	97 81       	ldd	r25, Z+7	; 0x07
    272a:	9b 87       	std	Y+11, r25	; 0x0b
    272c:	8a 87       	std	Y+10, r24	; 0x0a
    272e:	d5 01       	movw	r26, r10
    2730:	4d 91       	ld	r20, X+
    2732:	5c 91       	ld	r21, X
    2734:	22 81       	ldd	r18, Z+2	; 0x02
    2736:	33 81       	ldd	r19, Z+3	; 0x03
    2738:	80 85       	ldd	r24, Z+8	; 0x08
    273a:	91 85       	ldd	r25, Z+9	; 0x09
    273c:	01 97       	sbiw	r24, 0x01	; 1
    273e:	1c 01       	movw	r2, r24
    2740:	37 ff       	sbrs	r19, 7
    2742:	02 c0       	rjmp	.+4      	; 0x2748 <__cvt_u+0x48>
    2744:	21 e0       	ldi	r18, 0x01	; 1
    2746:	30 e0       	ldi	r19, 0x00	; 0
    2748:	ea 85       	ldd	r30, Y+10	; 0x0a
    274a:	fb 85       	ldd	r31, Y+11	; 0x0b
    274c:	e8 0f       	add	r30, r24
    274e:	f9 1f       	adc	r31, r25
    2750:	10 82       	st	Z, r1
    2752:	47 01       	movw	r8, r14
    2754:	e1 e0       	ldi	r30, 0x01	; 1
    2756:	f0 e0       	ldi	r31, 0x00	; 0
    2758:	fa 83       	std	Y+2, r31	; 0x02
    275a:	e9 83       	std	Y+1, r30	; 0x01
    275c:	c9 01       	movw	r24, r18
    275e:	8e 19       	sub	r24, r14
    2760:	9f 09       	sbc	r25, r15
    2762:	9e 87       	std	Y+14, r25	; 0x0e
    2764:	8d 87       	std	Y+13, r24	; 0x0d
    2766:	da 01       	movw	r26, r20
    2768:	a2 70       	andi	r26, 0x02	; 2
    276a:	bb 27       	eor	r27, r27
    276c:	b8 8b       	std	Y+16, r27	; 0x10
    276e:	af 87       	std	Y+15, r26	; 0x0f
    2770:	b8 85       	ldd	r27, Y+8	; 0x08
    2772:	bb 0f       	add	r27, r27
    2774:	bb 0b       	sbc	r27, r27
    2776:	b9 8b       	std	Y+17, r27	; 0x11
    2778:	12 14       	cp	r1, r2
    277a:	13 04       	cpc	r1, r3
    277c:	74 f0       	brlt	.+28     	; 0x279a <__cvt_u+0x9a>
    277e:	a9 81       	ldd	r26, Y+1	; 0x01
    2780:	ba 81       	ldd	r27, Y+2	; 0x02
    2782:	ab 2b       	or	r26, r27
    2784:	09 f0       	breq	.+2      	; 0x2788 <__cvt_u+0x88>
    2786:	5c c0       	rjmp	.+184    	; 0x2840 <__cvt_u+0x140>
    2788:	ae 81       	ldd	r26, Y+6	; 0x06
    278a:	bf 81       	ldd	r27, Y+7	; 0x07
    278c:	8d 91       	ld	r24, X+
    278e:	9c 91       	ld	r25, X
    2790:	11 97       	sbiw	r26, 0x01	; 1
    2792:	8f 7e       	andi	r24, 0xEF	; 239
    2794:	8d 93       	st	X+, r24
    2796:	9c 93       	st	X, r25
    2798:	53 c0       	rjmp	.+166    	; 0x2840 <__cvt_u+0x140>
    279a:	2a 89       	ldd	r18, Y+18	; 0x12
    279c:	3b 81       	ldd	r19, Y+3	; 0x03
    279e:	4c 81       	ldd	r20, Y+4	; 0x04
    27a0:	57 2d       	mov	r21, r7
    27a2:	66 2d       	mov	r22, r6
    27a4:	75 2d       	mov	r23, r5
    27a6:	84 2d       	mov	r24, r4
    27a8:	9d 81       	ldd	r25, Y+5	; 0x05
    27aa:	a0 e0       	ldi	r26, 0x00	; 0
    27ac:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    27b0:	b1 f1       	breq	.+108    	; 0x281e <__cvt_u+0x11e>
    27b2:	e1 e0       	ldi	r30, 0x01	; 1
    27b4:	2e 1a       	sub	r2, r30
    27b6:	31 08       	sbc	r3, r1
    27b8:	fc 85       	ldd	r31, Y+12	; 0x0c
    27ba:	f9 87       	std	Y+9, r31	; 0x09
    27bc:	af 2e       	mov	r10, r31
    27be:	b8 84       	ldd	r11, Y+8	; 0x08
    27c0:	c9 88       	ldd	r12, Y+17	; 0x11
    27c2:	dc 2c       	mov	r13, r12
    27c4:	ec 2c       	mov	r14, r12
    27c6:	fc 2c       	mov	r15, r12
    27c8:	0c 2d       	mov	r16, r12
    27ca:	1c 2d       	mov	r17, r12
    27cc:	2a 89       	ldd	r18, Y+18	; 0x12
    27ce:	3b 81       	ldd	r19, Y+3	; 0x03
    27d0:	4c 81       	ldd	r20, Y+4	; 0x04
    27d2:	57 2d       	mov	r21, r7
    27d4:	66 2d       	mov	r22, r6
    27d6:	75 2d       	mov	r23, r5
    27d8:	84 2d       	mov	r24, r4
    27da:	9d 81       	ldd	r25, Y+5	; 0x05
    27dc:	0e 94 67 22 	call	0x44ce	; 0x44ce <__umoddi3>
    27e0:	c9 01       	movw	r24, r18
    27e2:	29 83       	std	Y+1, r18	; 0x01
    27e4:	9a 83       	std	Y+2, r25	; 0x02
    27e6:	ea 85       	ldd	r30, Y+10	; 0x0a
    27e8:	fb 85       	ldd	r31, Y+11	; 0x0b
    27ea:	e2 0d       	add	r30, r2
    27ec:	f3 1d       	adc	r31, r3
    27ee:	80 5d       	subi	r24, 0xD0	; 208
    27f0:	80 83       	st	Z, r24
    27f2:	81 e0       	ldi	r24, 0x01	; 1
    27f4:	88 1a       	sub	r8, r24
    27f6:	91 08       	sbc	r9, r1
    27f8:	2a 89       	ldd	r18, Y+18	; 0x12
    27fa:	3b 81       	ldd	r19, Y+3	; 0x03
    27fc:	4c 81       	ldd	r20, Y+4	; 0x04
    27fe:	57 2d       	mov	r21, r7
    2800:	66 2d       	mov	r22, r6
    2802:	75 2d       	mov	r23, r5
    2804:	84 2d       	mov	r24, r4
    2806:	9d 81       	ldd	r25, Y+5	; 0x05
    2808:	0e 94 69 22 	call	0x44d2	; 0x44d2 <__udivdi3>
    280c:	2a 8b       	std	Y+18, r18	; 0x12
    280e:	3b 83       	std	Y+3, r19	; 0x03
    2810:	4c 83       	std	Y+4, r20	; 0x04
    2812:	75 2e       	mov	r7, r21
    2814:	66 2e       	mov	r6, r22
    2816:	57 2e       	mov	r5, r23
    2818:	48 2e       	mov	r4, r24
    281a:	9d 83       	std	Y+5, r25	; 0x05
    281c:	ad cf       	rjmp	.-166    	; 0x2778 <__cvt_u+0x78>
    281e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2820:	9e 85       	ldd	r25, Y+14	; 0x0e
    2822:	88 0d       	add	r24, r8
    2824:	99 1d       	adc	r25, r9
    2826:	18 16       	cp	r1, r24
    2828:	19 06       	cpc	r1, r25
    282a:	1c f2       	brlt	.-122    	; 0x27b2 <__cvt_u+0xb2>
    282c:	18 14       	cp	r1, r8
    282e:	19 04       	cpc	r1, r9
    2830:	0c f0       	brlt	.+2      	; 0x2834 <__cvt_u+0x134>
    2832:	a5 cf       	rjmp	.-182    	; 0x277e <__cvt_u+0x7e>
    2834:	ef 85       	ldd	r30, Y+15	; 0x0f
    2836:	f8 89       	ldd	r31, Y+16	; 0x10
    2838:	ef 2b       	or	r30, r31
    283a:	09 f0       	breq	.+2      	; 0x283e <__cvt_u+0x13e>
    283c:	ba cf       	rjmp	.-140    	; 0x27b2 <__cvt_u+0xb2>
    283e:	9f cf       	rjmp	.-194    	; 0x277e <__cvt_u+0x7e>
    2840:	c1 01       	movw	r24, r2
    2842:	62 96       	adiw	r28, 0x12	; 18
    2844:	e2 e1       	ldi	r30, 0x12	; 18
    2846:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>

Disassembly of section .text.__fmt_u:

000032f4 <__fmt_u>:
    32f4:	a2 e0       	ldi	r26, 0x02	; 2
    32f6:	b0 e0       	ldi	r27, 0x00	; 0
    32f8:	e0 e8       	ldi	r30, 0x80	; 128
    32fa:	f9 e1       	ldi	r31, 0x19	; 25
    32fc:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
    3300:	3c 01       	movw	r6, r24
    3302:	4b 01       	movw	r8, r22
    3304:	fa 01       	movw	r30, r20
    3306:	db 01       	movw	r26, r22
    3308:	12 96       	adiw	r26, 0x02	; 2
    330a:	2d 91       	ld	r18, X+
    330c:	3c 91       	ld	r19, X
    330e:	13 97       	sbiw	r26, 0x03	; 3
    3310:	14 96       	adiw	r26, 0x04	; 4
    3312:	4d 90       	ld	r4, X+
    3314:	5c 90       	ld	r5, X
    3316:	15 97       	sbiw	r26, 0x05	; 5
    3318:	8d 91       	ld	r24, X+
    331a:	9c 91       	ld	r25, X
    331c:	11 97       	sbiw	r26, 0x01	; 1
    331e:	9a 83       	std	Y+2, r25	; 0x02
    3320:	89 83       	std	Y+1, r24	; 0x01
    3322:	16 96       	adiw	r26, 0x06	; 6
    3324:	2d 90       	ld	r2, X+
    3326:	3c 90       	ld	r3, X
    3328:	17 97       	sbiw	r26, 0x07	; 7
    332a:	37 fd       	sbrc	r19, 7
    332c:	03 c0       	rjmp	.+6      	; 0x3334 <__fmt_u+0x40>
    332e:	8d 7f       	andi	r24, 0xFD	; 253
    3330:	9a 83       	std	Y+2, r25	; 0x02
    3332:	89 83       	std	Y+1, r24	; 0x01
    3334:	00 81       	ld	r16, Z
    3336:	11 81       	ldd	r17, Z+1	; 0x01
    3338:	22 81       	ldd	r18, Z+2	; 0x02
    333a:	33 81       	ldd	r19, Z+3	; 0x03
    333c:	44 81       	ldd	r20, Z+4	; 0x04
    333e:	55 81       	ldd	r21, Z+5	; 0x05
    3340:	66 81       	ldd	r22, Z+6	; 0x06
    3342:	77 81       	ldd	r23, Z+7	; 0x07
    3344:	fe 01       	movw	r30, r28
    3346:	31 96       	adiw	r30, 0x01	; 1
    3348:	5f 01       	movw	r10, r30
    334a:	8a e0       	ldi	r24, 0x0A	; 10
    334c:	c8 2e       	mov	r12, r24
    334e:	d1 2c       	mov	r13, r1
    3350:	72 01       	movw	r14, r4
    3352:	c4 01       	movw	r24, r8
    3354:	0e 94 80 13 	call	0x2700	; 0x2700 <__cvt_u>
    3358:	e9 80       	ldd	r14, Y+1	; 0x01
    335a:	fa 80       	ldd	r15, Y+2	; 0x02
    335c:	d4 01       	movw	r26, r8
    335e:	18 96       	adiw	r26, 0x08	; 8
    3360:	2d 91       	ld	r18, X+
    3362:	3c 91       	ld	r19, X
    3364:	19 97       	sbiw	r26, 0x09	; 9
    3366:	21 50       	subi	r18, 0x01	; 1
    3368:	31 09       	sbc	r19, r1
    336a:	28 1b       	sub	r18, r24
    336c:	39 0b       	sbc	r19, r25
    336e:	82 0d       	add	r24, r2
    3370:	93 1d       	adc	r25, r3
    3372:	ac 01       	movw	r20, r24
    3374:	60 e8       	ldi	r22, 0x80	; 128
    3376:	82 01       	movw	r16, r4
    3378:	c3 01       	movw	r24, r6
    337a:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__pad>
    337e:	9c 01       	movw	r18, r24
    3380:	f3 01       	movw	r30, r6
    3382:	80 81       	ld	r24, Z
    3384:	91 81       	ldd	r25, Z+1	; 0x01
    3386:	90 ff       	sbrs	r25, 0
    3388:	08 c0       	rjmp	.+16     	; 0x339a <__fmt_u+0xa6>
    338a:	d4 01       	movw	r26, r8
    338c:	12 96       	adiw	r26, 0x02	; 2
    338e:	8d 91       	ld	r24, X+
    3390:	9c 91       	ld	r25, X
    3392:	13 97       	sbiw	r26, 0x03	; 3
    3394:	82 17       	cp	r24, r18
    3396:	93 07       	cpc	r25, r19
    3398:	0c f4       	brge	.+2      	; 0x339c <__fmt_u+0xa8>
    339a:	c9 01       	movw	r24, r18
    339c:	22 96       	adiw	r28, 0x02	; 2
    339e:	e2 e1       	ldi	r30, 0x12	; 18
    33a0:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>

Disassembly of section .text.__fmt_x:

00002040 <__fmt_x>:
    2040:	a4 e1       	ldi	r26, 0x14	; 20
    2042:	b0 e0       	ldi	r27, 0x00	; 0
    2044:	e6 e2       	ldi	r30, 0x26	; 38
    2046:	f0 e1       	ldi	r31, 0x10	; 16
    2048:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
    204c:	98 87       	std	Y+8, r25	; 0x08
    204e:	8f 83       	std	Y+7, r24	; 0x07
    2050:	7a 83       	std	Y+2, r23	; 0x02
    2052:	69 83       	std	Y+1, r22	; 0x01
    2054:	5c 8b       	std	Y+20, r21	; 0x14
    2056:	4b 8b       	std	Y+19, r20	; 0x13
    2058:	12 2f       	mov	r17, r18
    205a:	db 01       	movw	r26, r22
    205c:	12 96       	adiw	r26, 0x02	; 2
    205e:	ed 91       	ld	r30, X+
    2060:	fc 91       	ld	r31, X
    2062:	13 97       	sbiw	r26, 0x03	; 3
    2064:	14 96       	adiw	r26, 0x04	; 4
    2066:	2d 91       	ld	r18, X+
    2068:	3c 91       	ld	r19, X
    206a:	15 97       	sbiw	r26, 0x05	; 5
    206c:	3e 83       	std	Y+6, r19	; 0x06
    206e:	2d 83       	std	Y+5, r18	; 0x05
    2070:	ed 90       	ld	r14, X+
    2072:	fc 90       	ld	r15, X
    2074:	11 97       	sbiw	r26, 0x01	; 1
    2076:	16 96       	adiw	r26, 0x06	; 6
    2078:	2d 90       	ld	r2, X+
    207a:	3c 90       	ld	r3, X
    207c:	17 97       	sbiw	r26, 0x07	; 7
    207e:	f7 fd       	sbrc	r31, 7
    2080:	03 c0       	rjmp	.+6      	; 0x2088 <__fmt_x+0x48>
    2082:	e8 94       	clt
    2084:	e1 f8       	bld	r14, 1
    2086:	02 c0       	rjmp	.+4      	; 0x208c <__fmt_x+0x4c>
    2088:	e1 e0       	ldi	r30, 0x01	; 1
    208a:	f0 e0       	ldi	r31, 0x00	; 0
    208c:	c7 01       	movw	r24, r14
    208e:	80 71       	andi	r24, 0x10	; 16
    2090:	99 27       	eor	r25, r25
    2092:	9a 87       	std	Y+10, r25	; 0x0a
    2094:	89 87       	std	Y+9, r24	; 0x09
    2096:	e4 fe       	sbrs	r14, 4
    2098:	1f c0       	rjmp	.+62     	; 0x20d8 <__fmt_x+0x98>
    209a:	ab 89       	ldd	r26, Y+19	; 0x13
    209c:	bc 89       	ldd	r27, Y+20	; 0x14
    209e:	2c 91       	ld	r18, X
    20a0:	11 96       	adiw	r26, 0x01	; 1
    20a2:	3c 91       	ld	r19, X
    20a4:	11 97       	sbiw	r26, 0x01	; 1
    20a6:	12 96       	adiw	r26, 0x02	; 2
    20a8:	4c 91       	ld	r20, X
    20aa:	12 97       	sbiw	r26, 0x02	; 2
    20ac:	13 96       	adiw	r26, 0x03	; 3
    20ae:	5c 91       	ld	r21, X
    20b0:	13 97       	sbiw	r26, 0x03	; 3
    20b2:	14 96       	adiw	r26, 0x04	; 4
    20b4:	6c 91       	ld	r22, X
    20b6:	14 97       	sbiw	r26, 0x04	; 4
    20b8:	15 96       	adiw	r26, 0x05	; 5
    20ba:	7c 91       	ld	r23, X
    20bc:	15 97       	sbiw	r26, 0x05	; 5
    20be:	16 96       	adiw	r26, 0x06	; 6
    20c0:	8c 91       	ld	r24, X
    20c2:	16 97       	sbiw	r26, 0x06	; 6
    20c4:	17 96       	adiw	r26, 0x07	; 7
    20c6:	9c 91       	ld	r25, X
    20c8:	a0 e0       	ldi	r26, 0x00	; 0
    20ca:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    20ce:	21 f0       	breq	.+8      	; 0x20d8 <__fmt_x+0x98>
    20d0:	8d 81       	ldd	r24, Y+5	; 0x05
    20d2:	9e 81       	ldd	r25, Y+6	; 0x06
    20d4:	02 97       	sbiw	r24, 0x02	; 2
    20d6:	02 c0       	rjmp	.+4      	; 0x20dc <__fmt_x+0x9c>
    20d8:	8d 81       	ldd	r24, Y+5	; 0x05
    20da:	9e 81       	ldd	r25, Y+6	; 0x06
    20dc:	97 01       	movw	r18, r14
    20de:	28 70       	andi	r18, 0x08	; 8
    20e0:	33 27       	eor	r19, r19
    20e2:	3c 87       	std	Y+12, r19	; 0x0c
    20e4:	2b 87       	std	Y+11, r18	; 0x0b
    20e6:	e3 fc       	sbrc	r14, 3
    20e8:	01 97       	sbiw	r24, 0x01	; 1
    20ea:	ab 89       	ldd	r26, Y+19	; 0x13
    20ec:	bc 89       	ldd	r27, Y+20	; 0x14
    20ee:	4c 90       	ld	r4, X
    20f0:	11 96       	adiw	r26, 0x01	; 1
    20f2:	5c 90       	ld	r5, X
    20f4:	11 97       	sbiw	r26, 0x01	; 1
    20f6:	12 96       	adiw	r26, 0x02	; 2
    20f8:	6c 90       	ld	r6, X
    20fa:	12 97       	sbiw	r26, 0x02	; 2
    20fc:	13 96       	adiw	r26, 0x03	; 3
    20fe:	7c 90       	ld	r7, X
    2100:	13 97       	sbiw	r26, 0x03	; 3
    2102:	14 96       	adiw	r26, 0x04	; 4
    2104:	8c 90       	ld	r8, X
    2106:	14 97       	sbiw	r26, 0x04	; 4
    2108:	15 96       	adiw	r26, 0x05	; 5
    210a:	9c 90       	ld	r9, X
    210c:	15 97       	sbiw	r26, 0x05	; 5
    210e:	16 96       	adiw	r26, 0x06	; 6
    2110:	ac 90       	ld	r10, X
    2112:	16 97       	sbiw	r26, 0x06	; 6
    2114:	17 96       	adiw	r26, 0x07	; 7
    2116:	bc 90       	ld	r11, X
    2118:	a9 81       	ldd	r26, Y+1	; 0x01
    211a:	ba 81       	ldd	r27, Y+2	; 0x02
    211c:	18 96       	adiw	r26, 0x08	; 8
    211e:	cd 90       	ld	r12, X+
    2120:	dc 90       	ld	r13, X
    2122:	19 97       	sbiw	r26, 0x09	; 9
    2124:	b1 e0       	ldi	r27, 0x01	; 1
    2126:	cb 1a       	sub	r12, r27
    2128:	d1 08       	sbc	r13, r1
    212a:	d1 01       	movw	r26, r2
    212c:	ac 0d       	add	r26, r12
    212e:	bd 1d       	adc	r27, r13
    2130:	1c 92       	st	X, r1
    2132:	9c 83       	std	Y+4, r25	; 0x04
    2134:	8b 83       	std	Y+3, r24	; 0x03
    2136:	9f 01       	movw	r18, r30
    2138:	28 1b       	sub	r18, r24
    213a:	39 0b       	sbc	r19, r25
    213c:	3e 87       	std	Y+14, r19	; 0x0e
    213e:	2d 87       	std	Y+13, r18	; 0x0d
    2140:	c7 01       	movw	r24, r14
    2142:	82 70       	andi	r24, 0x02	; 2
    2144:	99 27       	eor	r25, r25
    2146:	98 8b       	std	Y+16, r25	; 0x10
    2148:	8f 87       	std	Y+15, r24	; 0x0f
    214a:	81 2f       	mov	r24, r17
    214c:	01 2e       	mov	r0, r17
    214e:	00 0c       	add	r0, r0
    2150:	99 0b       	sbc	r25, r25
    2152:	dc 01       	movw	r26, r24
    2154:	a1 54       	subi	r26, 0x41	; 65
    2156:	b1 09       	sbc	r27, r1
    2158:	ba 8b       	std	Y+18, r27	; 0x12
    215a:	a9 8b       	std	Y+17, r26	; 0x11
    215c:	32 e0       	ldi	r19, 0x02	; 2
    215e:	c3 16       	cp	r12, r19
    2160:	d1 04       	cpc	r13, r1
    2162:	34 f4       	brge	.+12     	; 0x2170 <__fmt_x+0x130>
    2164:	89 85       	ldd	r24, Y+9	; 0x09
    2166:	9a 85       	ldd	r25, Y+10	; 0x0a
    2168:	89 2b       	or	r24, r25
    216a:	09 f0       	breq	.+2      	; 0x216e <__fmt_x+0x12e>
    216c:	4c c0       	rjmp	.+152    	; 0x2206 <__stack+0x7>
    216e:	73 c0       	rjmp	.+230    	; 0x2256 <__stack+0x57>
    2170:	92 01       	movw	r18, r4
    2172:	a3 01       	movw	r20, r6
    2174:	b4 01       	movw	r22, r8
    2176:	c5 01       	movw	r24, r10
    2178:	a0 e0       	ldi	r26, 0x00	; 0
    217a:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    217e:	81 f1       	breq	.+96     	; 0x21e0 <__fmt_x+0x1a0>
    2180:	b1 e0       	ldi	r27, 0x01	; 1
    2182:	cb 1a       	sub	r12, r27
    2184:	d1 08       	sbc	r13, r1
    2186:	c2 01       	movw	r24, r4
    2188:	8f 70       	andi	r24, 0x0F	; 15
    218a:	99 27       	eor	r25, r25
    218c:	8a 30       	cpi	r24, 0x0A	; 10
    218e:	91 05       	cpc	r25, r1
    2190:	14 f4       	brge	.+4      	; 0x2196 <__fmt_x+0x156>
    2192:	c0 96       	adiw	r24, 0x30	; 48
    2194:	02 c0       	rjmp	.+4      	; 0x219a <__fmt_x+0x15a>
    2196:	89 5a       	subi	r24, 0xA9	; 169
    2198:	9f 4f       	sbci	r25, 0xFF	; 255
    219a:	e9 89       	ldd	r30, Y+17	; 0x11
    219c:	fa 89       	ldd	r31, Y+18	; 0x12
    219e:	7a 97       	sbiw	r30, 0x1a	; 26
    21a0:	48 f4       	brcc	.+18     	; 0x21b4 <__fmt_x+0x174>
    21a2:	9c 01       	movw	r18, r24
    21a4:	20 62       	ori	r18, 0x20	; 32
    21a6:	21 56       	subi	r18, 0x61	; 97
    21a8:	31 09       	sbc	r19, r1
    21aa:	2a 31       	cpi	r18, 0x1A	; 26
    21ac:	31 05       	cpc	r19, r1
    21ae:	10 f4       	brcc	.+4      	; 0x21b4 <__fmt_x+0x174>
    21b0:	0e 94 df 22 	call	0x45be	; 0x45be <toupper>
    21b4:	f1 01       	movw	r30, r2
    21b6:	ec 0d       	add	r30, r12
    21b8:	fd 1d       	adc	r31, r13
    21ba:	80 83       	st	Z, r24
    21bc:	2b 81       	ldd	r18, Y+3	; 0x03
    21be:	3c 81       	ldd	r19, Y+4	; 0x04
    21c0:	21 50       	subi	r18, 0x01	; 1
    21c2:	31 09       	sbc	r19, r1
    21c4:	3c 83       	std	Y+4, r19	; 0x04
    21c6:	2b 83       	std	Y+3, r18	; 0x03
    21c8:	92 01       	movw	r18, r4
    21ca:	a3 01       	movw	r20, r6
    21cc:	b4 01       	movw	r22, r8
    21ce:	c5 01       	movw	r24, r10
    21d0:	04 e0       	ldi	r16, 0x04	; 4
    21d2:	0e 94 b8 20 	call	0x4170	; 0x4170 <__lshrdi3>
    21d6:	29 01       	movw	r4, r18
    21d8:	3a 01       	movw	r6, r20
    21da:	4b 01       	movw	r8, r22
    21dc:	5c 01       	movw	r10, r24
    21de:	be cf       	rjmp	.-132    	; 0x215c <__fmt_x+0x11c>
    21e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    21e2:	9e 85       	ldd	r25, Y+14	; 0x0e
    21e4:	ab 81       	ldd	r26, Y+3	; 0x03
    21e6:	bc 81       	ldd	r27, Y+4	; 0x04
    21e8:	8a 0f       	add	r24, r26
    21ea:	9b 1f       	adc	r25, r27
    21ec:	18 16       	cp	r1, r24
    21ee:	19 06       	cpc	r1, r25
    21f0:	3c f2       	brlt	.-114    	; 0x2180 <__fmt_x+0x140>
    21f2:	1a 16       	cp	r1, r26
    21f4:	1b 06       	cpc	r1, r27
    21f6:	0c f0       	brlt	.+2      	; 0x21fa <__fmt_x+0x1ba>
    21f8:	b5 cf       	rjmp	.-150    	; 0x2164 <__fmt_x+0x124>
    21fa:	ef 85       	ldd	r30, Y+15	; 0x0f
    21fc:	f8 89       	ldd	r31, Y+16	; 0x10
    21fe:	ef 2b       	or	r30, r31
    2200:	09 f0       	breq	.+2      	; 0x2204 <__stack+0x5>
    2202:	be cf       	rjmp	.-132    	; 0x2180 <__fmt_x+0x140>
    2204:	af cf       	rjmp	.-162    	; 0x2164 <__fmt_x+0x124>
    2206:	ab 89       	ldd	r26, Y+19	; 0x13
    2208:	bc 89       	ldd	r27, Y+20	; 0x14
    220a:	2c 91       	ld	r18, X
    220c:	11 96       	adiw	r26, 0x01	; 1
    220e:	3c 91       	ld	r19, X
    2210:	11 97       	sbiw	r26, 0x01	; 1
    2212:	12 96       	adiw	r26, 0x02	; 2
    2214:	4c 91       	ld	r20, X
    2216:	12 97       	sbiw	r26, 0x02	; 2
    2218:	13 96       	adiw	r26, 0x03	; 3
    221a:	5c 91       	ld	r21, X
    221c:	13 97       	sbiw	r26, 0x03	; 3
    221e:	14 96       	adiw	r26, 0x04	; 4
    2220:	6c 91       	ld	r22, X
    2222:	14 97       	sbiw	r26, 0x04	; 4
    2224:	15 96       	adiw	r26, 0x05	; 5
    2226:	7c 91       	ld	r23, X
    2228:	15 97       	sbiw	r26, 0x05	; 5
    222a:	16 96       	adiw	r26, 0x06	; 6
    222c:	8c 91       	ld	r24, X
    222e:	16 97       	sbiw	r26, 0x06	; 6
    2230:	17 96       	adiw	r26, 0x07	; 7
    2232:	9c 91       	ld	r25, X
    2234:	a0 e0       	ldi	r26, 0x00	; 0
    2236:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    223a:	69 f0       	breq	.+26     	; 0x2256 <__stack+0x57>
    223c:	f1 01       	movw	r30, r2
    223e:	ec 0d       	add	r30, r12
    2240:	fd 1d       	adc	r31, r13
    2242:	31 97       	sbiw	r30, 0x01	; 1
    2244:	10 83       	st	Z, r17
    2246:	b2 e0       	ldi	r27, 0x02	; 2
    2248:	cb 1a       	sub	r12, r27
    224a:	d1 08       	sbc	r13, r1
    224c:	f1 01       	movw	r30, r2
    224e:	ec 0d       	add	r30, r12
    2250:	fd 1d       	adc	r31, r13
    2252:	80 e3       	ldi	r24, 0x30	; 48
    2254:	80 83       	st	Z, r24
    2256:	eb 85       	ldd	r30, Y+11	; 0x0b
    2258:	fc 85       	ldd	r31, Y+12	; 0x0c
    225a:	ef 2b       	or	r30, r31
    225c:	41 f0       	breq	.+16     	; 0x226e <__stack+0x6f>
    225e:	f1 e0       	ldi	r31, 0x01	; 1
    2260:	cf 1a       	sub	r12, r31
    2262:	d1 08       	sbc	r13, r1
    2264:	f1 01       	movw	r30, r2
    2266:	ec 0d       	add	r30, r12
    2268:	fd 1d       	adc	r31, r13
    226a:	80 e2       	ldi	r24, 0x20	; 32
    226c:	80 83       	st	Z, r24
    226e:	a9 81       	ldd	r26, Y+1	; 0x01
    2270:	ba 81       	ldd	r27, Y+2	; 0x02
    2272:	18 96       	adiw	r26, 0x08	; 8
    2274:	2d 91       	ld	r18, X+
    2276:	3c 91       	ld	r19, X
    2278:	19 97       	sbiw	r26, 0x09	; 9
    227a:	21 50       	subi	r18, 0x01	; 1
    227c:	31 09       	sbc	r19, r1
    227e:	2c 19       	sub	r18, r12
    2280:	3d 09       	sbc	r19, r13
    2282:	c2 0c       	add	r12, r2
    2284:	d3 1c       	adc	r13, r3
    2286:	a6 01       	movw	r20, r12
    2288:	60 e8       	ldi	r22, 0x80	; 128
    228a:	0d 81       	ldd	r16, Y+5	; 0x05
    228c:	1e 81       	ldd	r17, Y+6	; 0x06
    228e:	8f 81       	ldd	r24, Y+7	; 0x07
    2290:	98 85       	ldd	r25, Y+8	; 0x08
    2292:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__pad>
    2296:	9c 01       	movw	r18, r24
    2298:	ef 81       	ldd	r30, Y+7	; 0x07
    229a:	f8 85       	ldd	r31, Y+8	; 0x08
    229c:	80 81       	ld	r24, Z
    229e:	91 81       	ldd	r25, Z+1	; 0x01
    22a0:	90 ff       	sbrs	r25, 0
    22a2:	09 c0       	rjmp	.+18     	; 0x22b6 <__stack+0xb7>
    22a4:	a9 81       	ldd	r26, Y+1	; 0x01
    22a6:	ba 81       	ldd	r27, Y+2	; 0x02
    22a8:	12 96       	adiw	r26, 0x02	; 2
    22aa:	8d 91       	ld	r24, X+
    22ac:	9c 91       	ld	r25, X
    22ae:	13 97       	sbiw	r26, 0x03	; 3
    22b0:	82 17       	cp	r24, r18
    22b2:	93 07       	cpc	r25, r19
    22b4:	0c f4       	brge	.+2      	; 0x22b8 <__stack+0xb9>
    22b6:	c9 01       	movw	r24, r18
    22b8:	64 96       	adiw	r28, 0x14	; 20
    22ba:	e2 e1       	ldi	r30, 0x12	; 18
    22bc:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>

Disassembly of section .text.__pop_float:

0000412c <__pop_float>:
    412c:	fa 01       	movw	r30, r20
    412e:	60 38       	cpi	r22, 0x80	; 128
    4130:	71 05       	cpc	r23, r1
    4132:	cc f0       	brlt	.+50     	; 0x4166 <__pop_float+0x3a>
    4134:	62 38       	cpi	r22, 0x82	; 130
    4136:	71 05       	cpc	r23, r1
    4138:	1c f0       	brlt	.+6      	; 0x4140 <__pop_float+0x14>
    413a:	63 38       	cpi	r22, 0x83	; 131
    413c:	71 05       	cpc	r23, r1
    413e:	99 f4       	brne	.+38     	; 0x4166 <__pop_float+0x3a>
    4140:	a0 81       	ld	r26, Z
    4142:	b1 81       	ldd	r27, Z+1	; 0x01
    4144:	9d 01       	movw	r18, r26
    4146:	2c 5f       	subi	r18, 0xFC	; 252
    4148:	3f 4f       	sbci	r19, 0xFF	; 255
    414a:	31 83       	std	Z+1, r19	; 0x01
    414c:	20 83       	st	Z, r18
    414e:	4d 91       	ld	r20, X+
    4150:	5d 91       	ld	r21, X+
    4152:	6d 91       	ld	r22, X+
    4154:	7c 91       	ld	r23, X
    4156:	fc 01       	movw	r30, r24
    4158:	40 83       	st	Z, r20
    415a:	51 83       	std	Z+1, r21	; 0x01
    415c:	62 83       	std	Z+2, r22	; 0x02
    415e:	73 83       	std	Z+3, r23	; 0x03
    4160:	81 e0       	ldi	r24, 0x01	; 1
    4162:	90 e0       	ldi	r25, 0x00	; 0
    4164:	08 95       	ret
    4166:	80 e0       	ldi	r24, 0x00	; 0
    4168:	90 e0       	ldi	r25, 0x00	; 0
    416a:	08 95       	ret

Disassembly of section .text.__pop_int:

0000243e <__pop_int>:
    243e:	0f 93       	push	r16
    2440:	1f 93       	push	r17
    2442:	cf 93       	push	r28
    2444:	df 93       	push	r29
    2446:	fc 01       	movw	r30, r24
    2448:	d9 01       	movw	r26, r18
    244a:	68 38       	cpi	r22, 0x88	; 136
    244c:	71 05       	cpc	r23, r1
    244e:	31 f1       	breq	.+76     	; 0x249c <__pop_int+0x5e>
    2450:	94 f4       	brge	.+36     	; 0x2476 <__pop_int+0x38>
    2452:	61 38       	cpi	r22, 0x81	; 129
    2454:	71 05       	cpc	r23, r1
    2456:	b1 f1       	breq	.+108    	; 0x24c4 <__pop_int+0x86>
    2458:	2c f4       	brge	.+10     	; 0x2464 <__pop_int+0x26>
    245a:	60 38       	cpi	r22, 0x80	; 128
    245c:	71 05       	cpc	r23, r1
    245e:	09 f4       	brne	.+2      	; 0x2462 <__pop_int+0x24>
    2460:	78 c0       	rjmp	.+240    	; 0x2552 <__pop_int+0x114>
    2462:	9f c0       	rjmp	.+318    	; 0x25a2 <__pop_int+0x164>
    2464:	62 38       	cpi	r22, 0x82	; 130
    2466:	71 05       	cpc	r23, r1
    2468:	09 f4       	brne	.+2      	; 0x246c <__pop_int+0x2e>
    246a:	59 c0       	rjmp	.+178    	; 0x251e <__pop_int+0xe0>
    246c:	64 38       	cpi	r22, 0x84	; 132
    246e:	71 05       	cpc	r23, r1
    2470:	09 f4       	brne	.+2      	; 0x2474 <__pop_int+0x36>
    2472:	6f c0       	rjmp	.+222    	; 0x2552 <__pop_int+0x114>
    2474:	96 c0       	rjmp	.+300    	; 0x25a2 <__pop_int+0x164>
    2476:	60 3a       	cpi	r22, 0xA0	; 160
    2478:	71 05       	cpc	r23, r1
    247a:	09 f4       	brne	.+2      	; 0x247e <__pop_int+0x40>
    247c:	48 c0       	rjmp	.+144    	; 0x250e <__pop_int+0xd0>
    247e:	2c f4       	brge	.+10     	; 0x248a <__pop_int+0x4c>
    2480:	60 39       	cpi	r22, 0x90	; 144
    2482:	71 05       	cpc	r23, r1
    2484:	09 f4       	brne	.+2      	; 0x2488 <__pop_int+0x4a>
    2486:	4b c0       	rjmp	.+150    	; 0x251e <__pop_int+0xe0>
    2488:	8c c0       	rjmp	.+280    	; 0x25a2 <__pop_int+0x164>
    248a:	60 3c       	cpi	r22, 0xC0	; 192
    248c:	71 05       	cpc	r23, r1
    248e:	09 f4       	brne	.+2      	; 0x2492 <__pop_int+0x54>
    2490:	76 c0       	rjmp	.+236    	; 0x257e <__pop_int+0x140>
    2492:	60 3f       	cpi	r22, 0xF0	; 240
    2494:	71 05       	cpc	r23, r1
    2496:	09 f4       	brne	.+2      	; 0x249a <__pop_int+0x5c>
    2498:	72 c0       	rjmp	.+228    	; 0x257e <__pop_int+0x140>
    249a:	83 c0       	rjmp	.+262    	; 0x25a2 <__pop_int+0x164>
    249c:	cd 91       	ld	r28, X+
    249e:	dc 91       	ld	r29, X
    24a0:	11 97       	sbiw	r26, 0x01	; 1
    24a2:	ce 01       	movw	r24, r28
    24a4:	02 96       	adiw	r24, 0x02	; 2
    24a6:	8d 93       	st	X+, r24
    24a8:	9c 93       	st	X, r25
    24aa:	45 2b       	or	r20, r21
    24ac:	39 f0       	breq	.+14     	; 0x24bc <__pop_int+0x7e>
    24ae:	98 81       	ld	r25, Y
    24b0:	89 2f       	mov	r24, r25
    24b2:	88 0f       	add	r24, r24
    24b4:	88 0b       	sbc	r24, r24
    24b6:	90 83       	st	Z, r25
    24b8:	81 83       	std	Z+1, r24	; 0x01
    24ba:	5b c0       	rjmp	.+182    	; 0x2572 <__pop_int+0x134>
    24bc:	88 81       	ld	r24, Y
    24be:	80 83       	st	Z, r24
    24c0:	11 82       	std	Z+1, r1	; 0x01
    24c2:	68 c0       	rjmp	.+208    	; 0x2594 <__pop_int+0x156>
    24c4:	cd 91       	ld	r28, X+
    24c6:	dc 91       	ld	r29, X
    24c8:	11 97       	sbiw	r26, 0x01	; 1
    24ca:	ce 01       	movw	r24, r28
    24cc:	04 96       	adiw	r24, 0x04	; 4
    24ce:	8d 93       	st	X+, r24
    24d0:	9c 93       	st	X, r25
    24d2:	45 2b       	or	r20, r21
    24d4:	99 f0       	breq	.+38     	; 0x24fc <__pop_int+0xbe>
    24d6:	88 81       	ld	r24, Y
    24d8:	99 81       	ldd	r25, Y+1	; 0x01
    24da:	aa 81       	ldd	r26, Y+2	; 0x02
    24dc:	bb 81       	ldd	r27, Y+3	; 0x03
    24de:	ac 01       	movw	r20, r24
    24e0:	bd 01       	movw	r22, r26
    24e2:	77 0f       	add	r23, r23
    24e4:	44 0b       	sbc	r20, r20
    24e6:	54 2f       	mov	r21, r20
    24e8:	ba 01       	movw	r22, r20
    24ea:	80 83       	st	Z, r24
    24ec:	91 83       	std	Z+1, r25	; 0x01
    24ee:	a2 83       	std	Z+2, r26	; 0x02
    24f0:	b3 83       	std	Z+3, r27	; 0x03
    24f2:	44 83       	std	Z+4, r20	; 0x04
    24f4:	45 83       	std	Z+5, r20	; 0x05
    24f6:	46 83       	std	Z+6, r20	; 0x06
    24f8:	47 83       	std	Z+7, r20	; 0x07
    24fa:	28 c0       	rjmp	.+80     	; 0x254c <__pop_int+0x10e>
    24fc:	08 81       	ld	r16, Y
    24fe:	19 81       	ldd	r17, Y+1	; 0x01
    2500:	2a 81       	ldd	r18, Y+2	; 0x02
    2502:	3b 81       	ldd	r19, Y+3	; 0x03
    2504:	00 83       	st	Z, r16
    2506:	11 83       	std	Z+1, r17	; 0x01
    2508:	22 83       	std	Z+2, r18	; 0x02
    250a:	33 83       	std	Z+3, r19	; 0x03
    250c:	45 c0       	rjmp	.+138    	; 0x2598 <__pop_int+0x15a>
    250e:	cd 91       	ld	r28, X+
    2510:	dc 91       	ld	r29, X
    2512:	11 97       	sbiw	r26, 0x01	; 1
    2514:	ce 01       	movw	r24, r28
    2516:	02 96       	adiw	r24, 0x02	; 2
    2518:	8d 93       	st	X+, r24
    251a:	9c 93       	st	X, r25
    251c:	23 c0       	rjmp	.+70     	; 0x2564 <__pop_int+0x126>
    251e:	cd 91       	ld	r28, X+
    2520:	dc 91       	ld	r29, X
    2522:	11 97       	sbiw	r26, 0x01	; 1
    2524:	ce 01       	movw	r24, r28
    2526:	08 96       	adiw	r24, 0x08	; 8
    2528:	8d 93       	st	X+, r24
    252a:	9c 93       	st	X, r25
    252c:	78 81       	ld	r23, Y
    252e:	69 81       	ldd	r22, Y+1	; 0x01
    2530:	5a 81       	ldd	r21, Y+2	; 0x02
    2532:	4b 81       	ldd	r20, Y+3	; 0x03
    2534:	3c 81       	ldd	r19, Y+4	; 0x04
    2536:	2d 81       	ldd	r18, Y+5	; 0x05
    2538:	9e 81       	ldd	r25, Y+6	; 0x06
    253a:	8f 81       	ldd	r24, Y+7	; 0x07
    253c:	70 83       	st	Z, r23
    253e:	61 83       	std	Z+1, r22	; 0x01
    2540:	52 83       	std	Z+2, r21	; 0x02
    2542:	43 83       	std	Z+3, r20	; 0x03
    2544:	34 83       	std	Z+4, r19	; 0x04
    2546:	25 83       	std	Z+5, r18	; 0x05
    2548:	96 83       	std	Z+6, r25	; 0x06
    254a:	87 83       	std	Z+7, r24	; 0x07
    254c:	81 e0       	ldi	r24, 0x01	; 1
    254e:	90 e0       	ldi	r25, 0x00	; 0
    2550:	2a c0       	rjmp	.+84     	; 0x25a6 <__pop_int+0x168>
    2552:	cd 91       	ld	r28, X+
    2554:	dc 91       	ld	r29, X
    2556:	11 97       	sbiw	r26, 0x01	; 1
    2558:	ce 01       	movw	r24, r28
    255a:	02 96       	adiw	r24, 0x02	; 2
    255c:	8d 93       	st	X+, r24
    255e:	9c 93       	st	X, r25
    2560:	45 2b       	or	r20, r21
    2562:	a1 f0       	breq	.+40     	; 0x258c <__pop_int+0x14e>
    2564:	99 81       	ldd	r25, Y+1	; 0x01
    2566:	28 81       	ld	r18, Y
    2568:	89 2f       	mov	r24, r25
    256a:	88 0f       	add	r24, r24
    256c:	88 0b       	sbc	r24, r24
    256e:	20 83       	st	Z, r18
    2570:	91 83       	std	Z+1, r25	; 0x01
    2572:	82 83       	std	Z+2, r24	; 0x02
    2574:	83 83       	std	Z+3, r24	; 0x03
    2576:	84 83       	std	Z+4, r24	; 0x04
    2578:	85 83       	std	Z+5, r24	; 0x05
    257a:	86 83       	std	Z+6, r24	; 0x06
    257c:	e6 cf       	rjmp	.-52     	; 0x254a <__pop_int+0x10c>
    257e:	cd 91       	ld	r28, X+
    2580:	dc 91       	ld	r29, X
    2582:	11 97       	sbiw	r26, 0x01	; 1
    2584:	ce 01       	movw	r24, r28
    2586:	02 96       	adiw	r24, 0x02	; 2
    2588:	8d 93       	st	X+, r24
    258a:	9c 93       	st	X, r25
    258c:	08 81       	ld	r16, Y
    258e:	19 81       	ldd	r17, Y+1	; 0x01
    2590:	00 83       	st	Z, r16
    2592:	11 83       	std	Z+1, r17	; 0x01
    2594:	12 82       	std	Z+2, r1	; 0x02
    2596:	13 82       	std	Z+3, r1	; 0x03
    2598:	14 82       	std	Z+4, r1	; 0x04
    259a:	15 82       	std	Z+5, r1	; 0x05
    259c:	16 82       	std	Z+6, r1	; 0x06
    259e:	17 82       	std	Z+7, r1	; 0x07
    25a0:	d5 cf       	rjmp	.-86     	; 0x254c <__pop_int+0x10e>
    25a2:	80 e0       	ldi	r24, 0x00	; 0
    25a4:	90 e0       	ldi	r25, 0x00	; 0
    25a6:	df 91       	pop	r29
    25a8:	cf 91       	pop	r28
    25aa:	1f 91       	pop	r17
    25ac:	0f 91       	pop	r16
    25ae:	08 95       	ret

Disassembly of section .text.__pop_ptr:

00002ca4 <__pop_ptr>:
    2ca4:	cf 93       	push	r28
    2ca6:	df 93       	push	r29
    2ca8:	dc 01       	movw	r26, r24
    2caa:	f9 01       	movw	r30, r18
    2cac:	64 38       	cpi	r22, 0x84	; 132
    2cae:	71 05       	cpc	r23, r1
    2cb0:	d9 f1       	breq	.+118    	; 0x2d28 <__pop_ptr+0x84>
    2cb2:	64 f4       	brge	.+24     	; 0x2ccc <__pop_ptr+0x28>
    2cb4:	61 38       	cpi	r22, 0x81	; 129
    2cb6:	71 05       	cpc	r23, r1
    2cb8:	21 f1       	breq	.+72     	; 0x2d02 <__pop_ptr+0x5e>
    2cba:	62 38       	cpi	r22, 0x82	; 130
    2cbc:	71 05       	cpc	r23, r1
    2cbe:	09 f4       	brne	.+2      	; 0x2cc2 <__pop_ptr+0x1e>
    2cc0:	40 c0       	rjmp	.+128    	; 0x2d42 <__pop_ptr+0x9e>
    2cc2:	60 38       	cpi	r22, 0x80	; 128
    2cc4:	71 05       	cpc	r23, r1
    2cc6:	09 f0       	breq	.+2      	; 0x2cca <__pop_ptr+0x26>
    2cc8:	54 c0       	rjmp	.+168    	; 0x2d72 <__pop_ptr+0xce>
    2cca:	2e c0       	rjmp	.+92     	; 0x2d28 <__pop_ptr+0x84>
    2ccc:	60 39       	cpi	r22, 0x90	; 144
    2cce:	71 05       	cpc	r23, r1
    2cd0:	c1 f1       	breq	.+112    	; 0x2d42 <__pop_ptr+0x9e>
    2cd2:	84 f4       	brge	.+32     	; 0x2cf4 <__pop_ptr+0x50>
    2cd4:	68 38       	cpi	r22, 0x88	; 136
    2cd6:	71 05       	cpc	r23, r1
    2cd8:	09 f0       	breq	.+2      	; 0x2cdc <__pop_ptr+0x38>
    2cda:	4b c0       	rjmp	.+150    	; 0x2d72 <__pop_ptr+0xce>
    2cdc:	c0 81       	ld	r28, Z
    2cde:	d1 81       	ldd	r29, Z+1	; 0x01
    2ce0:	ce 01       	movw	r24, r28
    2ce2:	02 96       	adiw	r24, 0x02	; 2
    2ce4:	91 83       	std	Z+1, r25	; 0x01
    2ce6:	80 83       	st	Z, r24
    2ce8:	e8 81       	ld	r30, Y
    2cea:	f9 81       	ldd	r31, Y+1	; 0x01
    2cec:	ed 93       	st	X+, r30
    2cee:	fc 93       	st	X, r31
    2cf0:	40 83       	st	Z, r20
    2cf2:	3c c0       	rjmp	.+120    	; 0x2d6c <__pop_ptr+0xc8>
    2cf4:	60 3a       	cpi	r22, 0xA0	; 160
    2cf6:	71 05       	cpc	r23, r1
    2cf8:	b9 f0       	breq	.+46     	; 0x2d28 <__pop_ptr+0x84>
    2cfa:	60 3c       	cpi	r22, 0xC0	; 192
    2cfc:	71 05       	cpc	r23, r1
    2cfe:	a1 f0       	breq	.+40     	; 0x2d28 <__pop_ptr+0x84>
    2d00:	38 c0       	rjmp	.+112    	; 0x2d72 <__pop_ptr+0xce>
    2d02:	c0 81       	ld	r28, Z
    2d04:	d1 81       	ldd	r29, Z+1	; 0x01
    2d06:	ce 01       	movw	r24, r28
    2d08:	02 96       	adiw	r24, 0x02	; 2
    2d0a:	91 83       	std	Z+1, r25	; 0x01
    2d0c:	80 83       	st	Z, r24
    2d0e:	e8 81       	ld	r30, Y
    2d10:	f9 81       	ldd	r31, Y+1	; 0x01
    2d12:	ed 93       	st	X+, r30
    2d14:	fc 93       	st	X, r31
    2d16:	05 2e       	mov	r0, r21
    2d18:	00 0c       	add	r0, r0
    2d1a:	66 0b       	sbc	r22, r22
    2d1c:	77 0b       	sbc	r23, r23
    2d1e:	40 83       	st	Z, r20
    2d20:	51 83       	std	Z+1, r21	; 0x01
    2d22:	62 83       	std	Z+2, r22	; 0x02
    2d24:	73 83       	std	Z+3, r23	; 0x03
    2d26:	22 c0       	rjmp	.+68     	; 0x2d6c <__pop_ptr+0xc8>
    2d28:	c0 81       	ld	r28, Z
    2d2a:	d1 81       	ldd	r29, Z+1	; 0x01
    2d2c:	ce 01       	movw	r24, r28
    2d2e:	02 96       	adiw	r24, 0x02	; 2
    2d30:	91 83       	std	Z+1, r25	; 0x01
    2d32:	80 83       	st	Z, r24
    2d34:	e8 81       	ld	r30, Y
    2d36:	f9 81       	ldd	r31, Y+1	; 0x01
    2d38:	ed 93       	st	X+, r30
    2d3a:	fc 93       	st	X, r31
    2d3c:	51 83       	std	Z+1, r21	; 0x01
    2d3e:	40 83       	st	Z, r20
    2d40:	15 c0       	rjmp	.+42     	; 0x2d6c <__pop_ptr+0xc8>
    2d42:	c0 81       	ld	r28, Z
    2d44:	d1 81       	ldd	r29, Z+1	; 0x01
    2d46:	ce 01       	movw	r24, r28
    2d48:	02 96       	adiw	r24, 0x02	; 2
    2d4a:	91 83       	std	Z+1, r25	; 0x01
    2d4c:	80 83       	st	Z, r24
    2d4e:	e8 81       	ld	r30, Y
    2d50:	f9 81       	ldd	r31, Y+1	; 0x01
    2d52:	ed 93       	st	X+, r30
    2d54:	fc 93       	st	X, r31
    2d56:	51 83       	std	Z+1, r21	; 0x01
    2d58:	40 83       	st	Z, r20
    2d5a:	85 2f       	mov	r24, r21
    2d5c:	88 0f       	add	r24, r24
    2d5e:	88 0b       	sbc	r24, r24
    2d60:	82 83       	std	Z+2, r24	; 0x02
    2d62:	83 83       	std	Z+3, r24	; 0x03
    2d64:	84 83       	std	Z+4, r24	; 0x04
    2d66:	85 83       	std	Z+5, r24	; 0x05
    2d68:	86 83       	std	Z+6, r24	; 0x06
    2d6a:	87 83       	std	Z+7, r24	; 0x07
    2d6c:	81 e0       	ldi	r24, 0x01	; 1
    2d6e:	90 e0       	ldi	r25, 0x00	; 0
    2d70:	02 c0       	rjmp	.+4      	; 0x2d76 <__pop_ptr+0xd2>
    2d72:	80 e0       	ldi	r24, 0x00	; 0
    2d74:	90 e0       	ldi	r25, 0x00	; 0
    2d76:	df 91       	pop	r29
    2d78:	cf 91       	pop	r28
    2d7a:	08 95       	ret

Disassembly of section .text.sprintf:

000043e4 <sprintf>:
    43e4:	a0 e0       	ldi	r26, 0x00	; 0
    43e6:	b0 e0       	ldi	r27, 0x00	; 0
    43e8:	e8 ef       	ldi	r30, 0xF8	; 248
    43ea:	f1 e2       	ldi	r31, 0x21	; 33
    43ec:	0c 94 00 21 	jmp	0x4200	; 0x4200 <__prologue_saves__+0x20>
    43f0:	9e 01       	movw	r18, r28
    43f2:	25 5f       	subi	r18, 0xF5	; 245
    43f4:	3f 4f       	sbci	r19, 0xFF	; 255
    43f6:	48 85       	ldd	r20, Y+8	; 0x08
    43f8:	59 85       	ldd	r21, Y+9	; 0x09
    43fa:	6a 85       	ldd	r22, Y+10	; 0x0a
    43fc:	8e 81       	ldd	r24, Y+6	; 0x06
    43fe:	9f 81       	ldd	r25, Y+7	; 0x07
    4400:	0e 94 90 22 	call	0x4520	; 0x4520 <vsprintf>
    4404:	e2 e0       	ldi	r30, 0x02	; 2
    4406:	0c 94 37 21 	jmp	0x426e	; 0x426e <__epilogue_restores__+0x20>

Disassembly of section .text.vsprintf:

00004520 <vsprintf>:
    4520:	0f 93       	push	r16
    4522:	1f 93       	push	r17
    4524:	89 01       	movw	r16, r18
    4526:	9a 01       	movw	r18, r20
    4528:	46 2f       	mov	r20, r22
    452a:	6f ef       	ldi	r22, 0xFF	; 255
    452c:	7f e7       	ldi	r23, 0x7F	; 127
    452e:	0e 94 74 1b 	call	0x36e8	; 0x36e8 <vsnprintf>
    4532:	1f 91       	pop	r17
    4534:	0f 91       	pop	r16
    4536:	08 95       	ret

Disassembly of section .text.atoi:

00003962 <atoi>:
    3962:	cf 93       	push	r28
    3964:	9b 01       	movw	r18, r22
    3966:	48 2f       	mov	r20, r24
    3968:	f9 01       	movw	r30, r18
    396a:	54 2f       	mov	r21, r20
    396c:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    3970:	60 32       	cpi	r22, 0x20	; 32
    3972:	b9 f1       	breq	.+110    	; 0x39e2 <atoi+0x80>
    3974:	86 2f       	mov	r24, r22
    3976:	06 2e       	mov	r0, r22
    3978:	00 0c       	add	r0, r0
    397a:	99 0b       	sbc	r25, r25
    397c:	09 97       	sbiw	r24, 0x09	; 9
    397e:	05 97       	sbiw	r24, 0x05	; 5
    3980:	80 f1       	brcs	.+96     	; 0x39e2 <atoi+0x80>
    3982:	6b 32       	cpi	r22, 0x2B	; 43
    3984:	49 f5       	brne	.+82     	; 0x39d8 <atoi+0x76>
    3986:	a0 e0       	ldi	r26, 0x00	; 0
    3988:	b0 e0       	ldi	r27, 0x00	; 0
    398a:	2f 5f       	subi	r18, 0xFF	; 255
    398c:	3f 4f       	sbci	r19, 0xFF	; 255
    398e:	4f 4f       	sbci	r20, 0xFF	; 255
    3990:	02 c0       	rjmp	.+4      	; 0x3996 <atoi+0x34>
    3992:	a0 e0       	ldi	r26, 0x00	; 0
    3994:	b0 e0       	ldi	r27, 0x00	; 0
    3996:	80 e0       	ldi	r24, 0x00	; 0
    3998:	90 e0       	ldi	r25, 0x00	; 0
    399a:	ca e0       	ldi	r28, 0x0A	; 10
    399c:	f9 01       	movw	r30, r18
    399e:	54 2f       	mov	r21, r20
    39a0:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    39a4:	06 2e       	mov	r0, r22
    39a6:	00 0c       	add	r0, r0
    39a8:	77 0b       	sbc	r23, r23
    39aa:	60 53       	subi	r22, 0x30	; 48
    39ac:	71 09       	sbc	r23, r1
    39ae:	6a 30       	cpi	r22, 0x0A	; 10
    39b0:	71 05       	cpc	r23, r1
    39b2:	60 f4       	brcc	.+24     	; 0x39cc <atoi+0x6a>
    39b4:	c8 9f       	mul	r28, r24
    39b6:	f0 01       	movw	r30, r0
    39b8:	c9 9f       	mul	r28, r25
    39ba:	f0 0d       	add	r31, r0
    39bc:	11 24       	eor	r1, r1
    39be:	2f 5f       	subi	r18, 0xFF	; 255
    39c0:	3f 4f       	sbci	r19, 0xFF	; 255
    39c2:	4f 4f       	sbci	r20, 0xFF	; 255
    39c4:	cf 01       	movw	r24, r30
    39c6:	86 1b       	sub	r24, r22
    39c8:	97 0b       	sbc	r25, r23
    39ca:	e8 cf       	rjmp	.-48     	; 0x399c <atoi+0x3a>
    39cc:	ab 2b       	or	r26, r27
    39ce:	69 f4       	brne	.+26     	; 0x39ea <atoi+0x88>
    39d0:	91 95       	neg	r25
    39d2:	81 95       	neg	r24
    39d4:	91 09       	sbc	r25, r1
    39d6:	09 c0       	rjmp	.+18     	; 0x39ea <atoi+0x88>
    39d8:	6d 32       	cpi	r22, 0x2D	; 45
    39da:	d9 f6       	brne	.-74     	; 0x3992 <atoi+0x30>
    39dc:	a1 e0       	ldi	r26, 0x01	; 1
    39de:	b0 e0       	ldi	r27, 0x00	; 0
    39e0:	d4 cf       	rjmp	.-88     	; 0x398a <atoi+0x28>
    39e2:	2f 5f       	subi	r18, 0xFF	; 255
    39e4:	3f 4f       	sbci	r19, 0xFF	; 255
    39e6:	4f 4f       	sbci	r20, 0xFF	; 255
    39e8:	bf cf       	rjmp	.-130    	; 0x3968 <atoi+0x6>
    39ea:	cf 91       	pop	r28
    39ec:	08 95       	ret

Disassembly of section .text.memset:

000045ac <memset>:
    45ac:	fc 01       	movw	r30, r24
    45ae:	48 0f       	add	r20, r24
    45b0:	59 1f       	adc	r21, r25
    45b2:	e4 17       	cp	r30, r20
    45b4:	f5 07       	cpc	r31, r21
    45b6:	11 f0       	breq	.+4      	; 0x45bc <memset+0x10>
    45b8:	61 93       	st	Z+, r22
    45ba:	fb cf       	rjmp	.-10     	; 0x45b2 <memset+0x6>
    45bc:	08 95       	ret

Disassembly of section .text.strcmp:

000040a4 <strcmp>:
    40a4:	cf 92       	push	r12
    40a6:	df 92       	push	r13
    40a8:	ef 92       	push	r14
    40aa:	6b 01       	movw	r12, r22
    40ac:	e8 2e       	mov	r14, r24
    40ae:	f6 01       	movw	r30, r12
    40b0:	5e 2d       	mov	r21, r14
    40b2:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    40b6:	86 2f       	mov	r24, r22
    40b8:	f9 01       	movw	r30, r18
    40ba:	54 2f       	mov	r21, r20
    40bc:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    40c0:	86 13       	cpse	r24, r22
    40c2:	0b c0       	rjmp	.+22     	; 0x40da <strcmp+0x36>
    40c4:	88 23       	and	r24, r24
    40c6:	41 f0       	breq	.+16     	; 0x40d8 <strcmp+0x34>
    40c8:	8f ef       	ldi	r24, 0xFF	; 255
    40ca:	c8 1a       	sub	r12, r24
    40cc:	d8 0a       	sbc	r13, r24
    40ce:	e8 0a       	sbc	r14, r24
    40d0:	2f 5f       	subi	r18, 0xFF	; 255
    40d2:	3f 4f       	sbci	r19, 0xFF	; 255
    40d4:	4f 4f       	sbci	r20, 0xFF	; 255
    40d6:	eb cf       	rjmp	.-42     	; 0x40ae <strcmp+0xa>
    40d8:	68 2f       	mov	r22, r24
    40da:	90 e0       	ldi	r25, 0x00	; 0
    40dc:	86 1b       	sub	r24, r22
    40de:	91 09       	sbc	r25, r1
    40e0:	ef 90       	pop	r14
    40e2:	df 90       	pop	r13
    40e4:	cf 90       	pop	r12
    40e6:	08 95       	ret

Disassembly of section .text.strlen:

0000442e <strlen>:
    442e:	9b 01       	movw	r18, r22
    4430:	48 2f       	mov	r20, r24
    4432:	a8 2f       	mov	r26, r24
    4434:	cb 01       	movw	r24, r22
    4436:	fc 01       	movw	r30, r24
    4438:	5a 2f       	mov	r21, r26
    443a:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    443e:	66 23       	and	r22, r22
    4440:	19 f0       	breq	.+6      	; 0x4448 <strlen+0x1a>
    4442:	01 96       	adiw	r24, 0x01	; 1
    4444:	a1 1d       	adc	r26, r1
    4446:	f7 cf       	rjmp	.-18     	; 0x4436 <strlen+0x8>
    4448:	64 2f       	mov	r22, r20
    444a:	a9 01       	movw	r20, r18
    444c:	84 1b       	sub	r24, r20
    444e:	95 0b       	sbc	r25, r21
    4450:	08 95       	ret

Disassembly of section .text.tolower:

000045d0 <tolower>:
    45d0:	9c 01       	movw	r18, r24
    45d2:	21 54       	subi	r18, 0x41	; 65
    45d4:	31 09       	sbc	r19, r1
    45d6:	2a 31       	cpi	r18, 0x1A	; 26
    45d8:	31 05       	cpc	r19, r1
    45da:	08 f4       	brcc	.+2      	; 0x45de <tolower+0xe>
    45dc:	80 62       	ori	r24, 0x20	; 32
    45de:	08 95       	ret

Disassembly of section .text.toupper:

000045be <toupper>:
    45be:	9c 01       	movw	r18, r24
    45c0:	21 56       	subi	r18, 0x61	; 97
    45c2:	31 09       	sbc	r19, r1
    45c4:	2a 31       	cpi	r18, 0x1A	; 26
    45c6:	31 05       	cpc	r19, r1
    45c8:	10 f4       	brcc	.+4      	; 0x45ce <toupper+0x10>
    45ca:	8f 75       	andi	r24, 0x5F	; 95
    45cc:	99 27       	eor	r25, r25
    45ce:	08 95       	ret

Disassembly of section .text._Exit:

000046b6 <_Exit>:
    46b6:	0e 94 c1 00 	call	0x182	; 0x182 <_exit>

Disassembly of section .text.__vsprintf:

00004538 <__vsprintf>:
    4538:	0f 93       	push	r16
    453a:	1f 93       	push	r17
    453c:	89 01       	movw	r16, r18
    453e:	9a 01       	movw	r18, r20
    4540:	46 2f       	mov	r20, r22
    4542:	6f ef       	ldi	r22, 0xFF	; 255
    4544:	7f e7       	ldi	r23, 0x7F	; 127
    4546:	0e 94 22 1b 	call	0x3644	; 0x3644 <__vsnprintf>
    454a:	1f 91       	pop	r17
    454c:	0f 91       	pop	r16
    454e:	08 95       	ret

Disassembly of section .text.__vsnprintf:

00003644 <__vsnprintf>:
    3644:	6f 92       	push	r6
    3646:	7f 92       	push	r7
    3648:	8f 92       	push	r8
    364a:	ef 92       	push	r14
    364c:	ff 92       	push	r15
    364e:	0f 93       	push	r16
    3650:	1f 93       	push	r17
    3652:	cf 93       	push	r28
    3654:	df 93       	push	r29
    3656:	cd b7       	in	r28, 0x3d	; 61
    3658:	de b7       	in	r29, 0x3e	; 62
    365a:	61 97       	sbiw	r28, 0x11	; 17
    365c:	0f b6       	in	r0, 0x3f	; 63
    365e:	f8 94       	cli
    3660:	de bf       	out	0x3e, r29	; 62
    3662:	0f be       	out	0x3f, r0	; 63
    3664:	cd bf       	out	0x3d, r28	; 61
    3666:	fe 01       	movw	r30, r28
    3668:	31 96       	adiw	r30, 0x01	; 1
    366a:	51 e1       	ldi	r21, 0x11	; 17
    366c:	df 01       	movw	r26, r30
    366e:	1d 92       	st	X+, r1
    3670:	5a 95       	dec	r21
    3672:	e9 f7       	brne	.-6      	; 0x366e <__vsnprintf+0x2a>
    3674:	a2 e0       	ldi	r26, 0x02	; 2
    3676:	b1 e0       	ldi	r27, 0x01	; 1
    3678:	ba 83       	std	Y+2, r27	; 0x02
    367a:	a9 83       	std	Y+1, r26	; 0x01
    367c:	9c 83       	std	Y+4, r25	; 0x04
    367e:	8b 83       	std	Y+3, r24	; 0x03
    3680:	77 ff       	sbrs	r23, 7
    3682:	09 c0       	rjmp	.+18     	; 0x3696 <__vsnprintf+0x52>
    3684:	8f e4       	ldi	r24, 0x4F	; 79
    3686:	90 e0       	ldi	r25, 0x00	; 0
    3688:	90 93 2d 12 	sts	0x122D, r25	; 0x80122d <__errno_val+0x1>
    368c:	80 93 2c 12 	sts	0x122C, r24	; 0x80122c <__errno_val>
    3690:	8f ef       	ldi	r24, 0xFF	; 255
    3692:	9f ef       	ldi	r25, 0xFF	; 255
    3694:	19 c0       	rjmp	.+50     	; 0x36c8 <__vsnprintf+0x84>
    3696:	39 01       	movw	r6, r18
    3698:	84 2e       	mov	r8, r20
    369a:	7c 01       	movw	r14, r24
    369c:	61 50       	subi	r22, 0x01	; 1
    369e:	71 09       	sbc	r23, r1
    36a0:	7f 83       	std	Y+7, r23	; 0x07
    36a2:	6e 83       	std	Y+6, r22	; 0x06
    36a4:	98 01       	movw	r18, r16
    36a6:	68 2d       	mov	r22, r8
    36a8:	a3 01       	movw	r20, r6
    36aa:	cf 01       	movw	r24, r30
    36ac:	0e 94 8c 21 	call	0x4318	; 0x4318 <__vfprintf>
    36b0:	48 85       	ldd	r20, Y+8	; 0x08
    36b2:	59 85       	ldd	r21, Y+9	; 0x09
    36b4:	2e 81       	ldd	r18, Y+6	; 0x06
    36b6:	3f 81       	ldd	r19, Y+7	; 0x07
    36b8:	42 17       	cp	r20, r18
    36ba:	53 07       	cpc	r21, r19
    36bc:	08 f4       	brcc	.+2      	; 0x36c0 <__vsnprintf+0x7c>
    36be:	9a 01       	movw	r18, r20
    36c0:	f7 01       	movw	r30, r14
    36c2:	e2 0f       	add	r30, r18
    36c4:	f3 1f       	adc	r31, r19
    36c6:	10 82       	st	Z, r1
    36c8:	61 96       	adiw	r28, 0x11	; 17
    36ca:	0f b6       	in	r0, 0x3f	; 63
    36cc:	f8 94       	cli
    36ce:	de bf       	out	0x3e, r29	; 62
    36d0:	0f be       	out	0x3f, r0	; 63
    36d2:	cd bf       	out	0x3d, r28	; 61
    36d4:	df 91       	pop	r29
    36d6:	cf 91       	pop	r28
    36d8:	1f 91       	pop	r17
    36da:	0f 91       	pop	r16
    36dc:	ff 90       	pop	r15
    36de:	ef 90       	pop	r14
    36e0:	8f 90       	pop	r8
    36e2:	7f 90       	pop	r7
    36e4:	6f 90       	pop	r6
    36e6:	08 95       	ret

Disassembly of section .text.vsnprintf:

000036e8 <vsnprintf>:
    36e8:	6f 92       	push	r6
    36ea:	7f 92       	push	r7
    36ec:	8f 92       	push	r8
    36ee:	ef 92       	push	r14
    36f0:	ff 92       	push	r15
    36f2:	0f 93       	push	r16
    36f4:	1f 93       	push	r17
    36f6:	cf 93       	push	r28
    36f8:	df 93       	push	r29
    36fa:	cd b7       	in	r28, 0x3d	; 61
    36fc:	de b7       	in	r29, 0x3e	; 62
    36fe:	61 97       	sbiw	r28, 0x11	; 17
    3700:	0f b6       	in	r0, 0x3f	; 63
    3702:	f8 94       	cli
    3704:	de bf       	out	0x3e, r29	; 62
    3706:	0f be       	out	0x3f, r0	; 63
    3708:	cd bf       	out	0x3d, r28	; 61
    370a:	fe 01       	movw	r30, r28
    370c:	31 96       	adiw	r30, 0x01	; 1
    370e:	51 e1       	ldi	r21, 0x11	; 17
    3710:	df 01       	movw	r26, r30
    3712:	1d 92       	st	X+, r1
    3714:	5a 95       	dec	r21
    3716:	e9 f7       	brne	.-6      	; 0x3712 <vsnprintf+0x2a>
    3718:	a2 e0       	ldi	r26, 0x02	; 2
    371a:	b1 e0       	ldi	r27, 0x01	; 1
    371c:	ba 83       	std	Y+2, r27	; 0x02
    371e:	a9 83       	std	Y+1, r26	; 0x01
    3720:	9c 83       	std	Y+4, r25	; 0x04
    3722:	8b 83       	std	Y+3, r24	; 0x03
    3724:	77 ff       	sbrs	r23, 7
    3726:	09 c0       	rjmp	.+18     	; 0x373a <vsnprintf+0x52>
    3728:	8f e4       	ldi	r24, 0x4F	; 79
    372a:	90 e0       	ldi	r25, 0x00	; 0
    372c:	90 93 2d 12 	sts	0x122D, r25	; 0x80122d <__errno_val+0x1>
    3730:	80 93 2c 12 	sts	0x122C, r24	; 0x80122c <__errno_val>
    3734:	8f ef       	ldi	r24, 0xFF	; 255
    3736:	9f ef       	ldi	r25, 0xFF	; 255
    3738:	19 c0       	rjmp	.+50     	; 0x376c <vsnprintf+0x84>
    373a:	39 01       	movw	r6, r18
    373c:	84 2e       	mov	r8, r20
    373e:	7c 01       	movw	r14, r24
    3740:	61 50       	subi	r22, 0x01	; 1
    3742:	71 09       	sbc	r23, r1
    3744:	7f 83       	std	Y+7, r23	; 0x07
    3746:	6e 83       	std	Y+6, r22	; 0x06
    3748:	98 01       	movw	r18, r16
    374a:	68 2d       	mov	r22, r8
    374c:	a3 01       	movw	r20, r6
    374e:	cf 01       	movw	r24, r30
    3750:	0e 94 74 21 	call	0x42e8	; 0x42e8 <vfprintf>
    3754:	48 85       	ldd	r20, Y+8	; 0x08
    3756:	59 85       	ldd	r21, Y+9	; 0x09
    3758:	2e 81       	ldd	r18, Y+6	; 0x06
    375a:	3f 81       	ldd	r19, Y+7	; 0x07
    375c:	42 17       	cp	r20, r18
    375e:	53 07       	cpc	r21, r19
    3760:	08 f4       	brcc	.+2      	; 0x3764 <vsnprintf+0x7c>
    3762:	9a 01       	movw	r18, r20
    3764:	f7 01       	movw	r30, r14
    3766:	e2 0f       	add	r30, r18
    3768:	f3 1f       	adc	r31, r19
    376a:	10 82       	st	Z, r1
    376c:	61 96       	adiw	r28, 0x11	; 17
    376e:	0f b6       	in	r0, 0x3f	; 63
    3770:	f8 94       	cli
    3772:	de bf       	out	0x3e, r29	; 62
    3774:	0f be       	out	0x3f, r0	; 63
    3776:	cd bf       	out	0x3d, r28	; 61
    3778:	df 91       	pop	r29
    377a:	cf 91       	pop	r28
    377c:	1f 91       	pop	r17
    377e:	0f 91       	pop	r16
    3780:	ff 90       	pop	r15
    3782:	ef 90       	pop	r14
    3784:	8f 90       	pop	r8
    3786:	7f 90       	pop	r7
    3788:	6f 90       	pop	r6
    378a:	08 95       	ret

Disassembly of section .text.vfprintf:

000042e8 <vfprintf>:
    42e8:	a2 e0       	ldi	r26, 0x02	; 2
    42ea:	b0 e0       	ldi	r27, 0x00	; 0
    42ec:	ea e7       	ldi	r30, 0x7A	; 122
    42ee:	f1 e2       	ldi	r31, 0x21	; 33
    42f0:	0c 94 fe 20 	jmp	0x41fc	; 0x41fc <__prologue_saves__+0x1c>
    42f4:	8c 01       	movw	r16, r24
    42f6:	3a 83       	std	Y+2, r19	; 0x02
    42f8:	29 83       	std	Y+1, r18	; 0x01
    42fa:	9e 01       	movw	r18, r28
    42fc:	2f 5f       	subi	r18, 0xFF	; 255
    42fe:	3f 4f       	sbci	r19, 0xFF	; 255
    4300:	0e 94 48 03 	call	0x690	; 0x690 <__printf_core>
    4304:	f8 01       	movw	r30, r16
    4306:	20 81       	ld	r18, Z
    4308:	24 ff       	sbrs	r18, 4
    430a:	02 c0       	rjmp	.+4      	; 0x4310 <vfprintf+0x28>
    430c:	8f ef       	ldi	r24, 0xFF	; 255
    430e:	9f ef       	ldi	r25, 0xFF	; 255
    4310:	22 96       	adiw	r28, 0x02	; 2
    4312:	e4 e0       	ldi	r30, 0x04	; 4
    4314:	0c 94 35 21 	jmp	0x426a	; 0x426a <__epilogue_restores__+0x1c>

Disassembly of section .text.__vfprintf:

00004318 <__vfprintf>:
    4318:	a2 e0       	ldi	r26, 0x02	; 2
    431a:	b0 e0       	ldi	r27, 0x00	; 0
    431c:	e2 e9       	ldi	r30, 0x92	; 146
    431e:	f1 e2       	ldi	r31, 0x21	; 33
    4320:	0c 94 fe 20 	jmp	0x41fc	; 0x41fc <__prologue_saves__+0x1c>
    4324:	8c 01       	movw	r16, r24
    4326:	3a 83       	std	Y+2, r19	; 0x02
    4328:	29 83       	std	Y+1, r18	; 0x01
    432a:	9e 01       	movw	r18, r28
    432c:	2f 5f       	subi	r18, 0xFF	; 255
    432e:	3f 4f       	sbci	r19, 0xFF	; 255
    4330:	0e 94 48 03 	call	0x690	; 0x690 <__printf_core>
    4334:	f8 01       	movw	r30, r16
    4336:	20 81       	ld	r18, Z
    4338:	24 ff       	sbrs	r18, 4
    433a:	02 c0       	rjmp	.+4      	; 0x4340 <__vfprintf+0x28>
    433c:	8f ef       	ldi	r24, 0xFF	; 255
    433e:	9f ef       	ldi	r25, 0xFF	; 255
    4340:	22 96       	adiw	r28, 0x02	; 2
    4342:	e4 e0       	ldi	r30, 0x04	; 4
    4344:	0c 94 35 21 	jmp	0x426a	; 0x426a <__epilogue_restores__+0x1c>

Disassembly of section .text.__fmt_fp:

00000ec2 <__fmt_fp>:
     ec2:	a6 e2       	ldi	r26, 0x26	; 38
     ec4:	b0 e0       	ldi	r27, 0x00	; 0
     ec6:	e7 e6       	ldi	r30, 0x67	; 103
     ec8:	f7 e0       	ldi	r31, 0x07	; 7
     eca:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
     ece:	9f 8f       	std	Y+31, r25	; 0x1f
     ed0:	8e 8f       	std	Y+30, r24	; 0x1e
     ed2:	79 8f       	std	Y+25, r23	; 0x19
     ed4:	68 8f       	std	Y+24, r22	; 0x18
     ed6:	12 2f       	mov	r17, r18
     ed8:	fb 01       	movw	r30, r22
     eda:	01 90       	ld	r0, Z+
     edc:	f0 81       	ld	r31, Z
     ede:	e0 2d       	mov	r30, r0
     ee0:	fa 87       	std	Y+10, r31	; 0x0a
     ee2:	e9 87       	std	Y+9, r30	; 0x09
     ee4:	fb 01       	movw	r30, r22
     ee6:	c2 80       	ldd	r12, Z+2	; 0x02
     ee8:	d3 80       	ldd	r13, Z+3	; 0x03
     eea:	24 81       	ldd	r18, Z+4	; 0x04
     eec:	35 81       	ldd	r19, Z+5	; 0x05
     eee:	3c 8b       	std	Y+20, r19	; 0x14
     ef0:	2b 8b       	std	Y+19, r18	; 0x13
     ef2:	80 85       	ldd	r24, Z+8	; 0x08
     ef4:	91 85       	ldd	r25, Z+9	; 0x09
     ef6:	99 a3       	std	Y+33, r25	; 0x21
     ef8:	88 a3       	std	Y+32, r24	; 0x20
     efa:	06 80       	ldd	r0, Z+6	; 0x06
     efc:	f7 81       	ldd	r31, Z+7	; 0x07
     efe:	e0 2d       	mov	r30, r0
     f00:	fa 83       	std	Y+2, r31	; 0x02
     f02:	e9 83       	std	Y+1, r30	; 0x01
     f04:	fa 01       	movw	r30, r20
     f06:	80 80       	ld	r8, Z
     f08:	91 80       	ldd	r9, Z+1	; 0x01
     f0a:	a2 80       	ldd	r10, Z+2	; 0x02
     f0c:	b3 80       	ldd	r11, Z+3	; 0x03
     f0e:	20 e0       	ldi	r18, 0x00	; 0
     f10:	30 e0       	ldi	r19, 0x00	; 0
     f12:	a9 01       	movw	r20, r18
     f14:	c5 01       	movw	r24, r10
     f16:	b4 01       	movw	r22, r8
     f18:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
     f1c:	87 ff       	sbrs	r24, 7
     f1e:	06 c0       	rjmp	.+12     	; 0xf2c <__fmt_fp+0x6a>
     f20:	b7 fa       	bst	r11, 7
     f22:	b0 94       	com	r11
     f24:	b7 f8       	bld	r11, 7
     f26:	b0 94       	com	r11
     f28:	8d e2       	ldi	r24, 0x2D	; 45
     f2a:	04 c0       	rjmp	.+8      	; 0xf34 <__fmt_fp+0x72>
     f2c:	f9 85       	ldd	r31, Y+9	; 0x09
     f2e:	f2 ff       	sbrs	r31, 2
     f30:	0c c3       	rjmp	.+1560   	; 0x154a <__EEPROM_REGION_LENGTH__+0x54a>
     f32:	8b e2       	ldi	r24, 0x2B	; 43
     f34:	e9 81       	ldd	r30, Y+1	; 0x01
     f36:	fa 81       	ldd	r31, Y+2	; 0x02
     f38:	80 83       	st	Z, r24
     f3a:	2b 89       	ldd	r18, Y+19	; 0x13
     f3c:	3c 89       	ldd	r19, Y+20	; 0x14
     f3e:	21 50       	subi	r18, 0x01	; 1
     f40:	31 09       	sbc	r19, r1
     f42:	38 87       	std	Y+8, r19	; 0x08
     f44:	2f 83       	std	Y+7, r18	; 0x07
     f46:	41 e0       	ldi	r20, 0x01	; 1
     f48:	50 e0       	ldi	r21, 0x00	; 0
     f4a:	5a 8b       	std	Y+18, r21	; 0x12
     f4c:	49 8b       	std	Y+17, r20	; 0x11
     f4e:	06 c0       	rjmp	.+12     	; 0xf5c <__fmt_fp+0x9a>
     f50:	8b 89       	ldd	r24, Y+19	; 0x13
     f52:	9c 89       	ldd	r25, Y+20	; 0x14
     f54:	98 87       	std	Y+8, r25	; 0x08
     f56:	8f 83       	std	Y+7, r24	; 0x07
     f58:	1a 8a       	std	Y+18, r1	; 0x12
     f5a:	19 8a       	std	Y+17, r1	; 0x11
     f5c:	d5 01       	movw	r26, r10
     f5e:	c4 01       	movw	r24, r8
     f60:	bf 77       	andi	r27, 0x7F	; 127
     f62:	00 97       	sbiw	r24, 0x00	; 0
     f64:	e0 e8       	ldi	r30, 0x80	; 128
     f66:	ae 07       	cpc	r26, r30
     f68:	ef e7       	ldi	r30, 0x7F	; 127
     f6a:	be 07       	cpc	r27, r30
     f6c:	d9 f4       	brne	.+54     	; 0xfa4 <__fmt_fp+0xe2>
     f6e:	21 2f       	mov	r18, r17
     f70:	11 0f       	add	r17, r17
     f72:	33 0b       	sbc	r19, r19
     f74:	21 54       	subi	r18, 0x41	; 65
     f76:	31 09       	sbc	r19, r1
     f78:	89 81       	ldd	r24, Y+1	; 0x01
     f7a:	9a 81       	ldd	r25, Y+2	; 0x02
     f7c:	49 89       	ldd	r20, Y+17	; 0x11
     f7e:	5a 89       	ldd	r21, Y+18	; 0x12
     f80:	84 0f       	add	r24, r20
     f82:	95 1f       	adc	r25, r21
     f84:	2a 31       	cpi	r18, 0x1A	; 26
     f86:	31 05       	cpc	r19, r1
     f88:	20 f4       	brcc	.+8      	; 0xf92 <__fmt_fp+0xd0>
     f8a:	43 e6       	ldi	r20, 0x63	; 99
     f8c:	56 e0       	ldi	r21, 0x06	; 6
     f8e:	60 e0       	ldi	r22, 0x00	; 0
     f90:	03 c0       	rjmp	.+6      	; 0xf98 <__fmt_fp+0xd6>
     f92:	47 e6       	ldi	r20, 0x67	; 103
     f94:	56 e0       	ldi	r21, 0x06	; 6
     f96:	60 e0       	ldi	r22, 0x00	; 0
     f98:	0e 94 59 22 	call	0x44b2	; 0x44b2 <strcpy>
     f9c:	67 e6       	ldi	r22, 0x67	; 103
     f9e:	76 e0       	ldi	r23, 0x06	; 6
     fa0:	80 e0       	ldi	r24, 0x00	; 0
     fa2:	1e c0       	rjmp	.+60     	; 0xfe0 <__fmt_fp+0x11e>
     fa4:	01 97       	sbiw	r24, 0x01	; 1
     fa6:	a0 48       	sbci	r26, 0x80	; 128
     fa8:	bf 47       	sbci	r27, 0x7F	; 127
     faa:	30 f1       	brcs	.+76     	; 0xff8 <__fmt_fp+0x136>
     fac:	21 2f       	mov	r18, r17
     fae:	11 0f       	add	r17, r17
     fb0:	33 0b       	sbc	r19, r19
     fb2:	21 54       	subi	r18, 0x41	; 65
     fb4:	31 09       	sbc	r19, r1
     fb6:	89 81       	ldd	r24, Y+1	; 0x01
     fb8:	9a 81       	ldd	r25, Y+2	; 0x02
     fba:	49 89       	ldd	r20, Y+17	; 0x11
     fbc:	5a 89       	ldd	r21, Y+18	; 0x12
     fbe:	84 0f       	add	r24, r20
     fc0:	95 1f       	adc	r25, r21
     fc2:	2a 31       	cpi	r18, 0x1A	; 26
     fc4:	31 05       	cpc	r19, r1
     fc6:	20 f4       	brcc	.+8      	; 0xfd0 <__fmt_fp+0x10e>
     fc8:	4b e6       	ldi	r20, 0x6B	; 107
     fca:	56 e0       	ldi	r21, 0x06	; 6
     fcc:	60 e0       	ldi	r22, 0x00	; 0
     fce:	03 c0       	rjmp	.+6      	; 0xfd6 <__fmt_fp+0x114>
     fd0:	4f e6       	ldi	r20, 0x6F	; 111
     fd2:	56 e0       	ldi	r21, 0x06	; 6
     fd4:	60 e0       	ldi	r22, 0x00	; 0
     fd6:	0e 94 59 22 	call	0x44b2	; 0x44b2 <strcpy>
     fda:	6f e6       	ldi	r22, 0x6F	; 111
     fdc:	76 e0       	ldi	r23, 0x06	; 6
     fde:	80 e0       	ldi	r24, 0x00	; 0
     fe0:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
     fe4:	e9 81       	ldd	r30, Y+1	; 0x01
     fe6:	fa 81       	ldd	r31, Y+2	; 0x02
     fe8:	af 01       	movw	r20, r30
     fea:	60 e8       	ldi	r22, 0x80	; 128
     fec:	e9 84       	ldd	r14, Y+9	; 0x09
     fee:	fa 84       	ldd	r15, Y+10	; 0x0a
     ff0:	0b 89       	ldd	r16, Y+19	; 0x13
     ff2:	1c 89       	ldd	r17, Y+20	; 0x14
     ff4:	9c 01       	movw	r18, r24
     ff6:	a1 c2       	rjmp	.+1346   	; 0x153a <__EEPROM_REGION_LENGTH__+0x53a>
     ff8:	20 e0       	ldi	r18, 0x00	; 0
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	a9 01       	movw	r20, r18
     ffe:	c5 01       	movw	r24, r10
    1000:	b4 01       	movw	r22, r8
    1002:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    1006:	1b 82       	std	Y+3, r1	; 0x03
    1008:	1c 82       	std	Y+4, r1	; 0x04
    100a:	88 23       	and	r24, r24
    100c:	09 f4       	brne	.+2      	; 0x1010 <__EEPROM_REGION_LENGTH__+0x10>
    100e:	67 c0       	rjmp	.+206    	; 0x10de <__EEPROM_REGION_LENGTH__+0xde>
    1010:	f0 e8       	ldi	r31, 0x80	; 128
    1012:	fd 83       	std	Y+5, r31	; 0x05
    1014:	2f e3       	ldi	r18, 0x3F	; 63
    1016:	2e 83       	std	Y+6, r18	; 0x06
    1018:	21 2c       	mov	r2, r1
    101a:	31 2c       	mov	r3, r1
    101c:	20 e0       	ldi	r18, 0x00	; 0
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	40 e2       	ldi	r20, 0x20	; 32
    1022:	51 e4       	ldi	r21, 0x41	; 65
    1024:	6b 81       	ldd	r22, Y+3	; 0x03
    1026:	7c 81       	ldd	r23, Y+4	; 0x04
    1028:	8d 81       	ldd	r24, Y+5	; 0x05
    102a:	9e 81       	ldd	r25, Y+6	; 0x06
    102c:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1030:	f6 2e       	mov	r15, r22
    1032:	07 2f       	mov	r16, r23
    1034:	8d 87       	std	Y+13, r24	; 0x0d
    1036:	9b 87       	std	Y+11, r25	; 0x0b
    1038:	a5 01       	movw	r20, r10
    103a:	94 01       	movw	r18, r8
    103c:	0e 94 41 23 	call	0x4682	; 0x4682 <__gesf2>
    1040:	18 16       	cp	r1, r24
    1042:	54 f0       	brlt	.+20     	; 0x1058 <__EEPROM_REGION_LENGTH__+0x58>
    1044:	3f ef       	ldi	r19, 0xFF	; 255
    1046:	23 1a       	sub	r2, r19
    1048:	33 0a       	sbc	r3, r19
    104a:	fb 82       	std	Y+3, r15	; 0x03
    104c:	0c 83       	std	Y+4, r16	; 0x04
    104e:	4d 85       	ldd	r20, Y+13	; 0x0d
    1050:	4d 83       	std	Y+5, r20	; 0x05
    1052:	5b 85       	ldd	r21, Y+11	; 0x0b
    1054:	5e 83       	std	Y+6, r21	; 0x06
    1056:	e2 cf       	rjmp	.-60     	; 0x101c <__EEPROM_REGION_LENGTH__+0x1c>
    1058:	1c 86       	std	Y+12, r1	; 0x0c
    105a:	1b 86       	std	Y+11, r1	; 0x0b
    105c:	2b 81       	ldd	r18, Y+3	; 0x03
    105e:	3c 81       	ldd	r19, Y+4	; 0x04
    1060:	4d 81       	ldd	r20, Y+5	; 0x05
    1062:	5e 81       	ldd	r21, Y+6	; 0x06
    1064:	c5 01       	movw	r24, r10
    1066:	b4 01       	movw	r22, r8
    1068:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    106c:	87 ff       	sbrs	r24, 7
    106e:	3d c0       	rjmp	.+122    	; 0x10ea <__EEPROM_REGION_LENGTH__+0xea>
    1070:	84 ed       	ldi	r24, 0xD4	; 212
    1072:	28 16       	cp	r2, r24
    1074:	8e ef       	ldi	r24, 0xFE	; 254
    1076:	38 06       	cpc	r3, r24
    1078:	04 f5       	brge	.+64     	; 0x10ba <__EEPROM_REGION_LENGTH__+0xba>
    107a:	eb 85       	ldd	r30, Y+11	; 0x0b
    107c:	fc 85       	ldd	r31, Y+12	; 0x0c
    107e:	ef 2b       	or	r30, r31
    1080:	e1 f4       	brne	.+56     	; 0x10ba <__EEPROM_REGION_LENGTH__+0xba>
    1082:	20 e0       	ldi	r18, 0x00	; 0
    1084:	30 e0       	ldi	r19, 0x00	; 0
    1086:	40 e8       	ldi	r20, 0x80	; 128
    1088:	5a e5       	ldi	r21, 0x5A	; 90
    108a:	c5 01       	movw	r24, r10
    108c:	b4 01       	movw	r22, r8
    108e:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1092:	4b 01       	movw	r8, r22
    1094:	5c 01       	movw	r10, r24
    1096:	20 e0       	ldi	r18, 0x00	; 0
    1098:	30 e0       	ldi	r19, 0x00	; 0
    109a:	40 e8       	ldi	r20, 0x80	; 128
    109c:	5a e5       	ldi	r21, 0x5A	; 90
    109e:	6b 81       	ldd	r22, Y+3	; 0x03
    10a0:	7c 81       	ldd	r23, Y+4	; 0x04
    10a2:	8d 81       	ldd	r24, Y+5	; 0x05
    10a4:	9e 81       	ldd	r25, Y+6	; 0x06
    10a6:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    10aa:	6b 83       	std	Y+3, r22	; 0x03
    10ac:	7c 83       	std	Y+4, r23	; 0x04
    10ae:	8d 83       	std	Y+5, r24	; 0x05
    10b0:	9e 83       	std	Y+6, r25	; 0x06
    10b2:	21 e0       	ldi	r18, 0x01	; 1
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	3c 87       	std	Y+12, r19	; 0x0c
    10b8:	2b 87       	std	Y+11, r18	; 0x0b
    10ba:	20 e0       	ldi	r18, 0x00	; 0
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	40 e2       	ldi	r20, 0x20	; 32
    10c0:	51 e4       	ldi	r21, 0x41	; 65
    10c2:	6b 81       	ldd	r22, Y+3	; 0x03
    10c4:	7c 81       	ldd	r23, Y+4	; 0x04
    10c6:	8d 81       	ldd	r24, Y+5	; 0x05
    10c8:	9e 81       	ldd	r25, Y+6	; 0x06
    10ca:	0e 94 4e 23 	call	0x469c	; 0x469c <__divsf3>
    10ce:	6b 83       	std	Y+3, r22	; 0x03
    10d0:	7c 83       	std	Y+4, r23	; 0x04
    10d2:	8d 83       	std	Y+5, r24	; 0x05
    10d4:	9e 83       	std	Y+6, r25	; 0x06
    10d6:	31 e0       	ldi	r19, 0x01	; 1
    10d8:	23 1a       	sub	r2, r19
    10da:	31 08       	sbc	r3, r1
    10dc:	bf cf       	rjmp	.-130    	; 0x105c <__EEPROM_REGION_LENGTH__+0x5c>
    10de:	40 e8       	ldi	r20, 0x80	; 128
    10e0:	4d 83       	std	Y+5, r20	; 0x05
    10e2:	5f e3       	ldi	r21, 0x3F	; 63
    10e4:	5e 83       	std	Y+6, r21	; 0x06
    10e6:	21 2c       	mov	r2, r1
    10e8:	31 2c       	mov	r3, r1
    10ea:	81 2f       	mov	r24, r17
    10ec:	11 0f       	add	r17, r17
    10ee:	99 0b       	sbc	r25, r25
    10f0:	9b a3       	std	Y+35, r25	; 0x23
    10f2:	8a a3       	std	Y+34, r24	; 0x22
    10f4:	0e 94 e8 22 	call	0x45d0	; 0x45d0 <tolower>
    10f8:	8b 8f       	std	Y+27, r24	; 0x1b
    10fa:	d7 fc       	sbrc	r13, 7
    10fc:	03 c0       	rjmp	.+6      	; 0x1104 <__EEPROM_REGION_LENGTH__+0x104>
    10fe:	de a2       	std	Y+38, r13	; 0x26
    1100:	cd a2       	std	Y+37, r12	; 0x25
    1102:	04 c0       	rjmp	.+8      	; 0x110c <__EEPROM_REGION_LENGTH__+0x10c>
    1104:	e6 e0       	ldi	r30, 0x06	; 6
    1106:	f0 e0       	ldi	r31, 0x00	; 0
    1108:	fe a3       	std	Y+38, r31	; 0x26
    110a:	ed a3       	std	Y+37, r30	; 0x25
    110c:	fb 8d       	ldd	r31, Y+27	; 0x1b
    110e:	f7 36       	cpi	r31, 0x67	; 103
    1110:	41 f4       	brne	.+16     	; 0x1122 <__EEPROM_REGION_LENGTH__+0x122>
    1112:	cd 28       	or	r12, r13
    1114:	09 f0       	breq	.+2      	; 0x1118 <__EEPROM_REGION_LENGTH__+0x118>
    1116:	1e c2       	rjmp	.+1084   	; 0x1554 <__EEPROM_REGION_LENGTH__+0x554>
    1118:	21 e0       	ldi	r18, 0x01	; 1
    111a:	30 e0       	ldi	r19, 0x00	; 0
    111c:	3e a3       	std	Y+38, r19	; 0x26
    111e:	2d a3       	std	Y+37, r18	; 0x25
    1120:	19 c2       	rjmp	.+1074   	; 0x1554 <__EEPROM_REGION_LENGTH__+0x554>
    1122:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1124:	8d 8b       	std	Y+21, r24	; 0x15
    1126:	04 c0       	rjmp	.+8      	; 0x1130 <__EEPROM_REGION_LENGTH__+0x130>
    1128:	37 fe       	sbrs	r3, 7
    112a:	25 c2       	rjmp	.+1098   	; 0x1576 <__EEPROM_REGION_LENGTH__+0x576>
    112c:	96 e6       	ldi	r25, 0x66	; 102
    112e:	9d 8b       	std	Y+21, r25	; 0x15
    1130:	ed a1       	ldd	r30, Y+37	; 0x25
    1132:	fe a1       	ldd	r31, Y+38	; 0x26
    1134:	31 96       	adiw	r30, 0x01	; 1
    1136:	fe a3       	std	Y+38, r31	; 0x26
    1138:	ed a3       	std	Y+37, r30	; 0x25
    113a:	fd 89       	ldd	r31, Y+21	; 0x15
    113c:	f6 36       	cpi	r31, 0x66	; 102
    113e:	99 f4       	brne	.+38     	; 0x1166 <__EEPROM_REGION_LENGTH__+0x166>
    1140:	37 fe       	sbrs	r3, 7
    1142:	08 c0       	rjmp	.+16     	; 0x1154 <__EEPROM_REGION_LENGTH__+0x154>
    1144:	1b 82       	std	Y+3, r1	; 0x03
    1146:	1c 82       	std	Y+4, r1	; 0x04
    1148:	20 e8       	ldi	r18, 0x80	; 128
    114a:	2d 83       	std	Y+5, r18	; 0x05
    114c:	3f e3       	ldi	r19, 0x3F	; 63
    114e:	3e 83       	std	Y+6, r19	; 0x06
    1150:	21 2c       	mov	r2, r1
    1152:	31 2c       	mov	r3, r1
    1154:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1156:	47 36       	cpi	r20, 0x67	; 103
    1158:	31 f0       	breq	.+12     	; 0x1166 <__EEPROM_REGION_LENGTH__+0x166>
    115a:	8d a1       	ldd	r24, Y+37	; 0x25
    115c:	9e a1       	ldd	r25, Y+38	; 0x26
    115e:	82 0d       	add	r24, r2
    1160:	93 1d       	adc	r25, r3
    1162:	9e a3       	std	Y+38, r25	; 0x26
    1164:	8d a3       	std	Y+37, r24	; 0x25
    1166:	9b 81       	ldd	r25, Y+3	; 0x03
    1168:	9b 87       	std	Y+11, r25	; 0x0b
    116a:	ec 81       	ldd	r30, Y+4	; 0x04
    116c:	ed 87       	std	Y+13, r30	; 0x0d
    116e:	fd 81       	ldd	r31, Y+5	; 0x05
    1170:	fe 8b       	std	Y+22, r31	; 0x16
    1172:	2e 81       	ldd	r18, Y+6	; 0x06
    1174:	2a 8f       	std	Y+26, r18	; 0x1a
    1176:	75 01       	movw	r14, r10
    1178:	64 01       	movw	r12, r8
    117a:	1d 8e       	std	Y+29, r1	; 0x1d
    117c:	1c 8e       	std	Y+28, r1	; 0x1c
    117e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1180:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1182:	ed a1       	ldd	r30, Y+37	; 0x25
    1184:	fe a1       	ldd	r31, Y+38	; 0x26
    1186:	8e 17       	cp	r24, r30
    1188:	9f 07       	cpc	r25, r31
    118a:	c1 f1       	breq	.+112    	; 0x11fc <__EEPROM_REGION_LENGTH__+0x1fc>
    118c:	2b 85       	ldd	r18, Y+11	; 0x0b
    118e:	3d 85       	ldd	r19, Y+13	; 0x0d
    1190:	4e 89       	ldd	r20, Y+22	; 0x16
    1192:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1194:	c7 01       	movw	r24, r14
    1196:	b6 01       	movw	r22, r12
    1198:	0e 94 4e 23 	call	0x469c	; 0x469c <__divsf3>
    119c:	0e 94 c3 14 	call	0x2986	; 0x2986 <floorf>
    11a0:	2b 01       	movw	r4, r22
    11a2:	3c 01       	movw	r6, r24
    11a4:	0e 94 1a 23 	call	0x4634	; 0x4634 <__fixsfsi>
    11a8:	6c a3       	std	Y+36, r22	; 0x24
    11aa:	87 01       	movw	r16, r14
    11ac:	76 01       	movw	r14, r12
    11ae:	17 fb       	bst	r17, 7
    11b0:	10 95       	com	r17
    11b2:	17 f9       	bld	r17, 7
    11b4:	10 95       	com	r17
    11b6:	2b 85       	ldd	r18, Y+11	; 0x0b
    11b8:	3d 85       	ldd	r19, Y+13	; 0x0d
    11ba:	4e 89       	ldd	r20, Y+22	; 0x16
    11bc:	5a 8d       	ldd	r21, Y+26	; 0x1a
    11be:	c3 01       	movw	r24, r6
    11c0:	b2 01       	movw	r22, r4
    11c2:	0e 94 25 14 	call	0x284a	; 0x284a <fmaf>
    11c6:	6b 01       	movw	r12, r22
    11c8:	7c 01       	movw	r14, r24
    11ca:	f7 fa       	bst	r15, 7
    11cc:	f0 94       	com	r15
    11ce:	f7 f8       	bld	r15, 7
    11d0:	f0 94       	com	r15
    11d2:	20 e0       	ldi	r18, 0x00	; 0
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	40 e2       	ldi	r20, 0x20	; 32
    11d8:	51 e4       	ldi	r21, 0x41	; 65
    11da:	6b 85       	ldd	r22, Y+11	; 0x0b
    11dc:	7d 85       	ldd	r23, Y+13	; 0x0d
    11de:	8e 89       	ldd	r24, Y+22	; 0x16
    11e0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    11e2:	0e 94 4e 23 	call	0x469c	; 0x469c <__divsf3>
    11e6:	6b 87       	std	Y+11, r22	; 0x0b
    11e8:	7d 87       	std	Y+13, r23	; 0x0d
    11ea:	8e 8b       	std	Y+22, r24	; 0x16
    11ec:	9a 8f       	std	Y+26, r25	; 0x1a
    11ee:	4c 8d       	ldd	r20, Y+28	; 0x1c
    11f0:	5d 8d       	ldd	r21, Y+29	; 0x1d
    11f2:	4f 5f       	subi	r20, 0xFF	; 255
    11f4:	5f 4f       	sbci	r21, 0xFF	; 255
    11f6:	5d 8f       	std	Y+29, r21	; 0x1d
    11f8:	4c 8f       	std	Y+28, r20	; 0x1c
    11fa:	c1 cf       	rjmp	.-126    	; 0x117e <__EEPROM_REGION_LENGTH__+0x17e>
    11fc:	20 e0       	ldi	r18, 0x00	; 0
    11fe:	30 e0       	ldi	r19, 0x00	; 0
    1200:	40 ea       	ldi	r20, 0xA0	; 160
    1202:	50 e4       	ldi	r21, 0x40	; 64
    1204:	6b 85       	ldd	r22, Y+11	; 0x0b
    1206:	7d 85       	ldd	r23, Y+13	; 0x0d
    1208:	8e 89       	ldd	r24, Y+22	; 0x16
    120a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    120c:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1210:	2b 01       	movw	r4, r22
    1212:	3c 01       	movw	r6, r24
    1214:	9b 01       	movw	r18, r22
    1216:	ac 01       	movw	r20, r24
    1218:	c7 01       	movw	r24, r14
    121a:	b6 01       	movw	r22, r12
    121c:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    1220:	87 fd       	sbrc	r24, 7
    1222:	0b c0       	rjmp	.+22     	; 0x123a <__EEPROM_REGION_LENGTH__+0x23a>
    1224:	a3 01       	movw	r20, r6
    1226:	92 01       	movw	r18, r4
    1228:	c7 01       	movw	r24, r14
    122a:	b6 01       	movw	r22, r12
    122c:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    1230:	81 11       	cpse	r24, r1
    1232:	06 c0       	rjmp	.+12     	; 0x1240 <__EEPROM_REGION_LENGTH__+0x240>
    1234:	fc a1       	ldd	r31, Y+36	; 0x24
    1236:	f0 fd       	sbrc	r31, 0
    1238:	03 c0       	rjmp	.+6      	; 0x1240 <__EEPROM_REGION_LENGTH__+0x240>
    123a:	41 2c       	mov	r4, r1
    123c:	51 2c       	mov	r5, r1
    123e:	32 01       	movw	r6, r4
    1240:	a3 01       	movw	r20, r6
    1242:	92 01       	movw	r18, r4
    1244:	c5 01       	movw	r24, r10
    1246:	b4 01       	movw	r22, r8
    1248:	0e 94 14 23 	call	0x4628	; 0x4628 <__addsf3>
    124c:	4b 01       	movw	r8, r22
    124e:	5c 01       	movw	r10, r24
    1250:	2d 89       	ldd	r18, Y+21	; 0x15
    1252:	25 36       	cpi	r18, 0x65	; 101
    1254:	11 f0       	breq	.+4      	; 0x125a <__EEPROM_REGION_LENGTH__+0x25a>
    1256:	31 01       	movw	r6, r2
    1258:	02 c0       	rjmp	.+4      	; 0x125e <__EEPROM_REGION_LENGTH__+0x25e>
    125a:	61 2c       	mov	r6, r1
    125c:	71 2c       	mov	r7, r1
    125e:	23 01       	movw	r4, r6
    1260:	4d a1       	ldd	r20, Y+37	; 0x25
    1262:	5e a1       	ldd	r21, Y+38	; 0x26
    1264:	44 1a       	sub	r4, r20
    1266:	55 0a       	sbc	r5, r21
    1268:	c9 88       	ldd	r12, Y+17	; 0x11
    126a:	da 88       	ldd	r13, Y+18	; 0x12
    126c:	00 e0       	ldi	r16, 0x00	; 0
    126e:	10 e0       	ldi	r17, 0x00	; 0
    1270:	1c 86       	std	Y+12, r1	; 0x0c
    1272:	1b 86       	std	Y+11, r1	; 0x0b
    1274:	89 85       	ldd	r24, Y+9	; 0x09
    1276:	9a 85       	ldd	r25, Y+10	; 0x0a
    1278:	80 71       	andi	r24, 0x10	; 16
    127a:	99 27       	eor	r25, r25
    127c:	9f 8b       	std	Y+23, r25	; 0x17
    127e:	8e 8b       	std	Y+22, r24	; 0x16
    1280:	64 14       	cp	r6, r4
    1282:	75 04       	cpc	r7, r5
    1284:	31 f4       	brne	.+12     	; 0x1292 <__EEPROM_REGION_LENGTH__+0x292>
    1286:	8b 85       	ldd	r24, Y+11	; 0x0b
    1288:	9c 85       	ldd	r25, Y+12	; 0x0c
    128a:	89 2b       	or	r24, r25
    128c:	09 f4       	brne	.+2      	; 0x1290 <__EEPROM_REGION_LENGTH__+0x290>
    128e:	9a c0       	rjmp	.+308    	; 0x13c4 <__EEPROM_REGION_LENGTH__+0x3c4>
    1290:	a6 c0       	rjmp	.+332    	; 0x13de <__EEPROM_REGION_LENGTH__+0x3de>
    1292:	dd 8e       	std	Y+29, r13	; 0x1d
    1294:	cc 8e       	std	Y+28, r12	; 0x1c
    1296:	e8 8d       	ldd	r30, Y+24	; 0x18
    1298:	f9 8d       	ldd	r31, Y+25	; 0x19
    129a:	80 85       	ldd	r24, Z+8	; 0x08
    129c:	91 85       	ldd	r25, Z+9	; 0x09
    129e:	05 97       	sbiw	r24, 0x05	; 5
    12a0:	c8 16       	cp	r12, r24
    12a2:	d9 06       	cpc	r13, r25
    12a4:	80 f7       	brcc	.-32     	; 0x1286 <__EEPROM_REGION_LENGTH__+0x286>
    12a6:	2b 81       	ldd	r18, Y+3	; 0x03
    12a8:	3c 81       	ldd	r19, Y+4	; 0x04
    12aa:	4d 81       	ldd	r20, Y+5	; 0x05
    12ac:	5e 81       	ldd	r21, Y+6	; 0x06
    12ae:	c5 01       	movw	r24, r10
    12b0:	b4 01       	movw	r22, r8
    12b2:	0e 94 4e 23 	call	0x469c	; 0x469c <__divsf3>
    12b6:	0e 94 c3 14 	call	0x2986	; 0x2986 <floorf>
    12ba:	6d 87       	std	Y+13, r22	; 0x0d
    12bc:	7e 87       	std	Y+14, r23	; 0x0e
    12be:	8f 87       	std	Y+15, r24	; 0x0f
    12c0:	98 8b       	std	Y+16, r25	; 0x10
    12c2:	0e 94 1a 23 	call	0x4634	; 0x4634 <__fixsfsi>
    12c6:	cb 01       	movw	r24, r22
    12c8:	ee 89       	ldd	r30, Y+22	; 0x16
    12ca:	ff 89       	ldd	r31, Y+23	; 0x17
    12cc:	ef 2b       	or	r30, r31
    12ce:	69 f4       	brne	.+26     	; 0x12ea <__EEPROM_REGION_LENGTH__+0x2ea>
    12d0:	89 2b       	or	r24, r25
    12d2:	59 f4       	brne	.+22     	; 0x12ea <__EEPROM_REGION_LENGTH__+0x2ea>
    12d4:	fb 8d       	ldd	r31, Y+27	; 0x1b
    12d6:	f7 36       	cpi	r31, 0x67	; 103
    12d8:	41 f4       	brne	.+16     	; 0x12ea <__EEPROM_REGION_LENGTH__+0x2ea>
    12da:	77 fe       	sbrs	r7, 7
    12dc:	06 c0       	rjmp	.+12     	; 0x12ea <__EEPROM_REGION_LENGTH__+0x2ea>
    12de:	98 01       	movw	r18, r16
    12e0:	2f 5f       	subi	r18, 0xFF	; 255
    12e2:	3f 4f       	sbci	r19, 0xFF	; 255
    12e4:	3d 8f       	std	Y+29, r19	; 0x1d
    12e6:	2c 8f       	std	Y+28, r18	; 0x1c
    12e8:	43 c0       	rjmp	.+134    	; 0x1370 <__EEPROM_REGION_LENGTH__+0x370>
    12ea:	4b 85       	ldd	r20, Y+11	; 0x0b
    12ec:	5c 85       	ldd	r21, Y+12	; 0x0c
    12ee:	45 2b       	or	r20, r21
    12f0:	b1 f4       	brne	.+44     	; 0x131e <__EEPROM_REGION_LENGTH__+0x31e>
    12f2:	77 fe       	sbrs	r7, 7
    12f4:	14 c0       	rjmp	.+40     	; 0x131e <__EEPROM_REGION_LENGTH__+0x31e>
    12f6:	5f ef       	ldi	r21, 0xFF	; 255
    12f8:	c5 1a       	sub	r12, r21
    12fa:	d5 0a       	sbc	r13, r21
    12fc:	e9 81       	ldd	r30, Y+1	; 0x01
    12fe:	fa 81       	ldd	r31, Y+2	; 0x02
    1300:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1302:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1304:	e8 0f       	add	r30, r24
    1306:	f9 1f       	adc	r31, r25
    1308:	9e e2       	ldi	r25, 0x2E	; 46
    130a:	90 83       	st	Z, r25
    130c:	ef 81       	ldd	r30, Y+7	; 0x07
    130e:	f8 85       	ldd	r31, Y+8	; 0x08
    1310:	31 97       	sbiw	r30, 0x01	; 1
    1312:	f8 87       	std	Y+8, r31	; 0x08
    1314:	ef 83       	std	Y+7, r30	; 0x07
    1316:	21 e0       	ldi	r18, 0x01	; 1
    1318:	30 e0       	ldi	r19, 0x00	; 0
    131a:	3c 87       	std	Y+12, r19	; 0x0c
    131c:	2b 87       	std	Y+11, r18	; 0x0b
    131e:	e9 81       	ldd	r30, Y+1	; 0x01
    1320:	fa 81       	ldd	r31, Y+2	; 0x02
    1322:	ec 0d       	add	r30, r12
    1324:	fd 1d       	adc	r31, r13
    1326:	1d 8f       	std	Y+29, r17	; 0x1d
    1328:	0c 8f       	std	Y+28, r16	; 0x1c
    132a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    132c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    132e:	89 2b       	or	r24, r25
    1330:	49 f0       	breq	.+18     	; 0x1344 <__EEPROM_REGION_LENGTH__+0x344>
    1332:	30 e3       	ldi	r19, 0x30	; 48
    1334:	31 93       	st	Z+, r19
    1336:	4c 8d       	ldd	r20, Y+28	; 0x1c
    1338:	5d 8d       	ldd	r21, Y+29	; 0x1d
    133a:	41 50       	subi	r20, 0x01	; 1
    133c:	51 09       	sbc	r21, r1
    133e:	5d 8f       	std	Y+29, r21	; 0x1d
    1340:	4c 8f       	std	Y+28, r20	; 0x1c
    1342:	f3 cf       	rjmp	.-26     	; 0x132a <__EEPROM_REGION_LENGTH__+0x32a>
    1344:	c8 01       	movw	r24, r16
    1346:	8c 0d       	add	r24, r12
    1348:	9d 1d       	adc	r25, r13
    134a:	2f 81       	ldd	r18, Y+7	; 0x07
    134c:	38 85       	ldd	r19, Y+8	; 0x08
    134e:	20 1b       	sub	r18, r16
    1350:	31 0b       	sbc	r19, r17
    1352:	6c 01       	movw	r12, r24
    1354:	ef ef       	ldi	r30, 0xFF	; 255
    1356:	ce 1a       	sub	r12, r30
    1358:	de 0a       	sbc	r13, r30
    135a:	e9 81       	ldd	r30, Y+1	; 0x01
    135c:	fa 81       	ldd	r31, Y+2	; 0x02
    135e:	e8 0f       	add	r30, r24
    1360:	f9 1f       	adc	r31, r25
    1362:	60 5d       	subi	r22, 0xD0	; 208
    1364:	60 83       	st	Z, r22
    1366:	a9 01       	movw	r20, r18
    1368:	41 50       	subi	r20, 0x01	; 1
    136a:	51 09       	sbc	r21, r1
    136c:	58 87       	std	Y+8, r21	; 0x08
    136e:	4f 83       	std	Y+7, r20	; 0x07
    1370:	85 01       	movw	r16, r10
    1372:	74 01       	movw	r14, r8
    1374:	17 fb       	bst	r17, 7
    1376:	10 95       	com	r17
    1378:	17 f9       	bld	r17, 7
    137a:	10 95       	com	r17
    137c:	2b 81       	ldd	r18, Y+3	; 0x03
    137e:	3c 81       	ldd	r19, Y+4	; 0x04
    1380:	4d 81       	ldd	r20, Y+5	; 0x05
    1382:	5e 81       	ldd	r21, Y+6	; 0x06
    1384:	6d 85       	ldd	r22, Y+13	; 0x0d
    1386:	7e 85       	ldd	r23, Y+14	; 0x0e
    1388:	8f 85       	ldd	r24, Y+15	; 0x0f
    138a:	98 89       	ldd	r25, Y+16	; 0x10
    138c:	0e 94 25 14 	call	0x284a	; 0x284a <fmaf>
    1390:	4b 01       	movw	r8, r22
    1392:	5c 01       	movw	r10, r24
    1394:	b7 fa       	bst	r11, 7
    1396:	b0 94       	com	r11
    1398:	b7 f8       	bld	r11, 7
    139a:	b0 94       	com	r11
    139c:	20 e0       	ldi	r18, 0x00	; 0
    139e:	30 e0       	ldi	r19, 0x00	; 0
    13a0:	40 e2       	ldi	r20, 0x20	; 32
    13a2:	51 e4       	ldi	r21, 0x41	; 65
    13a4:	6b 81       	ldd	r22, Y+3	; 0x03
    13a6:	7c 81       	ldd	r23, Y+4	; 0x04
    13a8:	8d 81       	ldd	r24, Y+5	; 0x05
    13aa:	9e 81       	ldd	r25, Y+6	; 0x06
    13ac:	0e 94 4e 23 	call	0x469c	; 0x469c <__divsf3>
    13b0:	6b 83       	std	Y+3, r22	; 0x03
    13b2:	7c 83       	std	Y+4, r23	; 0x04
    13b4:	8d 83       	std	Y+5, r24	; 0x05
    13b6:	9e 83       	std	Y+6, r25	; 0x06
    13b8:	51 e0       	ldi	r21, 0x01	; 1
    13ba:	65 1a       	sub	r6, r21
    13bc:	71 08       	sbc	r7, r1
    13be:	0c 8d       	ldd	r16, Y+28	; 0x1c
    13c0:	1d 8d       	ldd	r17, Y+29	; 0x1d
    13c2:	5e cf       	rjmp	.-324    	; 0x1280 <__EEPROM_REGION_LENGTH__+0x280>
    13c4:	f9 85       	ldd	r31, Y+9	; 0x09
    13c6:	f4 ff       	sbrs	r31, 4
    13c8:	0a c0       	rjmp	.+20     	; 0x13de <__EEPROM_REGION_LENGTH__+0x3de>
    13ca:	e9 81       	ldd	r30, Y+1	; 0x01
    13cc:	fa 81       	ldd	r31, Y+2	; 0x02
    13ce:	ec 0d       	add	r30, r12
    13d0:	fd 1d       	adc	r31, r13
    13d2:	8e e2       	ldi	r24, 0x2E	; 46
    13d4:	80 83       	st	Z, r24
    13d6:	96 01       	movw	r18, r12
    13d8:	2f 5f       	subi	r18, 0xFF	; 255
    13da:	3f 4f       	sbci	r19, 0xFF	; 255
    13dc:	69 01       	movw	r12, r18
    13de:	49 81       	ldd	r20, Y+1	; 0x01
    13e0:	5a 81       	ldd	r21, Y+2	; 0x02
    13e2:	4c 0d       	add	r20, r12
    13e4:	5d 1d       	adc	r21, r13
    13e6:	5c 87       	std	Y+12, r21	; 0x0c
    13e8:	4b 87       	std	Y+11, r20	; 0x0b
    13ea:	fa 01       	movw	r30, r20
    13ec:	10 82       	st	Z, r1
    13ee:	fd 89       	ldd	r31, Y+21	; 0x15
    13f0:	f5 36       	cpi	r31, 0x65	; 101
    13f2:	09 f0       	breq	.+2      	; 0x13f6 <__EEPROM_REGION_LENGTH__+0x3f6>
    13f4:	61 c0       	rjmp	.+194    	; 0x14b8 <__EEPROM_REGION_LENGTH__+0x4b8>
    13f6:	e9 81       	ldd	r30, Y+1	; 0x01
    13f8:	fa 81       	ldd	r31, Y+2	; 0x02
    13fa:	28 a1       	ldd	r18, Y+32	; 0x20
    13fc:	39 a1       	ldd	r19, Y+33	; 0x21
    13fe:	e2 0f       	add	r30, r18
    1400:	f3 1f       	adc	r31, r19
    1402:	31 97       	sbiw	r30, 0x01	; 1
    1404:	10 82       	st	Z, r1
    1406:	37 fe       	sbrs	r3, 7
    1408:	06 c0       	rjmp	.+12     	; 0x1416 <__EEPROM_REGION_LENGTH__+0x416>
    140a:	31 94       	neg	r3
    140c:	21 94       	neg	r2
    140e:	31 08       	sbc	r3, r1
    1410:	01 e0       	ldi	r16, 0x01	; 1
    1412:	10 e0       	ldi	r17, 0x00	; 0
    1414:	02 c0       	rjmp	.+4      	; 0x141a <__EEPROM_REGION_LENGTH__+0x41a>
    1416:	00 e0       	ldi	r16, 0x00	; 0
    1418:	10 e0       	ldi	r17, 0x00	; 0
    141a:	e8 a1       	ldd	r30, Y+32	; 0x20
    141c:	f9 a1       	ldd	r31, Y+33	; 0x21
    141e:	31 97       	sbiw	r30, 0x01	; 1
    1420:	49 81       	ldd	r20, Y+1	; 0x01
    1422:	5a 81       	ldd	r21, Y+2	; 0x02
    1424:	e4 0f       	add	r30, r20
    1426:	f5 1f       	adc	r31, r21
    1428:	22 e0       	ldi	r18, 0x02	; 2
    142a:	30 e0       	ldi	r19, 0x00	; 0
    142c:	8a e0       	ldi	r24, 0x0A	; 10
    142e:	e8 2e       	mov	r14, r24
    1430:	f1 2c       	mov	r15, r1
    1432:	cf 01       	movw	r24, r30
    1434:	49 81       	ldd	r20, Y+1	; 0x01
    1436:	5a 81       	ldd	r21, Y+2	; 0x02
    1438:	84 1b       	sub	r24, r20
    143a:	95 0b       	sbc	r25, r21
    143c:	21 14       	cp	r2, r1
    143e:	31 04       	cpc	r3, r1
    1440:	79 f0       	breq	.+30     	; 0x1460 <__EEPROM_REGION_LENGTH__+0x460>
    1442:	c1 01       	movw	r24, r2
    1444:	b7 01       	movw	r22, r14
    1446:	0e 94 a4 21 	call	0x4348	; 0x4348 <__divmodhi4>
    144a:	80 5d       	subi	r24, 0xD0	; 208
    144c:	82 93       	st	-Z, r24
    144e:	1b 01       	movw	r2, r22
    1450:	21 50       	subi	r18, 0x01	; 1
    1452:	31 09       	sbc	r19, r1
    1454:	8f 81       	ldd	r24, Y+7	; 0x07
    1456:	98 85       	ldd	r25, Y+8	; 0x08
    1458:	01 97       	sbiw	r24, 0x01	; 1
    145a:	98 87       	std	Y+8, r25	; 0x08
    145c:	8f 83       	std	Y+7, r24	; 0x07
    145e:	e9 cf       	rjmp	.-46     	; 0x1432 <__EEPROM_REGION_LENGTH__+0x432>
    1460:	12 16       	cp	r1, r18
    1462:	13 06       	cpc	r1, r19
    1464:	74 f3       	brlt	.-36     	; 0x1442 <__EEPROM_REGION_LENGTH__+0x442>
    1466:	fc 01       	movw	r30, r24
    1468:	31 97       	sbiw	r30, 0x01	; 1
    146a:	e4 0f       	add	r30, r20
    146c:	f5 1f       	adc	r31, r21
    146e:	01 2b       	or	r16, r17
    1470:	11 f4       	brne	.+4      	; 0x1476 <__EEPROM_REGION_LENGTH__+0x476>
    1472:	2b e2       	ldi	r18, 0x2B	; 43
    1474:	01 c0       	rjmp	.+2      	; 0x1478 <__EEPROM_REGION_LENGTH__+0x478>
    1476:	2d e2       	ldi	r18, 0x2D	; 45
    1478:	20 83       	st	Z, r18
    147a:	02 97       	sbiw	r24, 0x02	; 2
    147c:	e9 81       	ldd	r30, Y+1	; 0x01
    147e:	fa 81       	ldd	r31, Y+2	; 0x02
    1480:	e8 0f       	add	r30, r24
    1482:	f9 1f       	adc	r31, r25
    1484:	2a a1       	ldd	r18, Y+34	; 0x22
    1486:	3b a1       	ldd	r19, Y+35	; 0x23
    1488:	21 54       	subi	r18, 0x41	; 65
    148a:	31 09       	sbc	r19, r1
    148c:	2a 31       	cpi	r18, 0x1A	; 26
    148e:	31 05       	cpc	r19, r1
    1490:	10 f0       	brcs	.+4      	; 0x1496 <__EEPROM_REGION_LENGTH__+0x496>
    1492:	25 e6       	ldi	r18, 0x65	; 101
    1494:	01 c0       	rjmp	.+2      	; 0x1498 <__EEPROM_REGION_LENGTH__+0x498>
    1496:	25 e4       	ldi	r18, 0x45	; 69
    1498:	20 83       	st	Z, r18
    149a:	2f 81       	ldd	r18, Y+7	; 0x07
    149c:	38 85       	ldd	r19, Y+8	; 0x08
    149e:	22 50       	subi	r18, 0x02	; 2
    14a0:	31 09       	sbc	r19, r1
    14a2:	38 87       	std	Y+8, r19	; 0x08
    14a4:	2f 83       	std	Y+7, r18	; 0x07
    14a6:	c8 16       	cp	r12, r24
    14a8:	d9 06       	cpc	r13, r25
    14aa:	34 f4       	brge	.+12     	; 0x14b8 <__EEPROM_REGION_LENGTH__+0x4b8>
    14ac:	af 01       	movw	r20, r30
    14ae:	60 e8       	ldi	r22, 0x80	; 128
    14b0:	8b 85       	ldd	r24, Y+11	; 0x0b
    14b2:	9c 85       	ldd	r25, Y+12	; 0x0c
    14b4:	0e 94 59 22 	call	0x44b2	; 0x44b2 <strcpy>
    14b8:	49 81       	ldd	r20, Y+1	; 0x01
    14ba:	5a 81       	ldd	r21, Y+2	; 0x02
    14bc:	3a 01       	movw	r6, r20
    14be:	80 e8       	ldi	r24, 0x80	; 128
    14c0:	88 2e       	mov	r8, r24
    14c2:	99 85       	ldd	r25, Y+9	; 0x09
    14c4:	91 ff       	sbrs	r25, 1
    14c6:	2e c0       	rjmp	.+92     	; 0x1524 <__EEPROM_REGION_LENGTH__+0x524>
    14c8:	90 fd       	sbrc	r25, 0
    14ca:	2c c0       	rjmp	.+88     	; 0x1524 <__EEPROM_REGION_LENGTH__+0x524>
    14cc:	ef 81       	ldd	r30, Y+7	; 0x07
    14ce:	f8 85       	ldd	r31, Y+8	; 0x08
    14d0:	1e 16       	cp	r1, r30
    14d2:	1f 06       	cpc	r1, r31
    14d4:	3c f5       	brge	.+78     	; 0x1524 <__EEPROM_REGION_LENGTH__+0x524>
    14d6:	88 2d       	mov	r24, r8
    14d8:	b3 01       	movw	r22, r6
    14da:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    14de:	29 81       	ldd	r18, Y+1	; 0x01
    14e0:	3a 81       	ldd	r19, Y+2	; 0x02
    14e2:	82 0f       	add	r24, r18
    14e4:	93 1f       	adc	r25, r19
    14e6:	9c 01       	movw	r18, r24
    14e8:	49 81       	ldd	r20, Y+1	; 0x01
    14ea:	5a 81       	ldd	r21, Y+2	; 0x02
    14ec:	24 1b       	sub	r18, r20
    14ee:	35 0b       	sbc	r19, r21
    14f0:	e9 89       	ldd	r30, Y+17	; 0x11
    14f2:	fa 89       	ldd	r31, Y+18	; 0x12
    14f4:	2e 17       	cp	r18, r30
    14f6:	3f 07       	cpc	r19, r31
    14f8:	4c f0       	brlt	.+18     	; 0x150c <__EEPROM_REGION_LENGTH__+0x50c>
    14fa:	fc 01       	movw	r30, r24
    14fc:	20 81       	ld	r18, Z
    14fe:	ef 81       	ldd	r30, Y+7	; 0x07
    1500:	f8 85       	ldd	r31, Y+8	; 0x08
    1502:	e8 0f       	add	r30, r24
    1504:	f9 1f       	adc	r31, r25
    1506:	20 83       	st	Z, r18
    1508:	01 97       	sbiw	r24, 0x01	; 1
    150a:	ed cf       	rjmp	.-38     	; 0x14e6 <__EEPROM_REGION_LENGTH__+0x4e6>
    150c:	4f 81       	ldd	r20, Y+7	; 0x07
    150e:	58 85       	ldd	r21, Y+8	; 0x08
    1510:	60 e3       	ldi	r22, 0x30	; 48
    1512:	70 e0       	ldi	r23, 0x00	; 0
    1514:	89 81       	ldd	r24, Y+1	; 0x01
    1516:	9a 81       	ldd	r25, Y+2	; 0x02
    1518:	8e 0f       	add	r24, r30
    151a:	9f 1f       	adc	r25, r31
    151c:	0e 94 d6 22 	call	0x45ac	; 0x45ac <memset>
    1520:	1c 8a       	std	Y+20, r1	; 0x14
    1522:	1b 8a       	std	Y+19, r1	; 0x13
    1524:	88 2d       	mov	r24, r8
    1526:	b3 01       	movw	r22, r6
    1528:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    152c:	e9 84       	ldd	r14, Y+9	; 0x09
    152e:	fa 84       	ldd	r15, Y+10	; 0x0a
    1530:	0b 89       	ldd	r16, Y+19	; 0x13
    1532:	1c 89       	ldd	r17, Y+20	; 0x14
    1534:	9c 01       	movw	r18, r24
    1536:	68 2d       	mov	r22, r8
    1538:	a3 01       	movw	r20, r6
    153a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    153c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    153e:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__pad>
    1542:	a6 96       	adiw	r28, 0x26	; 38
    1544:	e2 e1       	ldi	r30, 0x12	; 18
    1546:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>
    154a:	59 85       	ldd	r21, Y+9	; 0x09
    154c:	53 ff       	sbrs	r21, 3
    154e:	00 cd       	rjmp	.-1536   	; 0xf50 <__fmt_fp+0x8e>
    1550:	80 e2       	ldi	r24, 0x20	; 32
    1552:	f0 cc       	rjmp	.-1568   	; 0xf34 <__fmt_fp+0x72>
    1554:	2c ef       	ldi	r18, 0xFC	; 252
    1556:	22 16       	cp	r2, r18
    1558:	2f ef       	ldi	r18, 0xFF	; 255
    155a:	32 06       	cpc	r3, r18
    155c:	4c f0       	brlt	.+18     	; 0x1570 <__EEPROM_REGION_LENGTH__+0x570>
    155e:	4d a1       	ldd	r20, Y+37	; 0x25
    1560:	5e a1       	ldd	r21, Y+38	; 0x26
    1562:	24 16       	cp	r2, r20
    1564:	35 06       	cpc	r3, r21
    1566:	0c f4       	brge	.+2      	; 0x156a <__EEPROM_REGION_LENGTH__+0x56a>
    1568:	df cd       	rjmp	.-1090   	; 0x1128 <__EEPROM_REGION_LENGTH__+0x128>
    156a:	55 e6       	ldi	r21, 0x65	; 101
    156c:	5d 8b       	std	Y+21, r21	; 0x15
    156e:	fb cd       	rjmp	.-1034   	; 0x1166 <__EEPROM_REGION_LENGTH__+0x166>
    1570:	35 e6       	ldi	r19, 0x65	; 101
    1572:	3d 8b       	std	Y+21, r19	; 0x15
    1574:	f8 cd       	rjmp	.-1040   	; 0x1166 <__EEPROM_REGION_LENGTH__+0x166>
    1576:	46 e6       	ldi	r20, 0x66	; 102
    1578:	4d 8b       	std	Y+21, r20	; 0x15
    157a:	f5 cd       	rjmp	.-1046   	; 0x1166 <__EEPROM_REGION_LENGTH__+0x166>

Disassembly of section .text.__fmt_a:

0000157c <__fmt_a>:
    157c:	a0 e2       	ldi	r26, 0x20	; 32
    157e:	b0 e0       	ldi	r27, 0x00	; 0
    1580:	e4 ec       	ldi	r30, 0xC4	; 196
    1582:	fa e0       	ldi	r31, 0x0A	; 10
    1584:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
    1588:	9d 8f       	std	Y+29, r25	; 0x1d
    158a:	8c 8f       	std	Y+28, r24	; 0x1c
    158c:	fb 01       	movw	r30, r22
    158e:	29 83       	std	Y+1, r18	; 0x01
    1590:	20 81       	ld	r18, Z
    1592:	2d 83       	std	Y+5, r18	; 0x05
    1594:	31 81       	ldd	r19, Z+1	; 0x01
    1596:	3e 8f       	std	Y+30, r19	; 0x1e
    1598:	82 81       	ldd	r24, Z+2	; 0x02
    159a:	93 81       	ldd	r25, Z+3	; 0x03
    159c:	9b 8b       	std	Y+19, r25	; 0x13
    159e:	8a 8b       	std	Y+18, r24	; 0x12
    15a0:	24 81       	ldd	r18, Z+4	; 0x04
    15a2:	35 81       	ldd	r19, Z+5	; 0x05
    15a4:	39 87       	std	Y+9, r19	; 0x09
    15a6:	28 87       	std	Y+8, r18	; 0x08
    15a8:	80 85       	ldd	r24, Z+8	; 0x08
    15aa:	91 85       	ldd	r25, Z+9	; 0x09
    15ac:	99 8f       	std	Y+25, r25	; 0x19
    15ae:	88 8f       	std	Y+24, r24	; 0x18
    15b0:	46 80       	ldd	r4, Z+6	; 0x06
    15b2:	57 80       	ldd	r5, Z+7	; 0x07
    15b4:	fa 01       	movw	r30, r20
    15b6:	c0 80       	ld	r12, Z
    15b8:	d1 80       	ldd	r13, Z+1	; 0x01
    15ba:	e2 80       	ldd	r14, Z+2	; 0x02
    15bc:	f3 80       	ldd	r15, Z+3	; 0x03
    15be:	20 e0       	ldi	r18, 0x00	; 0
    15c0:	30 e0       	ldi	r19, 0x00	; 0
    15c2:	a9 01       	movw	r20, r18
    15c4:	c7 01       	movw	r24, r14
    15c6:	b6 01       	movw	r22, r12
    15c8:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    15cc:	87 ff       	sbrs	r24, 7
    15ce:	06 c0       	rjmp	.+12     	; 0x15dc <__fmt_a+0x60>
    15d0:	f7 fa       	bst	r15, 7
    15d2:	f0 94       	com	r15
    15d4:	f7 f8       	bld	r15, 7
    15d6:	f0 94       	com	r15
    15d8:	8d e2       	ldi	r24, 0x2D	; 45
    15da:	04 c0       	rjmp	.+8      	; 0x15e4 <__fmt_a+0x68>
    15dc:	5d 81       	ldd	r21, Y+5	; 0x05
    15de:	52 ff       	sbrs	r21, 2
    15e0:	f6 c2       	rjmp	.+1516   	; 0x1bce <__fmt_a+0x652>
    15e2:	8b e2       	ldi	r24, 0x2B	; 43
    15e4:	f2 01       	movw	r30, r4
    15e6:	80 83       	st	Z, r24
    15e8:	28 85       	ldd	r18, Y+8	; 0x08
    15ea:	39 85       	ldd	r19, Y+9	; 0x09
    15ec:	21 50       	subi	r18, 0x01	; 1
    15ee:	31 09       	sbc	r19, r1
    15f0:	3f 87       	std	Y+15, r19	; 0x0f
    15f2:	2e 87       	std	Y+14, r18	; 0x0e
    15f4:	41 e0       	ldi	r20, 0x01	; 1
    15f6:	50 e0       	ldi	r21, 0x00	; 0
    15f8:	5c 83       	std	Y+4, r21	; 0x04
    15fa:	4b 83       	std	Y+3, r20	; 0x03
    15fc:	06 c0       	rjmp	.+12     	; 0x160a <__fmt_a+0x8e>
    15fe:	88 85       	ldd	r24, Y+8	; 0x08
    1600:	99 85       	ldd	r25, Y+9	; 0x09
    1602:	9f 87       	std	Y+15, r25	; 0x0f
    1604:	8e 87       	std	Y+14, r24	; 0x0e
    1606:	1c 82       	std	Y+4, r1	; 0x04
    1608:	1b 82       	std	Y+3, r1	; 0x03
    160a:	b7 01       	movw	r22, r14
    160c:	a6 01       	movw	r20, r12
    160e:	7f 77       	andi	r23, 0x7F	; 127
    1610:	e9 81       	ldd	r30, Y+1	; 0x01
    1612:	0e 2e       	mov	r0, r30
    1614:	00 0c       	add	r0, r0
    1616:	ff 0b       	sbc	r31, r31
    1618:	f9 8b       	std	Y+17, r31	; 0x11
    161a:	e8 8b       	std	Y+16, r30	; 0x10
    161c:	41 15       	cp	r20, r1
    161e:	51 05       	cpc	r21, r1
    1620:	f0 e8       	ldi	r31, 0x80	; 128
    1622:	6f 07       	cpc	r22, r31
    1624:	ff e7       	ldi	r31, 0x7F	; 127
    1626:	7f 07       	cpc	r23, r31
    1628:	c1 f4       	brne	.+48     	; 0x165a <__fmt_a+0xde>
    162a:	28 89       	ldd	r18, Y+16	; 0x10
    162c:	39 89       	ldd	r19, Y+17	; 0x11
    162e:	21 54       	subi	r18, 0x41	; 65
    1630:	31 09       	sbc	r19, r1
    1632:	8b 81       	ldd	r24, Y+3	; 0x03
    1634:	9c 81       	ldd	r25, Y+4	; 0x04
    1636:	84 0d       	add	r24, r4
    1638:	95 1d       	adc	r25, r5
    163a:	2a 31       	cpi	r18, 0x1A	; 26
    163c:	31 05       	cpc	r19, r1
    163e:	20 f4       	brcc	.+8      	; 0x1648 <__fmt_a+0xcc>
    1640:	43 e7       	ldi	r20, 0x73	; 115
    1642:	56 e0       	ldi	r21, 0x06	; 6
    1644:	60 e0       	ldi	r22, 0x00	; 0
    1646:	03 c0       	rjmp	.+6      	; 0x164e <__fmt_a+0xd2>
    1648:	47 e7       	ldi	r20, 0x77	; 119
    164a:	56 e0       	ldi	r21, 0x06	; 6
    164c:	60 e0       	ldi	r22, 0x00	; 0
    164e:	0e 94 59 22 	call	0x44b2	; 0x44b2 <strcpy>
    1652:	67 e7       	ldi	r22, 0x77	; 119
    1654:	76 e0       	ldi	r23, 0x06	; 6
    1656:	80 e0       	ldi	r24, 0x00	; 0
    1658:	1c c0       	rjmp	.+56     	; 0x1692 <__fmt_a+0x116>
    165a:	8b 81       	ldd	r24, Y+3	; 0x03
    165c:	9c 81       	ldd	r25, Y+4	; 0x04
    165e:	84 0d       	add	r24, r4
    1660:	95 1d       	adc	r25, r5
    1662:	41 30       	cpi	r20, 0x01	; 1
    1664:	51 05       	cpc	r21, r1
    1666:	60 48       	sbci	r22, 0x80	; 128
    1668:	7f 47       	sbci	r23, 0x7F	; 127
    166a:	e8 f0       	brcs	.+58     	; 0x16a6 <__fmt_a+0x12a>
    166c:	28 89       	ldd	r18, Y+16	; 0x10
    166e:	39 89       	ldd	r19, Y+17	; 0x11
    1670:	21 54       	subi	r18, 0x41	; 65
    1672:	31 09       	sbc	r19, r1
    1674:	2a 31       	cpi	r18, 0x1A	; 26
    1676:	31 05       	cpc	r19, r1
    1678:	20 f4       	brcc	.+8      	; 0x1682 <__fmt_a+0x106>
    167a:	4b e7       	ldi	r20, 0x7B	; 123
    167c:	56 e0       	ldi	r21, 0x06	; 6
    167e:	60 e0       	ldi	r22, 0x00	; 0
    1680:	03 c0       	rjmp	.+6      	; 0x1688 <__fmt_a+0x10c>
    1682:	4f e7       	ldi	r20, 0x7F	; 127
    1684:	56 e0       	ldi	r21, 0x06	; 6
    1686:	60 e0       	ldi	r22, 0x00	; 0
    1688:	0e 94 59 22 	call	0x44b2	; 0x44b2 <strcpy>
    168c:	6f e7       	ldi	r22, 0x7F	; 127
    168e:	76 e0       	ldi	r23, 0x06	; 6
    1690:	80 e0       	ldi	r24, 0x00	; 0
    1692:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    1696:	a2 01       	movw	r20, r4
    1698:	60 e8       	ldi	r22, 0x80	; 128
    169a:	ed 80       	ldd	r14, Y+5	; 0x05
    169c:	fe 8c       	ldd	r15, Y+30	; 0x1e
    169e:	08 85       	ldd	r16, Y+8	; 0x08
    16a0:	19 85       	ldd	r17, Y+9	; 0x09
    16a2:	9c 01       	movw	r18, r24
    16a4:	8c c2       	rjmp	.+1304   	; 0x1bbe <__fmt_a+0x642>
    16a6:	20 e3       	ldi	r18, 0x30	; 48
    16a8:	fc 01       	movw	r30, r24
    16aa:	20 83       	st	Z, r18
    16ac:	eb 81       	ldd	r30, Y+3	; 0x03
    16ae:	fc 81       	ldd	r31, Y+4	; 0x04
    16b0:	31 96       	adiw	r30, 0x01	; 1
    16b2:	e4 0d       	add	r30, r4
    16b4:	f5 1d       	adc	r31, r5
    16b6:	2b 81       	ldd	r18, Y+3	; 0x03
    16b8:	3c 81       	ldd	r19, Y+4	; 0x04
    16ba:	2e 5f       	subi	r18, 0xFE	; 254
    16bc:	3f 4f       	sbci	r19, 0xFF	; 255
    16be:	3c 83       	std	Y+4, r19	; 0x04
    16c0:	2b 83       	std	Y+3, r18	; 0x03
    16c2:	48 89       	ldd	r20, Y+16	; 0x10
    16c4:	59 89       	ldd	r21, Y+17	; 0x11
    16c6:	41 54       	subi	r20, 0x41	; 65
    16c8:	51 09       	sbc	r21, r1
    16ca:	5b 8f       	std	Y+27, r21	; 0x1b
    16cc:	4a 8f       	std	Y+26, r20	; 0x1a
    16ce:	4a 31       	cpi	r20, 0x1A	; 26
    16d0:	51 05       	cpc	r21, r1
    16d2:	10 f0       	brcs	.+4      	; 0x16d8 <__fmt_a+0x15c>
    16d4:	88 e7       	ldi	r24, 0x78	; 120
    16d6:	01 c0       	rjmp	.+2      	; 0x16da <__fmt_a+0x15e>
    16d8:	88 e5       	ldi	r24, 0x58	; 88
    16da:	80 83       	st	Z, r24
    16dc:	20 e0       	ldi	r18, 0x00	; 0
    16de:	30 e0       	ldi	r19, 0x00	; 0
    16e0:	a9 01       	movw	r20, r18
    16e2:	c7 01       	movw	r24, r14
    16e4:	b6 01       	movw	r22, r12
    16e6:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    16ea:	61 2c       	mov	r6, r1
    16ec:	71 2c       	mov	r7, r1
    16ee:	1f 8e       	std	Y+31, r1	; 0x1f
    16f0:	19 82       	std	Y+1, r1	; 0x01
    16f2:	88 23       	and	r24, r24
    16f4:	09 f4       	brne	.+2      	; 0x16f8 <__fmt_a+0x17c>
    16f6:	64 c0       	rjmp	.+200    	; 0x17c0 <__fmt_a+0x244>
    16f8:	50 e8       	ldi	r21, 0x80	; 128
    16fa:	58 a3       	std	Y+32, r21	; 0x20
    16fc:	8f e3       	ldi	r24, 0x3F	; 63
    16fe:	8a 83       	std	Y+2, r24	; 0x02
    1700:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1702:	39 81       	ldd	r19, Y+1	; 0x01
    1704:	48 a1       	ldd	r20, Y+32	; 0x20
    1706:	5a 81       	ldd	r21, Y+2	; 0x02
    1708:	6f 8d       	ldd	r22, Y+31	; 0x1f
    170a:	79 81       	ldd	r23, Y+1	; 0x01
    170c:	88 a1       	ldd	r24, Y+32	; 0x20
    170e:	9a 81       	ldd	r25, Y+2	; 0x02
    1710:	0e 94 14 23 	call	0x4628	; 0x4628 <__addsf3>
    1714:	5b 01       	movw	r10, r22
    1716:	8c 01       	movw	r16, r24
    1718:	a7 01       	movw	r20, r14
    171a:	96 01       	movw	r18, r12
    171c:	0e 94 41 23 	call	0x4682	; 0x4682 <__gesf2>
    1720:	18 16       	cp	r1, r24
    1722:	0c f4       	brge	.+2      	; 0x1726 <__fmt_a+0x1aa>
    1724:	42 c0       	rjmp	.+132    	; 0x17aa <__fmt_a+0x22e>
    1726:	9f ef       	ldi	r25, 0xFF	; 255
    1728:	69 1a       	sub	r6, r25
    172a:	79 0a       	sbc	r7, r25
    172c:	af 8e       	std	Y+31, r10	; 0x1f
    172e:	b9 82       	std	Y+1, r11	; 0x01
    1730:	08 a3       	std	Y+32, r16	; 0x20
    1732:	1a 83       	std	Y+2, r17	; 0x02
    1734:	e5 cf       	rjmp	.-54     	; 0x1700 <__fmt_a+0x184>
    1736:	20 e0       	ldi	r18, 0x00	; 0
    1738:	30 e0       	ldi	r19, 0x00	; 0
    173a:	40 e0       	ldi	r20, 0x00	; 0
    173c:	5f e3       	ldi	r21, 0x3F	; 63
    173e:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1740:	79 81       	ldd	r23, Y+1	; 0x01
    1742:	88 a1       	ldd	r24, Y+32	; 0x20
    1744:	9a 81       	ldd	r25, Y+2	; 0x02
    1746:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    174a:	20 e0       	ldi	r18, 0x00	; 0
    174c:	30 e0       	ldi	r19, 0x00	; 0
    174e:	a9 01       	movw	r20, r18
    1750:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    1754:	81 11       	cpse	r24, r1
    1756:	18 c0       	rjmp	.+48     	; 0x1788 <__fmt_a+0x20c>
    1758:	20 e0       	ldi	r18, 0x00	; 0
    175a:	30 e0       	ldi	r19, 0x00	; 0
    175c:	40 e8       	ldi	r20, 0x80	; 128
    175e:	5a e5       	ldi	r21, 0x5A	; 90
    1760:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1762:	79 81       	ldd	r23, Y+1	; 0x01
    1764:	88 a1       	ldd	r24, Y+32	; 0x20
    1766:	9a 81       	ldd	r25, Y+2	; 0x02
    1768:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    176c:	6f 8f       	std	Y+31, r22	; 0x1f
    176e:	79 83       	std	Y+1, r23	; 0x01
    1770:	88 a3       	std	Y+32, r24	; 0x20
    1772:	9a 83       	std	Y+2, r25	; 0x02
    1774:	20 e0       	ldi	r18, 0x00	; 0
    1776:	30 e0       	ldi	r19, 0x00	; 0
    1778:	40 e8       	ldi	r20, 0x80	; 128
    177a:	5a e5       	ldi	r21, 0x5A	; 90
    177c:	c7 01       	movw	r24, r14
    177e:	b6 01       	movw	r22, r12
    1780:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1784:	6b 01       	movw	r12, r22
    1786:	7c 01       	movw	r14, r24
    1788:	20 e0       	ldi	r18, 0x00	; 0
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	40 e0       	ldi	r20, 0x00	; 0
    178e:	5f e3       	ldi	r21, 0x3F	; 63
    1790:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1792:	79 81       	ldd	r23, Y+1	; 0x01
    1794:	88 a1       	ldd	r24, Y+32	; 0x20
    1796:	9a 81       	ldd	r25, Y+2	; 0x02
    1798:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    179c:	6f 8f       	std	Y+31, r22	; 0x1f
    179e:	79 83       	std	Y+1, r23	; 0x01
    17a0:	88 a3       	std	Y+32, r24	; 0x20
    17a2:	9a 83       	std	Y+2, r25	; 0x02
    17a4:	a1 e0       	ldi	r26, 0x01	; 1
    17a6:	6a 1a       	sub	r6, r26
    17a8:	71 08       	sbc	r7, r1
    17aa:	2f 8d       	ldd	r18, Y+31	; 0x1f
    17ac:	39 81       	ldd	r19, Y+1	; 0x01
    17ae:	48 a1       	ldd	r20, Y+32	; 0x20
    17b0:	5a 81       	ldd	r21, Y+2	; 0x02
    17b2:	c7 01       	movw	r24, r14
    17b4:	b6 01       	movw	r22, r12
    17b6:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    17ba:	87 fd       	sbrc	r24, 7
    17bc:	bc cf       	rjmp	.-136    	; 0x1736 <__fmt_a+0x1ba>
    17be:	04 c0       	rjmp	.+8      	; 0x17c8 <__fmt_a+0x24c>
    17c0:	e0 e8       	ldi	r30, 0x80	; 128
    17c2:	e8 a3       	std	Y+32, r30	; 0x20
    17c4:	ff e3       	ldi	r31, 0x3F	; 63
    17c6:	fa 83       	std	Y+2, r31	; 0x02
    17c8:	2a 89       	ldd	r18, Y+18	; 0x12
    17ca:	3b 89       	ldd	r19, Y+19	; 0x13
    17cc:	37 fd       	sbrc	r19, 7
    17ce:	02 c0       	rjmp	.+4      	; 0x17d4 <__fmt_a+0x258>
    17d0:	c9 01       	movw	r24, r18
    17d2:	02 c0       	rjmp	.+4      	; 0x17d8 <__fmt_a+0x25c>
    17d4:	88 e1       	ldi	r24, 0x18	; 24
    17d6:	90 e0       	ldi	r25, 0x00	; 0
    17d8:	ac 01       	movw	r20, r24
    17da:	4f 5f       	subi	r20, 0xFF	; 255
    17dc:	5f 4f       	sbci	r21, 0xFF	; 255
    17de:	5b 87       	std	Y+11, r21	; 0x0b
    17e0:	4a 87       	std	Y+10, r20	; 0x0a
    17e2:	8f 8c       	ldd	r8, Y+31	; 0x1f
    17e4:	99 80       	ldd	r9, Y+1	; 0x01
    17e6:	a8 a0       	ldd	r10, Y+32	; 0x20
    17e8:	ba 80       	ldd	r11, Y+2	; 0x02
    17ea:	16 01       	movw	r2, r12
    17ec:	87 01       	movw	r16, r14
    17ee:	1f 82       	std	Y+7, r1	; 0x07
    17f0:	1e 82       	std	Y+6, r1	; 0x06
    17f2:	94 01       	movw	r18, r8
    17f4:	a5 01       	movw	r20, r10
    17f6:	b1 01       	movw	r22, r2
    17f8:	c8 01       	movw	r24, r16
    17fa:	0e 94 4e 23 	call	0x469c	; 0x469c <__divsf3>
    17fe:	0e 94 c3 14 	call	0x2986	; 0x2986 <floorf>
    1802:	6c 8b       	std	Y+20, r22	; 0x14
    1804:	7d 8b       	std	Y+21, r23	; 0x15
    1806:	8e 8b       	std	Y+22, r24	; 0x16
    1808:	9f 8b       	std	Y+23, r25	; 0x17
    180a:	94 01       	movw	r18, r8
    180c:	a5 01       	movw	r20, r10
    180e:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1812:	9b 01       	movw	r18, r22
    1814:	ac 01       	movw	r20, r24
    1816:	b1 01       	movw	r22, r2
    1818:	c8 01       	movw	r24, r16
    181a:	0e 94 13 23 	call	0x4626	; 0x4626 <__subsf3>
    181e:	1b 01       	movw	r2, r22
    1820:	8c 01       	movw	r16, r24
    1822:	20 e0       	ldi	r18, 0x00	; 0
    1824:	30 e0       	ldi	r19, 0x00	; 0
    1826:	40 e8       	ldi	r20, 0x80	; 128
    1828:	5d e3       	ldi	r21, 0x3D	; 61
    182a:	b4 01       	movw	r22, r8
    182c:	c5 01       	movw	r24, r10
    182e:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1832:	4b 01       	movw	r8, r22
    1834:	5c 01       	movw	r10, r24
    1836:	8e 81       	ldd	r24, Y+6	; 0x06
    1838:	9f 81       	ldd	r25, Y+7	; 0x07
    183a:	01 96       	adiw	r24, 0x01	; 1
    183c:	9f 83       	std	Y+7, r25	; 0x07
    183e:	8e 83       	std	Y+6, r24	; 0x06
    1840:	ea 89       	ldd	r30, Y+18	; 0x12
    1842:	fb 89       	ldd	r31, Y+19	; 0x13
    1844:	f7 ff       	sbrs	r31, 7
    1846:	09 c0       	rjmp	.+18     	; 0x185a <__fmt_a+0x2de>
    1848:	20 e0       	ldi	r18, 0x00	; 0
    184a:	30 e0       	ldi	r19, 0x00	; 0
    184c:	a9 01       	movw	r20, r18
    184e:	b1 01       	movw	r22, r2
    1850:	c8 01       	movw	r24, r16
    1852:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    1856:	88 23       	and	r24, r24
    1858:	41 f0       	breq	.+16     	; 0x186a <__fmt_a+0x2ee>
    185a:	2a 85       	ldd	r18, Y+10	; 0x0a
    185c:	3b 85       	ldd	r19, Y+11	; 0x0b
    185e:	4e 81       	ldd	r20, Y+6	; 0x06
    1860:	5f 81       	ldd	r21, Y+7	; 0x07
    1862:	42 17       	cp	r20, r18
    1864:	53 07       	cpc	r21, r19
    1866:	2c f2       	brlt	.-118    	; 0x17f2 <__fmt_a+0x276>
    1868:	04 c0       	rjmp	.+8      	; 0x1872 <__fmt_a+0x2f6>
    186a:	8e 81       	ldd	r24, Y+6	; 0x06
    186c:	9f 81       	ldd	r25, Y+7	; 0x07
    186e:	9b 87       	std	Y+11, r25	; 0x0b
    1870:	8a 87       	std	Y+10, r24	; 0x0a
    1872:	20 e0       	ldi	r18, 0x00	; 0
    1874:	30 e0       	ldi	r19, 0x00	; 0
    1876:	40 e0       	ldi	r20, 0x00	; 0
    1878:	51 e4       	ldi	r21, 0x41	; 65
    187a:	b4 01       	movw	r22, r8
    187c:	c5 01       	movw	r24, r10
    187e:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1882:	4b 01       	movw	r8, r22
    1884:	5c 01       	movw	r10, r24
    1886:	9b 01       	movw	r18, r22
    1888:	ac 01       	movw	r20, r24
    188a:	b1 01       	movw	r22, r2
    188c:	c8 01       	movw	r24, r16
    188e:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    1892:	87 fd       	sbrc	r24, 7
    1894:	12 c0       	rjmp	.+36     	; 0x18ba <__fmt_a+0x33e>
    1896:	a5 01       	movw	r20, r10
    1898:	94 01       	movw	r18, r8
    189a:	b1 01       	movw	r22, r2
    189c:	c8 01       	movw	r24, r16
    189e:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    18a2:	81 11       	cpse	r24, r1
    18a4:	0d c0       	rjmp	.+26     	; 0x18c0 <__fmt_a+0x344>
    18a6:	6c 89       	ldd	r22, Y+20	; 0x14
    18a8:	7d 89       	ldd	r23, Y+21	; 0x15
    18aa:	8e 89       	ldd	r24, Y+22	; 0x16
    18ac:	9f 89       	ldd	r25, Y+23	; 0x17
    18ae:	0e 94 1a 23 	call	0x4634	; 0x4634 <__fixsfsi>
    18b2:	61 70       	andi	r22, 0x01	; 1
    18b4:	77 27       	eor	r23, r23
    18b6:	67 2b       	or	r22, r23
    18b8:	19 f4       	brne	.+6      	; 0x18c0 <__fmt_a+0x344>
    18ba:	81 2c       	mov	r8, r1
    18bc:	91 2c       	mov	r9, r1
    18be:	54 01       	movw	r10, r8
    18c0:	a5 01       	movw	r20, r10
    18c2:	94 01       	movw	r18, r8
    18c4:	c7 01       	movw	r24, r14
    18c6:	b6 01       	movw	r22, r12
    18c8:	0e 94 14 23 	call	0x4628	; 0x4628 <__addsf3>
    18cc:	6b 01       	movw	r12, r22
    18ce:	7c 01       	movw	r14, r24
    18d0:	dc 01       	movw	r26, r24
    18d2:	cb 01       	movw	r24, r22
    18d4:	bf 77       	andi	r27, 0x7F	; 127
    18d6:	00 97       	sbiw	r24, 0x00	; 0
    18d8:	a0 48       	sbci	r26, 0x80	; 128
    18da:	bf 47       	sbci	r27, 0x7F	; 127
    18dc:	09 f4       	brne	.+2      	; 0x18e0 <__fmt_a+0x364>
    18de:	a5 ce       	rjmp	.-694    	; 0x162a <__fmt_a+0xae>
    18e0:	2e 84       	ldd	r2, Y+14	; 0x0e
    18e2:	3f 84       	ldd	r3, Y+15	; 0x0f
    18e4:	f2 e0       	ldi	r31, 0x02	; 2
    18e6:	2f 1a       	sub	r2, r31
    18e8:	31 08       	sbc	r3, r1
    18ea:	2a 85       	ldd	r18, Y+10	; 0x0a
    18ec:	3b 85       	ldd	r19, Y+11	; 0x0b
    18ee:	31 95       	neg	r19
    18f0:	21 95       	neg	r18
    18f2:	31 09       	sbc	r19, r1
    18f4:	39 8b       	std	Y+17, r19	; 0x11
    18f6:	28 8b       	std	Y+16, r18	; 0x10
    18f8:	0b 81       	ldd	r16, Y+3	; 0x03
    18fa:	1c 81       	ldd	r17, Y+4	; 0x04
    18fc:	a1 2c       	mov	r10, r1
    18fe:	b1 2c       	mov	r11, r1
    1900:	1f 82       	std	Y+7, r1	; 0x07
    1902:	1e 82       	std	Y+6, r1	; 0x06
    1904:	81 2c       	mov	r8, r1
    1906:	91 2c       	mov	r9, r1
    1908:	48 8d       	ldd	r20, Y+24	; 0x18
    190a:	59 8d       	ldd	r21, Y+25	; 0x19
    190c:	45 50       	subi	r20, 0x05	; 5
    190e:	51 09       	sbc	r21, r1
    1910:	5d 8b       	std	Y+21, r21	; 0x15
    1912:	4c 8b       	std	Y+20, r20	; 0x14
    1914:	ec 89       	ldd	r30, Y+20	; 0x14
    1916:	fd 89       	ldd	r31, Y+21	; 0x15
    1918:	0e 17       	cp	r16, r30
    191a:	1f 07       	cpc	r17, r31
    191c:	0c f0       	brlt	.+2      	; 0x1920 <__fmt_a+0x3a4>
    191e:	91 c0       	rjmp	.+290    	; 0x1a42 <__fmt_a+0x4c6>
    1920:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1922:	39 81       	ldd	r19, Y+1	; 0x01
    1924:	48 a1       	ldd	r20, Y+32	; 0x20
    1926:	5a 81       	ldd	r21, Y+2	; 0x02
    1928:	c7 01       	movw	r24, r14
    192a:	b6 01       	movw	r22, r12
    192c:	0e 94 4e 23 	call	0x469c	; 0x469c <__divsf3>
    1930:	0e 94 c3 14 	call	0x2986	; 0x2986 <floorf>
    1934:	6a 87       	std	Y+10, r22	; 0x0a
    1936:	7b 87       	std	Y+11, r23	; 0x0b
    1938:	8c 87       	std	Y+12, r24	; 0x0c
    193a:	9d 87       	std	Y+13, r25	; 0x0d
    193c:	0e 94 1a 23 	call	0x4634	; 0x4634 <__fixsfsi>
    1940:	ab 01       	movw	r20, r22
    1942:	61 15       	cp	r22, r1
    1944:	71 05       	cpc	r23, r1
    1946:	39 f4       	brne	.+14     	; 0x1956 <__fmt_a+0x3da>
    1948:	81 14       	cp	r8, r1
    194a:	91 04       	cpc	r9, r1
    194c:	21 f0       	breq	.+8      	; 0x1956 <__fmt_a+0x3da>
    194e:	5f ef       	ldi	r21, 0xFF	; 255
    1950:	a5 1a       	sub	r10, r21
    1952:	b5 0a       	sbc	r11, r21
    1954:	4d c0       	rjmp	.+154    	; 0x19f0 <__fmt_a+0x474>
    1956:	ee 81       	ldd	r30, Y+6	; 0x06
    1958:	ff 81       	ldd	r31, Y+7	; 0x07
    195a:	ef 2b       	or	r30, r31
    195c:	89 f4       	brne	.+34     	; 0x1980 <__fmt_a+0x404>
    195e:	81 14       	cp	r8, r1
    1960:	91 04       	cpc	r9, r1
    1962:	71 f0       	breq	.+28     	; 0x1980 <__fmt_a+0x404>
    1964:	f2 01       	movw	r30, r4
    1966:	e0 0f       	add	r30, r16
    1968:	f1 1f       	adc	r31, r17
    196a:	2e e2       	ldi	r18, 0x2E	; 46
    196c:	20 83       	st	Z, r18
    196e:	31 e0       	ldi	r19, 0x01	; 1
    1970:	23 1a       	sub	r2, r19
    1972:	31 08       	sbc	r3, r1
    1974:	0f 5f       	subi	r16, 0xFF	; 255
    1976:	1f 4f       	sbci	r17, 0xFF	; 255
    1978:	e1 e0       	ldi	r30, 0x01	; 1
    197a:	f0 e0       	ldi	r31, 0x00	; 0
    197c:	ff 83       	std	Y+7, r31	; 0x07
    197e:	ee 83       	std	Y+6, r30	; 0x06
    1980:	f2 01       	movw	r30, r4
    1982:	e0 0f       	add	r30, r16
    1984:	f1 1f       	adc	r31, r17
    1986:	95 01       	movw	r18, r10
    1988:	21 15       	cp	r18, r1
    198a:	31 05       	cpc	r19, r1
    198c:	29 f0       	breq	.+10     	; 0x1998 <__fmt_a+0x41c>
    198e:	a0 e3       	ldi	r26, 0x30	; 48
    1990:	a1 93       	st	Z+, r26
    1992:	21 50       	subi	r18, 0x01	; 1
    1994:	31 09       	sbc	r19, r1
    1996:	f8 cf       	rjmp	.-16     	; 0x1988 <__fmt_a+0x40c>
    1998:	f8 01       	movw	r30, r16
    199a:	ea 0d       	add	r30, r10
    199c:	fb 1d       	adc	r31, r11
    199e:	ff 87       	std	Y+15, r31	; 0x0f
    19a0:	ee 87       	std	Y+14, r30	; 0x0e
    19a2:	2a 18       	sub	r2, r10
    19a4:	3b 08       	sbc	r3, r11
    19a6:	4a 30       	cpi	r20, 0x0A	; 10
    19a8:	51 05       	cpc	r21, r1
    19aa:	1c f4       	brge	.+6      	; 0x19b2 <__fmt_a+0x436>
    19ac:	60 5d       	subi	r22, 0xD0	; 208
    19ae:	7f 4f       	sbci	r23, 0xFF	; 255
    19b0:	02 c0       	rjmp	.+4      	; 0x19b6 <__fmt_a+0x43a>
    19b2:	69 5a       	subi	r22, 0xA9	; 169
    19b4:	7f 4f       	sbci	r23, 0xFF	; 255
    19b6:	2a 8d       	ldd	r18, Y+26	; 0x1a
    19b8:	3b 8d       	ldd	r19, Y+27	; 0x1b
    19ba:	2a 31       	cpi	r18, 0x1A	; 26
    19bc:	31 05       	cpc	r19, r1
    19be:	50 f4       	brcc	.+20     	; 0x19d4 <__fmt_a+0x458>
    19c0:	cb 01       	movw	r24, r22
    19c2:	80 62       	ori	r24, 0x20	; 32
    19c4:	81 56       	subi	r24, 0x61	; 97
    19c6:	91 09       	sbc	r25, r1
    19c8:	4a 97       	sbiw	r24, 0x1a	; 26
    19ca:	20 f4       	brcc	.+8      	; 0x19d4 <__fmt_a+0x458>
    19cc:	cb 01       	movw	r24, r22
    19ce:	0e 94 df 22 	call	0x45be	; 0x45be <toupper>
    19d2:	bc 01       	movw	r22, r24
    19d4:	0e 85       	ldd	r16, Y+14	; 0x0e
    19d6:	1f 85       	ldd	r17, Y+15	; 0x0f
    19d8:	0f 5f       	subi	r16, 0xFF	; 255
    19da:	1f 4f       	sbci	r17, 0xFF	; 255
    19dc:	ee 85       	ldd	r30, Y+14	; 0x0e
    19de:	ff 85       	ldd	r31, Y+15	; 0x0f
    19e0:	e4 0d       	add	r30, r4
    19e2:	f5 1d       	adc	r31, r5
    19e4:	60 83       	st	Z, r22
    19e6:	31 e0       	ldi	r19, 0x01	; 1
    19e8:	23 1a       	sub	r2, r19
    19ea:	31 08       	sbc	r3, r1
    19ec:	a1 2c       	mov	r10, r1
    19ee:	b1 2c       	mov	r11, r1
    19f0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    19f2:	39 81       	ldd	r19, Y+1	; 0x01
    19f4:	48 a1       	ldd	r20, Y+32	; 0x20
    19f6:	5a 81       	ldd	r21, Y+2	; 0x02
    19f8:	6a 85       	ldd	r22, Y+10	; 0x0a
    19fa:	7b 85       	ldd	r23, Y+11	; 0x0b
    19fc:	8c 85       	ldd	r24, Y+12	; 0x0c
    19fe:	9d 85       	ldd	r25, Y+13	; 0x0d
    1a00:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1a04:	9b 01       	movw	r18, r22
    1a06:	ac 01       	movw	r20, r24
    1a08:	c7 01       	movw	r24, r14
    1a0a:	b6 01       	movw	r22, r12
    1a0c:	0e 94 13 23 	call	0x4626	; 0x4626 <__subsf3>
    1a10:	6b 01       	movw	r12, r22
    1a12:	7c 01       	movw	r14, r24
    1a14:	20 e0       	ldi	r18, 0x00	; 0
    1a16:	30 e0       	ldi	r19, 0x00	; 0
    1a18:	40 e8       	ldi	r20, 0x80	; 128
    1a1a:	5d e3       	ldi	r21, 0x3D	; 61
    1a1c:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1a1e:	79 81       	ldd	r23, Y+1	; 0x01
    1a20:	88 a1       	ldd	r24, Y+32	; 0x20
    1a22:	9a 81       	ldd	r25, Y+2	; 0x02
    1a24:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1a28:	6f 8f       	std	Y+31, r22	; 0x1f
    1a2a:	79 83       	std	Y+1, r23	; 0x01
    1a2c:	88 a3       	std	Y+32, r24	; 0x20
    1a2e:	9a 83       	std	Y+2, r25	; 0x02
    1a30:	41 e0       	ldi	r20, 0x01	; 1
    1a32:	84 1a       	sub	r8, r20
    1a34:	91 08       	sbc	r9, r1
    1a36:	88 89       	ldd	r24, Y+16	; 0x10
    1a38:	99 89       	ldd	r25, Y+17	; 0x11
    1a3a:	88 15       	cp	r24, r8
    1a3c:	99 05       	cpc	r25, r9
    1a3e:	09 f0       	breq	.+2      	; 0x1a42 <__fmt_a+0x4c6>
    1a40:	69 cf       	rjmp	.-302    	; 0x1914 <__fmt_a+0x398>
    1a42:	2e 81       	ldd	r18, Y+6	; 0x06
    1a44:	3f 81       	ldd	r19, Y+7	; 0x07
    1a46:	23 2b       	or	r18, r19
    1a48:	51 f5       	brne	.+84     	; 0x1a9e <__fmt_a+0x522>
    1a4a:	f2 01       	movw	r30, r4
    1a4c:	e0 0f       	add	r30, r16
    1a4e:	f1 1f       	adc	r31, r17
    1a50:	a1 14       	cp	r10, r1
    1a52:	b1 04       	cpc	r11, r1
    1a54:	e9 f0       	breq	.+58     	; 0x1a90 <__fmt_a+0x514>
    1a56:	4a 89       	ldd	r20, Y+18	; 0x12
    1a58:	5b 89       	ldd	r21, Y+19	; 0x13
    1a5a:	14 16       	cp	r1, r20
    1a5c:	15 06       	cpc	r1, r21
    1a5e:	c4 f4       	brge	.+48     	; 0x1a90 <__fmt_a+0x514>
    1a60:	5d 81       	ldd	r21, Y+5	; 0x05
    1a62:	50 fd       	sbrc	r21, 0
    1a64:	15 c0       	rjmp	.+42     	; 0x1a90 <__fmt_a+0x514>
    1a66:	8e e2       	ldi	r24, 0x2E	; 46
    1a68:	80 83       	st	Z, r24
    1a6a:	f8 01       	movw	r30, r16
    1a6c:	31 96       	adiw	r30, 0x01	; 1
    1a6e:	e4 0d       	add	r30, r4
    1a70:	f5 1d       	adc	r31, r5
    1a72:	c5 01       	movw	r24, r10
    1a74:	20 e3       	ldi	r18, 0x30	; 48
    1a76:	21 93       	st	Z+, r18
    1a78:	01 97       	sbiw	r24, 0x01	; 1
    1a7a:	e9 f7       	brne	.-6      	; 0x1a76 <__fmt_a+0x4fa>
    1a7c:	0a 0d       	add	r16, r10
    1a7e:	1b 1d       	adc	r17, r11
    1a80:	0f 5f       	subi	r16, 0xFF	; 255
    1a82:	1f 4f       	sbci	r17, 0xFF	; 255
    1a84:	c5 01       	movw	r24, r10
    1a86:	80 95       	com	r24
    1a88:	90 95       	com	r25
    1a8a:	28 0e       	add	r2, r24
    1a8c:	39 1e       	adc	r3, r25
    1a8e:	07 c0       	rjmp	.+14     	; 0x1a9e <__fmt_a+0x522>
    1a90:	8d 81       	ldd	r24, Y+5	; 0x05
    1a92:	84 ff       	sbrs	r24, 4
    1a94:	04 c0       	rjmp	.+8      	; 0x1a9e <__fmt_a+0x522>
    1a96:	8e e2       	ldi	r24, 0x2E	; 46
    1a98:	80 83       	st	Z, r24
    1a9a:	0f 5f       	subi	r16, 0xFF	; 255
    1a9c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a9e:	f2 01       	movw	r30, r4
    1aa0:	e0 0f       	add	r30, r16
    1aa2:	f1 1f       	adc	r31, r17
    1aa4:	ff 83       	std	Y+7, r31	; 0x07
    1aa6:	ee 83       	std	Y+6, r30	; 0x06
    1aa8:	10 82       	st	Z, r1
    1aaa:	e8 8d       	ldd	r30, Y+24	; 0x18
    1aac:	f9 8d       	ldd	r31, Y+25	; 0x19
    1aae:	e4 0d       	add	r30, r4
    1ab0:	f5 1d       	adc	r31, r5
    1ab2:	31 97       	sbiw	r30, 0x01	; 1
    1ab4:	10 82       	st	Z, r1
    1ab6:	77 fe       	sbrs	r7, 7
    1ab8:	07 c0       	rjmp	.+14     	; 0x1ac8 <__fmt_a+0x54c>
    1aba:	71 94       	neg	r7
    1abc:	61 94       	neg	r6
    1abe:	71 08       	sbc	r7, r1
    1ac0:	ee 24       	eor	r14, r14
    1ac2:	e3 94       	inc	r14
    1ac4:	f1 2c       	mov	r15, r1
    1ac6:	02 c0       	rjmp	.+4      	; 0x1acc <__fmt_a+0x550>
    1ac8:	e1 2c       	mov	r14, r1
    1aca:	f1 2c       	mov	r15, r1
    1acc:	e8 8d       	ldd	r30, Y+24	; 0x18
    1ace:	f9 8d       	ldd	r31, Y+25	; 0x19
    1ad0:	31 97       	sbiw	r30, 0x01	; 1
    1ad2:	e4 0d       	add	r30, r4
    1ad4:	f5 1d       	adc	r31, r5
    1ad6:	21 e0       	ldi	r18, 0x01	; 1
    1ad8:	30 e0       	ldi	r19, 0x00	; 0
    1ada:	8a e0       	ldi	r24, 0x0A	; 10
    1adc:	c8 2e       	mov	r12, r24
    1ade:	d1 2c       	mov	r13, r1
    1ae0:	cf 01       	movw	r24, r30
    1ae2:	84 19       	sub	r24, r4
    1ae4:	95 09       	sbc	r25, r5
    1ae6:	61 14       	cp	r6, r1
    1ae8:	71 04       	cpc	r7, r1
    1aea:	69 f0       	breq	.+26     	; 0x1b06 <__fmt_a+0x58a>
    1aec:	c3 01       	movw	r24, r6
    1aee:	b6 01       	movw	r22, r12
    1af0:	0e 94 a4 21 	call	0x4348	; 0x4348 <__divmodhi4>
    1af4:	80 5d       	subi	r24, 0xD0	; 208
    1af6:	82 93       	st	-Z, r24
    1af8:	3b 01       	movw	r6, r22
    1afa:	21 50       	subi	r18, 0x01	; 1
    1afc:	31 09       	sbc	r19, r1
    1afe:	41 e0       	ldi	r20, 0x01	; 1
    1b00:	24 1a       	sub	r2, r20
    1b02:	31 08       	sbc	r3, r1
    1b04:	ed cf       	rjmp	.-38     	; 0x1ae0 <__fmt_a+0x564>
    1b06:	21 30       	cpi	r18, 0x01	; 1
    1b08:	31 05       	cpc	r19, r1
    1b0a:	81 f3       	breq	.-32     	; 0x1aec <__fmt_a+0x570>
    1b0c:	fc 01       	movw	r30, r24
    1b0e:	31 97       	sbiw	r30, 0x01	; 1
    1b10:	e4 0d       	add	r30, r4
    1b12:	f5 1d       	adc	r31, r5
    1b14:	ef 28       	or	r14, r15
    1b16:	11 f4       	brne	.+4      	; 0x1b1c <__fmt_a+0x5a0>
    1b18:	2b e2       	ldi	r18, 0x2B	; 43
    1b1a:	01 c0       	rjmp	.+2      	; 0x1b1e <__fmt_a+0x5a2>
    1b1c:	2d e2       	ldi	r18, 0x2D	; 45
    1b1e:	20 83       	st	Z, r18
    1b20:	02 97       	sbiw	r24, 0x02	; 2
    1b22:	f2 01       	movw	r30, r4
    1b24:	e8 0f       	add	r30, r24
    1b26:	f9 1f       	adc	r31, r25
    1b28:	2a 8d       	ldd	r18, Y+26	; 0x1a
    1b2a:	3b 8d       	ldd	r19, Y+27	; 0x1b
    1b2c:	2a 31       	cpi	r18, 0x1A	; 26
    1b2e:	31 05       	cpc	r19, r1
    1b30:	10 f0       	brcs	.+4      	; 0x1b36 <__fmt_a+0x5ba>
    1b32:	20 e7       	ldi	r18, 0x70	; 112
    1b34:	01 c0       	rjmp	.+2      	; 0x1b38 <__fmt_a+0x5bc>
    1b36:	20 e5       	ldi	r18, 0x50	; 80
    1b38:	20 83       	st	Z, r18
    1b3a:	08 17       	cp	r16, r24
    1b3c:	19 07       	cpc	r17, r25
    1b3e:	34 f4       	brge	.+12     	; 0x1b4c <__fmt_a+0x5d0>
    1b40:	af 01       	movw	r20, r30
    1b42:	60 e8       	ldi	r22, 0x80	; 128
    1b44:	8e 81       	ldd	r24, Y+6	; 0x06
    1b46:	9f 81       	ldd	r25, Y+7	; 0x07
    1b48:	0e 94 59 22 	call	0x44b2	; 0x44b2 <strcpy>
    1b4c:	32 01       	movw	r6, r4
    1b4e:	30 e8       	ldi	r19, 0x80	; 128
    1b50:	83 2e       	mov	r8, r19
    1b52:	4d 81       	ldd	r20, Y+5	; 0x05
    1b54:	41 ff       	sbrs	r20, 1
    1b56:	28 c0       	rjmp	.+80     	; 0x1ba8 <__fmt_a+0x62c>
    1b58:	40 fd       	sbrc	r20, 0
    1b5a:	26 c0       	rjmp	.+76     	; 0x1ba8 <__fmt_a+0x62c>
    1b5c:	52 e0       	ldi	r21, 0x02	; 2
    1b5e:	25 1a       	sub	r2, r21
    1b60:	31 08       	sbc	r3, r1
    1b62:	12 14       	cp	r1, r2
    1b64:	13 04       	cpc	r1, r3
    1b66:	04 f5       	brge	.+64     	; 0x1ba8 <__fmt_a+0x62c>
    1b68:	88 2d       	mov	r24, r8
    1b6a:	b3 01       	movw	r22, r6
    1b6c:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    1b70:	84 0d       	add	r24, r4
    1b72:	95 1d       	adc	r25, r5
    1b74:	9c 01       	movw	r18, r24
    1b76:	24 19       	sub	r18, r4
    1b78:	35 09       	sbc	r19, r5
    1b7a:	4b 81       	ldd	r20, Y+3	; 0x03
    1b7c:	5c 81       	ldd	r21, Y+4	; 0x04
    1b7e:	24 17       	cp	r18, r20
    1b80:	35 07       	cpc	r19, r21
    1b82:	3c f0       	brlt	.+14     	; 0x1b92 <__fmt_a+0x616>
    1b84:	fc 01       	movw	r30, r24
    1b86:	20 81       	ld	r18, Z
    1b88:	e2 0d       	add	r30, r2
    1b8a:	f3 1d       	adc	r31, r3
    1b8c:	20 83       	st	Z, r18
    1b8e:	01 97       	sbiw	r24, 0x01	; 1
    1b90:	f1 cf       	rjmp	.-30     	; 0x1b74 <__fmt_a+0x5f8>
    1b92:	a1 01       	movw	r20, r2
    1b94:	60 e3       	ldi	r22, 0x30	; 48
    1b96:	70 e0       	ldi	r23, 0x00	; 0
    1b98:	8b 81       	ldd	r24, Y+3	; 0x03
    1b9a:	9c 81       	ldd	r25, Y+4	; 0x04
    1b9c:	84 0d       	add	r24, r4
    1b9e:	95 1d       	adc	r25, r5
    1ba0:	0e 94 d6 22 	call	0x45ac	; 0x45ac <memset>
    1ba4:	19 86       	std	Y+9, r1	; 0x09
    1ba6:	18 86       	std	Y+8, r1	; 0x08
    1ba8:	88 2d       	mov	r24, r8
    1baa:	b3 01       	movw	r22, r6
    1bac:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    1bb0:	ed 80       	ldd	r14, Y+5	; 0x05
    1bb2:	fe 8c       	ldd	r15, Y+30	; 0x1e
    1bb4:	08 85       	ldd	r16, Y+8	; 0x08
    1bb6:	19 85       	ldd	r17, Y+9	; 0x09
    1bb8:	9c 01       	movw	r18, r24
    1bba:	68 2d       	mov	r22, r8
    1bbc:	a3 01       	movw	r20, r6
    1bbe:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1bc0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1bc2:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <__pad>
    1bc6:	a0 96       	adiw	r28, 0x20	; 32
    1bc8:	e2 e1       	ldi	r30, 0x12	; 18
    1bca:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>
    1bce:	5d 81       	ldd	r21, Y+5	; 0x05
    1bd0:	53 ff       	sbrs	r21, 3
    1bd2:	15 cd       	rjmp	.-1494   	; 0x15fe <__fmt_a+0x82>
    1bd4:	80 e2       	ldi	r24, 0x20	; 32
    1bd6:	06 cd       	rjmp	.-1524   	; 0x15e4 <__fmt_a+0x68>

Disassembly of section .text.strcpy:

000044b2 <strcpy>:
    44b2:	9a 01       	movw	r18, r20
    44b4:	46 2f       	mov	r20, r22
    44b6:	dc 01       	movw	r26, r24
    44b8:	f9 01       	movw	r30, r18
    44ba:	54 2f       	mov	r21, r20
    44bc:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    44c0:	6d 93       	st	X+, r22
    44c2:	2f 5f       	subi	r18, 0xFF	; 255
    44c4:	3f 4f       	sbci	r19, 0xFF	; 255
    44c6:	4f 4f       	sbci	r20, 0xFF	; 255
    44c8:	61 11       	cpse	r22, r1
    44ca:	f6 cf       	rjmp	.-20     	; 0x44b8 <strcpy+0x6>
    44cc:	08 95       	ret

Disassembly of section .text.libgcc.div:

00004348 <__divmodhi4>:
    4348:	97 fb       	bst	r25, 7
    434a:	07 2e       	mov	r0, r23
    434c:	16 f4       	brtc	.+4      	; 0x4352 <__divmodhi4+0xa>
    434e:	00 94       	com	r0
    4350:	07 d0       	rcall	.+14     	; 0x4360 <__divmodhi4_neg1>
    4352:	77 fd       	sbrc	r23, 7
    4354:	09 d0       	rcall	.+18     	; 0x4368 <__divmodhi4_neg2>
    4356:	0e 94 b8 21 	call	0x4370	; 0x4370 <__udivmodhi4>
    435a:	07 fc       	sbrc	r0, 7
    435c:	05 d0       	rcall	.+10     	; 0x4368 <__divmodhi4_neg2>
    435e:	3e f4       	brtc	.+14     	; 0x436e <__divmodhi4_exit>

00004360 <__divmodhi4_neg1>:
    4360:	90 95       	com	r25
    4362:	81 95       	neg	r24
    4364:	9f 4f       	sbci	r25, 0xFF	; 255
    4366:	08 95       	ret

00004368 <__divmodhi4_neg2>:
    4368:	70 95       	com	r23
    436a:	61 95       	neg	r22
    436c:	7f 4f       	sbci	r23, 0xFF	; 255

0000436e <__divmodhi4_exit>:
    436e:	08 95       	ret

Disassembly of section .text.libgcc.div:

000044ce <__umoddi3>:
    44ce:	68 94       	set
    44d0:	01 c0       	rjmp	.+2      	; 0x44d4 <__udivdi3_umoddi3>

000044d2 <__udivdi3>:
    44d2:	e8 94       	clt

000044d4 <__udivdi3_umoddi3>:
    44d4:	8f 92       	push	r8
    44d6:	9f 92       	push	r9
    44d8:	cf 93       	push	r28
    44da:	df 93       	push	r29
    44dc:	0e 94 17 1c 	call	0x382e	; 0x382e <__udivmod64>
    44e0:	df 91       	pop	r29
    44e2:	cf 91       	pop	r28
    44e4:	9f 90       	pop	r9
    44e6:	8f 90       	pop	r8
    44e8:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000382e <__udivmod64>:
    382e:	88 24       	eor	r8, r8
    3830:	99 24       	eor	r9, r9
    3832:	f4 01       	movw	r30, r8
    3834:	e4 01       	movw	r28, r8
    3836:	b0 e4       	ldi	r27, 0x40	; 64
    3838:	9f 93       	push	r25
    383a:	aa 27       	eor	r26, r26
    383c:	9a 15       	cp	r25, r10
    383e:	8b 04       	cpc	r8, r11
    3840:	9c 04       	cpc	r9, r12
    3842:	ed 05       	cpc	r30, r13
    3844:	fe 05       	cpc	r31, r14
    3846:	cf 05       	cpc	r28, r15
    3848:	d0 07       	cpc	r29, r16
    384a:	a1 07       	cpc	r26, r17
    384c:	98 f4       	brcc	.+38     	; 0x3874 <__udivmod64+0x46>
    384e:	ad 2f       	mov	r26, r29
    3850:	dc 2f       	mov	r29, r28
    3852:	cf 2f       	mov	r28, r31
    3854:	fe 2f       	mov	r31, r30
    3856:	e9 2d       	mov	r30, r9
    3858:	98 2c       	mov	r9, r8
    385a:	89 2e       	mov	r8, r25
    385c:	98 2f       	mov	r25, r24
    385e:	87 2f       	mov	r24, r23
    3860:	76 2f       	mov	r23, r22
    3862:	65 2f       	mov	r22, r21
    3864:	54 2f       	mov	r21, r20
    3866:	43 2f       	mov	r20, r19
    3868:	32 2f       	mov	r19, r18
    386a:	22 27       	eor	r18, r18
    386c:	b8 50       	subi	r27, 0x08	; 8
    386e:	31 f7       	brne	.-52     	; 0x383c <__udivmod64+0xe>
    3870:	bf 91       	pop	r27
    3872:	27 c0       	rjmp	.+78     	; 0x38c2 <__udivmod64+0x94>
    3874:	1b 2e       	mov	r1, r27
    3876:	bf 91       	pop	r27
    3878:	bb 27       	eor	r27, r27
    387a:	22 0f       	add	r18, r18
    387c:	33 1f       	adc	r19, r19
    387e:	44 1f       	adc	r20, r20
    3880:	55 1f       	adc	r21, r21
    3882:	66 1f       	adc	r22, r22
    3884:	77 1f       	adc	r23, r23
    3886:	88 1f       	adc	r24, r24
    3888:	99 1f       	adc	r25, r25
    388a:	88 1c       	adc	r8, r8
    388c:	99 1c       	adc	r9, r9
    388e:	ee 1f       	adc	r30, r30
    3890:	ff 1f       	adc	r31, r31
    3892:	cc 1f       	adc	r28, r28
    3894:	dd 1f       	adc	r29, r29
    3896:	aa 1f       	adc	r26, r26
    3898:	bb 1f       	adc	r27, r27
    389a:	8a 14       	cp	r8, r10
    389c:	9b 04       	cpc	r9, r11
    389e:	ec 05       	cpc	r30, r12
    38a0:	fd 05       	cpc	r31, r13
    38a2:	ce 05       	cpc	r28, r14
    38a4:	df 05       	cpc	r29, r15
    38a6:	a0 07       	cpc	r26, r16
    38a8:	b1 07       	cpc	r27, r17
    38aa:	48 f0       	brcs	.+18     	; 0x38be <__udivmod64+0x90>
    38ac:	8a 18       	sub	r8, r10
    38ae:	9b 08       	sbc	r9, r11
    38b0:	ec 09       	sbc	r30, r12
    38b2:	fd 09       	sbc	r31, r13
    38b4:	ce 09       	sbc	r28, r14
    38b6:	df 09       	sbc	r29, r15
    38b8:	a0 0b       	sbc	r26, r16
    38ba:	b1 0b       	sbc	r27, r17
    38bc:	21 60       	ori	r18, 0x01	; 1
    38be:	1a 94       	dec	r1
    38c0:	e1 f6       	brne	.-72     	; 0x387a <__udivmod64+0x4c>
    38c2:	2e f4       	brtc	.+10     	; 0x38ce <__udivmod64+0xa0>
    38c4:	94 01       	movw	r18, r8
    38c6:	af 01       	movw	r20, r30
    38c8:	be 01       	movw	r22, r28
    38ca:	cd 01       	movw	r24, r26
    38cc:	00 0c       	add	r0, r0
    38ce:	08 95       	ret

Disassembly of section .text.libgcc:

00004474 <__negdi2>:
    4474:	60 95       	com	r22
    4476:	70 95       	com	r23
    4478:	80 95       	com	r24
    447a:	90 95       	com	r25
    447c:	30 95       	com	r19
    447e:	40 95       	com	r20
    4480:	50 95       	com	r21
    4482:	21 95       	neg	r18
    4484:	3f 4f       	sbci	r19, 0xFF	; 255
    4486:	4f 4f       	sbci	r20, 0xFF	; 255
    4488:	5f 4f       	sbci	r21, 0xFF	; 255
    448a:	6f 4f       	sbci	r22, 0xFF	; 255
    448c:	7f 4f       	sbci	r23, 0xFF	; 255
    448e:	8f 4f       	sbci	r24, 0xFF	; 255
    4490:	9f 4f       	sbci	r25, 0xFF	; 255
    4492:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

000041e0 <__prologue_saves__>:
    41e0:	2f 92       	push	r2
    41e2:	3f 92       	push	r3
    41e4:	4f 92       	push	r4
    41e6:	5f 92       	push	r5
    41e8:	6f 92       	push	r6
    41ea:	7f 92       	push	r7
    41ec:	8f 92       	push	r8
    41ee:	9f 92       	push	r9
    41f0:	af 92       	push	r10
    41f2:	bf 92       	push	r11
    41f4:	cf 92       	push	r12
    41f6:	df 92       	push	r13
    41f8:	ef 92       	push	r14
    41fa:	ff 92       	push	r15
    41fc:	0f 93       	push	r16
    41fe:	1f 93       	push	r17
    4200:	cf 93       	push	r28
    4202:	df 93       	push	r29
    4204:	cd b7       	in	r28, 0x3d	; 61
    4206:	de b7       	in	r29, 0x3e	; 62
    4208:	ca 1b       	sub	r28, r26
    420a:	db 0b       	sbc	r29, r27
    420c:	0f b6       	in	r0, 0x3f	; 63
    420e:	f8 94       	cli
    4210:	de bf       	out	0x3e, r29	; 62
    4212:	0f be       	out	0x3f, r0	; 63
    4214:	cd bf       	out	0x3d, r28	; 61
    4216:	19 94       	eijmp

Disassembly of section .text.libgcc.prologue:

0000424e <__epilogue_restores__>:
    424e:	2a 88       	ldd	r2, Y+18	; 0x12
    4250:	39 88       	ldd	r3, Y+17	; 0x11
    4252:	48 88       	ldd	r4, Y+16	; 0x10
    4254:	5f 84       	ldd	r5, Y+15	; 0x0f
    4256:	6e 84       	ldd	r6, Y+14	; 0x0e
    4258:	7d 84       	ldd	r7, Y+13	; 0x0d
    425a:	8c 84       	ldd	r8, Y+12	; 0x0c
    425c:	9b 84       	ldd	r9, Y+11	; 0x0b
    425e:	aa 84       	ldd	r10, Y+10	; 0x0a
    4260:	b9 84       	ldd	r11, Y+9	; 0x09
    4262:	c8 84       	ldd	r12, Y+8	; 0x08
    4264:	df 80       	ldd	r13, Y+7	; 0x07
    4266:	ee 80       	ldd	r14, Y+6	; 0x06
    4268:	fd 80       	ldd	r15, Y+5	; 0x05
    426a:	0c 81       	ldd	r16, Y+4	; 0x04
    426c:	1b 81       	ldd	r17, Y+3	; 0x03
    426e:	aa 81       	ldd	r26, Y+2	; 0x02
    4270:	b9 81       	ldd	r27, Y+1	; 0x01
    4272:	ce 0f       	add	r28, r30
    4274:	d1 1d       	adc	r29, r1
    4276:	0f b6       	in	r0, 0x3f	; 63
    4278:	f8 94       	cli
    427a:	de bf       	out	0x3e, r29	; 62
    427c:	0f be       	out	0x3f, r0	; 63
    427e:	cd bf       	out	0x3d, r28	; 61
    4280:	ed 01       	movw	r28, r26
    4282:	08 95       	ret

Disassembly of section .text.libgcc:

000044ea <__movmemx_qi>:
    44ea:	99 27       	eor	r25, r25

000044ec <__movmemx_hi>:
    44ec:	77 fd       	sbrc	r23, 7
    44ee:	06 c0       	rjmp	.+12     	; 0x44fc <__movmemx_hi+0x10>
    44f0:	7b bf       	out	0x3b, r23	; 59
    44f2:	07 90       	elpm	r0, Z+
    44f4:	0d 92       	st	X+, r0
    44f6:	01 97       	sbiw	r24, 0x01	; 1
    44f8:	e1 f7       	brne	.-8      	; 0x44f2 <__movmemx_hi+0x6>
    44fa:	08 95       	ret
    44fc:	01 90       	ld	r0, Z+
    44fe:	0d 92       	st	X+, r0
    4500:	01 97       	sbiw	r24, 0x01	; 1
    4502:	e1 f7       	brne	.-8      	; 0x44fc <__movmemx_hi+0x10>
    4504:	08 95       	ret

Disassembly of section .text.libgcc.builtins:

0000416c <__ashrdi3>:
    416c:	97 fb       	bst	r25, 7
    416e:	10 f8       	bld	r1, 0

00004170 <__lshrdi3>:
    4170:	16 94       	lsr	r1
    4172:	00 08       	sbc	r0, r0
    4174:	0f 93       	push	r16
    4176:	08 30       	cpi	r16, 0x08	; 8
    4178:	98 f0       	brcs	.+38     	; 0x41a0 <__lshrdi3+0x30>
    417a:	08 50       	subi	r16, 0x08	; 8
    417c:	23 2f       	mov	r18, r19
    417e:	34 2f       	mov	r19, r20
    4180:	45 2f       	mov	r20, r21
    4182:	56 2f       	mov	r21, r22
    4184:	67 2f       	mov	r22, r23
    4186:	78 2f       	mov	r23, r24
    4188:	89 2f       	mov	r24, r25
    418a:	90 2d       	mov	r25, r0
    418c:	f4 cf       	rjmp	.-24     	; 0x4176 <__lshrdi3+0x6>
    418e:	05 94       	asr	r0
    4190:	97 95       	ror	r25
    4192:	87 95       	ror	r24
    4194:	77 95       	ror	r23
    4196:	67 95       	ror	r22
    4198:	57 95       	ror	r21
    419a:	47 95       	ror	r20
    419c:	37 95       	ror	r19
    419e:	27 95       	ror	r18
    41a0:	0a 95       	dec	r16
    41a2:	aa f7       	brpl	.-22     	; 0x418e <__lshrdi3+0x1e>
    41a4:	0f 91       	pop	r16
    41a6:	08 95       	ret

Disassembly of section .text.libgcc:

00004550 <__cmpdi2_s8>:
    4550:	00 24       	eor	r0, r0
    4552:	a7 fd       	sbrc	r26, 7
    4554:	00 94       	com	r0
    4556:	2a 17       	cp	r18, r26
    4558:	30 05       	cpc	r19, r0
    455a:	40 05       	cpc	r20, r0
    455c:	50 05       	cpc	r21, r0
    455e:	60 05       	cpc	r22, r0
    4560:	70 05       	cpc	r23, r0
    4562:	80 05       	cpc	r24, r0
    4564:	90 05       	cpc	r25, r0
    4566:	08 95       	ret

Disassembly of section .text.libgcc.div:

00004370 <__udivmodhi4>:
    4370:	aa 1b       	sub	r26, r26
    4372:	bb 1b       	sub	r27, r27
    4374:	51 e1       	ldi	r21, 0x11	; 17
    4376:	07 c0       	rjmp	.+14     	; 0x4386 <__udivmodhi4_ep>

00004378 <__udivmodhi4_loop>:
    4378:	aa 1f       	adc	r26, r26
    437a:	bb 1f       	adc	r27, r27
    437c:	a6 17       	cp	r26, r22
    437e:	b7 07       	cpc	r27, r23
    4380:	10 f0       	brcs	.+4      	; 0x4386 <__udivmodhi4_ep>
    4382:	a6 1b       	sub	r26, r22
    4384:	b7 0b       	sbc	r27, r23

00004386 <__udivmodhi4_ep>:
    4386:	88 1f       	adc	r24, r24
    4388:	99 1f       	adc	r25, r25
    438a:	5a 95       	dec	r21
    438c:	a9 f7       	brne	.-22     	; 0x4378 <__udivmodhi4_loop>
    438e:	80 95       	com	r24
    4390:	90 95       	com	r25
    4392:	bc 01       	movw	r22, r24
    4394:	cd 01       	movw	r24, r26
    4396:	08 95       	ret

Disassembly of section .text:

00004626 <__subsf3>:
    4626:	50 58       	subi	r21, 0x80	; 128

00004628 <__addsf3>:
    4628:	bb 27       	eor	r27, r27
    462a:	aa 27       	eor	r26, r26
    462c:	0e 94 92 17 	call	0x2f24	; 0x2f24 <__addsf3x>
    4630:	0c 94 29 22 	jmp	0x4452	; 0x4452 <__fp_round>

Disassembly of section .text:

00002f24 <__addsf3x>:
    2f24:	11 c0       	rjmp	.+34     	; 0x2f48 <__addsf3x+0x24>
    2f26:	0e 94 21 23 	call	0x4642	; 0x4642 <__fp_pscA>
    2f2a:	38 f0       	brcs	.+14     	; 0x2f3a <__addsf3x+0x16>
    2f2c:	0e 94 28 23 	call	0x4650	; 0x4650 <__fp_pscB>
    2f30:	20 f0       	brcs	.+8      	; 0x2f3a <__addsf3x+0x16>
    2f32:	39 f4       	brne	.+14     	; 0x2f42 <__addsf3x+0x1e>
    2f34:	9f 3f       	cpi	r25, 0xFF	; 255
    2f36:	19 f4       	brne	.+6      	; 0x2f3e <__addsf3x+0x1a>
    2f38:	26 f4       	brtc	.+8      	; 0x2f42 <__addsf3x+0x1e>
    2f3a:	0c 94 56 23 	jmp	0x46ac	; 0x46ac <__fp_nan>
    2f3e:	0e f4       	brtc	.+2      	; 0x2f42 <__addsf3x+0x1e>
    2f40:	e0 95       	com	r30
    2f42:	e7 fb       	bst	r30, 7
    2f44:	0c 94 36 23 	jmp	0x466c	; 0x466c <__fp_inf>
    2f48:	e9 2f       	mov	r30, r25
    2f4a:	0e 94 74 20 	call	0x40e8	; 0x40e8 <__fp_split3>
    2f4e:	58 f3       	brcs	.-42     	; 0x2f26 <__addsf3x+0x2>
    2f50:	ba 17       	cp	r27, r26
    2f52:	62 07       	cpc	r22, r18
    2f54:	73 07       	cpc	r23, r19
    2f56:	84 07       	cpc	r24, r20
    2f58:	95 07       	cpc	r25, r21
    2f5a:	20 f0       	brcs	.+8      	; 0x2f64 <__addsf3x+0x40>
    2f5c:	79 f4       	brne	.+30     	; 0x2f7c <__addsf3x+0x58>
    2f5e:	a6 f5       	brtc	.+104    	; 0x2fc8 <__addsf3x+0xa4>
    2f60:	0c 94 2f 23 	jmp	0x465e	; 0x465e <__fp_zero>
    2f64:	0e f4       	brtc	.+2      	; 0x2f68 <__addsf3x+0x44>
    2f66:	e0 95       	com	r30
    2f68:	0b 2e       	mov	r0, r27
    2f6a:	ba 2f       	mov	r27, r26
    2f6c:	a0 2d       	mov	r26, r0
    2f6e:	0b 01       	movw	r0, r22
    2f70:	b9 01       	movw	r22, r18
    2f72:	90 01       	movw	r18, r0
    2f74:	0c 01       	movw	r0, r24
    2f76:	ca 01       	movw	r24, r20
    2f78:	a0 01       	movw	r20, r0
    2f7a:	11 24       	eor	r1, r1
    2f7c:	ff 27       	eor	r31, r31
    2f7e:	59 1b       	sub	r21, r25
    2f80:	99 f0       	breq	.+38     	; 0x2fa8 <__addsf3x+0x84>
    2f82:	59 3f       	cpi	r21, 0xF9	; 249
    2f84:	50 f4       	brcc	.+20     	; 0x2f9a <__addsf3x+0x76>
    2f86:	50 3e       	cpi	r21, 0xE0	; 224
    2f88:	68 f1       	brcs	.+90     	; 0x2fe4 <__addsf3x+0xc0>
    2f8a:	1a 16       	cp	r1, r26
    2f8c:	f0 40       	sbci	r31, 0x00	; 0
    2f8e:	a2 2f       	mov	r26, r18
    2f90:	23 2f       	mov	r18, r19
    2f92:	34 2f       	mov	r19, r20
    2f94:	44 27       	eor	r20, r20
    2f96:	58 5f       	subi	r21, 0xF8	; 248
    2f98:	f3 cf       	rjmp	.-26     	; 0x2f80 <__addsf3x+0x5c>
    2f9a:	46 95       	lsr	r20
    2f9c:	37 95       	ror	r19
    2f9e:	27 95       	ror	r18
    2fa0:	a7 95       	ror	r26
    2fa2:	f0 40       	sbci	r31, 0x00	; 0
    2fa4:	53 95       	inc	r21
    2fa6:	c9 f7       	brne	.-14     	; 0x2f9a <__addsf3x+0x76>
    2fa8:	7e f4       	brtc	.+30     	; 0x2fc8 <__addsf3x+0xa4>
    2faa:	1f 16       	cp	r1, r31
    2fac:	ba 0b       	sbc	r27, r26
    2fae:	62 0b       	sbc	r22, r18
    2fb0:	73 0b       	sbc	r23, r19
    2fb2:	84 0b       	sbc	r24, r20
    2fb4:	ba f0       	brmi	.+46     	; 0x2fe4 <__addsf3x+0xc0>
    2fb6:	91 50       	subi	r25, 0x01	; 1
    2fb8:	a1 f0       	breq	.+40     	; 0x2fe2 <__addsf3x+0xbe>
    2fba:	ff 0f       	add	r31, r31
    2fbc:	bb 1f       	adc	r27, r27
    2fbe:	66 1f       	adc	r22, r22
    2fc0:	77 1f       	adc	r23, r23
    2fc2:	88 1f       	adc	r24, r24
    2fc4:	c2 f7       	brpl	.-16     	; 0x2fb6 <__addsf3x+0x92>
    2fc6:	0e c0       	rjmp	.+28     	; 0x2fe4 <__addsf3x+0xc0>
    2fc8:	ba 0f       	add	r27, r26
    2fca:	62 1f       	adc	r22, r18
    2fcc:	73 1f       	adc	r23, r19
    2fce:	84 1f       	adc	r24, r20
    2fd0:	48 f4       	brcc	.+18     	; 0x2fe4 <__addsf3x+0xc0>
    2fd2:	87 95       	ror	r24
    2fd4:	77 95       	ror	r23
    2fd6:	67 95       	ror	r22
    2fd8:	b7 95       	ror	r27
    2fda:	f7 95       	ror	r31
    2fdc:	9e 3f       	cpi	r25, 0xFE	; 254
    2fde:	08 f0       	brcs	.+2      	; 0x2fe2 <__addsf3x+0xbe>
    2fe0:	b0 cf       	rjmp	.-160    	; 0x2f42 <__addsf3x+0x1e>
    2fe2:	93 95       	inc	r25
    2fe4:	88 0f       	add	r24, r24
    2fe6:	08 f0       	brcs	.+2      	; 0x2fea <__addsf3x+0xc6>
    2fe8:	99 27       	eor	r25, r25
    2fea:	ee 0f       	add	r30, r30
    2fec:	97 95       	ror	r25
    2fee:	87 95       	ror	r24
    2ff0:	08 95       	ret

Disassembly of section .text:

00004678 <__cmpsf2>:
    4678:	0e 94 0c 20 	call	0x4018	; 0x4018 <__fp_cmp>
    467c:	08 f4       	brcc	.+2      	; 0x4680 <__cmpsf2+0x8>
    467e:	81 e0       	ldi	r24, 0x01	; 1
    4680:	08 95       	ret

Disassembly of section .text:

0000469c <__divsf3>:
    469c:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <__divsf3x>
    46a0:	0c 94 29 22 	jmp	0x4452	; 0x4452 <__fp_round>

Disassembly of section .text:

00002bc6 <__divsf3x>:
    2bc6:	10 c0       	rjmp	.+32     	; 0x2be8 <__divsf3x+0x22>
    2bc8:	0e 94 28 23 	call	0x4650	; 0x4650 <__fp_pscB>
    2bcc:	58 f0       	brcs	.+22     	; 0x2be4 <__divsf3x+0x1e>
    2bce:	0e 94 21 23 	call	0x4642	; 0x4642 <__fp_pscA>
    2bd2:	40 f0       	brcs	.+16     	; 0x2be4 <__divsf3x+0x1e>
    2bd4:	29 f4       	brne	.+10     	; 0x2be0 <__divsf3x+0x1a>
    2bd6:	5f 3f       	cpi	r21, 0xFF	; 255
    2bd8:	29 f0       	breq	.+10     	; 0x2be4 <__divsf3x+0x1e>
    2bda:	0c 94 36 23 	jmp	0x466c	; 0x466c <__fp_inf>
    2bde:	51 11       	cpse	r21, r1
    2be0:	0c 94 30 23 	jmp	0x4660	; 0x4660 <__fp_szero>
    2be4:	0c 94 56 23 	jmp	0x46ac	; 0x46ac <__fp_nan>
    2be8:	0e 94 74 20 	call	0x40e8	; 0x40e8 <__fp_split3>
    2bec:	68 f3       	brcs	.-38     	; 0x2bc8 <__divsf3x+0x2>

00002bee <__divsf3_pse>:
    2bee:	99 23       	and	r25, r25
    2bf0:	b1 f3       	breq	.-20     	; 0x2bde <__divsf3x+0x18>
    2bf2:	55 23       	and	r21, r21
    2bf4:	91 f3       	breq	.-28     	; 0x2bda <__divsf3x+0x14>
    2bf6:	95 1b       	sub	r25, r21
    2bf8:	55 0b       	sbc	r21, r21
    2bfa:	bb 27       	eor	r27, r27
    2bfc:	aa 27       	eor	r26, r26
    2bfe:	62 17       	cp	r22, r18
    2c00:	73 07       	cpc	r23, r19
    2c02:	84 07       	cpc	r24, r20
    2c04:	38 f0       	brcs	.+14     	; 0x2c14 <__divsf3_pse+0x26>
    2c06:	9f 5f       	subi	r25, 0xFF	; 255
    2c08:	5f 4f       	sbci	r21, 0xFF	; 255
    2c0a:	22 0f       	add	r18, r18
    2c0c:	33 1f       	adc	r19, r19
    2c0e:	44 1f       	adc	r20, r20
    2c10:	aa 1f       	adc	r26, r26
    2c12:	a9 f3       	breq	.-22     	; 0x2bfe <__divsf3_pse+0x10>
    2c14:	35 d0       	rcall	.+106    	; 0x2c80 <__divsf3_pse+0x92>
    2c16:	0e 2e       	mov	r0, r30
    2c18:	3a f0       	brmi	.+14     	; 0x2c28 <__divsf3_pse+0x3a>
    2c1a:	e0 e8       	ldi	r30, 0x80	; 128
    2c1c:	32 d0       	rcall	.+100    	; 0x2c82 <__divsf3_pse+0x94>
    2c1e:	91 50       	subi	r25, 0x01	; 1
    2c20:	50 40       	sbci	r21, 0x00	; 0
    2c22:	e6 95       	lsr	r30
    2c24:	00 1c       	adc	r0, r0
    2c26:	ca f7       	brpl	.-14     	; 0x2c1a <__divsf3_pse+0x2c>
    2c28:	2b d0       	rcall	.+86     	; 0x2c80 <__divsf3_pse+0x92>
    2c2a:	fe 2f       	mov	r31, r30
    2c2c:	29 d0       	rcall	.+82     	; 0x2c80 <__divsf3_pse+0x92>
    2c2e:	66 0f       	add	r22, r22
    2c30:	77 1f       	adc	r23, r23
    2c32:	88 1f       	adc	r24, r24
    2c34:	bb 1f       	adc	r27, r27
    2c36:	26 17       	cp	r18, r22
    2c38:	37 07       	cpc	r19, r23
    2c3a:	48 07       	cpc	r20, r24
    2c3c:	ab 07       	cpc	r26, r27
    2c3e:	b0 e8       	ldi	r27, 0x80	; 128
    2c40:	09 f0       	breq	.+2      	; 0x2c44 <__divsf3_pse+0x56>
    2c42:	bb 0b       	sbc	r27, r27
    2c44:	80 2d       	mov	r24, r0
    2c46:	bf 01       	movw	r22, r30
    2c48:	ff 27       	eor	r31, r31
    2c4a:	93 58       	subi	r25, 0x83	; 131
    2c4c:	5f 4f       	sbci	r21, 0xFF	; 255
    2c4e:	3a f0       	brmi	.+14     	; 0x2c5e <__divsf3_pse+0x70>
    2c50:	9e 3f       	cpi	r25, 0xFE	; 254
    2c52:	51 05       	cpc	r21, r1
    2c54:	78 f0       	brcs	.+30     	; 0x2c74 <__divsf3_pse+0x86>
    2c56:	0c 94 36 23 	jmp	0x466c	; 0x466c <__fp_inf>
    2c5a:	0c 94 30 23 	jmp	0x4660	; 0x4660 <__fp_szero>
    2c5e:	5f 3f       	cpi	r21, 0xFF	; 255
    2c60:	e4 f3       	brlt	.-8      	; 0x2c5a <__divsf3_pse+0x6c>
    2c62:	98 3e       	cpi	r25, 0xE8	; 232
    2c64:	d4 f3       	brlt	.-12     	; 0x2c5a <__divsf3_pse+0x6c>
    2c66:	86 95       	lsr	r24
    2c68:	77 95       	ror	r23
    2c6a:	67 95       	ror	r22
    2c6c:	b7 95       	ror	r27
    2c6e:	f7 95       	ror	r31
    2c70:	9f 5f       	subi	r25, 0xFF	; 255
    2c72:	c9 f7       	brne	.-14     	; 0x2c66 <__divsf3_pse+0x78>
    2c74:	88 0f       	add	r24, r24
    2c76:	91 1d       	adc	r25, r1
    2c78:	96 95       	lsr	r25
    2c7a:	87 95       	ror	r24
    2c7c:	97 f9       	bld	r25, 7
    2c7e:	08 95       	ret
    2c80:	e1 e0       	ldi	r30, 0x01	; 1
    2c82:	66 0f       	add	r22, r22
    2c84:	77 1f       	adc	r23, r23
    2c86:	88 1f       	adc	r24, r24
    2c88:	bb 1f       	adc	r27, r27
    2c8a:	62 17       	cp	r22, r18
    2c8c:	73 07       	cpc	r23, r19
    2c8e:	84 07       	cpc	r24, r20
    2c90:	ba 07       	cpc	r27, r26
    2c92:	20 f0       	brcs	.+8      	; 0x2c9c <__divsf3_pse+0xae>
    2c94:	62 1b       	sub	r22, r18
    2c96:	73 0b       	sbc	r23, r19
    2c98:	84 0b       	sbc	r24, r20
    2c9a:	ba 0b       	sbc	r27, r26
    2c9c:	ee 1f       	adc	r30, r30
    2c9e:	88 f7       	brcc	.-30     	; 0x2c82 <__divsf3_pse+0x94>
    2ca0:	e0 95       	com	r30
    2ca2:	08 95       	ret

Disassembly of section .text:

00004634 <__fixsfsi>:
    4634:	0e 94 3a 1f 	call	0x3e74	; 0x3e74 <__fixunssfsi>
    4638:	68 94       	set
    463a:	b1 11       	cpse	r27, r1
    463c:	0c 94 30 23 	jmp	0x4660	; 0x4660 <__fp_szero>
    4640:	08 95       	ret

Disassembly of section .text:

00003e74 <__fixunssfsi>:
    3e74:	0e 94 7c 20 	call	0x40f8	; 0x40f8 <__fp_splitA>
    3e78:	88 f0       	brcs	.+34     	; 0x3e9c <__fixunssfsi+0x28>
    3e7a:	9f 57       	subi	r25, 0x7F	; 127
    3e7c:	98 f0       	brcs	.+38     	; 0x3ea4 <__fixunssfsi+0x30>
    3e7e:	b9 2f       	mov	r27, r25
    3e80:	99 27       	eor	r25, r25
    3e82:	b7 51       	subi	r27, 0x17	; 23
    3e84:	b0 f0       	brcs	.+44     	; 0x3eb2 <__fixunssfsi+0x3e>
    3e86:	e1 f0       	breq	.+56     	; 0x3ec0 <__fixunssfsi+0x4c>
    3e88:	66 0f       	add	r22, r22
    3e8a:	77 1f       	adc	r23, r23
    3e8c:	88 1f       	adc	r24, r24
    3e8e:	99 1f       	adc	r25, r25
    3e90:	1a f0       	brmi	.+6      	; 0x3e98 <__fixunssfsi+0x24>
    3e92:	ba 95       	dec	r27
    3e94:	c9 f7       	brne	.-14     	; 0x3e88 <__fixunssfsi+0x14>
    3e96:	14 c0       	rjmp	.+40     	; 0x3ec0 <__fixunssfsi+0x4c>
    3e98:	b1 30       	cpi	r27, 0x01	; 1
    3e9a:	91 f0       	breq	.+36     	; 0x3ec0 <__fixunssfsi+0x4c>
    3e9c:	0e 94 2f 23 	call	0x465e	; 0x465e <__fp_zero>
    3ea0:	b1 e0       	ldi	r27, 0x01	; 1
    3ea2:	08 95       	ret
    3ea4:	0c 94 2f 23 	jmp	0x465e	; 0x465e <__fp_zero>
    3ea8:	67 2f       	mov	r22, r23
    3eaa:	78 2f       	mov	r23, r24
    3eac:	88 27       	eor	r24, r24
    3eae:	b8 5f       	subi	r27, 0xF8	; 248
    3eb0:	39 f0       	breq	.+14     	; 0x3ec0 <__fixunssfsi+0x4c>
    3eb2:	b9 3f       	cpi	r27, 0xF9	; 249
    3eb4:	cc f3       	brlt	.-14     	; 0x3ea8 <__fixunssfsi+0x34>
    3eb6:	86 95       	lsr	r24
    3eb8:	77 95       	ror	r23
    3eba:	67 95       	ror	r22
    3ebc:	b3 95       	inc	r27
    3ebe:	d9 f7       	brne	.-10     	; 0x3eb6 <__fixunssfsi+0x42>
    3ec0:	3e f4       	brtc	.+14     	; 0x3ed0 <__fixunssfsi+0x5c>
    3ec2:	90 95       	com	r25
    3ec4:	80 95       	com	r24
    3ec6:	70 95       	com	r23
    3ec8:	61 95       	neg	r22
    3eca:	7f 4f       	sbci	r23, 0xFF	; 255
    3ecc:	8f 4f       	sbci	r24, 0xFF	; 255
    3ece:	9f 4f       	sbci	r25, 0xFF	; 255
    3ed0:	08 95       	ret

Disassembly of section .text:

00004018 <__fp_cmp>:
    4018:	99 0f       	add	r25, r25
    401a:	00 08       	sbc	r0, r0
    401c:	55 0f       	add	r21, r21
    401e:	aa 0b       	sbc	r26, r26
    4020:	e0 e8       	ldi	r30, 0x80	; 128
    4022:	fe ef       	ldi	r31, 0xFE	; 254
    4024:	16 16       	cp	r1, r22
    4026:	17 06       	cpc	r1, r23
    4028:	e8 07       	cpc	r30, r24
    402a:	f9 07       	cpc	r31, r25
    402c:	c0 f0       	brcs	.+48     	; 0x405e <__fp_cmp+0x46>
    402e:	12 16       	cp	r1, r18
    4030:	13 06       	cpc	r1, r19
    4032:	e4 07       	cpc	r30, r20
    4034:	f5 07       	cpc	r31, r21
    4036:	98 f0       	brcs	.+38     	; 0x405e <__fp_cmp+0x46>
    4038:	62 1b       	sub	r22, r18
    403a:	73 0b       	sbc	r23, r19
    403c:	84 0b       	sbc	r24, r20
    403e:	95 0b       	sbc	r25, r21
    4040:	39 f4       	brne	.+14     	; 0x4050 <__fp_cmp+0x38>
    4042:	0a 26       	eor	r0, r26
    4044:	61 f0       	breq	.+24     	; 0x405e <__fp_cmp+0x46>
    4046:	23 2b       	or	r18, r19
    4048:	24 2b       	or	r18, r20
    404a:	25 2b       	or	r18, r21
    404c:	21 f4       	brne	.+8      	; 0x4056 <__fp_cmp+0x3e>
    404e:	08 95       	ret
    4050:	0a 26       	eor	r0, r26
    4052:	09 f4       	brne	.+2      	; 0x4056 <__fp_cmp+0x3e>
    4054:	a1 40       	sbci	r26, 0x01	; 1
    4056:	a6 95       	lsr	r26
    4058:	8f ef       	ldi	r24, 0xFF	; 255
    405a:	81 1d       	adc	r24, r1
    405c:	81 1d       	adc	r24, r1
    405e:	08 95       	ret

Disassembly of section .text:

0000466c <__fp_inf>:
    466c:	97 f9       	bld	r25, 7
    466e:	9f 67       	ori	r25, 0x7F	; 127
    4670:	80 e8       	ldi	r24, 0x80	; 128
    4672:	70 e0       	ldi	r23, 0x00	; 0
    4674:	60 e0       	ldi	r22, 0x00	; 0
    4676:	08 95       	ret

Disassembly of section .text:

000046ac <__fp_nan>:
    46ac:	9f ef       	ldi	r25, 0xFF	; 255
    46ae:	80 ec       	ldi	r24, 0xC0	; 192
    46b0:	08 95       	ret

Disassembly of section .text:

00004642 <__fp_pscA>:
    4642:	00 24       	eor	r0, r0
    4644:	0a 94       	dec	r0
    4646:	16 16       	cp	r1, r22
    4648:	17 06       	cpc	r1, r23
    464a:	18 06       	cpc	r1, r24
    464c:	09 06       	cpc	r0, r25
    464e:	08 95       	ret

Disassembly of section .text:

00004650 <__fp_pscB>:
    4650:	00 24       	eor	r0, r0
    4652:	0a 94       	dec	r0
    4654:	12 16       	cp	r1, r18
    4656:	13 06       	cpc	r1, r19
    4658:	14 06       	cpc	r1, r20
    465a:	05 06       	cpc	r0, r21
    465c:	08 95       	ret

Disassembly of section .text:

00004452 <__fp_round>:
    4452:	09 2e       	mov	r0, r25
    4454:	03 94       	inc	r0
    4456:	00 0c       	add	r0, r0
    4458:	11 f4       	brne	.+4      	; 0x445e <__fp_round+0xc>
    445a:	88 23       	and	r24, r24
    445c:	52 f0       	brmi	.+20     	; 0x4472 <__fp_round+0x20>
    445e:	bb 0f       	add	r27, r27
    4460:	40 f4       	brcc	.+16     	; 0x4472 <__fp_round+0x20>
    4462:	bf 2b       	or	r27, r31
    4464:	11 f4       	brne	.+4      	; 0x446a <__fp_round+0x18>
    4466:	60 ff       	sbrs	r22, 0
    4468:	04 c0       	rjmp	.+8      	; 0x4472 <__fp_round+0x20>
    446a:	6f 5f       	subi	r22, 0xFF	; 255
    446c:	7f 4f       	sbci	r23, 0xFF	; 255
    446e:	8f 4f       	sbci	r24, 0xFF	; 255
    4470:	9f 4f       	sbci	r25, 0xFF	; 255
    4472:	08 95       	ret

Disassembly of section .text:

000040e8 <__fp_split3>:
    40e8:	57 fd       	sbrc	r21, 7
    40ea:	90 58       	subi	r25, 0x80	; 128
    40ec:	44 0f       	add	r20, r20
    40ee:	55 1f       	adc	r21, r21
    40f0:	59 f0       	breq	.+22     	; 0x4108 <__fp_splitA+0x10>
    40f2:	5f 3f       	cpi	r21, 0xFF	; 255
    40f4:	71 f0       	breq	.+28     	; 0x4112 <__fp_splitA+0x1a>
    40f6:	47 95       	ror	r20

000040f8 <__fp_splitA>:
    40f8:	88 0f       	add	r24, r24
    40fa:	97 fb       	bst	r25, 7
    40fc:	99 1f       	adc	r25, r25
    40fe:	61 f0       	breq	.+24     	; 0x4118 <__fp_splitA+0x20>
    4100:	9f 3f       	cpi	r25, 0xFF	; 255
    4102:	79 f0       	breq	.+30     	; 0x4122 <__fp_splitA+0x2a>
    4104:	87 95       	ror	r24
    4106:	08 95       	ret
    4108:	12 16       	cp	r1, r18
    410a:	13 06       	cpc	r1, r19
    410c:	14 06       	cpc	r1, r20
    410e:	55 1f       	adc	r21, r21
    4110:	f2 cf       	rjmp	.-28     	; 0x40f6 <__fp_split3+0xe>
    4112:	46 95       	lsr	r20
    4114:	f1 df       	rcall	.-30     	; 0x40f8 <__fp_splitA>
    4116:	08 c0       	rjmp	.+16     	; 0x4128 <__fp_splitA+0x30>
    4118:	16 16       	cp	r1, r22
    411a:	17 06       	cpc	r1, r23
    411c:	18 06       	cpc	r1, r24
    411e:	99 1f       	adc	r25, r25
    4120:	f1 cf       	rjmp	.-30     	; 0x4104 <__fp_splitA+0xc>
    4122:	86 95       	lsr	r24
    4124:	71 05       	cpc	r23, r1
    4126:	61 05       	cpc	r22, r1
    4128:	08 94       	sec
    412a:	08 95       	ret

Disassembly of section .text:

0000465e <__fp_zero>:
    465e:	e8 94       	clt

00004660 <__fp_szero>:
    4660:	bb 27       	eor	r27, r27
    4662:	66 27       	eor	r22, r22
    4664:	77 27       	eor	r23, r23
    4666:	cb 01       	movw	r24, r22
    4668:	97 f9       	bld	r25, 7
    466a:	08 95       	ret

Disassembly of section .text:

00004682 <__gesf2>:
    4682:	0e 94 0c 20 	call	0x4018	; 0x4018 <__fp_cmp>
    4686:	08 f4       	brcc	.+2      	; 0x468a <__gesf2+0x8>
    4688:	8f ef       	ldi	r24, 0xFF	; 255
    468a:	08 95       	ret

Disassembly of section .text:

000046a4 <__mulsf3>:
    46a4:	0e 94 28 17 	call	0x2e50	; 0x2e50 <__mulsf3x>
    46a8:	0c 94 29 22 	jmp	0x4452	; 0x4452 <__fp_round>

Disassembly of section .text:

00002e50 <__mulsf3x>:
    2e50:	0f c0       	rjmp	.+30     	; 0x2e70 <__mulsf3x+0x20>
    2e52:	0e 94 21 23 	call	0x4642	; 0x4642 <__fp_pscA>
    2e56:	38 f0       	brcs	.+14     	; 0x2e66 <__mulsf3x+0x16>
    2e58:	0e 94 28 23 	call	0x4650	; 0x4650 <__fp_pscB>
    2e5c:	20 f0       	brcs	.+8      	; 0x2e66 <__mulsf3x+0x16>
    2e5e:	95 23       	and	r25, r21
    2e60:	11 f0       	breq	.+4      	; 0x2e66 <__mulsf3x+0x16>
    2e62:	0c 94 36 23 	jmp	0x466c	; 0x466c <__fp_inf>
    2e66:	0c 94 56 23 	jmp	0x46ac	; 0x46ac <__fp_nan>
    2e6a:	11 24       	eor	r1, r1
    2e6c:	0c 94 30 23 	jmp	0x4660	; 0x4660 <__fp_szero>
    2e70:	0e 94 74 20 	call	0x40e8	; 0x40e8 <__fp_split3>
    2e74:	70 f3       	brcs	.-36     	; 0x2e52 <__mulsf3x+0x2>

00002e76 <__mulsf3_pse>:
    2e76:	95 9f       	mul	r25, r21
    2e78:	c1 f3       	breq	.-16     	; 0x2e6a <__mulsf3x+0x1a>
    2e7a:	95 0f       	add	r25, r21
    2e7c:	50 e0       	ldi	r21, 0x00	; 0
    2e7e:	55 1f       	adc	r21, r21
    2e80:	62 9f       	mul	r22, r18
    2e82:	f0 01       	movw	r30, r0
    2e84:	72 9f       	mul	r23, r18
    2e86:	bb 27       	eor	r27, r27
    2e88:	f0 0d       	add	r31, r0
    2e8a:	b1 1d       	adc	r27, r1
    2e8c:	63 9f       	mul	r22, r19
    2e8e:	aa 27       	eor	r26, r26
    2e90:	f0 0d       	add	r31, r0
    2e92:	b1 1d       	adc	r27, r1
    2e94:	aa 1f       	adc	r26, r26
    2e96:	64 9f       	mul	r22, r20
    2e98:	66 27       	eor	r22, r22
    2e9a:	b0 0d       	add	r27, r0
    2e9c:	a1 1d       	adc	r26, r1
    2e9e:	66 1f       	adc	r22, r22
    2ea0:	82 9f       	mul	r24, r18
    2ea2:	22 27       	eor	r18, r18
    2ea4:	b0 0d       	add	r27, r0
    2ea6:	a1 1d       	adc	r26, r1
    2ea8:	62 1f       	adc	r22, r18
    2eaa:	73 9f       	mul	r23, r19
    2eac:	b0 0d       	add	r27, r0
    2eae:	a1 1d       	adc	r26, r1
    2eb0:	62 1f       	adc	r22, r18
    2eb2:	83 9f       	mul	r24, r19
    2eb4:	a0 0d       	add	r26, r0
    2eb6:	61 1d       	adc	r22, r1
    2eb8:	22 1f       	adc	r18, r18
    2eba:	74 9f       	mul	r23, r20
    2ebc:	33 27       	eor	r19, r19
    2ebe:	a0 0d       	add	r26, r0
    2ec0:	61 1d       	adc	r22, r1
    2ec2:	23 1f       	adc	r18, r19
    2ec4:	84 9f       	mul	r24, r20
    2ec6:	60 0d       	add	r22, r0
    2ec8:	21 1d       	adc	r18, r1
    2eca:	82 2f       	mov	r24, r18
    2ecc:	76 2f       	mov	r23, r22
    2ece:	6a 2f       	mov	r22, r26
    2ed0:	11 24       	eor	r1, r1
    2ed2:	9f 57       	subi	r25, 0x7F	; 127
    2ed4:	50 40       	sbci	r21, 0x00	; 0
    2ed6:	9a f0       	brmi	.+38     	; 0x2efe <__mulsf3_pse+0x88>
    2ed8:	f1 f0       	breq	.+60     	; 0x2f16 <__mulsf3_pse+0xa0>
    2eda:	88 23       	and	r24, r24
    2edc:	4a f0       	brmi	.+18     	; 0x2ef0 <__mulsf3_pse+0x7a>
    2ede:	ee 0f       	add	r30, r30
    2ee0:	ff 1f       	adc	r31, r31
    2ee2:	bb 1f       	adc	r27, r27
    2ee4:	66 1f       	adc	r22, r22
    2ee6:	77 1f       	adc	r23, r23
    2ee8:	88 1f       	adc	r24, r24
    2eea:	91 50       	subi	r25, 0x01	; 1
    2eec:	50 40       	sbci	r21, 0x00	; 0
    2eee:	a9 f7       	brne	.-22     	; 0x2eda <__mulsf3_pse+0x64>
    2ef0:	9e 3f       	cpi	r25, 0xFE	; 254
    2ef2:	51 05       	cpc	r21, r1
    2ef4:	80 f0       	brcs	.+32     	; 0x2f16 <__mulsf3_pse+0xa0>
    2ef6:	0c 94 36 23 	jmp	0x466c	; 0x466c <__fp_inf>
    2efa:	0c 94 30 23 	jmp	0x4660	; 0x4660 <__fp_szero>
    2efe:	5f 3f       	cpi	r21, 0xFF	; 255
    2f00:	e4 f3       	brlt	.-8      	; 0x2efa <__mulsf3_pse+0x84>
    2f02:	98 3e       	cpi	r25, 0xE8	; 232
    2f04:	d4 f3       	brlt	.-12     	; 0x2efa <__mulsf3_pse+0x84>
    2f06:	86 95       	lsr	r24
    2f08:	77 95       	ror	r23
    2f0a:	67 95       	ror	r22
    2f0c:	b7 95       	ror	r27
    2f0e:	f7 95       	ror	r31
    2f10:	e7 95       	ror	r30
    2f12:	9f 5f       	subi	r25, 0xFF	; 255
    2f14:	c1 f7       	brne	.-16     	; 0x2f06 <__mulsf3_pse+0x90>
    2f16:	fe 2b       	or	r31, r30
    2f18:	88 0f       	add	r24, r24
    2f1a:	91 1d       	adc	r25, r1
    2f1c:	96 95       	lsr	r25
    2f1e:	87 95       	ror	r24
    2f20:	97 f9       	bld	r25, 7
    2f22:	08 95       	ret

Disassembly of section .text.floorf:

00002986 <floorf>:
    2986:	4f 92       	push	r4
    2988:	5f 92       	push	r5
    298a:	6f 92       	push	r6
    298c:	7f 92       	push	r7
    298e:	8f 92       	push	r8
    2990:	9f 92       	push	r9
    2992:	af 92       	push	r10
    2994:	bf 92       	push	r11
    2996:	cf 92       	push	r12
    2998:	df 92       	push	r13
    299a:	ef 92       	push	r14
    299c:	ff 92       	push	r15
    299e:	cf 93       	push	r28
    29a0:	df 93       	push	r29
    29a2:	cd b7       	in	r28, 0x3d	; 61
    29a4:	de b7       	in	r29, 0x3e	; 62
    29a6:	28 97       	sbiw	r28, 0x08	; 8
    29a8:	0f b6       	in	r0, 0x3f	; 63
    29aa:	f8 94       	cli
    29ac:	de bf       	out	0x3e, r29	; 62
    29ae:	0f be       	out	0x3f, r0	; 63
    29b0:	cd bf       	out	0x3d, r28	; 61
    29b2:	6b 01       	movw	r12, r22
    29b4:	7c 01       	movw	r14, r24
    29b6:	dc 01       	movw	r26, r24
    29b8:	cb 01       	movw	r24, r22
    29ba:	47 e1       	ldi	r20, 0x17	; 23
    29bc:	b6 95       	lsr	r27
    29be:	a7 95       	ror	r26
    29c0:	97 95       	ror	r25
    29c2:	87 95       	ror	r24
    29c4:	4a 95       	dec	r20
    29c6:	d1 f7       	brne	.-12     	; 0x29bc <floorf+0x36>
    29c8:	99 27       	eor	r25, r25
    29ca:	8f 57       	subi	r24, 0x7F	; 127
    29cc:	91 09       	sbc	r25, r1
    29ce:	87 31       	cpi	r24, 0x17	; 23
    29d0:	91 05       	cpc	r25, r1
    29d2:	9c f5       	brge	.+102    	; 0x2a3a <floorf+0xb4>
    29d4:	97 fd       	sbrc	r25, 7
    29d6:	36 c0       	rjmp	.+108    	; 0x2a44 <floorf+0xbe>
    29d8:	88 24       	eor	r8, r8
    29da:	8a 94       	dec	r8
    29dc:	98 2c       	mov	r9, r8
    29de:	3f e7       	ldi	r19, 0x7F	; 127
    29e0:	a3 2e       	mov	r10, r19
    29e2:	b1 2c       	mov	r11, r1
    29e4:	04 c0       	rjmp	.+8      	; 0x29ee <floorf+0x68>
    29e6:	b5 94       	asr	r11
    29e8:	a7 94       	ror	r10
    29ea:	97 94       	ror	r9
    29ec:	87 94       	ror	r8
    29ee:	8a 95       	dec	r24
    29f0:	d2 f7       	brpl	.-12     	; 0x29e6 <floorf+0x60>
    29f2:	d5 01       	movw	r26, r10
    29f4:	c4 01       	movw	r24, r8
    29f6:	8c 21       	and	r24, r12
    29f8:	9d 21       	and	r25, r13
    29fa:	ae 21       	and	r26, r14
    29fc:	bf 21       	and	r27, r15
    29fe:	89 2b       	or	r24, r25
    2a00:	8a 2b       	or	r24, r26
    2a02:	8b 2b       	or	r24, r27
    2a04:	d1 f0       	breq	.+52     	; 0x2a3a <floorf+0xb4>
    2a06:	20 e0       	ldi	r18, 0x00	; 0
    2a08:	30 e0       	ldi	r19, 0x00	; 0
    2a0a:	40 e8       	ldi	r20, 0x80	; 128
    2a0c:	5b e7       	ldi	r21, 0x7B	; 123
    2a0e:	c7 01       	movw	r24, r14
    2a10:	b6 01       	movw	r22, r12
    2a12:	0e 94 14 23 	call	0x4628	; 0x4628 <__addsf3>
    2a16:	6d 83       	std	Y+5, r22	; 0x05
    2a18:	7e 83       	std	Y+6, r23	; 0x06
    2a1a:	8f 83       	std	Y+7, r24	; 0x07
    2a1c:	98 87       	std	Y+8, r25	; 0x08
    2a1e:	f7 fe       	sbrs	r15, 7
    2a20:	04 c0       	rjmp	.+8      	; 0x2a2a <floorf+0xa4>
    2a22:	c8 0c       	add	r12, r8
    2a24:	d9 1c       	adc	r13, r9
    2a26:	ea 1c       	adc	r14, r10
    2a28:	fb 1c       	adc	r15, r11
    2a2a:	80 94       	com	r8
    2a2c:	90 94       	com	r9
    2a2e:	a0 94       	com	r10
    2a30:	b0 94       	com	r11
    2a32:	c8 20       	and	r12, r8
    2a34:	d9 20       	and	r13, r9
    2a36:	ea 20       	and	r14, r10
    2a38:	fb 20       	and	r15, r11
    2a3a:	5c 2d       	mov	r21, r12
    2a3c:	4d 2d       	mov	r20, r13
    2a3e:	3e 2d       	mov	r19, r14
    2a40:	2f 2d       	mov	r18, r15
    2a42:	21 c0       	rjmp	.+66     	; 0x2a86 <floorf+0x100>
    2a44:	20 e0       	ldi	r18, 0x00	; 0
    2a46:	30 e0       	ldi	r19, 0x00	; 0
    2a48:	40 e8       	ldi	r20, 0x80	; 128
    2a4a:	5b e7       	ldi	r21, 0x7B	; 123
    2a4c:	c7 01       	movw	r24, r14
    2a4e:	b6 01       	movw	r22, r12
    2a50:	0e 94 14 23 	call	0x4628	; 0x4628 <__addsf3>
    2a54:	69 83       	std	Y+1, r22	; 0x01
    2a56:	7a 83       	std	Y+2, r23	; 0x02
    2a58:	8b 83       	std	Y+3, r24	; 0x03
    2a5a:	9c 83       	std	Y+4, r25	; 0x04
    2a5c:	f7 fe       	sbrs	r15, 7
    2a5e:	0f c0       	rjmp	.+30     	; 0x2a7e <floorf+0xf8>
    2a60:	d7 01       	movw	r26, r14
    2a62:	c6 01       	movw	r24, r12
    2a64:	88 0f       	add	r24, r24
    2a66:	99 1f       	adc	r25, r25
    2a68:	aa 1f       	adc	r26, r26
    2a6a:	bb 1f       	adc	r27, r27
    2a6c:	89 2b       	or	r24, r25
    2a6e:	8a 2b       	or	r24, r26
    2a70:	8b 2b       	or	r24, r27
    2a72:	19 f3       	breq	.-58     	; 0x2a3a <floorf+0xb4>
    2a74:	50 e0       	ldi	r21, 0x00	; 0
    2a76:	40 e0       	ldi	r20, 0x00	; 0
    2a78:	30 e8       	ldi	r19, 0x80	; 128
    2a7a:	2f eb       	ldi	r18, 0xBF	; 191
    2a7c:	04 c0       	rjmp	.+8      	; 0x2a86 <floorf+0x100>
    2a7e:	50 e0       	ldi	r21, 0x00	; 0
    2a80:	40 e0       	ldi	r20, 0x00	; 0
    2a82:	30 e0       	ldi	r19, 0x00	; 0
    2a84:	20 e0       	ldi	r18, 0x00	; 0
    2a86:	65 2f       	mov	r22, r21
    2a88:	74 2f       	mov	r23, r20
    2a8a:	83 2f       	mov	r24, r19
    2a8c:	92 2f       	mov	r25, r18
    2a8e:	28 96       	adiw	r28, 0x08	; 8
    2a90:	0f b6       	in	r0, 0x3f	; 63
    2a92:	f8 94       	cli
    2a94:	de bf       	out	0x3e, r29	; 62
    2a96:	0f be       	out	0x3f, r0	; 63
    2a98:	cd bf       	out	0x3d, r28	; 61
    2a9a:	df 91       	pop	r29
    2a9c:	cf 91       	pop	r28
    2a9e:	ff 90       	pop	r15
    2aa0:	ef 90       	pop	r14
    2aa2:	df 90       	pop	r13
    2aa4:	cf 90       	pop	r12
    2aa6:	bf 90       	pop	r11
    2aa8:	af 90       	pop	r10
    2aaa:	9f 90       	pop	r9
    2aac:	8f 90       	pop	r8
    2aae:	7f 90       	pop	r7
    2ab0:	6f 90       	pop	r6
    2ab2:	5f 90       	pop	r5
    2ab4:	4f 90       	pop	r4
    2ab6:	08 95       	ret

Disassembly of section .text.fmaf:

0000284a <fmaf>:
    284a:	a5 e1       	ldi	r26, 0x15	; 21
    284c:	b0 e0       	ldi	r27, 0x00	; 0
    284e:	eb e2       	ldi	r30, 0x2B	; 43
    2850:	f4 e1       	ldi	r31, 0x14	; 20
    2852:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
    2856:	47 01       	movw	r8, r14
    2858:	58 01       	movw	r10, r16
    285a:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    285e:	2b 01       	movw	r4, r22
    2860:	3c 01       	movw	r6, r24
    2862:	a8 01       	movw	r20, r16
    2864:	97 01       	movw	r18, r14
    2866:	0e 94 14 23 	call	0x4628	; 0x4628 <__addsf3>
    286a:	16 2f       	mov	r17, r22
    286c:	c7 2e       	mov	r12, r23
    286e:	d8 2e       	mov	r13, r24
    2870:	f9 2e       	mov	r15, r25
    2872:	86 2f       	mov	r24, r22
    2874:	9c 2d       	mov	r25, r12
    2876:	ad 2d       	mov	r26, r13
    2878:	bf 2d       	mov	r27, r15
    287a:	89 83       	std	Y+1, r24	; 0x01
    287c:	9a 83       	std	Y+2, r25	; 0x02
    287e:	ab 83       	std	Y+3, r26	; 0x03
    2880:	bc 83       	std	Y+4, r27	; 0x04
    2882:	aa 81       	ldd	r26, Y+2	; 0x02
    2884:	fb 81       	ldd	r31, Y+3	; 0x03
    2886:	ec 81       	ldd	r30, Y+4	; 0x04
    2888:	ed 80       	ldd	r14, Y+5	; 0x05
    288a:	3e 80       	ldd	r3, Y+6	; 0x06
    288c:	2f 80       	ldd	r2, Y+7	; 0x07
    288e:	08 85       	ldd	r16, Y+8	; 0x08
    2890:	0d 8b       	std	Y+21, r16	; 0x15
    2892:	5e 2f       	mov	r21, r30
    2894:	5f 71       	andi	r21, 0x1F	; 31
    2896:	21 2f       	mov	r18, r17
    2898:	3a 2f       	mov	r19, r26
    289a:	4f 2f       	mov	r20, r31
    289c:	60 e0       	ldi	r22, 0x00	; 0
    289e:	70 e0       	ldi	r23, 0x00	; 0
    28a0:	80 e0       	ldi	r24, 0x00	; 0
    28a2:	90 e0       	ldi	r25, 0x00	; 0
    28a4:	21 15       	cp	r18, r1
    28a6:	31 05       	cpc	r19, r1
    28a8:	41 05       	cpc	r20, r1
    28aa:	00 e1       	ldi	r16, 0x10	; 16
    28ac:	50 07       	cpc	r21, r16
    28ae:	61 05       	cpc	r22, r1
    28b0:	71 05       	cpc	r23, r1
    28b2:	81 05       	cpc	r24, r1
    28b4:	91 05       	cpc	r25, r1
    28b6:	09 f0       	breq	.+2      	; 0x28ba <fmaf+0x70>
    28b8:	5e c0       	rjmp	.+188    	; 0x2976 <fmaf+0x12c>
    28ba:	5e 2f       	mov	r21, r30
    28bc:	6e 2d       	mov	r22, r14
    28be:	73 2d       	mov	r23, r3
    28c0:	82 2d       	mov	r24, r2
    28c2:	9d 89       	ldd	r25, Y+21	; 0x15
    28c4:	04 e3       	ldi	r16, 0x34	; 52
    28c6:	0e 94 b8 20 	call	0x4170	; 0x4170 <__lshrdi3>
    28ca:	2d 87       	std	Y+13, r18	; 0x0d
    28cc:	3e 87       	std	Y+14, r19	; 0x0e
    28ce:	4f 87       	std	Y+15, r20	; 0x0f
    28d0:	58 8b       	std	Y+16, r21	; 0x10
    28d2:	69 8b       	std	Y+17, r22	; 0x11
    28d4:	7a 8b       	std	Y+18, r23	; 0x12
    28d6:	8b 8b       	std	Y+19, r24	; 0x13
    28d8:	9c 8b       	std	Y+20, r25	; 0x14
    28da:	8d 85       	ldd	r24, Y+13	; 0x0d
    28dc:	9e 85       	ldd	r25, Y+14	; 0x0e
    28de:	97 70       	andi	r25, 0x07	; 7
    28e0:	8f 3f       	cpi	r24, 0xFF	; 255
    28e2:	97 40       	sbci	r25, 0x07	; 7
    28e4:	09 f4       	brne	.+2      	; 0x28e8 <fmaf+0x9e>
    28e6:	47 c0       	rjmp	.+142    	; 0x2976 <fmaf+0x12c>
    28e8:	a3 01       	movw	r20, r6
    28ea:	92 01       	movw	r18, r4
    28ec:	61 2f       	mov	r22, r17
    28ee:	7c 2d       	mov	r23, r12
    28f0:	8d 2d       	mov	r24, r13
    28f2:	9f 2d       	mov	r25, r15
    28f4:	0e 94 13 23 	call	0x4626	; 0x4626 <__subsf3>
    28f8:	9b 01       	movw	r18, r22
    28fa:	ac 01       	movw	r20, r24
    28fc:	c5 01       	movw	r24, r10
    28fe:	b4 01       	movw	r22, r8
    2900:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    2904:	88 23       	and	r24, r24
    2906:	b9 f1       	breq	.+110    	; 0x2976 <fmaf+0x12c>
    2908:	49 86       	std	Y+9, r4	; 0x09
    290a:	5a 86       	std	Y+10, r5	; 0x0a
    290c:	6b 86       	std	Y+11, r6	; 0x0b
    290e:	7c 86       	std	Y+12, r7	; 0x0c
    2910:	29 85       	ldd	r18, Y+9	; 0x09
    2912:	3a 85       	ldd	r19, Y+10	; 0x0a
    2914:	4b 85       	ldd	r20, Y+11	; 0x0b
    2916:	5c 85       	ldd	r21, Y+12	; 0x0c
    2918:	c5 01       	movw	r24, r10
    291a:	b4 01       	movw	r22, r8
    291c:	0e 94 14 23 	call	0x4628	; 0x4628 <__addsf3>
    2920:	b6 2e       	mov	r11, r22
    2922:	87 2e       	mov	r8, r23
    2924:	98 2e       	mov	r9, r24
    2926:	a9 2e       	mov	r10, r25
    2928:	26 2f       	mov	r18, r22
    292a:	37 2f       	mov	r19, r23
    292c:	48 2f       	mov	r20, r24
    292e:	59 2f       	mov	r21, r25
    2930:	61 2f       	mov	r22, r17
    2932:	7c 2d       	mov	r23, r12
    2934:	8d 2d       	mov	r24, r13
    2936:	9f 2d       	mov	r25, r15
    2938:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    293c:	81 11       	cpse	r24, r1
    293e:	18 c0       	rjmp	.+48     	; 0x2970 <fmaf+0x126>
    2940:	2b 2d       	mov	r18, r11
    2942:	8b 2d       	mov	r24, r11
    2944:	98 2d       	mov	r25, r8
    2946:	a9 2d       	mov	r26, r9
    2948:	ba 2d       	mov	r27, r10
    294a:	89 83       	std	Y+1, r24	; 0x01
    294c:	9a 83       	std	Y+2, r25	; 0x02
    294e:	ab 83       	std	Y+3, r26	; 0x03
    2950:	bc 83       	std	Y+4, r27	; 0x04
    2952:	3a 81       	ldd	r19, Y+2	; 0x02
    2954:	4b 81       	ldd	r20, Y+3	; 0x03
    2956:	5c 81       	ldd	r21, Y+4	; 0x04
    2958:	6e 2d       	mov	r22, r14
    295a:	73 2d       	mov	r23, r3
    295c:	82 2d       	mov	r24, r2
    295e:	9d 89       	ldd	r25, Y+21	; 0x15
    2960:	a1 e0       	ldi	r26, 0x01	; 1
    2962:	0e 94 b4 22 	call	0x4568	; 0x4568 <__adddi3_s8>
    2966:	12 2f       	mov	r17, r18
    2968:	c3 2e       	mov	r12, r19
    296a:	d4 2e       	mov	r13, r20
    296c:	f5 2e       	mov	r15, r21
    296e:	03 c0       	rjmp	.+6      	; 0x2976 <fmaf+0x12c>
    2970:	1b 2d       	mov	r17, r11
    2972:	64 01       	movw	r12, r8
    2974:	fa 2c       	mov	r15, r10
    2976:	61 2f       	mov	r22, r17
    2978:	7c 2d       	mov	r23, r12
    297a:	8d 2d       	mov	r24, r13
    297c:	9f 2d       	mov	r25, r15
    297e:	65 96       	adiw	r28, 0x15	; 21
    2980:	e2 e1       	ldi	r30, 0x12	; 18
    2982:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>

Disassembly of section .text.libgcc:

00004568 <__adddi3_s8>:
    4568:	00 24       	eor	r0, r0
    456a:	a7 fd       	sbrc	r26, 7
    456c:	00 94       	com	r0
    456e:	2a 0f       	add	r18, r26
    4570:	30 1d       	adc	r19, r0
    4572:	40 1d       	adc	r20, r0
    4574:	50 1d       	adc	r21, r0
    4576:	60 1d       	adc	r22, r0
    4578:	70 1d       	adc	r23, r0
    457a:	80 1d       	adc	r24, r0
    457c:	90 1d       	adc	r25, r0
    457e:	08 95       	ret
