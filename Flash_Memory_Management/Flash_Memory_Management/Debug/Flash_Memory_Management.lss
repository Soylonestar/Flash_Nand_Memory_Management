
Flash_Memory_Management.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00004754  2**0
                  ALLOC, LOAD, DATA
  1 .text         0000017a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000102e  00800200  00800200  00004754  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00004754  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 00000196  00000000  00000000  00004783  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  00004919  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003154  00000000  00000000  00004ad9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001207  00000000  00000000  00007c2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000017b9  00000000  00000000  00008e34  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000057c  00000000  00000000  0000a5f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000537  00000000  00000000  0000ab6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d64  00000000  00000000  0000b0a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  0000be07  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  000046b2  000046b2  00004746  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000bff0  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .progmemx.data 00000013  00000644  00000644  000006d8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 16 .text.main    00000044  00004060  00004060  000040f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.USART_Init 00000036  00004218  00004218  000042ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.USART_TX_Data 0000000e  000045e0  000045e0  00004674  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.USART_Data 0000004c  00003fcc  00003fcc  00004060  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.USART_RX_Data 0000000e  000045ee  000045ee  00004682  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.LED_Init 00000016  00004580  00004580  00004614  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.LED_Red_Toggle 0000000e  000045fc  000045fc  00004690  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.LED_Green_Toggle 0000000e  0000460a  0000460a  0000469e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.VOLTAGE_Translator_Init 00000026  00004398  00004398  0000442c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.SLAVE_CS_Deselect 00000062  00003db4  00003db4  00003e48  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.FLASH_NAND_CS_ENABLE 00000008  0000468c  0000468c  00004720  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.FLASH_NAND_CS_DISABLE 00000008  00004694  00004694  00004728  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.Print_To_User 000000ac  00003398  00003398  0000342c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .progmemx.data 00000361  0000017a  0000017a  0000020e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 30 .text.HEX_Verification 000000bc  00003170  00003170  00003204  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.NAND_Address_Checker 00000074  00003c62  00003c62  00003cf6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.ExecuteCommand 00000468  00001bcc  00001bcc  00001c60  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.UserInput 000000bc  0000322c  0000322c  000032c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.COLUMN_BLOCK_PAGE_ADDRESSER 00000150  000025a4  000025a4  00002638  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .bss.input_counter 00000002  0080122e  0080122e  00004754  2**0
                  ALLOC
 36 .bss.arr_address 00000002  00801230  00801230  00004754  2**0
                  ALLOC
 37 .text.CLEAR_ARR 0000005e  00003e16  00003e16  00003eaa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.SPI_MASTER_Init 00000024  0000440a  0000440a  0000449e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.FLASH_Write_Enable 0000001a  00004506  00004506  0000459a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .progmemx.data 000000d4  000004db  000004db  0000056f  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 41 .text.FLASH_ID 0000008a  000039e2  000039e2  00003a76  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.FLASH_Die_Selection 0000007a  00003b6e  00003b6e  00003c02  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.FLASH_Configuration 0000007a  00003be8  00003be8  00003c7c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.FLASH_Block_Lock_Setter 00000074  00003cd6  00003cd6  00003d6a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.FLASH_Block_Lock 000000aa  00003444  00003444  000034d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.FLASH_Reset 0000001e  00004494  00004494  00004528  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.FLASH_MainArray_Address 000000a6  000034ee  000034ee  00003582  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.FLASH_Column_Address 0000005c  00003ed2  00003ed2  00003f66  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.FLASH_Data_Storage 000000a2  00003780  00003780  00003814  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.FLASH_Read_From_Cache_x1 0000004e  00003f7e  00003f7e  00004012  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.FLASH_Status 00000080  00003aee  00003aee  00003b82  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.FLASH_Program_Execute 00000030  000042b8  000042b8  0000434c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.FLASH_Page_Program 00000082  00003a6c  00003a6c  00003b00  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.FLASH_Page_Read 00000038  000041a8  000041a8  0000423c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.FLASH_Para_Pg 00000050  00003f2e  00003f2e  00003fc2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.FLASH_Block_Erase 00000034  00004284  00004284  00004318  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .progmemx.data 0000007f  000005af  000005af  00000643  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 58 .text.Page_Tester 000000c0  000030b0  000030b0  00003144  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.libgcc  0000000e  00004618  00004618  000046ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.__dummy_fini 00000002  000046ba  000046ba  0000474e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.__dummy_funcs_on_exit 00000002  000046bc  000046bc  00004750  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.__dummy_simulator_exit 00000002  000046be  000046be  00004752  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.exit    00000016  00004596  00004596  0000462a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.__wrap_sprintf 00000026  000043be  000043be  00004452  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .progmemx.data 00000007  00000677  00000677  0000070b  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 66 .text.__fmt_s 000000ca  00002fe6  00002fe6  0000307a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.__out   0000006a  00003d4a  00003d4a  00003dde  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.__pad   0000010e  00002aac  00002aac  00002b40  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.__fmt_state 000000a4  00003594  00003594  00003628  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .progmemx.data 00000006  0000067e  0000067e  00000712  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 71 .text.__printf_core 00000832  00000684  00000684  00000718  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .progmemx.data.state_table 00000016  0000062e  0000062e  000006c2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 73 .text.fputc   00000092  000038c4  000038c4  00003958  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.__fmt_d 0000017e  000022b4  000022b4  00002348  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.__fmt_o 000000d4  00002d70  00002d70  00002e04  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.__cvt_u 0000014a  000026f4  000026f4  00002788  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.__fmt_u 000000b0  000032e8  000032e8  0000337c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.__fmt_x 00000280  00002034  00002034  000020c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.__pop_float 00000040  0000412c  0000412c  000041c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.__pop_int 00000172  00002432  00002432  000024c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text.__pop_ptr 000000d8  00002c98  00002c98  00002d2c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.sprintf 00000026  000043e4  000043e4  00004478  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .text.vsprintf 00000018  00004520  00004520  000045b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 .text.atoi    0000008c  00003956  00003956  000039ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 .text.memset  00000012  000045ac  000045ac  00004640  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 .text.strcmp  00000044  000040a4  000040a4  00004138  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 .text.strlen  00000024  0000442e  0000442e  000044c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 .text.tolower 00000010  000045d0  000045d0  00004664  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 .text.toupper 00000012  000045be  000045be  00004652  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 .text._Exit   00000004  000046b6  000046b6  0000474a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 .text.__vsprintf 00000018  00004538  00004538  000045cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 .text.__vsnprintf 000000a4  00003638  00003638  000036cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 .text.vsnprintf 000000a4  000036dc  000036dc  00003770  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 .text.vfprintf 00000030  000042e8  000042e8  0000437c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 .text.__vfprintf 00000030  00004318  00004318  000043ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 .progmemx.data 00000010  00000657  00000657  000006eb  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 97 .text.__fmt_fp 000006ba  00000eb6  00000eb6  00000f4a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 98 .progmemx.data 00000010  00000667  00000667  000006fb  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 99 .text.__fmt_a 0000065c  00001570  00001570  00001604  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 .text.strcpy  0000001c  000044b2  000044b2  00004546  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 .text.libgcc.div 00000028  00004348  00004348  000043dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 .text.libgcc.div 0000001c  000044ce  000044ce  00004562  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 .text.libgcc.div 000000a2  00003822  00003822  000038b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 .text.libgcc  00000020  00004474  00004474  00004508  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 .text.libgcc.prologue 00000038  000041e0  000041e0  00004274  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 .text.libgcc.prologue 00000036  0000424e  0000424e  000042e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 .text.libgcc  0000001c  000044ea  000044ea  0000457e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 .text.libgcc.builtins 0000003c  0000416c  0000416c  00004200  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 .text.libgcc  00000018  00004550  00004550  000045e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 .text.libgcc.div 00000028  00004370  00004370  00004404  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 .text         0000000e  00004626  00004626  000046ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 .text         000000ce  00002f18  00002f18  00002fac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 .text         0000000a  00004678  00004678  0000470c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 .text         00000008  0000469c  0000469c  00004730  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 .text         000000de  00002bba  00002bba  00002c4e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 .text         0000000e  00004634  00004634  000046c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 .text         0000005e  00003e74  00003e74  00003f08  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 .text         00000048  00004018  00004018  000040ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 .text         0000000c  0000466c  0000466c  00004700  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 .text         00000006  000046ac  000046ac  00004740  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 .text         0000000e  00004642  00004642  000046d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 .text         0000000e  00004650  00004650  000046e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 .text         00000022  00004452  00004452  000044e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 .text         00000044  000040e8  000040e8  0000417c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 .text         0000000e  0000465e  0000465e  000046f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 .text         0000000a  00004682  00004682  00004716  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 .text         00000008  000046a4  000046a4  00004738  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 .text         000000d4  00002e44  00002e44  00002ed8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 .text.floorf  00000132  0000297a  0000297a  00002a0e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 .text.fmaf    0000013c  0000283e  0000283e  000028d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 .text.libgcc  00000018  00004568  00004568  000045fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__ctors_end>
   4:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
   8:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
   c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  10:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  14:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  18:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  1c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  20:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  24:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  28:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  2c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  30:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  34:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  38:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  3c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  40:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  44:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  48:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  4c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  50:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  54:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  58:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  5c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  60:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  64:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  68:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  6c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  70:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  74:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  78:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  7c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  80:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  84:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  88:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  8c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  90:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  94:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  98:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  9c:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  a0:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  a4:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  a8:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  ac:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  b0:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  b4:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  b8:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  bc:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  c0:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  c4:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  c8:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  cc:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  d0:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  d4:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  d8:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  dc:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>
  e0:	0c 94 59 23 	jmp	0x46b2	; 0x46b2 <__bad_interrupt>

000000e4 <.dinit>:
  e4:	02 00       	.word	0x0002	; ????
  e6:	12 32       	cpi	r17, 0x22	; 34
  e8:	80 00       	.word	0x0080	; ????

000000ea <__trampolines_start>:
  ea:	0c 94 f8 21 	jmp	0x43f0	; 0x43f0 <sprintf+0xc>
  ee:	0c 94 48 03 	jmp	0x690	; 0x690 <__printf_core+0xc>
  f2:	0c 94 61 07 	jmp	0xec2	; 0xec2 <__fmt_fp+0xc>
  f6:	0c 94 25 14 	jmp	0x284a	; 0x284a <fmaf+0xc>
  fa:	0c 94 7a 21 	jmp	0x42f4	; 0x42f4 <vfprintf+0xc>
  fe:	0c 94 e5 21 	jmp	0x43ca	; 0x43ca <_sprintf_cdnopuxX+0xc>
 102:	0c 94 be 0a 	jmp	0x157c	; 0x157c <__fmt_a+0xc>
 106:	0c 94 7a 19 	jmp	0x32f4	; 0x32f4 <__fmt_u+0xc>
 10a:	0c 94 be 16 	jmp	0x2d7c	; 0x2d7c <__fmt_o+0xc>
 10e:	0c 94 20 10 	jmp	0x2040	; 0x2040 <__fmt_x+0xc>
 112:	0c 94 92 21 	jmp	0x4324	; 0x4324 <__vfprintf+0xc>
 116:	0c 94 60 11 	jmp	0x22c0	; 0x22c0 <__fmt_d+0xc>
 11a:	0c 94 80 13 	jmp	0x2700	; 0x2700 <__cvt_u+0xc>

0000011e <__ctors_end>:
 11e:	11 24       	eor	r1, r1
 120:	1f be       	out	0x3f, r1	; 63
 122:	cf ef       	ldi	r28, 0xFF	; 255
 124:	d1 e2       	ldi	r29, 0x21	; 33
 126:	de bf       	out	0x3e, r29	; 62
 128:	cd bf       	out	0x3d, r28	; 61
 12a:	00 e0       	ldi	r16, 0x00	; 0
 12c:	0c bf       	out	0x3c, r16	; 60

0000012e <__do_copy_data>:
 12e:	e4 ee       	ldi	r30, 0xE4	; 228
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	40 e0       	ldi	r20, 0x00	; 0
 134:	19 c0       	rjmp	.+50     	; 0x168 <__do_clear_bss+0x8>
 136:	b7 91       	elpm	r27, Z+
 138:	a7 91       	elpm	r26, Z+
 13a:	37 91       	elpm	r19, Z+
 13c:	27 91       	elpm	r18, Z+
 13e:	07 91       	elpm	r16, Z+
 140:	07 fd       	sbrc	r16, 7
 142:	0e c0       	rjmp	.+28     	; 0x160 <__do_clear_bss>
 144:	97 91       	elpm	r25, Z+
 146:	87 91       	elpm	r24, Z+
 148:	ef 01       	movw	r28, r30
 14a:	f9 2f       	mov	r31, r25
 14c:	e8 2f       	mov	r30, r24
 14e:	0b bf       	out	0x3b, r16	; 59
 150:	07 90       	elpm	r0, Z+
 152:	0d 92       	st	X+, r0
 154:	a2 17       	cp	r26, r18
 156:	b3 07       	cpc	r27, r19
 158:	d9 f7       	brne	.-10     	; 0x150 <__do_copy_data+0x22>
 15a:	fe 01       	movw	r30, r28
 15c:	1b be       	out	0x3b, r1	; 59
 15e:	04 c0       	rjmp	.+8      	; 0x168 <__do_clear_bss+0x8>

00000160 <__do_clear_bss>:
 160:	1d 92       	st	X+, r1
 162:	a2 17       	cp	r26, r18
 164:	b3 07       	cpc	r27, r19
 166:	e1 f7       	brne	.-8      	; 0x160 <__do_clear_bss>
 168:	e9 3e       	cpi	r30, 0xE9	; 233
 16a:	f4 07       	cpc	r31, r20
 16c:	21 f7       	brne	.-56     	; 0x136 <__do_copy_data+0x8>
 16e:	0e 94 30 20 	call	0x4060	; 0x4060 <main>
 172:	0c 94 cb 22 	jmp	0x4596	; 0x4596 <exit>

00000176 <_exit>:
 176:	f8 94       	cli

00000178 <__stop_program>:
 178:	ff cf       	rjmp	.-2      	; 0x178 <__stop_program>

Disassembly of section .text:

000046b2 <__bad_interrupt>:
    46b2:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00004060 <main>:

//#include "MEGA_1284P_SPI.h" //adding MEGA_1284P SPI Testing code

int main(void)
{
	LED_Init();
    4060:	0e 94 c0 22 	call	0x4580	; 0x4580 <LED_Init>
	VOLTAGE_Translator_Init();
    4064:	0e 94 cc 21 	call	0x4398	; 0x4398 <VOLTAGE_Translator_Init>
	USART_Init();
    4068:	0e 94 0c 21 	call	0x4218	; 0x4218 <USART_Init>
	SLAVE_CS_Deselect();
    406c:	0e 94 da 1e 	call	0x3db4	; 0x3db4 <SLAVE_CS_Deselect>
	SPI_MASTER_Init();
    4070:	0e 94 05 22 	call	0x440a	; 0x440a <SPI_MASTER_Init>
	LED_Green_Toggle();
    4074:	0e 94 05 23 	call	0x460a	; 0x460a <LED_Green_Toggle>
	//PORTA &= ~(1 << PA3); //~CS pin set low for selecting slave device
	
    while(1)
    {		
		CLEAR_ARR();
    4078:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
		USART_Data("->Arrays Cleared \n");
    407c:	64 e4       	ldi	r22, 0x44	; 68
    407e:	76 e0       	ldi	r23, 0x06	; 6
    4080:	80 e0       	ldi	r24, 0x00	; 0
    4082:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		
		UserInput(true); //true therefore command
    4086:	81 e0       	ldi	r24, 0x01	; 1
    4088:	0e 94 16 19 	call	0x322c	; 0x322c <UserInput>
		
		LED_Red_Toggle();
    408c:	0e 94 fe 22 	call	0x45fc	; 0x45fc <LED_Red_Toggle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    4090:	2f ef       	ldi	r18, 0xFF	; 255
    4092:	81 ee       	ldi	r24, 0xE1	; 225
    4094:	94 e0       	ldi	r25, 0x04	; 4
    4096:	21 50       	subi	r18, 0x01	; 1
    4098:	80 40       	sbci	r24, 0x00	; 0
    409a:	90 40       	sbci	r25, 0x00	; 0
    409c:	e1 f7       	brne	.-8      	; 0x4096 <main+0x36>
    409e:	00 c0       	rjmp	.+0      	; 0x40a0 <main+0x40>
    40a0:	00 00       	nop
    40a2:	ea cf       	rjmp	.-44     	; 0x4078 <main+0x18>

Disassembly of section .text.USART_Init:

00004218 <USART_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    4218:	87 e6       	ldi	r24, 0x67	; 103
    421a:	90 e0       	ldi	r25, 0x00	; 0
    421c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
    4220:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
    4224:	8d b1       	in	r24, 0x0d	; 13
    4226:	82 60       	ori	r24, 0x02	; 2
    4228:	8d b9       	out	0x0d, r24	; 13
    422a:	e1 ec       	ldi	r30, 0xC1	; 193
    422c:	f0 e0       	ldi	r31, 0x00	; 0
    422e:	80 81       	ld	r24, Z
    4230:	88 60       	ori	r24, 0x08	; 8
    4232:	80 83       	st	Z, r24
    4234:	8d b1       	in	r24, 0x0d	; 13
    4236:	8e 7f       	andi	r24, 0xFE	; 254
    4238:	8d b9       	out	0x0d, r24	; 13
    423a:	80 81       	ld	r24, Z
    423c:	80 61       	ori	r24, 0x10	; 16
    423e:	80 83       	st	Z, r24
    4240:	81 b1       	in	r24, 0x01	; 1
    4242:	84 60       	ori	r24, 0x04	; 4
    4244:	81 b9       	out	0x01, r24	; 1
    4246:	82 b1       	in	r24, 0x02	; 2
    4248:	84 60       	ori	r24, 0x04	; 4
    424a:	82 b9       	out	0x02, r24	; 2
    424c:	08 95       	ret

Disassembly of section .text.USART_TX_Data:

000045e0 <USART_TX_Data>:
    45e0:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    45e4:	95 ff       	sbrs	r25, 5
    45e6:	fc cf       	rjmp	.-8      	; 0x45e0 <USART_TX_Data>
    45e8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    45ec:	08 95       	ret

Disassembly of section .text.USART_Data:

00003fcc <USART_Data>:
    3fcc:	cf 92       	push	r12
    3fce:	df 92       	push	r13
    3fd0:	ef 92       	push	r14
    3fd2:	cf 93       	push	r28
    3fd4:	df 93       	push	r29
    3fd6:	6b 01       	movw	r12, r22
    3fd8:	e8 2e       	mov	r14, r24
    3fda:	c0 e0       	ldi	r28, 0x00	; 0
    3fdc:	d0 e0       	ldi	r29, 0x00	; 0
    3fde:	0f c0       	rjmp	.+30     	; 0x3ffe <USART_Data+0x32>
    3fe0:	ae 2d       	mov	r26, r14
    3fe2:	c6 01       	movw	r24, r12
    3fe4:	8c 0f       	add	r24, r28
    3fe6:	9d 1f       	adc	r25, r29
    3fe8:	a1 1d       	adc	r26, r1
    3fea:	d7 fd       	sbrc	r29, 7
    3fec:	aa 95       	dec	r26
    3fee:	fc 01       	movw	r30, r24
    3ff0:	5a 2f       	mov	r21, r26
    3ff2:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    3ff6:	86 2f       	mov	r24, r22
    3ff8:	0e 94 f0 22 	call	0x45e0	; 0x45e0 <USART_TX_Data>
    3ffc:	21 96       	adiw	r28, 0x01	; 1
    3ffe:	8e 2d       	mov	r24, r14
    4000:	b6 01       	movw	r22, r12
    4002:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    4006:	c8 17       	cp	r28, r24
    4008:	d9 07       	cpc	r29, r25
    400a:	50 f3       	brcs	.-44     	; 0x3fe0 <USART_Data+0x14>
    400c:	df 91       	pop	r29
    400e:	cf 91       	pop	r28
    4010:	ef 90       	pop	r14
    4012:	df 90       	pop	r13
    4014:	cf 90       	pop	r12
    4016:	08 95       	ret

Disassembly of section .text.USART_RX_Data:

000045ee <USART_RX_Data>:
    45ee:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    45f2:	88 23       	and	r24, r24
    45f4:	e4 f7       	brge	.-8      	; 0x45ee <USART_RX_Data>
    45f6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    45fa:	08 95       	ret

Disassembly of section .text.LED_Init:

00004580 <LED_Init>:
    4580:	e1 e0       	ldi	r30, 0x01	; 1
    4582:	f1 e0       	ldi	r31, 0x01	; 1
    4584:	80 81       	ld	r24, Z
    4586:	80 66       	ori	r24, 0x60	; 96
    4588:	80 83       	st	Z, r24
    458a:	e2 e0       	ldi	r30, 0x02	; 2
    458c:	f1 e0       	ldi	r31, 0x01	; 1
    458e:	80 81       	ld	r24, Z
    4590:	80 66       	ori	r24, 0x60	; 96
    4592:	80 83       	st	Z, r24
    4594:	08 95       	ret

Disassembly of section .text.LED_Red_Toggle:

000045fc <LED_Red_Toggle>:
}

void LED_Red_Toggle()
{
	PORTH ^= (1 << PH6); //toggle RED_LED (PH6)
    45fc:	e2 e0       	ldi	r30, 0x02	; 2
    45fe:	f1 e0       	ldi	r31, 0x01	; 1
    4600:	90 81       	ld	r25, Z
    4602:	80 e4       	ldi	r24, 0x40	; 64
    4604:	89 27       	eor	r24, r25
    4606:	80 83       	st	Z, r24
    4608:	08 95       	ret

Disassembly of section .text.LED_Green_Toggle:

0000460a <LED_Green_Toggle>:
}

void LED_Green_Toggle()
{
	PORTH ^= (1 << PH5); //toggle GREEN_LED (PH5)
    460a:	e2 e0       	ldi	r30, 0x02	; 2
    460c:	f1 e0       	ldi	r31, 0x01	; 1
    460e:	90 81       	ld	r25, Z
    4610:	80 e2       	ldi	r24, 0x20	; 32
    4612:	89 27       	eor	r24, r25
    4614:	80 83       	st	Z, r24
    4616:	08 95       	ret

Disassembly of section .text.VOLTAGE_Translator_Init:

00004398 <VOLTAGE_Translator_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    4398:	87 b1       	in	r24, 0x07	; 7
    439a:	80 64       	ori	r24, 0x40	; 64
    439c:	87 b9       	out	0x07, r24	; 7
    439e:	88 b1       	in	r24, 0x08	; 8
    43a0:	80 64       	ori	r24, 0x40	; 64
    43a2:	88 b9       	out	0x08, r24	; 8
    43a4:	83 b3       	in	r24, 0x13	; 19
    43a6:	81 60       	ori	r24, 0x01	; 1
    43a8:	83 bb       	out	0x13, r24	; 19
    43aa:	84 b3       	in	r24, 0x14	; 20
    43ac:	81 60       	ori	r24, 0x01	; 1
    43ae:	84 bb       	out	0x14, r24	; 20
    43b0:	83 b3       	in	r24, 0x13	; 19
    43b2:	82 60       	ori	r24, 0x02	; 2
    43b4:	83 bb       	out	0x13, r24	; 19
    43b6:	84 b3       	in	r24, 0x14	; 20
    43b8:	82 60       	ori	r24, 0x02	; 2
    43ba:	84 bb       	out	0x14, r24	; 20
    43bc:	08 95       	ret

Disassembly of section .text.SLAVE_CS_Deselect:

00003db4 <SLAVE_CS_Deselect>:
    3db4:	81 b1       	in	r24, 0x01	; 1
    3db6:	88 60       	ori	r24, 0x08	; 8
    3db8:	81 b9       	out	0x01, r24	; 1
    3dba:	82 b1       	in	r24, 0x02	; 2
    3dbc:	88 60       	ori	r24, 0x08	; 8
    3dbe:	82 b9       	out	0x02, r24	; 2
    3dc0:	81 b1       	in	r24, 0x01	; 1
    3dc2:	80 61       	ori	r24, 0x10	; 16
    3dc4:	81 b9       	out	0x01, r24	; 1
    3dc6:	82 b1       	in	r24, 0x02	; 2
    3dc8:	80 61       	ori	r24, 0x10	; 16
    3dca:	82 b9       	out	0x02, r24	; 2
    3dcc:	81 b1       	in	r24, 0x01	; 1
    3dce:	80 62       	ori	r24, 0x20	; 32
    3dd0:	81 b9       	out	0x01, r24	; 1
    3dd2:	82 b1       	in	r24, 0x02	; 2
    3dd4:	80 62       	ori	r24, 0x20	; 32
    3dd6:	82 b9       	out	0x02, r24	; 2
    3dd8:	81 b1       	in	r24, 0x01	; 1
    3dda:	80 64       	ori	r24, 0x40	; 64
    3ddc:	81 b9       	out	0x01, r24	; 1
    3dde:	82 b1       	in	r24, 0x02	; 2
    3de0:	80 64       	ori	r24, 0x40	; 64
    3de2:	82 b9       	out	0x02, r24	; 2
    3de4:	81 b1       	in	r24, 0x01	; 1
    3de6:	80 68       	ori	r24, 0x80	; 128
    3de8:	81 b9       	out	0x01, r24	; 1
    3dea:	82 b1       	in	r24, 0x02	; 2
    3dec:	80 68       	ori	r24, 0x80	; 128
    3dee:	82 b9       	out	0x02, r24	; 2
    3df0:	81 b1       	in	r24, 0x01	; 1
    3df2:	82 60       	ori	r24, 0x02	; 2
    3df4:	81 b9       	out	0x01, r24	; 1
    3df6:	82 b1       	in	r24, 0x02	; 2
    3df8:	82 60       	ori	r24, 0x02	; 2
    3dfa:	82 b9       	out	0x02, r24	; 2
    3dfc:	81 b1       	in	r24, 0x01	; 1
    3dfe:	84 60       	ori	r24, 0x04	; 4
    3e00:	81 b9       	out	0x01, r24	; 1
    3e02:	82 b1       	in	r24, 0x02	; 2
    3e04:	84 60       	ori	r24, 0x04	; 4
    3e06:	82 b9       	out	0x02, r24	; 2
    3e08:	81 b1       	in	r24, 0x01	; 1
    3e0a:	88 60       	ori	r24, 0x08	; 8
    3e0c:	81 b9       	out	0x01, r24	; 1
    3e0e:	82 b1       	in	r24, 0x02	; 2
    3e10:	88 60       	ori	r24, 0x08	; 8
    3e12:	82 b9       	out	0x02, r24	; 2
    3e14:	08 95       	ret

Disassembly of section .text.FLASH_NAND_CS_ENABLE:

0000468c <FLASH_NAND_CS_ENABLE>:
	PORTA |= (1 << PF3); //setting ~CS pin (PF3) high to de-select the slave device (we are not working on it yet)
}

void FLASH_NAND_CS_ENABLE() //enable the Chip Select of the FLASH NAND
{
	PORTA &= ~(1 << PA3); //~CS pin set low for selecting slave device
    468c:	82 b1       	in	r24, 0x02	; 2
    468e:	87 7f       	andi	r24, 0xF7	; 247
    4690:	82 b9       	out	0x02, r24	; 2
    4692:	08 95       	ret

Disassembly of section .text.FLASH_NAND_CS_DISABLE:

00004694 <FLASH_NAND_CS_DISABLE>:
}

void FLASH_NAND_CS_DISABLE() //disable the Chip Select of the FLASH NAND
{
	PORTA |= (1 << PA3); //~CS pin set high for de-selecting slave device; to end the command sequence
    4694:	82 b1       	in	r24, 0x02	; 2
    4696:	88 60       	ori	r24, 0x08	; 8
    4698:	82 b9       	out	0x02, r24	; 2
    469a:	08 95       	ret

Disassembly of section .text.Print_To_User:

00003398 <Print_To_User>:
	if (command)
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
}

void Print_To_User(int num_elements, int offset, const char *msg, const uint8_t *arr_start, uint8_t *arr_dest) //# of elements to print along with message, and to which array
{
    3398:	3f 92       	push	r3
    339a:	4f 92       	push	r4
    339c:	5f 92       	push	r5
    339e:	6f 92       	push	r6
    33a0:	7f 92       	push	r7
    33a2:	8f 92       	push	r8
    33a4:	9f 92       	push	r9
    33a6:	af 92       	push	r10
    33a8:	bf 92       	push	r11
    33aa:	cf 92       	push	r12
    33ac:	df 92       	push	r13
    33ae:	ef 92       	push	r14
    33b0:	ff 92       	push	r15
    33b2:	0f 93       	push	r16
    33b4:	1f 93       	push	r17
    33b6:	cf 93       	push	r28
    33b8:	df 93       	push	r29
    33ba:	5c 01       	movw	r10, r24
    33bc:	4b 01       	movw	r8, r22
    33be:	72 2e       	mov	r7, r18
    33c0:	13 2f       	mov	r17, r19
    33c2:	34 2e       	mov	r3, r20
    33c4:	27 01       	movw	r4, r14
    33c6:	60 2e       	mov	r6, r16
	for (int i = 0; i < num_elements; i++)
    33c8:	c0 e0       	ldi	r28, 0x00	; 0
    33ca:	d0 e0       	ldi	r29, 0x00	; 0
    33cc:	26 c0       	rjmp	.+76     	; 0x341a <Print_To_User+0x82>
	{
		sprintf(arr_dest, msg, arr_start[i + offset]);
    33ce:	ce 01       	movw	r24, r28
    33d0:	88 0d       	add	r24, r8
    33d2:	99 1d       	adc	r25, r9
    33d4:	46 2d       	mov	r20, r6
    33d6:	92 01       	movw	r18, r4
    33d8:	28 0f       	add	r18, r24
    33da:	39 1f       	adc	r19, r25
    33dc:	41 1d       	adc	r20, r1
    33de:	97 fd       	sbrc	r25, 7
    33e0:	4a 95       	dec	r20
    33e2:	a4 2f       	mov	r26, r20
    33e4:	c9 01       	movw	r24, r18
    33e6:	f9 01       	movw	r30, r18
    33e8:	5a 2f       	mov	r21, r26
    33ea:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    33ee:	1f 92       	push	r1
    33f0:	6f 93       	push	r22
    33f2:	3f 92       	push	r3
    33f4:	1f 93       	push	r17
    33f6:	7f 92       	push	r7
    33f8:	df 92       	push	r13
    33fa:	cf 92       	push	r12
    33fc:	0e 94 f2 21 	call	0x43e4	; 0x43e4 <sprintf>
		USART_Data(arr_dest);
    3400:	b6 01       	movw	r22, r12
    3402:	80 e8       	ldi	r24, 0x80	; 128
    3404:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
}

void Print_To_User(int num_elements, int offset, const char *msg, const uint8_t *arr_start, uint8_t *arr_dest) //# of elements to print along with message, and to which array
{
	for (int i = 0; i < num_elements; i++)
    3408:	21 96       	adiw	r28, 0x01	; 1
    340a:	8d b7       	in	r24, 0x3d	; 61
    340c:	9e b7       	in	r25, 0x3e	; 62
    340e:	07 96       	adiw	r24, 0x07	; 7
    3410:	0f b6       	in	r0, 0x3f	; 63
    3412:	f8 94       	cli
    3414:	9e bf       	out	0x3e, r25	; 62
    3416:	0f be       	out	0x3f, r0	; 63
    3418:	8d bf       	out	0x3d, r24	; 61
    341a:	ca 15       	cp	r28, r10
    341c:	db 05       	cpc	r29, r11
    341e:	bc f2       	brlt	.-82     	; 0x33ce <Print_To_User+0x36>
	{
		sprintf(arr_dest, msg, arr_start[i + offset]);
		USART_Data(arr_dest);
	}
}
    3420:	df 91       	pop	r29
    3422:	cf 91       	pop	r28
    3424:	1f 91       	pop	r17
    3426:	0f 91       	pop	r16
    3428:	ff 90       	pop	r15
    342a:	ef 90       	pop	r14
    342c:	df 90       	pop	r13
    342e:	cf 90       	pop	r12
    3430:	bf 90       	pop	r11
    3432:	af 90       	pop	r10
    3434:	9f 90       	pop	r9
    3436:	8f 90       	pop	r8
    3438:	7f 90       	pop	r7
    343a:	6f 90       	pop	r6
    343c:	5f 90       	pop	r5
    343e:	4f 90       	pop	r4
    3440:	3f 90       	pop	r3
    3442:	08 95       	ret

Disassembly of section .text.HEX_Verification:

00003170 <HEX_Verification>:
		}
	}
}

bool HEX_Verification() //verifies uint8_t (ASCII) to Hex validity and allocates in appropriated location
{
    3170:	cf 92       	push	r12
    3172:	df 92       	push	r13
    3174:	ef 92       	push	r14
    3176:	ff 92       	push	r15
    3178:	0f 93       	push	r16
	//parse the data into usable hex values
	for (int i = 0; i <= FLASH_NAND_ADDRESS_MAX; i++)
    317a:	80 e0       	ldi	r24, 0x00	; 0
    317c:	90 e0       	ldi	r25, 0x00	; 0
    317e:	45 c0       	rjmp	.+138    	; 0x320a <HEX_Verification+0x9a>
	{
		if (CommandBuffer[i] >= '0' && CommandBuffer[i] <= '9')
    3180:	fc 01       	movw	r30, r24
    3182:	e0 50       	subi	r30, 0x00	; 0
    3184:	fe 4f       	sbci	r31, 0xFE	; 254
    3186:	20 81       	ld	r18, Z
    3188:	30 ed       	ldi	r19, 0xD0	; 208
    318a:	32 0f       	add	r19, r18
    318c:	3a 30       	cpi	r19, 0x0A	; 10
    318e:	28 f4       	brcc	.+10     	; 0x319a <HEX_Verification+0x2a>
		{
			CommandBuffer[i] = CommandBuffer[i] - '0';
    3190:	fc 01       	movw	r30, r24
    3192:	e0 50       	subi	r30, 0x00	; 0
    3194:	fe 4f       	sbci	r31, 0xFE	; 254
    3196:	30 83       	st	Z, r19
    3198:	37 c0       	rjmp	.+110    	; 0x3208 <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] >= 'A' && CommandBuffer[i] <= 'F')
    319a:	3f eb       	ldi	r19, 0xBF	; 191
    319c:	32 0f       	add	r19, r18
    319e:	36 30       	cpi	r19, 0x06	; 6
    31a0:	30 f4       	brcc	.+12     	; 0x31ae <HEX_Verification+0x3e>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'A' + 10;
    31a2:	fc 01       	movw	r30, r24
    31a4:	e0 50       	subi	r30, 0x00	; 0
    31a6:	fe 4f       	sbci	r31, 0xFE	; 254
    31a8:	27 53       	subi	r18, 0x37	; 55
    31aa:	20 83       	st	Z, r18
    31ac:	2d c0       	rjmp	.+90     	; 0x3208 <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] >= 'a' && CommandBuffer[i] <= 'f')
    31ae:	3f e9       	ldi	r19, 0x9F	; 159
    31b0:	32 0f       	add	r19, r18
    31b2:	36 30       	cpi	r19, 0x06	; 6
    31b4:	30 f4       	brcc	.+12     	; 0x31c2 <HEX_Verification+0x52>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'a' + 10;
    31b6:	fc 01       	movw	r30, r24
    31b8:	e0 50       	subi	r30, 0x00	; 0
    31ba:	fe 4f       	sbci	r31, 0xFE	; 254
    31bc:	27 55       	subi	r18, 0x57	; 87
    31be:	20 83       	st	Z, r18
    31c0:	23 c0       	rjmp	.+70     	; 0x3208 <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] == '\r' || CommandBuffer[i] == '\n' || CommandBuffer[i] == '\0')
    31c2:	2d 30       	cpi	r18, 0x0D	; 13
    31c4:	41 f1       	breq	.+80     	; 0x3216 <HEX_Verification+0xa6>
    31c6:	2a 30       	cpi	r18, 0x0A	; 10
    31c8:	41 f1       	breq	.+80     	; 0x321a <HEX_Verification+0xaa>
    31ca:	22 23       	and	r18, r18
    31cc:	41 f1       	breq	.+80     	; 0x321e <HEX_Verification+0xae>
		{
			break;
		}
		else
		{
			USART_Data("Wrong Input \nMake sure input is HEX valid [0 - F] \n");
    31ce:	6a e7       	ldi	r22, 0x7A	; 122
    31d0:	71 e0       	ldi	r23, 0x01	; 1
    31d2:	80 e0       	ldi	r24, 0x00	; 0
    31d4:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			Print_To_User(1, 0, "Here is what was inputted: 0x%02X \n", CommandBuffer, status_feature);
    31d8:	80 e0       	ldi	r24, 0x00	; 0
    31da:	92 e0       	ldi	r25, 0x02	; 2
    31dc:	7c 01       	movw	r14, r24
    31de:	20 e8       	ldi	r18, 0x80	; 128
    31e0:	02 2f       	mov	r16, r18
    31e2:	0f 2e       	mov	r0, r31
    31e4:	f0 e0       	ldi	r31, 0x00	; 0
    31e6:	cf 2e       	mov	r12, r31
    31e8:	fa e0       	ldi	r31, 0x0A	; 10
    31ea:	df 2e       	mov	r13, r31
    31ec:	f0 2d       	mov	r31, r0
    31ee:	2e ea       	ldi	r18, 0xAE	; 174
    31f0:	31 e0       	ldi	r19, 0x01	; 1
    31f2:	40 e0       	ldi	r20, 0x00	; 0
    31f4:	60 e0       	ldi	r22, 0x00	; 0
    31f6:	70 e0       	ldi	r23, 0x00	; 0
    31f8:	81 e0       	ldi	r24, 0x01	; 1
    31fa:	90 e0       	ldi	r25, 0x00	; 0
    31fc:	0e 94 cc 19 	call	0x3398	; 0x3398 <Print_To_User>
			CLEAR_ARR();
    3200:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			return false; //return false, indicating failed test
    3204:	80 e0       	ldi	r24, 0x00	; 0
    3206:	0c c0       	rjmp	.+24     	; 0x3220 <HEX_Verification+0xb0>
}

bool HEX_Verification() //verifies uint8_t (ASCII) to Hex validity and allocates in appropriated location
{
	//parse the data into usable hex values
	for (int i = 0; i <= FLASH_NAND_ADDRESS_MAX; i++)
    3208:	01 96       	adiw	r24, 0x01	; 1
    320a:	86 30       	cpi	r24, 0x06	; 6
    320c:	91 05       	cpc	r25, r1
    320e:	0c f4       	brge	.+2      	; 0x3212 <HEX_Verification+0xa2>
    3210:	b7 cf       	rjmp	.-146    	; 0x3180 <HEX_Verification+0x10>
			Print_To_User(1, 0, "Here is what was inputted: 0x%02X \n", CommandBuffer, status_feature);
			CLEAR_ARR();
			return false; //return false, indicating failed test
		}
	}
	return true; //return true, indicating passed test
    3212:	81 e0       	ldi	r24, 0x01	; 1
    3214:	05 c0       	rjmp	.+10     	; 0x3220 <HEX_Verification+0xb0>
    3216:	81 e0       	ldi	r24, 0x01	; 1
    3218:	03 c0       	rjmp	.+6      	; 0x3220 <HEX_Verification+0xb0>
    321a:	81 e0       	ldi	r24, 0x01	; 1
    321c:	01 c0       	rjmp	.+2      	; 0x3220 <HEX_Verification+0xb0>
    321e:	81 e0       	ldi	r24, 0x01	; 1
	//Print_To_User(6, 0, "Parsed nibble: 0x%02X\n", CommandBuffer, status_feature); //troubleshooting, verifies if ASCII is converted to hex values
}
    3220:	0f 91       	pop	r16
    3222:	ff 90       	pop	r15
    3224:	ef 90       	pop	r14
    3226:	df 90       	pop	r13
    3228:	cf 90       	pop	r12
    322a:	08 95       	ret

Disassembly of section .text.NAND_Address_Checker:

00003c62 <NAND_Address_Checker>:

void NAND_Address_Checker() //returns user the Column and Block/Page Addresses
{
    3c62:	6f 92       	push	r6
    3c64:	7f 92       	push	r7
    3c66:	8f 92       	push	r8
    3c68:	cf 92       	push	r12
    3c6a:	df 92       	push	r13
    3c6c:	ef 92       	push	r14
    3c6e:	ff 92       	push	r15
    3c70:	0f 93       	push	r16
	USART_Data("---Column Address--- 2 bytes \n");
    3c72:	62 ed       	ldi	r22, 0xD2	; 210
    3c74:	71 e0       	ldi	r23, 0x01	; 1
    3c76:	80 e0       	ldi	r24, 0x00	; 0
    3c78:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
	Print_To_User(COLUMN_ADDRESS, 0, "0x%02X \n", Byte_Address, status_feature);
    3c7c:	86 e2       	ldi	r24, 0x26	; 38
    3c7e:	92 e1       	ldi	r25, 0x12	; 18
    3c80:	3c 01       	movw	r6, r24
    3c82:	20 e8       	ldi	r18, 0x80	; 128
    3c84:	82 2e       	mov	r8, r18
    3c86:	0f 2e       	mov	r0, r31
    3c88:	f0 e0       	ldi	r31, 0x00	; 0
    3c8a:	cf 2e       	mov	r12, r31
    3c8c:	fa e0       	ldi	r31, 0x0A	; 10
    3c8e:	df 2e       	mov	r13, r31
    3c90:	f0 2d       	mov	r31, r0
    3c92:	08 2d       	mov	r16, r8
    3c94:	73 01       	movw	r14, r6
    3c96:	21 ef       	ldi	r18, 0xF1	; 241
    3c98:	31 e0       	ldi	r19, 0x01	; 1
    3c9a:	40 e0       	ldi	r20, 0x00	; 0
    3c9c:	60 e0       	ldi	r22, 0x00	; 0
    3c9e:	70 e0       	ldi	r23, 0x00	; 0
    3ca0:	82 e0       	ldi	r24, 0x02	; 2
    3ca2:	90 e0       	ldi	r25, 0x00	; 0
    3ca4:	0e 94 cc 19 	call	0x3398	; 0x3398 <Print_To_User>

	USART_Data("---Block/Page Address--- 3 bytes \n");	
    3ca8:	6a ef       	ldi	r22, 0xFA	; 250
    3caa:	71 e0       	ldi	r23, 0x01	; 1
    3cac:	80 e0       	ldi	r24, 0x00	; 0
    3cae:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
	Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "0x%02X \n", Byte_Address, status_feature);
    3cb2:	21 ef       	ldi	r18, 0xF1	; 241
    3cb4:	31 e0       	ldi	r19, 0x01	; 1
    3cb6:	40 e0       	ldi	r20, 0x00	; 0
    3cb8:	62 e0       	ldi	r22, 0x02	; 2
    3cba:	70 e0       	ldi	r23, 0x00	; 0
    3cbc:	83 e0       	ldi	r24, 0x03	; 3
    3cbe:	90 e0       	ldi	r25, 0x00	; 0
    3cc0:	0e 94 cc 19 	call	0x3398	; 0x3398 <Print_To_User>
}
    3cc4:	0f 91       	pop	r16
    3cc6:	ff 90       	pop	r15
    3cc8:	ef 90       	pop	r14
    3cca:	df 90       	pop	r13
    3ccc:	cf 90       	pop	r12
    3cce:	8f 90       	pop	r8
    3cd0:	7f 90       	pop	r7
    3cd2:	6f 90       	pop	r6
    3cd4:	08 95       	ret

Disassembly of section .text.ExecuteCommand:

00001bcc <ExecuteCommand>:

void ExecuteCommand(const uint8_t *str) //Execute Command Line function
{
    1bcc:	6f 92       	push	r6
    1bce:	7f 92       	push	r7
    1bd0:	8f 92       	push	r8
    1bd2:	cf 92       	push	r12
    1bd4:	df 92       	push	r13
    1bd6:	ef 92       	push	r14
    1bd8:	ff 92       	push	r15
    1bda:	0f 93       	push	r16
    1bdc:	1f 93       	push	r17
    1bde:	cf 93       	push	r28
    1be0:	df 93       	push	r29
    1be2:	6b 01       	movw	r12, r22
    1be4:	e8 2e       	mov	r14, r24
	if (strcmp(str, "Flash ID") == 0) //Flash ID Command
    1be6:	2d e1       	ldi	r18, 0x1D	; 29
    1be8:	32 e0       	ldi	r19, 0x02	; 2
    1bea:	40 e0       	ldi	r20, 0x00	; 0
    1bec:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1bf0:	89 2b       	or	r24, r25
    1bf2:	29 f4       	brne	.+10     	; 0x1bfe <ExecuteCommand+0x32>
	{
		CLEAR_ARR();
    1bf4:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
		FLASH_ID(); //reads Device ID
    1bf8:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <FLASH_ID>
    1bfc:	0f c2       	rjmp	.+1054   	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
	}
	
	else if (strcmp(str, "NAND Addresses") == 0) //Tells user what is Column and Block/Page Addresses
    1bfe:	26 e2       	ldi	r18, 0x26	; 38
    1c00:	32 e0       	ldi	r19, 0x02	; 2
    1c02:	40 e0       	ldi	r20, 0x00	; 0
    1c04:	8e 2d       	mov	r24, r14
    1c06:	b6 01       	movw	r22, r12
    1c08:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1c0c:	89 2b       	or	r24, r25
    1c0e:	19 f4       	brne	.+6      	; 0x1c16 <ExecuteCommand+0x4a>
	{
		NAND_Address_Checker();
    1c10:	0e 94 31 1e 	call	0x3c62	; 0x3c62 <NAND_Address_Checker>
    1c14:	03 c2       	rjmp	.+1030   	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
	}
	
	else if (strcmp(str, "Parameter Page") == 0) //Basic Read Test Command
    1c16:	25 e3       	ldi	r18, 0x35	; 53
    1c18:	32 e0       	ldi	r19, 0x02	; 2
    1c1a:	40 e0       	ldi	r20, 0x00	; 0
    1c1c:	8e 2d       	mov	r24, r14
    1c1e:	b6 01       	movw	r22, r12
    1c20:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1c24:	89 2b       	or	r24, r25
    1c26:	99 f5       	brne	.+102    	; 0x1c8e <ExecuteCommand+0xc2>
	{
		s = 1; //sets main array address to the correct place
    1c28:	81 e0       	ldi	r24, 0x01	; 1
    1c2a:	90 e0       	ldi	r25, 0x00	; 0
    1c2c:	90 93 25 12 	sts	0x1225, r25	; 0x801225 <s+0x1>
    1c30:	80 93 24 12 	sts	0x1224, r24	; 0x801224 <s>
		CLEAR_ARR();
    1c34:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
		FLASH_Para_Pg();
    1c38:	0e 94 97 1f 	call	0x3f2e	; 0x3f2e <FLASH_Para_Pg>
		
		//reading data from Data array
		//Print_To_User(PARAMETER_PAGE_SIZE, 0, "%i->Data Received: 0x%02X \n", data, status_feature);
		
		for (int i = 0; i < PARAMETER_PAGE_SIZE; i++) //address is incremented automatically after each byte is shifted out
    1c3c:	c0 e0       	ldi	r28, 0x00	; 0
    1c3e:	d0 e0       	ldi	r29, 0x00	; 0
    1c40:	21 c0       	rjmp	.+66     	; 0x1c84 <ExecuteCommand+0xb8>
		{
			sprintf(status_feature, "%i->Data Received: 0x%02X \n", i, data[i]); //hex data to string
    1c42:	fe 01       	movw	r30, r28
    1c44:	e1 5e       	subi	r30, 0xE1	; 225
    1c46:	f5 4f       	sbci	r31, 0xF5	; 245
    1c48:	80 81       	ld	r24, Z
    1c4a:	1f 92       	push	r1
    1c4c:	8f 93       	push	r24
    1c4e:	df 93       	push	r29
    1c50:	cf 93       	push	r28
    1c52:	84 e4       	ldi	r24, 0x44	; 68
    1c54:	92 e0       	ldi	r25, 0x02	; 2
    1c56:	a0 e0       	ldi	r26, 0x00	; 0
    1c58:	af 93       	push	r26
    1c5a:	9f 93       	push	r25
    1c5c:	8f 93       	push	r24
    1c5e:	00 e0       	ldi	r16, 0x00	; 0
    1c60:	1a e0       	ldi	r17, 0x0A	; 10
    1c62:	1f 93       	push	r17
    1c64:	0f 93       	push	r16
    1c66:	0e 94 df 21 	call	0x43be	; 0x43be <_sprintf_cdnopuxX>
			USART_Data(status_feature);
    1c6a:	b8 01       	movw	r22, r16
    1c6c:	80 e8       	ldi	r24, 0x80	; 128
    1c6e:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		FLASH_Para_Pg();
		
		//reading data from Data array
		//Print_To_User(PARAMETER_PAGE_SIZE, 0, "%i->Data Received: 0x%02X \n", data, status_feature);
		
		for (int i = 0; i < PARAMETER_PAGE_SIZE; i++) //address is incremented automatically after each byte is shifted out
    1c72:	21 96       	adiw	r28, 0x01	; 1
    1c74:	8d b7       	in	r24, 0x3d	; 61
    1c76:	9e b7       	in	r25, 0x3e	; 62
    1c78:	09 96       	adiw	r24, 0x09	; 9
    1c7a:	0f b6       	in	r0, 0x3f	; 63
    1c7c:	f8 94       	cli
    1c7e:	9e bf       	out	0x3e, r25	; 62
    1c80:	0f be       	out	0x3f, r0	; 63
    1c82:	8d bf       	out	0x3d, r24	; 61
    1c84:	cf 3f       	cpi	r28, 0xFF	; 255
    1c86:	d1 05       	cpc	r29, r1
    1c88:	e1 f2       	breq	.-72     	; 0x1c42 <ExecuteCommand+0x76>
    1c8a:	dc f2       	brlt	.-74     	; 0x1c42 <ExecuteCommand+0x76>
    1c8c:	c7 c1       	rjmp	.+910    	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
			sprintf(status_feature, "%i->Data Received: 0x%02X \n", i, data[i]); //hex data to string
			USART_Data(status_feature);
		}	
	}
	
	else if (strcmp(str, "Feature Registers") == 0) //leads user to the Feature registers of the device
    1c8e:	20 e6       	ldi	r18, 0x60	; 96
    1c90:	32 e0       	ldi	r19, 0x02	; 2
    1c92:	40 e0       	ldi	r20, 0x00	; 0
    1c94:	8e 2d       	mov	r24, r14
    1c96:	b6 01       	movw	r22, r12
    1c98:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1c9c:	89 2b       	or	r24, r25
    1c9e:	09 f0       	breq	.+2      	; 0x1ca2 <ExecuteCommand+0xd6>
    1ca0:	b5 c0       	rjmp	.+362    	; 0x1e0c <ExecuteCommand+0x240>
	{
		CLEAR_ARR();
    1ca2:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
		
		USART_Data("1) Block Lock \n");
    1ca6:	62 e7       	ldi	r22, 0x72	; 114
    1ca8:	72 e0       	ldi	r23, 0x02	; 2
    1caa:	80 e0       	ldi	r24, 0x00	; 0
    1cac:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("2) Configuration \n");
    1cb0:	62 e8       	ldi	r22, 0x82	; 130
    1cb2:	72 e0       	ldi	r23, 0x02	; 2
    1cb4:	80 e0       	ldi	r24, 0x00	; 0
    1cb6:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("3) Status \n");
    1cba:	65 e9       	ldi	r22, 0x95	; 149
    1cbc:	72 e0       	ldi	r23, 0x02	; 2
    1cbe:	80 e0       	ldi	r24, 0x00	; 0
    1cc0:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("4) Die Select \n");
    1cc4:	61 ea       	ldi	r22, 0xA1	; 161
    1cc6:	72 e0       	ldi	r23, 0x02	; 2
    1cc8:	80 e0       	ldi	r24, 0x00	; 0
    1cca:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		
		UserInput(false);
    1cce:	80 e0       	ldi	r24, 0x00	; 0
    1cd0:	0e 94 16 19 	call	0x322c	; 0x322c <UserInput>
		
		if (strcmp(CommandBuffer, "Block Lock") == 0) //goes to Block Lock Register
    1cd4:	80 e0       	ldi	r24, 0x00	; 0
    1cd6:	92 e0       	ldi	r25, 0x02	; 2
    1cd8:	6c 01       	movw	r12, r24
    1cda:	20 e8       	ldi	r18, 0x80	; 128
    1cdc:	e2 2e       	mov	r14, r18
    1cde:	21 eb       	ldi	r18, 0xB1	; 177
    1ce0:	32 e0       	ldi	r19, 0x02	; 2
    1ce2:	40 e0       	ldi	r20, 0x00	; 0
    1ce4:	8e 2d       	mov	r24, r14
    1ce6:	b6 01       	movw	r22, r12
    1ce8:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1cec:	89 2b       	or	r24, r25
    1cee:	09 f0       	breq	.+2      	; 0x1cf2 <ExecuteCommand+0x126>
    1cf0:	53 c0       	rjmp	.+166    	; 0x1d98 <ExecuteCommand+0x1cc>
		{
			CLEAR_ARR();
    1cf2:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			
			USART_Data("1) Lock \n");
    1cf6:	6c eb       	ldi	r22, 0xBC	; 188
    1cf8:	72 e0       	ldi	r23, 0x02	; 2
    1cfa:	80 e0       	ldi	r24, 0x00	; 0
    1cfc:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			USART_Data("2) Unlock \n");
    1d00:	66 ec       	ldi	r22, 0xC6	; 198
    1d02:	72 e0       	ldi	r23, 0x02	; 2
    1d04:	80 e0       	ldi	r24, 0x00	; 0
    1d06:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			USART_Data("3) Read \n");
    1d0a:	62 ed       	ldi	r22, 0xD2	; 210
    1d0c:	72 e0       	ldi	r23, 0x02	; 2
    1d0e:	80 e0       	ldi	r24, 0x00	; 0
    1d10:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			USART_Data("4) Configure \n");
    1d14:	6c ed       	ldi	r22, 0xDC	; 220
    1d16:	72 e0       	ldi	r23, 0x02	; 2
    1d18:	80 e0       	ldi	r24, 0x00	; 0
    1d1a:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			
			UserInput(false); //User Input is added into an array, which will be written to memory
    1d1e:	80 e0       	ldi	r24, 0x00	; 0
    1d20:	0e 94 16 19 	call	0x322c	; 0x322c <UserInput>
			
			if (strcmp(CommandBuffer, "Lock") == 0) //Locks Flash Device
    1d24:	2b ee       	ldi	r18, 0xEB	; 235
    1d26:	32 e0       	ldi	r19, 0x02	; 2
    1d28:	40 e0       	ldi	r20, 0x00	; 0
    1d2a:	8e 2d       	mov	r24, r14
    1d2c:	b6 01       	movw	r22, r12
    1d2e:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1d32:	89 2b       	or	r24, r25
    1d34:	21 f4       	brne	.+8      	; 0x1d3e <ExecuteCommand+0x172>
			{
				FLASH_Block_Lock_Setter(true);
    1d36:	81 e0       	ldi	r24, 0x01	; 1
    1d38:	0e 94 6b 1e 	call	0x3cd6	; 0x3cd6 <FLASH_Block_Lock_Setter>
    1d3c:	6f c1       	rjmp	.+734    	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
			}
			else if (strcmp(CommandBuffer, "Unlock") == 0) //Unlocks Flash Device
    1d3e:	20 ef       	ldi	r18, 0xF0	; 240
    1d40:	32 e0       	ldi	r19, 0x02	; 2
    1d42:	40 e0       	ldi	r20, 0x00	; 0
    1d44:	8e 2d       	mov	r24, r14
    1d46:	b6 01       	movw	r22, r12
    1d48:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1d4c:	89 2b       	or	r24, r25
    1d4e:	21 f4       	brne	.+8      	; 0x1d58 <ExecuteCommand+0x18c>
			{
				FLASH_Block_Lock_Setter(false);
    1d50:	80 e0       	ldi	r24, 0x00	; 0
    1d52:	0e 94 6b 1e 	call	0x3cd6	; 0x3cd6 <FLASH_Block_Lock_Setter>
    1d56:	62 c1       	rjmp	.+708    	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
			}
			else if (strcmp(CommandBuffer, "Read") == 0) //Read Block Lock Register
    1d58:	27 ef       	ldi	r18, 0xF7	; 247
    1d5a:	32 e0       	ldi	r19, 0x02	; 2
    1d5c:	40 e0       	ldi	r20, 0x00	; 0
    1d5e:	8e 2d       	mov	r24, r14
    1d60:	b6 01       	movw	r22, r12
    1d62:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1d66:	89 2b       	or	r24, r25
    1d68:	21 f4       	brne	.+8      	; 0x1d72 <ExecuteCommand+0x1a6>
			{
				FLASH_Block_Lock(false);
    1d6a:	80 e0       	ldi	r24, 0x00	; 0
    1d6c:	0e 94 22 1a 	call	0x3444	; 0x3444 <FLASH_Block_Lock>
    1d70:	55 c1       	rjmp	.+682    	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
			}
			else if (strcmp(CommandBuffer, "Configure") == 0) //Configure Block Lock Register
    1d72:	2c ef       	ldi	r18, 0xFC	; 252
    1d74:	32 e0       	ldi	r19, 0x02	; 2
    1d76:	40 e0       	ldi	r20, 0x00	; 0
    1d78:	8e 2d       	mov	r24, r14
    1d7a:	b6 01       	movw	r22, r12
    1d7c:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1d80:	89 2b       	or	r24, r25
    1d82:	21 f4       	brne	.+8      	; 0x1d8c <ExecuteCommand+0x1c0>
			{
				FLASH_Block_Lock(true);
    1d84:	81 e0       	ldi	r24, 0x01	; 1
    1d86:	0e 94 22 1a 	call	0x3444	; 0x3444 <FLASH_Block_Lock>
    1d8a:	48 c1       	rjmp	.+656    	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
			}
			else 
			{
				ExecuteCommand("Feature Registers");
    1d8c:	60 e6       	ldi	r22, 0x60	; 96
    1d8e:	72 e0       	ldi	r23, 0x02	; 2
    1d90:	80 e0       	ldi	r24, 0x00	; 0
    1d92:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <ExecuteCommand>
    1d96:	42 c1       	rjmp	.+644    	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
			}
		}
		
		else if (strcmp(CommandBuffer, "Configuration") == 0) //goes to the Configuration Register
    1d98:	26 e0       	ldi	r18, 0x06	; 6
    1d9a:	33 e0       	ldi	r19, 0x03	; 3
    1d9c:	40 e0       	ldi	r20, 0x00	; 0
    1d9e:	8e 2d       	mov	r24, r14
    1da0:	b6 01       	movw	r22, r12
    1da2:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1da6:	89 2b       	or	r24, r25
    1da8:	51 f4       	brne	.+20     	; 0x1dbe <ExecuteCommand+0x1f2>
		{
			CLEAR_ARR();
    1daa:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			FLASH_Configuration(); //get Configuration Register Data
    1dae:	0e 94 f4 1d 	call	0x3be8	; 0x3be8 <FLASH_Configuration>
			ExecuteCommand("Feature Registers");
    1db2:	60 e6       	ldi	r22, 0x60	; 96
    1db4:	72 e0       	ldi	r23, 0x02	; 2
    1db6:	80 e0       	ldi	r24, 0x00	; 0
    1db8:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <ExecuteCommand>
    1dbc:	2f c1       	rjmp	.+606    	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
		}
		
		else if (strcmp(CommandBuffer, "Status") == 0) //goes to the Status Register
    1dbe:	24 e1       	ldi	r18, 0x14	; 20
    1dc0:	33 e0       	ldi	r19, 0x03	; 3
    1dc2:	40 e0       	ldi	r20, 0x00	; 0
    1dc4:	8e 2d       	mov	r24, r14
    1dc6:	b6 01       	movw	r22, r12
    1dc8:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1dcc:	89 2b       	or	r24, r25
    1dce:	51 f4       	brne	.+20     	; 0x1de4 <ExecuteCommand+0x218>
		{
			CLEAR_ARR();
    1dd0:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			FLASH_Status(); //reads status register
    1dd4:	0e 94 77 1d 	call	0x3aee	; 0x3aee <FLASH_Status>
			
			ExecuteCommand("Feature Registers");
    1dd8:	60 e6       	ldi	r22, 0x60	; 96
    1dda:	72 e0       	ldi	r23, 0x02	; 2
    1ddc:	80 e0       	ldi	r24, 0x00	; 0
    1dde:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <ExecuteCommand>
    1de2:	1c c1       	rjmp	.+568    	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
		}
		
		else if (strcmp(CommandBuffer, "Die Select") == 0) //goes to the Die Register
    1de4:	2b e1       	ldi	r18, 0x1B	; 27
    1de6:	33 e0       	ldi	r19, 0x03	; 3
    1de8:	40 e0       	ldi	r20, 0x00	; 0
    1dea:	8e 2d       	mov	r24, r14
    1dec:	b6 01       	movw	r22, r12
    1dee:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1df2:	89 2b       	or	r24, r25
    1df4:	09 f0       	breq	.+2      	; 0x1df8 <ExecuteCommand+0x22c>
    1df6:	12 c1       	rjmp	.+548    	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
		{
			CLEAR_ARR();
    1df8:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			FLASH_Die_Selection(); //at the moment only reads to this
    1dfc:	0e 94 b7 1d 	call	0x3b6e	; 0x3b6e <FLASH_Die_Selection>
			ExecuteCommand("Feature Registers");
    1e00:	60 e6       	ldi	r22, 0x60	; 96
    1e02:	72 e0       	ldi	r23, 0x02	; 2
    1e04:	80 e0       	ldi	r24, 0x00	; 0
    1e06:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <ExecuteCommand>
    1e0a:	08 c1       	rjmp	.+528    	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
		}
	}
	
	else if (strcmp(str, "Test Methods") == 0) //this holds test methods of the device
    1e0c:	26 e2       	ldi	r18, 0x26	; 38
    1e0e:	33 e0       	ldi	r19, 0x03	; 3
    1e10:	40 e0       	ldi	r20, 0x00	; 0
    1e12:	8e 2d       	mov	r24, r14
    1e14:	b6 01       	movw	r22, r12
    1e16:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1e1a:	89 2b       	or	r24, r25
    1e1c:	09 f0       	breq	.+2      	; 0x1e20 <ExecuteCommand+0x254>
    1e1e:	d2 c0       	rjmp	.+420    	; 0x1fc4 <ExecuteCommand+0x3f8>
	{
		CLEAR_ARR();
    1e20:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
		
		USART_Data("1) Write Test \n");
    1e24:	63 e3       	ldi	r22, 0x33	; 51
    1e26:	73 e0       	ldi	r23, 0x03	; 3
    1e28:	80 e0       	ldi	r24, 0x00	; 0
    1e2a:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("2) Read Test \n");
    1e2e:	63 e4       	ldi	r22, 0x43	; 67
    1e30:	73 e0       	ldi	r23, 0x03	; 3
    1e32:	80 e0       	ldi	r24, 0x00	; 0
    1e34:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("3) Erase Test \n");
    1e38:	62 e5       	ldi	r22, 0x52	; 82
    1e3a:	73 e0       	ldi	r23, 0x03	; 3
    1e3c:	80 e0       	ldi	r24, 0x00	; 0
    1e3e:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("4) Block Checker \n");
    1e42:	62 e6       	ldi	r22, 0x62	; 98
    1e44:	73 e0       	ldi	r23, 0x03	; 3
    1e46:	80 e0       	ldi	r24, 0x00	; 0
    1e48:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("5) Page Checker \n");
    1e4c:	65 e7       	ldi	r22, 0x75	; 117
    1e4e:	73 e0       	ldi	r23, 0x03	; 3
    1e50:	80 e0       	ldi	r24, 0x00	; 0
    1e52:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		
		UserInput(false);
    1e56:	80 e0       	ldi	r24, 0x00	; 0
    1e58:	0e 94 16 19 	call	0x322c	; 0x322c <UserInput>
		
		if (strcmp(CommandBuffer, "Write Test") == 0) //write to memory test
    1e5c:	80 e0       	ldi	r24, 0x00	; 0
    1e5e:	92 e0       	ldi	r25, 0x02	; 2
    1e60:	3c 01       	movw	r6, r24
    1e62:	20 e8       	ldi	r18, 0x80	; 128
    1e64:	82 2e       	mov	r8, r18
    1e66:	27 e8       	ldi	r18, 0x87	; 135
    1e68:	33 e0       	ldi	r19, 0x03	; 3
    1e6a:	40 e0       	ldi	r20, 0x00	; 0
    1e6c:	88 2d       	mov	r24, r8
    1e6e:	b3 01       	movw	r22, r6
    1e70:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1e74:	89 2b       	or	r24, r25
    1e76:	a9 f5       	brne	.+106    	; 0x1ee2 <ExecuteCommand+0x316>
		{
			s = 0;
    1e78:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1e7c:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
			CLEAR_ARR();
    1e80:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			
			UserInput(false); //User Input is added into an array, which will be written to memory
    1e84:	80 e0       	ldi	r24, 0x00	; 0
    1e86:	0e 94 16 19 	call	0x322c	; 0x322c <UserInput>
			
			USART_Data("---Column Address--- 2 bytes \n");
    1e8a:	62 ed       	ldi	r22, 0xD2	; 210
    1e8c:	71 e0       	ldi	r23, 0x01	; 1
    1e8e:	80 e0       	ldi	r24, 0x00	; 0
    1e90:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			COLUMN_BLOCK_PAGE_ADDRESSER(false);
    1e94:	80 e0       	ldi	r24, 0x00	; 0
    1e96:	0e 94 d2 12 	call	0x25a4	; 0x25a4 <COLUMN_BLOCK_PAGE_ADDRESSER>

			USART_Data("---Block/Page Address--- 3 bytes \n");
    1e9a:	6a ef       	ldi	r22, 0xFA	; 250
    1e9c:	71 e0       	ldi	r23, 0x01	; 1
    1e9e:	80 e0       	ldi	r24, 0x00	; 0
    1ea0:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			COLUMN_BLOCK_PAGE_ADDRESSER(true);
    1ea4:	81 e0       	ldi	r24, 0x01	; 1
    1ea6:	0e 94 d2 12 	call	0x25a4	; 0x25a4 <COLUMN_BLOCK_PAGE_ADDRESSER>
			
			Print_To_User(FLASH_NAND_ADDRESS_MAX, 0, "Here is what was inputted: 0x%02X \n", Byte_Address, status_feature);
    1eaa:	86 e2       	ldi	r24, 0x26	; 38
    1eac:	92 e1       	ldi	r25, 0x12	; 18
    1eae:	7c 01       	movw	r14, r24
    1eb0:	20 e8       	ldi	r18, 0x80	; 128
    1eb2:	02 2f       	mov	r16, r18
    1eb4:	0f 2e       	mov	r0, r31
    1eb6:	f0 e0       	ldi	r31, 0x00	; 0
    1eb8:	cf 2e       	mov	r12, r31
    1eba:	fa e0       	ldi	r31, 0x0A	; 10
    1ebc:	df 2e       	mov	r13, r31
    1ebe:	f0 2d       	mov	r31, r0
    1ec0:	2e ea       	ldi	r18, 0xAE	; 174
    1ec2:	31 e0       	ldi	r19, 0x01	; 1
    1ec4:	40 e0       	ldi	r20, 0x00	; 0
    1ec6:	60 e0       	ldi	r22, 0x00	; 0
    1ec8:	70 e0       	ldi	r23, 0x00	; 0
    1eca:	85 e0       	ldi	r24, 0x05	; 5
    1ecc:	90 e0       	ldi	r25, 0x00	; 0
    1ece:	0e 94 cc 19 	call	0x3398	; 0x3398 <Print_To_User>
			
			FLASH_Page_Program(); //adds user input into Flash Write Function, to memory...
    1ed2:	0e 94 36 1d 	call	0x3a6c	; 0x3a6c <FLASH_Page_Program>
			
			ExecuteCommand("Test Methods");
    1ed6:	66 e2       	ldi	r22, 0x26	; 38
    1ed8:	73 e0       	ldi	r23, 0x03	; 3
    1eda:	80 e0       	ldi	r24, 0x00	; 0
    1edc:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <ExecuteCommand>
    1ee0:	9d c0       	rjmp	.+314    	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
		}
		
		else if (strcmp(CommandBuffer, "Read Test") == 0) //read from memory test
    1ee2:	22 e9       	ldi	r18, 0x92	; 146
    1ee4:	33 e0       	ldi	r19, 0x03	; 3
    1ee6:	40 e0       	ldi	r20, 0x00	; 0
    1ee8:	88 2d       	mov	r24, r8
    1eea:	b3 01       	movw	r22, r6
    1eec:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1ef0:	89 2b       	or	r24, r25
    1ef2:	b1 f4       	brne	.+44     	; 0x1f20 <ExecuteCommand+0x354>
		{
			s = 0; //sets main array to normal operations
    1ef4:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1ef8:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
			CLEAR_ARR();
    1efc:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			FLASH_Page_Read();
    1f00:	0e 94 d4 20 	call	0x41a8	; 0x41a8 <FLASH_Page_Read>

			USART_Data(data);
    1f04:	6f e1       	ldi	r22, 0x1F	; 31
    1f06:	7a e0       	ldi	r23, 0x0A	; 10
    1f08:	80 e8       	ldi	r24, 0x80	; 128
    1f0a:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			USART_TX_Data('\n');
    1f0e:	8a e0       	ldi	r24, 0x0A	; 10
    1f10:	0e 94 f0 22 	call	0x45e0	; 0x45e0 <USART_TX_Data>
			
			ExecuteCommand("Test Methods");
    1f14:	66 e2       	ldi	r22, 0x26	; 38
    1f16:	73 e0       	ldi	r23, 0x03	; 3
    1f18:	80 e0       	ldi	r24, 0x00	; 0
    1f1a:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <ExecuteCommand>
    1f1e:	7e c0       	rjmp	.+252    	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
		}
		
		else if (strcmp(CommandBuffer, "Erase Test") == 0) //erases by blocks
    1f20:	2c e9       	ldi	r18, 0x9C	; 156
    1f22:	33 e0       	ldi	r19, 0x03	; 3
    1f24:	40 e0       	ldi	r20, 0x00	; 0
    1f26:	88 2d       	mov	r24, r8
    1f28:	b3 01       	movw	r22, r6
    1f2a:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1f2e:	89 2b       	or	r24, r25
    1f30:	71 f4       	brne	.+28     	; 0x1f4e <ExecuteCommand+0x382>
		{
			s = 0; //sets main array address to normal operation
    1f32:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1f36:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
			CLEAR_ARR();
    1f3a:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			FLASH_Block_Erase(); //Erases Flash Block
    1f3e:	0e 94 42 21 	call	0x4284	; 0x4284 <FLASH_Block_Erase>
			
			ExecuteCommand("Test Methods");
    1f42:	66 e2       	ldi	r22, 0x26	; 38
    1f44:	73 e0       	ldi	r23, 0x03	; 3
    1f46:	80 e0       	ldi	r24, 0x00	; 0
    1f48:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <ExecuteCommand>
    1f4c:	67 c0       	rjmp	.+206    	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
		}
		
		//this might stick as part of the main options, but its mostly meant for debugging bad blocks...
		else if (strcmp(CommandBuffer, "Block Checker") == 0) //verifies availability of the block
    1f4e:	27 ea       	ldi	r18, 0xA7	; 167
    1f50:	33 e0       	ldi	r19, 0x03	; 3
    1f52:	40 e0       	ldi	r20, 0x00	; 0
    1f54:	88 2d       	mov	r24, r8
    1f56:	b3 01       	movw	r22, r6
    1f58:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1f5c:	89 2b       	or	r24, r25
    1f5e:	e9 f4       	brne	.+58     	; 0x1f9a <ExecuteCommand+0x3ce>
		{
			s = 0;
    1f60:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1f64:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
			CLEAR_ARR();
    1f68:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
			FLASH_Page_Read();
    1f6c:	0e 94 d4 20 	call	0x41a8	; 0x41a8 <FLASH_Page_Read>

			if (HEX_ID[0] != 0xFF)
    1f70:	80 91 1f 12 	lds	r24, 0x121F	; 0x80121f <HEX_ID>
    1f74:	8f 3f       	cpi	r24, 0xFF	; 255
    1f76:	31 f0       	breq	.+12     	; 0x1f84 <ExecuteCommand+0x3b8>
			{
				USART_Data("Block is marked bad\n");
    1f78:	65 eb       	ldi	r22, 0xB5	; 181
    1f7a:	73 e0       	ldi	r23, 0x03	; 3
    1f7c:	80 e0       	ldi	r24, 0x00	; 0
    1f7e:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
    1f82:	05 c0       	rjmp	.+10     	; 0x1f8e <ExecuteCommand+0x3c2>
			}
			else
			{
				USART_Data("Block appears clean\n");
    1f84:	6a ec       	ldi	r22, 0xCA	; 202
    1f86:	73 e0       	ldi	r23, 0x03	; 3
    1f88:	80 e0       	ldi	r24, 0x00	; 0
    1f8a:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			}
			
			ExecuteCommand("Test Methods");
    1f8e:	66 e2       	ldi	r22, 0x26	; 38
    1f90:	73 e0       	ldi	r23, 0x03	; 3
    1f92:	80 e0       	ldi	r24, 0x00	; 0
    1f94:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <ExecuteCommand>
    1f98:	41 c0       	rjmp	.+130    	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
		}
		
		//meant for debugging bad pages in block...
		else if (strcmp(str, "Page Checker") == 0) //determines if page is good or bad...
    1f9a:	2f ed       	ldi	r18, 0xDF	; 223
    1f9c:	33 e0       	ldi	r19, 0x03	; 3
    1f9e:	40 e0       	ldi	r20, 0x00	; 0
    1fa0:	8e 2d       	mov	r24, r14
    1fa2:	b6 01       	movw	r22, r12
    1fa4:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1fa8:	89 2b       	or	r24, r25
    1faa:	c1 f5       	brne	.+112    	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
		{
			s = 0;
    1fac:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1fb0:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
			Page_Tester();
    1fb4:	0e 94 58 18 	call	0x30b0	; 0x30b0 <Page_Tester>
			
			ExecuteCommand("Test Methods");
    1fb8:	66 e2       	ldi	r22, 0x26	; 38
    1fba:	73 e0       	ldi	r23, 0x03	; 3
    1fbc:	80 e0       	ldi	r24, 0x00	; 0
    1fbe:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <ExecuteCommand>
    1fc2:	2c c0       	rjmp	.+88     	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
		}
	}
	
	else if (strcmp(str, "Reset") == 0) //Basic Read Test Command
    1fc4:	2c ee       	ldi	r18, 0xEC	; 236
    1fc6:	33 e0       	ldi	r19, 0x03	; 3
    1fc8:	40 e0       	ldi	r20, 0x00	; 0
    1fca:	8e 2d       	mov	r24, r14
    1fcc:	b6 01       	movw	r22, r12
    1fce:	0e 94 52 20 	call	0x40a4	; 0x40a4 <strcmp>
    1fd2:	89 2b       	or	r24, r25
    1fd4:	29 f4       	brne	.+10     	; 0x1fe0 <ExecuteCommand+0x414>
	{
		CLEAR_ARR();
    1fd6:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
		FLASH_Reset();
    1fda:	0e 94 4a 22 	call	0x4494	; 0x4494 <FLASH_Reset>
    1fde:	1e c0       	rjmp	.+60     	; 0x201c <__DATA_REGION_LENGTH__+0x1c>
	}
	
	else
	{
		USART_Data("1) Flash ID \n");
    1fe0:	62 ef       	ldi	r22, 0xF2	; 242
    1fe2:	73 e0       	ldi	r23, 0x03	; 3
    1fe4:	80 e0       	ldi	r24, 0x00	; 0
    1fe6:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("2) NAND Addresses \n");
    1fea:	60 e0       	ldi	r22, 0x00	; 0
    1fec:	74 e0       	ldi	r23, 0x04	; 4
    1fee:	80 e0       	ldi	r24, 0x00	; 0
    1ff0:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("3) Parameter Page \n");
    1ff4:	64 e1       	ldi	r22, 0x14	; 20
    1ff6:	74 e0       	ldi	r23, 0x04	; 4
    1ff8:	80 e0       	ldi	r24, 0x00	; 0
    1ffa:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("4) Feature Registers \n");
    1ffe:	68 e2       	ldi	r22, 0x28	; 40
    2000:	74 e0       	ldi	r23, 0x04	; 4
    2002:	80 e0       	ldi	r24, 0x00	; 0
    2004:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("5) Test Methods \n");
    2008:	6f e3       	ldi	r22, 0x3F	; 63
    200a:	74 e0       	ldi	r23, 0x04	; 4
    200c:	80 e0       	ldi	r24, 0x00	; 0
    200e:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
		USART_Data("6) Reset \n");
    2012:	61 e5       	ldi	r22, 0x51	; 81
    2014:	74 e0       	ldi	r23, 0x04	; 4
    2016:	80 e0       	ldi	r24, 0x00	; 0
    2018:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
	}
}
    201c:	df 91       	pop	r29
    201e:	cf 91       	pop	r28
    2020:	1f 91       	pop	r17
    2022:	0f 91       	pop	r16
    2024:	ff 90       	pop	r15
    2026:	ef 90       	pop	r14
    2028:	df 90       	pop	r13
    202a:	cf 90       	pop	r12
    202c:	8f 90       	pop	r8
    202e:	7f 90       	pop	r7
    2030:	6f 90       	pop	r6
    2032:	08 95       	ret

Disassembly of section .text.UserInput:

0000322c <UserInput>:

int arr_address = 0; //for CommandBuffer array
int input_counter = 0; //to count the number of input characters 

void UserInput(bool command) //asking for user input
{
    322c:	cf 92       	push	r12
    322e:	df 92       	push	r13
    3230:	ef 92       	push	r14
    3232:	cf 93       	push	r28
    3234:	c8 2f       	mov	r28, r24
	USART_Data("->User Input:\n"); //asking for User Input
    3236:	6c e5       	ldi	r22, 0x5C	; 92
    3238:	74 e0       	ldi	r23, 0x04	; 4
    323a:	80 e0       	ldi	r24, 0x00	; 0
    323c:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
	
	input_counter = 0; //reset input counter
    3240:	10 92 2f 12 	sts	0x122F, r1	; 0x80122f <_end+0x1>
    3244:	10 92 2e 12 	sts	0x122E, r1	; 0x80122e <_end>
	
	c = USART_RX_Data(); //receive user uint8_t data type input
    3248:	0e 94 f7 22 	call	0x45ee	; 0x45ee <USART_RX_Data>
    324c:	80 93 1e 0a 	sts	0x0A1E, r24	; 0x800a1e <c>
	
	while ((c != '\r')) //(c != '\n') &&
    3250:	25 c0       	rjmp	.+74     	; 0x329c <UserInput+0x70>
	{
		input_counter++; //increment input counter
    3252:	80 91 2e 12 	lds	r24, 0x122E	; 0x80122e <_end>
    3256:	90 91 2f 12 	lds	r25, 0x122F	; 0x80122f <_end+0x1>
    325a:	01 96       	adiw	r24, 0x01	; 1
    325c:	90 93 2f 12 	sts	0x122F, r25	; 0x80122f <_end+0x1>
    3260:	80 93 2e 12 	sts	0x122E, r24	; 0x80122e <_end>
		CommandBuffer[arr_address] = c; //adding uint8_t into array at index, creating a string
    3264:	80 91 30 12 	lds	r24, 0x1230	; 0x801230 <arr_address>
    3268:	90 91 31 12 	lds	r25, 0x1231	; 0x801231 <arr_address+0x1>
    326c:	fc 01       	movw	r30, r24
    326e:	e0 50       	subi	r30, 0x00	; 0
    3270:	fe 4f       	sbci	r31, 0xFE	; 254
    3272:	20 83       	st	Z, r18
		if (arr_address >= sizeof(CommandBuffer)) //making this an endless array for command lines
    3274:	81 15       	cp	r24, r1
    3276:	98 40       	sbci	r25, 0x08	; 8
    3278:	20 f0       	brcs	.+8      	; 0x3282 <UserInput+0x56>
		{
			arr_address = 0; //resets array at address 0
    327a:	10 92 31 12 	sts	0x1231, r1	; 0x801231 <arr_address+0x1>
    327e:	10 92 30 12 	sts	0x1230, r1	; 0x801230 <arr_address>
		}
		arr_address++;
    3282:	80 91 30 12 	lds	r24, 0x1230	; 0x801230 <arr_address>
    3286:	90 91 31 12 	lds	r25, 0x1231	; 0x801231 <arr_address+0x1>
    328a:	01 96       	adiw	r24, 0x01	; 1
    328c:	90 93 31 12 	sts	0x1231, r25	; 0x801231 <arr_address+0x1>
    3290:	80 93 30 12 	sts	0x1230, r24	; 0x801230 <arr_address>
		c = USART_RX_Data(); //receive user uint8_t data type input
    3294:	0e 94 f7 22 	call	0x45ee	; 0x45ee <USART_RX_Data>
    3298:	80 93 1e 0a 	sts	0x0A1E, r24	; 0x800a1e <c>
	
	input_counter = 0; //reset input counter
	
	c = USART_RX_Data(); //receive user uint8_t data type input
	
	while ((c != '\r')) //(c != '\n') &&
    329c:	20 91 1e 0a 	lds	r18, 0x0A1E	; 0x800a1e <c>
    32a0:	2d 30       	cpi	r18, 0x0D	; 13
    32a2:	b9 f6       	brne	.-82     	; 0x3252 <UserInput+0x26>
		arr_address++;
		c = USART_RX_Data(); //receive user uint8_t data type input
	}
	
	//CommandBuffer[arr_address + 1] = '\r';
	CommandBuffer[arr_address] = '\0'; //adding NULL '\0' to mark end of Command String...; adding carriage return '\r' until I can get NULL to work...
    32a4:	e0 91 30 12 	lds	r30, 0x1230	; 0x801230 <arr_address>
    32a8:	f0 91 31 12 	lds	r31, 0x1231	; 0x801231 <arr_address+0x1>
    32ac:	e0 50       	subi	r30, 0x00	; 0
    32ae:	fe 4f       	sbci	r31, 0xFE	; 254
    32b0:	10 82       	st	Z, r1
	arr_address = 0; //resets array at address 0
    32b2:	10 92 31 12 	sts	0x1231, r1	; 0x801231 <arr_address+0x1>
    32b6:	10 92 30 12 	sts	0x1230, r1	; 0x801230 <arr_address>
	
	USART_Data(CommandBuffer); //shows what the user wrote on terminal
    32ba:	80 e0       	ldi	r24, 0x00	; 0
    32bc:	92 e0       	ldi	r25, 0x02	; 2
    32be:	6c 01       	movw	r12, r24
    32c0:	20 e8       	ldi	r18, 0x80	; 128
    32c2:	e2 2e       	mov	r14, r18
    32c4:	8e 2d       	mov	r24, r14
    32c6:	b6 01       	movw	r22, r12
    32c8:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
	USART_TX_Data('\n');
    32cc:	8a e0       	ldi	r24, 0x0A	; 10
    32ce:	0e 94 f0 22 	call	0x45e0	; 0x45e0 <USART_TX_Data>
	
	if (command)
    32d2:	cc 23       	and	r28, r28
    32d4:	21 f0       	breq	.+8      	; 0x32de <UserInput+0xb2>
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
    32d6:	8e 2d       	mov	r24, r14
    32d8:	b6 01       	movw	r22, r12
    32da:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <ExecuteCommand>
}
    32de:	cf 91       	pop	r28
    32e0:	ef 90       	pop	r14
    32e2:	df 90       	pop	r13
    32e4:	cf 90       	pop	r12
    32e6:	08 95       	ret

Disassembly of section .text.COLUMN_BLOCK_PAGE_ADDRESSER:

000025a4 <COLUMN_BLOCK_PAGE_ADDRESSER>:
		USART_Data(arr_dest);
	}
}

void COLUMN_BLOCK_PAGE_ADDRESSER(bool addr_type) //gets hex number for Column and Block/Page address
{
    25a4:	cf 92       	push	r12
    25a6:	df 92       	push	r13
    25a8:	ef 92       	push	r14
    25aa:	ff 92       	push	r15
    25ac:	0f 93       	push	r16
    25ae:	cf 93       	push	r28
    25b0:	c8 2f       	mov	r28, r24
	UserInput(false); //get the hex numbers, false because not command
    25b2:	80 e0       	ldi	r24, 0x00	; 0
    25b4:	0e 94 16 19 	call	0x322c	; 0x322c <UserInput>
	
	if (addr_type == false) //false, so address type is Column Address
    25b8:	c1 11       	cpse	r28, r1
    25ba:	4b c0       	rjmp	.+150    	; 0x2652 <COLUMN_BLOCK_PAGE_ADDRESSER+0xae>
	{
		if (input_counter != 4) //has to be 4 inputs
    25bc:	80 91 2e 12 	lds	r24, 0x122E	; 0x80122e <_end>
    25c0:	90 91 2f 12 	lds	r25, 0x122F	; 0x80122f <_end+0x1>
    25c4:	04 97       	sbiw	r24, 0x04	; 4
    25c6:	41 f0       	breq	.+16     	; 0x25d8 <COLUMN_BLOCK_PAGE_ADDRESSER+0x34>
		{
			USART_Data("Make sure only 4 inputs. \n");
    25c8:	6b e6       	ldi	r22, 0x6B	; 107
    25ca:	74 e0       	ldi	r23, 0x04	; 4
    25cc:	80 e0       	ldi	r24, 0x00	; 0
    25ce:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			UserInput(false);
    25d2:	80 e0       	ldi	r24, 0x00	; 0
    25d4:	0e 94 16 19 	call	0x322c	; 0x322c <UserInput>
		}
		
		if (HEX_Verification()) //if true (valid)
    25d8:	0e 94 b8 18 	call	0x3170	; 0x3170 <HEX_Verification>
    25dc:	81 11       	cpse	r24, r1
    25de:	1b c0       	rjmp	.+54     	; 0x2616 <COLUMN_BLOCK_PAGE_ADDRESSER+0x72>
    25e0:	34 c0       	rjmp	.+104    	; 0x264a <COLUMN_BLOCK_PAGE_ADDRESSER+0xa6>
		{
			for (int i = 0; i < COLUMN_ADDRESS + 1; i+=2)
			{
				Byte_Address[i / 2] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
    25e2:	9c 01       	movw	r18, r24
    25e4:	99 23       	and	r25, r25
    25e6:	14 f4       	brge	.+4      	; 0x25ec <COLUMN_BLOCK_PAGE_ADDRESSER+0x48>
    25e8:	2f 5f       	subi	r18, 0xFF	; 255
    25ea:	3f 4f       	sbci	r19, 0xFF	; 255
    25ec:	35 95       	asr	r19
    25ee:	27 95       	ror	r18
    25f0:	fc 01       	movw	r30, r24
    25f2:	e0 50       	subi	r30, 0x00	; 0
    25f4:	fe 4f       	sbci	r31, 0xFE	; 254
    25f6:	40 81       	ld	r20, Z
    25f8:	60 e1       	ldi	r22, 0x10	; 16
    25fa:	46 9f       	mul	r20, r22
    25fc:	a0 01       	movw	r20, r0
    25fe:	11 24       	eor	r1, r1
    2600:	fc 01       	movw	r30, r24
    2602:	ef 5f       	subi	r30, 0xFF	; 255
    2604:	fd 4f       	sbci	r31, 0xFD	; 253
    2606:	50 81       	ld	r21, Z
    2608:	f9 01       	movw	r30, r18
    260a:	ea 5d       	subi	r30, 0xDA	; 218
    260c:	fd 4e       	sbci	r31, 0xED	; 237
    260e:	45 2b       	or	r20, r21
    2610:	40 83       	st	Z, r20
			UserInput(false);
		}
		
		if (HEX_Verification()) //if true (valid)
		{
			for (int i = 0; i < COLUMN_ADDRESS + 1; i+=2)
    2612:	02 96       	adiw	r24, 0x02	; 2
    2614:	02 c0       	rjmp	.+4      	; 0x261a <COLUMN_BLOCK_PAGE_ADDRESSER+0x76>
    2616:	80 e0       	ldi	r24, 0x00	; 0
    2618:	90 e0       	ldi	r25, 0x00	; 0
    261a:	83 30       	cpi	r24, 0x03	; 3
    261c:	91 05       	cpc	r25, r1
    261e:	0c f3       	brlt	.-62     	; 0x25e2 <COLUMN_BLOCK_PAGE_ADDRESSER+0x3e>
			{
				Byte_Address[i / 2] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
			}
			
			Print_To_User(COLUMN_ADDRESS, 0, "Column Address -> 0x%02X \n", Byte_Address, status_feature);	
    2620:	86 e2       	ldi	r24, 0x26	; 38
    2622:	92 e1       	ldi	r25, 0x12	; 18
    2624:	7c 01       	movw	r14, r24
    2626:	20 e8       	ldi	r18, 0x80	; 128
    2628:	02 2f       	mov	r16, r18
    262a:	0f 2e       	mov	r0, r31
    262c:	f0 e0       	ldi	r31, 0x00	; 0
    262e:	cf 2e       	mov	r12, r31
    2630:	fa e0       	ldi	r31, 0x0A	; 10
    2632:	df 2e       	mov	r13, r31
    2634:	f0 2d       	mov	r31, r0
    2636:	26 e8       	ldi	r18, 0x86	; 134
    2638:	34 e0       	ldi	r19, 0x04	; 4
    263a:	40 e0       	ldi	r20, 0x00	; 0
    263c:	60 e0       	ldi	r22, 0x00	; 0
    263e:	70 e0       	ldi	r23, 0x00	; 0
    2640:	82 e0       	ldi	r24, 0x02	; 2
    2642:	90 e0       	ldi	r25, 0x00	; 0
    2644:	0e 94 cc 19 	call	0x3398	; 0x3398 <Print_To_User>
    2648:	4e c0       	rjmp	.+156    	; 0x26e6 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
		else
		{
			COLUMN_BLOCK_PAGE_ADDRESSER(addr_type); //call again
    264a:	8c 2f       	mov	r24, r28
    264c:	0e 94 d2 12 	call	0x25a4	; 0x25a4 <COLUMN_BLOCK_PAGE_ADDRESSER>
    2650:	4a c0       	rjmp	.+148    	; 0x26e6 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
	}
	else //true, so address type is Block/Page Address
	{
		if (input_counter != 6) //has to be 6 inputs
    2652:	80 91 2e 12 	lds	r24, 0x122E	; 0x80122e <_end>
    2656:	90 91 2f 12 	lds	r25, 0x122F	; 0x80122f <_end+0x1>
    265a:	06 97       	sbiw	r24, 0x06	; 6
    265c:	41 f0       	breq	.+16     	; 0x266e <COLUMN_BLOCK_PAGE_ADDRESSER+0xca>
		{
			USART_Data("Make sure only 6 inputs. \n");
    265e:	61 ea       	ldi	r22, 0xA1	; 161
    2660:	74 e0       	ldi	r23, 0x04	; 4
    2662:	80 e0       	ldi	r24, 0x00	; 0
    2664:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
			UserInput(false);
    2668:	80 e0       	ldi	r24, 0x00	; 0
    266a:	0e 94 16 19 	call	0x322c	; 0x322c <UserInput>
		}
		
		if(HEX_Verification()) //if true (valid)
    266e:	0e 94 b8 18 	call	0x3170	; 0x3170 <HEX_Verification>
    2672:	81 11       	cpse	r24, r1
    2674:	1b c0       	rjmp	.+54     	; 0x26ac <COLUMN_BLOCK_PAGE_ADDRESSER+0x108>
    2676:	34 c0       	rjmp	.+104    	; 0x26e0 <COLUMN_BLOCK_PAGE_ADDRESSER+0x13c>
		{
			for (int i = 0; i < BLOCK_PAGE_ADDRESS + 2; i+=2)
			{
				Byte_Address[COLUMN_ADDRESS + (i / 2)] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
    2678:	9c 01       	movw	r18, r24
    267a:	99 23       	and	r25, r25
    267c:	14 f4       	brge	.+4      	; 0x2682 <COLUMN_BLOCK_PAGE_ADDRESSER+0xde>
    267e:	2f 5f       	subi	r18, 0xFF	; 255
    2680:	3f 4f       	sbci	r19, 0xFF	; 255
    2682:	35 95       	asr	r19
    2684:	27 95       	ror	r18
    2686:	fc 01       	movw	r30, r24
    2688:	e0 50       	subi	r30, 0x00	; 0
    268a:	fe 4f       	sbci	r31, 0xFE	; 254
    268c:	40 81       	ld	r20, Z
    268e:	60 e1       	ldi	r22, 0x10	; 16
    2690:	46 9f       	mul	r20, r22
    2692:	a0 01       	movw	r20, r0
    2694:	11 24       	eor	r1, r1
    2696:	fc 01       	movw	r30, r24
    2698:	ef 5f       	subi	r30, 0xFF	; 255
    269a:	fd 4f       	sbci	r31, 0xFD	; 253
    269c:	50 81       	ld	r21, Z
    269e:	f9 01       	movw	r30, r18
    26a0:	e8 5d       	subi	r30, 0xD8	; 216
    26a2:	fd 4e       	sbci	r31, 0xED	; 237
    26a4:	45 2b       	or	r20, r21
    26a6:	40 83       	st	Z, r20
			UserInput(false);
		}
		
		if(HEX_Verification()) //if true (valid)
		{
			for (int i = 0; i < BLOCK_PAGE_ADDRESS + 2; i+=2)
    26a8:	02 96       	adiw	r24, 0x02	; 2
    26aa:	02 c0       	rjmp	.+4      	; 0x26b0 <COLUMN_BLOCK_PAGE_ADDRESSER+0x10c>
    26ac:	80 e0       	ldi	r24, 0x00	; 0
    26ae:	90 e0       	ldi	r25, 0x00	; 0
    26b0:	85 30       	cpi	r24, 0x05	; 5
    26b2:	91 05       	cpc	r25, r1
    26b4:	0c f3       	brlt	.-62     	; 0x2678 <COLUMN_BLOCK_PAGE_ADDRESSER+0xd4>
			{
				Byte_Address[COLUMN_ADDRESS + (i / 2)] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
			}
			
			Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "Block/Page Address -> 0x%02X \n", Byte_Address, status_feature);
    26b6:	86 e2       	ldi	r24, 0x26	; 38
    26b8:	92 e1       	ldi	r25, 0x12	; 18
    26ba:	7c 01       	movw	r14, r24
    26bc:	20 e8       	ldi	r18, 0x80	; 128
    26be:	02 2f       	mov	r16, r18
    26c0:	0f 2e       	mov	r0, r31
    26c2:	f0 e0       	ldi	r31, 0x00	; 0
    26c4:	cf 2e       	mov	r12, r31
    26c6:	fa e0       	ldi	r31, 0x0A	; 10
    26c8:	df 2e       	mov	r13, r31
    26ca:	f0 2d       	mov	r31, r0
    26cc:	2c eb       	ldi	r18, 0xBC	; 188
    26ce:	34 e0       	ldi	r19, 0x04	; 4
    26d0:	40 e0       	ldi	r20, 0x00	; 0
    26d2:	62 e0       	ldi	r22, 0x02	; 2
    26d4:	70 e0       	ldi	r23, 0x00	; 0
    26d6:	83 e0       	ldi	r24, 0x03	; 3
    26d8:	90 e0       	ldi	r25, 0x00	; 0
    26da:	0e 94 cc 19 	call	0x3398	; 0x3398 <Print_To_User>
    26de:	03 c0       	rjmp	.+6      	; 0x26e6 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
		else
		{
			COLUMN_BLOCK_PAGE_ADDRESSER(addr_type); //call again
    26e0:	8c 2f       	mov	r24, r28
    26e2:	0e 94 d2 12 	call	0x25a4	; 0x25a4 <COLUMN_BLOCK_PAGE_ADDRESSER>
		}
	}
}
    26e6:	cf 91       	pop	r28
    26e8:	0f 91       	pop	r16
    26ea:	ff 90       	pop	r15
    26ec:	ef 90       	pop	r14
    26ee:	df 90       	pop	r13
    26f0:	cf 90       	pop	r12
    26f2:	08 95       	ret

Disassembly of section .text.CLEAR_ARR:

00003e16 <CLEAR_ARR>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3e16:	80 e0       	ldi	r24, 0x00	; 0
    3e18:	90 e0       	ldi	r25, 0x00	; 0
    3e1a:	05 c0       	rjmp	.+10     	; 0x3e26 <CLEAR_ARR+0x10>
    3e1c:	fc 01       	movw	r30, r24
    3e1e:	e1 5e       	subi	r30, 0xE1	; 225
    3e20:	fd 4e       	sbci	r31, 0xED	; 237
    3e22:	10 82       	st	Z, r1
    3e24:	01 96       	adiw	r24, 0x01	; 1
    3e26:	85 30       	cpi	r24, 0x05	; 5
    3e28:	91 05       	cpc	r25, r1
    3e2a:	c0 f3       	brcs	.-16     	; 0x3e1c <CLEAR_ARR+0x6>
    3e2c:	80 e0       	ldi	r24, 0x00	; 0
    3e2e:	90 e0       	ldi	r25, 0x00	; 0
    3e30:	05 c0       	rjmp	.+10     	; 0x3e3c <CLEAR_ARR+0x26>
    3e32:	fc 01       	movw	r30, r24
    3e34:	e1 5e       	subi	r30, 0xE1	; 225
    3e36:	f5 4f       	sbci	r31, 0xF5	; 245
    3e38:	10 82       	st	Z, r1
    3e3a:	01 96       	adiw	r24, 0x01	; 1
    3e3c:	81 15       	cp	r24, r1
    3e3e:	28 e0       	ldi	r18, 0x08	; 8
    3e40:	92 07       	cpc	r25, r18
    3e42:	b8 f3       	brcs	.-18     	; 0x3e32 <CLEAR_ARR+0x1c>
    3e44:	80 e0       	ldi	r24, 0x00	; 0
    3e46:	90 e0       	ldi	r25, 0x00	; 0
    3e48:	05 c0       	rjmp	.+10     	; 0x3e54 <CLEAR_ARR+0x3e>
    3e4a:	fc 01       	movw	r30, r24
    3e4c:	e0 50       	subi	r30, 0x00	; 0
    3e4e:	fe 4f       	sbci	r31, 0xFE	; 254
    3e50:	10 82       	st	Z, r1
    3e52:	01 96       	adiw	r24, 0x01	; 1
    3e54:	81 15       	cp	r24, r1
    3e56:	28 e0       	ldi	r18, 0x08	; 8
    3e58:	92 07       	cpc	r25, r18
    3e5a:	b8 f3       	brcs	.-18     	; 0x3e4a <CLEAR_ARR+0x34>
    3e5c:	80 e0       	ldi	r24, 0x00	; 0
    3e5e:	90 e0       	ldi	r25, 0x00	; 0
    3e60:	05 c0       	rjmp	.+10     	; 0x3e6c <CLEAR_ARR+0x56>
    3e62:	fc 01       	movw	r30, r24
    3e64:	e0 50       	subi	r30, 0x00	; 0
    3e66:	f6 4f       	sbci	r31, 0xF6	; 246
    3e68:	10 82       	st	Z, r1
    3e6a:	01 96       	adiw	r24, 0x01	; 1
    3e6c:	8e 31       	cpi	r24, 0x1E	; 30
    3e6e:	91 05       	cpc	r25, r1
    3e70:	c0 f3       	brcs	.-16     	; 0x3e62 <CLEAR_ARR+0x4c>
    3e72:	08 95       	ret

Disassembly of section .text.SPI_MASTER_Init:

0000440a <SPI_MASTER_Init>:

//Master Mode (for ATmega 2560) allows full duplex communication between the ATmega 2560 to Flash NAND Memory chip
void SPI_MASTER_Init() //initializes Serial Peripheral Interference (SPI) operations in Master Mode
{
	//DDR pin assignment, ~CS, MOSI, SCK are outputs (1), and MISO is input (0) (in Master Mode)
	DDRB |= (1 << PB2) | (1 << PB1); //setting MASTER_MOSI (PB2) as output; setting MASTER_SCK (PB1) as output;
    440a:	84 b1       	in	r24, 0x04	; 4
    440c:	86 60       	ori	r24, 0x06	; 6
    440e:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << PB3); //setting MASTER_MISO (PB3) as input;
    4410:	84 b1       	in	r24, 0x04	; 4
    4412:	87 7f       	andi	r24, 0xF7	; 247
    4414:	84 b9       	out	0x04, r24	; 4
	
	//MUST set ~SS on the ATmega 2560 in order to get SPI operations working...
	DDRB |= (1 << PB0); //setting ~SS pin (PB0) as output;
    4416:	84 b1       	in	r24, 0x04	; 4
    4418:	81 60       	ori	r24, 0x01	; 1
    441a:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1 << PB0); //setting ~SS pin (PB0) high to "de-select" slave device (not connected to the Flash NAND anyway)
    441c:	85 b1       	in	r24, 0x05	; 5
    441e:	81 60       	ori	r24, 0x01	; 1
    4420:	85 b9       	out	0x05, r24	; 5
	//PORTB &= ~(1 << PB0); //setting ~SS pin (PB0) low to "select" slave device (not connected to the Flash NAND anyway)
	
	SPCR |= (1 << SPE) | (1 << MSTR) | (1 << SPR0); // SPE: enables the SPI; MSTR: sets SPI to Master SPI mode; SPR1 and SPR0: sets the SCK Frequency (divisor of 16);
    4422:	8c b5       	in	r24, 0x2c	; 44
    4424:	81 65       	ori	r24, 0x51	; 81
    4426:	8c bd       	out	0x2c, r24	; 44
	SPCR &= ~(1 << DORD) | ~(1 << CPOL) | ~(1 << CPHA) | ~(1 << SPR1);//DORD, Data order set to MSB transmitted first; SPI Timing Mode is 0, where CPOL and CPHA are both 0
    4428:	8c b5       	in	r24, 0x2c	; 44
    442a:	8c bd       	out	0x2c, r24	; 44
    442c:	08 95       	ret

Disassembly of section .text.FLASH_Write_Enable:

00004506 <FLASH_Write_Enable>:
}

void FLASH_Write_Enable (void) //select Slave device and initializes Write operations onto Flash NAND
{
	FLASH_NAND_CS_ENABLE();
    4506:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
	
	SPDR = WRITE_ENABLED; //Flash NAND's Write Enable command into SPI Data Register (SPDR)
    450a:	86 e0       	ldi	r24, 0x06	; 6
    450c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete; waits for SPIF to be logic high
    450e:	0d b4       	in	r0, 0x2d	; 45
    4510:	07 fe       	sbrs	r0, 7
    4512:	fd cf       	rjmp	.-6      	; 0x450e <FLASH_Write_Enable+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    4514:	8e b5       	in	r24, 0x2e	; 46
    4516:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	
	FLASH_NAND_CS_DISABLE();
    451a:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    451e:	08 95       	ret

Disassembly of section .text.FLASH_ID:

000039e2 <FLASH_ID>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    39e2:	cf 93       	push	r28
    39e4:	df 93       	push	r29
    39e6:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    39ea:	8f e9       	ldi	r24, 0x9F	; 159
    39ec:	8e bd       	out	0x2e, r24	; 46
    39ee:	0d b4       	in	r0, 0x2d	; 45
    39f0:	07 fe       	sbrs	r0, 7
    39f2:	fd cf       	rjmp	.-6      	; 0x39ee <FLASH_ID+0xc>
    39f4:	8e b5       	in	r24, 0x2e	; 46
    39f6:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    39fa:	1e bc       	out	0x2e, r1	; 46
    39fc:	0d b4       	in	r0, 0x2d	; 45
    39fe:	07 fe       	sbrs	r0, 7
    3a00:	fd cf       	rjmp	.-6      	; 0x39fc <FLASH_ID+0x1a>
    3a02:	8e b5       	in	r24, 0x2e	; 46
    3a04:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3a08:	1e bc       	out	0x2e, r1	; 46
    3a0a:	0d b4       	in	r0, 0x2d	; 45
    3a0c:	07 fe       	sbrs	r0, 7
    3a0e:	fd cf       	rjmp	.-6      	; 0x3a0a <FLASH_ID+0x28>
    3a10:	8e b5       	in	r24, 0x2e	; 46
    3a12:	80 93 1f 12 	sts	0x121F, r24	; 0x80121f <HEX_ID>
    3a16:	1e bc       	out	0x2e, r1	; 46
    3a18:	0d b4       	in	r0, 0x2d	; 45
    3a1a:	07 fe       	sbrs	r0, 7
    3a1c:	fd cf       	rjmp	.-6      	; 0x3a18 <FLASH_ID+0x36>
    3a1e:	8e b5       	in	r24, 0x2e	; 46
    3a20:	cf e1       	ldi	r28, 0x1F	; 31
    3a22:	d2 e1       	ldi	r29, 0x12	; 18
    3a24:	89 83       	std	Y+1, r24	; 0x01
    3a26:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3a2a:	99 81       	ldd	r25, Y+1	; 0x01
    3a2c:	88 81       	ld	r24, Y
    3a2e:	1f 92       	push	r1
    3a30:	9f 93       	push	r25
    3a32:	1f 92       	push	r1
    3a34:	8f 93       	push	r24
    3a36:	8b ed       	ldi	r24, 0xDB	; 219
    3a38:	94 e0       	ldi	r25, 0x04	; 4
    3a3a:	a0 e0       	ldi	r26, 0x00	; 0
    3a3c:	af 93       	push	r26
    3a3e:	9f 93       	push	r25
    3a40:	8f 93       	push	r24
    3a42:	c0 e0       	ldi	r28, 0x00	; 0
    3a44:	da e0       	ldi	r29, 0x0A	; 10
    3a46:	df 93       	push	r29
    3a48:	cf 93       	push	r28
    3a4a:	0e 94 df 21 	call	0x43be	; 0x43be <_sprintf_cdnopuxX>
    3a4e:	be 01       	movw	r22, r28
    3a50:	80 e8       	ldi	r24, 0x80	; 128
    3a52:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
    3a56:	8d b7       	in	r24, 0x3d	; 61
    3a58:	9e b7       	in	r25, 0x3e	; 62
    3a5a:	09 96       	adiw	r24, 0x09	; 9
    3a5c:	0f b6       	in	r0, 0x3f	; 63
    3a5e:	f8 94       	cli
    3a60:	9e bf       	out	0x3e, r25	; 62
    3a62:	0f be       	out	0x3f, r0	; 63
    3a64:	8d bf       	out	0x3d, r24	; 61
    3a66:	df 91       	pop	r29
    3a68:	cf 91       	pop	r28
    3a6a:	08 95       	ret

Disassembly of section .text.FLASH_Die_Selection:

00003b6e <FLASH_Die_Selection>:
    3b6e:	cf 92       	push	r12
    3b70:	df 92       	push	r13
    3b72:	ef 92       	push	r14
    3b74:	ff 92       	push	r15
    3b76:	0f 93       	push	r16
    3b78:	cf 93       	push	r28
    3b7a:	df 93       	push	r29
    3b7c:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3b80:	8f e0       	ldi	r24, 0x0F	; 15
    3b82:	8e bd       	out	0x2e, r24	; 46
    3b84:	0d b4       	in	r0, 0x2d	; 45
    3b86:	07 fe       	sbrs	r0, 7
    3b88:	fd cf       	rjmp	.-6      	; 0x3b84 <FLASH_Die_Selection+0x16>
    3b8a:	8e b5       	in	r24, 0x2e	; 46
    3b8c:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3b90:	80 ed       	ldi	r24, 0xD0	; 208
    3b92:	8e bd       	out	0x2e, r24	; 46
    3b94:	0d b4       	in	r0, 0x2d	; 45
    3b96:	07 fe       	sbrs	r0, 7
    3b98:	fd cf       	rjmp	.-6      	; 0x3b94 <FLASH_Die_Selection+0x26>
    3b9a:	8e b5       	in	r24, 0x2e	; 46
    3b9c:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3ba0:	1e bc       	out	0x2e, r1	; 46
    3ba2:	0d b4       	in	r0, 0x2d	; 45
    3ba4:	07 fe       	sbrs	r0, 7
    3ba6:	fd cf       	rjmp	.-6      	; 0x3ba2 <FLASH_Die_Selection+0x34>
    3ba8:	8e b5       	in	r24, 0x2e	; 46
    3baa:	cf e1       	ldi	r28, 0x1F	; 31
    3bac:	da e0       	ldi	r29, 0x0A	; 10
    3bae:	88 83       	st	Y, r24
    3bb0:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3bb4:	7e 01       	movw	r14, r28
    3bb6:	80 e8       	ldi	r24, 0x80	; 128
    3bb8:	08 2f       	mov	r16, r24
    3bba:	0f 2e       	mov	r0, r31
    3bbc:	f0 e0       	ldi	r31, 0x00	; 0
    3bbe:	cf 2e       	mov	r12, r31
    3bc0:	fa e0       	ldi	r31, 0x0A	; 10
    3bc2:	df 2e       	mov	r13, r31
    3bc4:	f0 2d       	mov	r31, r0
    3bc6:	23 e1       	ldi	r18, 0x13	; 19
    3bc8:	35 e0       	ldi	r19, 0x05	; 5
    3bca:	40 e0       	ldi	r20, 0x00	; 0
    3bcc:	60 e0       	ldi	r22, 0x00	; 0
    3bce:	70 e0       	ldi	r23, 0x00	; 0
    3bd0:	81 e0       	ldi	r24, 0x01	; 1
    3bd2:	90 e0       	ldi	r25, 0x00	; 0
    3bd4:	0e 94 cc 19 	call	0x3398	; 0x3398 <Print_To_User>
    3bd8:	df 91       	pop	r29
    3bda:	cf 91       	pop	r28
    3bdc:	0f 91       	pop	r16
    3bde:	ff 90       	pop	r15
    3be0:	ef 90       	pop	r14
    3be2:	df 90       	pop	r13
    3be4:	cf 90       	pop	r12
    3be6:	08 95       	ret

Disassembly of section .text.FLASH_Configuration:

00003be8 <FLASH_Configuration>:
    3be8:	cf 92       	push	r12
    3bea:	df 92       	push	r13
    3bec:	ef 92       	push	r14
    3bee:	ff 92       	push	r15
    3bf0:	0f 93       	push	r16
    3bf2:	cf 93       	push	r28
    3bf4:	df 93       	push	r29
    3bf6:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3bfa:	8f e0       	ldi	r24, 0x0F	; 15
    3bfc:	8e bd       	out	0x2e, r24	; 46
    3bfe:	0d b4       	in	r0, 0x2d	; 45
    3c00:	07 fe       	sbrs	r0, 7
    3c02:	fd cf       	rjmp	.-6      	; 0x3bfe <FLASH_Configuration+0x16>
    3c04:	8e b5       	in	r24, 0x2e	; 46
    3c06:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3c0a:	80 eb       	ldi	r24, 0xB0	; 176
    3c0c:	8e bd       	out	0x2e, r24	; 46
    3c0e:	0d b4       	in	r0, 0x2d	; 45
    3c10:	07 fe       	sbrs	r0, 7
    3c12:	fd cf       	rjmp	.-6      	; 0x3c0e <FLASH_Configuration+0x26>
    3c14:	8e b5       	in	r24, 0x2e	; 46
    3c16:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3c1a:	1e bc       	out	0x2e, r1	; 46
    3c1c:	0d b4       	in	r0, 0x2d	; 45
    3c1e:	07 fe       	sbrs	r0, 7
    3c20:	fd cf       	rjmp	.-6      	; 0x3c1c <FLASH_Configuration+0x34>
    3c22:	8e b5       	in	r24, 0x2e	; 46
    3c24:	cf e1       	ldi	r28, 0x1F	; 31
    3c26:	da e0       	ldi	r29, 0x0A	; 10
    3c28:	88 83       	st	Y, r24
    3c2a:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3c2e:	7e 01       	movw	r14, r28
    3c30:	80 e8       	ldi	r24, 0x80	; 128
    3c32:	08 2f       	mov	r16, r24
    3c34:	0f 2e       	mov	r0, r31
    3c36:	f0 e0       	ldi	r31, 0x00	; 0
    3c38:	cf 2e       	mov	r12, r31
    3c3a:	fa e0       	ldi	r31, 0x0A	; 10
    3c3c:	df 2e       	mov	r13, r31
    3c3e:	f0 2d       	mov	r31, r0
    3c40:	24 e3       	ldi	r18, 0x34	; 52
    3c42:	35 e0       	ldi	r19, 0x05	; 5
    3c44:	40 e0       	ldi	r20, 0x00	; 0
    3c46:	60 e0       	ldi	r22, 0x00	; 0
    3c48:	70 e0       	ldi	r23, 0x00	; 0
    3c4a:	81 e0       	ldi	r24, 0x01	; 1
    3c4c:	90 e0       	ldi	r25, 0x00	; 0
    3c4e:	0e 94 cc 19 	call	0x3398	; 0x3398 <Print_To_User>
    3c52:	df 91       	pop	r29
    3c54:	cf 91       	pop	r28
    3c56:	0f 91       	pop	r16
    3c58:	ff 90       	pop	r15
    3c5a:	ef 90       	pop	r14
    3c5c:	df 90       	pop	r13
    3c5e:	cf 90       	pop	r12
    3c60:	08 95       	ret

Disassembly of section .text.FLASH_Block_Lock_Setter:

00003cd6 <FLASH_Block_Lock_Setter>:
    3cd6:	cf 93       	push	r28
    3cd8:	c8 2f       	mov	r28, r24
    3cda:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3cde:	cc 23       	and	r28, r28
    3ce0:	c9 f0       	breq	.+50     	; 0x3d14 <FLASH_Block_Lock_Setter+0x3e>
    3ce2:	8f e1       	ldi	r24, 0x1F	; 31
    3ce4:	8e bd       	out	0x2e, r24	; 46
    3ce6:	0d b4       	in	r0, 0x2d	; 45
    3ce8:	07 fe       	sbrs	r0, 7
    3cea:	fd cf       	rjmp	.-6      	; 0x3ce6 <FLASH_Block_Lock_Setter+0x10>
    3cec:	8e b5       	in	r24, 0x2e	; 46
    3cee:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3cf2:	80 ea       	ldi	r24, 0xA0	; 160
    3cf4:	8e bd       	out	0x2e, r24	; 46
    3cf6:	0d b4       	in	r0, 0x2d	; 45
    3cf8:	07 fe       	sbrs	r0, 7
    3cfa:	fd cf       	rjmp	.-6      	; 0x3cf6 <FLASH_Block_Lock_Setter+0x20>
    3cfc:	8e b5       	in	r24, 0x2e	; 46
    3cfe:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3d02:	8c e7       	ldi	r24, 0x7C	; 124
    3d04:	8e bd       	out	0x2e, r24	; 46
    3d06:	0d b4       	in	r0, 0x2d	; 45
    3d08:	07 fe       	sbrs	r0, 7
    3d0a:	fd cf       	rjmp	.-6      	; 0x3d06 <FLASH_Block_Lock_Setter+0x30>
    3d0c:	8e b5       	in	r24, 0x2e	; 46
    3d0e:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3d12:	17 c0       	rjmp	.+46     	; 0x3d42 <FLASH_Block_Lock_Setter+0x6c>
    3d14:	8f e1       	ldi	r24, 0x1F	; 31
    3d16:	8e bd       	out	0x2e, r24	; 46
    3d18:	0d b4       	in	r0, 0x2d	; 45
    3d1a:	07 fe       	sbrs	r0, 7
    3d1c:	fd cf       	rjmp	.-6      	; 0x3d18 <FLASH_Block_Lock_Setter+0x42>
    3d1e:	8e b5       	in	r24, 0x2e	; 46
    3d20:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3d24:	80 ea       	ldi	r24, 0xA0	; 160
    3d26:	8e bd       	out	0x2e, r24	; 46
    3d28:	0d b4       	in	r0, 0x2d	; 45
    3d2a:	07 fe       	sbrs	r0, 7
    3d2c:	fd cf       	rjmp	.-6      	; 0x3d28 <FLASH_Block_Lock_Setter+0x52>
    3d2e:	8e b5       	in	r24, 0x2e	; 46
    3d30:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3d34:	1e bc       	out	0x2e, r1	; 46
    3d36:	0d b4       	in	r0, 0x2d	; 45
    3d38:	07 fe       	sbrs	r0, 7
    3d3a:	fd cf       	rjmp	.-6      	; 0x3d36 <FLASH_Block_Lock_Setter+0x60>
    3d3c:	8e b5       	in	r24, 0x2e	; 46
    3d3e:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3d42:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3d46:	cf 91       	pop	r28
    3d48:	08 95       	ret

Disassembly of section .text.FLASH_Block_Lock:

00003444 <FLASH_Block_Lock>:
    3444:	cf 92       	push	r12
    3446:	df 92       	push	r13
    3448:	ef 92       	push	r14
    344a:	ff 92       	push	r15
    344c:	0f 93       	push	r16
    344e:	08 2f       	mov	r16, r24
    3450:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3454:	00 23       	and	r16, r16
    3456:	c1 f0       	breq	.+48     	; 0x3488 <FLASH_Block_Lock+0x44>
    3458:	8f e1       	ldi	r24, 0x1F	; 31
    345a:	8e bd       	out	0x2e, r24	; 46
    345c:	0d b4       	in	r0, 0x2d	; 45
    345e:	07 fe       	sbrs	r0, 7
    3460:	fd cf       	rjmp	.-6      	; 0x345c <FLASH_Block_Lock+0x18>
    3462:	8e b5       	in	r24, 0x2e	; 46
    3464:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3468:	80 ea       	ldi	r24, 0xA0	; 160
    346a:	8e bd       	out	0x2e, r24	; 46
    346c:	0d b4       	in	r0, 0x2d	; 45
    346e:	07 fe       	sbrs	r0, 7
    3470:	fd cf       	rjmp	.-6      	; 0x346c <FLASH_Block_Lock+0x28>
    3472:	8e b5       	in	r24, 0x2e	; 46
    3474:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3478:	1e bc       	out	0x2e, r1	; 46
    347a:	0d b4       	in	r0, 0x2d	; 45
    347c:	07 fe       	sbrs	r0, 7
    347e:	fd cf       	rjmp	.-6      	; 0x347a <FLASH_Block_Lock+0x36>
    3480:	8e b5       	in	r24, 0x2e	; 46
    3482:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3486:	17 c0       	rjmp	.+46     	; 0x34b6 <FLASH_Block_Lock+0x72>
    3488:	8f e0       	ldi	r24, 0x0F	; 15
    348a:	8e bd       	out	0x2e, r24	; 46
    348c:	0d b4       	in	r0, 0x2d	; 45
    348e:	07 fe       	sbrs	r0, 7
    3490:	fd cf       	rjmp	.-6      	; 0x348c <FLASH_Block_Lock+0x48>
    3492:	8e b5       	in	r24, 0x2e	; 46
    3494:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3498:	80 ea       	ldi	r24, 0xA0	; 160
    349a:	8e bd       	out	0x2e, r24	; 46
    349c:	0d b4       	in	r0, 0x2d	; 45
    349e:	07 fe       	sbrs	r0, 7
    34a0:	fd cf       	rjmp	.-6      	; 0x349c <FLASH_Block_Lock+0x58>
    34a2:	8e b5       	in	r24, 0x2e	; 46
    34a4:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    34a8:	1e bc       	out	0x2e, r1	; 46
    34aa:	0d b4       	in	r0, 0x2d	; 45
    34ac:	07 fe       	sbrs	r0, 7
    34ae:	fd cf       	rjmp	.-6      	; 0x34aa <FLASH_Block_Lock+0x66>
    34b0:	8e b5       	in	r24, 0x2e	; 46
    34b2:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    34b6:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    34ba:	8f e1       	ldi	r24, 0x1F	; 31
    34bc:	9a e0       	ldi	r25, 0x0A	; 10
    34be:	7c 01       	movw	r14, r24
    34c0:	20 e8       	ldi	r18, 0x80	; 128
    34c2:	02 2f       	mov	r16, r18
    34c4:	0f 2e       	mov	r0, r31
    34c6:	f0 e0       	ldi	r31, 0x00	; 0
    34c8:	cf 2e       	mov	r12, r31
    34ca:	fa e0       	ldi	r31, 0x0A	; 10
    34cc:	df 2e       	mov	r13, r31
    34ce:	f0 2d       	mov	r31, r0
    34d0:	25 e5       	ldi	r18, 0x55	; 85
    34d2:	35 e0       	ldi	r19, 0x05	; 5
    34d4:	40 e0       	ldi	r20, 0x00	; 0
    34d6:	60 e0       	ldi	r22, 0x00	; 0
    34d8:	70 e0       	ldi	r23, 0x00	; 0
    34da:	81 e0       	ldi	r24, 0x01	; 1
    34dc:	90 e0       	ldi	r25, 0x00	; 0
    34de:	0e 94 cc 19 	call	0x3398	; 0x3398 <Print_To_User>
    34e2:	0f 91       	pop	r16
    34e4:	ff 90       	pop	r15
    34e6:	ef 90       	pop	r14
    34e8:	df 90       	pop	r13
    34ea:	cf 90       	pop	r12
    34ec:	08 95       	ret

Disassembly of section .text.FLASH_Reset:

00004494 <FLASH_Reset>:
	Print_To_User(1, 0, "Block Lock Register: 0x%02X \n", data, status_feature);
}

void FLASH_Reset() //reset memory device
{
	FLASH_NAND_CS_ENABLE();
    4494:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
	
	SPDR = RESET; //Sending READ_ID Command into SPI Data Register (SPDR)
    4498:	8f ef       	ldi	r24, 0xFF	; 255
    449a:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    449c:	0d b4       	in	r0, 0x2d	; 45
    449e:	07 fe       	sbrs	r0, 7
    44a0:	fd cf       	rjmp	.-6      	; 0x449c <FLASH_Reset+0x8>
	
	FLASH_NAND_CS_DISABLE();
    44a2:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>

	USART_Data("Device Reseted \n");
    44a6:	63 e7       	ldi	r22, 0x73	; 115
    44a8:	75 e0       	ldi	r23, 0x05	; 5
    44aa:	80 e0       	ldi	r24, 0x00	; 0
    44ac:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
    44b0:	08 95       	ret

Disassembly of section .text.FLASH_MainArray_Address:

000034ee <FLASH_MainArray_Address>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    34ee:	cf 92       	push	r12
    34f0:	df 92       	push	r13
    34f2:	ef 92       	push	r14
    34f4:	9a 01       	movw	r18, r20
    34f6:	46 2f       	mov	r20, r22
    34f8:	00 97       	sbiw	r24, 0x00	; 0
    34fa:	81 f5       	brne	.+96     	; 0x355c <FLASH_MainArray_Address+0x6e>
    34fc:	69 01       	movw	r12, r18
    34fe:	e4 2e       	mov	r14, r20
    3500:	52 e0       	ldi	r21, 0x02	; 2
    3502:	c5 0e       	add	r12, r21
    3504:	d1 1c       	adc	r13, r1
    3506:	e1 1c       	adc	r14, r1
    3508:	f6 01       	movw	r30, r12
    350a:	5e 2d       	mov	r21, r14
    350c:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    3510:	6e bd       	out	0x2e, r22	; 46
    3512:	0d b4       	in	r0, 0x2d	; 45
    3514:	07 fe       	sbrs	r0, 7
    3516:	fd cf       	rjmp	.-6      	; 0x3512 <FLASH_MainArray_Address+0x24>
    3518:	5e b5       	in	r21, 0x2e	; 46
    351a:	50 93 2b 12 	sts	0x122B, r21	; 0x80122b <status>
    351e:	69 01       	movw	r12, r18
    3520:	e4 2e       	mov	r14, r20
    3522:	53 e0       	ldi	r21, 0x03	; 3
    3524:	c5 0e       	add	r12, r21
    3526:	d1 1c       	adc	r13, r1
    3528:	e1 1c       	adc	r14, r1
    352a:	f6 01       	movw	r30, r12
    352c:	5e 2d       	mov	r21, r14
    352e:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    3532:	6e bd       	out	0x2e, r22	; 46
    3534:	0d b4       	in	r0, 0x2d	; 45
    3536:	07 fe       	sbrs	r0, 7
    3538:	fd cf       	rjmp	.-6      	; 0x3534 <FLASH_MainArray_Address+0x46>
    353a:	5e b5       	in	r21, 0x2e	; 46
    353c:	50 93 2b 12 	sts	0x122B, r21	; 0x80122b <status>
    3540:	2c 5f       	subi	r18, 0xFC	; 252
    3542:	3f 4f       	sbci	r19, 0xFF	; 255
    3544:	4f 4f       	sbci	r20, 0xFF	; 255
    3546:	f9 01       	movw	r30, r18
    3548:	54 2f       	mov	r21, r20
    354a:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    354e:	6e bd       	out	0x2e, r22	; 46
    3550:	0d b4       	in	r0, 0x2d	; 45
    3552:	07 fe       	sbrs	r0, 7
    3554:	fd cf       	rjmp	.-6      	; 0x3550 <FLASH_MainArray_Address+0x62>
    3556:	2e b5       	in	r18, 0x2e	; 46
    3558:	20 93 2b 12 	sts	0x122B, r18	; 0x80122b <status>
    355c:	01 97       	sbiw	r24, 0x01	; 1
    355e:	b1 f4       	brne	.+44     	; 0x358c <FLASH_MainArray_Address+0x9e>
    3560:	1e bc       	out	0x2e, r1	; 46
    3562:	0d b4       	in	r0, 0x2d	; 45
    3564:	07 fe       	sbrs	r0, 7
    3566:	fd cf       	rjmp	.-6      	; 0x3562 <FLASH_MainArray_Address+0x74>
    3568:	8e b5       	in	r24, 0x2e	; 46
    356a:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    356e:	1e bc       	out	0x2e, r1	; 46
    3570:	0d b4       	in	r0, 0x2d	; 45
    3572:	07 fe       	sbrs	r0, 7
    3574:	fd cf       	rjmp	.-6      	; 0x3570 <FLASH_MainArray_Address+0x82>
    3576:	8e b5       	in	r24, 0x2e	; 46
    3578:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    357c:	81 e0       	ldi	r24, 0x01	; 1
    357e:	8e bd       	out	0x2e, r24	; 46
    3580:	0d b4       	in	r0, 0x2d	; 45
    3582:	07 fe       	sbrs	r0, 7
    3584:	fd cf       	rjmp	.-6      	; 0x3580 <FLASH_MainArray_Address+0x92>
    3586:	8e b5       	in	r24, 0x2e	; 46
    3588:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    358c:	ef 90       	pop	r14
    358e:	df 90       	pop	r13
    3590:	cf 90       	pop	r12
    3592:	08 95       	ret

Disassembly of section .text.FLASH_Column_Address:

00003ed2 <FLASH_Column_Address>:
    3ed2:	9a 01       	movw	r18, r20
    3ed4:	46 2f       	mov	r20, r22
    3ed6:	00 97       	sbiw	r24, 0x00	; 0
    3ed8:	c9 f4       	brne	.+50     	; 0x3f0c <FLASH_Column_Address+0x3a>
    3eda:	f9 01       	movw	r30, r18
    3edc:	54 2f       	mov	r21, r20
    3ede:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    3ee2:	6e bd       	out	0x2e, r22	; 46
    3ee4:	0d b4       	in	r0, 0x2d	; 45
    3ee6:	07 fe       	sbrs	r0, 7
    3ee8:	fd cf       	rjmp	.-6      	; 0x3ee4 <FLASH_Column_Address+0x12>
    3eea:	5e b5       	in	r21, 0x2e	; 46
    3eec:	50 93 2b 12 	sts	0x122B, r21	; 0x80122b <status>
    3ef0:	2f 5f       	subi	r18, 0xFF	; 255
    3ef2:	3f 4f       	sbci	r19, 0xFF	; 255
    3ef4:	4f 4f       	sbci	r20, 0xFF	; 255
    3ef6:	f9 01       	movw	r30, r18
    3ef8:	54 2f       	mov	r21, r20
    3efa:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    3efe:	6e bd       	out	0x2e, r22	; 46
    3f00:	0d b4       	in	r0, 0x2d	; 45
    3f02:	07 fe       	sbrs	r0, 7
    3f04:	fd cf       	rjmp	.-6      	; 0x3f00 <FLASH_Column_Address+0x2e>
    3f06:	2e b5       	in	r18, 0x2e	; 46
    3f08:	20 93 2b 12 	sts	0x122B, r18	; 0x80122b <status>
    3f0c:	01 97       	sbiw	r24, 0x01	; 1
    3f0e:	71 f4       	brne	.+28     	; 0x3f2c <FLASH_Column_Address+0x5a>
    3f10:	1e bc       	out	0x2e, r1	; 46
    3f12:	0d b4       	in	r0, 0x2d	; 45
    3f14:	07 fe       	sbrs	r0, 7
    3f16:	fd cf       	rjmp	.-6      	; 0x3f12 <FLASH_Column_Address+0x40>
    3f18:	8e b5       	in	r24, 0x2e	; 46
    3f1a:	80 93 1f 12 	sts	0x121F, r24	; 0x80121f <HEX_ID>
    3f1e:	1e bc       	out	0x2e, r1	; 46
    3f20:	0d b4       	in	r0, 0x2d	; 45
    3f22:	07 fe       	sbrs	r0, 7
    3f24:	fd cf       	rjmp	.-6      	; 0x3f20 <FLASH_Column_Address+0x4e>
    3f26:	8e b5       	in	r24, 0x2e	; 46
    3f28:	80 93 20 12 	sts	0x1220, r24	; 0x801220 <HEX_ID+0x1>
    3f2c:	08 95       	ret

Disassembly of section .text.FLASH_Data_Storage:

00003780 <FLASH_Data_Storage>:
    3780:	cf 92       	push	r12
    3782:	df 92       	push	r13
    3784:	ef 92       	push	r14
    3786:	ff 92       	push	r15
    3788:	0f 93       	push	r16
    378a:	1f 93       	push	r17
    378c:	cf 93       	push	r28
    378e:	df 93       	push	r29
    3790:	ec 01       	movw	r28, r24
    3792:	89 2b       	or	r24, r25
    3794:	19 f1       	breq	.+70     	; 0x37dc <FLASH_Data_Storage+0x5c>
    3796:	28 c0       	rjmp	.+80     	; 0x37e8 <FLASH_Data_Storage+0x68>
    3798:	1e bc       	out	0x2e, r1	; 46
    379a:	0d b4       	in	r0, 0x2d	; 45
    379c:	07 fe       	sbrs	r0, 7
    379e:	fd cf       	rjmp	.-6      	; 0x379a <FLASH_Data_Storage+0x1a>
    37a0:	2e b5       	in	r18, 0x2e	; 46
    37a2:	fc 01       	movw	r30, r24
    37a4:	e1 5e       	subi	r30, 0xE1	; 225
    37a6:	f5 4f       	sbci	r31, 0xF5	; 245
    37a8:	20 83       	st	Z, r18
    37aa:	2e b5       	in	r18, 0x2e	; 46
    37ac:	2d 30       	cpi	r18, 0x0D	; 13
    37ae:	a1 f4       	brne	.+40     	; 0x37d8 <FLASH_Data_Storage+0x58>
    37b0:	7c 01       	movw	r14, r24
    37b2:	99 0f       	add	r25, r25
    37b4:	00 0b       	sbc	r16, r16
    37b6:	11 0b       	sbc	r17, r17
    37b8:	0f 2e       	mov	r0, r31
    37ba:	f0 e0       	ldi	r31, 0x00	; 0
    37bc:	cf 2e       	mov	r12, r31
    37be:	fa e0       	ldi	r31, 0x0A	; 10
    37c0:	df 2e       	mov	r13, r31
    37c2:	f0 2d       	mov	r31, r0
    37c4:	24 e8       	ldi	r18, 0x84	; 132
    37c6:	35 e0       	ldi	r19, 0x05	; 5
    37c8:	40 e0       	ldi	r20, 0x00	; 0
    37ca:	60 e0       	ldi	r22, 0x00	; 0
    37cc:	70 e0       	ldi	r23, 0x00	; 0
    37ce:	81 e0       	ldi	r24, 0x01	; 1
    37d0:	90 e0       	ldi	r25, 0x00	; 0
    37d2:	0e 94 cc 19 	call	0x3398	; 0x3398 <Print_To_User>
    37d6:	08 c0       	rjmp	.+16     	; 0x37e8 <FLASH_Data_Storage+0x68>
    37d8:	01 96       	adiw	r24, 0x01	; 1
    37da:	02 c0       	rjmp	.+4      	; 0x37e0 <FLASH_Data_Storage+0x60>
    37dc:	80 e0       	ldi	r24, 0x00	; 0
    37de:	90 e0       	ldi	r25, 0x00	; 0
    37e0:	81 15       	cp	r24, r1
    37e2:	28 e0       	ldi	r18, 0x08	; 8
    37e4:	92 07       	cpc	r25, r18
    37e6:	c0 f2       	brcs	.-80     	; 0x3798 <FLASH_Data_Storage+0x18>
    37e8:	21 97       	sbiw	r28, 0x01	; 1
    37ea:	91 f4       	brne	.+36     	; 0x3810 <FLASH_Data_Storage+0x90>
    37ec:	0b c0       	rjmp	.+22     	; 0x3804 <FLASH_Data_Storage+0x84>
    37ee:	1e bc       	out	0x2e, r1	; 46
    37f0:	0d b4       	in	r0, 0x2d	; 45
    37f2:	07 fe       	sbrs	r0, 7
    37f4:	fd cf       	rjmp	.-6      	; 0x37f0 <FLASH_Data_Storage+0x70>
    37f6:	2e b5       	in	r18, 0x2e	; 46
    37f8:	fc 01       	movw	r30, r24
    37fa:	e1 5e       	subi	r30, 0xE1	; 225
    37fc:	f5 4f       	sbci	r31, 0xF5	; 245
    37fe:	20 83       	st	Z, r18
    3800:	01 96       	adiw	r24, 0x01	; 1
    3802:	02 c0       	rjmp	.+4      	; 0x3808 <FLASH_Data_Storage+0x88>
    3804:	80 e0       	ldi	r24, 0x00	; 0
    3806:	90 e0       	ldi	r25, 0x00	; 0
    3808:	81 15       	cp	r24, r1
    380a:	28 e0       	ldi	r18, 0x08	; 8
    380c:	92 07       	cpc	r25, r18
    380e:	78 f3       	brcs	.-34     	; 0x37ee <FLASH_Data_Storage+0x6e>
    3810:	df 91       	pop	r29
    3812:	cf 91       	pop	r28
    3814:	1f 91       	pop	r17
    3816:	0f 91       	pop	r16
    3818:	ff 90       	pop	r15
    381a:	ef 90       	pop	r14
    381c:	df 90       	pop	r13
    381e:	cf 90       	pop	r12
    3820:	08 95       	ret

Disassembly of section .text.FLASH_Read_From_Cache_x1:

00003f7e <FLASH_Read_From_Cache_x1>:
    3f7e:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3f82:	83 e0       	ldi	r24, 0x03	; 3
    3f84:	8e bd       	out	0x2e, r24	; 46
    3f86:	0d b4       	in	r0, 0x2d	; 45
    3f88:	07 fe       	sbrs	r0, 7
    3f8a:	fd cf       	rjmp	.-6      	; 0x3f86 <FLASH_Read_From_Cache_x1+0x8>
    3f8c:	8e b5       	in	r24, 0x2e	; 46
    3f8e:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3f92:	8a e1       	ldi	r24, 0x1A	; 26
    3f94:	8a 95       	dec	r24
    3f96:	f1 f7       	brne	.-4      	; 0x3f94 <FLASH_Read_From_Cache_x1+0x16>
    3f98:	00 c0       	rjmp	.+0      	; 0x3f9a <FLASH_Read_From_Cache_x1+0x1c>
    3f9a:	46 e2       	ldi	r20, 0x26	; 38
    3f9c:	52 e1       	ldi	r21, 0x12	; 18
    3f9e:	60 e8       	ldi	r22, 0x80	; 128
    3fa0:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    3fa4:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    3fa8:	0e 94 69 1f 	call	0x3ed2	; 0x3ed2 <FLASH_Column_Address>
    3fac:	1e bc       	out	0x2e, r1	; 46
    3fae:	0d b4       	in	r0, 0x2d	; 45
    3fb0:	07 fe       	sbrs	r0, 7
    3fb2:	fd cf       	rjmp	.-6      	; 0x3fae <FLASH_Read_From_Cache_x1+0x30>
    3fb4:	8e b5       	in	r24, 0x2e	; 46
    3fb6:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3fba:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    3fbe:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    3fc2:	0e 94 c0 1b 	call	0x3780	; 0x3780 <FLASH_Data_Storage>
    3fc6:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3fca:	08 95       	ret

Disassembly of section .text.FLASH_Status:

00003aee <FLASH_Status>:
    3aee:	cf 92       	push	r12
    3af0:	df 92       	push	r13
    3af2:	ef 92       	push	r14
    3af4:	ff 92       	push	r15
    3af6:	0f 93       	push	r16
    3af8:	cf 93       	push	r28
    3afa:	df 93       	push	r29
    3afc:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3b00:	8f e0       	ldi	r24, 0x0F	; 15
    3b02:	8e bd       	out	0x2e, r24	; 46
    3b04:	0d b4       	in	r0, 0x2d	; 45
    3b06:	07 fe       	sbrs	r0, 7
    3b08:	fd cf       	rjmp	.-6      	; 0x3b04 <FLASH_Status+0x16>
    3b0a:	8e b5       	in	r24, 0x2e	; 46
    3b0c:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3b10:	80 ec       	ldi	r24, 0xC0	; 192
    3b12:	8e bd       	out	0x2e, r24	; 46
    3b14:	0d b4       	in	r0, 0x2d	; 45
    3b16:	07 fe       	sbrs	r0, 7
    3b18:	fd cf       	rjmp	.-6      	; 0x3b14 <FLASH_Status+0x26>
    3b1a:	8e b5       	in	r24, 0x2e	; 46
    3b1c:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3b20:	1e bc       	out	0x2e, r1	; 46
    3b22:	0d b4       	in	r0, 0x2d	; 45
    3b24:	07 fe       	sbrs	r0, 7
    3b26:	fd cf       	rjmp	.-6      	; 0x3b22 <FLASH_Status+0x34>
    3b28:	8e b5       	in	r24, 0x2e	; 46
    3b2a:	cf e1       	ldi	r28, 0x1F	; 31
    3b2c:	d2 e1       	ldi	r29, 0x12	; 18
    3b2e:	88 83       	st	Y, r24
    3b30:	7e 01       	movw	r14, r28
    3b32:	80 e8       	ldi	r24, 0x80	; 128
    3b34:	08 2f       	mov	r16, r24
    3b36:	0f 2e       	mov	r0, r31
    3b38:	f0 e0       	ldi	r31, 0x00	; 0
    3b3a:	cf 2e       	mov	r12, r31
    3b3c:	fa e0       	ldi	r31, 0x0A	; 10
    3b3e:	df 2e       	mov	r13, r31
    3b40:	f0 2d       	mov	r31, r0
    3b42:	2e e9       	ldi	r18, 0x9E	; 158
    3b44:	35 e0       	ldi	r19, 0x05	; 5
    3b46:	40 e0       	ldi	r20, 0x00	; 0
    3b48:	60 e0       	ldi	r22, 0x00	; 0
    3b4a:	70 e0       	ldi	r23, 0x00	; 0
    3b4c:	81 e0       	ldi	r24, 0x01	; 1
    3b4e:	90 e0       	ldi	r25, 0x00	; 0
    3b50:	0e 94 cc 19 	call	0x3398	; 0x3398 <Print_To_User>
    3b54:	88 81       	ld	r24, Y
    3b56:	80 fd       	sbrc	r24, 0
    3b58:	e3 cf       	rjmp	.-58     	; 0x3b20 <FLASH_Status+0x32>
    3b5a:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3b5e:	df 91       	pop	r29
    3b60:	cf 91       	pop	r28
    3b62:	0f 91       	pop	r16
    3b64:	ff 90       	pop	r15
    3b66:	ef 90       	pop	r14
    3b68:	df 90       	pop	r13
    3b6a:	cf 90       	pop	r12
    3b6c:	08 95       	ret

Disassembly of section .text.FLASH_Program_Execute:

000042b8 <FLASH_Program_Execute>:

void FLASH_Program_Execute() //new command to transfer data from cache to main array
{	
	FLASH_NAND_CS_ENABLE();
    42b8:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
	
	//code below sends Program_Execute command with the starting address of the main array
	SPDR = PROGRAM_EXECUTE; //Sending Program Execute Command into SPI Data Register (SPDR)
    42bc:	80 e1       	ldi	r24, 0x10	; 16
    42be:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1 << SPIF))); 
    42c0:	0d b4       	in	r0, 0x2d	; 45
    42c2:	07 fe       	sbrs	r0, 7
    42c4:	fd cf       	rjmp	.-6      	; 0x42c0 <FLASH_Program_Execute+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    42c6:	8e b5       	in	r24, 0x2e	; 46
    42c8:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	
	//_delay_us(5);
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to write data to in MainArray
    42cc:	46 e2       	ldi	r20, 0x26	; 38
    42ce:	52 e1       	ldi	r21, 0x12	; 18
    42d0:	60 e8       	ldi	r22, 0x80	; 128
    42d2:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    42d6:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    42da:	0e 94 77 1a 	call	0x34ee	; 0x34ee <FLASH_MainArray_Address>
	
	FLASH_NAND_CS_DISABLE();
    42de:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
	
	//USART_Data("Program Execute \n");
	
	FLASH_Status(); //checks for the status of data transfer from cache to main array from program_execute command
    42e2:	0e 94 77 1d 	call	0x3aee	; 0x3aee <FLASH_Status>
    42e6:	08 95       	ret

Disassembly of section .text.FLASH_Page_Program:

00003a6c <FLASH_Page_Program>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3a6c:	cf 93       	push	r28
    3a6e:	df 93       	push	r29
    3a70:	0e 94 83 22 	call	0x4506	; 0x4506 <FLASH_Write_Enable>
    3a74:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3a78:	82 e0       	ldi	r24, 0x02	; 2
    3a7a:	8e bd       	out	0x2e, r24	; 46
    3a7c:	0d b4       	in	r0, 0x2d	; 45
    3a7e:	07 fe       	sbrs	r0, 7
    3a80:	fd cf       	rjmp	.-6      	; 0x3a7c <FLASH_Page_Program+0x10>
    3a82:	8e b5       	in	r24, 0x2e	; 46
    3a84:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3a88:	8a e1       	ldi	r24, 0x1A	; 26
    3a8a:	8a 95       	dec	r24
    3a8c:	f1 f7       	brne	.-4      	; 0x3a8a <FLASH_Page_Program+0x1e>
    3a8e:	00 c0       	rjmp	.+0      	; 0x3a90 <FLASH_Page_Program+0x24>
    3a90:	46 e2       	ldi	r20, 0x26	; 38
    3a92:	52 e1       	ldi	r21, 0x12	; 18
    3a94:	60 e8       	ldi	r22, 0x80	; 128
    3a96:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    3a9a:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    3a9e:	0e 94 69 1f 	call	0x3ed2	; 0x3ed2 <FLASH_Column_Address>
    3aa2:	c0 e0       	ldi	r28, 0x00	; 0
    3aa4:	d0 e0       	ldi	r29, 0x00	; 0
    3aa6:	0c c0       	rjmp	.+24     	; 0x3ac0 <FLASH_Page_Program+0x54>
    3aa8:	fe 01       	movw	r30, r28
    3aaa:	e0 50       	subi	r30, 0x00	; 0
    3aac:	fe 4f       	sbci	r31, 0xFE	; 254
    3aae:	80 81       	ld	r24, Z
    3ab0:	8e bd       	out	0x2e, r24	; 46
    3ab2:	0d b4       	in	r0, 0x2d	; 45
    3ab4:	07 fe       	sbrs	r0, 7
    3ab6:	fd cf       	rjmp	.-6      	; 0x3ab2 <FLASH_Page_Program+0x46>
    3ab8:	8e b5       	in	r24, 0x2e	; 46
    3aba:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3abe:	21 96       	adiw	r28, 0x01	; 1
    3ac0:	60 e0       	ldi	r22, 0x00	; 0
    3ac2:	72 e0       	ldi	r23, 0x02	; 2
    3ac4:	80 e8       	ldi	r24, 0x80	; 128
    3ac6:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    3aca:	c8 17       	cp	r28, r24
    3acc:	d9 07       	cpc	r29, r25
    3ace:	60 f3       	brcs	.-40     	; 0x3aa8 <FLASH_Page_Program+0x3c>
    3ad0:	8d e0       	ldi	r24, 0x0D	; 13
    3ad2:	8e bd       	out	0x2e, r24	; 46
    3ad4:	0d b4       	in	r0, 0x2d	; 45
    3ad6:	07 fe       	sbrs	r0, 7
    3ad8:	fd cf       	rjmp	.-6      	; 0x3ad4 <FLASH_Page_Program+0x68>
    3ada:	8e b5       	in	r24, 0x2e	; 46
    3adc:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3ae0:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3ae4:	0e 94 5c 21 	call	0x42b8	; 0x42b8 <FLASH_Program_Execute>
    3ae8:	df 91       	pop	r29
    3aea:	cf 91       	pop	r28
    3aec:	08 95       	ret

Disassembly of section .text.FLASH_Page_Read:

000041a8 <FLASH_Page_Read>:
	FLASH_Status(); //checks for the status of data transfer from cache to main array from program_execute command
}

void FLASH_Page_Read() //reads a single page data from Block/Page array to transfer to Cache register
{
	FLASH_NAND_CS_ENABLE();
    41a8:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
	
	SPDR = PAGE_READ; //Sending Page_Read Command into SPI Data Register (SPDR)
    41ac:	83 e1       	ldi	r24, 0x13	; 19
    41ae:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    41b0:	0d b4       	in	r0, 0x2d	; 45
    41b2:	07 fe       	sbrs	r0, 7
    41b4:	fd cf       	rjmp	.-6      	; 0x41b0 <FLASH_Page_Read+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    41b6:	8e b5       	in	r24, 0x2e	; 46
    41b8:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	
	//_delay_us(5);
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to read data from in MainArray
    41bc:	46 e2       	ldi	r20, 0x26	; 38
    41be:	52 e1       	ldi	r21, 0x12	; 18
    41c0:	60 e8       	ldi	r22, 0x80	; 128
    41c2:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    41c6:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    41ca:	0e 94 77 1a 	call	0x34ee	; 0x34ee <FLASH_MainArray_Address>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    41ce:	00 c0       	rjmp	.+0      	; 0x41d0 <FLASH_Page_Read+0x28>
    41d0:	00 c0       	rjmp	.+0      	; 0x41d2 <FLASH_Page_Read+0x2a>
	
	_delay_us(0.200);
	
	FLASH_NAND_CS_DISABLE();
    41d2:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>

	FLASH_Status(); //checks for the status of data transfer from main array to cache from page_read command
    41d6:	0e 94 77 1d 	call	0x3aee	; 0x3aee <FLASH_Status>
	
	//USART_Data("Page Read \n");
	
	FLASH_Read_From_Cache_x1();
    41da:	0e 94 bf 1f 	call	0x3f7e	; 0x3f7e <FLASH_Read_From_Cache_x1>
    41de:	08 95       	ret

Disassembly of section .text.FLASH_Para_Pg:

00003f2e <FLASH_Para_Pg>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3f2e:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3f32:	8f e1       	ldi	r24, 0x1F	; 31
    3f34:	8e bd       	out	0x2e, r24	; 46
    3f36:	0d b4       	in	r0, 0x2d	; 45
    3f38:	07 fe       	sbrs	r0, 7
    3f3a:	fd cf       	rjmp	.-6      	; 0x3f36 <FLASH_Para_Pg+0x8>
    3f3c:	80 eb       	ldi	r24, 0xB0	; 176
    3f3e:	8e bd       	out	0x2e, r24	; 46
    3f40:	0d b4       	in	r0, 0x2d	; 45
    3f42:	07 fe       	sbrs	r0, 7
    3f44:	fd cf       	rjmp	.-6      	; 0x3f40 <FLASH_Para_Pg+0x12>
    3f46:	80 e4       	ldi	r24, 0x40	; 64
    3f48:	8e bd       	out	0x2e, r24	; 46
    3f4a:	0d b4       	in	r0, 0x2d	; 45
    3f4c:	07 fe       	sbrs	r0, 7
    3f4e:	fd cf       	rjmp	.-6      	; 0x3f4a <FLASH_Para_Pg+0x1c>
    3f50:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3f54:	0e 94 d4 20 	call	0x41a8	; 0x41a8 <FLASH_Page_Read>
    3f58:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
    3f5c:	8f e1       	ldi	r24, 0x1F	; 31
    3f5e:	8e bd       	out	0x2e, r24	; 46
    3f60:	0d b4       	in	r0, 0x2d	; 45
    3f62:	07 fe       	sbrs	r0, 7
    3f64:	fd cf       	rjmp	.-6      	; 0x3f60 <FLASH_Para_Pg+0x32>
    3f66:	80 eb       	ldi	r24, 0xB0	; 176
    3f68:	8e bd       	out	0x2e, r24	; 46
    3f6a:	0d b4       	in	r0, 0x2d	; 45
    3f6c:	07 fe       	sbrs	r0, 7
    3f6e:	fd cf       	rjmp	.-6      	; 0x3f6a <FLASH_Para_Pg+0x3c>
    3f70:	1e bc       	out	0x2e, r1	; 46
    3f72:	0d b4       	in	r0, 0x2d	; 45
    3f74:	07 fe       	sbrs	r0, 7
    3f76:	fd cf       	rjmp	.-6      	; 0x3f72 <FLASH_Para_Pg+0x44>
    3f78:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
    3f7c:	08 95       	ret

Disassembly of section .text.FLASH_Block_Erase:

00004284 <FLASH_Block_Erase>:
	//USART_Data("Read from Cache: \n");
}

void FLASH_Block_Erase() //erases data from Flash Nand Memory at the block level
{
	FLASH_Write_Enable();
    4284:	0e 94 83 22 	call	0x4506	; 0x4506 <FLASH_Write_Enable>
	
	FLASH_NAND_CS_ENABLE();
    4288:	0e 94 46 23 	call	0x468c	; 0x468c <FLASH_NAND_CS_ENABLE>
	
	SPDR = BLOCK_ERASE; //Sending Block_Erase Command into SPI Data Register (SPDR)
    428c:	88 ed       	ldi	r24, 0xD8	; 216
    428e:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    4290:	0d b4       	in	r0, 0x2d	; 45
    4292:	07 fe       	sbrs	r0, 7
    4294:	fd cf       	rjmp	.-6      	; 0x4290 <FLASH_Block_Erase+0xc>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    4296:	8e b5       	in	r24, 0x2e	; 46
    4298:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to write/read data to in MainArray
    429c:	46 e2       	ldi	r20, 0x26	; 38
    429e:	52 e1       	ldi	r21, 0x12	; 18
    42a0:	60 e8       	ldi	r22, 0x80	; 128
    42a2:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    42a6:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    42aa:	0e 94 77 1a 	call	0x34ee	; 0x34ee <FLASH_MainArray_Address>

	FLASH_NAND_CS_DISABLE();
    42ae:	0e 94 4a 23 	call	0x4694	; 0x4694 <FLASH_NAND_CS_DISABLE>
	
	FLASH_Status(); //checks for the status of data deletion on the block level from Block_Erase command
    42b2:	0e 94 77 1d 	call	0x3aee	; 0x3aee <FLASH_Status>
    42b6:	08 95       	ret

Disassembly of section .text.Page_Tester:

000030b0 <Page_Tester>:
#include "../include/FLASH_NAND_MEMORY.h"
#include "../include/AWS_Board_Operations.h"
#include "../include/NAND_Flash_Formatter.h"

void Page_Tester() //tests each page per block
{
    30b0:	cf 92       	push	r12
    30b2:	df 92       	push	r13
    30b4:	ef 92       	push	r14
    30b6:	ff 92       	push	r15
    30b8:	0f 93       	push	r16
    30ba:	cf 93       	push	r28
    30bc:	df 93       	push	r29
	 //first obtain Columns and Block/Page addresses
	USART_Data("---Column Address--- 2 bytes \n");
    30be:	6f ea       	ldi	r22, 0xAF	; 175
    30c0:	75 e0       	ldi	r23, 0x05	; 5
    30c2:	80 e0       	ldi	r24, 0x00	; 0
    30c4:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
	COLUMN_BLOCK_PAGE_ADDRESSER(false); //obtain the column address
    30c8:	80 e0       	ldi	r24, 0x00	; 0
    30ca:	0e 94 d2 12 	call	0x25a4	; 0x25a4 <COLUMN_BLOCK_PAGE_ADDRESSER>

	USART_Data("---Block/Page Address--- 3 bytes \n");
    30ce:	6e ec       	ldi	r22, 0xCE	; 206
    30d0:	75 e0       	ldi	r23, 0x05	; 5
    30d2:	80 e0       	ldi	r24, 0x00	; 0
    30d4:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <USART_Data>
	COLUMN_BLOCK_PAGE_ADDRESSER(true); //obtain the Block/Page address
    30d8:	81 e0       	ldi	r24, 0x01	; 1
    30da:	0e 94 d2 12 	call	0x25a4	; 0x25a4 <COLUMN_BLOCK_PAGE_ADDRESSER>
		
	for (int i = 0; i < PAGES_PER_BLOCK; i++)
    30de:	c0 e0       	ldi	r28, 0x00	; 0
    30e0:	d0 e0       	ldi	r29, 0x00	; 0
    30e2:	3b c0       	rjmp	.+118    	; 0x315a <Page_Tester+0xaa>
	{
		CLEAR_ARR();
    30e4:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <CLEAR_ARR>
		FLASH_Page_Read();
    30e8:	0e 94 d4 20 	call	0x41a8	; 0x41a8 <FLASH_Page_Read>
		
		if (Byte_Address[4] == 0x40) //break loop if passed this point (x3F) is where all page bits are set to 1
    30ec:	80 91 2a 12 	lds	r24, 0x122A	; 0x80122a <Byte_Address+0x4>
    30f0:	80 34       	cpi	r24, 0x40	; 64
    30f2:	b1 f1       	breq	.+108    	; 0x3160 <Page_Tester+0xb0>
		{
			break;
		}
		
		if (data[0] != 0xFF)
    30f4:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <data>
    30f8:	8f 3f       	cpi	r24, 0xFF	; 255
    30fa:	a9 f0       	breq	.+42     	; 0x3126 <Page_Tester+0x76>
		{
			Print_To_User(1, 4, "0x%02X This Page is marked bad \n", Byte_Address, status_feature);
    30fc:	86 e2       	ldi	r24, 0x26	; 38
    30fe:	92 e1       	ldi	r25, 0x12	; 18
    3100:	7c 01       	movw	r14, r24
    3102:	20 e8       	ldi	r18, 0x80	; 128
    3104:	02 2f       	mov	r16, r18
    3106:	0f 2e       	mov	r0, r31
    3108:	f0 e0       	ldi	r31, 0x00	; 0
    310a:	cf 2e       	mov	r12, r31
    310c:	fa e0       	ldi	r31, 0x0A	; 10
    310e:	df 2e       	mov	r13, r31
    3110:	f0 2d       	mov	r31, r0
    3112:	21 ef       	ldi	r18, 0xF1	; 241
    3114:	35 e0       	ldi	r19, 0x05	; 5
    3116:	40 e0       	ldi	r20, 0x00	; 0
    3118:	64 e0       	ldi	r22, 0x04	; 4
    311a:	70 e0       	ldi	r23, 0x00	; 0
    311c:	81 e0       	ldi	r24, 0x01	; 1
    311e:	90 e0       	ldi	r25, 0x00	; 0
    3120:	0e 94 cc 19 	call	0x3398	; 0x3398 <Print_To_User>
    3124:	14 c0       	rjmp	.+40     	; 0x314e <Page_Tester+0x9e>
		}
		else
		{
			Print_To_User(1, 4, "0x%02X This Page is clean \n", Byte_Address, status_feature);
    3126:	86 e2       	ldi	r24, 0x26	; 38
    3128:	92 e1       	ldi	r25, 0x12	; 18
    312a:	7c 01       	movw	r14, r24
    312c:	20 e8       	ldi	r18, 0x80	; 128
    312e:	02 2f       	mov	r16, r18
    3130:	0f 2e       	mov	r0, r31
    3132:	f0 e0       	ldi	r31, 0x00	; 0
    3134:	cf 2e       	mov	r12, r31
    3136:	fa e0       	ldi	r31, 0x0A	; 10
    3138:	df 2e       	mov	r13, r31
    313a:	f0 2d       	mov	r31, r0
    313c:	22 e1       	ldi	r18, 0x12	; 18
    313e:	36 e0       	ldi	r19, 0x06	; 6
    3140:	40 e0       	ldi	r20, 0x00	; 0
    3142:	64 e0       	ldi	r22, 0x04	; 4
    3144:	70 e0       	ldi	r23, 0x00	; 0
    3146:	81 e0       	ldi	r24, 0x01	; 1
    3148:	90 e0       	ldi	r25, 0x00	; 0
    314a:	0e 94 cc 19 	call	0x3398	; 0x3398 <Print_To_User>
		}
		
		Byte_Address[4]++; //increment page hopefully...
    314e:	e6 e2       	ldi	r30, 0x26	; 38
    3150:	f2 e1       	ldi	r31, 0x12	; 18
    3152:	84 81       	ldd	r24, Z+4	; 0x04
    3154:	8f 5f       	subi	r24, 0xFF	; 255
    3156:	84 83       	std	Z+4, r24	; 0x04
	COLUMN_BLOCK_PAGE_ADDRESSER(false); //obtain the column address

	USART_Data("---Block/Page Address--- 3 bytes \n");
	COLUMN_BLOCK_PAGE_ADDRESSER(true); //obtain the Block/Page address
		
	for (int i = 0; i < PAGES_PER_BLOCK; i++)
    3158:	21 96       	adiw	r28, 0x01	; 1
    315a:	c0 34       	cpi	r28, 0x40	; 64
    315c:	d1 05       	cpc	r29, r1
    315e:	14 f2       	brlt	.-124    	; 0x30e4 <Page_Tester+0x34>
			Print_To_User(1, 4, "0x%02X This Page is clean \n", Byte_Address, status_feature);
		}
		
		Byte_Address[4]++; //increment page hopefully...
	}
}
    3160:	df 91       	pop	r29
    3162:	cf 91       	pop	r28
    3164:	0f 91       	pop	r16
    3166:	ff 90       	pop	r15
    3168:	ef 90       	pop	r14
    316a:	df 90       	pop	r13
    316c:	cf 90       	pop	r12
    316e:	08 95       	ret

Disassembly of section .text.libgcc:

00004618 <__xload_1>:
    4618:	57 fd       	sbrc	r21, 7
    461a:	03 c0       	rjmp	.+6      	; 0x4622 <__xload_1+0xa>
    461c:	5b bf       	out	0x3b, r21	; 59
    461e:	67 91       	elpm	r22, Z+
    4620:	08 95       	ret
    4622:	60 81       	ld	r22, Z
    4624:	08 95       	ret

Disassembly of section .text.__dummy_fini:

000046ba <_fini>:
    46ba:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000046bc <__funcs_on_exit>:
    46bc:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000046be <__simulator_exit>:
    46be:	08 95       	ret

Disassembly of section .text.exit:

00004596 <exit>:
    4596:	ec 01       	movw	r28, r24
    4598:	0e 94 5e 23 	call	0x46bc	; 0x46bc <__funcs_on_exit>
    459c:	0e 94 5d 23 	call	0x46ba	; 0x46ba <_fini>
    45a0:	ce 01       	movw	r24, r28
    45a2:	0e 94 5f 23 	call	0x46be	; 0x46be <__simulator_exit>
    45a6:	ce 01       	movw	r24, r28
    45a8:	0e 94 5b 23 	call	0x46b6	; 0x46b6 <_Exit>

Disassembly of section .text.__wrap_sprintf:

000043be <_sprintf_cdnopuxX>:
    43be:	a0 e0       	ldi	r26, 0x00	; 0
    43c0:	b0 e0       	ldi	r27, 0x00	; 0
    43c2:	e5 ee       	ldi	r30, 0xE5	; 229
    43c4:	f1 e2       	ldi	r31, 0x21	; 33
    43c6:	0c 94 00 21 	jmp	0x4200	; 0x4200 <__prologue_saves__+0x20>
    43ca:	9e 01       	movw	r18, r28
    43cc:	25 5f       	subi	r18, 0xF5	; 245
    43ce:	3f 4f       	sbci	r19, 0xFF	; 255
    43d0:	48 85       	ldd	r20, Y+8	; 0x08
    43d2:	59 85       	ldd	r21, Y+9	; 0x09
    43d4:	6a 85       	ldd	r22, Y+10	; 0x0a
    43d6:	8e 81       	ldd	r24, Y+6	; 0x06
    43d8:	9f 81       	ldd	r25, Y+7	; 0x07
    43da:	0e 94 9c 22 	call	0x4538	; 0x4538 <__vsprintf>
    43de:	e2 e0       	ldi	r30, 0x02	; 2
    43e0:	0c 94 37 21 	jmp	0x426e	; 0x426e <__epilogue_restores__+0x20>

Disassembly of section .text.__fmt_s:

00002fe6 <__fmt_s>:
    2fe6:	2f 92       	push	r2
    2fe8:	3f 92       	push	r3
    2fea:	4f 92       	push	r4
    2fec:	6f 92       	push	r6
    2fee:	7f 92       	push	r7
    2ff0:	8f 92       	push	r8
    2ff2:	af 92       	push	r10
    2ff4:	bf 92       	push	r11
    2ff6:	cf 92       	push	r12
    2ff8:	df 92       	push	r13
    2ffa:	ef 92       	push	r14
    2ffc:	ff 92       	push	r15
    2ffe:	0f 93       	push	r16
    3000:	1f 93       	push	r17
    3002:	cf 93       	push	r28
    3004:	df 93       	push	r29
    3006:	cd b7       	in	r28, 0x3d	; 61
    3008:	de b7       	in	r29, 0x3e	; 62
    300a:	27 97       	sbiw	r28, 0x07	; 7
    300c:	0f b6       	in	r0, 0x3f	; 63
    300e:	f8 94       	cli
    3010:	de bf       	out	0x3e, r29	; 62
    3012:	0f be       	out	0x3f, r0	; 63
    3014:	cd bf       	out	0x3d, r28	; 61
    3016:	6c 01       	movw	r12, r24
    3018:	7b 01       	movw	r14, r22
    301a:	39 01       	movw	r6, r18
    301c:	84 2e       	mov	r8, r20
    301e:	98 01       	movw	r18, r16
    3020:	87 e7       	ldi	r24, 0x77	; 119
    3022:	28 2e       	mov	r2, r24
    3024:	86 e0       	ldi	r24, 0x06	; 6
    3026:	38 2e       	mov	r3, r24
    3028:	80 e0       	ldi	r24, 0x00	; 0
    302a:	48 2e       	mov	r4, r24
    302c:	87 e0       	ldi	r24, 0x07	; 7
    302e:	f1 01       	movw	r30, r2
    3030:	ae 01       	movw	r20, r28
    3032:	4f 5f       	subi	r20, 0xFF	; 255
    3034:	5f 4f       	sbci	r21, 0xFF	; 255
    3036:	da 01       	movw	r26, r20
    3038:	74 2d       	mov	r23, r4
    303a:	0e 94 75 22 	call	0x44ea	; 0x44ea <__movmemx_qi>
    303e:	f7 01       	movw	r30, r14
    3040:	02 81       	ldd	r16, Z+2	; 0x02
    3042:	13 81       	ldd	r17, Z+3	; 0x03
    3044:	a4 80       	ldd	r10, Z+4	; 0x04
    3046:	b5 80       	ldd	r11, Z+5	; 0x05
    3048:	e0 80       	ld	r14, Z
    304a:	f1 80       	ldd	r15, Z+1	; 0x01
    304c:	61 14       	cp	r6, r1
    304e:	71 04       	cpc	r7, r1
    3050:	81 04       	cpc	r8, r1
    3052:	19 f4       	brne	.+6      	; 0x305a <__fmt_s+0x74>
    3054:	3a 01       	movw	r6, r20
    3056:	f0 e8       	ldi	r31, 0x80	; 128
    3058:	8f 2e       	mov	r8, r31
    305a:	21 15       	cp	r18, r1
    305c:	31 05       	cpc	r19, r1
    305e:	29 f4       	brne	.+10     	; 0x306a <__fmt_s+0x84>
    3060:	88 2d       	mov	r24, r8
    3062:	b3 01       	movw	r22, r6
    3064:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    3068:	9c 01       	movw	r18, r24
    306a:	17 fd       	sbrc	r17, 7
    306c:	04 c0       	rjmp	.+8      	; 0x3076 <__fmt_s+0x90>
    306e:	02 17       	cp	r16, r18
    3070:	13 07       	cpc	r17, r19
    3072:	08 f4       	brcc	.+2      	; 0x3076 <__fmt_s+0x90>
    3074:	98 01       	movw	r18, r16
    3076:	85 01       	movw	r16, r10
    3078:	68 2d       	mov	r22, r8
    307a:	a3 01       	movw	r20, r6
    307c:	c6 01       	movw	r24, r12
    307e:	0e 94 56 15 	call	0x2aac	; 0x2aac <__pad>
    3082:	27 96       	adiw	r28, 0x07	; 7
    3084:	0f b6       	in	r0, 0x3f	; 63
    3086:	f8 94       	cli
    3088:	de bf       	out	0x3e, r29	; 62
    308a:	0f be       	out	0x3f, r0	; 63
    308c:	cd bf       	out	0x3d, r28	; 61
    308e:	df 91       	pop	r29
    3090:	cf 91       	pop	r28
    3092:	1f 91       	pop	r17
    3094:	0f 91       	pop	r16
    3096:	ff 90       	pop	r15
    3098:	ef 90       	pop	r14
    309a:	df 90       	pop	r13
    309c:	cf 90       	pop	r12
    309e:	bf 90       	pop	r11
    30a0:	af 90       	pop	r10
    30a2:	8f 90       	pop	r8
    30a4:	7f 90       	pop	r7
    30a6:	6f 90       	pop	r6
    30a8:	4f 90       	pop	r4
    30aa:	3f 90       	pop	r3
    30ac:	2f 90       	pop	r2
    30ae:	08 95       	ret

Disassembly of section .text.__out:

00003d4a <__out>:
    3d4a:	6f 92       	push	r6
    3d4c:	7f 92       	push	r7
    3d4e:	8f 92       	push	r8
    3d50:	cf 92       	push	r12
    3d52:	df 92       	push	r13
    3d54:	ef 92       	push	r14
    3d56:	0f 93       	push	r16
    3d58:	1f 93       	push	r17
    3d5a:	cf 93       	push	r28
    3d5c:	df 93       	push	r29
    3d5e:	8c 01       	movw	r16, r24
    3d60:	6a 01       	movw	r12, r20
    3d62:	e6 2e       	mov	r14, r22
    3d64:	e9 01       	movw	r28, r18
    3d66:	3a 01       	movw	r6, r20
    3d68:	86 2e       	mov	r8, r22
    3d6a:	62 0e       	add	r6, r18
    3d6c:	73 1e       	adc	r7, r19
    3d6e:	81 1c       	adc	r8, r1
    3d70:	37 fd       	sbrc	r19, 7
    3d72:	8a 94       	dec	r8
    3d74:	c6 14       	cp	r12, r6
    3d76:	d7 04       	cpc	r13, r7
    3d78:	e8 04       	cpc	r14, r8
    3d7a:	81 f0       	breq	.+32     	; 0x3d9c <__out+0x52>
    3d7c:	f6 01       	movw	r30, r12
    3d7e:	5e 2d       	mov	r21, r14
    3d80:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    3d84:	86 2f       	mov	r24, r22
    3d86:	b8 01       	movw	r22, r16
    3d88:	08 2e       	mov	r0, r24
    3d8a:	00 0c       	add	r0, r0
    3d8c:	99 0b       	sbc	r25, r25
    3d8e:	0e 94 62 1c 	call	0x38c4	; 0x38c4 <fputc>
    3d92:	8f ef       	ldi	r24, 0xFF	; 255
    3d94:	c8 1a       	sub	r12, r24
    3d96:	d8 0a       	sbc	r13, r24
    3d98:	e8 0a       	sbc	r14, r24
    3d9a:	ec cf       	rjmp	.-40     	; 0x3d74 <__out+0x2a>
    3d9c:	ce 01       	movw	r24, r28
    3d9e:	df 91       	pop	r29
    3da0:	cf 91       	pop	r28
    3da2:	1f 91       	pop	r17
    3da4:	0f 91       	pop	r16
    3da6:	ef 90       	pop	r14
    3da8:	df 90       	pop	r13
    3daa:	cf 90       	pop	r12
    3dac:	8f 90       	pop	r8
    3dae:	7f 90       	pop	r7
    3db0:	6f 90       	pop	r6
    3db2:	08 95       	ret

Disassembly of section .text.__pad:

00002aac <__pad>:
    2aac:	2f 92       	push	r2
    2aae:	3f 92       	push	r3
    2ab0:	4f 92       	push	r4
    2ab2:	6f 92       	push	r6
    2ab4:	7f 92       	push	r7
    2ab6:	8f 92       	push	r8
    2ab8:	af 92       	push	r10
    2aba:	bf 92       	push	r11
    2abc:	cf 92       	push	r12
    2abe:	df 92       	push	r13
    2ac0:	ef 92       	push	r14
    2ac2:	ff 92       	push	r15
    2ac4:	0f 93       	push	r16
    2ac6:	1f 93       	push	r17
    2ac8:	cf 93       	push	r28
    2aca:	df 93       	push	r29
    2acc:	cd b7       	in	r28, 0x3d	; 61
    2ace:	de b7       	in	r29, 0x3e	; 62
    2ad0:	66 97       	sbiw	r28, 0x16	; 22
    2ad2:	0f b6       	in	r0, 0x3f	; 63
    2ad4:	f8 94       	cli
    2ad6:	de bf       	out	0x3e, r29	; 62
    2ad8:	0f be       	out	0x3f, r0	; 63
    2ada:	cd bf       	out	0x3d, r28	; 61
    2adc:	5c 01       	movw	r10, r24
    2ade:	3a 01       	movw	r6, r20
    2ae0:	86 2e       	mov	r8, r22
    2ae2:	69 01       	movw	r12, r18
    2ae4:	c7 01       	movw	r24, r14
    2ae6:	81 70       	andi	r24, 0x01	; 1
    2ae8:	99 27       	eor	r25, r25
    2aea:	9c 8b       	std	Y+20, r25	; 0x14
    2aec:	8b 8b       	std	Y+19, r24	; 0x13
    2aee:	e0 fc       	sbrc	r14, 0
    2af0:	1d c0       	rjmp	.+58     	; 0x2b2c <__pad+0x80>
    2af2:	20 17       	cp	r18, r16
    2af4:	31 07       	cpc	r19, r17
    2af6:	d4 f4       	brge	.+52     	; 0x2b2c <__pad+0x80>
    2af8:	78 01       	movw	r14, r16
    2afa:	ec 18       	sub	r14, r12
    2afc:	fd 08       	sbc	r15, r13
    2afe:	fe 8a       	std	Y+22, r15	; 0x16
    2b00:	ed 8a       	std	Y+21, r14	; 0x15
    2b02:	a7 01       	movw	r20, r14
    2b04:	91 e1       	ldi	r25, 0x11	; 17
    2b06:	e9 16       	cp	r14, r25
    2b08:	f1 04       	cpc	r15, r1
    2b0a:	10 f0       	brcs	.+4      	; 0x2b10 <__pad+0x64>
    2b0c:	40 e1       	ldi	r20, 0x10	; 16
    2b0e:	50 e0       	ldi	r21, 0x00	; 0
    2b10:	60 e2       	ldi	r22, 0x20	; 32
    2b12:	70 e0       	ldi	r23, 0x00	; 0
    2b14:	ce 01       	movw	r24, r28
    2b16:	01 96       	adiw	r24, 0x01	; 1
    2b18:	9a 8b       	std	Y+18, r25	; 0x12
    2b1a:	89 8b       	std	Y+17, r24	; 0x11
    2b1c:	0e 94 d6 22 	call	0x45ac	; 0x45ac <memset>
    2b20:	89 89       	ldd	r24, Y+17	; 0x11
    2b22:	9a 89       	ldd	r25, Y+18	; 0x12
    2b24:	1c 01       	movw	r2, r24
    2b26:	20 e8       	ldi	r18, 0x80	; 128
    2b28:	42 2e       	mov	r4, r18
    2b2a:	0b c0       	rjmp	.+22     	; 0x2b42 <__pad+0x96>
    2b2c:	96 01       	movw	r18, r12
    2b2e:	68 2d       	mov	r22, r8
    2b30:	a3 01       	movw	r20, r6
    2b32:	c5 01       	movw	r24, r10
    2b34:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <__out>
    2b38:	c0 16       	cp	r12, r16
    2b3a:	d1 06       	cpc	r13, r17
    2b3c:	ec f2       	brlt	.-70     	; 0x2af8 <__pad+0x4c>
    2b3e:	c6 01       	movw	r24, r12
    2b40:	25 c0       	rjmp	.+74     	; 0x2b8c <__pad+0xe0>
    2b42:	90 e1       	ldi	r25, 0x10	; 16
    2b44:	e9 16       	cp	r14, r25
    2b46:	f1 04       	cpc	r15, r1
    2b48:	58 f0       	brcs	.+22     	; 0x2b60 <__pad+0xb4>
    2b4a:	20 e1       	ldi	r18, 0x10	; 16
    2b4c:	30 e0       	ldi	r19, 0x00	; 0
    2b4e:	64 2d       	mov	r22, r4
    2b50:	a1 01       	movw	r20, r2
    2b52:	c5 01       	movw	r24, r10
    2b54:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <__out>
    2b58:	80 e1       	ldi	r24, 0x10	; 16
    2b5a:	e8 1a       	sub	r14, r24
    2b5c:	f1 08       	sbc	r15, r1
    2b5e:	f1 cf       	rjmp	.-30     	; 0x2b42 <__pad+0x96>
    2b60:	2d 89       	ldd	r18, Y+21	; 0x15
    2b62:	3e 89       	ldd	r19, Y+22	; 0x16
    2b64:	2f 70       	andi	r18, 0x0F	; 15
    2b66:	33 27       	eor	r19, r19
    2b68:	89 89       	ldd	r24, Y+17	; 0x11
    2b6a:	9a 89       	ldd	r25, Y+18	; 0x12
    2b6c:	ac 01       	movw	r20, r24
    2b6e:	60 e8       	ldi	r22, 0x80	; 128
    2b70:	c5 01       	movw	r24, r10
    2b72:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <__out>
    2b76:	8b 89       	ldd	r24, Y+19	; 0x13
    2b78:	9c 89       	ldd	r25, Y+20	; 0x14
    2b7a:	89 2b       	or	r24, r25
    2b7c:	31 f4       	brne	.+12     	; 0x2b8a <__pad+0xde>
    2b7e:	96 01       	movw	r18, r12
    2b80:	68 2d       	mov	r22, r8
    2b82:	a3 01       	movw	r20, r6
    2b84:	c5 01       	movw	r24, r10
    2b86:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <__out>
    2b8a:	c8 01       	movw	r24, r16
    2b8c:	66 96       	adiw	r28, 0x16	; 22
    2b8e:	0f b6       	in	r0, 0x3f	; 63
    2b90:	f8 94       	cli
    2b92:	de bf       	out	0x3e, r29	; 62
    2b94:	0f be       	out	0x3f, r0	; 63
    2b96:	cd bf       	out	0x3d, r28	; 61
    2b98:	df 91       	pop	r29
    2b9a:	cf 91       	pop	r28
    2b9c:	1f 91       	pop	r17
    2b9e:	0f 91       	pop	r16
    2ba0:	ff 90       	pop	r15
    2ba2:	ef 90       	pop	r14
    2ba4:	df 90       	pop	r13
    2ba6:	cf 90       	pop	r12
    2ba8:	bf 90       	pop	r11
    2baa:	af 90       	pop	r10
    2bac:	8f 90       	pop	r8
    2bae:	7f 90       	pop	r7
    2bb0:	6f 90       	pop	r6
    2bb2:	4f 90       	pop	r4
    2bb4:	3f 90       	pop	r3
    2bb6:	2f 90       	pop	r2
    2bb8:	08 95       	ret

Disassembly of section .text.__fmt_state:

00003594 <__fmt_state>:
    3594:	cf 92       	push	r12
    3596:	df 92       	push	r13
    3598:	ef 92       	push	r14
    359a:	dc 01       	movw	r26, r24
    359c:	90 e0       	ldi	r25, 0x00	; 0
    359e:	29 2f       	mov	r18, r25
    35a0:	30 e0       	ldi	r19, 0x00	; 0
    35a2:	22 0f       	add	r18, r18
    35a4:	33 1f       	adc	r19, r19
    35a6:	69 01       	movw	r12, r18
    35a8:	03 2e       	mov	r0, r19
    35aa:	00 0c       	add	r0, r0
    35ac:	ee 08       	sbc	r14, r14
    35ae:	6e 2d       	mov	r22, r14
    35b0:	a6 01       	movw	r20, r12
    35b2:	42 5d       	subi	r20, 0xD2	; 210
    35b4:	59 4f       	sbci	r21, 0xF9	; 249
    35b6:	6f 4f       	sbci	r22, 0xFF	; 255
    35b8:	6a 01       	movw	r12, r20
    35ba:	e6 2e       	mov	r14, r22
    35bc:	fa 01       	movw	r30, r20
    35be:	5e 2d       	mov	r21, r14
    35c0:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    35c4:	86 2f       	mov	r24, r22
    35c6:	61 11       	cpse	r22, r1
    35c8:	0e c0       	rjmp	.+28     	; 0x35e6 <__fmt_state+0x52>
    35ca:	2f 5f       	subi	r18, 0xFF	; 255
    35cc:	3f 4f       	sbci	r19, 0xFF	; 255
    35ce:	03 2e       	mov	r0, r19
    35d0:	00 0c       	add	r0, r0
    35d2:	44 0b       	sbc	r20, r20
    35d4:	22 5d       	subi	r18, 0xD2	; 210
    35d6:	39 4f       	sbci	r19, 0xF9	; 249
    35d8:	4f 4f       	sbci	r20, 0xFF	; 255
    35da:	f9 01       	movw	r30, r18
    35dc:	54 2f       	mov	r21, r20
    35de:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    35e2:	86 2f       	mov	r24, r22
    35e4:	25 c0       	rjmp	.+74     	; 0x3630 <__fmt_state+0x9c>
    35e6:	cd 90       	ld	r12, X+
    35e8:	dd 90       	ld	r13, X+
    35ea:	ec 90       	ld	r14, X
    35ec:	12 97       	sbiw	r26, 0x02	; 2
    35ee:	f6 01       	movw	r30, r12
    35f0:	5e 2d       	mov	r21, r14
    35f2:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    35f6:	86 13       	cpse	r24, r22
    35f8:	16 c0       	rjmp	.+44     	; 0x3626 <__fmt_state+0x92>
    35fa:	2f 5f       	subi	r18, 0xFF	; 255
    35fc:	3f 4f       	sbci	r19, 0xFF	; 255
    35fe:	03 2e       	mov	r0, r19
    3600:	00 0c       	add	r0, r0
    3602:	44 0b       	sbc	r20, r20
    3604:	22 5d       	subi	r18, 0xD2	; 210
    3606:	39 4f       	sbci	r19, 0xF9	; 249
    3608:	4f 4f       	sbci	r20, 0xFF	; 255
    360a:	f9 01       	movw	r30, r18
    360c:	54 2f       	mov	r21, r20
    360e:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    3612:	96 2f       	mov	r25, r22
    3614:	5f ef       	ldi	r21, 0xFF	; 255
    3616:	c5 1a       	sub	r12, r21
    3618:	d5 0a       	sbc	r13, r21
    361a:	e5 0a       	sbc	r14, r21
    361c:	cd 92       	st	X+, r12
    361e:	dd 92       	st	X+, r13
    3620:	ec 92       	st	X, r14
    3622:	12 97       	sbiw	r26, 0x02	; 2
    3624:	01 c0       	rjmp	.+2      	; 0x3628 <__fmt_state+0x94>
    3626:	9f 5f       	subi	r25, 0xFF	; 255
    3628:	9b 30       	cpi	r25, 0x0B	; 11
    362a:	08 f4       	brcc	.+2      	; 0x362e <__fmt_state+0x9a>
    362c:	b8 cf       	rjmp	.-144    	; 0x359e <__fmt_state+0xa>
    362e:	89 2f       	mov	r24, r25
    3630:	ef 90       	pop	r14
    3632:	df 90       	pop	r13
    3634:	cf 90       	pop	r12
    3636:	08 95       	ret

Disassembly of section .text.__printf_core:

00000684 <__printf_core>:
 684:	a3 ea       	ldi	r26, 0xA3	; 163
 686:	b0 e0       	ldi	r27, 0x00	; 0
 688:	e8 e4       	ldi	r30, 0x48	; 72
 68a:	f3 e0       	ldi	r31, 0x03	; 3
 68c:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
 690:	4c 01       	movw	r8, r24
 692:	59 01       	movw	r10, r18
 694:	c7 56       	subi	r28, 0x67	; 103
 696:	df 4f       	sbci	r29, 0xFF	; 255
 698:	48 83       	st	Y, r20
 69a:	59 83       	std	Y+1, r21	; 0x01
 69c:	6a 83       	std	Y+2, r22	; 0x02
 69e:	c9 59       	subi	r28, 0x99	; 153
 6a0:	d0 40       	sbci	r29, 0x00	; 0
 6a2:	21 2c       	mov	r2, r1
 6a4:	31 2c       	mov	r3, r1
 6a6:	6e 01       	movw	r12, r28
 6a8:	2b e8       	ldi	r18, 0x8B	; 139
 6aa:	c2 0e       	add	r12, r18
 6ac:	d1 1c       	adc	r13, r1
 6ae:	85 e2       	ldi	r24, 0x25	; 37
 6b0:	78 2e       	mov	r7, r24
 6b2:	26 01       	movw	r4, r12
 6b4:	30 e8       	ldi	r19, 0x80	; 128
 6b6:	63 2e       	mov	r6, r19
 6b8:	ce 01       	movw	r24, r28
 6ba:	8d 56       	subi	r24, 0x6D	; 109
 6bc:	9f 4f       	sbci	r25, 0xFF	; 255
 6be:	c4 56       	subi	r28, 0x64	; 100
 6c0:	df 4f       	sbci	r29, 0xFF	; 255
 6c2:	99 83       	std	Y+1, r25	; 0x01
 6c4:	88 83       	st	Y, r24
 6c6:	cc 59       	subi	r28, 0x9C	; 156
 6c8:	d0 40       	sbci	r29, 0x00	; 0
 6ca:	9c 01       	movw	r18, r24
 6cc:	40 e8       	ldi	r20, 0x80	; 128
 6ce:	cf 55       	subi	r28, 0x5F	; 95
 6d0:	df 4f       	sbci	r29, 0xFF	; 255
 6d2:	28 83       	st	Y, r18
 6d4:	39 83       	std	Y+1, r19	; 0x01
 6d6:	4a 83       	std	Y+2, r20	; 0x02
 6d8:	c1 5a       	subi	r28, 0xA1	; 161
 6da:	d0 40       	sbci	r29, 0x00	; 0
 6dc:	c7 56       	subi	r28, 0x67	; 103
 6de:	df 4f       	sbci	r29, 0xFF	; 255
 6e0:	48 81       	ld	r20, Y
 6e2:	c9 59       	subi	r28, 0x99	; 153
 6e4:	d0 40       	sbci	r29, 0x00	; 0
 6e6:	c6 56       	subi	r28, 0x66	; 102
 6e8:	df 4f       	sbci	r29, 0xFF	; 255
 6ea:	b8 81       	ld	r27, Y
 6ec:	ca 59       	subi	r28, 0x9A	; 154
 6ee:	d0 40       	sbci	r29, 0x00	; 0
 6f0:	c5 56       	subi	r28, 0x65	; 101
 6f2:	df 4f       	sbci	r29, 0xFF	; 255
 6f4:	78 81       	ld	r23, Y
 6f6:	cb 59       	subi	r28, 0x9B	; 155
 6f8:	d0 40       	sbci	r29, 0x00	; 0
 6fa:	e4 2f       	mov	r30, r20
 6fc:	fb 2f       	mov	r31, r27
 6fe:	57 2f       	mov	r21, r23
 700:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 704:	66 23       	and	r22, r22
 706:	09 f4       	brne	.+2      	; 0x70a <__printf_core+0x86>
 708:	d0 c3       	rjmp	.+1952   	; 0xeaa <__printf_core+0x826>
 70a:	cf 57       	subi	r28, 0x7F	; 127
 70c:	df 4f       	sbci	r29, 0xFF	; 255
 70e:	19 82       	std	Y+1, r1	; 0x01
 710:	18 82       	st	Y, r1
 712:	c1 58       	subi	r28, 0x81	; 129
 714:	d0 40       	sbci	r29, 0x00	; 0
 716:	8f ef       	ldi	r24, 0xFF	; 255
 718:	9f ef       	ldi	r25, 0xFF	; 255
 71a:	cd 57       	subi	r28, 0x7D	; 125
 71c:	df 4f       	sbci	r29, 0xFF	; 255
 71e:	99 83       	std	Y+1, r25	; 0x01
 720:	88 83       	st	Y, r24
 722:	c3 58       	subi	r28, 0x83	; 131
 724:	d0 40       	sbci	r29, 0x00	; 0
 726:	cb 57       	subi	r28, 0x7B	; 123
 728:	df 4f       	sbci	r29, 0xFF	; 255
 72a:	19 82       	std	Y+1, r1	; 0x01
 72c:	18 82       	st	Y, r1
 72e:	c5 58       	subi	r28, 0x85	; 133
 730:	d0 40       	sbci	r29, 0x00	; 0
 732:	e1 e0       	ldi	r30, 0x01	; 1
 734:	f0 e0       	ldi	r31, 0x00	; 0
 736:	ec 0f       	add	r30, r28
 738:	fd 1f       	adc	r31, r29
 73a:	c9 57       	subi	r28, 0x79	; 121
 73c:	df 4f       	sbci	r29, 0xFF	; 255
 73e:	f9 83       	std	Y+1, r31	; 0x01
 740:	e8 83       	st	Y, r30
 742:	c7 58       	subi	r28, 0x87	; 135
 744:	d0 40       	sbci	r29, 0x00	; 0
 746:	20 e8       	ldi	r18, 0x80	; 128
 748:	30 e0       	ldi	r19, 0x00	; 0
 74a:	c7 57       	subi	r28, 0x77	; 119
 74c:	df 4f       	sbci	r29, 0xFF	; 255
 74e:	39 83       	std	Y+1, r19	; 0x01
 750:	28 83       	st	Y, r18
 752:	c9 58       	subi	r28, 0x89	; 137
 754:	d0 40       	sbci	r29, 0x00	; 0
 756:	84 2f       	mov	r24, r20
 758:	9b 2f       	mov	r25, r27
 75a:	a7 2f       	mov	r26, r23
 75c:	e1 2c       	mov	r14, r1
 75e:	f1 2c       	mov	r15, r1
 760:	fc 01       	movw	r30, r24
 762:	5a 2f       	mov	r21, r26
 764:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 768:	61 11       	cpse	r22, r1
 76a:	1d c0       	rjmp	.+58     	; 0x7a6 <__printf_core+0x122>
 76c:	e1 14       	cp	r14, r1
 76e:	f1 04       	cpc	r15, r1
 770:	11 f1       	breq	.+68     	; 0x7b6 <__printf_core+0x132>
 772:	97 01       	movw	r18, r14
 774:	5b 2f       	mov	r21, r27
 776:	67 2f       	mov	r22, r23
 778:	c4 01       	movw	r24, r8
 77a:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <__out>
 77e:	c7 56       	subi	r28, 0x67	; 103
 780:	df 4f       	sbci	r29, 0xFF	; 255
 782:	88 81       	ld	r24, Y
 784:	99 81       	ldd	r25, Y+1	; 0x01
 786:	aa 81       	ldd	r26, Y+2	; 0x02
 788:	c9 59       	subi	r28, 0x99	; 153
 78a:	d0 40       	sbci	r29, 0x00	; 0
 78c:	8e 0d       	add	r24, r14
 78e:	9f 1d       	adc	r25, r15
 790:	a1 1d       	adc	r26, r1
 792:	f7 fc       	sbrc	r15, 7
 794:	aa 95       	dec	r26
 796:	c7 56       	subi	r28, 0x67	; 103
 798:	df 4f       	sbci	r29, 0xFF	; 255
 79a:	88 83       	st	Y, r24
 79c:	99 83       	std	Y+1, r25	; 0x01
 79e:	aa 83       	std	Y+2, r26	; 0x02
 7a0:	c9 59       	subi	r28, 0x99	; 153
 7a2:	d0 40       	sbci	r29, 0x00	; 0
 7a4:	08 c0       	rjmp	.+16     	; 0x7b6 <__printf_core+0x132>
 7a6:	01 96       	adiw	r24, 0x01	; 1
 7a8:	a1 1d       	adc	r26, r1
 7aa:	65 32       	cpi	r22, 0x25	; 37
 7ac:	f9 f2       	breq	.-66     	; 0x76c <__printf_core+0xe8>
 7ae:	3f ef       	ldi	r19, 0xFF	; 255
 7b0:	e3 1a       	sub	r14, r19
 7b2:	f3 0a       	sbc	r15, r19
 7b4:	d5 cf       	rjmp	.-86     	; 0x760 <__printf_core+0xdc>
 7b6:	c7 56       	subi	r28, 0x67	; 103
 7b8:	df 4f       	sbci	r29, 0xFF	; 255
 7ba:	88 81       	ld	r24, Y
 7bc:	99 81       	ldd	r25, Y+1	; 0x01
 7be:	aa 81       	ldd	r26, Y+2	; 0x02
 7c0:	c9 59       	subi	r28, 0x99	; 153
 7c2:	d0 40       	sbci	r29, 0x00	; 0
 7c4:	fc 01       	movw	r30, r24
 7c6:	5a 2f       	mov	r21, r26
 7c8:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 7cc:	65 32       	cpi	r22, 0x25	; 37
 7ce:	09 f0       	breq	.+2      	; 0x7d2 <__printf_core+0x14e>
 7d0:	5a c3       	rjmp	.+1716   	; 0xe86 <__printf_core+0x802>
 7d2:	9c 01       	movw	r18, r24
 7d4:	4a 2f       	mov	r20, r26
 7d6:	2f 5f       	subi	r18, 0xFF	; 255
 7d8:	3f 4f       	sbci	r19, 0xFF	; 255
 7da:	4f 4f       	sbci	r20, 0xFF	; 255
 7dc:	c2 56       	subi	r28, 0x62	; 98
 7de:	df 4f       	sbci	r29, 0xFF	; 255
 7e0:	28 83       	st	Y, r18
 7e2:	39 83       	std	Y+1, r19	; 0x01
 7e4:	4a 83       	std	Y+2, r20	; 0x02
 7e6:	ce 59       	subi	r28, 0x9E	; 158
 7e8:	d0 40       	sbci	r29, 0x00	; 0
 7ea:	c7 56       	subi	r28, 0x67	; 103
 7ec:	df 4f       	sbci	r29, 0xFF	; 255
 7ee:	28 83       	st	Y, r18
 7f0:	39 83       	std	Y+1, r19	; 0x01
 7f2:	4a 83       	std	Y+2, r20	; 0x02
 7f4:	c9 59       	subi	r28, 0x99	; 153
 7f6:	d0 40       	sbci	r29, 0x00	; 0
 7f8:	c7 56       	subi	r28, 0x67	; 103
 7fa:	df 4f       	sbci	r29, 0xFF	; 255
 7fc:	88 81       	ld	r24, Y
 7fe:	99 81       	ldd	r25, Y+1	; 0x01
 800:	aa 81       	ldd	r26, Y+2	; 0x02
 802:	c9 59       	subi	r28, 0x99	; 153
 804:	d0 40       	sbci	r29, 0x00	; 0
 806:	fc 01       	movw	r30, r24
 808:	5a 2f       	mov	r21, r26
 80a:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 80e:	6b 32       	cpi	r22, 0x2B	; 43
 810:	41 f4       	brne	.+16     	; 0x822 <__printf_core+0x19e>
 812:	cf 57       	subi	r28, 0x7F	; 127
 814:	df 4f       	sbci	r29, 0xFF	; 255
 816:	28 81       	ld	r18, Y
 818:	39 81       	ldd	r19, Y+1	; 0x01
 81a:	c1 58       	subi	r28, 0x81	; 129
 81c:	d0 40       	sbci	r29, 0x00	; 0
 81e:	24 60       	ori	r18, 0x04	; 4
 820:	0b c0       	rjmp	.+22     	; 0x838 <__printf_core+0x1b4>
 822:	6c 32       	cpi	r22, 0x2C	; 44
 824:	cc f0       	brlt	.+50     	; 0x858 <__printf_core+0x1d4>
 826:	6d 32       	cpi	r22, 0x2D	; 45
 828:	59 f5       	brne	.+86     	; 0x880 <__printf_core+0x1fc>
 82a:	cf 57       	subi	r28, 0x7F	; 127
 82c:	df 4f       	sbci	r29, 0xFF	; 255
 82e:	28 81       	ld	r18, Y
 830:	39 81       	ldd	r19, Y+1	; 0x01
 832:	c1 58       	subi	r28, 0x81	; 129
 834:	d0 40       	sbci	r29, 0x00	; 0
 836:	21 60       	ori	r18, 0x01	; 1
 838:	cf 57       	subi	r28, 0x7F	; 127
 83a:	df 4f       	sbci	r29, 0xFF	; 255
 83c:	39 83       	std	Y+1, r19	; 0x01
 83e:	28 83       	st	Y, r18
 840:	c1 58       	subi	r28, 0x81	; 129
 842:	d0 40       	sbci	r29, 0x00	; 0
 844:	01 96       	adiw	r24, 0x01	; 1
 846:	a1 1d       	adc	r26, r1
 848:	c7 56       	subi	r28, 0x67	; 103
 84a:	df 4f       	sbci	r29, 0xFF	; 255
 84c:	88 83       	st	Y, r24
 84e:	99 83       	std	Y+1, r25	; 0x01
 850:	aa 83       	std	Y+2, r26	; 0x02
 852:	c9 59       	subi	r28, 0x99	; 153
 854:	d0 40       	sbci	r29, 0x00	; 0
 856:	d0 cf       	rjmp	.-96     	; 0x7f8 <__printf_core+0x174>
 858:	60 32       	cpi	r22, 0x20	; 32
 85a:	41 f4       	brne	.+16     	; 0x86c <__printf_core+0x1e8>
 85c:	cf 57       	subi	r28, 0x7F	; 127
 85e:	df 4f       	sbci	r29, 0xFF	; 255
 860:	28 81       	ld	r18, Y
 862:	39 81       	ldd	r19, Y+1	; 0x01
 864:	c1 58       	subi	r28, 0x81	; 129
 866:	d0 40       	sbci	r29, 0x00	; 0
 868:	28 60       	ori	r18, 0x08	; 8
 86a:	e6 cf       	rjmp	.-52     	; 0x838 <__printf_core+0x1b4>
 86c:	63 32       	cpi	r22, 0x23	; 35
 86e:	91 f4       	brne	.+36     	; 0x894 <__printf_core+0x210>
 870:	cf 57       	subi	r28, 0x7F	; 127
 872:	df 4f       	sbci	r29, 0xFF	; 255
 874:	28 81       	ld	r18, Y
 876:	39 81       	ldd	r19, Y+1	; 0x01
 878:	c1 58       	subi	r28, 0x81	; 129
 87a:	d0 40       	sbci	r29, 0x00	; 0
 87c:	20 61       	ori	r18, 0x10	; 16
 87e:	dc cf       	rjmp	.-72     	; 0x838 <__printf_core+0x1b4>
 880:	60 33       	cpi	r22, 0x30	; 48
 882:	41 f4       	brne	.+16     	; 0x894 <__printf_core+0x210>
 884:	cf 57       	subi	r28, 0x7F	; 127
 886:	df 4f       	sbci	r29, 0xFF	; 255
 888:	28 81       	ld	r18, Y
 88a:	39 81       	ldd	r19, Y+1	; 0x01
 88c:	c1 58       	subi	r28, 0x81	; 129
 88e:	d0 40       	sbci	r29, 0x00	; 0
 890:	22 60       	ori	r18, 0x02	; 2
 892:	d2 cf       	rjmp	.-92     	; 0x838 <__printf_core+0x1b4>
 894:	6a 32       	cpi	r22, 0x2A	; 42
 896:	99 f5       	brne	.+102    	; 0x8fe <__printf_core+0x27a>
 898:	01 96       	adiw	r24, 0x01	; 1
 89a:	a1 1d       	adc	r26, r1
 89c:	c7 56       	subi	r28, 0x67	; 103
 89e:	df 4f       	sbci	r29, 0xFF	; 255
 8a0:	88 83       	st	Y, r24
 8a2:	99 83       	std	Y+1, r25	; 0x01
 8a4:	aa 83       	std	Y+2, r26	; 0x02
 8a6:	c9 59       	subi	r28, 0x99	; 153
 8a8:	d0 40       	sbci	r29, 0x00	; 0
 8aa:	d5 01       	movw	r26, r10
 8ac:	ed 91       	ld	r30, X+
 8ae:	fc 91       	ld	r31, X
 8b0:	11 97       	sbiw	r26, 0x01	; 1
 8b2:	cf 01       	movw	r24, r30
 8b4:	02 96       	adiw	r24, 0x02	; 2
 8b6:	8d 93       	st	X+, r24
 8b8:	9c 93       	st	X, r25
 8ba:	80 81       	ld	r24, Z
 8bc:	91 81       	ldd	r25, Z+1	; 0x01
 8be:	cb 57       	subi	r28, 0x7B	; 123
 8c0:	df 4f       	sbci	r29, 0xFF	; 255
 8c2:	99 83       	std	Y+1, r25	; 0x01
 8c4:	88 83       	st	Y, r24
 8c6:	c5 58       	subi	r28, 0x85	; 133
 8c8:	d0 40       	sbci	r29, 0x00	; 0
 8ca:	97 ff       	sbrs	r25, 7
 8cc:	3f c0       	rjmp	.+126    	; 0x94c <__printf_core+0x2c8>
 8ce:	cf 57       	subi	r28, 0x7F	; 127
 8d0:	df 4f       	sbci	r29, 0xFF	; 255
 8d2:	28 81       	ld	r18, Y
 8d4:	39 81       	ldd	r19, Y+1	; 0x01
 8d6:	c1 58       	subi	r28, 0x81	; 129
 8d8:	d0 40       	sbci	r29, 0x00	; 0
 8da:	b1 e0       	ldi	r27, 0x01	; 1
 8dc:	2b 27       	eor	r18, r27
 8de:	cf 57       	subi	r28, 0x7F	; 127
 8e0:	df 4f       	sbci	r29, 0xFF	; 255
 8e2:	39 83       	std	Y+1, r19	; 0x01
 8e4:	28 83       	st	Y, r18
 8e6:	c1 58       	subi	r28, 0x81	; 129
 8e8:	d0 40       	sbci	r29, 0x00	; 0
 8ea:	91 95       	neg	r25
 8ec:	81 95       	neg	r24
 8ee:	91 09       	sbc	r25, r1
 8f0:	cb 57       	subi	r28, 0x7B	; 123
 8f2:	df 4f       	sbci	r29, 0xFF	; 255
 8f4:	99 83       	std	Y+1, r25	; 0x01
 8f6:	88 83       	st	Y, r24
 8f8:	c5 58       	subi	r28, 0x85	; 133
 8fa:	d0 40       	sbci	r29, 0x00	; 0
 8fc:	27 c0       	rjmp	.+78     	; 0x94c <__printf_core+0x2c8>
 8fe:	bc 01       	movw	r22, r24
 900:	8a 2f       	mov	r24, r26
 902:	0e 94 ab 1c 	call	0x3956	; 0x3956 <atoi>
 906:	cb 57       	subi	r28, 0x7B	; 123
 908:	df 4f       	sbci	r29, 0xFF	; 255
 90a:	99 83       	std	Y+1, r25	; 0x01
 90c:	88 83       	st	Y, r24
 90e:	c5 58       	subi	r28, 0x85	; 133
 910:	d0 40       	sbci	r29, 0x00	; 0
 912:	c7 56       	subi	r28, 0x67	; 103
 914:	df 4f       	sbci	r29, 0xFF	; 255
 916:	88 81       	ld	r24, Y
 918:	99 81       	ldd	r25, Y+1	; 0x01
 91a:	aa 81       	ldd	r26, Y+2	; 0x02
 91c:	c9 59       	subi	r28, 0x99	; 153
 91e:	d0 40       	sbci	r29, 0x00	; 0
 920:	fc 01       	movw	r30, r24
 922:	5a 2f       	mov	r21, r26
 924:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 928:	06 2e       	mov	r0, r22
 92a:	00 0c       	add	r0, r0
 92c:	77 0b       	sbc	r23, r23
 92e:	60 53       	subi	r22, 0x30	; 48
 930:	71 09       	sbc	r23, r1
 932:	6a 30       	cpi	r22, 0x0A	; 10
 934:	71 05       	cpc	r23, r1
 936:	50 f4       	brcc	.+20     	; 0x94c <__printf_core+0x2c8>
 938:	01 96       	adiw	r24, 0x01	; 1
 93a:	a1 1d       	adc	r26, r1
 93c:	c7 56       	subi	r28, 0x67	; 103
 93e:	df 4f       	sbci	r29, 0xFF	; 255
 940:	88 83       	st	Y, r24
 942:	99 83       	std	Y+1, r25	; 0x01
 944:	aa 83       	std	Y+2, r26	; 0x02
 946:	c9 59       	subi	r28, 0x99	; 153
 948:	d0 40       	sbci	r29, 0x00	; 0
 94a:	e3 cf       	rjmp	.-58     	; 0x912 <__printf_core+0x28e>
 94c:	cf 57       	subi	r28, 0x7F	; 127
 94e:	df 4f       	sbci	r29, 0xFF	; 255
 950:	88 81       	ld	r24, Y
 952:	99 81       	ldd	r25, Y+1	; 0x01
 954:	c1 58       	subi	r28, 0x81	; 129
 956:	d0 40       	sbci	r29, 0x00	; 0
 958:	80 ff       	sbrs	r24, 0
 95a:	07 c0       	rjmp	.+14     	; 0x96a <__printf_core+0x2e6>
 95c:	8d 7f       	andi	r24, 0xFD	; 253
 95e:	cf 57       	subi	r28, 0x7F	; 127
 960:	df 4f       	sbci	r29, 0xFF	; 255
 962:	99 83       	std	Y+1, r25	; 0x01
 964:	88 83       	st	Y, r24
 966:	c1 58       	subi	r28, 0x81	; 129
 968:	d0 40       	sbci	r29, 0x00	; 0
 96a:	c7 56       	subi	r28, 0x67	; 103
 96c:	df 4f       	sbci	r29, 0xFF	; 255
 96e:	88 81       	ld	r24, Y
 970:	99 81       	ldd	r25, Y+1	; 0x01
 972:	aa 81       	ldd	r26, Y+2	; 0x02
 974:	c9 59       	subi	r28, 0x99	; 153
 976:	d0 40       	sbci	r29, 0x00	; 0
 978:	fc 01       	movw	r30, r24
 97a:	5a 2f       	mov	r21, r26
 97c:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 980:	6e 32       	cpi	r22, 0x2E	; 46
 982:	09 f0       	breq	.+2      	; 0x986 <__printf_core+0x302>
 984:	59 c0       	rjmp	.+178    	; 0xa38 <__printf_core+0x3b4>
 986:	cd 57       	subi	r28, 0x7D	; 125
 988:	df 4f       	sbci	r29, 0xFF	; 255
 98a:	19 82       	std	Y+1, r1	; 0x01
 98c:	18 82       	st	Y, r1
 98e:	c3 58       	subi	r28, 0x83	; 131
 990:	d0 40       	sbci	r29, 0x00	; 0
 992:	9c 01       	movw	r18, r24
 994:	4a 2f       	mov	r20, r26
 996:	2f 5f       	subi	r18, 0xFF	; 255
 998:	3f 4f       	sbci	r19, 0xFF	; 255
 99a:	4f 4f       	sbci	r20, 0xFF	; 255
 99c:	c7 56       	subi	r28, 0x67	; 103
 99e:	df 4f       	sbci	r29, 0xFF	; 255
 9a0:	28 83       	st	Y, r18
 9a2:	39 83       	std	Y+1, r19	; 0x01
 9a4:	4a 83       	std	Y+2, r20	; 0x02
 9a6:	c9 59       	subi	r28, 0x99	; 153
 9a8:	d0 40       	sbci	r29, 0x00	; 0
 9aa:	f9 01       	movw	r30, r18
 9ac:	54 2f       	mov	r21, r20
 9ae:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 9b2:	6a 32       	cpi	r22, 0x2A	; 42
 9b4:	d1 f4       	brne	.+52     	; 0x9ea <__printf_core+0x366>
 9b6:	02 96       	adiw	r24, 0x02	; 2
 9b8:	a1 1d       	adc	r26, r1
 9ba:	c7 56       	subi	r28, 0x67	; 103
 9bc:	df 4f       	sbci	r29, 0xFF	; 255
 9be:	88 83       	st	Y, r24
 9c0:	99 83       	std	Y+1, r25	; 0x01
 9c2:	aa 83       	std	Y+2, r26	; 0x02
 9c4:	c9 59       	subi	r28, 0x99	; 153
 9c6:	d0 40       	sbci	r29, 0x00	; 0
 9c8:	d5 01       	movw	r26, r10
 9ca:	ed 91       	ld	r30, X+
 9cc:	fc 91       	ld	r31, X
 9ce:	11 97       	sbiw	r26, 0x01	; 1
 9d0:	cf 01       	movw	r24, r30
 9d2:	02 96       	adiw	r24, 0x02	; 2
 9d4:	8d 93       	st	X+, r24
 9d6:	9c 93       	st	X, r25
 9d8:	80 81       	ld	r24, Z
 9da:	91 81       	ldd	r25, Z+1	; 0x01
 9dc:	cd 57       	subi	r28, 0x7D	; 125
 9de:	df 4f       	sbci	r29, 0xFF	; 255
 9e0:	99 83       	std	Y+1, r25	; 0x01
 9e2:	88 83       	st	Y, r24
 9e4:	c3 58       	subi	r28, 0x83	; 131
 9e6:	d0 40       	sbci	r29, 0x00	; 0
 9e8:	27 c0       	rjmp	.+78     	; 0xa38 <__printf_core+0x3b4>
 9ea:	84 2f       	mov	r24, r20
 9ec:	b9 01       	movw	r22, r18
 9ee:	0e 94 ab 1c 	call	0x3956	; 0x3956 <atoi>
 9f2:	cd 57       	subi	r28, 0x7D	; 125
 9f4:	df 4f       	sbci	r29, 0xFF	; 255
 9f6:	99 83       	std	Y+1, r25	; 0x01
 9f8:	88 83       	st	Y, r24
 9fa:	c3 58       	subi	r28, 0x83	; 131
 9fc:	d0 40       	sbci	r29, 0x00	; 0
 9fe:	c7 56       	subi	r28, 0x67	; 103
 a00:	df 4f       	sbci	r29, 0xFF	; 255
 a02:	88 81       	ld	r24, Y
 a04:	99 81       	ldd	r25, Y+1	; 0x01
 a06:	aa 81       	ldd	r26, Y+2	; 0x02
 a08:	c9 59       	subi	r28, 0x99	; 153
 a0a:	d0 40       	sbci	r29, 0x00	; 0
 a0c:	fc 01       	movw	r30, r24
 a0e:	5a 2f       	mov	r21, r26
 a10:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 a14:	06 2e       	mov	r0, r22
 a16:	00 0c       	add	r0, r0
 a18:	77 0b       	sbc	r23, r23
 a1a:	60 53       	subi	r22, 0x30	; 48
 a1c:	71 09       	sbc	r23, r1
 a1e:	6a 30       	cpi	r22, 0x0A	; 10
 a20:	71 05       	cpc	r23, r1
 a22:	50 f4       	brcc	.+20     	; 0xa38 <__printf_core+0x3b4>
 a24:	01 96       	adiw	r24, 0x01	; 1
 a26:	a1 1d       	adc	r26, r1
 a28:	c7 56       	subi	r28, 0x67	; 103
 a2a:	df 4f       	sbci	r29, 0xFF	; 255
 a2c:	88 83       	st	Y, r24
 a2e:	99 83       	std	Y+1, r25	; 0x01
 a30:	aa 83       	std	Y+2, r26	; 0x02
 a32:	c9 59       	subi	r28, 0x99	; 153
 a34:	d0 40       	sbci	r29, 0x00	; 0
 a36:	e3 cf       	rjmp	.-58     	; 0x9fe <__printf_core+0x37a>
 a38:	ce 01       	movw	r24, r28
 a3a:	87 56       	subi	r24, 0x67	; 103
 a3c:	9f 4f       	sbci	r25, 0xFF	; 255
 a3e:	0e 94 ca 1a 	call	0x3594	; 0x3594 <__fmt_state>
 a42:	18 2f       	mov	r17, r24
 a44:	c7 56       	subi	r28, 0x67	; 103
 a46:	df 4f       	sbci	r29, 0xFF	; 255
 a48:	98 81       	ld	r25, Y
 a4a:	c9 59       	subi	r28, 0x99	; 153
 a4c:	d0 40       	sbci	r29, 0x00	; 0
 a4e:	c6 56       	subi	r28, 0x66	; 102
 a50:	df 4f       	sbci	r29, 0xFF	; 255
 a52:	88 81       	ld	r24, Y
 a54:	ca 59       	subi	r28, 0x9A	; 154
 a56:	d0 40       	sbci	r29, 0x00	; 0
 a58:	c5 56       	subi	r28, 0x65	; 101
 a5a:	df 4f       	sbci	r29, 0xFF	; 255
 a5c:	58 81       	ld	r21, Y
 a5e:	cb 59       	subi	r28, 0x9B	; 155
 a60:	d0 40       	sbci	r29, 0x00	; 0
 a62:	e9 2f       	mov	r30, r25
 a64:	f8 2f       	mov	r31, r24
 a66:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 a6a:	86 2f       	mov	r24, r22
 a6c:	66 0f       	add	r22, r22
 a6e:	99 0b       	sbc	r25, r25
 a70:	0e 94 e8 22 	call	0x45d0	; 0x45d0 <tolower>
 a74:	89 36       	cpi	r24, 0x69	; 105
 a76:	91 05       	cpc	r25, r1
 a78:	09 f4       	brne	.+2      	; 0xa7c <__printf_core+0x3f8>
 a7a:	5b c0       	rjmp	.+182    	; 0xb32 <__printf_core+0x4ae>
 a7c:	b4 f4       	brge	.+44     	; 0xaaa <__printf_core+0x426>
 a7e:	83 36       	cpi	r24, 0x63	; 99
 a80:	91 05       	cpc	r25, r1
 a82:	09 f4       	brne	.+2      	; 0xa86 <__printf_core+0x402>
 a84:	69 c1       	rjmp	.+722    	; 0xd58 <__printf_core+0x6d4>
 a86:	44 f4       	brge	.+16     	; 0xa98 <__printf_core+0x414>
 a88:	85 32       	cpi	r24, 0x25	; 37
 a8a:	91 05       	cpc	r25, r1
 a8c:	09 f4       	brne	.+2      	; 0xa90 <__printf_core+0x40c>
 a8e:	a4 c1       	rjmp	.+840    	; 0xdd8 <__printf_core+0x754>
 a90:	81 36       	cpi	r24, 0x61	; 97
 a92:	91 05       	cpc	r25, r1
 a94:	29 f1       	breq	.+74     	; 0xae0 <__printf_core+0x45c>
 a96:	b6 c1       	rjmp	.+876    	; 0xe04 <__printf_core+0x780>
 a98:	84 36       	cpi	r24, 0x64	; 100
 a9a:	91 05       	cpc	r25, r1
 a9c:	09 f4       	brne	.+2      	; 0xaa0 <__printf_core+0x41c>
 a9e:	49 c0       	rjmp	.+146    	; 0xb32 <__printf_core+0x4ae>
 aa0:	88 36       	cpi	r24, 0x68	; 104
 aa2:	91 05       	cpc	r25, r1
 aa4:	0c f4       	brge	.+2      	; 0xaa8 <__printf_core+0x424>
 aa6:	2f c1       	rjmp	.+606    	; 0xd06 <__printf_core+0x682>
 aa8:	ad c1       	rjmp	.+858    	; 0xe04 <__printf_core+0x780>
 aaa:	80 37       	cpi	r24, 0x70	; 112
 aac:	91 05       	cpc	r25, r1
 aae:	09 f4       	brne	.+2      	; 0xab2 <__printf_core+0x42e>
 ab0:	cd c0       	rjmp	.+410    	; 0xc4c <__printf_core+0x5c8>
 ab2:	4c f4       	brge	.+18     	; 0xac6 <__printf_core+0x442>
 ab4:	8e 36       	cpi	r24, 0x6E	; 110
 ab6:	91 05       	cpc	r25, r1
 ab8:	09 f4       	brne	.+2      	; 0xabc <__printf_core+0x438>
 aba:	1b c1       	rjmp	.+566    	; 0xcf2 <__printf_core+0x66e>
 abc:	8f 36       	cpi	r24, 0x6F	; 111
 abe:	91 05       	cpc	r25, r1
 ac0:	09 f4       	brne	.+2      	; 0xac4 <__printf_core+0x440>
 ac2:	7d c0       	rjmp	.+250    	; 0xbbe <__printf_core+0x53a>
 ac4:	9f c1       	rjmp	.+830    	; 0xe04 <__printf_core+0x780>
 ac6:	85 37       	cpi	r24, 0x75	; 117
 ac8:	91 05       	cpc	r25, r1
 aca:	09 f4       	brne	.+2      	; 0xace <__printf_core+0x44a>
 acc:	55 c0       	rjmp	.+170    	; 0xb78 <__printf_core+0x4f4>
 ace:	88 37       	cpi	r24, 0x78	; 120
 ad0:	91 05       	cpc	r25, r1
 ad2:	09 f4       	brne	.+2      	; 0xad6 <__printf_core+0x452>
 ad4:	97 c0       	rjmp	.+302    	; 0xc04 <__printf_core+0x580>
 ad6:	83 37       	cpi	r24, 0x73	; 115
 ad8:	91 05       	cpc	r25, r1
 ada:	09 f0       	breq	.+2      	; 0xade <__printf_core+0x45a>
 adc:	93 c1       	rjmp	.+806    	; 0xe04 <__printf_core+0x780>
 ade:	5b c1       	rjmp	.+694    	; 0xd96 <__printf_core+0x712>
 ae0:	61 2f       	mov	r22, r17
 ae2:	70 e0       	ldi	r23, 0x00	; 0
 ae4:	a5 01       	movw	r20, r10
 ae6:	c6 01       	movw	r24, r12
 ae8:	0e 94 96 20 	call	0x412c	; 0x412c <__pop_float>
 aec:	89 2b       	or	r24, r25
 aee:	09 f4       	brne	.+2      	; 0xaf2 <__printf_core+0x46e>
 af0:	ba c1       	rjmp	.+884    	; 0xe66 <__printf_core+0x7e2>
 af2:	c7 56       	subi	r28, 0x67	; 103
 af4:	df 4f       	sbci	r29, 0xFF	; 255
 af6:	88 81       	ld	r24, Y
 af8:	99 81       	ldd	r25, Y+1	; 0x01
 afa:	aa 81       	ldd	r26, Y+2	; 0x02
 afc:	c9 59       	subi	r28, 0x99	; 153
 afe:	d0 40       	sbci	r29, 0x00	; 0
 b00:	9c 01       	movw	r18, r24
 b02:	4a 2f       	mov	r20, r26
 b04:	2f 5f       	subi	r18, 0xFF	; 255
 b06:	3f 4f       	sbci	r19, 0xFF	; 255
 b08:	4f 4f       	sbci	r20, 0xFF	; 255
 b0a:	c7 56       	subi	r28, 0x67	; 103
 b0c:	df 4f       	sbci	r29, 0xFF	; 255
 b0e:	28 83       	st	Y, r18
 b10:	39 83       	std	Y+1, r19	; 0x01
 b12:	4a 83       	std	Y+2, r20	; 0x02
 b14:	c9 59       	subi	r28, 0x99	; 153
 b16:	d0 40       	sbci	r29, 0x00	; 0
 b18:	fc 01       	movw	r30, r24
 b1a:	5a 2f       	mov	r21, r26
 b1c:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 b20:	26 2f       	mov	r18, r22
 b22:	a6 01       	movw	r20, r12
 b24:	be 01       	movw	r22, r28
 b26:	6f 57       	subi	r22, 0x7F	; 127
 b28:	7f 4f       	sbci	r23, 0xFF	; 255
 b2a:	c4 01       	movw	r24, r8
 b2c:	0e 94 b8 0a 	call	0x1570	; 0x1570 <__fmt_a>
 b30:	97 c1       	rjmp	.+814    	; 0xe60 <__printf_core+0x7dc>
 b32:	61 2f       	mov	r22, r17
 b34:	70 e0       	ldi	r23, 0x00	; 0
 b36:	95 01       	movw	r18, r10
 b38:	41 e0       	ldi	r20, 0x01	; 1
 b3a:	50 e0       	ldi	r21, 0x00	; 0
 b3c:	c6 01       	movw	r24, r12
 b3e:	0e 94 19 12 	call	0x2432	; 0x2432 <__pop_int>
 b42:	89 2b       	or	r24, r25
 b44:	09 f4       	brne	.+2      	; 0xb48 <__printf_core+0x4c4>
 b46:	8f c1       	rjmp	.+798    	; 0xe66 <__printf_core+0x7e2>
 b48:	c7 56       	subi	r28, 0x67	; 103
 b4a:	df 4f       	sbci	r29, 0xFF	; 255
 b4c:	88 81       	ld	r24, Y
 b4e:	99 81       	ldd	r25, Y+1	; 0x01
 b50:	aa 81       	ldd	r26, Y+2	; 0x02
 b52:	c9 59       	subi	r28, 0x99	; 153
 b54:	d0 40       	sbci	r29, 0x00	; 0
 b56:	01 96       	adiw	r24, 0x01	; 1
 b58:	a1 1d       	adc	r26, r1
 b5a:	c7 56       	subi	r28, 0x67	; 103
 b5c:	df 4f       	sbci	r29, 0xFF	; 255
 b5e:	88 83       	st	Y, r24
 b60:	99 83       	std	Y+1, r25	; 0x01
 b62:	aa 83       	std	Y+2, r26	; 0x02
 b64:	c9 59       	subi	r28, 0x99	; 153
 b66:	d0 40       	sbci	r29, 0x00	; 0
 b68:	a6 01       	movw	r20, r12
 b6a:	be 01       	movw	r22, r28
 b6c:	6f 57       	subi	r22, 0x7F	; 127
 b6e:	7f 4f       	sbci	r23, 0xFF	; 255
 b70:	c4 01       	movw	r24, r8
 b72:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <__fmt_d>
 b76:	74 c1       	rjmp	.+744    	; 0xe60 <__printf_core+0x7dc>
 b78:	61 2f       	mov	r22, r17
 b7a:	70 e0       	ldi	r23, 0x00	; 0
 b7c:	95 01       	movw	r18, r10
 b7e:	40 e0       	ldi	r20, 0x00	; 0
 b80:	50 e0       	ldi	r21, 0x00	; 0
 b82:	c6 01       	movw	r24, r12
 b84:	0e 94 19 12 	call	0x2432	; 0x2432 <__pop_int>
 b88:	89 2b       	or	r24, r25
 b8a:	09 f4       	brne	.+2      	; 0xb8e <__printf_core+0x50a>
 b8c:	6c c1       	rjmp	.+728    	; 0xe66 <__printf_core+0x7e2>
 b8e:	c7 56       	subi	r28, 0x67	; 103
 b90:	df 4f       	sbci	r29, 0xFF	; 255
 b92:	88 81       	ld	r24, Y
 b94:	99 81       	ldd	r25, Y+1	; 0x01
 b96:	aa 81       	ldd	r26, Y+2	; 0x02
 b98:	c9 59       	subi	r28, 0x99	; 153
 b9a:	d0 40       	sbci	r29, 0x00	; 0
 b9c:	01 96       	adiw	r24, 0x01	; 1
 b9e:	a1 1d       	adc	r26, r1
 ba0:	c7 56       	subi	r28, 0x67	; 103
 ba2:	df 4f       	sbci	r29, 0xFF	; 255
 ba4:	88 83       	st	Y, r24
 ba6:	99 83       	std	Y+1, r25	; 0x01
 ba8:	aa 83       	std	Y+2, r26	; 0x02
 baa:	c9 59       	subi	r28, 0x99	; 153
 bac:	d0 40       	sbci	r29, 0x00	; 0
 bae:	a6 01       	movw	r20, r12
 bb0:	be 01       	movw	r22, r28
 bb2:	6f 57       	subi	r22, 0x7F	; 127
 bb4:	7f 4f       	sbci	r23, 0xFF	; 255
 bb6:	c4 01       	movw	r24, r8
 bb8:	0e 94 74 19 	call	0x32e8	; 0x32e8 <__fmt_u>
 bbc:	51 c1       	rjmp	.+674    	; 0xe60 <__printf_core+0x7dc>
 bbe:	61 2f       	mov	r22, r17
 bc0:	70 e0       	ldi	r23, 0x00	; 0
 bc2:	95 01       	movw	r18, r10
 bc4:	40 e0       	ldi	r20, 0x00	; 0
 bc6:	50 e0       	ldi	r21, 0x00	; 0
 bc8:	c6 01       	movw	r24, r12
 bca:	0e 94 19 12 	call	0x2432	; 0x2432 <__pop_int>
 bce:	89 2b       	or	r24, r25
 bd0:	09 f4       	brne	.+2      	; 0xbd4 <__printf_core+0x550>
 bd2:	49 c1       	rjmp	.+658    	; 0xe66 <__printf_core+0x7e2>
 bd4:	c7 56       	subi	r28, 0x67	; 103
 bd6:	df 4f       	sbci	r29, 0xFF	; 255
 bd8:	88 81       	ld	r24, Y
 bda:	99 81       	ldd	r25, Y+1	; 0x01
 bdc:	aa 81       	ldd	r26, Y+2	; 0x02
 bde:	c9 59       	subi	r28, 0x99	; 153
 be0:	d0 40       	sbci	r29, 0x00	; 0
 be2:	01 96       	adiw	r24, 0x01	; 1
 be4:	a1 1d       	adc	r26, r1
 be6:	c7 56       	subi	r28, 0x67	; 103
 be8:	df 4f       	sbci	r29, 0xFF	; 255
 bea:	88 83       	st	Y, r24
 bec:	99 83       	std	Y+1, r25	; 0x01
 bee:	aa 83       	std	Y+2, r26	; 0x02
 bf0:	c9 59       	subi	r28, 0x99	; 153
 bf2:	d0 40       	sbci	r29, 0x00	; 0
 bf4:	a6 01       	movw	r20, r12
 bf6:	be 01       	movw	r22, r28
 bf8:	6f 57       	subi	r22, 0x7F	; 127
 bfa:	7f 4f       	sbci	r23, 0xFF	; 255
 bfc:	c4 01       	movw	r24, r8
 bfe:	0e 94 b8 16 	call	0x2d70	; 0x2d70 <__fmt_o>
 c02:	2e c1       	rjmp	.+604    	; 0xe60 <__printf_core+0x7dc>
 c04:	61 2f       	mov	r22, r17
 c06:	70 e0       	ldi	r23, 0x00	; 0
 c08:	95 01       	movw	r18, r10
 c0a:	40 e0       	ldi	r20, 0x00	; 0
 c0c:	50 e0       	ldi	r21, 0x00	; 0
 c0e:	c6 01       	movw	r24, r12
 c10:	0e 94 19 12 	call	0x2432	; 0x2432 <__pop_int>
 c14:	89 2b       	or	r24, r25
 c16:	09 f4       	brne	.+2      	; 0xc1a <__printf_core+0x596>
 c18:	26 c1       	rjmp	.+588    	; 0xe66 <__printf_core+0x7e2>
 c1a:	c7 56       	subi	r28, 0x67	; 103
 c1c:	df 4f       	sbci	r29, 0xFF	; 255
 c1e:	88 81       	ld	r24, Y
 c20:	99 81       	ldd	r25, Y+1	; 0x01
 c22:	aa 81       	ldd	r26, Y+2	; 0x02
 c24:	c9 59       	subi	r28, 0x99	; 153
 c26:	d0 40       	sbci	r29, 0x00	; 0
 c28:	9c 01       	movw	r18, r24
 c2a:	4a 2f       	mov	r20, r26
 c2c:	2f 5f       	subi	r18, 0xFF	; 255
 c2e:	3f 4f       	sbci	r19, 0xFF	; 255
 c30:	4f 4f       	sbci	r20, 0xFF	; 255
 c32:	c7 56       	subi	r28, 0x67	; 103
 c34:	df 4f       	sbci	r29, 0xFF	; 255
 c36:	28 83       	st	Y, r18
 c38:	39 83       	std	Y+1, r19	; 0x01
 c3a:	4a 83       	std	Y+2, r20	; 0x02
 c3c:	c9 59       	subi	r28, 0x99	; 153
 c3e:	d0 40       	sbci	r29, 0x00	; 0
 c40:	fc 01       	movw	r30, r24
 c42:	5a 2f       	mov	r21, r26
 c44:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 c48:	26 2f       	mov	r18, r22
 c4a:	4b c0       	rjmp	.+150    	; 0xce2 <__printf_core+0x65e>
 c4c:	95 01       	movw	r18, r10
 c4e:	40 e0       	ldi	r20, 0x00	; 0
 c50:	50 e0       	ldi	r21, 0x00	; 0
 c52:	60 ef       	ldi	r22, 0xF0	; 240
 c54:	70 e0       	ldi	r23, 0x00	; 0
 c56:	c6 01       	movw	r24, r12
 c58:	0e 94 19 12 	call	0x2432	; 0x2432 <__pop_int>
 c5c:	89 2b       	or	r24, r25
 c5e:	09 f4       	brne	.+2      	; 0xc62 <__printf_core+0x5de>
 c60:	02 c1       	rjmp	.+516    	; 0xe66 <__printf_core+0x7e2>
 c62:	c7 56       	subi	r28, 0x67	; 103
 c64:	df 4f       	sbci	r29, 0xFF	; 255
 c66:	88 81       	ld	r24, Y
 c68:	99 81       	ldd	r25, Y+1	; 0x01
 c6a:	aa 81       	ldd	r26, Y+2	; 0x02
 c6c:	c9 59       	subi	r28, 0x99	; 153
 c6e:	d0 40       	sbci	r29, 0x00	; 0
 c70:	01 96       	adiw	r24, 0x01	; 1
 c72:	a1 1d       	adc	r26, r1
 c74:	c7 56       	subi	r28, 0x67	; 103
 c76:	df 4f       	sbci	r29, 0xFF	; 255
 c78:	88 83       	st	Y, r24
 c7a:	99 83       	std	Y+1, r25	; 0x01
 c7c:	aa 83       	std	Y+2, r26	; 0x02
 c7e:	c9 59       	subi	r28, 0x99	; 153
 c80:	d0 40       	sbci	r29, 0x00	; 0
 c82:	86 e0       	ldi	r24, 0x06	; 6
 c84:	2e e7       	ldi	r18, 0x7E	; 126
 c86:	36 e0       	ldi	r19, 0x06	; 6
 c88:	40 e0       	ldi	r20, 0x00	; 0
 c8a:	f9 01       	movw	r30, r18
 c8c:	de 01       	movw	r26, r28
 c8e:	ad 56       	subi	r26, 0x6D	; 109
 c90:	bf 4f       	sbci	r27, 0xFF	; 255
 c92:	74 2f       	mov	r23, r20
 c94:	0e 94 75 22 	call	0x44ea	; 0x44ea <__movmemx_qi>
 c98:	d6 01       	movw	r26, r12
 c9a:	2c 91       	ld	r18, X
 c9c:	11 96       	adiw	r26, 0x01	; 1
 c9e:	3c 91       	ld	r19, X
 ca0:	11 97       	sbiw	r26, 0x01	; 1
 ca2:	12 96       	adiw	r26, 0x02	; 2
 ca4:	4c 91       	ld	r20, X
 ca6:	12 97       	sbiw	r26, 0x02	; 2
 ca8:	13 96       	adiw	r26, 0x03	; 3
 caa:	5c 91       	ld	r21, X
 cac:	13 97       	sbiw	r26, 0x03	; 3
 cae:	14 96       	adiw	r26, 0x04	; 4
 cb0:	6c 91       	ld	r22, X
 cb2:	14 97       	sbiw	r26, 0x04	; 4
 cb4:	15 96       	adiw	r26, 0x05	; 5
 cb6:	7c 91       	ld	r23, X
 cb8:	15 97       	sbiw	r26, 0x05	; 5
 cba:	16 96       	adiw	r26, 0x06	; 6
 cbc:	8c 91       	ld	r24, X
 cbe:	16 97       	sbiw	r26, 0x06	; 6
 cc0:	17 96       	adiw	r26, 0x07	; 7
 cc2:	9c 91       	ld	r25, X
 cc4:	a0 e0       	ldi	r26, 0x00	; 0
 cc6:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
 cca:	51 f4       	brne	.+20     	; 0xce0 <__printf_core+0x65c>
 ccc:	00 e0       	ldi	r16, 0x00	; 0
 cce:	10 e0       	ldi	r17, 0x00	; 0
 cd0:	cf 55       	subi	r28, 0x5F	; 95
 cd2:	df 4f       	sbci	r29, 0xFF	; 255
 cd4:	28 81       	ld	r18, Y
 cd6:	39 81       	ldd	r19, Y+1	; 0x01
 cd8:	4a 81       	ldd	r20, Y+2	; 0x02
 cda:	c1 5a       	subi	r28, 0xA1	; 161
 cdc:	d0 40       	sbci	r29, 0x00	; 0
 cde:	ba c0       	rjmp	.+372    	; 0xe54 <__printf_core+0x7d0>
 ce0:	28 e7       	ldi	r18, 0x78	; 120
 ce2:	a6 01       	movw	r20, r12
 ce4:	be 01       	movw	r22, r28
 ce6:	6f 57       	subi	r22, 0x7F	; 127
 ce8:	7f 4f       	sbci	r23, 0xFF	; 255
 cea:	c4 01       	movw	r24, r8
 cec:	0e 94 1a 10 	call	0x2034	; 0x2034 <__fmt_x>
 cf0:	b7 c0       	rjmp	.+366    	; 0xe60 <__printf_core+0x7dc>
 cf2:	61 2f       	mov	r22, r17
 cf4:	70 e0       	ldi	r23, 0x00	; 0
 cf6:	95 01       	movw	r18, r10
 cf8:	a1 01       	movw	r20, r2
 cfa:	4e 0d       	add	r20, r14
 cfc:	5f 1d       	adc	r21, r15
 cfe:	c6 01       	movw	r24, r12
 d00:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <__pop_ptr>
 d04:	b0 c0       	rjmp	.+352    	; 0xe66 <__printf_core+0x7e2>
 d06:	61 2f       	mov	r22, r17
 d08:	70 e0       	ldi	r23, 0x00	; 0
 d0a:	a5 01       	movw	r20, r10
 d0c:	c6 01       	movw	r24, r12
 d0e:	0e 94 96 20 	call	0x412c	; 0x412c <__pop_float>
 d12:	89 2b       	or	r24, r25
 d14:	09 f4       	brne	.+2      	; 0xd18 <__printf_core+0x694>
 d16:	a7 c0       	rjmp	.+334    	; 0xe66 <__printf_core+0x7e2>
 d18:	c7 56       	subi	r28, 0x67	; 103
 d1a:	df 4f       	sbci	r29, 0xFF	; 255
 d1c:	88 81       	ld	r24, Y
 d1e:	99 81       	ldd	r25, Y+1	; 0x01
 d20:	aa 81       	ldd	r26, Y+2	; 0x02
 d22:	c9 59       	subi	r28, 0x99	; 153
 d24:	d0 40       	sbci	r29, 0x00	; 0
 d26:	9c 01       	movw	r18, r24
 d28:	4a 2f       	mov	r20, r26
 d2a:	2f 5f       	subi	r18, 0xFF	; 255
 d2c:	3f 4f       	sbci	r19, 0xFF	; 255
 d2e:	4f 4f       	sbci	r20, 0xFF	; 255
 d30:	c7 56       	subi	r28, 0x67	; 103
 d32:	df 4f       	sbci	r29, 0xFF	; 255
 d34:	28 83       	st	Y, r18
 d36:	39 83       	std	Y+1, r19	; 0x01
 d38:	4a 83       	std	Y+2, r20	; 0x02
 d3a:	c9 59       	subi	r28, 0x99	; 153
 d3c:	d0 40       	sbci	r29, 0x00	; 0
 d3e:	fc 01       	movw	r30, r24
 d40:	5a 2f       	mov	r21, r26
 d42:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
 d46:	26 2f       	mov	r18, r22
 d48:	a6 01       	movw	r20, r12
 d4a:	be 01       	movw	r22, r28
 d4c:	6f 57       	subi	r22, 0x7F	; 127
 d4e:	7f 4f       	sbci	r23, 0xFF	; 255
 d50:	c4 01       	movw	r24, r8
 d52:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__fmt_fp>
 d56:	84 c0       	rjmp	.+264    	; 0xe60 <__printf_core+0x7dc>
 d58:	10 38       	cpi	r17, 0x80	; 128
 d5a:	09 f0       	breq	.+2      	; 0xd5e <__printf_core+0x6da>
 d5c:	84 c0       	rjmp	.+264    	; 0xe66 <__printf_core+0x7e2>
 d5e:	c7 56       	subi	r28, 0x67	; 103
 d60:	df 4f       	sbci	r29, 0xFF	; 255
 d62:	88 81       	ld	r24, Y
 d64:	99 81       	ldd	r25, Y+1	; 0x01
 d66:	aa 81       	ldd	r26, Y+2	; 0x02
 d68:	c9 59       	subi	r28, 0x99	; 153
 d6a:	d0 40       	sbci	r29, 0x00	; 0
 d6c:	01 96       	adiw	r24, 0x01	; 1
 d6e:	a1 1d       	adc	r26, r1
 d70:	c7 56       	subi	r28, 0x67	; 103
 d72:	df 4f       	sbci	r29, 0xFF	; 255
 d74:	88 83       	st	Y, r24
 d76:	99 83       	std	Y+1, r25	; 0x01
 d78:	aa 83       	std	Y+2, r26	; 0x02
 d7a:	c9 59       	subi	r28, 0x99	; 153
 d7c:	d0 40       	sbci	r29, 0x00	; 0
 d7e:	d5 01       	movw	r26, r10
 d80:	ed 91       	ld	r30, X+
 d82:	fc 91       	ld	r31, X
 d84:	11 97       	sbiw	r26, 0x01	; 1
 d86:	cf 01       	movw	r24, r30
 d88:	02 96       	adiw	r24, 0x02	; 2
 d8a:	8d 93       	st	X+, r24
 d8c:	9c 93       	st	X, r25
 d8e:	80 81       	ld	r24, Z
 d90:	f6 01       	movw	r30, r12
 d92:	80 83       	st	Z, r24
 d94:	5b c0       	rjmp	.+182    	; 0xe4c <__printf_core+0x7c8>
 d96:	10 38       	cpi	r17, 0x80	; 128
 d98:	09 f0       	breq	.+2      	; 0xd9c <__printf_core+0x718>
 d9a:	65 c0       	rjmp	.+202    	; 0xe66 <__printf_core+0x7e2>
 d9c:	c7 56       	subi	r28, 0x67	; 103
 d9e:	df 4f       	sbci	r29, 0xFF	; 255
 da0:	88 81       	ld	r24, Y
 da2:	99 81       	ldd	r25, Y+1	; 0x01
 da4:	aa 81       	ldd	r26, Y+2	; 0x02
 da6:	c9 59       	subi	r28, 0x99	; 153
 da8:	d0 40       	sbci	r29, 0x00	; 0
 daa:	01 96       	adiw	r24, 0x01	; 1
 dac:	a1 1d       	adc	r26, r1
 dae:	c7 56       	subi	r28, 0x67	; 103
 db0:	df 4f       	sbci	r29, 0xFF	; 255
 db2:	88 83       	st	Y, r24
 db4:	99 83       	std	Y+1, r25	; 0x01
 db6:	aa 83       	std	Y+2, r26	; 0x02
 db8:	c9 59       	subi	r28, 0x99	; 153
 dba:	d0 40       	sbci	r29, 0x00	; 0
 dbc:	d5 01       	movw	r26, r10
 dbe:	ed 91       	ld	r30, X+
 dc0:	fc 91       	ld	r31, X
 dc2:	11 97       	sbiw	r26, 0x01	; 1
 dc4:	cf 01       	movw	r24, r30
 dc6:	03 96       	adiw	r24, 0x03	; 3
 dc8:	8d 93       	st	X+, r24
 dca:	9c 93       	st	X, r25
 dcc:	20 81       	ld	r18, Z
 dce:	31 81       	ldd	r19, Z+1	; 0x01
 dd0:	42 81       	ldd	r20, Z+2	; 0x02
 dd2:	00 e0       	ldi	r16, 0x00	; 0
 dd4:	10 e0       	ldi	r17, 0x00	; 0
 dd6:	3e c0       	rjmp	.+124    	; 0xe54 <__printf_core+0x7d0>
 dd8:	10 38       	cpi	r17, 0x80	; 128
 dda:	09 f0       	breq	.+2      	; 0xdde <__printf_core+0x75a>
 ddc:	44 c0       	rjmp	.+136    	; 0xe66 <__printf_core+0x7e2>
 dde:	c7 56       	subi	r28, 0x67	; 103
 de0:	df 4f       	sbci	r29, 0xFF	; 255
 de2:	88 81       	ld	r24, Y
 de4:	99 81       	ldd	r25, Y+1	; 0x01
 de6:	aa 81       	ldd	r26, Y+2	; 0x02
 de8:	c9 59       	subi	r28, 0x99	; 153
 dea:	d0 40       	sbci	r29, 0x00	; 0
 dec:	01 96       	adiw	r24, 0x01	; 1
 dee:	a1 1d       	adc	r26, r1
 df0:	c7 56       	subi	r28, 0x67	; 103
 df2:	df 4f       	sbci	r29, 0xFF	; 255
 df4:	88 83       	st	Y, r24
 df6:	99 83       	std	Y+1, r25	; 0x01
 df8:	aa 83       	std	Y+2, r26	; 0x02
 dfa:	c9 59       	subi	r28, 0x99	; 153
 dfc:	d0 40       	sbci	r29, 0x00	; 0
 dfe:	f6 01       	movw	r30, r12
 e00:	70 82       	st	Z, r7
 e02:	24 c0       	rjmp	.+72     	; 0xe4c <__printf_core+0x7c8>
 e04:	d6 01       	movw	r26, r12
 e06:	7c 92       	st	X, r7
 e08:	c2 56       	subi	r28, 0x62	; 98
 e0a:	df 4f       	sbci	r29, 0xFF	; 255
 e0c:	28 81       	ld	r18, Y
 e0e:	39 81       	ldd	r19, Y+1	; 0x01
 e10:	4a 81       	ldd	r20, Y+2	; 0x02
 e12:	ce 59       	subi	r28, 0x9E	; 158
 e14:	d0 40       	sbci	r29, 0x00	; 0
 e16:	c7 56       	subi	r28, 0x67	; 103
 e18:	df 4f       	sbci	r29, 0xFF	; 255
 e1a:	28 83       	st	Y, r18
 e1c:	39 83       	std	Y+1, r19	; 0x01
 e1e:	4a 83       	std	Y+2, r20	; 0x02
 e20:	c9 59       	subi	r28, 0x99	; 153
 e22:	d0 40       	sbci	r29, 0x00	; 0
 e24:	cf 57       	subi	r28, 0x7F	; 127
 e26:	df 4f       	sbci	r29, 0xFF	; 255
 e28:	19 82       	std	Y+1, r1	; 0x01
 e2a:	18 82       	st	Y, r1
 e2c:	c1 58       	subi	r28, 0x81	; 129
 e2e:	d0 40       	sbci	r29, 0x00	; 0
 e30:	cb 57       	subi	r28, 0x7B	; 123
 e32:	df 4f       	sbci	r29, 0xFF	; 255
 e34:	19 82       	std	Y+1, r1	; 0x01
 e36:	18 82       	st	Y, r1
 e38:	c5 58       	subi	r28, 0x85	; 133
 e3a:	d0 40       	sbci	r29, 0x00	; 0
 e3c:	8f ef       	ldi	r24, 0xFF	; 255
 e3e:	9f ef       	ldi	r25, 0xFF	; 255
 e40:	cd 57       	subi	r28, 0x7D	; 125
 e42:	df 4f       	sbci	r29, 0xFF	; 255
 e44:	99 83       	std	Y+1, r25	; 0x01
 e46:	88 83       	st	Y, r24
 e48:	c3 58       	subi	r28, 0x83	; 131
 e4a:	d0 40       	sbci	r29, 0x00	; 0
 e4c:	01 e0       	ldi	r16, 0x01	; 1
 e4e:	10 e0       	ldi	r17, 0x00	; 0
 e50:	46 2d       	mov	r20, r6
 e52:	92 01       	movw	r18, r4
 e54:	be 01       	movw	r22, r28
 e56:	6f 57       	subi	r22, 0x7F	; 127
 e58:	7f 4f       	sbci	r23, 0xFF	; 255
 e5a:	c4 01       	movw	r24, r8
 e5c:	0e 94 f3 17 	call	0x2fe6	; 0x2fe6 <__fmt_s>
 e60:	8e 0d       	add	r24, r14
 e62:	9f 1d       	adc	r25, r15
 e64:	11 c0       	rjmp	.+34     	; 0xe88 <__printf_core+0x804>
 e66:	c7 56       	subi	r28, 0x67	; 103
 e68:	df 4f       	sbci	r29, 0xFF	; 255
 e6a:	88 81       	ld	r24, Y
 e6c:	99 81       	ldd	r25, Y+1	; 0x01
 e6e:	aa 81       	ldd	r26, Y+2	; 0x02
 e70:	c9 59       	subi	r28, 0x99	; 153
 e72:	d0 40       	sbci	r29, 0x00	; 0
 e74:	01 96       	adiw	r24, 0x01	; 1
 e76:	a1 1d       	adc	r26, r1
 e78:	c7 56       	subi	r28, 0x67	; 103
 e7a:	df 4f       	sbci	r29, 0xFF	; 255
 e7c:	88 83       	st	Y, r24
 e7e:	99 83       	std	Y+1, r25	; 0x01
 e80:	aa 83       	std	Y+2, r26	; 0x02
 e82:	c9 59       	subi	r28, 0x99	; 153
 e84:	d0 40       	sbci	r29, 0x00	; 0
 e86:	c7 01       	movw	r24, r14
 e88:	71 01       	movw	r14, r2
 e8a:	e8 0e       	add	r14, r24
 e8c:	f9 1e       	adc	r15, r25
 e8e:	e2 14       	cp	r14, r2
 e90:	f3 04       	cpc	r15, r3
 e92:	4c f4       	brge	.+18     	; 0xea6 <__printf_core+0x822>
 e94:	8f e4       	ldi	r24, 0x4F	; 79
 e96:	90 e0       	ldi	r25, 0x00	; 0
 e98:	90 93 2d 12 	sts	0x122D, r25	; 0x80122d <__errno_val+0x1>
 e9c:	80 93 2c 12 	sts	0x122C, r24	; 0x80122c <__errno_val>
 ea0:	8f ef       	ldi	r24, 0xFF	; 255
 ea2:	9f ef       	ldi	r25, 0xFF	; 255
 ea4:	03 c0       	rjmp	.+6      	; 0xeac <__printf_core+0x828>
 ea6:	17 01       	movw	r2, r14
 ea8:	19 cc       	rjmp	.-1998   	; 0x6dc <__printf_core+0x58>
 eaa:	c1 01       	movw	r24, r2
 eac:	cd 55       	subi	r28, 0x5D	; 93
 eae:	df 4f       	sbci	r29, 0xFF	; 255
 eb0:	e2 e1       	ldi	r30, 0x12	; 18
 eb2:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>

Disassembly of section .text.fputc:

000038c4 <fputc>:
    38c4:	0f 93       	push	r16
    38c6:	1f 93       	push	r17
    38c8:	cf 93       	push	r28
    38ca:	df 93       	push	r29
    38cc:	db 01       	movw	r26, r22
    38ce:	2d 91       	ld	r18, X+
    38d0:	3c 91       	ld	r19, X
    38d2:	11 97       	sbiw	r26, 0x01	; 1
    38d4:	30 ff       	sbrs	r19, 0
    38d6:	25 c0       	rjmp	.+74     	; 0x3922 <fputc+0x5e>
    38d8:	17 96       	adiw	r26, 0x07	; 7
    38da:	4d 91       	ld	r20, X+
    38dc:	5c 91       	ld	r21, X
    38de:	18 97       	sbiw	r26, 0x08	; 8
    38e0:	15 96       	adiw	r26, 0x05	; 5
    38e2:	2d 91       	ld	r18, X+
    38e4:	3c 91       	ld	r19, X
    38e6:	16 97       	sbiw	r26, 0x06	; 6
    38e8:	42 17       	cp	r20, r18
    38ea:	53 07       	cpc	r21, r19
    38ec:	78 f4       	brcc	.+30     	; 0x390c <fputc+0x48>
    38ee:	12 96       	adiw	r26, 0x02	; 2
    38f0:	ed 91       	ld	r30, X+
    38f2:	fc 91       	ld	r31, X
    38f4:	13 97       	sbiw	r26, 0x03	; 3
    38f6:	80 83       	st	Z, r24
    38f8:	12 96       	adiw	r26, 0x02	; 2
    38fa:	2d 91       	ld	r18, X+
    38fc:	3c 91       	ld	r19, X
    38fe:	13 97       	sbiw	r26, 0x03	; 3
    3900:	2f 5f       	subi	r18, 0xFF	; 255
    3902:	3f 4f       	sbci	r19, 0xFF	; 255
    3904:	13 96       	adiw	r26, 0x03	; 3
    3906:	3c 93       	st	X, r19
    3908:	2e 93       	st	-X, r18
    390a:	12 97       	sbiw	r26, 0x02	; 2
    390c:	17 96       	adiw	r26, 0x07	; 7
    390e:	2d 91       	ld	r18, X+
    3910:	3c 91       	ld	r19, X
    3912:	18 97       	sbiw	r26, 0x08	; 8
    3914:	2f 5f       	subi	r18, 0xFF	; 255
    3916:	3f 4f       	sbci	r19, 0xFF	; 255
    3918:	18 96       	adiw	r26, 0x08	; 8
    391a:	3c 93       	st	X, r19
    391c:	2e 93       	st	-X, r18
    391e:	17 97       	sbiw	r26, 0x07	; 7
    3920:	15 c0       	rjmp	.+42     	; 0x394c <fputc+0x88>
    3922:	1d 96       	adiw	r26, 0x0d	; 13
    3924:	ed 91       	ld	r30, X+
    3926:	fc 91       	ld	r31, X
    3928:	1e 97       	sbiw	r26, 0x0e	; 14
    392a:	30 97       	sbiw	r30, 0x00	; 0
    392c:	19 f4       	brne	.+6      	; 0x3934 <fputc+0x70>
    392e:	8f ef       	ldi	r24, 0xFF	; 255
    3930:	9f ef       	ldi	r25, 0xFF	; 255
    3932:	0c c0       	rjmp	.+24     	; 0x394c <fputc+0x88>
    3934:	8b 01       	movw	r16, r22
    3936:	ec 01       	movw	r28, r24
    3938:	19 95       	eicall
    393a:	89 2b       	or	r24, r25
    393c:	c1 f7       	brne	.-16     	; 0x392e <fputc+0x6a>
    393e:	f8 01       	movw	r30, r16
    3940:	87 81       	ldd	r24, Z+7	; 0x07
    3942:	90 85       	ldd	r25, Z+8	; 0x08
    3944:	01 96       	adiw	r24, 0x01	; 1
    3946:	90 87       	std	Z+8, r25	; 0x08
    3948:	87 83       	std	Z+7, r24	; 0x07
    394a:	ce 01       	movw	r24, r28
    394c:	df 91       	pop	r29
    394e:	cf 91       	pop	r28
    3950:	1f 91       	pop	r17
    3952:	0f 91       	pop	r16
    3954:	08 95       	ret

Disassembly of section .text.__fmt_d:

000022b4 <__fmt_d>:
    22b4:	ad e0       	ldi	r26, 0x0D	; 13
    22b6:	b0 e0       	ldi	r27, 0x00	; 0
    22b8:	e0 e6       	ldi	r30, 0x60	; 96
    22ba:	f1 e1       	ldi	r31, 0x11	; 17
    22bc:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
    22c0:	9a 87       	std	Y+10, r25	; 0x0a
    22c2:	89 87       	std	Y+9, r24	; 0x09
    22c4:	7c 83       	std	Y+4, r23	; 0x04
    22c6:	6b 83       	std	Y+3, r22	; 0x03
    22c8:	fa 01       	movw	r30, r20
    22ca:	db 01       	movw	r26, r22
    22cc:	12 96       	adiw	r26, 0x02	; 2
    22ce:	cd 90       	ld	r12, X+
    22d0:	dc 90       	ld	r13, X
    22d2:	13 97       	sbiw	r26, 0x03	; 3
    22d4:	14 96       	adiw	r26, 0x04	; 4
    22d6:	8d 91       	ld	r24, X+
    22d8:	9c 91       	ld	r25, X
    22da:	15 97       	sbiw	r26, 0x05	; 5
    22dc:	9e 83       	std	Y+6, r25	; 0x06
    22de:	8d 83       	std	Y+5, r24	; 0x05
    22e0:	ed 90       	ld	r14, X+
    22e2:	fc 90       	ld	r15, X
    22e4:	11 97       	sbiw	r26, 0x01	; 1
    22e6:	fa 82       	std	Y+2, r15	; 0x02
    22e8:	e9 82       	std	Y+1, r14	; 0x01
    22ea:	16 96       	adiw	r26, 0x06	; 6
    22ec:	0d 90       	ld	r0, X+
    22ee:	bc 91       	ld	r27, X
    22f0:	a0 2d       	mov	r26, r0
    22f2:	b8 87       	std	Y+8, r27	; 0x08
    22f4:	af 83       	std	Y+7, r26	; 0x07
    22f6:	20 80       	ld	r2, Z
    22f8:	31 80       	ldd	r3, Z+1	; 0x01
    22fa:	42 80       	ldd	r4, Z+2	; 0x02
    22fc:	53 80       	ldd	r5, Z+3	; 0x03
    22fe:	64 80       	ldd	r6, Z+4	; 0x04
    2300:	75 80       	ldd	r7, Z+5	; 0x05
    2302:	86 80       	ldd	r8, Z+6	; 0x06
    2304:	97 80       	ldd	r9, Z+7	; 0x07
    2306:	81 01       	movw	r16, r2
    2308:	b4 2d       	mov	r27, r4
    230a:	f5 2d       	mov	r31, r5
    230c:	e6 2d       	mov	r30, r6
    230e:	7b 86       	std	Y+11, r7	; 0x0b
    2310:	8c 86       	std	Y+12, r8	; 0x0c
    2312:	9d 86       	std	Y+13, r9	; 0x0d
    2314:	91 01       	movw	r18, r2
    2316:	a2 01       	movw	r20, r4
    2318:	b3 01       	movw	r22, r6
    231a:	c4 01       	movw	r24, r8
    231c:	a0 e0       	ldi	r26, 0x00	; 0
    231e:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    2322:	4c f4       	brge	.+18     	; 0x2336 <__fmt_d+0x82>
    2324:	0e 94 3a 22 	call	0x4474	; 0x4474 <__negdi2>
    2328:	89 01       	movw	r16, r18
    232a:	b4 2f       	mov	r27, r20
    232c:	f5 2f       	mov	r31, r21
    232e:	e6 2f       	mov	r30, r22
    2330:	7b 87       	std	Y+11, r23	; 0x0b
    2332:	8c 87       	std	Y+12, r24	; 0x0c
    2334:	9d 87       	std	Y+13, r25	; 0x0d
    2336:	d7 fc       	sbrc	r13, 7
    2338:	04 c0       	rjmp	.+8      	; 0x2342 <__fmt_d+0x8e>
    233a:	e8 94       	clt
    233c:	e1 f8       	bld	r14, 1
    233e:	fa 82       	std	Y+2, r15	; 0x02
    2340:	e9 82       	std	Y+1, r14	; 0x01
    2342:	91 01       	movw	r18, r2
    2344:	a2 01       	movw	r20, r4
    2346:	b3 01       	movw	r22, r6
    2348:	c4 01       	movw	r24, r8
    234a:	a0 e0       	ldi	r26, 0x00	; 0
    234c:	ed 80       	ldd	r14, Y+5	; 0x05
    234e:	fe 80       	ldd	r15, Y+6	; 0x06
    2350:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    2354:	1c f0       	brlt	.+6      	; 0x235c <__fmt_d+0xa8>
    2356:	89 81       	ldd	r24, Y+1	; 0x01
    2358:	82 ff       	sbrs	r24, 2
    235a:	04 c0       	rjmp	.+8      	; 0x2364 <__fmt_d+0xb0>
    235c:	81 e0       	ldi	r24, 0x01	; 1
    235e:	e8 1a       	sub	r14, r24
    2360:	f1 08       	sbc	r15, r1
    2362:	05 c0       	rjmp	.+10     	; 0x236e <__fmt_d+0xba>
    2364:	83 ff       	sbrs	r24, 3
    2366:	03 c0       	rjmp	.+6      	; 0x236e <__fmt_d+0xba>
    2368:	91 e0       	ldi	r25, 0x01	; 1
    236a:	e9 1a       	sub	r14, r25
    236c:	f1 08       	sbc	r15, r1
    236e:	ce 01       	movw	r24, r28
    2370:	01 96       	adiw	r24, 0x01	; 1
    2372:	5c 01       	movw	r10, r24
    2374:	8a e0       	ldi	r24, 0x0A	; 10
    2376:	c8 2e       	mov	r12, r24
    2378:	d1 2c       	mov	r13, r1
    237a:	2b 2f       	mov	r18, r27
    237c:	3f 2f       	mov	r19, r31
    237e:	4e 2f       	mov	r20, r30
    2380:	5b 85       	ldd	r21, Y+11	; 0x0b
    2382:	6c 85       	ldd	r22, Y+12	; 0x0c
    2384:	7d 85       	ldd	r23, Y+13	; 0x0d
    2386:	8b 81       	ldd	r24, Y+3	; 0x03
    2388:	9c 81       	ldd	r25, Y+4	; 0x04
    238a:	0e 94 7a 13 	call	0x26f4	; 0x26f4 <__cvt_u>
    238e:	fc 01       	movw	r30, r24
    2390:	91 01       	movw	r18, r2
    2392:	a2 01       	movw	r20, r4
    2394:	b3 01       	movw	r22, r6
    2396:	c4 01       	movw	r24, r8
    2398:	a0 e0       	ldi	r26, 0x00	; 0
    239a:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    239e:	1c f0       	brlt	.+6      	; 0x23a6 <__fmt_d+0xf2>
    23a0:	89 81       	ldd	r24, Y+1	; 0x01
    23a2:	82 ff       	sbrs	r24, 2
    23a4:	12 c0       	rjmp	.+36     	; 0x23ca <__fmt_d+0x116>
    23a6:	31 97       	sbiw	r30, 0x01	; 1
    23a8:	0f 81       	ldd	r16, Y+7	; 0x07
    23aa:	18 85       	ldd	r17, Y+8	; 0x08
    23ac:	0e 0f       	add	r16, r30
    23ae:	1f 1f       	adc	r17, r31
    23b0:	91 01       	movw	r18, r2
    23b2:	a2 01       	movw	r20, r4
    23b4:	b3 01       	movw	r22, r6
    23b6:	c4 01       	movw	r24, r8
    23b8:	a0 e0       	ldi	r26, 0x00	; 0
    23ba:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    23be:	14 f0       	brlt	.+4      	; 0x23c4 <__fmt_d+0x110>
    23c0:	8b e2       	ldi	r24, 0x2B	; 43
    23c2:	01 c0       	rjmp	.+2      	; 0x23c6 <__fmt_d+0x112>
    23c4:	8d e2       	ldi	r24, 0x2D	; 45
    23c6:	d8 01       	movw	r26, r16
    23c8:	08 c0       	rjmp	.+16     	; 0x23da <__fmt_d+0x126>
    23ca:	83 ff       	sbrs	r24, 3
    23cc:	07 c0       	rjmp	.+14     	; 0x23dc <__fmt_d+0x128>
    23ce:	31 97       	sbiw	r30, 0x01	; 1
    23d0:	af 81       	ldd	r26, Y+7	; 0x07
    23d2:	b8 85       	ldd	r27, Y+8	; 0x08
    23d4:	ae 0f       	add	r26, r30
    23d6:	bf 1f       	adc	r27, r31
    23d8:	80 e2       	ldi	r24, 0x20	; 32
    23da:	8c 93       	st	X, r24
    23dc:	e9 80       	ldd	r14, Y+1	; 0x01
    23de:	fa 80       	ldd	r15, Y+2	; 0x02
    23e0:	ab 81       	ldd	r26, Y+3	; 0x03
    23e2:	bc 81       	ldd	r27, Y+4	; 0x04
    23e4:	18 96       	adiw	r26, 0x08	; 8
    23e6:	2d 91       	ld	r18, X+
    23e8:	3c 91       	ld	r19, X
    23ea:	19 97       	sbiw	r26, 0x09	; 9
    23ec:	21 50       	subi	r18, 0x01	; 1
    23ee:	31 09       	sbc	r19, r1
    23f0:	2e 1b       	sub	r18, r30
    23f2:	3f 0b       	sbc	r19, r31
    23f4:	8f 81       	ldd	r24, Y+7	; 0x07
    23f6:	98 85       	ldd	r25, Y+8	; 0x08
    23f8:	e8 0f       	add	r30, r24
    23fa:	f9 1f       	adc	r31, r25
    23fc:	af 01       	movw	r20, r30
    23fe:	60 e8       	ldi	r22, 0x80	; 128
    2400:	0d 81       	ldd	r16, Y+5	; 0x05
    2402:	1e 81       	ldd	r17, Y+6	; 0x06
    2404:	89 85       	ldd	r24, Y+9	; 0x09
    2406:	9a 85       	ldd	r25, Y+10	; 0x0a
    2408:	0e 94 56 15 	call	0x2aac	; 0x2aac <__pad>
    240c:	9c 01       	movw	r18, r24
    240e:	a9 85       	ldd	r26, Y+9	; 0x09
    2410:	ba 85       	ldd	r27, Y+10	; 0x0a
    2412:	8d 91       	ld	r24, X+
    2414:	9c 91       	ld	r25, X
    2416:	90 ff       	sbrs	r25, 0
    2418:	07 c0       	rjmp	.+14     	; 0x2428 <__fmt_d+0x174>
    241a:	eb 81       	ldd	r30, Y+3	; 0x03
    241c:	fc 81       	ldd	r31, Y+4	; 0x04
    241e:	82 81       	ldd	r24, Z+2	; 0x02
    2420:	93 81       	ldd	r25, Z+3	; 0x03
    2422:	82 17       	cp	r24, r18
    2424:	93 07       	cpc	r25, r19
    2426:	0c f4       	brge	.+2      	; 0x242a <__fmt_d+0x176>
    2428:	c9 01       	movw	r24, r18
    242a:	2d 96       	adiw	r28, 0x0d	; 13
    242c:	e2 e1       	ldi	r30, 0x12	; 18
    242e:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>

Disassembly of section .text.__fmt_o:

00002d70 <__fmt_o>:
    2d70:	a2 e0       	ldi	r26, 0x02	; 2
    2d72:	b0 e0       	ldi	r27, 0x00	; 0
    2d74:	ee eb       	ldi	r30, 0xBE	; 190
    2d76:	f6 e1       	ldi	r31, 0x16	; 22
    2d78:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
    2d7c:	1c 01       	movw	r2, r24
    2d7e:	4b 01       	movw	r8, r22
    2d80:	fa 01       	movw	r30, r20
    2d82:	db 01       	movw	r26, r22
    2d84:	12 96       	adiw	r26, 0x02	; 2
    2d86:	2d 91       	ld	r18, X+
    2d88:	3c 91       	ld	r19, X
    2d8a:	13 97       	sbiw	r26, 0x03	; 3
    2d8c:	14 96       	adiw	r26, 0x04	; 4
    2d8e:	4d 90       	ld	r4, X+
    2d90:	5c 90       	ld	r5, X
    2d92:	15 97       	sbiw	r26, 0x05	; 5
    2d94:	8d 91       	ld	r24, X+
    2d96:	9c 91       	ld	r25, X
    2d98:	11 97       	sbiw	r26, 0x01	; 1
    2d9a:	9a 83       	std	Y+2, r25	; 0x02
    2d9c:	89 83       	std	Y+1, r24	; 0x01
    2d9e:	16 96       	adiw	r26, 0x06	; 6
    2da0:	6d 90       	ld	r6, X+
    2da2:	7c 90       	ld	r7, X
    2da4:	17 97       	sbiw	r26, 0x07	; 7
    2da6:	37 fd       	sbrc	r19, 7
    2da8:	03 c0       	rjmp	.+6      	; 0x2db0 <__fmt_o+0x40>
    2daa:	8d 7f       	andi	r24, 0xFD	; 253
    2dac:	9a 83       	std	Y+2, r25	; 0x02
    2dae:	89 83       	std	Y+1, r24	; 0x01
    2db0:	00 81       	ld	r16, Z
    2db2:	11 81       	ldd	r17, Z+1	; 0x01
    2db4:	22 81       	ldd	r18, Z+2	; 0x02
    2db6:	33 81       	ldd	r19, Z+3	; 0x03
    2db8:	44 81       	ldd	r20, Z+4	; 0x04
    2dba:	55 81       	ldd	r21, Z+5	; 0x05
    2dbc:	66 81       	ldd	r22, Z+6	; 0x06
    2dbe:	77 81       	ldd	r23, Z+7	; 0x07
    2dc0:	fe 01       	movw	r30, r28
    2dc2:	31 96       	adiw	r30, 0x01	; 1
    2dc4:	5f 01       	movw	r10, r30
    2dc6:	88 e0       	ldi	r24, 0x08	; 8
    2dc8:	c8 2e       	mov	r12, r24
    2dca:	d1 2c       	mov	r13, r1
    2dcc:	72 01       	movw	r14, r4
    2dce:	c4 01       	movw	r24, r8
    2dd0:	0e 94 7a 13 	call	0x26f4	; 0x26f4 <__cvt_u>
    2dd4:	29 81       	ldd	r18, Y+1	; 0x01
    2dd6:	24 ff       	sbrs	r18, 4
    2dd8:	06 c0       	rjmp	.+12     	; 0x2de6 <__fmt_o+0x76>
    2dda:	01 97       	sbiw	r24, 0x01	; 1
    2ddc:	f3 01       	movw	r30, r6
    2dde:	e8 0f       	add	r30, r24
    2de0:	f9 1f       	adc	r31, r25
    2de2:	20 e3       	ldi	r18, 0x30	; 48
    2de4:	20 83       	st	Z, r18
    2de6:	29 81       	ldd	r18, Y+1	; 0x01
    2de8:	23 ff       	sbrs	r18, 3
    2dea:	06 c0       	rjmp	.+12     	; 0x2df8 <__fmt_o+0x88>
    2dec:	01 97       	sbiw	r24, 0x01	; 1
    2dee:	f3 01       	movw	r30, r6
    2df0:	e8 0f       	add	r30, r24
    2df2:	f9 1f       	adc	r31, r25
    2df4:	20 e2       	ldi	r18, 0x20	; 32
    2df6:	20 83       	st	Z, r18
    2df8:	e9 80       	ldd	r14, Y+1	; 0x01
    2dfa:	fa 80       	ldd	r15, Y+2	; 0x02
    2dfc:	d4 01       	movw	r26, r8
    2dfe:	18 96       	adiw	r26, 0x08	; 8
    2e00:	2d 91       	ld	r18, X+
    2e02:	3c 91       	ld	r19, X
    2e04:	19 97       	sbiw	r26, 0x09	; 9
    2e06:	21 50       	subi	r18, 0x01	; 1
    2e08:	31 09       	sbc	r19, r1
    2e0a:	28 1b       	sub	r18, r24
    2e0c:	39 0b       	sbc	r19, r25
    2e0e:	86 0d       	add	r24, r6
    2e10:	97 1d       	adc	r25, r7
    2e12:	ac 01       	movw	r20, r24
    2e14:	60 e8       	ldi	r22, 0x80	; 128
    2e16:	82 01       	movw	r16, r4
    2e18:	c1 01       	movw	r24, r2
    2e1a:	0e 94 56 15 	call	0x2aac	; 0x2aac <__pad>
    2e1e:	9c 01       	movw	r18, r24
    2e20:	f1 01       	movw	r30, r2
    2e22:	80 81       	ld	r24, Z
    2e24:	91 81       	ldd	r25, Z+1	; 0x01
    2e26:	90 ff       	sbrs	r25, 0
    2e28:	08 c0       	rjmp	.+16     	; 0x2e3a <__fmt_o+0xca>
    2e2a:	d4 01       	movw	r26, r8
    2e2c:	12 96       	adiw	r26, 0x02	; 2
    2e2e:	8d 91       	ld	r24, X+
    2e30:	9c 91       	ld	r25, X
    2e32:	13 97       	sbiw	r26, 0x03	; 3
    2e34:	82 17       	cp	r24, r18
    2e36:	93 07       	cpc	r25, r19
    2e38:	0c f4       	brge	.+2      	; 0x2e3c <__fmt_o+0xcc>
    2e3a:	c9 01       	movw	r24, r18
    2e3c:	22 96       	adiw	r28, 0x02	; 2
    2e3e:	e2 e1       	ldi	r30, 0x12	; 18
    2e40:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>

Disassembly of section .text.__cvt_u:

000026f4 <__cvt_u>:
    26f4:	a2 e1       	ldi	r26, 0x12	; 18
    26f6:	b0 e0       	ldi	r27, 0x00	; 0
    26f8:	e0 e8       	ldi	r30, 0x80	; 128
    26fa:	f3 e1       	ldi	r31, 0x13	; 19
    26fc:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
    2700:	fc 01       	movw	r30, r24
    2702:	0a 8b       	std	Y+18, r16	; 0x12
    2704:	1b 83       	std	Y+3, r17	; 0x03
    2706:	2c 83       	std	Y+4, r18	; 0x04
    2708:	73 2e       	mov	r7, r19
    270a:	64 2e       	mov	r6, r20
    270c:	55 2e       	mov	r5, r21
    270e:	46 2e       	mov	r4, r22
    2710:	7d 83       	std	Y+5, r23	; 0x05
    2712:	cc 86       	std	Y+12, r12	; 0x0c
    2714:	d8 86       	std	Y+8, r13	; 0x08
    2716:	bf 82       	std	Y+7, r11	; 0x07
    2718:	ae 82       	std	Y+6, r10	; 0x06
    271a:	86 81       	ldd	r24, Z+6	; 0x06
    271c:	97 81       	ldd	r25, Z+7	; 0x07
    271e:	9b 87       	std	Y+11, r25	; 0x0b
    2720:	8a 87       	std	Y+10, r24	; 0x0a
    2722:	d5 01       	movw	r26, r10
    2724:	4d 91       	ld	r20, X+
    2726:	5c 91       	ld	r21, X
    2728:	22 81       	ldd	r18, Z+2	; 0x02
    272a:	33 81       	ldd	r19, Z+3	; 0x03
    272c:	80 85       	ldd	r24, Z+8	; 0x08
    272e:	91 85       	ldd	r25, Z+9	; 0x09
    2730:	01 97       	sbiw	r24, 0x01	; 1
    2732:	1c 01       	movw	r2, r24
    2734:	37 ff       	sbrs	r19, 7
    2736:	02 c0       	rjmp	.+4      	; 0x273c <__cvt_u+0x48>
    2738:	21 e0       	ldi	r18, 0x01	; 1
    273a:	30 e0       	ldi	r19, 0x00	; 0
    273c:	ea 85       	ldd	r30, Y+10	; 0x0a
    273e:	fb 85       	ldd	r31, Y+11	; 0x0b
    2740:	e8 0f       	add	r30, r24
    2742:	f9 1f       	adc	r31, r25
    2744:	10 82       	st	Z, r1
    2746:	47 01       	movw	r8, r14
    2748:	e1 e0       	ldi	r30, 0x01	; 1
    274a:	f0 e0       	ldi	r31, 0x00	; 0
    274c:	fa 83       	std	Y+2, r31	; 0x02
    274e:	e9 83       	std	Y+1, r30	; 0x01
    2750:	c9 01       	movw	r24, r18
    2752:	8e 19       	sub	r24, r14
    2754:	9f 09       	sbc	r25, r15
    2756:	9e 87       	std	Y+14, r25	; 0x0e
    2758:	8d 87       	std	Y+13, r24	; 0x0d
    275a:	da 01       	movw	r26, r20
    275c:	a2 70       	andi	r26, 0x02	; 2
    275e:	bb 27       	eor	r27, r27
    2760:	b8 8b       	std	Y+16, r27	; 0x10
    2762:	af 87       	std	Y+15, r26	; 0x0f
    2764:	b8 85       	ldd	r27, Y+8	; 0x08
    2766:	bb 0f       	add	r27, r27
    2768:	bb 0b       	sbc	r27, r27
    276a:	b9 8b       	std	Y+17, r27	; 0x11
    276c:	12 14       	cp	r1, r2
    276e:	13 04       	cpc	r1, r3
    2770:	74 f0       	brlt	.+28     	; 0x278e <__cvt_u+0x9a>
    2772:	a9 81       	ldd	r26, Y+1	; 0x01
    2774:	ba 81       	ldd	r27, Y+2	; 0x02
    2776:	ab 2b       	or	r26, r27
    2778:	09 f0       	breq	.+2      	; 0x277c <__cvt_u+0x88>
    277a:	5c c0       	rjmp	.+184    	; 0x2834 <__cvt_u+0x140>
    277c:	ae 81       	ldd	r26, Y+6	; 0x06
    277e:	bf 81       	ldd	r27, Y+7	; 0x07
    2780:	8d 91       	ld	r24, X+
    2782:	9c 91       	ld	r25, X
    2784:	11 97       	sbiw	r26, 0x01	; 1
    2786:	8f 7e       	andi	r24, 0xEF	; 239
    2788:	8d 93       	st	X+, r24
    278a:	9c 93       	st	X, r25
    278c:	53 c0       	rjmp	.+166    	; 0x2834 <__cvt_u+0x140>
    278e:	2a 89       	ldd	r18, Y+18	; 0x12
    2790:	3b 81       	ldd	r19, Y+3	; 0x03
    2792:	4c 81       	ldd	r20, Y+4	; 0x04
    2794:	57 2d       	mov	r21, r7
    2796:	66 2d       	mov	r22, r6
    2798:	75 2d       	mov	r23, r5
    279a:	84 2d       	mov	r24, r4
    279c:	9d 81       	ldd	r25, Y+5	; 0x05
    279e:	a0 e0       	ldi	r26, 0x00	; 0
    27a0:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    27a4:	b1 f1       	breq	.+108    	; 0x2812 <__cvt_u+0x11e>
    27a6:	e1 e0       	ldi	r30, 0x01	; 1
    27a8:	2e 1a       	sub	r2, r30
    27aa:	31 08       	sbc	r3, r1
    27ac:	fc 85       	ldd	r31, Y+12	; 0x0c
    27ae:	f9 87       	std	Y+9, r31	; 0x09
    27b0:	af 2e       	mov	r10, r31
    27b2:	b8 84       	ldd	r11, Y+8	; 0x08
    27b4:	c9 88       	ldd	r12, Y+17	; 0x11
    27b6:	dc 2c       	mov	r13, r12
    27b8:	ec 2c       	mov	r14, r12
    27ba:	fc 2c       	mov	r15, r12
    27bc:	0c 2d       	mov	r16, r12
    27be:	1c 2d       	mov	r17, r12
    27c0:	2a 89       	ldd	r18, Y+18	; 0x12
    27c2:	3b 81       	ldd	r19, Y+3	; 0x03
    27c4:	4c 81       	ldd	r20, Y+4	; 0x04
    27c6:	57 2d       	mov	r21, r7
    27c8:	66 2d       	mov	r22, r6
    27ca:	75 2d       	mov	r23, r5
    27cc:	84 2d       	mov	r24, r4
    27ce:	9d 81       	ldd	r25, Y+5	; 0x05
    27d0:	0e 94 67 22 	call	0x44ce	; 0x44ce <__umoddi3>
    27d4:	c9 01       	movw	r24, r18
    27d6:	29 83       	std	Y+1, r18	; 0x01
    27d8:	9a 83       	std	Y+2, r25	; 0x02
    27da:	ea 85       	ldd	r30, Y+10	; 0x0a
    27dc:	fb 85       	ldd	r31, Y+11	; 0x0b
    27de:	e2 0d       	add	r30, r2
    27e0:	f3 1d       	adc	r31, r3
    27e2:	80 5d       	subi	r24, 0xD0	; 208
    27e4:	80 83       	st	Z, r24
    27e6:	81 e0       	ldi	r24, 0x01	; 1
    27e8:	88 1a       	sub	r8, r24
    27ea:	91 08       	sbc	r9, r1
    27ec:	2a 89       	ldd	r18, Y+18	; 0x12
    27ee:	3b 81       	ldd	r19, Y+3	; 0x03
    27f0:	4c 81       	ldd	r20, Y+4	; 0x04
    27f2:	57 2d       	mov	r21, r7
    27f4:	66 2d       	mov	r22, r6
    27f6:	75 2d       	mov	r23, r5
    27f8:	84 2d       	mov	r24, r4
    27fa:	9d 81       	ldd	r25, Y+5	; 0x05
    27fc:	0e 94 69 22 	call	0x44d2	; 0x44d2 <__udivdi3>
    2800:	2a 8b       	std	Y+18, r18	; 0x12
    2802:	3b 83       	std	Y+3, r19	; 0x03
    2804:	4c 83       	std	Y+4, r20	; 0x04
    2806:	75 2e       	mov	r7, r21
    2808:	66 2e       	mov	r6, r22
    280a:	57 2e       	mov	r5, r23
    280c:	48 2e       	mov	r4, r24
    280e:	9d 83       	std	Y+5, r25	; 0x05
    2810:	ad cf       	rjmp	.-166    	; 0x276c <__cvt_u+0x78>
    2812:	8d 85       	ldd	r24, Y+13	; 0x0d
    2814:	9e 85       	ldd	r25, Y+14	; 0x0e
    2816:	88 0d       	add	r24, r8
    2818:	99 1d       	adc	r25, r9
    281a:	18 16       	cp	r1, r24
    281c:	19 06       	cpc	r1, r25
    281e:	1c f2       	brlt	.-122    	; 0x27a6 <__cvt_u+0xb2>
    2820:	18 14       	cp	r1, r8
    2822:	19 04       	cpc	r1, r9
    2824:	0c f0       	brlt	.+2      	; 0x2828 <__cvt_u+0x134>
    2826:	a5 cf       	rjmp	.-182    	; 0x2772 <__cvt_u+0x7e>
    2828:	ef 85       	ldd	r30, Y+15	; 0x0f
    282a:	f8 89       	ldd	r31, Y+16	; 0x10
    282c:	ef 2b       	or	r30, r31
    282e:	09 f0       	breq	.+2      	; 0x2832 <__cvt_u+0x13e>
    2830:	ba cf       	rjmp	.-140    	; 0x27a6 <__cvt_u+0xb2>
    2832:	9f cf       	rjmp	.-194    	; 0x2772 <__cvt_u+0x7e>
    2834:	c1 01       	movw	r24, r2
    2836:	62 96       	adiw	r28, 0x12	; 18
    2838:	e2 e1       	ldi	r30, 0x12	; 18
    283a:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>

Disassembly of section .text.__fmt_u:

000032e8 <__fmt_u>:
    32e8:	a2 e0       	ldi	r26, 0x02	; 2
    32ea:	b0 e0       	ldi	r27, 0x00	; 0
    32ec:	ea e7       	ldi	r30, 0x7A	; 122
    32ee:	f9 e1       	ldi	r31, 0x19	; 25
    32f0:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
    32f4:	3c 01       	movw	r6, r24
    32f6:	4b 01       	movw	r8, r22
    32f8:	fa 01       	movw	r30, r20
    32fa:	db 01       	movw	r26, r22
    32fc:	12 96       	adiw	r26, 0x02	; 2
    32fe:	2d 91       	ld	r18, X+
    3300:	3c 91       	ld	r19, X
    3302:	13 97       	sbiw	r26, 0x03	; 3
    3304:	14 96       	adiw	r26, 0x04	; 4
    3306:	4d 90       	ld	r4, X+
    3308:	5c 90       	ld	r5, X
    330a:	15 97       	sbiw	r26, 0x05	; 5
    330c:	8d 91       	ld	r24, X+
    330e:	9c 91       	ld	r25, X
    3310:	11 97       	sbiw	r26, 0x01	; 1
    3312:	9a 83       	std	Y+2, r25	; 0x02
    3314:	89 83       	std	Y+1, r24	; 0x01
    3316:	16 96       	adiw	r26, 0x06	; 6
    3318:	2d 90       	ld	r2, X+
    331a:	3c 90       	ld	r3, X
    331c:	17 97       	sbiw	r26, 0x07	; 7
    331e:	37 fd       	sbrc	r19, 7
    3320:	03 c0       	rjmp	.+6      	; 0x3328 <__fmt_u+0x40>
    3322:	8d 7f       	andi	r24, 0xFD	; 253
    3324:	9a 83       	std	Y+2, r25	; 0x02
    3326:	89 83       	std	Y+1, r24	; 0x01
    3328:	00 81       	ld	r16, Z
    332a:	11 81       	ldd	r17, Z+1	; 0x01
    332c:	22 81       	ldd	r18, Z+2	; 0x02
    332e:	33 81       	ldd	r19, Z+3	; 0x03
    3330:	44 81       	ldd	r20, Z+4	; 0x04
    3332:	55 81       	ldd	r21, Z+5	; 0x05
    3334:	66 81       	ldd	r22, Z+6	; 0x06
    3336:	77 81       	ldd	r23, Z+7	; 0x07
    3338:	fe 01       	movw	r30, r28
    333a:	31 96       	adiw	r30, 0x01	; 1
    333c:	5f 01       	movw	r10, r30
    333e:	8a e0       	ldi	r24, 0x0A	; 10
    3340:	c8 2e       	mov	r12, r24
    3342:	d1 2c       	mov	r13, r1
    3344:	72 01       	movw	r14, r4
    3346:	c4 01       	movw	r24, r8
    3348:	0e 94 7a 13 	call	0x26f4	; 0x26f4 <__cvt_u>
    334c:	e9 80       	ldd	r14, Y+1	; 0x01
    334e:	fa 80       	ldd	r15, Y+2	; 0x02
    3350:	d4 01       	movw	r26, r8
    3352:	18 96       	adiw	r26, 0x08	; 8
    3354:	2d 91       	ld	r18, X+
    3356:	3c 91       	ld	r19, X
    3358:	19 97       	sbiw	r26, 0x09	; 9
    335a:	21 50       	subi	r18, 0x01	; 1
    335c:	31 09       	sbc	r19, r1
    335e:	28 1b       	sub	r18, r24
    3360:	39 0b       	sbc	r19, r25
    3362:	82 0d       	add	r24, r2
    3364:	93 1d       	adc	r25, r3
    3366:	ac 01       	movw	r20, r24
    3368:	60 e8       	ldi	r22, 0x80	; 128
    336a:	82 01       	movw	r16, r4
    336c:	c3 01       	movw	r24, r6
    336e:	0e 94 56 15 	call	0x2aac	; 0x2aac <__pad>
    3372:	9c 01       	movw	r18, r24
    3374:	f3 01       	movw	r30, r6
    3376:	80 81       	ld	r24, Z
    3378:	91 81       	ldd	r25, Z+1	; 0x01
    337a:	90 ff       	sbrs	r25, 0
    337c:	08 c0       	rjmp	.+16     	; 0x338e <__fmt_u+0xa6>
    337e:	d4 01       	movw	r26, r8
    3380:	12 96       	adiw	r26, 0x02	; 2
    3382:	8d 91       	ld	r24, X+
    3384:	9c 91       	ld	r25, X
    3386:	13 97       	sbiw	r26, 0x03	; 3
    3388:	82 17       	cp	r24, r18
    338a:	93 07       	cpc	r25, r19
    338c:	0c f4       	brge	.+2      	; 0x3390 <__fmt_u+0xa8>
    338e:	c9 01       	movw	r24, r18
    3390:	22 96       	adiw	r28, 0x02	; 2
    3392:	e2 e1       	ldi	r30, 0x12	; 18
    3394:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>

Disassembly of section .text.__fmt_x:

00002034 <__fmt_x>:
    2034:	a4 e1       	ldi	r26, 0x14	; 20
    2036:	b0 e0       	ldi	r27, 0x00	; 0
    2038:	e0 e2       	ldi	r30, 0x20	; 32
    203a:	f0 e1       	ldi	r31, 0x10	; 16
    203c:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
    2040:	98 87       	std	Y+8, r25	; 0x08
    2042:	8f 83       	std	Y+7, r24	; 0x07
    2044:	7a 83       	std	Y+2, r23	; 0x02
    2046:	69 83       	std	Y+1, r22	; 0x01
    2048:	5c 8b       	std	Y+20, r21	; 0x14
    204a:	4b 8b       	std	Y+19, r20	; 0x13
    204c:	12 2f       	mov	r17, r18
    204e:	db 01       	movw	r26, r22
    2050:	12 96       	adiw	r26, 0x02	; 2
    2052:	ed 91       	ld	r30, X+
    2054:	fc 91       	ld	r31, X
    2056:	13 97       	sbiw	r26, 0x03	; 3
    2058:	14 96       	adiw	r26, 0x04	; 4
    205a:	2d 91       	ld	r18, X+
    205c:	3c 91       	ld	r19, X
    205e:	15 97       	sbiw	r26, 0x05	; 5
    2060:	3e 83       	std	Y+6, r19	; 0x06
    2062:	2d 83       	std	Y+5, r18	; 0x05
    2064:	ed 90       	ld	r14, X+
    2066:	fc 90       	ld	r15, X
    2068:	11 97       	sbiw	r26, 0x01	; 1
    206a:	16 96       	adiw	r26, 0x06	; 6
    206c:	2d 90       	ld	r2, X+
    206e:	3c 90       	ld	r3, X
    2070:	17 97       	sbiw	r26, 0x07	; 7
    2072:	f7 fd       	sbrc	r31, 7
    2074:	03 c0       	rjmp	.+6      	; 0x207c <__fmt_x+0x48>
    2076:	e8 94       	clt
    2078:	e1 f8       	bld	r14, 1
    207a:	02 c0       	rjmp	.+4      	; 0x2080 <__fmt_x+0x4c>
    207c:	e1 e0       	ldi	r30, 0x01	; 1
    207e:	f0 e0       	ldi	r31, 0x00	; 0
    2080:	c7 01       	movw	r24, r14
    2082:	80 71       	andi	r24, 0x10	; 16
    2084:	99 27       	eor	r25, r25
    2086:	9a 87       	std	Y+10, r25	; 0x0a
    2088:	89 87       	std	Y+9, r24	; 0x09
    208a:	e4 fe       	sbrs	r14, 4
    208c:	1f c0       	rjmp	.+62     	; 0x20cc <__fmt_x+0x98>
    208e:	ab 89       	ldd	r26, Y+19	; 0x13
    2090:	bc 89       	ldd	r27, Y+20	; 0x14
    2092:	2c 91       	ld	r18, X
    2094:	11 96       	adiw	r26, 0x01	; 1
    2096:	3c 91       	ld	r19, X
    2098:	11 97       	sbiw	r26, 0x01	; 1
    209a:	12 96       	adiw	r26, 0x02	; 2
    209c:	4c 91       	ld	r20, X
    209e:	12 97       	sbiw	r26, 0x02	; 2
    20a0:	13 96       	adiw	r26, 0x03	; 3
    20a2:	5c 91       	ld	r21, X
    20a4:	13 97       	sbiw	r26, 0x03	; 3
    20a6:	14 96       	adiw	r26, 0x04	; 4
    20a8:	6c 91       	ld	r22, X
    20aa:	14 97       	sbiw	r26, 0x04	; 4
    20ac:	15 96       	adiw	r26, 0x05	; 5
    20ae:	7c 91       	ld	r23, X
    20b0:	15 97       	sbiw	r26, 0x05	; 5
    20b2:	16 96       	adiw	r26, 0x06	; 6
    20b4:	8c 91       	ld	r24, X
    20b6:	16 97       	sbiw	r26, 0x06	; 6
    20b8:	17 96       	adiw	r26, 0x07	; 7
    20ba:	9c 91       	ld	r25, X
    20bc:	a0 e0       	ldi	r26, 0x00	; 0
    20be:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    20c2:	21 f0       	breq	.+8      	; 0x20cc <__fmt_x+0x98>
    20c4:	8d 81       	ldd	r24, Y+5	; 0x05
    20c6:	9e 81       	ldd	r25, Y+6	; 0x06
    20c8:	02 97       	sbiw	r24, 0x02	; 2
    20ca:	02 c0       	rjmp	.+4      	; 0x20d0 <__fmt_x+0x9c>
    20cc:	8d 81       	ldd	r24, Y+5	; 0x05
    20ce:	9e 81       	ldd	r25, Y+6	; 0x06
    20d0:	97 01       	movw	r18, r14
    20d2:	28 70       	andi	r18, 0x08	; 8
    20d4:	33 27       	eor	r19, r19
    20d6:	3c 87       	std	Y+12, r19	; 0x0c
    20d8:	2b 87       	std	Y+11, r18	; 0x0b
    20da:	e3 fc       	sbrc	r14, 3
    20dc:	01 97       	sbiw	r24, 0x01	; 1
    20de:	ab 89       	ldd	r26, Y+19	; 0x13
    20e0:	bc 89       	ldd	r27, Y+20	; 0x14
    20e2:	4c 90       	ld	r4, X
    20e4:	11 96       	adiw	r26, 0x01	; 1
    20e6:	5c 90       	ld	r5, X
    20e8:	11 97       	sbiw	r26, 0x01	; 1
    20ea:	12 96       	adiw	r26, 0x02	; 2
    20ec:	6c 90       	ld	r6, X
    20ee:	12 97       	sbiw	r26, 0x02	; 2
    20f0:	13 96       	adiw	r26, 0x03	; 3
    20f2:	7c 90       	ld	r7, X
    20f4:	13 97       	sbiw	r26, 0x03	; 3
    20f6:	14 96       	adiw	r26, 0x04	; 4
    20f8:	8c 90       	ld	r8, X
    20fa:	14 97       	sbiw	r26, 0x04	; 4
    20fc:	15 96       	adiw	r26, 0x05	; 5
    20fe:	9c 90       	ld	r9, X
    2100:	15 97       	sbiw	r26, 0x05	; 5
    2102:	16 96       	adiw	r26, 0x06	; 6
    2104:	ac 90       	ld	r10, X
    2106:	16 97       	sbiw	r26, 0x06	; 6
    2108:	17 96       	adiw	r26, 0x07	; 7
    210a:	bc 90       	ld	r11, X
    210c:	a9 81       	ldd	r26, Y+1	; 0x01
    210e:	ba 81       	ldd	r27, Y+2	; 0x02
    2110:	18 96       	adiw	r26, 0x08	; 8
    2112:	cd 90       	ld	r12, X+
    2114:	dc 90       	ld	r13, X
    2116:	19 97       	sbiw	r26, 0x09	; 9
    2118:	b1 e0       	ldi	r27, 0x01	; 1
    211a:	cb 1a       	sub	r12, r27
    211c:	d1 08       	sbc	r13, r1
    211e:	d1 01       	movw	r26, r2
    2120:	ac 0d       	add	r26, r12
    2122:	bd 1d       	adc	r27, r13
    2124:	1c 92       	st	X, r1
    2126:	9c 83       	std	Y+4, r25	; 0x04
    2128:	8b 83       	std	Y+3, r24	; 0x03
    212a:	9f 01       	movw	r18, r30
    212c:	28 1b       	sub	r18, r24
    212e:	39 0b       	sbc	r19, r25
    2130:	3e 87       	std	Y+14, r19	; 0x0e
    2132:	2d 87       	std	Y+13, r18	; 0x0d
    2134:	c7 01       	movw	r24, r14
    2136:	82 70       	andi	r24, 0x02	; 2
    2138:	99 27       	eor	r25, r25
    213a:	98 8b       	std	Y+16, r25	; 0x10
    213c:	8f 87       	std	Y+15, r24	; 0x0f
    213e:	81 2f       	mov	r24, r17
    2140:	01 2e       	mov	r0, r17
    2142:	00 0c       	add	r0, r0
    2144:	99 0b       	sbc	r25, r25
    2146:	dc 01       	movw	r26, r24
    2148:	a1 54       	subi	r26, 0x41	; 65
    214a:	b1 09       	sbc	r27, r1
    214c:	ba 8b       	std	Y+18, r27	; 0x12
    214e:	a9 8b       	std	Y+17, r26	; 0x11
    2150:	32 e0       	ldi	r19, 0x02	; 2
    2152:	c3 16       	cp	r12, r19
    2154:	d1 04       	cpc	r13, r1
    2156:	34 f4       	brge	.+12     	; 0x2164 <__fmt_x+0x130>
    2158:	89 85       	ldd	r24, Y+9	; 0x09
    215a:	9a 85       	ldd	r25, Y+10	; 0x0a
    215c:	89 2b       	or	r24, r25
    215e:	09 f0       	breq	.+2      	; 0x2162 <__fmt_x+0x12e>
    2160:	4c c0       	rjmp	.+152    	; 0x21fa <__fmt_x+0x1c6>
    2162:	73 c0       	rjmp	.+230    	; 0x224a <__stack+0x4b>
    2164:	92 01       	movw	r18, r4
    2166:	a3 01       	movw	r20, r6
    2168:	b4 01       	movw	r22, r8
    216a:	c5 01       	movw	r24, r10
    216c:	a0 e0       	ldi	r26, 0x00	; 0
    216e:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    2172:	81 f1       	breq	.+96     	; 0x21d4 <__fmt_x+0x1a0>
    2174:	b1 e0       	ldi	r27, 0x01	; 1
    2176:	cb 1a       	sub	r12, r27
    2178:	d1 08       	sbc	r13, r1
    217a:	c2 01       	movw	r24, r4
    217c:	8f 70       	andi	r24, 0x0F	; 15
    217e:	99 27       	eor	r25, r25
    2180:	8a 30       	cpi	r24, 0x0A	; 10
    2182:	91 05       	cpc	r25, r1
    2184:	14 f4       	brge	.+4      	; 0x218a <__fmt_x+0x156>
    2186:	c0 96       	adiw	r24, 0x30	; 48
    2188:	02 c0       	rjmp	.+4      	; 0x218e <__fmt_x+0x15a>
    218a:	89 5a       	subi	r24, 0xA9	; 169
    218c:	9f 4f       	sbci	r25, 0xFF	; 255
    218e:	e9 89       	ldd	r30, Y+17	; 0x11
    2190:	fa 89       	ldd	r31, Y+18	; 0x12
    2192:	7a 97       	sbiw	r30, 0x1a	; 26
    2194:	48 f4       	brcc	.+18     	; 0x21a8 <__fmt_x+0x174>
    2196:	9c 01       	movw	r18, r24
    2198:	20 62       	ori	r18, 0x20	; 32
    219a:	21 56       	subi	r18, 0x61	; 97
    219c:	31 09       	sbc	r19, r1
    219e:	2a 31       	cpi	r18, 0x1A	; 26
    21a0:	31 05       	cpc	r19, r1
    21a2:	10 f4       	brcc	.+4      	; 0x21a8 <__fmt_x+0x174>
    21a4:	0e 94 df 22 	call	0x45be	; 0x45be <toupper>
    21a8:	f1 01       	movw	r30, r2
    21aa:	ec 0d       	add	r30, r12
    21ac:	fd 1d       	adc	r31, r13
    21ae:	80 83       	st	Z, r24
    21b0:	2b 81       	ldd	r18, Y+3	; 0x03
    21b2:	3c 81       	ldd	r19, Y+4	; 0x04
    21b4:	21 50       	subi	r18, 0x01	; 1
    21b6:	31 09       	sbc	r19, r1
    21b8:	3c 83       	std	Y+4, r19	; 0x04
    21ba:	2b 83       	std	Y+3, r18	; 0x03
    21bc:	92 01       	movw	r18, r4
    21be:	a3 01       	movw	r20, r6
    21c0:	b4 01       	movw	r22, r8
    21c2:	c5 01       	movw	r24, r10
    21c4:	04 e0       	ldi	r16, 0x04	; 4
    21c6:	0e 94 b8 20 	call	0x4170	; 0x4170 <__lshrdi3>
    21ca:	29 01       	movw	r4, r18
    21cc:	3a 01       	movw	r6, r20
    21ce:	4b 01       	movw	r8, r22
    21d0:	5c 01       	movw	r10, r24
    21d2:	be cf       	rjmp	.-132    	; 0x2150 <__fmt_x+0x11c>
    21d4:	8d 85       	ldd	r24, Y+13	; 0x0d
    21d6:	9e 85       	ldd	r25, Y+14	; 0x0e
    21d8:	ab 81       	ldd	r26, Y+3	; 0x03
    21da:	bc 81       	ldd	r27, Y+4	; 0x04
    21dc:	8a 0f       	add	r24, r26
    21de:	9b 1f       	adc	r25, r27
    21e0:	18 16       	cp	r1, r24
    21e2:	19 06       	cpc	r1, r25
    21e4:	3c f2       	brlt	.-114    	; 0x2174 <__fmt_x+0x140>
    21e6:	1a 16       	cp	r1, r26
    21e8:	1b 06       	cpc	r1, r27
    21ea:	0c f0       	brlt	.+2      	; 0x21ee <__fmt_x+0x1ba>
    21ec:	b5 cf       	rjmp	.-150    	; 0x2158 <__fmt_x+0x124>
    21ee:	ef 85       	ldd	r30, Y+15	; 0x0f
    21f0:	f8 89       	ldd	r31, Y+16	; 0x10
    21f2:	ef 2b       	or	r30, r31
    21f4:	09 f0       	breq	.+2      	; 0x21f8 <__fmt_x+0x1c4>
    21f6:	be cf       	rjmp	.-132    	; 0x2174 <__fmt_x+0x140>
    21f8:	af cf       	rjmp	.-162    	; 0x2158 <__fmt_x+0x124>
    21fa:	ab 89       	ldd	r26, Y+19	; 0x13
    21fc:	bc 89       	ldd	r27, Y+20	; 0x14
    21fe:	2c 91       	ld	r18, X
    2200:	11 96       	adiw	r26, 0x01	; 1
    2202:	3c 91       	ld	r19, X
    2204:	11 97       	sbiw	r26, 0x01	; 1
    2206:	12 96       	adiw	r26, 0x02	; 2
    2208:	4c 91       	ld	r20, X
    220a:	12 97       	sbiw	r26, 0x02	; 2
    220c:	13 96       	adiw	r26, 0x03	; 3
    220e:	5c 91       	ld	r21, X
    2210:	13 97       	sbiw	r26, 0x03	; 3
    2212:	14 96       	adiw	r26, 0x04	; 4
    2214:	6c 91       	ld	r22, X
    2216:	14 97       	sbiw	r26, 0x04	; 4
    2218:	15 96       	adiw	r26, 0x05	; 5
    221a:	7c 91       	ld	r23, X
    221c:	15 97       	sbiw	r26, 0x05	; 5
    221e:	16 96       	adiw	r26, 0x06	; 6
    2220:	8c 91       	ld	r24, X
    2222:	16 97       	sbiw	r26, 0x06	; 6
    2224:	17 96       	adiw	r26, 0x07	; 7
    2226:	9c 91       	ld	r25, X
    2228:	a0 e0       	ldi	r26, 0x00	; 0
    222a:	0e 94 a8 22 	call	0x4550	; 0x4550 <__cmpdi2_s8>
    222e:	69 f0       	breq	.+26     	; 0x224a <__stack+0x4b>
    2230:	f1 01       	movw	r30, r2
    2232:	ec 0d       	add	r30, r12
    2234:	fd 1d       	adc	r31, r13
    2236:	31 97       	sbiw	r30, 0x01	; 1
    2238:	10 83       	st	Z, r17
    223a:	b2 e0       	ldi	r27, 0x02	; 2
    223c:	cb 1a       	sub	r12, r27
    223e:	d1 08       	sbc	r13, r1
    2240:	f1 01       	movw	r30, r2
    2242:	ec 0d       	add	r30, r12
    2244:	fd 1d       	adc	r31, r13
    2246:	80 e3       	ldi	r24, 0x30	; 48
    2248:	80 83       	st	Z, r24
    224a:	eb 85       	ldd	r30, Y+11	; 0x0b
    224c:	fc 85       	ldd	r31, Y+12	; 0x0c
    224e:	ef 2b       	or	r30, r31
    2250:	41 f0       	breq	.+16     	; 0x2262 <__stack+0x63>
    2252:	f1 e0       	ldi	r31, 0x01	; 1
    2254:	cf 1a       	sub	r12, r31
    2256:	d1 08       	sbc	r13, r1
    2258:	f1 01       	movw	r30, r2
    225a:	ec 0d       	add	r30, r12
    225c:	fd 1d       	adc	r31, r13
    225e:	80 e2       	ldi	r24, 0x20	; 32
    2260:	80 83       	st	Z, r24
    2262:	a9 81       	ldd	r26, Y+1	; 0x01
    2264:	ba 81       	ldd	r27, Y+2	; 0x02
    2266:	18 96       	adiw	r26, 0x08	; 8
    2268:	2d 91       	ld	r18, X+
    226a:	3c 91       	ld	r19, X
    226c:	19 97       	sbiw	r26, 0x09	; 9
    226e:	21 50       	subi	r18, 0x01	; 1
    2270:	31 09       	sbc	r19, r1
    2272:	2c 19       	sub	r18, r12
    2274:	3d 09       	sbc	r19, r13
    2276:	c2 0c       	add	r12, r2
    2278:	d3 1c       	adc	r13, r3
    227a:	a6 01       	movw	r20, r12
    227c:	60 e8       	ldi	r22, 0x80	; 128
    227e:	0d 81       	ldd	r16, Y+5	; 0x05
    2280:	1e 81       	ldd	r17, Y+6	; 0x06
    2282:	8f 81       	ldd	r24, Y+7	; 0x07
    2284:	98 85       	ldd	r25, Y+8	; 0x08
    2286:	0e 94 56 15 	call	0x2aac	; 0x2aac <__pad>
    228a:	9c 01       	movw	r18, r24
    228c:	ef 81       	ldd	r30, Y+7	; 0x07
    228e:	f8 85       	ldd	r31, Y+8	; 0x08
    2290:	80 81       	ld	r24, Z
    2292:	91 81       	ldd	r25, Z+1	; 0x01
    2294:	90 ff       	sbrs	r25, 0
    2296:	09 c0       	rjmp	.+18     	; 0x22aa <__stack+0xab>
    2298:	a9 81       	ldd	r26, Y+1	; 0x01
    229a:	ba 81       	ldd	r27, Y+2	; 0x02
    229c:	12 96       	adiw	r26, 0x02	; 2
    229e:	8d 91       	ld	r24, X+
    22a0:	9c 91       	ld	r25, X
    22a2:	13 97       	sbiw	r26, 0x03	; 3
    22a4:	82 17       	cp	r24, r18
    22a6:	93 07       	cpc	r25, r19
    22a8:	0c f4       	brge	.+2      	; 0x22ac <__stack+0xad>
    22aa:	c9 01       	movw	r24, r18
    22ac:	64 96       	adiw	r28, 0x14	; 20
    22ae:	e2 e1       	ldi	r30, 0x12	; 18
    22b0:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>

Disassembly of section .text.__pop_float:

0000412c <__pop_float>:
    412c:	fa 01       	movw	r30, r20
    412e:	60 38       	cpi	r22, 0x80	; 128
    4130:	71 05       	cpc	r23, r1
    4132:	cc f0       	brlt	.+50     	; 0x4166 <__pop_float+0x3a>
    4134:	62 38       	cpi	r22, 0x82	; 130
    4136:	71 05       	cpc	r23, r1
    4138:	1c f0       	brlt	.+6      	; 0x4140 <__pop_float+0x14>
    413a:	63 38       	cpi	r22, 0x83	; 131
    413c:	71 05       	cpc	r23, r1
    413e:	99 f4       	brne	.+38     	; 0x4166 <__pop_float+0x3a>
    4140:	a0 81       	ld	r26, Z
    4142:	b1 81       	ldd	r27, Z+1	; 0x01
    4144:	9d 01       	movw	r18, r26
    4146:	2c 5f       	subi	r18, 0xFC	; 252
    4148:	3f 4f       	sbci	r19, 0xFF	; 255
    414a:	31 83       	std	Z+1, r19	; 0x01
    414c:	20 83       	st	Z, r18
    414e:	4d 91       	ld	r20, X+
    4150:	5d 91       	ld	r21, X+
    4152:	6d 91       	ld	r22, X+
    4154:	7c 91       	ld	r23, X
    4156:	fc 01       	movw	r30, r24
    4158:	40 83       	st	Z, r20
    415a:	51 83       	std	Z+1, r21	; 0x01
    415c:	62 83       	std	Z+2, r22	; 0x02
    415e:	73 83       	std	Z+3, r23	; 0x03
    4160:	81 e0       	ldi	r24, 0x01	; 1
    4162:	90 e0       	ldi	r25, 0x00	; 0
    4164:	08 95       	ret
    4166:	80 e0       	ldi	r24, 0x00	; 0
    4168:	90 e0       	ldi	r25, 0x00	; 0
    416a:	08 95       	ret

Disassembly of section .text.__pop_int:

00002432 <__pop_int>:
    2432:	0f 93       	push	r16
    2434:	1f 93       	push	r17
    2436:	cf 93       	push	r28
    2438:	df 93       	push	r29
    243a:	fc 01       	movw	r30, r24
    243c:	d9 01       	movw	r26, r18
    243e:	68 38       	cpi	r22, 0x88	; 136
    2440:	71 05       	cpc	r23, r1
    2442:	31 f1       	breq	.+76     	; 0x2490 <__pop_int+0x5e>
    2444:	94 f4       	brge	.+36     	; 0x246a <__pop_int+0x38>
    2446:	61 38       	cpi	r22, 0x81	; 129
    2448:	71 05       	cpc	r23, r1
    244a:	b1 f1       	breq	.+108    	; 0x24b8 <__pop_int+0x86>
    244c:	2c f4       	brge	.+10     	; 0x2458 <__pop_int+0x26>
    244e:	60 38       	cpi	r22, 0x80	; 128
    2450:	71 05       	cpc	r23, r1
    2452:	09 f4       	brne	.+2      	; 0x2456 <__pop_int+0x24>
    2454:	78 c0       	rjmp	.+240    	; 0x2546 <__pop_int+0x114>
    2456:	9f c0       	rjmp	.+318    	; 0x2596 <__pop_int+0x164>
    2458:	62 38       	cpi	r22, 0x82	; 130
    245a:	71 05       	cpc	r23, r1
    245c:	09 f4       	brne	.+2      	; 0x2460 <__pop_int+0x2e>
    245e:	59 c0       	rjmp	.+178    	; 0x2512 <__pop_int+0xe0>
    2460:	64 38       	cpi	r22, 0x84	; 132
    2462:	71 05       	cpc	r23, r1
    2464:	09 f4       	brne	.+2      	; 0x2468 <__pop_int+0x36>
    2466:	6f c0       	rjmp	.+222    	; 0x2546 <__pop_int+0x114>
    2468:	96 c0       	rjmp	.+300    	; 0x2596 <__pop_int+0x164>
    246a:	60 3a       	cpi	r22, 0xA0	; 160
    246c:	71 05       	cpc	r23, r1
    246e:	09 f4       	brne	.+2      	; 0x2472 <__pop_int+0x40>
    2470:	48 c0       	rjmp	.+144    	; 0x2502 <__pop_int+0xd0>
    2472:	2c f4       	brge	.+10     	; 0x247e <__pop_int+0x4c>
    2474:	60 39       	cpi	r22, 0x90	; 144
    2476:	71 05       	cpc	r23, r1
    2478:	09 f4       	brne	.+2      	; 0x247c <__pop_int+0x4a>
    247a:	4b c0       	rjmp	.+150    	; 0x2512 <__pop_int+0xe0>
    247c:	8c c0       	rjmp	.+280    	; 0x2596 <__pop_int+0x164>
    247e:	60 3c       	cpi	r22, 0xC0	; 192
    2480:	71 05       	cpc	r23, r1
    2482:	09 f4       	brne	.+2      	; 0x2486 <__pop_int+0x54>
    2484:	76 c0       	rjmp	.+236    	; 0x2572 <__pop_int+0x140>
    2486:	60 3f       	cpi	r22, 0xF0	; 240
    2488:	71 05       	cpc	r23, r1
    248a:	09 f4       	brne	.+2      	; 0x248e <__pop_int+0x5c>
    248c:	72 c0       	rjmp	.+228    	; 0x2572 <__pop_int+0x140>
    248e:	83 c0       	rjmp	.+262    	; 0x2596 <__pop_int+0x164>
    2490:	cd 91       	ld	r28, X+
    2492:	dc 91       	ld	r29, X
    2494:	11 97       	sbiw	r26, 0x01	; 1
    2496:	ce 01       	movw	r24, r28
    2498:	02 96       	adiw	r24, 0x02	; 2
    249a:	8d 93       	st	X+, r24
    249c:	9c 93       	st	X, r25
    249e:	45 2b       	or	r20, r21
    24a0:	39 f0       	breq	.+14     	; 0x24b0 <__pop_int+0x7e>
    24a2:	98 81       	ld	r25, Y
    24a4:	89 2f       	mov	r24, r25
    24a6:	88 0f       	add	r24, r24
    24a8:	88 0b       	sbc	r24, r24
    24aa:	90 83       	st	Z, r25
    24ac:	81 83       	std	Z+1, r24	; 0x01
    24ae:	5b c0       	rjmp	.+182    	; 0x2566 <__pop_int+0x134>
    24b0:	88 81       	ld	r24, Y
    24b2:	80 83       	st	Z, r24
    24b4:	11 82       	std	Z+1, r1	; 0x01
    24b6:	68 c0       	rjmp	.+208    	; 0x2588 <__pop_int+0x156>
    24b8:	cd 91       	ld	r28, X+
    24ba:	dc 91       	ld	r29, X
    24bc:	11 97       	sbiw	r26, 0x01	; 1
    24be:	ce 01       	movw	r24, r28
    24c0:	04 96       	adiw	r24, 0x04	; 4
    24c2:	8d 93       	st	X+, r24
    24c4:	9c 93       	st	X, r25
    24c6:	45 2b       	or	r20, r21
    24c8:	99 f0       	breq	.+38     	; 0x24f0 <__pop_int+0xbe>
    24ca:	88 81       	ld	r24, Y
    24cc:	99 81       	ldd	r25, Y+1	; 0x01
    24ce:	aa 81       	ldd	r26, Y+2	; 0x02
    24d0:	bb 81       	ldd	r27, Y+3	; 0x03
    24d2:	ac 01       	movw	r20, r24
    24d4:	bd 01       	movw	r22, r26
    24d6:	77 0f       	add	r23, r23
    24d8:	44 0b       	sbc	r20, r20
    24da:	54 2f       	mov	r21, r20
    24dc:	ba 01       	movw	r22, r20
    24de:	80 83       	st	Z, r24
    24e0:	91 83       	std	Z+1, r25	; 0x01
    24e2:	a2 83       	std	Z+2, r26	; 0x02
    24e4:	b3 83       	std	Z+3, r27	; 0x03
    24e6:	44 83       	std	Z+4, r20	; 0x04
    24e8:	45 83       	std	Z+5, r20	; 0x05
    24ea:	46 83       	std	Z+6, r20	; 0x06
    24ec:	47 83       	std	Z+7, r20	; 0x07
    24ee:	28 c0       	rjmp	.+80     	; 0x2540 <__pop_int+0x10e>
    24f0:	08 81       	ld	r16, Y
    24f2:	19 81       	ldd	r17, Y+1	; 0x01
    24f4:	2a 81       	ldd	r18, Y+2	; 0x02
    24f6:	3b 81       	ldd	r19, Y+3	; 0x03
    24f8:	00 83       	st	Z, r16
    24fa:	11 83       	std	Z+1, r17	; 0x01
    24fc:	22 83       	std	Z+2, r18	; 0x02
    24fe:	33 83       	std	Z+3, r19	; 0x03
    2500:	45 c0       	rjmp	.+138    	; 0x258c <__pop_int+0x15a>
    2502:	cd 91       	ld	r28, X+
    2504:	dc 91       	ld	r29, X
    2506:	11 97       	sbiw	r26, 0x01	; 1
    2508:	ce 01       	movw	r24, r28
    250a:	02 96       	adiw	r24, 0x02	; 2
    250c:	8d 93       	st	X+, r24
    250e:	9c 93       	st	X, r25
    2510:	23 c0       	rjmp	.+70     	; 0x2558 <__pop_int+0x126>
    2512:	cd 91       	ld	r28, X+
    2514:	dc 91       	ld	r29, X
    2516:	11 97       	sbiw	r26, 0x01	; 1
    2518:	ce 01       	movw	r24, r28
    251a:	08 96       	adiw	r24, 0x08	; 8
    251c:	8d 93       	st	X+, r24
    251e:	9c 93       	st	X, r25
    2520:	78 81       	ld	r23, Y
    2522:	69 81       	ldd	r22, Y+1	; 0x01
    2524:	5a 81       	ldd	r21, Y+2	; 0x02
    2526:	4b 81       	ldd	r20, Y+3	; 0x03
    2528:	3c 81       	ldd	r19, Y+4	; 0x04
    252a:	2d 81       	ldd	r18, Y+5	; 0x05
    252c:	9e 81       	ldd	r25, Y+6	; 0x06
    252e:	8f 81       	ldd	r24, Y+7	; 0x07
    2530:	70 83       	st	Z, r23
    2532:	61 83       	std	Z+1, r22	; 0x01
    2534:	52 83       	std	Z+2, r21	; 0x02
    2536:	43 83       	std	Z+3, r20	; 0x03
    2538:	34 83       	std	Z+4, r19	; 0x04
    253a:	25 83       	std	Z+5, r18	; 0x05
    253c:	96 83       	std	Z+6, r25	; 0x06
    253e:	87 83       	std	Z+7, r24	; 0x07
    2540:	81 e0       	ldi	r24, 0x01	; 1
    2542:	90 e0       	ldi	r25, 0x00	; 0
    2544:	2a c0       	rjmp	.+84     	; 0x259a <__pop_int+0x168>
    2546:	cd 91       	ld	r28, X+
    2548:	dc 91       	ld	r29, X
    254a:	11 97       	sbiw	r26, 0x01	; 1
    254c:	ce 01       	movw	r24, r28
    254e:	02 96       	adiw	r24, 0x02	; 2
    2550:	8d 93       	st	X+, r24
    2552:	9c 93       	st	X, r25
    2554:	45 2b       	or	r20, r21
    2556:	a1 f0       	breq	.+40     	; 0x2580 <__pop_int+0x14e>
    2558:	99 81       	ldd	r25, Y+1	; 0x01
    255a:	28 81       	ld	r18, Y
    255c:	89 2f       	mov	r24, r25
    255e:	88 0f       	add	r24, r24
    2560:	88 0b       	sbc	r24, r24
    2562:	20 83       	st	Z, r18
    2564:	91 83       	std	Z+1, r25	; 0x01
    2566:	82 83       	std	Z+2, r24	; 0x02
    2568:	83 83       	std	Z+3, r24	; 0x03
    256a:	84 83       	std	Z+4, r24	; 0x04
    256c:	85 83       	std	Z+5, r24	; 0x05
    256e:	86 83       	std	Z+6, r24	; 0x06
    2570:	e6 cf       	rjmp	.-52     	; 0x253e <__pop_int+0x10c>
    2572:	cd 91       	ld	r28, X+
    2574:	dc 91       	ld	r29, X
    2576:	11 97       	sbiw	r26, 0x01	; 1
    2578:	ce 01       	movw	r24, r28
    257a:	02 96       	adiw	r24, 0x02	; 2
    257c:	8d 93       	st	X+, r24
    257e:	9c 93       	st	X, r25
    2580:	08 81       	ld	r16, Y
    2582:	19 81       	ldd	r17, Y+1	; 0x01
    2584:	00 83       	st	Z, r16
    2586:	11 83       	std	Z+1, r17	; 0x01
    2588:	12 82       	std	Z+2, r1	; 0x02
    258a:	13 82       	std	Z+3, r1	; 0x03
    258c:	14 82       	std	Z+4, r1	; 0x04
    258e:	15 82       	std	Z+5, r1	; 0x05
    2590:	16 82       	std	Z+6, r1	; 0x06
    2592:	17 82       	std	Z+7, r1	; 0x07
    2594:	d5 cf       	rjmp	.-86     	; 0x2540 <__pop_int+0x10e>
    2596:	80 e0       	ldi	r24, 0x00	; 0
    2598:	90 e0       	ldi	r25, 0x00	; 0
    259a:	df 91       	pop	r29
    259c:	cf 91       	pop	r28
    259e:	1f 91       	pop	r17
    25a0:	0f 91       	pop	r16
    25a2:	08 95       	ret

Disassembly of section .text.__pop_ptr:

00002c98 <__pop_ptr>:
    2c98:	cf 93       	push	r28
    2c9a:	df 93       	push	r29
    2c9c:	dc 01       	movw	r26, r24
    2c9e:	f9 01       	movw	r30, r18
    2ca0:	64 38       	cpi	r22, 0x84	; 132
    2ca2:	71 05       	cpc	r23, r1
    2ca4:	d9 f1       	breq	.+118    	; 0x2d1c <__pop_ptr+0x84>
    2ca6:	64 f4       	brge	.+24     	; 0x2cc0 <__pop_ptr+0x28>
    2ca8:	61 38       	cpi	r22, 0x81	; 129
    2caa:	71 05       	cpc	r23, r1
    2cac:	21 f1       	breq	.+72     	; 0x2cf6 <__pop_ptr+0x5e>
    2cae:	62 38       	cpi	r22, 0x82	; 130
    2cb0:	71 05       	cpc	r23, r1
    2cb2:	09 f4       	brne	.+2      	; 0x2cb6 <__pop_ptr+0x1e>
    2cb4:	40 c0       	rjmp	.+128    	; 0x2d36 <__pop_ptr+0x9e>
    2cb6:	60 38       	cpi	r22, 0x80	; 128
    2cb8:	71 05       	cpc	r23, r1
    2cba:	09 f0       	breq	.+2      	; 0x2cbe <__pop_ptr+0x26>
    2cbc:	54 c0       	rjmp	.+168    	; 0x2d66 <__pop_ptr+0xce>
    2cbe:	2e c0       	rjmp	.+92     	; 0x2d1c <__pop_ptr+0x84>
    2cc0:	60 39       	cpi	r22, 0x90	; 144
    2cc2:	71 05       	cpc	r23, r1
    2cc4:	c1 f1       	breq	.+112    	; 0x2d36 <__pop_ptr+0x9e>
    2cc6:	84 f4       	brge	.+32     	; 0x2ce8 <__pop_ptr+0x50>
    2cc8:	68 38       	cpi	r22, 0x88	; 136
    2cca:	71 05       	cpc	r23, r1
    2ccc:	09 f0       	breq	.+2      	; 0x2cd0 <__pop_ptr+0x38>
    2cce:	4b c0       	rjmp	.+150    	; 0x2d66 <__pop_ptr+0xce>
    2cd0:	c0 81       	ld	r28, Z
    2cd2:	d1 81       	ldd	r29, Z+1	; 0x01
    2cd4:	ce 01       	movw	r24, r28
    2cd6:	02 96       	adiw	r24, 0x02	; 2
    2cd8:	91 83       	std	Z+1, r25	; 0x01
    2cda:	80 83       	st	Z, r24
    2cdc:	e8 81       	ld	r30, Y
    2cde:	f9 81       	ldd	r31, Y+1	; 0x01
    2ce0:	ed 93       	st	X+, r30
    2ce2:	fc 93       	st	X, r31
    2ce4:	40 83       	st	Z, r20
    2ce6:	3c c0       	rjmp	.+120    	; 0x2d60 <__pop_ptr+0xc8>
    2ce8:	60 3a       	cpi	r22, 0xA0	; 160
    2cea:	71 05       	cpc	r23, r1
    2cec:	b9 f0       	breq	.+46     	; 0x2d1c <__pop_ptr+0x84>
    2cee:	60 3c       	cpi	r22, 0xC0	; 192
    2cf0:	71 05       	cpc	r23, r1
    2cf2:	a1 f0       	breq	.+40     	; 0x2d1c <__pop_ptr+0x84>
    2cf4:	38 c0       	rjmp	.+112    	; 0x2d66 <__pop_ptr+0xce>
    2cf6:	c0 81       	ld	r28, Z
    2cf8:	d1 81       	ldd	r29, Z+1	; 0x01
    2cfa:	ce 01       	movw	r24, r28
    2cfc:	02 96       	adiw	r24, 0x02	; 2
    2cfe:	91 83       	std	Z+1, r25	; 0x01
    2d00:	80 83       	st	Z, r24
    2d02:	e8 81       	ld	r30, Y
    2d04:	f9 81       	ldd	r31, Y+1	; 0x01
    2d06:	ed 93       	st	X+, r30
    2d08:	fc 93       	st	X, r31
    2d0a:	05 2e       	mov	r0, r21
    2d0c:	00 0c       	add	r0, r0
    2d0e:	66 0b       	sbc	r22, r22
    2d10:	77 0b       	sbc	r23, r23
    2d12:	40 83       	st	Z, r20
    2d14:	51 83       	std	Z+1, r21	; 0x01
    2d16:	62 83       	std	Z+2, r22	; 0x02
    2d18:	73 83       	std	Z+3, r23	; 0x03
    2d1a:	22 c0       	rjmp	.+68     	; 0x2d60 <__pop_ptr+0xc8>
    2d1c:	c0 81       	ld	r28, Z
    2d1e:	d1 81       	ldd	r29, Z+1	; 0x01
    2d20:	ce 01       	movw	r24, r28
    2d22:	02 96       	adiw	r24, 0x02	; 2
    2d24:	91 83       	std	Z+1, r25	; 0x01
    2d26:	80 83       	st	Z, r24
    2d28:	e8 81       	ld	r30, Y
    2d2a:	f9 81       	ldd	r31, Y+1	; 0x01
    2d2c:	ed 93       	st	X+, r30
    2d2e:	fc 93       	st	X, r31
    2d30:	51 83       	std	Z+1, r21	; 0x01
    2d32:	40 83       	st	Z, r20
    2d34:	15 c0       	rjmp	.+42     	; 0x2d60 <__pop_ptr+0xc8>
    2d36:	c0 81       	ld	r28, Z
    2d38:	d1 81       	ldd	r29, Z+1	; 0x01
    2d3a:	ce 01       	movw	r24, r28
    2d3c:	02 96       	adiw	r24, 0x02	; 2
    2d3e:	91 83       	std	Z+1, r25	; 0x01
    2d40:	80 83       	st	Z, r24
    2d42:	e8 81       	ld	r30, Y
    2d44:	f9 81       	ldd	r31, Y+1	; 0x01
    2d46:	ed 93       	st	X+, r30
    2d48:	fc 93       	st	X, r31
    2d4a:	51 83       	std	Z+1, r21	; 0x01
    2d4c:	40 83       	st	Z, r20
    2d4e:	85 2f       	mov	r24, r21
    2d50:	88 0f       	add	r24, r24
    2d52:	88 0b       	sbc	r24, r24
    2d54:	82 83       	std	Z+2, r24	; 0x02
    2d56:	83 83       	std	Z+3, r24	; 0x03
    2d58:	84 83       	std	Z+4, r24	; 0x04
    2d5a:	85 83       	std	Z+5, r24	; 0x05
    2d5c:	86 83       	std	Z+6, r24	; 0x06
    2d5e:	87 83       	std	Z+7, r24	; 0x07
    2d60:	81 e0       	ldi	r24, 0x01	; 1
    2d62:	90 e0       	ldi	r25, 0x00	; 0
    2d64:	02 c0       	rjmp	.+4      	; 0x2d6a <__pop_ptr+0xd2>
    2d66:	80 e0       	ldi	r24, 0x00	; 0
    2d68:	90 e0       	ldi	r25, 0x00	; 0
    2d6a:	df 91       	pop	r29
    2d6c:	cf 91       	pop	r28
    2d6e:	08 95       	ret

Disassembly of section .text.sprintf:

000043e4 <sprintf>:
    43e4:	a0 e0       	ldi	r26, 0x00	; 0
    43e6:	b0 e0       	ldi	r27, 0x00	; 0
    43e8:	e8 ef       	ldi	r30, 0xF8	; 248
    43ea:	f1 e2       	ldi	r31, 0x21	; 33
    43ec:	0c 94 00 21 	jmp	0x4200	; 0x4200 <__prologue_saves__+0x20>
    43f0:	9e 01       	movw	r18, r28
    43f2:	25 5f       	subi	r18, 0xF5	; 245
    43f4:	3f 4f       	sbci	r19, 0xFF	; 255
    43f6:	48 85       	ldd	r20, Y+8	; 0x08
    43f8:	59 85       	ldd	r21, Y+9	; 0x09
    43fa:	6a 85       	ldd	r22, Y+10	; 0x0a
    43fc:	8e 81       	ldd	r24, Y+6	; 0x06
    43fe:	9f 81       	ldd	r25, Y+7	; 0x07
    4400:	0e 94 90 22 	call	0x4520	; 0x4520 <vsprintf>
    4404:	e2 e0       	ldi	r30, 0x02	; 2
    4406:	0c 94 37 21 	jmp	0x426e	; 0x426e <__epilogue_restores__+0x20>

Disassembly of section .text.vsprintf:

00004520 <vsprintf>:
    4520:	0f 93       	push	r16
    4522:	1f 93       	push	r17
    4524:	89 01       	movw	r16, r18
    4526:	9a 01       	movw	r18, r20
    4528:	46 2f       	mov	r20, r22
    452a:	6f ef       	ldi	r22, 0xFF	; 255
    452c:	7f e7       	ldi	r23, 0x7F	; 127
    452e:	0e 94 6e 1b 	call	0x36dc	; 0x36dc <vsnprintf>
    4532:	1f 91       	pop	r17
    4534:	0f 91       	pop	r16
    4536:	08 95       	ret

Disassembly of section .text.atoi:

00003956 <atoi>:
    3956:	cf 93       	push	r28
    3958:	9b 01       	movw	r18, r22
    395a:	48 2f       	mov	r20, r24
    395c:	f9 01       	movw	r30, r18
    395e:	54 2f       	mov	r21, r20
    3960:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    3964:	60 32       	cpi	r22, 0x20	; 32
    3966:	b9 f1       	breq	.+110    	; 0x39d6 <atoi+0x80>
    3968:	86 2f       	mov	r24, r22
    396a:	06 2e       	mov	r0, r22
    396c:	00 0c       	add	r0, r0
    396e:	99 0b       	sbc	r25, r25
    3970:	09 97       	sbiw	r24, 0x09	; 9
    3972:	05 97       	sbiw	r24, 0x05	; 5
    3974:	80 f1       	brcs	.+96     	; 0x39d6 <atoi+0x80>
    3976:	6b 32       	cpi	r22, 0x2B	; 43
    3978:	49 f5       	brne	.+82     	; 0x39cc <atoi+0x76>
    397a:	a0 e0       	ldi	r26, 0x00	; 0
    397c:	b0 e0       	ldi	r27, 0x00	; 0
    397e:	2f 5f       	subi	r18, 0xFF	; 255
    3980:	3f 4f       	sbci	r19, 0xFF	; 255
    3982:	4f 4f       	sbci	r20, 0xFF	; 255
    3984:	02 c0       	rjmp	.+4      	; 0x398a <atoi+0x34>
    3986:	a0 e0       	ldi	r26, 0x00	; 0
    3988:	b0 e0       	ldi	r27, 0x00	; 0
    398a:	80 e0       	ldi	r24, 0x00	; 0
    398c:	90 e0       	ldi	r25, 0x00	; 0
    398e:	ca e0       	ldi	r28, 0x0A	; 10
    3990:	f9 01       	movw	r30, r18
    3992:	54 2f       	mov	r21, r20
    3994:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    3998:	06 2e       	mov	r0, r22
    399a:	00 0c       	add	r0, r0
    399c:	77 0b       	sbc	r23, r23
    399e:	60 53       	subi	r22, 0x30	; 48
    39a0:	71 09       	sbc	r23, r1
    39a2:	6a 30       	cpi	r22, 0x0A	; 10
    39a4:	71 05       	cpc	r23, r1
    39a6:	60 f4       	brcc	.+24     	; 0x39c0 <atoi+0x6a>
    39a8:	c8 9f       	mul	r28, r24
    39aa:	f0 01       	movw	r30, r0
    39ac:	c9 9f       	mul	r28, r25
    39ae:	f0 0d       	add	r31, r0
    39b0:	11 24       	eor	r1, r1
    39b2:	2f 5f       	subi	r18, 0xFF	; 255
    39b4:	3f 4f       	sbci	r19, 0xFF	; 255
    39b6:	4f 4f       	sbci	r20, 0xFF	; 255
    39b8:	cf 01       	movw	r24, r30
    39ba:	86 1b       	sub	r24, r22
    39bc:	97 0b       	sbc	r25, r23
    39be:	e8 cf       	rjmp	.-48     	; 0x3990 <atoi+0x3a>
    39c0:	ab 2b       	or	r26, r27
    39c2:	69 f4       	brne	.+26     	; 0x39de <atoi+0x88>
    39c4:	91 95       	neg	r25
    39c6:	81 95       	neg	r24
    39c8:	91 09       	sbc	r25, r1
    39ca:	09 c0       	rjmp	.+18     	; 0x39de <atoi+0x88>
    39cc:	6d 32       	cpi	r22, 0x2D	; 45
    39ce:	d9 f6       	brne	.-74     	; 0x3986 <atoi+0x30>
    39d0:	a1 e0       	ldi	r26, 0x01	; 1
    39d2:	b0 e0       	ldi	r27, 0x00	; 0
    39d4:	d4 cf       	rjmp	.-88     	; 0x397e <atoi+0x28>
    39d6:	2f 5f       	subi	r18, 0xFF	; 255
    39d8:	3f 4f       	sbci	r19, 0xFF	; 255
    39da:	4f 4f       	sbci	r20, 0xFF	; 255
    39dc:	bf cf       	rjmp	.-130    	; 0x395c <atoi+0x6>
    39de:	cf 91       	pop	r28
    39e0:	08 95       	ret

Disassembly of section .text.memset:

000045ac <memset>:
    45ac:	fc 01       	movw	r30, r24
    45ae:	48 0f       	add	r20, r24
    45b0:	59 1f       	adc	r21, r25
    45b2:	e4 17       	cp	r30, r20
    45b4:	f5 07       	cpc	r31, r21
    45b6:	11 f0       	breq	.+4      	; 0x45bc <memset+0x10>
    45b8:	61 93       	st	Z+, r22
    45ba:	fb cf       	rjmp	.-10     	; 0x45b2 <memset+0x6>
    45bc:	08 95       	ret

Disassembly of section .text.strcmp:

000040a4 <strcmp>:
    40a4:	cf 92       	push	r12
    40a6:	df 92       	push	r13
    40a8:	ef 92       	push	r14
    40aa:	6b 01       	movw	r12, r22
    40ac:	e8 2e       	mov	r14, r24
    40ae:	f6 01       	movw	r30, r12
    40b0:	5e 2d       	mov	r21, r14
    40b2:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    40b6:	86 2f       	mov	r24, r22
    40b8:	f9 01       	movw	r30, r18
    40ba:	54 2f       	mov	r21, r20
    40bc:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    40c0:	86 13       	cpse	r24, r22
    40c2:	0b c0       	rjmp	.+22     	; 0x40da <strcmp+0x36>
    40c4:	88 23       	and	r24, r24
    40c6:	41 f0       	breq	.+16     	; 0x40d8 <strcmp+0x34>
    40c8:	8f ef       	ldi	r24, 0xFF	; 255
    40ca:	c8 1a       	sub	r12, r24
    40cc:	d8 0a       	sbc	r13, r24
    40ce:	e8 0a       	sbc	r14, r24
    40d0:	2f 5f       	subi	r18, 0xFF	; 255
    40d2:	3f 4f       	sbci	r19, 0xFF	; 255
    40d4:	4f 4f       	sbci	r20, 0xFF	; 255
    40d6:	eb cf       	rjmp	.-42     	; 0x40ae <strcmp+0xa>
    40d8:	68 2f       	mov	r22, r24
    40da:	90 e0       	ldi	r25, 0x00	; 0
    40dc:	86 1b       	sub	r24, r22
    40de:	91 09       	sbc	r25, r1
    40e0:	ef 90       	pop	r14
    40e2:	df 90       	pop	r13
    40e4:	cf 90       	pop	r12
    40e6:	08 95       	ret

Disassembly of section .text.strlen:

0000442e <strlen>:
    442e:	9b 01       	movw	r18, r22
    4430:	48 2f       	mov	r20, r24
    4432:	a8 2f       	mov	r26, r24
    4434:	cb 01       	movw	r24, r22
    4436:	fc 01       	movw	r30, r24
    4438:	5a 2f       	mov	r21, r26
    443a:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    443e:	66 23       	and	r22, r22
    4440:	19 f0       	breq	.+6      	; 0x4448 <strlen+0x1a>
    4442:	01 96       	adiw	r24, 0x01	; 1
    4444:	a1 1d       	adc	r26, r1
    4446:	f7 cf       	rjmp	.-18     	; 0x4436 <strlen+0x8>
    4448:	64 2f       	mov	r22, r20
    444a:	a9 01       	movw	r20, r18
    444c:	84 1b       	sub	r24, r20
    444e:	95 0b       	sbc	r25, r21
    4450:	08 95       	ret

Disassembly of section .text.tolower:

000045d0 <tolower>:
    45d0:	9c 01       	movw	r18, r24
    45d2:	21 54       	subi	r18, 0x41	; 65
    45d4:	31 09       	sbc	r19, r1
    45d6:	2a 31       	cpi	r18, 0x1A	; 26
    45d8:	31 05       	cpc	r19, r1
    45da:	08 f4       	brcc	.+2      	; 0x45de <tolower+0xe>
    45dc:	80 62       	ori	r24, 0x20	; 32
    45de:	08 95       	ret

Disassembly of section .text.toupper:

000045be <toupper>:
    45be:	9c 01       	movw	r18, r24
    45c0:	21 56       	subi	r18, 0x61	; 97
    45c2:	31 09       	sbc	r19, r1
    45c4:	2a 31       	cpi	r18, 0x1A	; 26
    45c6:	31 05       	cpc	r19, r1
    45c8:	10 f4       	brcc	.+4      	; 0x45ce <toupper+0x10>
    45ca:	8f 75       	andi	r24, 0x5F	; 95
    45cc:	99 27       	eor	r25, r25
    45ce:	08 95       	ret

Disassembly of section .text._Exit:

000046b6 <_Exit>:
    46b6:	0e 94 bb 00 	call	0x176	; 0x176 <_exit>

Disassembly of section .text.__vsprintf:

00004538 <__vsprintf>:
    4538:	0f 93       	push	r16
    453a:	1f 93       	push	r17
    453c:	89 01       	movw	r16, r18
    453e:	9a 01       	movw	r18, r20
    4540:	46 2f       	mov	r20, r22
    4542:	6f ef       	ldi	r22, 0xFF	; 255
    4544:	7f e7       	ldi	r23, 0x7F	; 127
    4546:	0e 94 1c 1b 	call	0x3638	; 0x3638 <__vsnprintf>
    454a:	1f 91       	pop	r17
    454c:	0f 91       	pop	r16
    454e:	08 95       	ret

Disassembly of section .text.__vsnprintf:

00003638 <__vsnprintf>:
    3638:	6f 92       	push	r6
    363a:	7f 92       	push	r7
    363c:	8f 92       	push	r8
    363e:	ef 92       	push	r14
    3640:	ff 92       	push	r15
    3642:	0f 93       	push	r16
    3644:	1f 93       	push	r17
    3646:	cf 93       	push	r28
    3648:	df 93       	push	r29
    364a:	cd b7       	in	r28, 0x3d	; 61
    364c:	de b7       	in	r29, 0x3e	; 62
    364e:	61 97       	sbiw	r28, 0x11	; 17
    3650:	0f b6       	in	r0, 0x3f	; 63
    3652:	f8 94       	cli
    3654:	de bf       	out	0x3e, r29	; 62
    3656:	0f be       	out	0x3f, r0	; 63
    3658:	cd bf       	out	0x3d, r28	; 61
    365a:	fe 01       	movw	r30, r28
    365c:	31 96       	adiw	r30, 0x01	; 1
    365e:	51 e1       	ldi	r21, 0x11	; 17
    3660:	df 01       	movw	r26, r30
    3662:	1d 92       	st	X+, r1
    3664:	5a 95       	dec	r21
    3666:	e9 f7       	brne	.-6      	; 0x3662 <__vsnprintf+0x2a>
    3668:	a2 e0       	ldi	r26, 0x02	; 2
    366a:	b1 e0       	ldi	r27, 0x01	; 1
    366c:	ba 83       	std	Y+2, r27	; 0x02
    366e:	a9 83       	std	Y+1, r26	; 0x01
    3670:	9c 83       	std	Y+4, r25	; 0x04
    3672:	8b 83       	std	Y+3, r24	; 0x03
    3674:	77 ff       	sbrs	r23, 7
    3676:	09 c0       	rjmp	.+18     	; 0x368a <__vsnprintf+0x52>
    3678:	8f e4       	ldi	r24, 0x4F	; 79
    367a:	90 e0       	ldi	r25, 0x00	; 0
    367c:	90 93 2d 12 	sts	0x122D, r25	; 0x80122d <__errno_val+0x1>
    3680:	80 93 2c 12 	sts	0x122C, r24	; 0x80122c <__errno_val>
    3684:	8f ef       	ldi	r24, 0xFF	; 255
    3686:	9f ef       	ldi	r25, 0xFF	; 255
    3688:	19 c0       	rjmp	.+50     	; 0x36bc <__vsnprintf+0x84>
    368a:	39 01       	movw	r6, r18
    368c:	84 2e       	mov	r8, r20
    368e:	7c 01       	movw	r14, r24
    3690:	61 50       	subi	r22, 0x01	; 1
    3692:	71 09       	sbc	r23, r1
    3694:	7f 83       	std	Y+7, r23	; 0x07
    3696:	6e 83       	std	Y+6, r22	; 0x06
    3698:	98 01       	movw	r18, r16
    369a:	68 2d       	mov	r22, r8
    369c:	a3 01       	movw	r20, r6
    369e:	cf 01       	movw	r24, r30
    36a0:	0e 94 8c 21 	call	0x4318	; 0x4318 <__vfprintf>
    36a4:	48 85       	ldd	r20, Y+8	; 0x08
    36a6:	59 85       	ldd	r21, Y+9	; 0x09
    36a8:	2e 81       	ldd	r18, Y+6	; 0x06
    36aa:	3f 81       	ldd	r19, Y+7	; 0x07
    36ac:	42 17       	cp	r20, r18
    36ae:	53 07       	cpc	r21, r19
    36b0:	08 f4       	brcc	.+2      	; 0x36b4 <__vsnprintf+0x7c>
    36b2:	9a 01       	movw	r18, r20
    36b4:	f7 01       	movw	r30, r14
    36b6:	e2 0f       	add	r30, r18
    36b8:	f3 1f       	adc	r31, r19
    36ba:	10 82       	st	Z, r1
    36bc:	61 96       	adiw	r28, 0x11	; 17
    36be:	0f b6       	in	r0, 0x3f	; 63
    36c0:	f8 94       	cli
    36c2:	de bf       	out	0x3e, r29	; 62
    36c4:	0f be       	out	0x3f, r0	; 63
    36c6:	cd bf       	out	0x3d, r28	; 61
    36c8:	df 91       	pop	r29
    36ca:	cf 91       	pop	r28
    36cc:	1f 91       	pop	r17
    36ce:	0f 91       	pop	r16
    36d0:	ff 90       	pop	r15
    36d2:	ef 90       	pop	r14
    36d4:	8f 90       	pop	r8
    36d6:	7f 90       	pop	r7
    36d8:	6f 90       	pop	r6
    36da:	08 95       	ret

Disassembly of section .text.vsnprintf:

000036dc <vsnprintf>:
    36dc:	6f 92       	push	r6
    36de:	7f 92       	push	r7
    36e0:	8f 92       	push	r8
    36e2:	ef 92       	push	r14
    36e4:	ff 92       	push	r15
    36e6:	0f 93       	push	r16
    36e8:	1f 93       	push	r17
    36ea:	cf 93       	push	r28
    36ec:	df 93       	push	r29
    36ee:	cd b7       	in	r28, 0x3d	; 61
    36f0:	de b7       	in	r29, 0x3e	; 62
    36f2:	61 97       	sbiw	r28, 0x11	; 17
    36f4:	0f b6       	in	r0, 0x3f	; 63
    36f6:	f8 94       	cli
    36f8:	de bf       	out	0x3e, r29	; 62
    36fa:	0f be       	out	0x3f, r0	; 63
    36fc:	cd bf       	out	0x3d, r28	; 61
    36fe:	fe 01       	movw	r30, r28
    3700:	31 96       	adiw	r30, 0x01	; 1
    3702:	51 e1       	ldi	r21, 0x11	; 17
    3704:	df 01       	movw	r26, r30
    3706:	1d 92       	st	X+, r1
    3708:	5a 95       	dec	r21
    370a:	e9 f7       	brne	.-6      	; 0x3706 <vsnprintf+0x2a>
    370c:	a2 e0       	ldi	r26, 0x02	; 2
    370e:	b1 e0       	ldi	r27, 0x01	; 1
    3710:	ba 83       	std	Y+2, r27	; 0x02
    3712:	a9 83       	std	Y+1, r26	; 0x01
    3714:	9c 83       	std	Y+4, r25	; 0x04
    3716:	8b 83       	std	Y+3, r24	; 0x03
    3718:	77 ff       	sbrs	r23, 7
    371a:	09 c0       	rjmp	.+18     	; 0x372e <vsnprintf+0x52>
    371c:	8f e4       	ldi	r24, 0x4F	; 79
    371e:	90 e0       	ldi	r25, 0x00	; 0
    3720:	90 93 2d 12 	sts	0x122D, r25	; 0x80122d <__errno_val+0x1>
    3724:	80 93 2c 12 	sts	0x122C, r24	; 0x80122c <__errno_val>
    3728:	8f ef       	ldi	r24, 0xFF	; 255
    372a:	9f ef       	ldi	r25, 0xFF	; 255
    372c:	19 c0       	rjmp	.+50     	; 0x3760 <vsnprintf+0x84>
    372e:	39 01       	movw	r6, r18
    3730:	84 2e       	mov	r8, r20
    3732:	7c 01       	movw	r14, r24
    3734:	61 50       	subi	r22, 0x01	; 1
    3736:	71 09       	sbc	r23, r1
    3738:	7f 83       	std	Y+7, r23	; 0x07
    373a:	6e 83       	std	Y+6, r22	; 0x06
    373c:	98 01       	movw	r18, r16
    373e:	68 2d       	mov	r22, r8
    3740:	a3 01       	movw	r20, r6
    3742:	cf 01       	movw	r24, r30
    3744:	0e 94 74 21 	call	0x42e8	; 0x42e8 <vfprintf>
    3748:	48 85       	ldd	r20, Y+8	; 0x08
    374a:	59 85       	ldd	r21, Y+9	; 0x09
    374c:	2e 81       	ldd	r18, Y+6	; 0x06
    374e:	3f 81       	ldd	r19, Y+7	; 0x07
    3750:	42 17       	cp	r20, r18
    3752:	53 07       	cpc	r21, r19
    3754:	08 f4       	brcc	.+2      	; 0x3758 <vsnprintf+0x7c>
    3756:	9a 01       	movw	r18, r20
    3758:	f7 01       	movw	r30, r14
    375a:	e2 0f       	add	r30, r18
    375c:	f3 1f       	adc	r31, r19
    375e:	10 82       	st	Z, r1
    3760:	61 96       	adiw	r28, 0x11	; 17
    3762:	0f b6       	in	r0, 0x3f	; 63
    3764:	f8 94       	cli
    3766:	de bf       	out	0x3e, r29	; 62
    3768:	0f be       	out	0x3f, r0	; 63
    376a:	cd bf       	out	0x3d, r28	; 61
    376c:	df 91       	pop	r29
    376e:	cf 91       	pop	r28
    3770:	1f 91       	pop	r17
    3772:	0f 91       	pop	r16
    3774:	ff 90       	pop	r15
    3776:	ef 90       	pop	r14
    3778:	8f 90       	pop	r8
    377a:	7f 90       	pop	r7
    377c:	6f 90       	pop	r6
    377e:	08 95       	ret

Disassembly of section .text.vfprintf:

000042e8 <vfprintf>:
    42e8:	a2 e0       	ldi	r26, 0x02	; 2
    42ea:	b0 e0       	ldi	r27, 0x00	; 0
    42ec:	ea e7       	ldi	r30, 0x7A	; 122
    42ee:	f1 e2       	ldi	r31, 0x21	; 33
    42f0:	0c 94 fe 20 	jmp	0x41fc	; 0x41fc <__prologue_saves__+0x1c>
    42f4:	8c 01       	movw	r16, r24
    42f6:	3a 83       	std	Y+2, r19	; 0x02
    42f8:	29 83       	std	Y+1, r18	; 0x01
    42fa:	9e 01       	movw	r18, r28
    42fc:	2f 5f       	subi	r18, 0xFF	; 255
    42fe:	3f 4f       	sbci	r19, 0xFF	; 255
    4300:	0e 94 42 03 	call	0x684	; 0x684 <__printf_core>
    4304:	f8 01       	movw	r30, r16
    4306:	20 81       	ld	r18, Z
    4308:	24 ff       	sbrs	r18, 4
    430a:	02 c0       	rjmp	.+4      	; 0x4310 <vfprintf+0x28>
    430c:	8f ef       	ldi	r24, 0xFF	; 255
    430e:	9f ef       	ldi	r25, 0xFF	; 255
    4310:	22 96       	adiw	r28, 0x02	; 2
    4312:	e4 e0       	ldi	r30, 0x04	; 4
    4314:	0c 94 35 21 	jmp	0x426a	; 0x426a <__epilogue_restores__+0x1c>

Disassembly of section .text.__vfprintf:

00004318 <__vfprintf>:
    4318:	a2 e0       	ldi	r26, 0x02	; 2
    431a:	b0 e0       	ldi	r27, 0x00	; 0
    431c:	e2 e9       	ldi	r30, 0x92	; 146
    431e:	f1 e2       	ldi	r31, 0x21	; 33
    4320:	0c 94 fe 20 	jmp	0x41fc	; 0x41fc <__prologue_saves__+0x1c>
    4324:	8c 01       	movw	r16, r24
    4326:	3a 83       	std	Y+2, r19	; 0x02
    4328:	29 83       	std	Y+1, r18	; 0x01
    432a:	9e 01       	movw	r18, r28
    432c:	2f 5f       	subi	r18, 0xFF	; 255
    432e:	3f 4f       	sbci	r19, 0xFF	; 255
    4330:	0e 94 42 03 	call	0x684	; 0x684 <__printf_core>
    4334:	f8 01       	movw	r30, r16
    4336:	20 81       	ld	r18, Z
    4338:	24 ff       	sbrs	r18, 4
    433a:	02 c0       	rjmp	.+4      	; 0x4340 <__vfprintf+0x28>
    433c:	8f ef       	ldi	r24, 0xFF	; 255
    433e:	9f ef       	ldi	r25, 0xFF	; 255
    4340:	22 96       	adiw	r28, 0x02	; 2
    4342:	e4 e0       	ldi	r30, 0x04	; 4
    4344:	0c 94 35 21 	jmp	0x426a	; 0x426a <__epilogue_restores__+0x1c>

Disassembly of section .text.__fmt_fp:

00000eb6 <__fmt_fp>:
     eb6:	a6 e2       	ldi	r26, 0x26	; 38
     eb8:	b0 e0       	ldi	r27, 0x00	; 0
     eba:	e1 e6       	ldi	r30, 0x61	; 97
     ebc:	f7 e0       	ldi	r31, 0x07	; 7
     ebe:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
     ec2:	9f 8f       	std	Y+31, r25	; 0x1f
     ec4:	8e 8f       	std	Y+30, r24	; 0x1e
     ec6:	79 8f       	std	Y+25, r23	; 0x19
     ec8:	68 8f       	std	Y+24, r22	; 0x18
     eca:	12 2f       	mov	r17, r18
     ecc:	fb 01       	movw	r30, r22
     ece:	01 90       	ld	r0, Z+
     ed0:	f0 81       	ld	r31, Z
     ed2:	e0 2d       	mov	r30, r0
     ed4:	fa 87       	std	Y+10, r31	; 0x0a
     ed6:	e9 87       	std	Y+9, r30	; 0x09
     ed8:	fb 01       	movw	r30, r22
     eda:	c2 80       	ldd	r12, Z+2	; 0x02
     edc:	d3 80       	ldd	r13, Z+3	; 0x03
     ede:	24 81       	ldd	r18, Z+4	; 0x04
     ee0:	35 81       	ldd	r19, Z+5	; 0x05
     ee2:	3c 8b       	std	Y+20, r19	; 0x14
     ee4:	2b 8b       	std	Y+19, r18	; 0x13
     ee6:	80 85       	ldd	r24, Z+8	; 0x08
     ee8:	91 85       	ldd	r25, Z+9	; 0x09
     eea:	99 a3       	std	Y+33, r25	; 0x21
     eec:	88 a3       	std	Y+32, r24	; 0x20
     eee:	06 80       	ldd	r0, Z+6	; 0x06
     ef0:	f7 81       	ldd	r31, Z+7	; 0x07
     ef2:	e0 2d       	mov	r30, r0
     ef4:	fa 83       	std	Y+2, r31	; 0x02
     ef6:	e9 83       	std	Y+1, r30	; 0x01
     ef8:	fa 01       	movw	r30, r20
     efa:	80 80       	ld	r8, Z
     efc:	91 80       	ldd	r9, Z+1	; 0x01
     efe:	a2 80       	ldd	r10, Z+2	; 0x02
     f00:	b3 80       	ldd	r11, Z+3	; 0x03
     f02:	20 e0       	ldi	r18, 0x00	; 0
     f04:	30 e0       	ldi	r19, 0x00	; 0
     f06:	a9 01       	movw	r20, r18
     f08:	c5 01       	movw	r24, r10
     f0a:	b4 01       	movw	r22, r8
     f0c:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
     f10:	87 ff       	sbrs	r24, 7
     f12:	06 c0       	rjmp	.+12     	; 0xf20 <__fmt_fp+0x6a>
     f14:	b7 fa       	bst	r11, 7
     f16:	b0 94       	com	r11
     f18:	b7 f8       	bld	r11, 7
     f1a:	b0 94       	com	r11
     f1c:	8d e2       	ldi	r24, 0x2D	; 45
     f1e:	04 c0       	rjmp	.+8      	; 0xf28 <__fmt_fp+0x72>
     f20:	f9 85       	ldd	r31, Y+9	; 0x09
     f22:	f2 ff       	sbrs	r31, 2
     f24:	0c c3       	rjmp	.+1560   	; 0x153e <__EEPROM_REGION_LENGTH__+0x53e>
     f26:	8b e2       	ldi	r24, 0x2B	; 43
     f28:	e9 81       	ldd	r30, Y+1	; 0x01
     f2a:	fa 81       	ldd	r31, Y+2	; 0x02
     f2c:	80 83       	st	Z, r24
     f2e:	2b 89       	ldd	r18, Y+19	; 0x13
     f30:	3c 89       	ldd	r19, Y+20	; 0x14
     f32:	21 50       	subi	r18, 0x01	; 1
     f34:	31 09       	sbc	r19, r1
     f36:	38 87       	std	Y+8, r19	; 0x08
     f38:	2f 83       	std	Y+7, r18	; 0x07
     f3a:	41 e0       	ldi	r20, 0x01	; 1
     f3c:	50 e0       	ldi	r21, 0x00	; 0
     f3e:	5a 8b       	std	Y+18, r21	; 0x12
     f40:	49 8b       	std	Y+17, r20	; 0x11
     f42:	06 c0       	rjmp	.+12     	; 0xf50 <__fmt_fp+0x9a>
     f44:	8b 89       	ldd	r24, Y+19	; 0x13
     f46:	9c 89       	ldd	r25, Y+20	; 0x14
     f48:	98 87       	std	Y+8, r25	; 0x08
     f4a:	8f 83       	std	Y+7, r24	; 0x07
     f4c:	1a 8a       	std	Y+18, r1	; 0x12
     f4e:	19 8a       	std	Y+17, r1	; 0x11
     f50:	d5 01       	movw	r26, r10
     f52:	c4 01       	movw	r24, r8
     f54:	bf 77       	andi	r27, 0x7F	; 127
     f56:	00 97       	sbiw	r24, 0x00	; 0
     f58:	e0 e8       	ldi	r30, 0x80	; 128
     f5a:	ae 07       	cpc	r26, r30
     f5c:	ef e7       	ldi	r30, 0x7F	; 127
     f5e:	be 07       	cpc	r27, r30
     f60:	d9 f4       	brne	.+54     	; 0xf98 <__fmt_fp+0xe2>
     f62:	21 2f       	mov	r18, r17
     f64:	11 0f       	add	r17, r17
     f66:	33 0b       	sbc	r19, r19
     f68:	21 54       	subi	r18, 0x41	; 65
     f6a:	31 09       	sbc	r19, r1
     f6c:	89 81       	ldd	r24, Y+1	; 0x01
     f6e:	9a 81       	ldd	r25, Y+2	; 0x02
     f70:	49 89       	ldd	r20, Y+17	; 0x11
     f72:	5a 89       	ldd	r21, Y+18	; 0x12
     f74:	84 0f       	add	r24, r20
     f76:	95 1f       	adc	r25, r21
     f78:	2a 31       	cpi	r18, 0x1A	; 26
     f7a:	31 05       	cpc	r19, r1
     f7c:	20 f4       	brcc	.+8      	; 0xf86 <__fmt_fp+0xd0>
     f7e:	47 e5       	ldi	r20, 0x57	; 87
     f80:	56 e0       	ldi	r21, 0x06	; 6
     f82:	60 e0       	ldi	r22, 0x00	; 0
     f84:	03 c0       	rjmp	.+6      	; 0xf8c <__fmt_fp+0xd6>
     f86:	4b e5       	ldi	r20, 0x5B	; 91
     f88:	56 e0       	ldi	r21, 0x06	; 6
     f8a:	60 e0       	ldi	r22, 0x00	; 0
     f8c:	0e 94 59 22 	call	0x44b2	; 0x44b2 <strcpy>
     f90:	6b e5       	ldi	r22, 0x5B	; 91
     f92:	76 e0       	ldi	r23, 0x06	; 6
     f94:	80 e0       	ldi	r24, 0x00	; 0
     f96:	1e c0       	rjmp	.+60     	; 0xfd4 <__fmt_fp+0x11e>
     f98:	01 97       	sbiw	r24, 0x01	; 1
     f9a:	a0 48       	sbci	r26, 0x80	; 128
     f9c:	bf 47       	sbci	r27, 0x7F	; 127
     f9e:	30 f1       	brcs	.+76     	; 0xfec <__fmt_fp+0x136>
     fa0:	21 2f       	mov	r18, r17
     fa2:	11 0f       	add	r17, r17
     fa4:	33 0b       	sbc	r19, r19
     fa6:	21 54       	subi	r18, 0x41	; 65
     fa8:	31 09       	sbc	r19, r1
     faa:	89 81       	ldd	r24, Y+1	; 0x01
     fac:	9a 81       	ldd	r25, Y+2	; 0x02
     fae:	49 89       	ldd	r20, Y+17	; 0x11
     fb0:	5a 89       	ldd	r21, Y+18	; 0x12
     fb2:	84 0f       	add	r24, r20
     fb4:	95 1f       	adc	r25, r21
     fb6:	2a 31       	cpi	r18, 0x1A	; 26
     fb8:	31 05       	cpc	r19, r1
     fba:	20 f4       	brcc	.+8      	; 0xfc4 <__fmt_fp+0x10e>
     fbc:	4f e5       	ldi	r20, 0x5F	; 95
     fbe:	56 e0       	ldi	r21, 0x06	; 6
     fc0:	60 e0       	ldi	r22, 0x00	; 0
     fc2:	03 c0       	rjmp	.+6      	; 0xfca <__fmt_fp+0x114>
     fc4:	43 e6       	ldi	r20, 0x63	; 99
     fc6:	56 e0       	ldi	r21, 0x06	; 6
     fc8:	60 e0       	ldi	r22, 0x00	; 0
     fca:	0e 94 59 22 	call	0x44b2	; 0x44b2 <strcpy>
     fce:	63 e6       	ldi	r22, 0x63	; 99
     fd0:	76 e0       	ldi	r23, 0x06	; 6
     fd2:	80 e0       	ldi	r24, 0x00	; 0
     fd4:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
     fd8:	e9 81       	ldd	r30, Y+1	; 0x01
     fda:	fa 81       	ldd	r31, Y+2	; 0x02
     fdc:	af 01       	movw	r20, r30
     fde:	60 e8       	ldi	r22, 0x80	; 128
     fe0:	e9 84       	ldd	r14, Y+9	; 0x09
     fe2:	fa 84       	ldd	r15, Y+10	; 0x0a
     fe4:	0b 89       	ldd	r16, Y+19	; 0x13
     fe6:	1c 89       	ldd	r17, Y+20	; 0x14
     fe8:	9c 01       	movw	r18, r24
     fea:	a1 c2       	rjmp	.+1346   	; 0x152e <__EEPROM_REGION_LENGTH__+0x52e>
     fec:	20 e0       	ldi	r18, 0x00	; 0
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	a9 01       	movw	r20, r18
     ff2:	c5 01       	movw	r24, r10
     ff4:	b4 01       	movw	r22, r8
     ff6:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
     ffa:	1b 82       	std	Y+3, r1	; 0x03
     ffc:	1c 82       	std	Y+4, r1	; 0x04
     ffe:	88 23       	and	r24, r24
    1000:	09 f4       	brne	.+2      	; 0x1004 <__EEPROM_REGION_LENGTH__+0x4>
    1002:	67 c0       	rjmp	.+206    	; 0x10d2 <__EEPROM_REGION_LENGTH__+0xd2>
    1004:	f0 e8       	ldi	r31, 0x80	; 128
    1006:	fd 83       	std	Y+5, r31	; 0x05
    1008:	2f e3       	ldi	r18, 0x3F	; 63
    100a:	2e 83       	std	Y+6, r18	; 0x06
    100c:	21 2c       	mov	r2, r1
    100e:	31 2c       	mov	r3, r1
    1010:	20 e0       	ldi	r18, 0x00	; 0
    1012:	30 e0       	ldi	r19, 0x00	; 0
    1014:	40 e2       	ldi	r20, 0x20	; 32
    1016:	51 e4       	ldi	r21, 0x41	; 65
    1018:	6b 81       	ldd	r22, Y+3	; 0x03
    101a:	7c 81       	ldd	r23, Y+4	; 0x04
    101c:	8d 81       	ldd	r24, Y+5	; 0x05
    101e:	9e 81       	ldd	r25, Y+6	; 0x06
    1020:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1024:	f6 2e       	mov	r15, r22
    1026:	07 2f       	mov	r16, r23
    1028:	8d 87       	std	Y+13, r24	; 0x0d
    102a:	9b 87       	std	Y+11, r25	; 0x0b
    102c:	a5 01       	movw	r20, r10
    102e:	94 01       	movw	r18, r8
    1030:	0e 94 41 23 	call	0x4682	; 0x4682 <__gesf2>
    1034:	18 16       	cp	r1, r24
    1036:	54 f0       	brlt	.+20     	; 0x104c <__EEPROM_REGION_LENGTH__+0x4c>
    1038:	3f ef       	ldi	r19, 0xFF	; 255
    103a:	23 1a       	sub	r2, r19
    103c:	33 0a       	sbc	r3, r19
    103e:	fb 82       	std	Y+3, r15	; 0x03
    1040:	0c 83       	std	Y+4, r16	; 0x04
    1042:	4d 85       	ldd	r20, Y+13	; 0x0d
    1044:	4d 83       	std	Y+5, r20	; 0x05
    1046:	5b 85       	ldd	r21, Y+11	; 0x0b
    1048:	5e 83       	std	Y+6, r21	; 0x06
    104a:	e2 cf       	rjmp	.-60     	; 0x1010 <__EEPROM_REGION_LENGTH__+0x10>
    104c:	1c 86       	std	Y+12, r1	; 0x0c
    104e:	1b 86       	std	Y+11, r1	; 0x0b
    1050:	2b 81       	ldd	r18, Y+3	; 0x03
    1052:	3c 81       	ldd	r19, Y+4	; 0x04
    1054:	4d 81       	ldd	r20, Y+5	; 0x05
    1056:	5e 81       	ldd	r21, Y+6	; 0x06
    1058:	c5 01       	movw	r24, r10
    105a:	b4 01       	movw	r22, r8
    105c:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    1060:	87 ff       	sbrs	r24, 7
    1062:	3d c0       	rjmp	.+122    	; 0x10de <__EEPROM_REGION_LENGTH__+0xde>
    1064:	84 ed       	ldi	r24, 0xD4	; 212
    1066:	28 16       	cp	r2, r24
    1068:	8e ef       	ldi	r24, 0xFE	; 254
    106a:	38 06       	cpc	r3, r24
    106c:	04 f5       	brge	.+64     	; 0x10ae <__EEPROM_REGION_LENGTH__+0xae>
    106e:	eb 85       	ldd	r30, Y+11	; 0x0b
    1070:	fc 85       	ldd	r31, Y+12	; 0x0c
    1072:	ef 2b       	or	r30, r31
    1074:	e1 f4       	brne	.+56     	; 0x10ae <__EEPROM_REGION_LENGTH__+0xae>
    1076:	20 e0       	ldi	r18, 0x00	; 0
    1078:	30 e0       	ldi	r19, 0x00	; 0
    107a:	40 e8       	ldi	r20, 0x80	; 128
    107c:	5a e5       	ldi	r21, 0x5A	; 90
    107e:	c5 01       	movw	r24, r10
    1080:	b4 01       	movw	r22, r8
    1082:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1086:	4b 01       	movw	r8, r22
    1088:	5c 01       	movw	r10, r24
    108a:	20 e0       	ldi	r18, 0x00	; 0
    108c:	30 e0       	ldi	r19, 0x00	; 0
    108e:	40 e8       	ldi	r20, 0x80	; 128
    1090:	5a e5       	ldi	r21, 0x5A	; 90
    1092:	6b 81       	ldd	r22, Y+3	; 0x03
    1094:	7c 81       	ldd	r23, Y+4	; 0x04
    1096:	8d 81       	ldd	r24, Y+5	; 0x05
    1098:	9e 81       	ldd	r25, Y+6	; 0x06
    109a:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    109e:	6b 83       	std	Y+3, r22	; 0x03
    10a0:	7c 83       	std	Y+4, r23	; 0x04
    10a2:	8d 83       	std	Y+5, r24	; 0x05
    10a4:	9e 83       	std	Y+6, r25	; 0x06
    10a6:	21 e0       	ldi	r18, 0x01	; 1
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	3c 87       	std	Y+12, r19	; 0x0c
    10ac:	2b 87       	std	Y+11, r18	; 0x0b
    10ae:	20 e0       	ldi	r18, 0x00	; 0
    10b0:	30 e0       	ldi	r19, 0x00	; 0
    10b2:	40 e2       	ldi	r20, 0x20	; 32
    10b4:	51 e4       	ldi	r21, 0x41	; 65
    10b6:	6b 81       	ldd	r22, Y+3	; 0x03
    10b8:	7c 81       	ldd	r23, Y+4	; 0x04
    10ba:	8d 81       	ldd	r24, Y+5	; 0x05
    10bc:	9e 81       	ldd	r25, Y+6	; 0x06
    10be:	0e 94 4e 23 	call	0x469c	; 0x469c <__divsf3>
    10c2:	6b 83       	std	Y+3, r22	; 0x03
    10c4:	7c 83       	std	Y+4, r23	; 0x04
    10c6:	8d 83       	std	Y+5, r24	; 0x05
    10c8:	9e 83       	std	Y+6, r25	; 0x06
    10ca:	31 e0       	ldi	r19, 0x01	; 1
    10cc:	23 1a       	sub	r2, r19
    10ce:	31 08       	sbc	r3, r1
    10d0:	bf cf       	rjmp	.-130    	; 0x1050 <__EEPROM_REGION_LENGTH__+0x50>
    10d2:	40 e8       	ldi	r20, 0x80	; 128
    10d4:	4d 83       	std	Y+5, r20	; 0x05
    10d6:	5f e3       	ldi	r21, 0x3F	; 63
    10d8:	5e 83       	std	Y+6, r21	; 0x06
    10da:	21 2c       	mov	r2, r1
    10dc:	31 2c       	mov	r3, r1
    10de:	81 2f       	mov	r24, r17
    10e0:	11 0f       	add	r17, r17
    10e2:	99 0b       	sbc	r25, r25
    10e4:	9b a3       	std	Y+35, r25	; 0x23
    10e6:	8a a3       	std	Y+34, r24	; 0x22
    10e8:	0e 94 e8 22 	call	0x45d0	; 0x45d0 <tolower>
    10ec:	8b 8f       	std	Y+27, r24	; 0x1b
    10ee:	d7 fc       	sbrc	r13, 7
    10f0:	03 c0       	rjmp	.+6      	; 0x10f8 <__EEPROM_REGION_LENGTH__+0xf8>
    10f2:	de a2       	std	Y+38, r13	; 0x26
    10f4:	cd a2       	std	Y+37, r12	; 0x25
    10f6:	04 c0       	rjmp	.+8      	; 0x1100 <__EEPROM_REGION_LENGTH__+0x100>
    10f8:	e6 e0       	ldi	r30, 0x06	; 6
    10fa:	f0 e0       	ldi	r31, 0x00	; 0
    10fc:	fe a3       	std	Y+38, r31	; 0x26
    10fe:	ed a3       	std	Y+37, r30	; 0x25
    1100:	fb 8d       	ldd	r31, Y+27	; 0x1b
    1102:	f7 36       	cpi	r31, 0x67	; 103
    1104:	41 f4       	brne	.+16     	; 0x1116 <__EEPROM_REGION_LENGTH__+0x116>
    1106:	cd 28       	or	r12, r13
    1108:	09 f0       	breq	.+2      	; 0x110c <__EEPROM_REGION_LENGTH__+0x10c>
    110a:	1e c2       	rjmp	.+1084   	; 0x1548 <__EEPROM_REGION_LENGTH__+0x548>
    110c:	21 e0       	ldi	r18, 0x01	; 1
    110e:	30 e0       	ldi	r19, 0x00	; 0
    1110:	3e a3       	std	Y+38, r19	; 0x26
    1112:	2d a3       	std	Y+37, r18	; 0x25
    1114:	19 c2       	rjmp	.+1074   	; 0x1548 <__EEPROM_REGION_LENGTH__+0x548>
    1116:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1118:	8d 8b       	std	Y+21, r24	; 0x15
    111a:	04 c0       	rjmp	.+8      	; 0x1124 <__EEPROM_REGION_LENGTH__+0x124>
    111c:	37 fe       	sbrs	r3, 7
    111e:	25 c2       	rjmp	.+1098   	; 0x156a <__EEPROM_REGION_LENGTH__+0x56a>
    1120:	96 e6       	ldi	r25, 0x66	; 102
    1122:	9d 8b       	std	Y+21, r25	; 0x15
    1124:	ed a1       	ldd	r30, Y+37	; 0x25
    1126:	fe a1       	ldd	r31, Y+38	; 0x26
    1128:	31 96       	adiw	r30, 0x01	; 1
    112a:	fe a3       	std	Y+38, r31	; 0x26
    112c:	ed a3       	std	Y+37, r30	; 0x25
    112e:	fd 89       	ldd	r31, Y+21	; 0x15
    1130:	f6 36       	cpi	r31, 0x66	; 102
    1132:	99 f4       	brne	.+38     	; 0x115a <__EEPROM_REGION_LENGTH__+0x15a>
    1134:	37 fe       	sbrs	r3, 7
    1136:	08 c0       	rjmp	.+16     	; 0x1148 <__EEPROM_REGION_LENGTH__+0x148>
    1138:	1b 82       	std	Y+3, r1	; 0x03
    113a:	1c 82       	std	Y+4, r1	; 0x04
    113c:	20 e8       	ldi	r18, 0x80	; 128
    113e:	2d 83       	std	Y+5, r18	; 0x05
    1140:	3f e3       	ldi	r19, 0x3F	; 63
    1142:	3e 83       	std	Y+6, r19	; 0x06
    1144:	21 2c       	mov	r2, r1
    1146:	31 2c       	mov	r3, r1
    1148:	4b 8d       	ldd	r20, Y+27	; 0x1b
    114a:	47 36       	cpi	r20, 0x67	; 103
    114c:	31 f0       	breq	.+12     	; 0x115a <__EEPROM_REGION_LENGTH__+0x15a>
    114e:	8d a1       	ldd	r24, Y+37	; 0x25
    1150:	9e a1       	ldd	r25, Y+38	; 0x26
    1152:	82 0d       	add	r24, r2
    1154:	93 1d       	adc	r25, r3
    1156:	9e a3       	std	Y+38, r25	; 0x26
    1158:	8d a3       	std	Y+37, r24	; 0x25
    115a:	9b 81       	ldd	r25, Y+3	; 0x03
    115c:	9b 87       	std	Y+11, r25	; 0x0b
    115e:	ec 81       	ldd	r30, Y+4	; 0x04
    1160:	ed 87       	std	Y+13, r30	; 0x0d
    1162:	fd 81       	ldd	r31, Y+5	; 0x05
    1164:	fe 8b       	std	Y+22, r31	; 0x16
    1166:	2e 81       	ldd	r18, Y+6	; 0x06
    1168:	2a 8f       	std	Y+26, r18	; 0x1a
    116a:	75 01       	movw	r14, r10
    116c:	64 01       	movw	r12, r8
    116e:	1d 8e       	std	Y+29, r1	; 0x1d
    1170:	1c 8e       	std	Y+28, r1	; 0x1c
    1172:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1174:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1176:	ed a1       	ldd	r30, Y+37	; 0x25
    1178:	fe a1       	ldd	r31, Y+38	; 0x26
    117a:	8e 17       	cp	r24, r30
    117c:	9f 07       	cpc	r25, r31
    117e:	c1 f1       	breq	.+112    	; 0x11f0 <__EEPROM_REGION_LENGTH__+0x1f0>
    1180:	2b 85       	ldd	r18, Y+11	; 0x0b
    1182:	3d 85       	ldd	r19, Y+13	; 0x0d
    1184:	4e 89       	ldd	r20, Y+22	; 0x16
    1186:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1188:	c7 01       	movw	r24, r14
    118a:	b6 01       	movw	r22, r12
    118c:	0e 94 4e 23 	call	0x469c	; 0x469c <__divsf3>
    1190:	0e 94 bd 14 	call	0x297a	; 0x297a <floorf>
    1194:	2b 01       	movw	r4, r22
    1196:	3c 01       	movw	r6, r24
    1198:	0e 94 1a 23 	call	0x4634	; 0x4634 <__fixsfsi>
    119c:	6c a3       	std	Y+36, r22	; 0x24
    119e:	87 01       	movw	r16, r14
    11a0:	76 01       	movw	r14, r12
    11a2:	17 fb       	bst	r17, 7
    11a4:	10 95       	com	r17
    11a6:	17 f9       	bld	r17, 7
    11a8:	10 95       	com	r17
    11aa:	2b 85       	ldd	r18, Y+11	; 0x0b
    11ac:	3d 85       	ldd	r19, Y+13	; 0x0d
    11ae:	4e 89       	ldd	r20, Y+22	; 0x16
    11b0:	5a 8d       	ldd	r21, Y+26	; 0x1a
    11b2:	c3 01       	movw	r24, r6
    11b4:	b2 01       	movw	r22, r4
    11b6:	0e 94 1f 14 	call	0x283e	; 0x283e <fmaf>
    11ba:	6b 01       	movw	r12, r22
    11bc:	7c 01       	movw	r14, r24
    11be:	f7 fa       	bst	r15, 7
    11c0:	f0 94       	com	r15
    11c2:	f7 f8       	bld	r15, 7
    11c4:	f0 94       	com	r15
    11c6:	20 e0       	ldi	r18, 0x00	; 0
    11c8:	30 e0       	ldi	r19, 0x00	; 0
    11ca:	40 e2       	ldi	r20, 0x20	; 32
    11cc:	51 e4       	ldi	r21, 0x41	; 65
    11ce:	6b 85       	ldd	r22, Y+11	; 0x0b
    11d0:	7d 85       	ldd	r23, Y+13	; 0x0d
    11d2:	8e 89       	ldd	r24, Y+22	; 0x16
    11d4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    11d6:	0e 94 4e 23 	call	0x469c	; 0x469c <__divsf3>
    11da:	6b 87       	std	Y+11, r22	; 0x0b
    11dc:	7d 87       	std	Y+13, r23	; 0x0d
    11de:	8e 8b       	std	Y+22, r24	; 0x16
    11e0:	9a 8f       	std	Y+26, r25	; 0x1a
    11e2:	4c 8d       	ldd	r20, Y+28	; 0x1c
    11e4:	5d 8d       	ldd	r21, Y+29	; 0x1d
    11e6:	4f 5f       	subi	r20, 0xFF	; 255
    11e8:	5f 4f       	sbci	r21, 0xFF	; 255
    11ea:	5d 8f       	std	Y+29, r21	; 0x1d
    11ec:	4c 8f       	std	Y+28, r20	; 0x1c
    11ee:	c1 cf       	rjmp	.-126    	; 0x1172 <__EEPROM_REGION_LENGTH__+0x172>
    11f0:	20 e0       	ldi	r18, 0x00	; 0
    11f2:	30 e0       	ldi	r19, 0x00	; 0
    11f4:	40 ea       	ldi	r20, 0xA0	; 160
    11f6:	50 e4       	ldi	r21, 0x40	; 64
    11f8:	6b 85       	ldd	r22, Y+11	; 0x0b
    11fa:	7d 85       	ldd	r23, Y+13	; 0x0d
    11fc:	8e 89       	ldd	r24, Y+22	; 0x16
    11fe:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1200:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1204:	2b 01       	movw	r4, r22
    1206:	3c 01       	movw	r6, r24
    1208:	9b 01       	movw	r18, r22
    120a:	ac 01       	movw	r20, r24
    120c:	c7 01       	movw	r24, r14
    120e:	b6 01       	movw	r22, r12
    1210:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    1214:	87 fd       	sbrc	r24, 7
    1216:	0b c0       	rjmp	.+22     	; 0x122e <__EEPROM_REGION_LENGTH__+0x22e>
    1218:	a3 01       	movw	r20, r6
    121a:	92 01       	movw	r18, r4
    121c:	c7 01       	movw	r24, r14
    121e:	b6 01       	movw	r22, r12
    1220:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    1224:	81 11       	cpse	r24, r1
    1226:	06 c0       	rjmp	.+12     	; 0x1234 <__EEPROM_REGION_LENGTH__+0x234>
    1228:	fc a1       	ldd	r31, Y+36	; 0x24
    122a:	f0 fd       	sbrc	r31, 0
    122c:	03 c0       	rjmp	.+6      	; 0x1234 <__EEPROM_REGION_LENGTH__+0x234>
    122e:	41 2c       	mov	r4, r1
    1230:	51 2c       	mov	r5, r1
    1232:	32 01       	movw	r6, r4
    1234:	a3 01       	movw	r20, r6
    1236:	92 01       	movw	r18, r4
    1238:	c5 01       	movw	r24, r10
    123a:	b4 01       	movw	r22, r8
    123c:	0e 94 14 23 	call	0x4628	; 0x4628 <__addsf3>
    1240:	4b 01       	movw	r8, r22
    1242:	5c 01       	movw	r10, r24
    1244:	2d 89       	ldd	r18, Y+21	; 0x15
    1246:	25 36       	cpi	r18, 0x65	; 101
    1248:	11 f0       	breq	.+4      	; 0x124e <__EEPROM_REGION_LENGTH__+0x24e>
    124a:	31 01       	movw	r6, r2
    124c:	02 c0       	rjmp	.+4      	; 0x1252 <__EEPROM_REGION_LENGTH__+0x252>
    124e:	61 2c       	mov	r6, r1
    1250:	71 2c       	mov	r7, r1
    1252:	23 01       	movw	r4, r6
    1254:	4d a1       	ldd	r20, Y+37	; 0x25
    1256:	5e a1       	ldd	r21, Y+38	; 0x26
    1258:	44 1a       	sub	r4, r20
    125a:	55 0a       	sbc	r5, r21
    125c:	c9 88       	ldd	r12, Y+17	; 0x11
    125e:	da 88       	ldd	r13, Y+18	; 0x12
    1260:	00 e0       	ldi	r16, 0x00	; 0
    1262:	10 e0       	ldi	r17, 0x00	; 0
    1264:	1c 86       	std	Y+12, r1	; 0x0c
    1266:	1b 86       	std	Y+11, r1	; 0x0b
    1268:	89 85       	ldd	r24, Y+9	; 0x09
    126a:	9a 85       	ldd	r25, Y+10	; 0x0a
    126c:	80 71       	andi	r24, 0x10	; 16
    126e:	99 27       	eor	r25, r25
    1270:	9f 8b       	std	Y+23, r25	; 0x17
    1272:	8e 8b       	std	Y+22, r24	; 0x16
    1274:	64 14       	cp	r6, r4
    1276:	75 04       	cpc	r7, r5
    1278:	31 f4       	brne	.+12     	; 0x1286 <__EEPROM_REGION_LENGTH__+0x286>
    127a:	8b 85       	ldd	r24, Y+11	; 0x0b
    127c:	9c 85       	ldd	r25, Y+12	; 0x0c
    127e:	89 2b       	or	r24, r25
    1280:	09 f4       	brne	.+2      	; 0x1284 <__EEPROM_REGION_LENGTH__+0x284>
    1282:	9a c0       	rjmp	.+308    	; 0x13b8 <__EEPROM_REGION_LENGTH__+0x3b8>
    1284:	a6 c0       	rjmp	.+332    	; 0x13d2 <__EEPROM_REGION_LENGTH__+0x3d2>
    1286:	dd 8e       	std	Y+29, r13	; 0x1d
    1288:	cc 8e       	std	Y+28, r12	; 0x1c
    128a:	e8 8d       	ldd	r30, Y+24	; 0x18
    128c:	f9 8d       	ldd	r31, Y+25	; 0x19
    128e:	80 85       	ldd	r24, Z+8	; 0x08
    1290:	91 85       	ldd	r25, Z+9	; 0x09
    1292:	05 97       	sbiw	r24, 0x05	; 5
    1294:	c8 16       	cp	r12, r24
    1296:	d9 06       	cpc	r13, r25
    1298:	80 f7       	brcc	.-32     	; 0x127a <__EEPROM_REGION_LENGTH__+0x27a>
    129a:	2b 81       	ldd	r18, Y+3	; 0x03
    129c:	3c 81       	ldd	r19, Y+4	; 0x04
    129e:	4d 81       	ldd	r20, Y+5	; 0x05
    12a0:	5e 81       	ldd	r21, Y+6	; 0x06
    12a2:	c5 01       	movw	r24, r10
    12a4:	b4 01       	movw	r22, r8
    12a6:	0e 94 4e 23 	call	0x469c	; 0x469c <__divsf3>
    12aa:	0e 94 bd 14 	call	0x297a	; 0x297a <floorf>
    12ae:	6d 87       	std	Y+13, r22	; 0x0d
    12b0:	7e 87       	std	Y+14, r23	; 0x0e
    12b2:	8f 87       	std	Y+15, r24	; 0x0f
    12b4:	98 8b       	std	Y+16, r25	; 0x10
    12b6:	0e 94 1a 23 	call	0x4634	; 0x4634 <__fixsfsi>
    12ba:	cb 01       	movw	r24, r22
    12bc:	ee 89       	ldd	r30, Y+22	; 0x16
    12be:	ff 89       	ldd	r31, Y+23	; 0x17
    12c0:	ef 2b       	or	r30, r31
    12c2:	69 f4       	brne	.+26     	; 0x12de <__EEPROM_REGION_LENGTH__+0x2de>
    12c4:	89 2b       	or	r24, r25
    12c6:	59 f4       	brne	.+22     	; 0x12de <__EEPROM_REGION_LENGTH__+0x2de>
    12c8:	fb 8d       	ldd	r31, Y+27	; 0x1b
    12ca:	f7 36       	cpi	r31, 0x67	; 103
    12cc:	41 f4       	brne	.+16     	; 0x12de <__EEPROM_REGION_LENGTH__+0x2de>
    12ce:	77 fe       	sbrs	r7, 7
    12d0:	06 c0       	rjmp	.+12     	; 0x12de <__EEPROM_REGION_LENGTH__+0x2de>
    12d2:	98 01       	movw	r18, r16
    12d4:	2f 5f       	subi	r18, 0xFF	; 255
    12d6:	3f 4f       	sbci	r19, 0xFF	; 255
    12d8:	3d 8f       	std	Y+29, r19	; 0x1d
    12da:	2c 8f       	std	Y+28, r18	; 0x1c
    12dc:	43 c0       	rjmp	.+134    	; 0x1364 <__EEPROM_REGION_LENGTH__+0x364>
    12de:	4b 85       	ldd	r20, Y+11	; 0x0b
    12e0:	5c 85       	ldd	r21, Y+12	; 0x0c
    12e2:	45 2b       	or	r20, r21
    12e4:	b1 f4       	brne	.+44     	; 0x1312 <__EEPROM_REGION_LENGTH__+0x312>
    12e6:	77 fe       	sbrs	r7, 7
    12e8:	14 c0       	rjmp	.+40     	; 0x1312 <__EEPROM_REGION_LENGTH__+0x312>
    12ea:	5f ef       	ldi	r21, 0xFF	; 255
    12ec:	c5 1a       	sub	r12, r21
    12ee:	d5 0a       	sbc	r13, r21
    12f0:	e9 81       	ldd	r30, Y+1	; 0x01
    12f2:	fa 81       	ldd	r31, Y+2	; 0x02
    12f4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    12f6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    12f8:	e8 0f       	add	r30, r24
    12fa:	f9 1f       	adc	r31, r25
    12fc:	9e e2       	ldi	r25, 0x2E	; 46
    12fe:	90 83       	st	Z, r25
    1300:	ef 81       	ldd	r30, Y+7	; 0x07
    1302:	f8 85       	ldd	r31, Y+8	; 0x08
    1304:	31 97       	sbiw	r30, 0x01	; 1
    1306:	f8 87       	std	Y+8, r31	; 0x08
    1308:	ef 83       	std	Y+7, r30	; 0x07
    130a:	21 e0       	ldi	r18, 0x01	; 1
    130c:	30 e0       	ldi	r19, 0x00	; 0
    130e:	3c 87       	std	Y+12, r19	; 0x0c
    1310:	2b 87       	std	Y+11, r18	; 0x0b
    1312:	e9 81       	ldd	r30, Y+1	; 0x01
    1314:	fa 81       	ldd	r31, Y+2	; 0x02
    1316:	ec 0d       	add	r30, r12
    1318:	fd 1d       	adc	r31, r13
    131a:	1d 8f       	std	Y+29, r17	; 0x1d
    131c:	0c 8f       	std	Y+28, r16	; 0x1c
    131e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1320:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1322:	89 2b       	or	r24, r25
    1324:	49 f0       	breq	.+18     	; 0x1338 <__EEPROM_REGION_LENGTH__+0x338>
    1326:	30 e3       	ldi	r19, 0x30	; 48
    1328:	31 93       	st	Z+, r19
    132a:	4c 8d       	ldd	r20, Y+28	; 0x1c
    132c:	5d 8d       	ldd	r21, Y+29	; 0x1d
    132e:	41 50       	subi	r20, 0x01	; 1
    1330:	51 09       	sbc	r21, r1
    1332:	5d 8f       	std	Y+29, r21	; 0x1d
    1334:	4c 8f       	std	Y+28, r20	; 0x1c
    1336:	f3 cf       	rjmp	.-26     	; 0x131e <__EEPROM_REGION_LENGTH__+0x31e>
    1338:	c8 01       	movw	r24, r16
    133a:	8c 0d       	add	r24, r12
    133c:	9d 1d       	adc	r25, r13
    133e:	2f 81       	ldd	r18, Y+7	; 0x07
    1340:	38 85       	ldd	r19, Y+8	; 0x08
    1342:	20 1b       	sub	r18, r16
    1344:	31 0b       	sbc	r19, r17
    1346:	6c 01       	movw	r12, r24
    1348:	ef ef       	ldi	r30, 0xFF	; 255
    134a:	ce 1a       	sub	r12, r30
    134c:	de 0a       	sbc	r13, r30
    134e:	e9 81       	ldd	r30, Y+1	; 0x01
    1350:	fa 81       	ldd	r31, Y+2	; 0x02
    1352:	e8 0f       	add	r30, r24
    1354:	f9 1f       	adc	r31, r25
    1356:	60 5d       	subi	r22, 0xD0	; 208
    1358:	60 83       	st	Z, r22
    135a:	a9 01       	movw	r20, r18
    135c:	41 50       	subi	r20, 0x01	; 1
    135e:	51 09       	sbc	r21, r1
    1360:	58 87       	std	Y+8, r21	; 0x08
    1362:	4f 83       	std	Y+7, r20	; 0x07
    1364:	85 01       	movw	r16, r10
    1366:	74 01       	movw	r14, r8
    1368:	17 fb       	bst	r17, 7
    136a:	10 95       	com	r17
    136c:	17 f9       	bld	r17, 7
    136e:	10 95       	com	r17
    1370:	2b 81       	ldd	r18, Y+3	; 0x03
    1372:	3c 81       	ldd	r19, Y+4	; 0x04
    1374:	4d 81       	ldd	r20, Y+5	; 0x05
    1376:	5e 81       	ldd	r21, Y+6	; 0x06
    1378:	6d 85       	ldd	r22, Y+13	; 0x0d
    137a:	7e 85       	ldd	r23, Y+14	; 0x0e
    137c:	8f 85       	ldd	r24, Y+15	; 0x0f
    137e:	98 89       	ldd	r25, Y+16	; 0x10
    1380:	0e 94 1f 14 	call	0x283e	; 0x283e <fmaf>
    1384:	4b 01       	movw	r8, r22
    1386:	5c 01       	movw	r10, r24
    1388:	b7 fa       	bst	r11, 7
    138a:	b0 94       	com	r11
    138c:	b7 f8       	bld	r11, 7
    138e:	b0 94       	com	r11
    1390:	20 e0       	ldi	r18, 0x00	; 0
    1392:	30 e0       	ldi	r19, 0x00	; 0
    1394:	40 e2       	ldi	r20, 0x20	; 32
    1396:	51 e4       	ldi	r21, 0x41	; 65
    1398:	6b 81       	ldd	r22, Y+3	; 0x03
    139a:	7c 81       	ldd	r23, Y+4	; 0x04
    139c:	8d 81       	ldd	r24, Y+5	; 0x05
    139e:	9e 81       	ldd	r25, Y+6	; 0x06
    13a0:	0e 94 4e 23 	call	0x469c	; 0x469c <__divsf3>
    13a4:	6b 83       	std	Y+3, r22	; 0x03
    13a6:	7c 83       	std	Y+4, r23	; 0x04
    13a8:	8d 83       	std	Y+5, r24	; 0x05
    13aa:	9e 83       	std	Y+6, r25	; 0x06
    13ac:	51 e0       	ldi	r21, 0x01	; 1
    13ae:	65 1a       	sub	r6, r21
    13b0:	71 08       	sbc	r7, r1
    13b2:	0c 8d       	ldd	r16, Y+28	; 0x1c
    13b4:	1d 8d       	ldd	r17, Y+29	; 0x1d
    13b6:	5e cf       	rjmp	.-324    	; 0x1274 <__EEPROM_REGION_LENGTH__+0x274>
    13b8:	f9 85       	ldd	r31, Y+9	; 0x09
    13ba:	f4 ff       	sbrs	r31, 4
    13bc:	0a c0       	rjmp	.+20     	; 0x13d2 <__EEPROM_REGION_LENGTH__+0x3d2>
    13be:	e9 81       	ldd	r30, Y+1	; 0x01
    13c0:	fa 81       	ldd	r31, Y+2	; 0x02
    13c2:	ec 0d       	add	r30, r12
    13c4:	fd 1d       	adc	r31, r13
    13c6:	8e e2       	ldi	r24, 0x2E	; 46
    13c8:	80 83       	st	Z, r24
    13ca:	96 01       	movw	r18, r12
    13cc:	2f 5f       	subi	r18, 0xFF	; 255
    13ce:	3f 4f       	sbci	r19, 0xFF	; 255
    13d0:	69 01       	movw	r12, r18
    13d2:	49 81       	ldd	r20, Y+1	; 0x01
    13d4:	5a 81       	ldd	r21, Y+2	; 0x02
    13d6:	4c 0d       	add	r20, r12
    13d8:	5d 1d       	adc	r21, r13
    13da:	5c 87       	std	Y+12, r21	; 0x0c
    13dc:	4b 87       	std	Y+11, r20	; 0x0b
    13de:	fa 01       	movw	r30, r20
    13e0:	10 82       	st	Z, r1
    13e2:	fd 89       	ldd	r31, Y+21	; 0x15
    13e4:	f5 36       	cpi	r31, 0x65	; 101
    13e6:	09 f0       	breq	.+2      	; 0x13ea <__EEPROM_REGION_LENGTH__+0x3ea>
    13e8:	61 c0       	rjmp	.+194    	; 0x14ac <__EEPROM_REGION_LENGTH__+0x4ac>
    13ea:	e9 81       	ldd	r30, Y+1	; 0x01
    13ec:	fa 81       	ldd	r31, Y+2	; 0x02
    13ee:	28 a1       	ldd	r18, Y+32	; 0x20
    13f0:	39 a1       	ldd	r19, Y+33	; 0x21
    13f2:	e2 0f       	add	r30, r18
    13f4:	f3 1f       	adc	r31, r19
    13f6:	31 97       	sbiw	r30, 0x01	; 1
    13f8:	10 82       	st	Z, r1
    13fa:	37 fe       	sbrs	r3, 7
    13fc:	06 c0       	rjmp	.+12     	; 0x140a <__EEPROM_REGION_LENGTH__+0x40a>
    13fe:	31 94       	neg	r3
    1400:	21 94       	neg	r2
    1402:	31 08       	sbc	r3, r1
    1404:	01 e0       	ldi	r16, 0x01	; 1
    1406:	10 e0       	ldi	r17, 0x00	; 0
    1408:	02 c0       	rjmp	.+4      	; 0x140e <__EEPROM_REGION_LENGTH__+0x40e>
    140a:	00 e0       	ldi	r16, 0x00	; 0
    140c:	10 e0       	ldi	r17, 0x00	; 0
    140e:	e8 a1       	ldd	r30, Y+32	; 0x20
    1410:	f9 a1       	ldd	r31, Y+33	; 0x21
    1412:	31 97       	sbiw	r30, 0x01	; 1
    1414:	49 81       	ldd	r20, Y+1	; 0x01
    1416:	5a 81       	ldd	r21, Y+2	; 0x02
    1418:	e4 0f       	add	r30, r20
    141a:	f5 1f       	adc	r31, r21
    141c:	22 e0       	ldi	r18, 0x02	; 2
    141e:	30 e0       	ldi	r19, 0x00	; 0
    1420:	8a e0       	ldi	r24, 0x0A	; 10
    1422:	e8 2e       	mov	r14, r24
    1424:	f1 2c       	mov	r15, r1
    1426:	cf 01       	movw	r24, r30
    1428:	49 81       	ldd	r20, Y+1	; 0x01
    142a:	5a 81       	ldd	r21, Y+2	; 0x02
    142c:	84 1b       	sub	r24, r20
    142e:	95 0b       	sbc	r25, r21
    1430:	21 14       	cp	r2, r1
    1432:	31 04       	cpc	r3, r1
    1434:	79 f0       	breq	.+30     	; 0x1454 <__EEPROM_REGION_LENGTH__+0x454>
    1436:	c1 01       	movw	r24, r2
    1438:	b7 01       	movw	r22, r14
    143a:	0e 94 a4 21 	call	0x4348	; 0x4348 <__divmodhi4>
    143e:	80 5d       	subi	r24, 0xD0	; 208
    1440:	82 93       	st	-Z, r24
    1442:	1b 01       	movw	r2, r22
    1444:	21 50       	subi	r18, 0x01	; 1
    1446:	31 09       	sbc	r19, r1
    1448:	8f 81       	ldd	r24, Y+7	; 0x07
    144a:	98 85       	ldd	r25, Y+8	; 0x08
    144c:	01 97       	sbiw	r24, 0x01	; 1
    144e:	98 87       	std	Y+8, r25	; 0x08
    1450:	8f 83       	std	Y+7, r24	; 0x07
    1452:	e9 cf       	rjmp	.-46     	; 0x1426 <__EEPROM_REGION_LENGTH__+0x426>
    1454:	12 16       	cp	r1, r18
    1456:	13 06       	cpc	r1, r19
    1458:	74 f3       	brlt	.-36     	; 0x1436 <__EEPROM_REGION_LENGTH__+0x436>
    145a:	fc 01       	movw	r30, r24
    145c:	31 97       	sbiw	r30, 0x01	; 1
    145e:	e4 0f       	add	r30, r20
    1460:	f5 1f       	adc	r31, r21
    1462:	01 2b       	or	r16, r17
    1464:	11 f4       	brne	.+4      	; 0x146a <__EEPROM_REGION_LENGTH__+0x46a>
    1466:	2b e2       	ldi	r18, 0x2B	; 43
    1468:	01 c0       	rjmp	.+2      	; 0x146c <__EEPROM_REGION_LENGTH__+0x46c>
    146a:	2d e2       	ldi	r18, 0x2D	; 45
    146c:	20 83       	st	Z, r18
    146e:	02 97       	sbiw	r24, 0x02	; 2
    1470:	e9 81       	ldd	r30, Y+1	; 0x01
    1472:	fa 81       	ldd	r31, Y+2	; 0x02
    1474:	e8 0f       	add	r30, r24
    1476:	f9 1f       	adc	r31, r25
    1478:	2a a1       	ldd	r18, Y+34	; 0x22
    147a:	3b a1       	ldd	r19, Y+35	; 0x23
    147c:	21 54       	subi	r18, 0x41	; 65
    147e:	31 09       	sbc	r19, r1
    1480:	2a 31       	cpi	r18, 0x1A	; 26
    1482:	31 05       	cpc	r19, r1
    1484:	10 f0       	brcs	.+4      	; 0x148a <__EEPROM_REGION_LENGTH__+0x48a>
    1486:	25 e6       	ldi	r18, 0x65	; 101
    1488:	01 c0       	rjmp	.+2      	; 0x148c <__EEPROM_REGION_LENGTH__+0x48c>
    148a:	25 e4       	ldi	r18, 0x45	; 69
    148c:	20 83       	st	Z, r18
    148e:	2f 81       	ldd	r18, Y+7	; 0x07
    1490:	38 85       	ldd	r19, Y+8	; 0x08
    1492:	22 50       	subi	r18, 0x02	; 2
    1494:	31 09       	sbc	r19, r1
    1496:	38 87       	std	Y+8, r19	; 0x08
    1498:	2f 83       	std	Y+7, r18	; 0x07
    149a:	c8 16       	cp	r12, r24
    149c:	d9 06       	cpc	r13, r25
    149e:	34 f4       	brge	.+12     	; 0x14ac <__EEPROM_REGION_LENGTH__+0x4ac>
    14a0:	af 01       	movw	r20, r30
    14a2:	60 e8       	ldi	r22, 0x80	; 128
    14a4:	8b 85       	ldd	r24, Y+11	; 0x0b
    14a6:	9c 85       	ldd	r25, Y+12	; 0x0c
    14a8:	0e 94 59 22 	call	0x44b2	; 0x44b2 <strcpy>
    14ac:	49 81       	ldd	r20, Y+1	; 0x01
    14ae:	5a 81       	ldd	r21, Y+2	; 0x02
    14b0:	3a 01       	movw	r6, r20
    14b2:	80 e8       	ldi	r24, 0x80	; 128
    14b4:	88 2e       	mov	r8, r24
    14b6:	99 85       	ldd	r25, Y+9	; 0x09
    14b8:	91 ff       	sbrs	r25, 1
    14ba:	2e c0       	rjmp	.+92     	; 0x1518 <__EEPROM_REGION_LENGTH__+0x518>
    14bc:	90 fd       	sbrc	r25, 0
    14be:	2c c0       	rjmp	.+88     	; 0x1518 <__EEPROM_REGION_LENGTH__+0x518>
    14c0:	ef 81       	ldd	r30, Y+7	; 0x07
    14c2:	f8 85       	ldd	r31, Y+8	; 0x08
    14c4:	1e 16       	cp	r1, r30
    14c6:	1f 06       	cpc	r1, r31
    14c8:	3c f5       	brge	.+78     	; 0x1518 <__EEPROM_REGION_LENGTH__+0x518>
    14ca:	88 2d       	mov	r24, r8
    14cc:	b3 01       	movw	r22, r6
    14ce:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    14d2:	29 81       	ldd	r18, Y+1	; 0x01
    14d4:	3a 81       	ldd	r19, Y+2	; 0x02
    14d6:	82 0f       	add	r24, r18
    14d8:	93 1f       	adc	r25, r19
    14da:	9c 01       	movw	r18, r24
    14dc:	49 81       	ldd	r20, Y+1	; 0x01
    14de:	5a 81       	ldd	r21, Y+2	; 0x02
    14e0:	24 1b       	sub	r18, r20
    14e2:	35 0b       	sbc	r19, r21
    14e4:	e9 89       	ldd	r30, Y+17	; 0x11
    14e6:	fa 89       	ldd	r31, Y+18	; 0x12
    14e8:	2e 17       	cp	r18, r30
    14ea:	3f 07       	cpc	r19, r31
    14ec:	4c f0       	brlt	.+18     	; 0x1500 <__EEPROM_REGION_LENGTH__+0x500>
    14ee:	fc 01       	movw	r30, r24
    14f0:	20 81       	ld	r18, Z
    14f2:	ef 81       	ldd	r30, Y+7	; 0x07
    14f4:	f8 85       	ldd	r31, Y+8	; 0x08
    14f6:	e8 0f       	add	r30, r24
    14f8:	f9 1f       	adc	r31, r25
    14fa:	20 83       	st	Z, r18
    14fc:	01 97       	sbiw	r24, 0x01	; 1
    14fe:	ed cf       	rjmp	.-38     	; 0x14da <__EEPROM_REGION_LENGTH__+0x4da>
    1500:	4f 81       	ldd	r20, Y+7	; 0x07
    1502:	58 85       	ldd	r21, Y+8	; 0x08
    1504:	60 e3       	ldi	r22, 0x30	; 48
    1506:	70 e0       	ldi	r23, 0x00	; 0
    1508:	89 81       	ldd	r24, Y+1	; 0x01
    150a:	9a 81       	ldd	r25, Y+2	; 0x02
    150c:	8e 0f       	add	r24, r30
    150e:	9f 1f       	adc	r25, r31
    1510:	0e 94 d6 22 	call	0x45ac	; 0x45ac <memset>
    1514:	1c 8a       	std	Y+20, r1	; 0x14
    1516:	1b 8a       	std	Y+19, r1	; 0x13
    1518:	88 2d       	mov	r24, r8
    151a:	b3 01       	movw	r22, r6
    151c:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    1520:	e9 84       	ldd	r14, Y+9	; 0x09
    1522:	fa 84       	ldd	r15, Y+10	; 0x0a
    1524:	0b 89       	ldd	r16, Y+19	; 0x13
    1526:	1c 89       	ldd	r17, Y+20	; 0x14
    1528:	9c 01       	movw	r18, r24
    152a:	68 2d       	mov	r22, r8
    152c:	a3 01       	movw	r20, r6
    152e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1530:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1532:	0e 94 56 15 	call	0x2aac	; 0x2aac <__pad>
    1536:	a6 96       	adiw	r28, 0x26	; 38
    1538:	e2 e1       	ldi	r30, 0x12	; 18
    153a:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>
    153e:	59 85       	ldd	r21, Y+9	; 0x09
    1540:	53 ff       	sbrs	r21, 3
    1542:	00 cd       	rjmp	.-1536   	; 0xf44 <__fmt_fp+0x8e>
    1544:	80 e2       	ldi	r24, 0x20	; 32
    1546:	f0 cc       	rjmp	.-1568   	; 0xf28 <__fmt_fp+0x72>
    1548:	2c ef       	ldi	r18, 0xFC	; 252
    154a:	22 16       	cp	r2, r18
    154c:	2f ef       	ldi	r18, 0xFF	; 255
    154e:	32 06       	cpc	r3, r18
    1550:	4c f0       	brlt	.+18     	; 0x1564 <__EEPROM_REGION_LENGTH__+0x564>
    1552:	4d a1       	ldd	r20, Y+37	; 0x25
    1554:	5e a1       	ldd	r21, Y+38	; 0x26
    1556:	24 16       	cp	r2, r20
    1558:	35 06       	cpc	r3, r21
    155a:	0c f4       	brge	.+2      	; 0x155e <__EEPROM_REGION_LENGTH__+0x55e>
    155c:	df cd       	rjmp	.-1090   	; 0x111c <__EEPROM_REGION_LENGTH__+0x11c>
    155e:	55 e6       	ldi	r21, 0x65	; 101
    1560:	5d 8b       	std	Y+21, r21	; 0x15
    1562:	fb cd       	rjmp	.-1034   	; 0x115a <__EEPROM_REGION_LENGTH__+0x15a>
    1564:	35 e6       	ldi	r19, 0x65	; 101
    1566:	3d 8b       	std	Y+21, r19	; 0x15
    1568:	f8 cd       	rjmp	.-1040   	; 0x115a <__EEPROM_REGION_LENGTH__+0x15a>
    156a:	46 e6       	ldi	r20, 0x66	; 102
    156c:	4d 8b       	std	Y+21, r20	; 0x15
    156e:	f5 cd       	rjmp	.-1046   	; 0x115a <__EEPROM_REGION_LENGTH__+0x15a>

Disassembly of section .text.__fmt_a:

00001570 <__fmt_a>:
    1570:	a0 e2       	ldi	r26, 0x20	; 32
    1572:	b0 e0       	ldi	r27, 0x00	; 0
    1574:	ee eb       	ldi	r30, 0xBE	; 190
    1576:	fa e0       	ldi	r31, 0x0A	; 10
    1578:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
    157c:	9d 8f       	std	Y+29, r25	; 0x1d
    157e:	8c 8f       	std	Y+28, r24	; 0x1c
    1580:	fb 01       	movw	r30, r22
    1582:	29 83       	std	Y+1, r18	; 0x01
    1584:	20 81       	ld	r18, Z
    1586:	2d 83       	std	Y+5, r18	; 0x05
    1588:	31 81       	ldd	r19, Z+1	; 0x01
    158a:	3e 8f       	std	Y+30, r19	; 0x1e
    158c:	82 81       	ldd	r24, Z+2	; 0x02
    158e:	93 81       	ldd	r25, Z+3	; 0x03
    1590:	9b 8b       	std	Y+19, r25	; 0x13
    1592:	8a 8b       	std	Y+18, r24	; 0x12
    1594:	24 81       	ldd	r18, Z+4	; 0x04
    1596:	35 81       	ldd	r19, Z+5	; 0x05
    1598:	39 87       	std	Y+9, r19	; 0x09
    159a:	28 87       	std	Y+8, r18	; 0x08
    159c:	80 85       	ldd	r24, Z+8	; 0x08
    159e:	91 85       	ldd	r25, Z+9	; 0x09
    15a0:	99 8f       	std	Y+25, r25	; 0x19
    15a2:	88 8f       	std	Y+24, r24	; 0x18
    15a4:	46 80       	ldd	r4, Z+6	; 0x06
    15a6:	57 80       	ldd	r5, Z+7	; 0x07
    15a8:	fa 01       	movw	r30, r20
    15aa:	c0 80       	ld	r12, Z
    15ac:	d1 80       	ldd	r13, Z+1	; 0x01
    15ae:	e2 80       	ldd	r14, Z+2	; 0x02
    15b0:	f3 80       	ldd	r15, Z+3	; 0x03
    15b2:	20 e0       	ldi	r18, 0x00	; 0
    15b4:	30 e0       	ldi	r19, 0x00	; 0
    15b6:	a9 01       	movw	r20, r18
    15b8:	c7 01       	movw	r24, r14
    15ba:	b6 01       	movw	r22, r12
    15bc:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    15c0:	87 ff       	sbrs	r24, 7
    15c2:	06 c0       	rjmp	.+12     	; 0x15d0 <__fmt_a+0x60>
    15c4:	f7 fa       	bst	r15, 7
    15c6:	f0 94       	com	r15
    15c8:	f7 f8       	bld	r15, 7
    15ca:	f0 94       	com	r15
    15cc:	8d e2       	ldi	r24, 0x2D	; 45
    15ce:	04 c0       	rjmp	.+8      	; 0x15d8 <__fmt_a+0x68>
    15d0:	5d 81       	ldd	r21, Y+5	; 0x05
    15d2:	52 ff       	sbrs	r21, 2
    15d4:	f6 c2       	rjmp	.+1516   	; 0x1bc2 <__fmt_a+0x652>
    15d6:	8b e2       	ldi	r24, 0x2B	; 43
    15d8:	f2 01       	movw	r30, r4
    15da:	80 83       	st	Z, r24
    15dc:	28 85       	ldd	r18, Y+8	; 0x08
    15de:	39 85       	ldd	r19, Y+9	; 0x09
    15e0:	21 50       	subi	r18, 0x01	; 1
    15e2:	31 09       	sbc	r19, r1
    15e4:	3f 87       	std	Y+15, r19	; 0x0f
    15e6:	2e 87       	std	Y+14, r18	; 0x0e
    15e8:	41 e0       	ldi	r20, 0x01	; 1
    15ea:	50 e0       	ldi	r21, 0x00	; 0
    15ec:	5c 83       	std	Y+4, r21	; 0x04
    15ee:	4b 83       	std	Y+3, r20	; 0x03
    15f0:	06 c0       	rjmp	.+12     	; 0x15fe <__fmt_a+0x8e>
    15f2:	88 85       	ldd	r24, Y+8	; 0x08
    15f4:	99 85       	ldd	r25, Y+9	; 0x09
    15f6:	9f 87       	std	Y+15, r25	; 0x0f
    15f8:	8e 87       	std	Y+14, r24	; 0x0e
    15fa:	1c 82       	std	Y+4, r1	; 0x04
    15fc:	1b 82       	std	Y+3, r1	; 0x03
    15fe:	b7 01       	movw	r22, r14
    1600:	a6 01       	movw	r20, r12
    1602:	7f 77       	andi	r23, 0x7F	; 127
    1604:	e9 81       	ldd	r30, Y+1	; 0x01
    1606:	0e 2e       	mov	r0, r30
    1608:	00 0c       	add	r0, r0
    160a:	ff 0b       	sbc	r31, r31
    160c:	f9 8b       	std	Y+17, r31	; 0x11
    160e:	e8 8b       	std	Y+16, r30	; 0x10
    1610:	41 15       	cp	r20, r1
    1612:	51 05       	cpc	r21, r1
    1614:	f0 e8       	ldi	r31, 0x80	; 128
    1616:	6f 07       	cpc	r22, r31
    1618:	ff e7       	ldi	r31, 0x7F	; 127
    161a:	7f 07       	cpc	r23, r31
    161c:	c1 f4       	brne	.+48     	; 0x164e <__fmt_a+0xde>
    161e:	28 89       	ldd	r18, Y+16	; 0x10
    1620:	39 89       	ldd	r19, Y+17	; 0x11
    1622:	21 54       	subi	r18, 0x41	; 65
    1624:	31 09       	sbc	r19, r1
    1626:	8b 81       	ldd	r24, Y+3	; 0x03
    1628:	9c 81       	ldd	r25, Y+4	; 0x04
    162a:	84 0d       	add	r24, r4
    162c:	95 1d       	adc	r25, r5
    162e:	2a 31       	cpi	r18, 0x1A	; 26
    1630:	31 05       	cpc	r19, r1
    1632:	20 f4       	brcc	.+8      	; 0x163c <__fmt_a+0xcc>
    1634:	47 e6       	ldi	r20, 0x67	; 103
    1636:	56 e0       	ldi	r21, 0x06	; 6
    1638:	60 e0       	ldi	r22, 0x00	; 0
    163a:	03 c0       	rjmp	.+6      	; 0x1642 <__fmt_a+0xd2>
    163c:	4b e6       	ldi	r20, 0x6B	; 107
    163e:	56 e0       	ldi	r21, 0x06	; 6
    1640:	60 e0       	ldi	r22, 0x00	; 0
    1642:	0e 94 59 22 	call	0x44b2	; 0x44b2 <strcpy>
    1646:	6b e6       	ldi	r22, 0x6B	; 107
    1648:	76 e0       	ldi	r23, 0x06	; 6
    164a:	80 e0       	ldi	r24, 0x00	; 0
    164c:	1c c0       	rjmp	.+56     	; 0x1686 <__fmt_a+0x116>
    164e:	8b 81       	ldd	r24, Y+3	; 0x03
    1650:	9c 81       	ldd	r25, Y+4	; 0x04
    1652:	84 0d       	add	r24, r4
    1654:	95 1d       	adc	r25, r5
    1656:	41 30       	cpi	r20, 0x01	; 1
    1658:	51 05       	cpc	r21, r1
    165a:	60 48       	sbci	r22, 0x80	; 128
    165c:	7f 47       	sbci	r23, 0x7F	; 127
    165e:	e8 f0       	brcs	.+58     	; 0x169a <__fmt_a+0x12a>
    1660:	28 89       	ldd	r18, Y+16	; 0x10
    1662:	39 89       	ldd	r19, Y+17	; 0x11
    1664:	21 54       	subi	r18, 0x41	; 65
    1666:	31 09       	sbc	r19, r1
    1668:	2a 31       	cpi	r18, 0x1A	; 26
    166a:	31 05       	cpc	r19, r1
    166c:	20 f4       	brcc	.+8      	; 0x1676 <__fmt_a+0x106>
    166e:	4f e6       	ldi	r20, 0x6F	; 111
    1670:	56 e0       	ldi	r21, 0x06	; 6
    1672:	60 e0       	ldi	r22, 0x00	; 0
    1674:	03 c0       	rjmp	.+6      	; 0x167c <__fmt_a+0x10c>
    1676:	43 e7       	ldi	r20, 0x73	; 115
    1678:	56 e0       	ldi	r21, 0x06	; 6
    167a:	60 e0       	ldi	r22, 0x00	; 0
    167c:	0e 94 59 22 	call	0x44b2	; 0x44b2 <strcpy>
    1680:	63 e7       	ldi	r22, 0x73	; 115
    1682:	76 e0       	ldi	r23, 0x06	; 6
    1684:	80 e0       	ldi	r24, 0x00	; 0
    1686:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    168a:	a2 01       	movw	r20, r4
    168c:	60 e8       	ldi	r22, 0x80	; 128
    168e:	ed 80       	ldd	r14, Y+5	; 0x05
    1690:	fe 8c       	ldd	r15, Y+30	; 0x1e
    1692:	08 85       	ldd	r16, Y+8	; 0x08
    1694:	19 85       	ldd	r17, Y+9	; 0x09
    1696:	9c 01       	movw	r18, r24
    1698:	8c c2       	rjmp	.+1304   	; 0x1bb2 <__fmt_a+0x642>
    169a:	20 e3       	ldi	r18, 0x30	; 48
    169c:	fc 01       	movw	r30, r24
    169e:	20 83       	st	Z, r18
    16a0:	eb 81       	ldd	r30, Y+3	; 0x03
    16a2:	fc 81       	ldd	r31, Y+4	; 0x04
    16a4:	31 96       	adiw	r30, 0x01	; 1
    16a6:	e4 0d       	add	r30, r4
    16a8:	f5 1d       	adc	r31, r5
    16aa:	2b 81       	ldd	r18, Y+3	; 0x03
    16ac:	3c 81       	ldd	r19, Y+4	; 0x04
    16ae:	2e 5f       	subi	r18, 0xFE	; 254
    16b0:	3f 4f       	sbci	r19, 0xFF	; 255
    16b2:	3c 83       	std	Y+4, r19	; 0x04
    16b4:	2b 83       	std	Y+3, r18	; 0x03
    16b6:	48 89       	ldd	r20, Y+16	; 0x10
    16b8:	59 89       	ldd	r21, Y+17	; 0x11
    16ba:	41 54       	subi	r20, 0x41	; 65
    16bc:	51 09       	sbc	r21, r1
    16be:	5b 8f       	std	Y+27, r21	; 0x1b
    16c0:	4a 8f       	std	Y+26, r20	; 0x1a
    16c2:	4a 31       	cpi	r20, 0x1A	; 26
    16c4:	51 05       	cpc	r21, r1
    16c6:	10 f0       	brcs	.+4      	; 0x16cc <__fmt_a+0x15c>
    16c8:	88 e7       	ldi	r24, 0x78	; 120
    16ca:	01 c0       	rjmp	.+2      	; 0x16ce <__fmt_a+0x15e>
    16cc:	88 e5       	ldi	r24, 0x58	; 88
    16ce:	80 83       	st	Z, r24
    16d0:	20 e0       	ldi	r18, 0x00	; 0
    16d2:	30 e0       	ldi	r19, 0x00	; 0
    16d4:	a9 01       	movw	r20, r18
    16d6:	c7 01       	movw	r24, r14
    16d8:	b6 01       	movw	r22, r12
    16da:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    16de:	61 2c       	mov	r6, r1
    16e0:	71 2c       	mov	r7, r1
    16e2:	1f 8e       	std	Y+31, r1	; 0x1f
    16e4:	19 82       	std	Y+1, r1	; 0x01
    16e6:	88 23       	and	r24, r24
    16e8:	09 f4       	brne	.+2      	; 0x16ec <__fmt_a+0x17c>
    16ea:	64 c0       	rjmp	.+200    	; 0x17b4 <__fmt_a+0x244>
    16ec:	50 e8       	ldi	r21, 0x80	; 128
    16ee:	58 a3       	std	Y+32, r21	; 0x20
    16f0:	8f e3       	ldi	r24, 0x3F	; 63
    16f2:	8a 83       	std	Y+2, r24	; 0x02
    16f4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    16f6:	39 81       	ldd	r19, Y+1	; 0x01
    16f8:	48 a1       	ldd	r20, Y+32	; 0x20
    16fa:	5a 81       	ldd	r21, Y+2	; 0x02
    16fc:	6f 8d       	ldd	r22, Y+31	; 0x1f
    16fe:	79 81       	ldd	r23, Y+1	; 0x01
    1700:	88 a1       	ldd	r24, Y+32	; 0x20
    1702:	9a 81       	ldd	r25, Y+2	; 0x02
    1704:	0e 94 14 23 	call	0x4628	; 0x4628 <__addsf3>
    1708:	5b 01       	movw	r10, r22
    170a:	8c 01       	movw	r16, r24
    170c:	a7 01       	movw	r20, r14
    170e:	96 01       	movw	r18, r12
    1710:	0e 94 41 23 	call	0x4682	; 0x4682 <__gesf2>
    1714:	18 16       	cp	r1, r24
    1716:	0c f4       	brge	.+2      	; 0x171a <__fmt_a+0x1aa>
    1718:	42 c0       	rjmp	.+132    	; 0x179e <__fmt_a+0x22e>
    171a:	9f ef       	ldi	r25, 0xFF	; 255
    171c:	69 1a       	sub	r6, r25
    171e:	79 0a       	sbc	r7, r25
    1720:	af 8e       	std	Y+31, r10	; 0x1f
    1722:	b9 82       	std	Y+1, r11	; 0x01
    1724:	08 a3       	std	Y+32, r16	; 0x20
    1726:	1a 83       	std	Y+2, r17	; 0x02
    1728:	e5 cf       	rjmp	.-54     	; 0x16f4 <__fmt_a+0x184>
    172a:	20 e0       	ldi	r18, 0x00	; 0
    172c:	30 e0       	ldi	r19, 0x00	; 0
    172e:	40 e0       	ldi	r20, 0x00	; 0
    1730:	5f e3       	ldi	r21, 0x3F	; 63
    1732:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1734:	79 81       	ldd	r23, Y+1	; 0x01
    1736:	88 a1       	ldd	r24, Y+32	; 0x20
    1738:	9a 81       	ldd	r25, Y+2	; 0x02
    173a:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    173e:	20 e0       	ldi	r18, 0x00	; 0
    1740:	30 e0       	ldi	r19, 0x00	; 0
    1742:	a9 01       	movw	r20, r18
    1744:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    1748:	81 11       	cpse	r24, r1
    174a:	18 c0       	rjmp	.+48     	; 0x177c <__fmt_a+0x20c>
    174c:	20 e0       	ldi	r18, 0x00	; 0
    174e:	30 e0       	ldi	r19, 0x00	; 0
    1750:	40 e8       	ldi	r20, 0x80	; 128
    1752:	5a e5       	ldi	r21, 0x5A	; 90
    1754:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1756:	79 81       	ldd	r23, Y+1	; 0x01
    1758:	88 a1       	ldd	r24, Y+32	; 0x20
    175a:	9a 81       	ldd	r25, Y+2	; 0x02
    175c:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1760:	6f 8f       	std	Y+31, r22	; 0x1f
    1762:	79 83       	std	Y+1, r23	; 0x01
    1764:	88 a3       	std	Y+32, r24	; 0x20
    1766:	9a 83       	std	Y+2, r25	; 0x02
    1768:	20 e0       	ldi	r18, 0x00	; 0
    176a:	30 e0       	ldi	r19, 0x00	; 0
    176c:	40 e8       	ldi	r20, 0x80	; 128
    176e:	5a e5       	ldi	r21, 0x5A	; 90
    1770:	c7 01       	movw	r24, r14
    1772:	b6 01       	movw	r22, r12
    1774:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1778:	6b 01       	movw	r12, r22
    177a:	7c 01       	movw	r14, r24
    177c:	20 e0       	ldi	r18, 0x00	; 0
    177e:	30 e0       	ldi	r19, 0x00	; 0
    1780:	40 e0       	ldi	r20, 0x00	; 0
    1782:	5f e3       	ldi	r21, 0x3F	; 63
    1784:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1786:	79 81       	ldd	r23, Y+1	; 0x01
    1788:	88 a1       	ldd	r24, Y+32	; 0x20
    178a:	9a 81       	ldd	r25, Y+2	; 0x02
    178c:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1790:	6f 8f       	std	Y+31, r22	; 0x1f
    1792:	79 83       	std	Y+1, r23	; 0x01
    1794:	88 a3       	std	Y+32, r24	; 0x20
    1796:	9a 83       	std	Y+2, r25	; 0x02
    1798:	a1 e0       	ldi	r26, 0x01	; 1
    179a:	6a 1a       	sub	r6, r26
    179c:	71 08       	sbc	r7, r1
    179e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    17a0:	39 81       	ldd	r19, Y+1	; 0x01
    17a2:	48 a1       	ldd	r20, Y+32	; 0x20
    17a4:	5a 81       	ldd	r21, Y+2	; 0x02
    17a6:	c7 01       	movw	r24, r14
    17a8:	b6 01       	movw	r22, r12
    17aa:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    17ae:	87 fd       	sbrc	r24, 7
    17b0:	bc cf       	rjmp	.-136    	; 0x172a <__fmt_a+0x1ba>
    17b2:	04 c0       	rjmp	.+8      	; 0x17bc <__fmt_a+0x24c>
    17b4:	e0 e8       	ldi	r30, 0x80	; 128
    17b6:	e8 a3       	std	Y+32, r30	; 0x20
    17b8:	ff e3       	ldi	r31, 0x3F	; 63
    17ba:	fa 83       	std	Y+2, r31	; 0x02
    17bc:	2a 89       	ldd	r18, Y+18	; 0x12
    17be:	3b 89       	ldd	r19, Y+19	; 0x13
    17c0:	37 fd       	sbrc	r19, 7
    17c2:	02 c0       	rjmp	.+4      	; 0x17c8 <__fmt_a+0x258>
    17c4:	c9 01       	movw	r24, r18
    17c6:	02 c0       	rjmp	.+4      	; 0x17cc <__fmt_a+0x25c>
    17c8:	88 e1       	ldi	r24, 0x18	; 24
    17ca:	90 e0       	ldi	r25, 0x00	; 0
    17cc:	ac 01       	movw	r20, r24
    17ce:	4f 5f       	subi	r20, 0xFF	; 255
    17d0:	5f 4f       	sbci	r21, 0xFF	; 255
    17d2:	5b 87       	std	Y+11, r21	; 0x0b
    17d4:	4a 87       	std	Y+10, r20	; 0x0a
    17d6:	8f 8c       	ldd	r8, Y+31	; 0x1f
    17d8:	99 80       	ldd	r9, Y+1	; 0x01
    17da:	a8 a0       	ldd	r10, Y+32	; 0x20
    17dc:	ba 80       	ldd	r11, Y+2	; 0x02
    17de:	16 01       	movw	r2, r12
    17e0:	87 01       	movw	r16, r14
    17e2:	1f 82       	std	Y+7, r1	; 0x07
    17e4:	1e 82       	std	Y+6, r1	; 0x06
    17e6:	94 01       	movw	r18, r8
    17e8:	a5 01       	movw	r20, r10
    17ea:	b1 01       	movw	r22, r2
    17ec:	c8 01       	movw	r24, r16
    17ee:	0e 94 4e 23 	call	0x469c	; 0x469c <__divsf3>
    17f2:	0e 94 bd 14 	call	0x297a	; 0x297a <floorf>
    17f6:	6c 8b       	std	Y+20, r22	; 0x14
    17f8:	7d 8b       	std	Y+21, r23	; 0x15
    17fa:	8e 8b       	std	Y+22, r24	; 0x16
    17fc:	9f 8b       	std	Y+23, r25	; 0x17
    17fe:	94 01       	movw	r18, r8
    1800:	a5 01       	movw	r20, r10
    1802:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1806:	9b 01       	movw	r18, r22
    1808:	ac 01       	movw	r20, r24
    180a:	b1 01       	movw	r22, r2
    180c:	c8 01       	movw	r24, r16
    180e:	0e 94 13 23 	call	0x4626	; 0x4626 <__subsf3>
    1812:	1b 01       	movw	r2, r22
    1814:	8c 01       	movw	r16, r24
    1816:	20 e0       	ldi	r18, 0x00	; 0
    1818:	30 e0       	ldi	r19, 0x00	; 0
    181a:	40 e8       	ldi	r20, 0x80	; 128
    181c:	5d e3       	ldi	r21, 0x3D	; 61
    181e:	b4 01       	movw	r22, r8
    1820:	c5 01       	movw	r24, r10
    1822:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1826:	4b 01       	movw	r8, r22
    1828:	5c 01       	movw	r10, r24
    182a:	8e 81       	ldd	r24, Y+6	; 0x06
    182c:	9f 81       	ldd	r25, Y+7	; 0x07
    182e:	01 96       	adiw	r24, 0x01	; 1
    1830:	9f 83       	std	Y+7, r25	; 0x07
    1832:	8e 83       	std	Y+6, r24	; 0x06
    1834:	ea 89       	ldd	r30, Y+18	; 0x12
    1836:	fb 89       	ldd	r31, Y+19	; 0x13
    1838:	f7 ff       	sbrs	r31, 7
    183a:	09 c0       	rjmp	.+18     	; 0x184e <__fmt_a+0x2de>
    183c:	20 e0       	ldi	r18, 0x00	; 0
    183e:	30 e0       	ldi	r19, 0x00	; 0
    1840:	a9 01       	movw	r20, r18
    1842:	b1 01       	movw	r22, r2
    1844:	c8 01       	movw	r24, r16
    1846:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    184a:	88 23       	and	r24, r24
    184c:	41 f0       	breq	.+16     	; 0x185e <__fmt_a+0x2ee>
    184e:	2a 85       	ldd	r18, Y+10	; 0x0a
    1850:	3b 85       	ldd	r19, Y+11	; 0x0b
    1852:	4e 81       	ldd	r20, Y+6	; 0x06
    1854:	5f 81       	ldd	r21, Y+7	; 0x07
    1856:	42 17       	cp	r20, r18
    1858:	53 07       	cpc	r21, r19
    185a:	2c f2       	brlt	.-118    	; 0x17e6 <__fmt_a+0x276>
    185c:	04 c0       	rjmp	.+8      	; 0x1866 <__fmt_a+0x2f6>
    185e:	8e 81       	ldd	r24, Y+6	; 0x06
    1860:	9f 81       	ldd	r25, Y+7	; 0x07
    1862:	9b 87       	std	Y+11, r25	; 0x0b
    1864:	8a 87       	std	Y+10, r24	; 0x0a
    1866:	20 e0       	ldi	r18, 0x00	; 0
    1868:	30 e0       	ldi	r19, 0x00	; 0
    186a:	40 e0       	ldi	r20, 0x00	; 0
    186c:	51 e4       	ldi	r21, 0x41	; 65
    186e:	b4 01       	movw	r22, r8
    1870:	c5 01       	movw	r24, r10
    1872:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1876:	4b 01       	movw	r8, r22
    1878:	5c 01       	movw	r10, r24
    187a:	9b 01       	movw	r18, r22
    187c:	ac 01       	movw	r20, r24
    187e:	b1 01       	movw	r22, r2
    1880:	c8 01       	movw	r24, r16
    1882:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    1886:	87 fd       	sbrc	r24, 7
    1888:	12 c0       	rjmp	.+36     	; 0x18ae <__fmt_a+0x33e>
    188a:	a5 01       	movw	r20, r10
    188c:	94 01       	movw	r18, r8
    188e:	b1 01       	movw	r22, r2
    1890:	c8 01       	movw	r24, r16
    1892:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    1896:	81 11       	cpse	r24, r1
    1898:	0d c0       	rjmp	.+26     	; 0x18b4 <__fmt_a+0x344>
    189a:	6c 89       	ldd	r22, Y+20	; 0x14
    189c:	7d 89       	ldd	r23, Y+21	; 0x15
    189e:	8e 89       	ldd	r24, Y+22	; 0x16
    18a0:	9f 89       	ldd	r25, Y+23	; 0x17
    18a2:	0e 94 1a 23 	call	0x4634	; 0x4634 <__fixsfsi>
    18a6:	61 70       	andi	r22, 0x01	; 1
    18a8:	77 27       	eor	r23, r23
    18aa:	67 2b       	or	r22, r23
    18ac:	19 f4       	brne	.+6      	; 0x18b4 <__fmt_a+0x344>
    18ae:	81 2c       	mov	r8, r1
    18b0:	91 2c       	mov	r9, r1
    18b2:	54 01       	movw	r10, r8
    18b4:	a5 01       	movw	r20, r10
    18b6:	94 01       	movw	r18, r8
    18b8:	c7 01       	movw	r24, r14
    18ba:	b6 01       	movw	r22, r12
    18bc:	0e 94 14 23 	call	0x4628	; 0x4628 <__addsf3>
    18c0:	6b 01       	movw	r12, r22
    18c2:	7c 01       	movw	r14, r24
    18c4:	dc 01       	movw	r26, r24
    18c6:	cb 01       	movw	r24, r22
    18c8:	bf 77       	andi	r27, 0x7F	; 127
    18ca:	00 97       	sbiw	r24, 0x00	; 0
    18cc:	a0 48       	sbci	r26, 0x80	; 128
    18ce:	bf 47       	sbci	r27, 0x7F	; 127
    18d0:	09 f4       	brne	.+2      	; 0x18d4 <__fmt_a+0x364>
    18d2:	a5 ce       	rjmp	.-694    	; 0x161e <__fmt_a+0xae>
    18d4:	2e 84       	ldd	r2, Y+14	; 0x0e
    18d6:	3f 84       	ldd	r3, Y+15	; 0x0f
    18d8:	f2 e0       	ldi	r31, 0x02	; 2
    18da:	2f 1a       	sub	r2, r31
    18dc:	31 08       	sbc	r3, r1
    18de:	2a 85       	ldd	r18, Y+10	; 0x0a
    18e0:	3b 85       	ldd	r19, Y+11	; 0x0b
    18e2:	31 95       	neg	r19
    18e4:	21 95       	neg	r18
    18e6:	31 09       	sbc	r19, r1
    18e8:	39 8b       	std	Y+17, r19	; 0x11
    18ea:	28 8b       	std	Y+16, r18	; 0x10
    18ec:	0b 81       	ldd	r16, Y+3	; 0x03
    18ee:	1c 81       	ldd	r17, Y+4	; 0x04
    18f0:	a1 2c       	mov	r10, r1
    18f2:	b1 2c       	mov	r11, r1
    18f4:	1f 82       	std	Y+7, r1	; 0x07
    18f6:	1e 82       	std	Y+6, r1	; 0x06
    18f8:	81 2c       	mov	r8, r1
    18fa:	91 2c       	mov	r9, r1
    18fc:	48 8d       	ldd	r20, Y+24	; 0x18
    18fe:	59 8d       	ldd	r21, Y+25	; 0x19
    1900:	45 50       	subi	r20, 0x05	; 5
    1902:	51 09       	sbc	r21, r1
    1904:	5d 8b       	std	Y+21, r21	; 0x15
    1906:	4c 8b       	std	Y+20, r20	; 0x14
    1908:	ec 89       	ldd	r30, Y+20	; 0x14
    190a:	fd 89       	ldd	r31, Y+21	; 0x15
    190c:	0e 17       	cp	r16, r30
    190e:	1f 07       	cpc	r17, r31
    1910:	0c f0       	brlt	.+2      	; 0x1914 <__fmt_a+0x3a4>
    1912:	91 c0       	rjmp	.+290    	; 0x1a36 <__fmt_a+0x4c6>
    1914:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1916:	39 81       	ldd	r19, Y+1	; 0x01
    1918:	48 a1       	ldd	r20, Y+32	; 0x20
    191a:	5a 81       	ldd	r21, Y+2	; 0x02
    191c:	c7 01       	movw	r24, r14
    191e:	b6 01       	movw	r22, r12
    1920:	0e 94 4e 23 	call	0x469c	; 0x469c <__divsf3>
    1924:	0e 94 bd 14 	call	0x297a	; 0x297a <floorf>
    1928:	6a 87       	std	Y+10, r22	; 0x0a
    192a:	7b 87       	std	Y+11, r23	; 0x0b
    192c:	8c 87       	std	Y+12, r24	; 0x0c
    192e:	9d 87       	std	Y+13, r25	; 0x0d
    1930:	0e 94 1a 23 	call	0x4634	; 0x4634 <__fixsfsi>
    1934:	ab 01       	movw	r20, r22
    1936:	61 15       	cp	r22, r1
    1938:	71 05       	cpc	r23, r1
    193a:	39 f4       	brne	.+14     	; 0x194a <__fmt_a+0x3da>
    193c:	81 14       	cp	r8, r1
    193e:	91 04       	cpc	r9, r1
    1940:	21 f0       	breq	.+8      	; 0x194a <__fmt_a+0x3da>
    1942:	5f ef       	ldi	r21, 0xFF	; 255
    1944:	a5 1a       	sub	r10, r21
    1946:	b5 0a       	sbc	r11, r21
    1948:	4d c0       	rjmp	.+154    	; 0x19e4 <__fmt_a+0x474>
    194a:	ee 81       	ldd	r30, Y+6	; 0x06
    194c:	ff 81       	ldd	r31, Y+7	; 0x07
    194e:	ef 2b       	or	r30, r31
    1950:	89 f4       	brne	.+34     	; 0x1974 <__fmt_a+0x404>
    1952:	81 14       	cp	r8, r1
    1954:	91 04       	cpc	r9, r1
    1956:	71 f0       	breq	.+28     	; 0x1974 <__fmt_a+0x404>
    1958:	f2 01       	movw	r30, r4
    195a:	e0 0f       	add	r30, r16
    195c:	f1 1f       	adc	r31, r17
    195e:	2e e2       	ldi	r18, 0x2E	; 46
    1960:	20 83       	st	Z, r18
    1962:	31 e0       	ldi	r19, 0x01	; 1
    1964:	23 1a       	sub	r2, r19
    1966:	31 08       	sbc	r3, r1
    1968:	0f 5f       	subi	r16, 0xFF	; 255
    196a:	1f 4f       	sbci	r17, 0xFF	; 255
    196c:	e1 e0       	ldi	r30, 0x01	; 1
    196e:	f0 e0       	ldi	r31, 0x00	; 0
    1970:	ff 83       	std	Y+7, r31	; 0x07
    1972:	ee 83       	std	Y+6, r30	; 0x06
    1974:	f2 01       	movw	r30, r4
    1976:	e0 0f       	add	r30, r16
    1978:	f1 1f       	adc	r31, r17
    197a:	95 01       	movw	r18, r10
    197c:	21 15       	cp	r18, r1
    197e:	31 05       	cpc	r19, r1
    1980:	29 f0       	breq	.+10     	; 0x198c <__fmt_a+0x41c>
    1982:	a0 e3       	ldi	r26, 0x30	; 48
    1984:	a1 93       	st	Z+, r26
    1986:	21 50       	subi	r18, 0x01	; 1
    1988:	31 09       	sbc	r19, r1
    198a:	f8 cf       	rjmp	.-16     	; 0x197c <__fmt_a+0x40c>
    198c:	f8 01       	movw	r30, r16
    198e:	ea 0d       	add	r30, r10
    1990:	fb 1d       	adc	r31, r11
    1992:	ff 87       	std	Y+15, r31	; 0x0f
    1994:	ee 87       	std	Y+14, r30	; 0x0e
    1996:	2a 18       	sub	r2, r10
    1998:	3b 08       	sbc	r3, r11
    199a:	4a 30       	cpi	r20, 0x0A	; 10
    199c:	51 05       	cpc	r21, r1
    199e:	1c f4       	brge	.+6      	; 0x19a6 <__fmt_a+0x436>
    19a0:	60 5d       	subi	r22, 0xD0	; 208
    19a2:	7f 4f       	sbci	r23, 0xFF	; 255
    19a4:	02 c0       	rjmp	.+4      	; 0x19aa <__fmt_a+0x43a>
    19a6:	69 5a       	subi	r22, 0xA9	; 169
    19a8:	7f 4f       	sbci	r23, 0xFF	; 255
    19aa:	2a 8d       	ldd	r18, Y+26	; 0x1a
    19ac:	3b 8d       	ldd	r19, Y+27	; 0x1b
    19ae:	2a 31       	cpi	r18, 0x1A	; 26
    19b0:	31 05       	cpc	r19, r1
    19b2:	50 f4       	brcc	.+20     	; 0x19c8 <__fmt_a+0x458>
    19b4:	cb 01       	movw	r24, r22
    19b6:	80 62       	ori	r24, 0x20	; 32
    19b8:	81 56       	subi	r24, 0x61	; 97
    19ba:	91 09       	sbc	r25, r1
    19bc:	4a 97       	sbiw	r24, 0x1a	; 26
    19be:	20 f4       	brcc	.+8      	; 0x19c8 <__fmt_a+0x458>
    19c0:	cb 01       	movw	r24, r22
    19c2:	0e 94 df 22 	call	0x45be	; 0x45be <toupper>
    19c6:	bc 01       	movw	r22, r24
    19c8:	0e 85       	ldd	r16, Y+14	; 0x0e
    19ca:	1f 85       	ldd	r17, Y+15	; 0x0f
    19cc:	0f 5f       	subi	r16, 0xFF	; 255
    19ce:	1f 4f       	sbci	r17, 0xFF	; 255
    19d0:	ee 85       	ldd	r30, Y+14	; 0x0e
    19d2:	ff 85       	ldd	r31, Y+15	; 0x0f
    19d4:	e4 0d       	add	r30, r4
    19d6:	f5 1d       	adc	r31, r5
    19d8:	60 83       	st	Z, r22
    19da:	31 e0       	ldi	r19, 0x01	; 1
    19dc:	23 1a       	sub	r2, r19
    19de:	31 08       	sbc	r3, r1
    19e0:	a1 2c       	mov	r10, r1
    19e2:	b1 2c       	mov	r11, r1
    19e4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    19e6:	39 81       	ldd	r19, Y+1	; 0x01
    19e8:	48 a1       	ldd	r20, Y+32	; 0x20
    19ea:	5a 81       	ldd	r21, Y+2	; 0x02
    19ec:	6a 85       	ldd	r22, Y+10	; 0x0a
    19ee:	7b 85       	ldd	r23, Y+11	; 0x0b
    19f0:	8c 85       	ldd	r24, Y+12	; 0x0c
    19f2:	9d 85       	ldd	r25, Y+13	; 0x0d
    19f4:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    19f8:	9b 01       	movw	r18, r22
    19fa:	ac 01       	movw	r20, r24
    19fc:	c7 01       	movw	r24, r14
    19fe:	b6 01       	movw	r22, r12
    1a00:	0e 94 13 23 	call	0x4626	; 0x4626 <__subsf3>
    1a04:	6b 01       	movw	r12, r22
    1a06:	7c 01       	movw	r14, r24
    1a08:	20 e0       	ldi	r18, 0x00	; 0
    1a0a:	30 e0       	ldi	r19, 0x00	; 0
    1a0c:	40 e8       	ldi	r20, 0x80	; 128
    1a0e:	5d e3       	ldi	r21, 0x3D	; 61
    1a10:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1a12:	79 81       	ldd	r23, Y+1	; 0x01
    1a14:	88 a1       	ldd	r24, Y+32	; 0x20
    1a16:	9a 81       	ldd	r25, Y+2	; 0x02
    1a18:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    1a1c:	6f 8f       	std	Y+31, r22	; 0x1f
    1a1e:	79 83       	std	Y+1, r23	; 0x01
    1a20:	88 a3       	std	Y+32, r24	; 0x20
    1a22:	9a 83       	std	Y+2, r25	; 0x02
    1a24:	41 e0       	ldi	r20, 0x01	; 1
    1a26:	84 1a       	sub	r8, r20
    1a28:	91 08       	sbc	r9, r1
    1a2a:	88 89       	ldd	r24, Y+16	; 0x10
    1a2c:	99 89       	ldd	r25, Y+17	; 0x11
    1a2e:	88 15       	cp	r24, r8
    1a30:	99 05       	cpc	r25, r9
    1a32:	09 f0       	breq	.+2      	; 0x1a36 <__fmt_a+0x4c6>
    1a34:	69 cf       	rjmp	.-302    	; 0x1908 <__fmt_a+0x398>
    1a36:	2e 81       	ldd	r18, Y+6	; 0x06
    1a38:	3f 81       	ldd	r19, Y+7	; 0x07
    1a3a:	23 2b       	or	r18, r19
    1a3c:	51 f5       	brne	.+84     	; 0x1a92 <__fmt_a+0x522>
    1a3e:	f2 01       	movw	r30, r4
    1a40:	e0 0f       	add	r30, r16
    1a42:	f1 1f       	adc	r31, r17
    1a44:	a1 14       	cp	r10, r1
    1a46:	b1 04       	cpc	r11, r1
    1a48:	e9 f0       	breq	.+58     	; 0x1a84 <__fmt_a+0x514>
    1a4a:	4a 89       	ldd	r20, Y+18	; 0x12
    1a4c:	5b 89       	ldd	r21, Y+19	; 0x13
    1a4e:	14 16       	cp	r1, r20
    1a50:	15 06       	cpc	r1, r21
    1a52:	c4 f4       	brge	.+48     	; 0x1a84 <__fmt_a+0x514>
    1a54:	5d 81       	ldd	r21, Y+5	; 0x05
    1a56:	50 fd       	sbrc	r21, 0
    1a58:	15 c0       	rjmp	.+42     	; 0x1a84 <__fmt_a+0x514>
    1a5a:	8e e2       	ldi	r24, 0x2E	; 46
    1a5c:	80 83       	st	Z, r24
    1a5e:	f8 01       	movw	r30, r16
    1a60:	31 96       	adiw	r30, 0x01	; 1
    1a62:	e4 0d       	add	r30, r4
    1a64:	f5 1d       	adc	r31, r5
    1a66:	c5 01       	movw	r24, r10
    1a68:	20 e3       	ldi	r18, 0x30	; 48
    1a6a:	21 93       	st	Z+, r18
    1a6c:	01 97       	sbiw	r24, 0x01	; 1
    1a6e:	e9 f7       	brne	.-6      	; 0x1a6a <__fmt_a+0x4fa>
    1a70:	0a 0d       	add	r16, r10
    1a72:	1b 1d       	adc	r17, r11
    1a74:	0f 5f       	subi	r16, 0xFF	; 255
    1a76:	1f 4f       	sbci	r17, 0xFF	; 255
    1a78:	c5 01       	movw	r24, r10
    1a7a:	80 95       	com	r24
    1a7c:	90 95       	com	r25
    1a7e:	28 0e       	add	r2, r24
    1a80:	39 1e       	adc	r3, r25
    1a82:	07 c0       	rjmp	.+14     	; 0x1a92 <__fmt_a+0x522>
    1a84:	8d 81       	ldd	r24, Y+5	; 0x05
    1a86:	84 ff       	sbrs	r24, 4
    1a88:	04 c0       	rjmp	.+8      	; 0x1a92 <__fmt_a+0x522>
    1a8a:	8e e2       	ldi	r24, 0x2E	; 46
    1a8c:	80 83       	st	Z, r24
    1a8e:	0f 5f       	subi	r16, 0xFF	; 255
    1a90:	1f 4f       	sbci	r17, 0xFF	; 255
    1a92:	f2 01       	movw	r30, r4
    1a94:	e0 0f       	add	r30, r16
    1a96:	f1 1f       	adc	r31, r17
    1a98:	ff 83       	std	Y+7, r31	; 0x07
    1a9a:	ee 83       	std	Y+6, r30	; 0x06
    1a9c:	10 82       	st	Z, r1
    1a9e:	e8 8d       	ldd	r30, Y+24	; 0x18
    1aa0:	f9 8d       	ldd	r31, Y+25	; 0x19
    1aa2:	e4 0d       	add	r30, r4
    1aa4:	f5 1d       	adc	r31, r5
    1aa6:	31 97       	sbiw	r30, 0x01	; 1
    1aa8:	10 82       	st	Z, r1
    1aaa:	77 fe       	sbrs	r7, 7
    1aac:	07 c0       	rjmp	.+14     	; 0x1abc <__fmt_a+0x54c>
    1aae:	71 94       	neg	r7
    1ab0:	61 94       	neg	r6
    1ab2:	71 08       	sbc	r7, r1
    1ab4:	ee 24       	eor	r14, r14
    1ab6:	e3 94       	inc	r14
    1ab8:	f1 2c       	mov	r15, r1
    1aba:	02 c0       	rjmp	.+4      	; 0x1ac0 <__fmt_a+0x550>
    1abc:	e1 2c       	mov	r14, r1
    1abe:	f1 2c       	mov	r15, r1
    1ac0:	e8 8d       	ldd	r30, Y+24	; 0x18
    1ac2:	f9 8d       	ldd	r31, Y+25	; 0x19
    1ac4:	31 97       	sbiw	r30, 0x01	; 1
    1ac6:	e4 0d       	add	r30, r4
    1ac8:	f5 1d       	adc	r31, r5
    1aca:	21 e0       	ldi	r18, 0x01	; 1
    1acc:	30 e0       	ldi	r19, 0x00	; 0
    1ace:	8a e0       	ldi	r24, 0x0A	; 10
    1ad0:	c8 2e       	mov	r12, r24
    1ad2:	d1 2c       	mov	r13, r1
    1ad4:	cf 01       	movw	r24, r30
    1ad6:	84 19       	sub	r24, r4
    1ad8:	95 09       	sbc	r25, r5
    1ada:	61 14       	cp	r6, r1
    1adc:	71 04       	cpc	r7, r1
    1ade:	69 f0       	breq	.+26     	; 0x1afa <__fmt_a+0x58a>
    1ae0:	c3 01       	movw	r24, r6
    1ae2:	b6 01       	movw	r22, r12
    1ae4:	0e 94 a4 21 	call	0x4348	; 0x4348 <__divmodhi4>
    1ae8:	80 5d       	subi	r24, 0xD0	; 208
    1aea:	82 93       	st	-Z, r24
    1aec:	3b 01       	movw	r6, r22
    1aee:	21 50       	subi	r18, 0x01	; 1
    1af0:	31 09       	sbc	r19, r1
    1af2:	41 e0       	ldi	r20, 0x01	; 1
    1af4:	24 1a       	sub	r2, r20
    1af6:	31 08       	sbc	r3, r1
    1af8:	ed cf       	rjmp	.-38     	; 0x1ad4 <__fmt_a+0x564>
    1afa:	21 30       	cpi	r18, 0x01	; 1
    1afc:	31 05       	cpc	r19, r1
    1afe:	81 f3       	breq	.-32     	; 0x1ae0 <__fmt_a+0x570>
    1b00:	fc 01       	movw	r30, r24
    1b02:	31 97       	sbiw	r30, 0x01	; 1
    1b04:	e4 0d       	add	r30, r4
    1b06:	f5 1d       	adc	r31, r5
    1b08:	ef 28       	or	r14, r15
    1b0a:	11 f4       	brne	.+4      	; 0x1b10 <__fmt_a+0x5a0>
    1b0c:	2b e2       	ldi	r18, 0x2B	; 43
    1b0e:	01 c0       	rjmp	.+2      	; 0x1b12 <__fmt_a+0x5a2>
    1b10:	2d e2       	ldi	r18, 0x2D	; 45
    1b12:	20 83       	st	Z, r18
    1b14:	02 97       	sbiw	r24, 0x02	; 2
    1b16:	f2 01       	movw	r30, r4
    1b18:	e8 0f       	add	r30, r24
    1b1a:	f9 1f       	adc	r31, r25
    1b1c:	2a 8d       	ldd	r18, Y+26	; 0x1a
    1b1e:	3b 8d       	ldd	r19, Y+27	; 0x1b
    1b20:	2a 31       	cpi	r18, 0x1A	; 26
    1b22:	31 05       	cpc	r19, r1
    1b24:	10 f0       	brcs	.+4      	; 0x1b2a <__fmt_a+0x5ba>
    1b26:	20 e7       	ldi	r18, 0x70	; 112
    1b28:	01 c0       	rjmp	.+2      	; 0x1b2c <__fmt_a+0x5bc>
    1b2a:	20 e5       	ldi	r18, 0x50	; 80
    1b2c:	20 83       	st	Z, r18
    1b2e:	08 17       	cp	r16, r24
    1b30:	19 07       	cpc	r17, r25
    1b32:	34 f4       	brge	.+12     	; 0x1b40 <__fmt_a+0x5d0>
    1b34:	af 01       	movw	r20, r30
    1b36:	60 e8       	ldi	r22, 0x80	; 128
    1b38:	8e 81       	ldd	r24, Y+6	; 0x06
    1b3a:	9f 81       	ldd	r25, Y+7	; 0x07
    1b3c:	0e 94 59 22 	call	0x44b2	; 0x44b2 <strcpy>
    1b40:	32 01       	movw	r6, r4
    1b42:	30 e8       	ldi	r19, 0x80	; 128
    1b44:	83 2e       	mov	r8, r19
    1b46:	4d 81       	ldd	r20, Y+5	; 0x05
    1b48:	41 ff       	sbrs	r20, 1
    1b4a:	28 c0       	rjmp	.+80     	; 0x1b9c <__fmt_a+0x62c>
    1b4c:	40 fd       	sbrc	r20, 0
    1b4e:	26 c0       	rjmp	.+76     	; 0x1b9c <__fmt_a+0x62c>
    1b50:	52 e0       	ldi	r21, 0x02	; 2
    1b52:	25 1a       	sub	r2, r21
    1b54:	31 08       	sbc	r3, r1
    1b56:	12 14       	cp	r1, r2
    1b58:	13 04       	cpc	r1, r3
    1b5a:	04 f5       	brge	.+64     	; 0x1b9c <__fmt_a+0x62c>
    1b5c:	88 2d       	mov	r24, r8
    1b5e:	b3 01       	movw	r22, r6
    1b60:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    1b64:	84 0d       	add	r24, r4
    1b66:	95 1d       	adc	r25, r5
    1b68:	9c 01       	movw	r18, r24
    1b6a:	24 19       	sub	r18, r4
    1b6c:	35 09       	sbc	r19, r5
    1b6e:	4b 81       	ldd	r20, Y+3	; 0x03
    1b70:	5c 81       	ldd	r21, Y+4	; 0x04
    1b72:	24 17       	cp	r18, r20
    1b74:	35 07       	cpc	r19, r21
    1b76:	3c f0       	brlt	.+14     	; 0x1b86 <__fmt_a+0x616>
    1b78:	fc 01       	movw	r30, r24
    1b7a:	20 81       	ld	r18, Z
    1b7c:	e2 0d       	add	r30, r2
    1b7e:	f3 1d       	adc	r31, r3
    1b80:	20 83       	st	Z, r18
    1b82:	01 97       	sbiw	r24, 0x01	; 1
    1b84:	f1 cf       	rjmp	.-30     	; 0x1b68 <__fmt_a+0x5f8>
    1b86:	a1 01       	movw	r20, r2
    1b88:	60 e3       	ldi	r22, 0x30	; 48
    1b8a:	70 e0       	ldi	r23, 0x00	; 0
    1b8c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b8e:	9c 81       	ldd	r25, Y+4	; 0x04
    1b90:	84 0d       	add	r24, r4
    1b92:	95 1d       	adc	r25, r5
    1b94:	0e 94 d6 22 	call	0x45ac	; 0x45ac <memset>
    1b98:	19 86       	std	Y+9, r1	; 0x09
    1b9a:	18 86       	std	Y+8, r1	; 0x08
    1b9c:	88 2d       	mov	r24, r8
    1b9e:	b3 01       	movw	r22, r6
    1ba0:	0e 94 17 22 	call	0x442e	; 0x442e <strlen>
    1ba4:	ed 80       	ldd	r14, Y+5	; 0x05
    1ba6:	fe 8c       	ldd	r15, Y+30	; 0x1e
    1ba8:	08 85       	ldd	r16, Y+8	; 0x08
    1baa:	19 85       	ldd	r17, Y+9	; 0x09
    1bac:	9c 01       	movw	r18, r24
    1bae:	68 2d       	mov	r22, r8
    1bb0:	a3 01       	movw	r20, r6
    1bb2:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1bb4:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1bb6:	0e 94 56 15 	call	0x2aac	; 0x2aac <__pad>
    1bba:	a0 96       	adiw	r28, 0x20	; 32
    1bbc:	e2 e1       	ldi	r30, 0x12	; 18
    1bbe:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>
    1bc2:	5d 81       	ldd	r21, Y+5	; 0x05
    1bc4:	53 ff       	sbrs	r21, 3
    1bc6:	15 cd       	rjmp	.-1494   	; 0x15f2 <__fmt_a+0x82>
    1bc8:	80 e2       	ldi	r24, 0x20	; 32
    1bca:	06 cd       	rjmp	.-1524   	; 0x15d8 <__fmt_a+0x68>

Disassembly of section .text.strcpy:

000044b2 <strcpy>:
    44b2:	9a 01       	movw	r18, r20
    44b4:	46 2f       	mov	r20, r22
    44b6:	dc 01       	movw	r26, r24
    44b8:	f9 01       	movw	r30, r18
    44ba:	54 2f       	mov	r21, r20
    44bc:	0e 94 0c 23 	call	0x4618	; 0x4618 <__xload_1>
    44c0:	6d 93       	st	X+, r22
    44c2:	2f 5f       	subi	r18, 0xFF	; 255
    44c4:	3f 4f       	sbci	r19, 0xFF	; 255
    44c6:	4f 4f       	sbci	r20, 0xFF	; 255
    44c8:	61 11       	cpse	r22, r1
    44ca:	f6 cf       	rjmp	.-20     	; 0x44b8 <strcpy+0x6>
    44cc:	08 95       	ret

Disassembly of section .text.libgcc.div:

00004348 <__divmodhi4>:
    4348:	97 fb       	bst	r25, 7
    434a:	07 2e       	mov	r0, r23
    434c:	16 f4       	brtc	.+4      	; 0x4352 <__divmodhi4+0xa>
    434e:	00 94       	com	r0
    4350:	07 d0       	rcall	.+14     	; 0x4360 <__divmodhi4_neg1>
    4352:	77 fd       	sbrc	r23, 7
    4354:	09 d0       	rcall	.+18     	; 0x4368 <__divmodhi4_neg2>
    4356:	0e 94 b8 21 	call	0x4370	; 0x4370 <__udivmodhi4>
    435a:	07 fc       	sbrc	r0, 7
    435c:	05 d0       	rcall	.+10     	; 0x4368 <__divmodhi4_neg2>
    435e:	3e f4       	brtc	.+14     	; 0x436e <__divmodhi4_exit>

00004360 <__divmodhi4_neg1>:
    4360:	90 95       	com	r25
    4362:	81 95       	neg	r24
    4364:	9f 4f       	sbci	r25, 0xFF	; 255
    4366:	08 95       	ret

00004368 <__divmodhi4_neg2>:
    4368:	70 95       	com	r23
    436a:	61 95       	neg	r22
    436c:	7f 4f       	sbci	r23, 0xFF	; 255

0000436e <__divmodhi4_exit>:
    436e:	08 95       	ret

Disassembly of section .text.libgcc.div:

000044ce <__umoddi3>:
    44ce:	68 94       	set
    44d0:	01 c0       	rjmp	.+2      	; 0x44d4 <__udivdi3_umoddi3>

000044d2 <__udivdi3>:
    44d2:	e8 94       	clt

000044d4 <__udivdi3_umoddi3>:
    44d4:	8f 92       	push	r8
    44d6:	9f 92       	push	r9
    44d8:	cf 93       	push	r28
    44da:	df 93       	push	r29
    44dc:	0e 94 11 1c 	call	0x3822	; 0x3822 <__udivmod64>
    44e0:	df 91       	pop	r29
    44e2:	cf 91       	pop	r28
    44e4:	9f 90       	pop	r9
    44e6:	8f 90       	pop	r8
    44e8:	08 95       	ret

Disassembly of section .text.libgcc.div:

00003822 <__udivmod64>:
    3822:	88 24       	eor	r8, r8
    3824:	99 24       	eor	r9, r9
    3826:	f4 01       	movw	r30, r8
    3828:	e4 01       	movw	r28, r8
    382a:	b0 e4       	ldi	r27, 0x40	; 64
    382c:	9f 93       	push	r25
    382e:	aa 27       	eor	r26, r26
    3830:	9a 15       	cp	r25, r10
    3832:	8b 04       	cpc	r8, r11
    3834:	9c 04       	cpc	r9, r12
    3836:	ed 05       	cpc	r30, r13
    3838:	fe 05       	cpc	r31, r14
    383a:	cf 05       	cpc	r28, r15
    383c:	d0 07       	cpc	r29, r16
    383e:	a1 07       	cpc	r26, r17
    3840:	98 f4       	brcc	.+38     	; 0x3868 <__udivmod64+0x46>
    3842:	ad 2f       	mov	r26, r29
    3844:	dc 2f       	mov	r29, r28
    3846:	cf 2f       	mov	r28, r31
    3848:	fe 2f       	mov	r31, r30
    384a:	e9 2d       	mov	r30, r9
    384c:	98 2c       	mov	r9, r8
    384e:	89 2e       	mov	r8, r25
    3850:	98 2f       	mov	r25, r24
    3852:	87 2f       	mov	r24, r23
    3854:	76 2f       	mov	r23, r22
    3856:	65 2f       	mov	r22, r21
    3858:	54 2f       	mov	r21, r20
    385a:	43 2f       	mov	r20, r19
    385c:	32 2f       	mov	r19, r18
    385e:	22 27       	eor	r18, r18
    3860:	b8 50       	subi	r27, 0x08	; 8
    3862:	31 f7       	brne	.-52     	; 0x3830 <__udivmod64+0xe>
    3864:	bf 91       	pop	r27
    3866:	27 c0       	rjmp	.+78     	; 0x38b6 <__udivmod64+0x94>
    3868:	1b 2e       	mov	r1, r27
    386a:	bf 91       	pop	r27
    386c:	bb 27       	eor	r27, r27
    386e:	22 0f       	add	r18, r18
    3870:	33 1f       	adc	r19, r19
    3872:	44 1f       	adc	r20, r20
    3874:	55 1f       	adc	r21, r21
    3876:	66 1f       	adc	r22, r22
    3878:	77 1f       	adc	r23, r23
    387a:	88 1f       	adc	r24, r24
    387c:	99 1f       	adc	r25, r25
    387e:	88 1c       	adc	r8, r8
    3880:	99 1c       	adc	r9, r9
    3882:	ee 1f       	adc	r30, r30
    3884:	ff 1f       	adc	r31, r31
    3886:	cc 1f       	adc	r28, r28
    3888:	dd 1f       	adc	r29, r29
    388a:	aa 1f       	adc	r26, r26
    388c:	bb 1f       	adc	r27, r27
    388e:	8a 14       	cp	r8, r10
    3890:	9b 04       	cpc	r9, r11
    3892:	ec 05       	cpc	r30, r12
    3894:	fd 05       	cpc	r31, r13
    3896:	ce 05       	cpc	r28, r14
    3898:	df 05       	cpc	r29, r15
    389a:	a0 07       	cpc	r26, r16
    389c:	b1 07       	cpc	r27, r17
    389e:	48 f0       	brcs	.+18     	; 0x38b2 <__udivmod64+0x90>
    38a0:	8a 18       	sub	r8, r10
    38a2:	9b 08       	sbc	r9, r11
    38a4:	ec 09       	sbc	r30, r12
    38a6:	fd 09       	sbc	r31, r13
    38a8:	ce 09       	sbc	r28, r14
    38aa:	df 09       	sbc	r29, r15
    38ac:	a0 0b       	sbc	r26, r16
    38ae:	b1 0b       	sbc	r27, r17
    38b0:	21 60       	ori	r18, 0x01	; 1
    38b2:	1a 94       	dec	r1
    38b4:	e1 f6       	brne	.-72     	; 0x386e <__udivmod64+0x4c>
    38b6:	2e f4       	brtc	.+10     	; 0x38c2 <__udivmod64+0xa0>
    38b8:	94 01       	movw	r18, r8
    38ba:	af 01       	movw	r20, r30
    38bc:	be 01       	movw	r22, r28
    38be:	cd 01       	movw	r24, r26
    38c0:	00 0c       	add	r0, r0
    38c2:	08 95       	ret

Disassembly of section .text.libgcc:

00004474 <__negdi2>:
    4474:	60 95       	com	r22
    4476:	70 95       	com	r23
    4478:	80 95       	com	r24
    447a:	90 95       	com	r25
    447c:	30 95       	com	r19
    447e:	40 95       	com	r20
    4480:	50 95       	com	r21
    4482:	21 95       	neg	r18
    4484:	3f 4f       	sbci	r19, 0xFF	; 255
    4486:	4f 4f       	sbci	r20, 0xFF	; 255
    4488:	5f 4f       	sbci	r21, 0xFF	; 255
    448a:	6f 4f       	sbci	r22, 0xFF	; 255
    448c:	7f 4f       	sbci	r23, 0xFF	; 255
    448e:	8f 4f       	sbci	r24, 0xFF	; 255
    4490:	9f 4f       	sbci	r25, 0xFF	; 255
    4492:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

000041e0 <__prologue_saves__>:
    41e0:	2f 92       	push	r2
    41e2:	3f 92       	push	r3
    41e4:	4f 92       	push	r4
    41e6:	5f 92       	push	r5
    41e8:	6f 92       	push	r6
    41ea:	7f 92       	push	r7
    41ec:	8f 92       	push	r8
    41ee:	9f 92       	push	r9
    41f0:	af 92       	push	r10
    41f2:	bf 92       	push	r11
    41f4:	cf 92       	push	r12
    41f6:	df 92       	push	r13
    41f8:	ef 92       	push	r14
    41fa:	ff 92       	push	r15
    41fc:	0f 93       	push	r16
    41fe:	1f 93       	push	r17
    4200:	cf 93       	push	r28
    4202:	df 93       	push	r29
    4204:	cd b7       	in	r28, 0x3d	; 61
    4206:	de b7       	in	r29, 0x3e	; 62
    4208:	ca 1b       	sub	r28, r26
    420a:	db 0b       	sbc	r29, r27
    420c:	0f b6       	in	r0, 0x3f	; 63
    420e:	f8 94       	cli
    4210:	de bf       	out	0x3e, r29	; 62
    4212:	0f be       	out	0x3f, r0	; 63
    4214:	cd bf       	out	0x3d, r28	; 61
    4216:	19 94       	eijmp

Disassembly of section .text.libgcc.prologue:

0000424e <__epilogue_restores__>:
    424e:	2a 88       	ldd	r2, Y+18	; 0x12
    4250:	39 88       	ldd	r3, Y+17	; 0x11
    4252:	48 88       	ldd	r4, Y+16	; 0x10
    4254:	5f 84       	ldd	r5, Y+15	; 0x0f
    4256:	6e 84       	ldd	r6, Y+14	; 0x0e
    4258:	7d 84       	ldd	r7, Y+13	; 0x0d
    425a:	8c 84       	ldd	r8, Y+12	; 0x0c
    425c:	9b 84       	ldd	r9, Y+11	; 0x0b
    425e:	aa 84       	ldd	r10, Y+10	; 0x0a
    4260:	b9 84       	ldd	r11, Y+9	; 0x09
    4262:	c8 84       	ldd	r12, Y+8	; 0x08
    4264:	df 80       	ldd	r13, Y+7	; 0x07
    4266:	ee 80       	ldd	r14, Y+6	; 0x06
    4268:	fd 80       	ldd	r15, Y+5	; 0x05
    426a:	0c 81       	ldd	r16, Y+4	; 0x04
    426c:	1b 81       	ldd	r17, Y+3	; 0x03
    426e:	aa 81       	ldd	r26, Y+2	; 0x02
    4270:	b9 81       	ldd	r27, Y+1	; 0x01
    4272:	ce 0f       	add	r28, r30
    4274:	d1 1d       	adc	r29, r1
    4276:	0f b6       	in	r0, 0x3f	; 63
    4278:	f8 94       	cli
    427a:	de bf       	out	0x3e, r29	; 62
    427c:	0f be       	out	0x3f, r0	; 63
    427e:	cd bf       	out	0x3d, r28	; 61
    4280:	ed 01       	movw	r28, r26
    4282:	08 95       	ret

Disassembly of section .text.libgcc:

000044ea <__movmemx_qi>:
    44ea:	99 27       	eor	r25, r25

000044ec <__movmemx_hi>:
    44ec:	77 fd       	sbrc	r23, 7
    44ee:	06 c0       	rjmp	.+12     	; 0x44fc <__movmemx_hi+0x10>
    44f0:	7b bf       	out	0x3b, r23	; 59
    44f2:	07 90       	elpm	r0, Z+
    44f4:	0d 92       	st	X+, r0
    44f6:	01 97       	sbiw	r24, 0x01	; 1
    44f8:	e1 f7       	brne	.-8      	; 0x44f2 <__movmemx_hi+0x6>
    44fa:	08 95       	ret
    44fc:	01 90       	ld	r0, Z+
    44fe:	0d 92       	st	X+, r0
    4500:	01 97       	sbiw	r24, 0x01	; 1
    4502:	e1 f7       	brne	.-8      	; 0x44fc <__movmemx_hi+0x10>
    4504:	08 95       	ret

Disassembly of section .text.libgcc.builtins:

0000416c <__ashrdi3>:
    416c:	97 fb       	bst	r25, 7
    416e:	10 f8       	bld	r1, 0

00004170 <__lshrdi3>:
    4170:	16 94       	lsr	r1
    4172:	00 08       	sbc	r0, r0
    4174:	0f 93       	push	r16
    4176:	08 30       	cpi	r16, 0x08	; 8
    4178:	98 f0       	brcs	.+38     	; 0x41a0 <__lshrdi3+0x30>
    417a:	08 50       	subi	r16, 0x08	; 8
    417c:	23 2f       	mov	r18, r19
    417e:	34 2f       	mov	r19, r20
    4180:	45 2f       	mov	r20, r21
    4182:	56 2f       	mov	r21, r22
    4184:	67 2f       	mov	r22, r23
    4186:	78 2f       	mov	r23, r24
    4188:	89 2f       	mov	r24, r25
    418a:	90 2d       	mov	r25, r0
    418c:	f4 cf       	rjmp	.-24     	; 0x4176 <__lshrdi3+0x6>
    418e:	05 94       	asr	r0
    4190:	97 95       	ror	r25
    4192:	87 95       	ror	r24
    4194:	77 95       	ror	r23
    4196:	67 95       	ror	r22
    4198:	57 95       	ror	r21
    419a:	47 95       	ror	r20
    419c:	37 95       	ror	r19
    419e:	27 95       	ror	r18
    41a0:	0a 95       	dec	r16
    41a2:	aa f7       	brpl	.-22     	; 0x418e <__lshrdi3+0x1e>
    41a4:	0f 91       	pop	r16
    41a6:	08 95       	ret

Disassembly of section .text.libgcc:

00004550 <__cmpdi2_s8>:
    4550:	00 24       	eor	r0, r0
    4552:	a7 fd       	sbrc	r26, 7
    4554:	00 94       	com	r0
    4556:	2a 17       	cp	r18, r26
    4558:	30 05       	cpc	r19, r0
    455a:	40 05       	cpc	r20, r0
    455c:	50 05       	cpc	r21, r0
    455e:	60 05       	cpc	r22, r0
    4560:	70 05       	cpc	r23, r0
    4562:	80 05       	cpc	r24, r0
    4564:	90 05       	cpc	r25, r0
    4566:	08 95       	ret

Disassembly of section .text.libgcc.div:

00004370 <__udivmodhi4>:
    4370:	aa 1b       	sub	r26, r26
    4372:	bb 1b       	sub	r27, r27
    4374:	51 e1       	ldi	r21, 0x11	; 17
    4376:	07 c0       	rjmp	.+14     	; 0x4386 <__udivmodhi4_ep>

00004378 <__udivmodhi4_loop>:
    4378:	aa 1f       	adc	r26, r26
    437a:	bb 1f       	adc	r27, r27
    437c:	a6 17       	cp	r26, r22
    437e:	b7 07       	cpc	r27, r23
    4380:	10 f0       	brcs	.+4      	; 0x4386 <__udivmodhi4_ep>
    4382:	a6 1b       	sub	r26, r22
    4384:	b7 0b       	sbc	r27, r23

00004386 <__udivmodhi4_ep>:
    4386:	88 1f       	adc	r24, r24
    4388:	99 1f       	adc	r25, r25
    438a:	5a 95       	dec	r21
    438c:	a9 f7       	brne	.-22     	; 0x4378 <__udivmodhi4_loop>
    438e:	80 95       	com	r24
    4390:	90 95       	com	r25
    4392:	bc 01       	movw	r22, r24
    4394:	cd 01       	movw	r24, r26
    4396:	08 95       	ret

Disassembly of section .text:

00004626 <__subsf3>:
    4626:	50 58       	subi	r21, 0x80	; 128

00004628 <__addsf3>:
    4628:	bb 27       	eor	r27, r27
    462a:	aa 27       	eor	r26, r26
    462c:	0e 94 8c 17 	call	0x2f18	; 0x2f18 <__addsf3x>
    4630:	0c 94 29 22 	jmp	0x4452	; 0x4452 <__fp_round>

Disassembly of section .text:

00002f18 <__addsf3x>:
    2f18:	11 c0       	rjmp	.+34     	; 0x2f3c <__addsf3x+0x24>
    2f1a:	0e 94 21 23 	call	0x4642	; 0x4642 <__fp_pscA>
    2f1e:	38 f0       	brcs	.+14     	; 0x2f2e <__addsf3x+0x16>
    2f20:	0e 94 28 23 	call	0x4650	; 0x4650 <__fp_pscB>
    2f24:	20 f0       	brcs	.+8      	; 0x2f2e <__addsf3x+0x16>
    2f26:	39 f4       	brne	.+14     	; 0x2f36 <__addsf3x+0x1e>
    2f28:	9f 3f       	cpi	r25, 0xFF	; 255
    2f2a:	19 f4       	brne	.+6      	; 0x2f32 <__addsf3x+0x1a>
    2f2c:	26 f4       	brtc	.+8      	; 0x2f36 <__addsf3x+0x1e>
    2f2e:	0c 94 56 23 	jmp	0x46ac	; 0x46ac <__fp_nan>
    2f32:	0e f4       	brtc	.+2      	; 0x2f36 <__addsf3x+0x1e>
    2f34:	e0 95       	com	r30
    2f36:	e7 fb       	bst	r30, 7
    2f38:	0c 94 36 23 	jmp	0x466c	; 0x466c <__fp_inf>
    2f3c:	e9 2f       	mov	r30, r25
    2f3e:	0e 94 74 20 	call	0x40e8	; 0x40e8 <__fp_split3>
    2f42:	58 f3       	brcs	.-42     	; 0x2f1a <__addsf3x+0x2>
    2f44:	ba 17       	cp	r27, r26
    2f46:	62 07       	cpc	r22, r18
    2f48:	73 07       	cpc	r23, r19
    2f4a:	84 07       	cpc	r24, r20
    2f4c:	95 07       	cpc	r25, r21
    2f4e:	20 f0       	brcs	.+8      	; 0x2f58 <__addsf3x+0x40>
    2f50:	79 f4       	brne	.+30     	; 0x2f70 <__addsf3x+0x58>
    2f52:	a6 f5       	brtc	.+104    	; 0x2fbc <__addsf3x+0xa4>
    2f54:	0c 94 2f 23 	jmp	0x465e	; 0x465e <__fp_zero>
    2f58:	0e f4       	brtc	.+2      	; 0x2f5c <__addsf3x+0x44>
    2f5a:	e0 95       	com	r30
    2f5c:	0b 2e       	mov	r0, r27
    2f5e:	ba 2f       	mov	r27, r26
    2f60:	a0 2d       	mov	r26, r0
    2f62:	0b 01       	movw	r0, r22
    2f64:	b9 01       	movw	r22, r18
    2f66:	90 01       	movw	r18, r0
    2f68:	0c 01       	movw	r0, r24
    2f6a:	ca 01       	movw	r24, r20
    2f6c:	a0 01       	movw	r20, r0
    2f6e:	11 24       	eor	r1, r1
    2f70:	ff 27       	eor	r31, r31
    2f72:	59 1b       	sub	r21, r25
    2f74:	99 f0       	breq	.+38     	; 0x2f9c <__addsf3x+0x84>
    2f76:	59 3f       	cpi	r21, 0xF9	; 249
    2f78:	50 f4       	brcc	.+20     	; 0x2f8e <__addsf3x+0x76>
    2f7a:	50 3e       	cpi	r21, 0xE0	; 224
    2f7c:	68 f1       	brcs	.+90     	; 0x2fd8 <__addsf3x+0xc0>
    2f7e:	1a 16       	cp	r1, r26
    2f80:	f0 40       	sbci	r31, 0x00	; 0
    2f82:	a2 2f       	mov	r26, r18
    2f84:	23 2f       	mov	r18, r19
    2f86:	34 2f       	mov	r19, r20
    2f88:	44 27       	eor	r20, r20
    2f8a:	58 5f       	subi	r21, 0xF8	; 248
    2f8c:	f3 cf       	rjmp	.-26     	; 0x2f74 <__addsf3x+0x5c>
    2f8e:	46 95       	lsr	r20
    2f90:	37 95       	ror	r19
    2f92:	27 95       	ror	r18
    2f94:	a7 95       	ror	r26
    2f96:	f0 40       	sbci	r31, 0x00	; 0
    2f98:	53 95       	inc	r21
    2f9a:	c9 f7       	brne	.-14     	; 0x2f8e <__addsf3x+0x76>
    2f9c:	7e f4       	brtc	.+30     	; 0x2fbc <__addsf3x+0xa4>
    2f9e:	1f 16       	cp	r1, r31
    2fa0:	ba 0b       	sbc	r27, r26
    2fa2:	62 0b       	sbc	r22, r18
    2fa4:	73 0b       	sbc	r23, r19
    2fa6:	84 0b       	sbc	r24, r20
    2fa8:	ba f0       	brmi	.+46     	; 0x2fd8 <__addsf3x+0xc0>
    2faa:	91 50       	subi	r25, 0x01	; 1
    2fac:	a1 f0       	breq	.+40     	; 0x2fd6 <__addsf3x+0xbe>
    2fae:	ff 0f       	add	r31, r31
    2fb0:	bb 1f       	adc	r27, r27
    2fb2:	66 1f       	adc	r22, r22
    2fb4:	77 1f       	adc	r23, r23
    2fb6:	88 1f       	adc	r24, r24
    2fb8:	c2 f7       	brpl	.-16     	; 0x2faa <__addsf3x+0x92>
    2fba:	0e c0       	rjmp	.+28     	; 0x2fd8 <__addsf3x+0xc0>
    2fbc:	ba 0f       	add	r27, r26
    2fbe:	62 1f       	adc	r22, r18
    2fc0:	73 1f       	adc	r23, r19
    2fc2:	84 1f       	adc	r24, r20
    2fc4:	48 f4       	brcc	.+18     	; 0x2fd8 <__addsf3x+0xc0>
    2fc6:	87 95       	ror	r24
    2fc8:	77 95       	ror	r23
    2fca:	67 95       	ror	r22
    2fcc:	b7 95       	ror	r27
    2fce:	f7 95       	ror	r31
    2fd0:	9e 3f       	cpi	r25, 0xFE	; 254
    2fd2:	08 f0       	brcs	.+2      	; 0x2fd6 <__addsf3x+0xbe>
    2fd4:	b0 cf       	rjmp	.-160    	; 0x2f36 <__addsf3x+0x1e>
    2fd6:	93 95       	inc	r25
    2fd8:	88 0f       	add	r24, r24
    2fda:	08 f0       	brcs	.+2      	; 0x2fde <__addsf3x+0xc6>
    2fdc:	99 27       	eor	r25, r25
    2fde:	ee 0f       	add	r30, r30
    2fe0:	97 95       	ror	r25
    2fe2:	87 95       	ror	r24
    2fe4:	08 95       	ret

Disassembly of section .text:

00004678 <__cmpsf2>:
    4678:	0e 94 0c 20 	call	0x4018	; 0x4018 <__fp_cmp>
    467c:	08 f4       	brcc	.+2      	; 0x4680 <__cmpsf2+0x8>
    467e:	81 e0       	ldi	r24, 0x01	; 1
    4680:	08 95       	ret

Disassembly of section .text:

0000469c <__divsf3>:
    469c:	0e 94 dd 15 	call	0x2bba	; 0x2bba <__divsf3x>
    46a0:	0c 94 29 22 	jmp	0x4452	; 0x4452 <__fp_round>

Disassembly of section .text:

00002bba <__divsf3x>:
    2bba:	10 c0       	rjmp	.+32     	; 0x2bdc <__divsf3x+0x22>
    2bbc:	0e 94 28 23 	call	0x4650	; 0x4650 <__fp_pscB>
    2bc0:	58 f0       	brcs	.+22     	; 0x2bd8 <__divsf3x+0x1e>
    2bc2:	0e 94 21 23 	call	0x4642	; 0x4642 <__fp_pscA>
    2bc6:	40 f0       	brcs	.+16     	; 0x2bd8 <__divsf3x+0x1e>
    2bc8:	29 f4       	brne	.+10     	; 0x2bd4 <__divsf3x+0x1a>
    2bca:	5f 3f       	cpi	r21, 0xFF	; 255
    2bcc:	29 f0       	breq	.+10     	; 0x2bd8 <__divsf3x+0x1e>
    2bce:	0c 94 36 23 	jmp	0x466c	; 0x466c <__fp_inf>
    2bd2:	51 11       	cpse	r21, r1
    2bd4:	0c 94 30 23 	jmp	0x4660	; 0x4660 <__fp_szero>
    2bd8:	0c 94 56 23 	jmp	0x46ac	; 0x46ac <__fp_nan>
    2bdc:	0e 94 74 20 	call	0x40e8	; 0x40e8 <__fp_split3>
    2be0:	68 f3       	brcs	.-38     	; 0x2bbc <__divsf3x+0x2>

00002be2 <__divsf3_pse>:
    2be2:	99 23       	and	r25, r25
    2be4:	b1 f3       	breq	.-20     	; 0x2bd2 <__divsf3x+0x18>
    2be6:	55 23       	and	r21, r21
    2be8:	91 f3       	breq	.-28     	; 0x2bce <__divsf3x+0x14>
    2bea:	95 1b       	sub	r25, r21
    2bec:	55 0b       	sbc	r21, r21
    2bee:	bb 27       	eor	r27, r27
    2bf0:	aa 27       	eor	r26, r26
    2bf2:	62 17       	cp	r22, r18
    2bf4:	73 07       	cpc	r23, r19
    2bf6:	84 07       	cpc	r24, r20
    2bf8:	38 f0       	brcs	.+14     	; 0x2c08 <__divsf3_pse+0x26>
    2bfa:	9f 5f       	subi	r25, 0xFF	; 255
    2bfc:	5f 4f       	sbci	r21, 0xFF	; 255
    2bfe:	22 0f       	add	r18, r18
    2c00:	33 1f       	adc	r19, r19
    2c02:	44 1f       	adc	r20, r20
    2c04:	aa 1f       	adc	r26, r26
    2c06:	a9 f3       	breq	.-22     	; 0x2bf2 <__divsf3_pse+0x10>
    2c08:	35 d0       	rcall	.+106    	; 0x2c74 <__divsf3_pse+0x92>
    2c0a:	0e 2e       	mov	r0, r30
    2c0c:	3a f0       	brmi	.+14     	; 0x2c1c <__divsf3_pse+0x3a>
    2c0e:	e0 e8       	ldi	r30, 0x80	; 128
    2c10:	32 d0       	rcall	.+100    	; 0x2c76 <__divsf3_pse+0x94>
    2c12:	91 50       	subi	r25, 0x01	; 1
    2c14:	50 40       	sbci	r21, 0x00	; 0
    2c16:	e6 95       	lsr	r30
    2c18:	00 1c       	adc	r0, r0
    2c1a:	ca f7       	brpl	.-14     	; 0x2c0e <__divsf3_pse+0x2c>
    2c1c:	2b d0       	rcall	.+86     	; 0x2c74 <__divsf3_pse+0x92>
    2c1e:	fe 2f       	mov	r31, r30
    2c20:	29 d0       	rcall	.+82     	; 0x2c74 <__divsf3_pse+0x92>
    2c22:	66 0f       	add	r22, r22
    2c24:	77 1f       	adc	r23, r23
    2c26:	88 1f       	adc	r24, r24
    2c28:	bb 1f       	adc	r27, r27
    2c2a:	26 17       	cp	r18, r22
    2c2c:	37 07       	cpc	r19, r23
    2c2e:	48 07       	cpc	r20, r24
    2c30:	ab 07       	cpc	r26, r27
    2c32:	b0 e8       	ldi	r27, 0x80	; 128
    2c34:	09 f0       	breq	.+2      	; 0x2c38 <__divsf3_pse+0x56>
    2c36:	bb 0b       	sbc	r27, r27
    2c38:	80 2d       	mov	r24, r0
    2c3a:	bf 01       	movw	r22, r30
    2c3c:	ff 27       	eor	r31, r31
    2c3e:	93 58       	subi	r25, 0x83	; 131
    2c40:	5f 4f       	sbci	r21, 0xFF	; 255
    2c42:	3a f0       	brmi	.+14     	; 0x2c52 <__divsf3_pse+0x70>
    2c44:	9e 3f       	cpi	r25, 0xFE	; 254
    2c46:	51 05       	cpc	r21, r1
    2c48:	78 f0       	brcs	.+30     	; 0x2c68 <__divsf3_pse+0x86>
    2c4a:	0c 94 36 23 	jmp	0x466c	; 0x466c <__fp_inf>
    2c4e:	0c 94 30 23 	jmp	0x4660	; 0x4660 <__fp_szero>
    2c52:	5f 3f       	cpi	r21, 0xFF	; 255
    2c54:	e4 f3       	brlt	.-8      	; 0x2c4e <__divsf3_pse+0x6c>
    2c56:	98 3e       	cpi	r25, 0xE8	; 232
    2c58:	d4 f3       	brlt	.-12     	; 0x2c4e <__divsf3_pse+0x6c>
    2c5a:	86 95       	lsr	r24
    2c5c:	77 95       	ror	r23
    2c5e:	67 95       	ror	r22
    2c60:	b7 95       	ror	r27
    2c62:	f7 95       	ror	r31
    2c64:	9f 5f       	subi	r25, 0xFF	; 255
    2c66:	c9 f7       	brne	.-14     	; 0x2c5a <__divsf3_pse+0x78>
    2c68:	88 0f       	add	r24, r24
    2c6a:	91 1d       	adc	r25, r1
    2c6c:	96 95       	lsr	r25
    2c6e:	87 95       	ror	r24
    2c70:	97 f9       	bld	r25, 7
    2c72:	08 95       	ret
    2c74:	e1 e0       	ldi	r30, 0x01	; 1
    2c76:	66 0f       	add	r22, r22
    2c78:	77 1f       	adc	r23, r23
    2c7a:	88 1f       	adc	r24, r24
    2c7c:	bb 1f       	adc	r27, r27
    2c7e:	62 17       	cp	r22, r18
    2c80:	73 07       	cpc	r23, r19
    2c82:	84 07       	cpc	r24, r20
    2c84:	ba 07       	cpc	r27, r26
    2c86:	20 f0       	brcs	.+8      	; 0x2c90 <__divsf3_pse+0xae>
    2c88:	62 1b       	sub	r22, r18
    2c8a:	73 0b       	sbc	r23, r19
    2c8c:	84 0b       	sbc	r24, r20
    2c8e:	ba 0b       	sbc	r27, r26
    2c90:	ee 1f       	adc	r30, r30
    2c92:	88 f7       	brcc	.-30     	; 0x2c76 <__divsf3_pse+0x94>
    2c94:	e0 95       	com	r30
    2c96:	08 95       	ret

Disassembly of section .text:

00004634 <__fixsfsi>:
    4634:	0e 94 3a 1f 	call	0x3e74	; 0x3e74 <__fixunssfsi>
    4638:	68 94       	set
    463a:	b1 11       	cpse	r27, r1
    463c:	0c 94 30 23 	jmp	0x4660	; 0x4660 <__fp_szero>
    4640:	08 95       	ret

Disassembly of section .text:

00003e74 <__fixunssfsi>:
    3e74:	0e 94 7c 20 	call	0x40f8	; 0x40f8 <__fp_splitA>
    3e78:	88 f0       	brcs	.+34     	; 0x3e9c <__fixunssfsi+0x28>
    3e7a:	9f 57       	subi	r25, 0x7F	; 127
    3e7c:	98 f0       	brcs	.+38     	; 0x3ea4 <__fixunssfsi+0x30>
    3e7e:	b9 2f       	mov	r27, r25
    3e80:	99 27       	eor	r25, r25
    3e82:	b7 51       	subi	r27, 0x17	; 23
    3e84:	b0 f0       	brcs	.+44     	; 0x3eb2 <__fixunssfsi+0x3e>
    3e86:	e1 f0       	breq	.+56     	; 0x3ec0 <__fixunssfsi+0x4c>
    3e88:	66 0f       	add	r22, r22
    3e8a:	77 1f       	adc	r23, r23
    3e8c:	88 1f       	adc	r24, r24
    3e8e:	99 1f       	adc	r25, r25
    3e90:	1a f0       	brmi	.+6      	; 0x3e98 <__fixunssfsi+0x24>
    3e92:	ba 95       	dec	r27
    3e94:	c9 f7       	brne	.-14     	; 0x3e88 <__fixunssfsi+0x14>
    3e96:	14 c0       	rjmp	.+40     	; 0x3ec0 <__fixunssfsi+0x4c>
    3e98:	b1 30       	cpi	r27, 0x01	; 1
    3e9a:	91 f0       	breq	.+36     	; 0x3ec0 <__fixunssfsi+0x4c>
    3e9c:	0e 94 2f 23 	call	0x465e	; 0x465e <__fp_zero>
    3ea0:	b1 e0       	ldi	r27, 0x01	; 1
    3ea2:	08 95       	ret
    3ea4:	0c 94 2f 23 	jmp	0x465e	; 0x465e <__fp_zero>
    3ea8:	67 2f       	mov	r22, r23
    3eaa:	78 2f       	mov	r23, r24
    3eac:	88 27       	eor	r24, r24
    3eae:	b8 5f       	subi	r27, 0xF8	; 248
    3eb0:	39 f0       	breq	.+14     	; 0x3ec0 <__fixunssfsi+0x4c>
    3eb2:	b9 3f       	cpi	r27, 0xF9	; 249
    3eb4:	cc f3       	brlt	.-14     	; 0x3ea8 <__fixunssfsi+0x34>
    3eb6:	86 95       	lsr	r24
    3eb8:	77 95       	ror	r23
    3eba:	67 95       	ror	r22
    3ebc:	b3 95       	inc	r27
    3ebe:	d9 f7       	brne	.-10     	; 0x3eb6 <__fixunssfsi+0x42>
    3ec0:	3e f4       	brtc	.+14     	; 0x3ed0 <__fixunssfsi+0x5c>
    3ec2:	90 95       	com	r25
    3ec4:	80 95       	com	r24
    3ec6:	70 95       	com	r23
    3ec8:	61 95       	neg	r22
    3eca:	7f 4f       	sbci	r23, 0xFF	; 255
    3ecc:	8f 4f       	sbci	r24, 0xFF	; 255
    3ece:	9f 4f       	sbci	r25, 0xFF	; 255
    3ed0:	08 95       	ret

Disassembly of section .text:

00004018 <__fp_cmp>:
    4018:	99 0f       	add	r25, r25
    401a:	00 08       	sbc	r0, r0
    401c:	55 0f       	add	r21, r21
    401e:	aa 0b       	sbc	r26, r26
    4020:	e0 e8       	ldi	r30, 0x80	; 128
    4022:	fe ef       	ldi	r31, 0xFE	; 254
    4024:	16 16       	cp	r1, r22
    4026:	17 06       	cpc	r1, r23
    4028:	e8 07       	cpc	r30, r24
    402a:	f9 07       	cpc	r31, r25
    402c:	c0 f0       	brcs	.+48     	; 0x405e <__fp_cmp+0x46>
    402e:	12 16       	cp	r1, r18
    4030:	13 06       	cpc	r1, r19
    4032:	e4 07       	cpc	r30, r20
    4034:	f5 07       	cpc	r31, r21
    4036:	98 f0       	brcs	.+38     	; 0x405e <__fp_cmp+0x46>
    4038:	62 1b       	sub	r22, r18
    403a:	73 0b       	sbc	r23, r19
    403c:	84 0b       	sbc	r24, r20
    403e:	95 0b       	sbc	r25, r21
    4040:	39 f4       	brne	.+14     	; 0x4050 <__fp_cmp+0x38>
    4042:	0a 26       	eor	r0, r26
    4044:	61 f0       	breq	.+24     	; 0x405e <__fp_cmp+0x46>
    4046:	23 2b       	or	r18, r19
    4048:	24 2b       	or	r18, r20
    404a:	25 2b       	or	r18, r21
    404c:	21 f4       	brne	.+8      	; 0x4056 <__fp_cmp+0x3e>
    404e:	08 95       	ret
    4050:	0a 26       	eor	r0, r26
    4052:	09 f4       	brne	.+2      	; 0x4056 <__fp_cmp+0x3e>
    4054:	a1 40       	sbci	r26, 0x01	; 1
    4056:	a6 95       	lsr	r26
    4058:	8f ef       	ldi	r24, 0xFF	; 255
    405a:	81 1d       	adc	r24, r1
    405c:	81 1d       	adc	r24, r1
    405e:	08 95       	ret

Disassembly of section .text:

0000466c <__fp_inf>:
    466c:	97 f9       	bld	r25, 7
    466e:	9f 67       	ori	r25, 0x7F	; 127
    4670:	80 e8       	ldi	r24, 0x80	; 128
    4672:	70 e0       	ldi	r23, 0x00	; 0
    4674:	60 e0       	ldi	r22, 0x00	; 0
    4676:	08 95       	ret

Disassembly of section .text:

000046ac <__fp_nan>:
    46ac:	9f ef       	ldi	r25, 0xFF	; 255
    46ae:	80 ec       	ldi	r24, 0xC0	; 192
    46b0:	08 95       	ret

Disassembly of section .text:

00004642 <__fp_pscA>:
    4642:	00 24       	eor	r0, r0
    4644:	0a 94       	dec	r0
    4646:	16 16       	cp	r1, r22
    4648:	17 06       	cpc	r1, r23
    464a:	18 06       	cpc	r1, r24
    464c:	09 06       	cpc	r0, r25
    464e:	08 95       	ret

Disassembly of section .text:

00004650 <__fp_pscB>:
    4650:	00 24       	eor	r0, r0
    4652:	0a 94       	dec	r0
    4654:	12 16       	cp	r1, r18
    4656:	13 06       	cpc	r1, r19
    4658:	14 06       	cpc	r1, r20
    465a:	05 06       	cpc	r0, r21
    465c:	08 95       	ret

Disassembly of section .text:

00004452 <__fp_round>:
    4452:	09 2e       	mov	r0, r25
    4454:	03 94       	inc	r0
    4456:	00 0c       	add	r0, r0
    4458:	11 f4       	brne	.+4      	; 0x445e <__fp_round+0xc>
    445a:	88 23       	and	r24, r24
    445c:	52 f0       	brmi	.+20     	; 0x4472 <__fp_round+0x20>
    445e:	bb 0f       	add	r27, r27
    4460:	40 f4       	brcc	.+16     	; 0x4472 <__fp_round+0x20>
    4462:	bf 2b       	or	r27, r31
    4464:	11 f4       	brne	.+4      	; 0x446a <__fp_round+0x18>
    4466:	60 ff       	sbrs	r22, 0
    4468:	04 c0       	rjmp	.+8      	; 0x4472 <__fp_round+0x20>
    446a:	6f 5f       	subi	r22, 0xFF	; 255
    446c:	7f 4f       	sbci	r23, 0xFF	; 255
    446e:	8f 4f       	sbci	r24, 0xFF	; 255
    4470:	9f 4f       	sbci	r25, 0xFF	; 255
    4472:	08 95       	ret

Disassembly of section .text:

000040e8 <__fp_split3>:
    40e8:	57 fd       	sbrc	r21, 7
    40ea:	90 58       	subi	r25, 0x80	; 128
    40ec:	44 0f       	add	r20, r20
    40ee:	55 1f       	adc	r21, r21
    40f0:	59 f0       	breq	.+22     	; 0x4108 <__fp_splitA+0x10>
    40f2:	5f 3f       	cpi	r21, 0xFF	; 255
    40f4:	71 f0       	breq	.+28     	; 0x4112 <__fp_splitA+0x1a>
    40f6:	47 95       	ror	r20

000040f8 <__fp_splitA>:
    40f8:	88 0f       	add	r24, r24
    40fa:	97 fb       	bst	r25, 7
    40fc:	99 1f       	adc	r25, r25
    40fe:	61 f0       	breq	.+24     	; 0x4118 <__fp_splitA+0x20>
    4100:	9f 3f       	cpi	r25, 0xFF	; 255
    4102:	79 f0       	breq	.+30     	; 0x4122 <__fp_splitA+0x2a>
    4104:	87 95       	ror	r24
    4106:	08 95       	ret
    4108:	12 16       	cp	r1, r18
    410a:	13 06       	cpc	r1, r19
    410c:	14 06       	cpc	r1, r20
    410e:	55 1f       	adc	r21, r21
    4110:	f2 cf       	rjmp	.-28     	; 0x40f6 <__fp_split3+0xe>
    4112:	46 95       	lsr	r20
    4114:	f1 df       	rcall	.-30     	; 0x40f8 <__fp_splitA>
    4116:	08 c0       	rjmp	.+16     	; 0x4128 <__fp_splitA+0x30>
    4118:	16 16       	cp	r1, r22
    411a:	17 06       	cpc	r1, r23
    411c:	18 06       	cpc	r1, r24
    411e:	99 1f       	adc	r25, r25
    4120:	f1 cf       	rjmp	.-30     	; 0x4104 <__fp_splitA+0xc>
    4122:	86 95       	lsr	r24
    4124:	71 05       	cpc	r23, r1
    4126:	61 05       	cpc	r22, r1
    4128:	08 94       	sec
    412a:	08 95       	ret

Disassembly of section .text:

0000465e <__fp_zero>:
    465e:	e8 94       	clt

00004660 <__fp_szero>:
    4660:	bb 27       	eor	r27, r27
    4662:	66 27       	eor	r22, r22
    4664:	77 27       	eor	r23, r23
    4666:	cb 01       	movw	r24, r22
    4668:	97 f9       	bld	r25, 7
    466a:	08 95       	ret

Disassembly of section .text:

00004682 <__gesf2>:
    4682:	0e 94 0c 20 	call	0x4018	; 0x4018 <__fp_cmp>
    4686:	08 f4       	brcc	.+2      	; 0x468a <__gesf2+0x8>
    4688:	8f ef       	ldi	r24, 0xFF	; 255
    468a:	08 95       	ret

Disassembly of section .text:

000046a4 <__mulsf3>:
    46a4:	0e 94 22 17 	call	0x2e44	; 0x2e44 <__mulsf3x>
    46a8:	0c 94 29 22 	jmp	0x4452	; 0x4452 <__fp_round>

Disassembly of section .text:

00002e44 <__mulsf3x>:
    2e44:	0f c0       	rjmp	.+30     	; 0x2e64 <__mulsf3x+0x20>
    2e46:	0e 94 21 23 	call	0x4642	; 0x4642 <__fp_pscA>
    2e4a:	38 f0       	brcs	.+14     	; 0x2e5a <__mulsf3x+0x16>
    2e4c:	0e 94 28 23 	call	0x4650	; 0x4650 <__fp_pscB>
    2e50:	20 f0       	brcs	.+8      	; 0x2e5a <__mulsf3x+0x16>
    2e52:	95 23       	and	r25, r21
    2e54:	11 f0       	breq	.+4      	; 0x2e5a <__mulsf3x+0x16>
    2e56:	0c 94 36 23 	jmp	0x466c	; 0x466c <__fp_inf>
    2e5a:	0c 94 56 23 	jmp	0x46ac	; 0x46ac <__fp_nan>
    2e5e:	11 24       	eor	r1, r1
    2e60:	0c 94 30 23 	jmp	0x4660	; 0x4660 <__fp_szero>
    2e64:	0e 94 74 20 	call	0x40e8	; 0x40e8 <__fp_split3>
    2e68:	70 f3       	brcs	.-36     	; 0x2e46 <__mulsf3x+0x2>

00002e6a <__mulsf3_pse>:
    2e6a:	95 9f       	mul	r25, r21
    2e6c:	c1 f3       	breq	.-16     	; 0x2e5e <__mulsf3x+0x1a>
    2e6e:	95 0f       	add	r25, r21
    2e70:	50 e0       	ldi	r21, 0x00	; 0
    2e72:	55 1f       	adc	r21, r21
    2e74:	62 9f       	mul	r22, r18
    2e76:	f0 01       	movw	r30, r0
    2e78:	72 9f       	mul	r23, r18
    2e7a:	bb 27       	eor	r27, r27
    2e7c:	f0 0d       	add	r31, r0
    2e7e:	b1 1d       	adc	r27, r1
    2e80:	63 9f       	mul	r22, r19
    2e82:	aa 27       	eor	r26, r26
    2e84:	f0 0d       	add	r31, r0
    2e86:	b1 1d       	adc	r27, r1
    2e88:	aa 1f       	adc	r26, r26
    2e8a:	64 9f       	mul	r22, r20
    2e8c:	66 27       	eor	r22, r22
    2e8e:	b0 0d       	add	r27, r0
    2e90:	a1 1d       	adc	r26, r1
    2e92:	66 1f       	adc	r22, r22
    2e94:	82 9f       	mul	r24, r18
    2e96:	22 27       	eor	r18, r18
    2e98:	b0 0d       	add	r27, r0
    2e9a:	a1 1d       	adc	r26, r1
    2e9c:	62 1f       	adc	r22, r18
    2e9e:	73 9f       	mul	r23, r19
    2ea0:	b0 0d       	add	r27, r0
    2ea2:	a1 1d       	adc	r26, r1
    2ea4:	62 1f       	adc	r22, r18
    2ea6:	83 9f       	mul	r24, r19
    2ea8:	a0 0d       	add	r26, r0
    2eaa:	61 1d       	adc	r22, r1
    2eac:	22 1f       	adc	r18, r18
    2eae:	74 9f       	mul	r23, r20
    2eb0:	33 27       	eor	r19, r19
    2eb2:	a0 0d       	add	r26, r0
    2eb4:	61 1d       	adc	r22, r1
    2eb6:	23 1f       	adc	r18, r19
    2eb8:	84 9f       	mul	r24, r20
    2eba:	60 0d       	add	r22, r0
    2ebc:	21 1d       	adc	r18, r1
    2ebe:	82 2f       	mov	r24, r18
    2ec0:	76 2f       	mov	r23, r22
    2ec2:	6a 2f       	mov	r22, r26
    2ec4:	11 24       	eor	r1, r1
    2ec6:	9f 57       	subi	r25, 0x7F	; 127
    2ec8:	50 40       	sbci	r21, 0x00	; 0
    2eca:	9a f0       	brmi	.+38     	; 0x2ef2 <__mulsf3_pse+0x88>
    2ecc:	f1 f0       	breq	.+60     	; 0x2f0a <__mulsf3_pse+0xa0>
    2ece:	88 23       	and	r24, r24
    2ed0:	4a f0       	brmi	.+18     	; 0x2ee4 <__mulsf3_pse+0x7a>
    2ed2:	ee 0f       	add	r30, r30
    2ed4:	ff 1f       	adc	r31, r31
    2ed6:	bb 1f       	adc	r27, r27
    2ed8:	66 1f       	adc	r22, r22
    2eda:	77 1f       	adc	r23, r23
    2edc:	88 1f       	adc	r24, r24
    2ede:	91 50       	subi	r25, 0x01	; 1
    2ee0:	50 40       	sbci	r21, 0x00	; 0
    2ee2:	a9 f7       	brne	.-22     	; 0x2ece <__mulsf3_pse+0x64>
    2ee4:	9e 3f       	cpi	r25, 0xFE	; 254
    2ee6:	51 05       	cpc	r21, r1
    2ee8:	80 f0       	brcs	.+32     	; 0x2f0a <__mulsf3_pse+0xa0>
    2eea:	0c 94 36 23 	jmp	0x466c	; 0x466c <__fp_inf>
    2eee:	0c 94 30 23 	jmp	0x4660	; 0x4660 <__fp_szero>
    2ef2:	5f 3f       	cpi	r21, 0xFF	; 255
    2ef4:	e4 f3       	brlt	.-8      	; 0x2eee <__mulsf3_pse+0x84>
    2ef6:	98 3e       	cpi	r25, 0xE8	; 232
    2ef8:	d4 f3       	brlt	.-12     	; 0x2eee <__mulsf3_pse+0x84>
    2efa:	86 95       	lsr	r24
    2efc:	77 95       	ror	r23
    2efe:	67 95       	ror	r22
    2f00:	b7 95       	ror	r27
    2f02:	f7 95       	ror	r31
    2f04:	e7 95       	ror	r30
    2f06:	9f 5f       	subi	r25, 0xFF	; 255
    2f08:	c1 f7       	brne	.-16     	; 0x2efa <__mulsf3_pse+0x90>
    2f0a:	fe 2b       	or	r31, r30
    2f0c:	88 0f       	add	r24, r24
    2f0e:	91 1d       	adc	r25, r1
    2f10:	96 95       	lsr	r25
    2f12:	87 95       	ror	r24
    2f14:	97 f9       	bld	r25, 7
    2f16:	08 95       	ret

Disassembly of section .text.floorf:

0000297a <floorf>:
    297a:	4f 92       	push	r4
    297c:	5f 92       	push	r5
    297e:	6f 92       	push	r6
    2980:	7f 92       	push	r7
    2982:	8f 92       	push	r8
    2984:	9f 92       	push	r9
    2986:	af 92       	push	r10
    2988:	bf 92       	push	r11
    298a:	cf 92       	push	r12
    298c:	df 92       	push	r13
    298e:	ef 92       	push	r14
    2990:	ff 92       	push	r15
    2992:	cf 93       	push	r28
    2994:	df 93       	push	r29
    2996:	cd b7       	in	r28, 0x3d	; 61
    2998:	de b7       	in	r29, 0x3e	; 62
    299a:	28 97       	sbiw	r28, 0x08	; 8
    299c:	0f b6       	in	r0, 0x3f	; 63
    299e:	f8 94       	cli
    29a0:	de bf       	out	0x3e, r29	; 62
    29a2:	0f be       	out	0x3f, r0	; 63
    29a4:	cd bf       	out	0x3d, r28	; 61
    29a6:	6b 01       	movw	r12, r22
    29a8:	7c 01       	movw	r14, r24
    29aa:	dc 01       	movw	r26, r24
    29ac:	cb 01       	movw	r24, r22
    29ae:	47 e1       	ldi	r20, 0x17	; 23
    29b0:	b6 95       	lsr	r27
    29b2:	a7 95       	ror	r26
    29b4:	97 95       	ror	r25
    29b6:	87 95       	ror	r24
    29b8:	4a 95       	dec	r20
    29ba:	d1 f7       	brne	.-12     	; 0x29b0 <floorf+0x36>
    29bc:	99 27       	eor	r25, r25
    29be:	8f 57       	subi	r24, 0x7F	; 127
    29c0:	91 09       	sbc	r25, r1
    29c2:	87 31       	cpi	r24, 0x17	; 23
    29c4:	91 05       	cpc	r25, r1
    29c6:	9c f5       	brge	.+102    	; 0x2a2e <floorf+0xb4>
    29c8:	97 fd       	sbrc	r25, 7
    29ca:	36 c0       	rjmp	.+108    	; 0x2a38 <floorf+0xbe>
    29cc:	88 24       	eor	r8, r8
    29ce:	8a 94       	dec	r8
    29d0:	98 2c       	mov	r9, r8
    29d2:	3f e7       	ldi	r19, 0x7F	; 127
    29d4:	a3 2e       	mov	r10, r19
    29d6:	b1 2c       	mov	r11, r1
    29d8:	04 c0       	rjmp	.+8      	; 0x29e2 <floorf+0x68>
    29da:	b5 94       	asr	r11
    29dc:	a7 94       	ror	r10
    29de:	97 94       	ror	r9
    29e0:	87 94       	ror	r8
    29e2:	8a 95       	dec	r24
    29e4:	d2 f7       	brpl	.-12     	; 0x29da <floorf+0x60>
    29e6:	d5 01       	movw	r26, r10
    29e8:	c4 01       	movw	r24, r8
    29ea:	8c 21       	and	r24, r12
    29ec:	9d 21       	and	r25, r13
    29ee:	ae 21       	and	r26, r14
    29f0:	bf 21       	and	r27, r15
    29f2:	89 2b       	or	r24, r25
    29f4:	8a 2b       	or	r24, r26
    29f6:	8b 2b       	or	r24, r27
    29f8:	d1 f0       	breq	.+52     	; 0x2a2e <floorf+0xb4>
    29fa:	20 e0       	ldi	r18, 0x00	; 0
    29fc:	30 e0       	ldi	r19, 0x00	; 0
    29fe:	40 e8       	ldi	r20, 0x80	; 128
    2a00:	5b e7       	ldi	r21, 0x7B	; 123
    2a02:	c7 01       	movw	r24, r14
    2a04:	b6 01       	movw	r22, r12
    2a06:	0e 94 14 23 	call	0x4628	; 0x4628 <__addsf3>
    2a0a:	6d 83       	std	Y+5, r22	; 0x05
    2a0c:	7e 83       	std	Y+6, r23	; 0x06
    2a0e:	8f 83       	std	Y+7, r24	; 0x07
    2a10:	98 87       	std	Y+8, r25	; 0x08
    2a12:	f7 fe       	sbrs	r15, 7
    2a14:	04 c0       	rjmp	.+8      	; 0x2a1e <floorf+0xa4>
    2a16:	c8 0c       	add	r12, r8
    2a18:	d9 1c       	adc	r13, r9
    2a1a:	ea 1c       	adc	r14, r10
    2a1c:	fb 1c       	adc	r15, r11
    2a1e:	80 94       	com	r8
    2a20:	90 94       	com	r9
    2a22:	a0 94       	com	r10
    2a24:	b0 94       	com	r11
    2a26:	c8 20       	and	r12, r8
    2a28:	d9 20       	and	r13, r9
    2a2a:	ea 20       	and	r14, r10
    2a2c:	fb 20       	and	r15, r11
    2a2e:	5c 2d       	mov	r21, r12
    2a30:	4d 2d       	mov	r20, r13
    2a32:	3e 2d       	mov	r19, r14
    2a34:	2f 2d       	mov	r18, r15
    2a36:	21 c0       	rjmp	.+66     	; 0x2a7a <floorf+0x100>
    2a38:	20 e0       	ldi	r18, 0x00	; 0
    2a3a:	30 e0       	ldi	r19, 0x00	; 0
    2a3c:	40 e8       	ldi	r20, 0x80	; 128
    2a3e:	5b e7       	ldi	r21, 0x7B	; 123
    2a40:	c7 01       	movw	r24, r14
    2a42:	b6 01       	movw	r22, r12
    2a44:	0e 94 14 23 	call	0x4628	; 0x4628 <__addsf3>
    2a48:	69 83       	std	Y+1, r22	; 0x01
    2a4a:	7a 83       	std	Y+2, r23	; 0x02
    2a4c:	8b 83       	std	Y+3, r24	; 0x03
    2a4e:	9c 83       	std	Y+4, r25	; 0x04
    2a50:	f7 fe       	sbrs	r15, 7
    2a52:	0f c0       	rjmp	.+30     	; 0x2a72 <floorf+0xf8>
    2a54:	d7 01       	movw	r26, r14
    2a56:	c6 01       	movw	r24, r12
    2a58:	88 0f       	add	r24, r24
    2a5a:	99 1f       	adc	r25, r25
    2a5c:	aa 1f       	adc	r26, r26
    2a5e:	bb 1f       	adc	r27, r27
    2a60:	89 2b       	or	r24, r25
    2a62:	8a 2b       	or	r24, r26
    2a64:	8b 2b       	or	r24, r27
    2a66:	19 f3       	breq	.-58     	; 0x2a2e <floorf+0xb4>
    2a68:	50 e0       	ldi	r21, 0x00	; 0
    2a6a:	40 e0       	ldi	r20, 0x00	; 0
    2a6c:	30 e8       	ldi	r19, 0x80	; 128
    2a6e:	2f eb       	ldi	r18, 0xBF	; 191
    2a70:	04 c0       	rjmp	.+8      	; 0x2a7a <floorf+0x100>
    2a72:	50 e0       	ldi	r21, 0x00	; 0
    2a74:	40 e0       	ldi	r20, 0x00	; 0
    2a76:	30 e0       	ldi	r19, 0x00	; 0
    2a78:	20 e0       	ldi	r18, 0x00	; 0
    2a7a:	65 2f       	mov	r22, r21
    2a7c:	74 2f       	mov	r23, r20
    2a7e:	83 2f       	mov	r24, r19
    2a80:	92 2f       	mov	r25, r18
    2a82:	28 96       	adiw	r28, 0x08	; 8
    2a84:	0f b6       	in	r0, 0x3f	; 63
    2a86:	f8 94       	cli
    2a88:	de bf       	out	0x3e, r29	; 62
    2a8a:	0f be       	out	0x3f, r0	; 63
    2a8c:	cd bf       	out	0x3d, r28	; 61
    2a8e:	df 91       	pop	r29
    2a90:	cf 91       	pop	r28
    2a92:	ff 90       	pop	r15
    2a94:	ef 90       	pop	r14
    2a96:	df 90       	pop	r13
    2a98:	cf 90       	pop	r12
    2a9a:	bf 90       	pop	r11
    2a9c:	af 90       	pop	r10
    2a9e:	9f 90       	pop	r9
    2aa0:	8f 90       	pop	r8
    2aa2:	7f 90       	pop	r7
    2aa4:	6f 90       	pop	r6
    2aa6:	5f 90       	pop	r5
    2aa8:	4f 90       	pop	r4
    2aaa:	08 95       	ret

Disassembly of section .text.fmaf:

0000283e <fmaf>:
    283e:	a5 e1       	ldi	r26, 0x15	; 21
    2840:	b0 e0       	ldi	r27, 0x00	; 0
    2842:	e5 e2       	ldi	r30, 0x25	; 37
    2844:	f4 e1       	ldi	r31, 0x14	; 20
    2846:	0c 94 f0 20 	jmp	0x41e0	; 0x41e0 <__prologue_saves__>
    284a:	47 01       	movw	r8, r14
    284c:	58 01       	movw	r10, r16
    284e:	0e 94 52 23 	call	0x46a4	; 0x46a4 <__mulsf3>
    2852:	2b 01       	movw	r4, r22
    2854:	3c 01       	movw	r6, r24
    2856:	a8 01       	movw	r20, r16
    2858:	97 01       	movw	r18, r14
    285a:	0e 94 14 23 	call	0x4628	; 0x4628 <__addsf3>
    285e:	16 2f       	mov	r17, r22
    2860:	c7 2e       	mov	r12, r23
    2862:	d8 2e       	mov	r13, r24
    2864:	f9 2e       	mov	r15, r25
    2866:	86 2f       	mov	r24, r22
    2868:	9c 2d       	mov	r25, r12
    286a:	ad 2d       	mov	r26, r13
    286c:	bf 2d       	mov	r27, r15
    286e:	89 83       	std	Y+1, r24	; 0x01
    2870:	9a 83       	std	Y+2, r25	; 0x02
    2872:	ab 83       	std	Y+3, r26	; 0x03
    2874:	bc 83       	std	Y+4, r27	; 0x04
    2876:	aa 81       	ldd	r26, Y+2	; 0x02
    2878:	fb 81       	ldd	r31, Y+3	; 0x03
    287a:	ec 81       	ldd	r30, Y+4	; 0x04
    287c:	ed 80       	ldd	r14, Y+5	; 0x05
    287e:	3e 80       	ldd	r3, Y+6	; 0x06
    2880:	2f 80       	ldd	r2, Y+7	; 0x07
    2882:	08 85       	ldd	r16, Y+8	; 0x08
    2884:	0d 8b       	std	Y+21, r16	; 0x15
    2886:	5e 2f       	mov	r21, r30
    2888:	5f 71       	andi	r21, 0x1F	; 31
    288a:	21 2f       	mov	r18, r17
    288c:	3a 2f       	mov	r19, r26
    288e:	4f 2f       	mov	r20, r31
    2890:	60 e0       	ldi	r22, 0x00	; 0
    2892:	70 e0       	ldi	r23, 0x00	; 0
    2894:	80 e0       	ldi	r24, 0x00	; 0
    2896:	90 e0       	ldi	r25, 0x00	; 0
    2898:	21 15       	cp	r18, r1
    289a:	31 05       	cpc	r19, r1
    289c:	41 05       	cpc	r20, r1
    289e:	00 e1       	ldi	r16, 0x10	; 16
    28a0:	50 07       	cpc	r21, r16
    28a2:	61 05       	cpc	r22, r1
    28a4:	71 05       	cpc	r23, r1
    28a6:	81 05       	cpc	r24, r1
    28a8:	91 05       	cpc	r25, r1
    28aa:	09 f0       	breq	.+2      	; 0x28ae <fmaf+0x70>
    28ac:	5e c0       	rjmp	.+188    	; 0x296a <fmaf+0x12c>
    28ae:	5e 2f       	mov	r21, r30
    28b0:	6e 2d       	mov	r22, r14
    28b2:	73 2d       	mov	r23, r3
    28b4:	82 2d       	mov	r24, r2
    28b6:	9d 89       	ldd	r25, Y+21	; 0x15
    28b8:	04 e3       	ldi	r16, 0x34	; 52
    28ba:	0e 94 b8 20 	call	0x4170	; 0x4170 <__lshrdi3>
    28be:	2d 87       	std	Y+13, r18	; 0x0d
    28c0:	3e 87       	std	Y+14, r19	; 0x0e
    28c2:	4f 87       	std	Y+15, r20	; 0x0f
    28c4:	58 8b       	std	Y+16, r21	; 0x10
    28c6:	69 8b       	std	Y+17, r22	; 0x11
    28c8:	7a 8b       	std	Y+18, r23	; 0x12
    28ca:	8b 8b       	std	Y+19, r24	; 0x13
    28cc:	9c 8b       	std	Y+20, r25	; 0x14
    28ce:	8d 85       	ldd	r24, Y+13	; 0x0d
    28d0:	9e 85       	ldd	r25, Y+14	; 0x0e
    28d2:	97 70       	andi	r25, 0x07	; 7
    28d4:	8f 3f       	cpi	r24, 0xFF	; 255
    28d6:	97 40       	sbci	r25, 0x07	; 7
    28d8:	09 f4       	brne	.+2      	; 0x28dc <fmaf+0x9e>
    28da:	47 c0       	rjmp	.+142    	; 0x296a <fmaf+0x12c>
    28dc:	a3 01       	movw	r20, r6
    28de:	92 01       	movw	r18, r4
    28e0:	61 2f       	mov	r22, r17
    28e2:	7c 2d       	mov	r23, r12
    28e4:	8d 2d       	mov	r24, r13
    28e6:	9f 2d       	mov	r25, r15
    28e8:	0e 94 13 23 	call	0x4626	; 0x4626 <__subsf3>
    28ec:	9b 01       	movw	r18, r22
    28ee:	ac 01       	movw	r20, r24
    28f0:	c5 01       	movw	r24, r10
    28f2:	b4 01       	movw	r22, r8
    28f4:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    28f8:	88 23       	and	r24, r24
    28fa:	b9 f1       	breq	.+110    	; 0x296a <fmaf+0x12c>
    28fc:	49 86       	std	Y+9, r4	; 0x09
    28fe:	5a 86       	std	Y+10, r5	; 0x0a
    2900:	6b 86       	std	Y+11, r6	; 0x0b
    2902:	7c 86       	std	Y+12, r7	; 0x0c
    2904:	29 85       	ldd	r18, Y+9	; 0x09
    2906:	3a 85       	ldd	r19, Y+10	; 0x0a
    2908:	4b 85       	ldd	r20, Y+11	; 0x0b
    290a:	5c 85       	ldd	r21, Y+12	; 0x0c
    290c:	c5 01       	movw	r24, r10
    290e:	b4 01       	movw	r22, r8
    2910:	0e 94 14 23 	call	0x4628	; 0x4628 <__addsf3>
    2914:	b6 2e       	mov	r11, r22
    2916:	87 2e       	mov	r8, r23
    2918:	98 2e       	mov	r9, r24
    291a:	a9 2e       	mov	r10, r25
    291c:	26 2f       	mov	r18, r22
    291e:	37 2f       	mov	r19, r23
    2920:	48 2f       	mov	r20, r24
    2922:	59 2f       	mov	r21, r25
    2924:	61 2f       	mov	r22, r17
    2926:	7c 2d       	mov	r23, r12
    2928:	8d 2d       	mov	r24, r13
    292a:	9f 2d       	mov	r25, r15
    292c:	0e 94 3c 23 	call	0x4678	; 0x4678 <__cmpsf2>
    2930:	81 11       	cpse	r24, r1
    2932:	18 c0       	rjmp	.+48     	; 0x2964 <fmaf+0x126>
    2934:	2b 2d       	mov	r18, r11
    2936:	8b 2d       	mov	r24, r11
    2938:	98 2d       	mov	r25, r8
    293a:	a9 2d       	mov	r26, r9
    293c:	ba 2d       	mov	r27, r10
    293e:	89 83       	std	Y+1, r24	; 0x01
    2940:	9a 83       	std	Y+2, r25	; 0x02
    2942:	ab 83       	std	Y+3, r26	; 0x03
    2944:	bc 83       	std	Y+4, r27	; 0x04
    2946:	3a 81       	ldd	r19, Y+2	; 0x02
    2948:	4b 81       	ldd	r20, Y+3	; 0x03
    294a:	5c 81       	ldd	r21, Y+4	; 0x04
    294c:	6e 2d       	mov	r22, r14
    294e:	73 2d       	mov	r23, r3
    2950:	82 2d       	mov	r24, r2
    2952:	9d 89       	ldd	r25, Y+21	; 0x15
    2954:	a1 e0       	ldi	r26, 0x01	; 1
    2956:	0e 94 b4 22 	call	0x4568	; 0x4568 <__adddi3_s8>
    295a:	12 2f       	mov	r17, r18
    295c:	c3 2e       	mov	r12, r19
    295e:	d4 2e       	mov	r13, r20
    2960:	f5 2e       	mov	r15, r21
    2962:	03 c0       	rjmp	.+6      	; 0x296a <fmaf+0x12c>
    2964:	1b 2d       	mov	r17, r11
    2966:	64 01       	movw	r12, r8
    2968:	fa 2c       	mov	r15, r10
    296a:	61 2f       	mov	r22, r17
    296c:	7c 2d       	mov	r23, r12
    296e:	8d 2d       	mov	r24, r13
    2970:	9f 2d       	mov	r25, r15
    2972:	65 96       	adiw	r28, 0x15	; 21
    2974:	e2 e1       	ldi	r30, 0x12	; 18
    2976:	0c 94 27 21 	jmp	0x424e	; 0x424e <__epilogue_restores__>

Disassembly of section .text.libgcc:

00004568 <__adddi3_s8>:
    4568:	00 24       	eor	r0, r0
    456a:	a7 fd       	sbrc	r26, 7
    456c:	00 94       	com	r0
    456e:	2a 0f       	add	r18, r26
    4570:	30 1d       	adc	r19, r0
    4572:	40 1d       	adc	r20, r0
    4574:	50 1d       	adc	r21, r0
    4576:	60 1d       	adc	r22, r0
    4578:	70 1d       	adc	r23, r0
    457a:	80 1d       	adc	r24, r0
    457c:	90 1d       	adc	r25, r0
    457e:	08 95       	ret
