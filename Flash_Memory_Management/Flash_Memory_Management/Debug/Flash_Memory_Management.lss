
Flash_Memory_Management.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00004740  2**0
                  ALLOC, LOAD, DATA
  1 .text         0000017a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000102e  00800200  00800200  00004740  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00004740  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 00000196  00000000  00000000  0000476f  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  00004905  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000326b  00000000  00000000  00004ac5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001218  00000000  00000000  00007d30  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000178c  00000000  00000000  00008f48  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000057c  00000000  00000000  0000a6d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000537  00000000  00000000  0000ac50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000daa  00000000  00000000  0000b187  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  0000bf31  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  0000469e  0000469e  00004732  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000c11c  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .progmemx.data 00000013  00000660  00000660  000006f4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 16 .text.main    00000044  0000401c  0000401c  000040b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.USART_Init 00000036  0000421a  0000421a  000042ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.USART_TX_Data 0000000e  000045cc  000045cc  00004660  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.USART_Data 0000004c  00003f88  00003f88  0000401c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.USART_RX_Data 0000000e  000045da  000045da  0000466e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.LED_Init 00000016  0000456c  0000456c  00004600  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.LED_Red_Toggle 0000000e  000045e8  000045e8  0000467c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.LED_Green_Toggle 0000000e  000045f6  000045f6  0000468a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.VOLTAGE_Translator_Init 00000026  0000436a  0000436a  000043fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.SLAVE_CS_Deselect 00000062  00003d6e  00003d6e  00003e02  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.FLASH_NAND_CS_ENABLE 00000008  00004678  00004678  0000470c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.FLASH_NAND_CS_DISABLE 00000008  00004680  00004680  00004714  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.Print_To_User 000000ac  0000335a  0000335a  000033ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .progmemx.data 00000361  0000017a  0000017a  0000020e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 30 .text.HEX_Verification 000000bc  00003132  00003132  000031c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.NAND_Address_Checker 00000074  00003baa  00003baa  00003c3e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.ExecuteCommand 0000040e  00001be8  00001be8  00001c7c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.UserInput 000000bc  000031ee  000031ee  00003282  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.COLUMN_BLOCK_PAGE_ADDRESSER 00000150  00002566  00002566  000025fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .bss.input_counter 00000002  0080122e  0080122e  00004740  2**0
                  ALLOC
 36 .bss.arr_address 00000002  00801230  00801230  00004740  2**0
                  ALLOC
 37 .text.CLEAR_ARR 0000005e  00003dd0  00003dd0  00003e64  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.SPI_MASTER_Init 00000024  000043dc  000043dc  00004470  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.FLASH_Write_Enable 0000001a  000044d8  000044d8  0000456c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.FLASH_Write_Disable 0000001a  000044f2  000044f2  00004586  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .progmemx.data 000000f0  000004db  000004db  0000056f  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 42 .text.FLASH_ID 0000008a  000039a4  000039a4  00003a38  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.FLASH_Die_Selection 0000007a  00003ab6  00003ab6  00003b4a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.FLASH_Configuration 0000007a  00003b30  00003b30  00003bc4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.FLASH_Block_Lock_Setter 00000074  00003c1e  00003c1e  00003cb2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.FLASH_Block_Lock 000000aa  00003406  00003406  0000349a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.FLASH_Reset 0000001e  00004466  00004466  000044fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.FLASH_MainArray_Address 000000a6  000034b0  000034b0  00003544  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.FLASH_Column_Address 0000005c  00003e8c  00003e8c  00003f20  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.FLASH_Data_Storage 000000a2  00003742  00003742  000037d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.FLASH_Read_From_Cache_x1 00000050  00003ee8  00003ee8  00003f7c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.FLASH_Status 00000088  00003a2e  00003a2e  00003ac2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.FLASH_Program_Execute 00000034  00004286  00004286  0000431a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.FLASH_Page_Program 00000072  00003c92  00003c92  00003d26  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.FLASH_Page_Read 0000003c  0000416a  0000416a  000041fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.FLASH_Para_Pg 00000050  00003f38  00003f38  00003fcc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.FLASH_Block_Erase 00000042  000040e8  000040e8  0000417c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .progmemx.data 0000007f  000005cb  000005cb  0000065f  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 59 .text.Page_Tester 000000c0  00003072  00003072  00003106  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.libgcc  0000000e  00004604  00004604  00004698  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.__dummy_fini 00000002  000046a6  000046a6  0000473a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.__dummy_funcs_on_exit 00000002  000046a8  000046a8  0000473c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.__dummy_simulator_exit 00000002  000046aa  000046aa  0000473e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.exit    00000016  00004582  00004582  00004616  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.__wrap_sprintf 00000026  00004390  00004390  00004424  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .progmemx.data 00000007  00000693  00000693  00000727  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 67 .text.__fmt_s 000000ca  00002fa8  00002fa8  0000303c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.__out   0000006a  00003d04  00003d04  00003d98  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.__pad   0000010e  00002a6e  00002a6e  00002b02  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .text.__fmt_state 000000a4  00003556  00003556  000035ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .progmemx.data 00000006  0000069a  0000069a  0000072e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 72 .text.__printf_core 00000832  000006a0  000006a0  00000734  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .progmemx.data.state_table 00000016  0000064a  0000064a  000006de  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 74 .text.fputc   00000092  00003886  00003886  0000391a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.__fmt_d 0000017e  00002276  00002276  0000230a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.__fmt_o 000000d4  00002d32  00002d32  00002dc6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.__cvt_u 0000014a  000026b6  000026b6  0000274a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.__fmt_u 000000b0  000032aa  000032aa  0000333e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.__fmt_x 00000280  00001ff6  00001ff6  0000208a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.__pop_float 00000040  0000412a  0000412a  000041be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text.__pop_int 00000172  000023f4  000023f4  00002488  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.__pop_ptr 000000d8  00002c5a  00002c5a  00002cee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .text.sprintf 00000026  000043b6  000043b6  0000444a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 .text.vsprintf 00000018  0000450c  0000450c  000045a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 .text.atoi    0000008c  00003918  00003918  000039ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 .text.memset  00000012  00004598  00004598  0000462c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 .text.strcmp  00000044  00004060  00004060  000040f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 .text.strlen  00000024  00004400  00004400  00004494  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 .text.tolower 00000010  000045bc  000045bc  00004650  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 .text.toupper 00000012  000045aa  000045aa  0000463e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 .text._Exit   00000004  000046a2  000046a2  00004736  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 .text.__vsprintf 00000018  00004524  00004524  000045b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 .text.__vsnprintf 000000a4  000035fa  000035fa  0000368e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 .text.vsnprintf 000000a4  0000369e  0000369e  00003732  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 .text.vfprintf 00000030  000042ba  000042ba  0000434e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 .text.__vfprintf 00000030  000042ea  000042ea  0000437e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 97 .progmemx.data 00000010  00000673  00000673  00000707  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 98 .text.__fmt_fp 000006ba  00000ed2  00000ed2  00000f66  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 99 .progmemx.data 00000010  00000683  00000683  00000717  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
100 .text.__fmt_a 0000065c  0000158c  0000158c  00001620  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 .text.strcpy  0000001c  00004484  00004484  00004518  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 .text.libgcc.div 00000028  0000431a  0000431a  000043ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 .text.libgcc.div 0000001c  000044a0  000044a0  00004534  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 .text.libgcc.div 000000a2  000037e4  000037e4  00003878  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 .text.libgcc  00000020  00004446  00004446  000044da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 .text.libgcc.prologue 00000038  000041e2  000041e2  00004276  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 .text.libgcc.prologue 00000036  00004250  00004250  000042e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 .text.libgcc  0000001c  000044bc  000044bc  00004550  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 .text.libgcc.builtins 0000003c  000041a6  000041a6  0000423a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 .text.libgcc  00000018  0000453c  0000453c  000045d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 .text.libgcc.div 00000028  00004342  00004342  000043d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 .text         0000000e  00004612  00004612  000046a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 .text         000000ce  00002eda  00002eda  00002f6e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 .text         0000000a  00004664  00004664  000046f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 .text         00000008  00004688  00004688  0000471c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 .text         000000de  00002b7c  00002b7c  00002c10  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 .text         0000000e  00004620  00004620  000046b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 .text         0000005e  00003e2e  00003e2e  00003ec2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 .text         00000048  00003fd4  00003fd4  00004068  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 .text         0000000c  00004658  00004658  000046ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 .text         00000006  00004698  00004698  0000472c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 .text         0000000e  0000462e  0000462e  000046c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 .text         0000000e  0000463c  0000463c  000046d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 .text         00000022  00004424  00004424  000044b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 .text         00000044  000040a4  000040a4  00004138  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 .text         0000000e  0000464a  0000464a  000046de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 .text         0000000a  0000466e  0000466e  00004702  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 .text         00000008  00004690  00004690  00004724  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 .text         000000d4  00002e06  00002e06  00002e9a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 .text.floorf  00000132  0000293c  0000293c  000029d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 .text.fmaf    0000013c  00002800  00002800  00002894  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
132 .text.libgcc  00000018  00004554  00004554  000045e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__ctors_end>
   4:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
   8:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
   c:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  10:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  14:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  18:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  1c:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  20:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  24:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  28:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  2c:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  30:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  34:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  38:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  3c:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  40:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  44:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  48:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  4c:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  50:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  54:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  58:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  5c:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  60:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  64:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  68:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  6c:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  70:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  74:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  78:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  7c:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  80:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  84:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  88:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  8c:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  90:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  94:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  98:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  9c:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  a0:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  a4:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  a8:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  ac:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  b0:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  b4:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  b8:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  bc:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  c0:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  c4:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  c8:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  cc:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  d0:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  d4:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  d8:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  dc:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>
  e0:	0c 94 4f 23 	jmp	0x469e	; 0x469e <__bad_interrupt>

000000e4 <.dinit>:
  e4:	02 00       	.word	0x0002	; ????
  e6:	12 32       	cpi	r17, 0x22	; 34
  e8:	80 00       	.word	0x0080	; ????

000000ea <__trampolines_start>:
  ea:	0c 94 9f 16 	jmp	0x2d3e	; 0x2d3e <__fmt_o+0xc>
  ee:	0c 94 e1 21 	jmp	0x43c2	; 0x43c2 <sprintf+0xc>
  f2:	0c 94 7b 21 	jmp	0x42f6	; 0x42f6 <__vfprintf+0xc>
  f6:	0c 94 ce 21 	jmp	0x439c	; 0x439c <_sprintf_cdnopuxX+0xc>
  fa:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__printf_core+0xc>
  fe:	0c 94 61 13 	jmp	0x26c2	; 0x26c2 <__cvt_u+0xc>
 102:	0c 94 01 10 	jmp	0x2002	; 0x2002 <__DATA_REGION_LENGTH__+0x2>
 106:	0c 94 5b 19 	jmp	0x32b6	; 0x32b6 <__fmt_u+0xc>
 10a:	0c 94 06 14 	jmp	0x280c	; 0x280c <fmaf+0xc>
 10e:	0c 94 cc 0a 	jmp	0x1598	; 0x1598 <__fmt_a+0xc>
 112:	0c 94 63 21 	jmp	0x42c6	; 0x42c6 <vfprintf+0xc>
 116:	0c 94 6f 07 	jmp	0xede	; 0xede <__fmt_fp+0xc>
 11a:	0c 94 41 11 	jmp	0x2282	; 0x2282 <__fmt_d+0xc>

0000011e <__ctors_end>:
 11e:	11 24       	eor	r1, r1
 120:	1f be       	out	0x3f, r1	; 63
 122:	cf ef       	ldi	r28, 0xFF	; 255
 124:	d1 e2       	ldi	r29, 0x21	; 33
 126:	de bf       	out	0x3e, r29	; 62
 128:	cd bf       	out	0x3d, r28	; 61
 12a:	00 e0       	ldi	r16, 0x00	; 0
 12c:	0c bf       	out	0x3c, r16	; 60

0000012e <__do_copy_data>:
 12e:	e4 ee       	ldi	r30, 0xE4	; 228
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	40 e0       	ldi	r20, 0x00	; 0
 134:	19 c0       	rjmp	.+50     	; 0x168 <__do_clear_bss+0x8>
 136:	b7 91       	elpm	r27, Z+
 138:	a7 91       	elpm	r26, Z+
 13a:	37 91       	elpm	r19, Z+
 13c:	27 91       	elpm	r18, Z+
 13e:	07 91       	elpm	r16, Z+
 140:	07 fd       	sbrc	r16, 7
 142:	0e c0       	rjmp	.+28     	; 0x160 <__do_clear_bss>
 144:	97 91       	elpm	r25, Z+
 146:	87 91       	elpm	r24, Z+
 148:	ef 01       	movw	r28, r30
 14a:	f9 2f       	mov	r31, r25
 14c:	e8 2f       	mov	r30, r24
 14e:	0b bf       	out	0x3b, r16	; 59
 150:	07 90       	elpm	r0, Z+
 152:	0d 92       	st	X+, r0
 154:	a2 17       	cp	r26, r18
 156:	b3 07       	cpc	r27, r19
 158:	d9 f7       	brne	.-10     	; 0x150 <__do_copy_data+0x22>
 15a:	fe 01       	movw	r30, r28
 15c:	1b be       	out	0x3b, r1	; 59
 15e:	04 c0       	rjmp	.+8      	; 0x168 <__do_clear_bss+0x8>

00000160 <__do_clear_bss>:
 160:	1d 92       	st	X+, r1
 162:	a2 17       	cp	r26, r18
 164:	b3 07       	cpc	r27, r19
 166:	e1 f7       	brne	.-8      	; 0x160 <__do_clear_bss>
 168:	e9 3e       	cpi	r30, 0xE9	; 233
 16a:	f4 07       	cpc	r31, r20
 16c:	21 f7       	brne	.-56     	; 0x136 <__do_copy_data+0x8>
 16e:	0e 94 0e 20 	call	0x401c	; 0x401c <main>
 172:	0c 94 c1 22 	jmp	0x4582	; 0x4582 <exit>

00000176 <_exit>:
 176:	f8 94       	cli

00000178 <__stop_program>:
 178:	ff cf       	rjmp	.-2      	; 0x178 <__stop_program>

Disassembly of section .text:

0000469e <__bad_interrupt>:
    469e:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

0000401c <main>:

//#include "MEGA_1284P_SPI.h" //adding MEGA_1284P SPI Testing code

int main(void)
{
	LED_Init();
    401c:	0e 94 b6 22 	call	0x456c	; 0x456c <LED_Init>
	VOLTAGE_Translator_Init();
    4020:	0e 94 b5 21 	call	0x436a	; 0x436a <VOLTAGE_Translator_Init>
	USART_Init();
    4024:	0e 94 0d 21 	call	0x421a	; 0x421a <USART_Init>
	SLAVE_CS_Deselect();
    4028:	0e 94 b7 1e 	call	0x3d6e	; 0x3d6e <SLAVE_CS_Deselect>
	SPI_MASTER_Init();
    402c:	0e 94 ee 21 	call	0x43dc	; 0x43dc <SPI_MASTER_Init>
	LED_Green_Toggle();
    4030:	0e 94 fb 22 	call	0x45f6	; 0x45f6 <LED_Green_Toggle>
	//PORTA &= ~(1 << PA3); //~CS pin set low for selecting slave device
	
    while(1)
    {		
		CLEAR_ARR();
    4034:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
		USART_Data("->Arrays Cleared \n");
    4038:	60 e6       	ldi	r22, 0x60	; 96
    403a:	76 e0       	ldi	r23, 0x06	; 6
    403c:	80 e0       	ldi	r24, 0x00	; 0
    403e:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		
		UserInput(true); //true therefore command
    4042:	81 e0       	ldi	r24, 0x01	; 1
    4044:	0e 94 f7 18 	call	0x31ee	; 0x31ee <UserInput>
		
		LED_Red_Toggle();
    4048:	0e 94 f4 22 	call	0x45e8	; 0x45e8 <LED_Red_Toggle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    404c:	2f ef       	ldi	r18, 0xFF	; 255
    404e:	81 ee       	ldi	r24, 0xE1	; 225
    4050:	94 e0       	ldi	r25, 0x04	; 4
    4052:	21 50       	subi	r18, 0x01	; 1
    4054:	80 40       	sbci	r24, 0x00	; 0
    4056:	90 40       	sbci	r25, 0x00	; 0
    4058:	e1 f7       	brne	.-8      	; 0x4052 <main+0x36>
    405a:	00 c0       	rjmp	.+0      	; 0x405c <main+0x40>
    405c:	00 00       	nop
    405e:	ea cf       	rjmp	.-44     	; 0x4034 <main+0x18>

Disassembly of section .text.USART_Init:

0000421a <USART_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    421a:	87 e6       	ldi	r24, 0x67	; 103
    421c:	90 e0       	ldi	r25, 0x00	; 0
    421e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
    4222:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
    4226:	8d b1       	in	r24, 0x0d	; 13
    4228:	82 60       	ori	r24, 0x02	; 2
    422a:	8d b9       	out	0x0d, r24	; 13
    422c:	e1 ec       	ldi	r30, 0xC1	; 193
    422e:	f0 e0       	ldi	r31, 0x00	; 0
    4230:	80 81       	ld	r24, Z
    4232:	88 60       	ori	r24, 0x08	; 8
    4234:	80 83       	st	Z, r24
    4236:	8d b1       	in	r24, 0x0d	; 13
    4238:	8e 7f       	andi	r24, 0xFE	; 254
    423a:	8d b9       	out	0x0d, r24	; 13
    423c:	80 81       	ld	r24, Z
    423e:	80 61       	ori	r24, 0x10	; 16
    4240:	80 83       	st	Z, r24
    4242:	81 b1       	in	r24, 0x01	; 1
    4244:	84 60       	ori	r24, 0x04	; 4
    4246:	81 b9       	out	0x01, r24	; 1
    4248:	82 b1       	in	r24, 0x02	; 2
    424a:	84 60       	ori	r24, 0x04	; 4
    424c:	82 b9       	out	0x02, r24	; 2
    424e:	08 95       	ret

Disassembly of section .text.USART_TX_Data:

000045cc <USART_TX_Data>:
    45cc:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    45d0:	95 ff       	sbrs	r25, 5
    45d2:	fc cf       	rjmp	.-8      	; 0x45cc <USART_TX_Data>
    45d4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    45d8:	08 95       	ret

Disassembly of section .text.USART_Data:

00003f88 <USART_Data>:
    3f88:	cf 92       	push	r12
    3f8a:	df 92       	push	r13
    3f8c:	ef 92       	push	r14
    3f8e:	cf 93       	push	r28
    3f90:	df 93       	push	r29
    3f92:	6b 01       	movw	r12, r22
    3f94:	e8 2e       	mov	r14, r24
    3f96:	c0 e0       	ldi	r28, 0x00	; 0
    3f98:	d0 e0       	ldi	r29, 0x00	; 0
    3f9a:	0f c0       	rjmp	.+30     	; 0x3fba <USART_Data+0x32>
    3f9c:	ae 2d       	mov	r26, r14
    3f9e:	c6 01       	movw	r24, r12
    3fa0:	8c 0f       	add	r24, r28
    3fa2:	9d 1f       	adc	r25, r29
    3fa4:	a1 1d       	adc	r26, r1
    3fa6:	d7 fd       	sbrc	r29, 7
    3fa8:	aa 95       	dec	r26
    3faa:	fc 01       	movw	r30, r24
    3fac:	5a 2f       	mov	r21, r26
    3fae:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    3fb2:	86 2f       	mov	r24, r22
    3fb4:	0e 94 e6 22 	call	0x45cc	; 0x45cc <USART_TX_Data>
    3fb8:	21 96       	adiw	r28, 0x01	; 1
    3fba:	8e 2d       	mov	r24, r14
    3fbc:	b6 01       	movw	r22, r12
    3fbe:	0e 94 00 22 	call	0x4400	; 0x4400 <strlen>
    3fc2:	c8 17       	cp	r28, r24
    3fc4:	d9 07       	cpc	r29, r25
    3fc6:	50 f3       	brcs	.-44     	; 0x3f9c <USART_Data+0x14>
    3fc8:	df 91       	pop	r29
    3fca:	cf 91       	pop	r28
    3fcc:	ef 90       	pop	r14
    3fce:	df 90       	pop	r13
    3fd0:	cf 90       	pop	r12
    3fd2:	08 95       	ret

Disassembly of section .text.USART_RX_Data:

000045da <USART_RX_Data>:
    45da:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    45de:	88 23       	and	r24, r24
    45e0:	e4 f7       	brge	.-8      	; 0x45da <USART_RX_Data>
    45e2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    45e6:	08 95       	ret

Disassembly of section .text.LED_Init:

0000456c <LED_Init>:
    456c:	e1 e0       	ldi	r30, 0x01	; 1
    456e:	f1 e0       	ldi	r31, 0x01	; 1
    4570:	80 81       	ld	r24, Z
    4572:	80 66       	ori	r24, 0x60	; 96
    4574:	80 83       	st	Z, r24
    4576:	e2 e0       	ldi	r30, 0x02	; 2
    4578:	f1 e0       	ldi	r31, 0x01	; 1
    457a:	80 81       	ld	r24, Z
    457c:	80 66       	ori	r24, 0x60	; 96
    457e:	80 83       	st	Z, r24
    4580:	08 95       	ret

Disassembly of section .text.LED_Red_Toggle:

000045e8 <LED_Red_Toggle>:
}

void LED_Red_Toggle()
{
	PORTH ^= (1 << PH6); //toggle RED_LED (PH6)
    45e8:	e2 e0       	ldi	r30, 0x02	; 2
    45ea:	f1 e0       	ldi	r31, 0x01	; 1
    45ec:	90 81       	ld	r25, Z
    45ee:	80 e4       	ldi	r24, 0x40	; 64
    45f0:	89 27       	eor	r24, r25
    45f2:	80 83       	st	Z, r24
    45f4:	08 95       	ret

Disassembly of section .text.LED_Green_Toggle:

000045f6 <LED_Green_Toggle>:
}

void LED_Green_Toggle()
{
	PORTH ^= (1 << PH5); //toggle GREEN_LED (PH5)
    45f6:	e2 e0       	ldi	r30, 0x02	; 2
    45f8:	f1 e0       	ldi	r31, 0x01	; 1
    45fa:	90 81       	ld	r25, Z
    45fc:	80 e2       	ldi	r24, 0x20	; 32
    45fe:	89 27       	eor	r24, r25
    4600:	80 83       	st	Z, r24
    4602:	08 95       	ret

Disassembly of section .text.VOLTAGE_Translator_Init:

0000436a <VOLTAGE_Translator_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    436a:	87 b1       	in	r24, 0x07	; 7
    436c:	80 64       	ori	r24, 0x40	; 64
    436e:	87 b9       	out	0x07, r24	; 7
    4370:	88 b1       	in	r24, 0x08	; 8
    4372:	80 64       	ori	r24, 0x40	; 64
    4374:	88 b9       	out	0x08, r24	; 8
    4376:	83 b3       	in	r24, 0x13	; 19
    4378:	81 60       	ori	r24, 0x01	; 1
    437a:	83 bb       	out	0x13, r24	; 19
    437c:	84 b3       	in	r24, 0x14	; 20
    437e:	81 60       	ori	r24, 0x01	; 1
    4380:	84 bb       	out	0x14, r24	; 20
    4382:	83 b3       	in	r24, 0x13	; 19
    4384:	82 60       	ori	r24, 0x02	; 2
    4386:	83 bb       	out	0x13, r24	; 19
    4388:	84 b3       	in	r24, 0x14	; 20
    438a:	82 60       	ori	r24, 0x02	; 2
    438c:	84 bb       	out	0x14, r24	; 20
    438e:	08 95       	ret

Disassembly of section .text.SLAVE_CS_Deselect:

00003d6e <SLAVE_CS_Deselect>:
    3d6e:	81 b1       	in	r24, 0x01	; 1
    3d70:	88 60       	ori	r24, 0x08	; 8
    3d72:	81 b9       	out	0x01, r24	; 1
    3d74:	82 b1       	in	r24, 0x02	; 2
    3d76:	88 60       	ori	r24, 0x08	; 8
    3d78:	82 b9       	out	0x02, r24	; 2
    3d7a:	81 b1       	in	r24, 0x01	; 1
    3d7c:	80 61       	ori	r24, 0x10	; 16
    3d7e:	81 b9       	out	0x01, r24	; 1
    3d80:	82 b1       	in	r24, 0x02	; 2
    3d82:	80 61       	ori	r24, 0x10	; 16
    3d84:	82 b9       	out	0x02, r24	; 2
    3d86:	81 b1       	in	r24, 0x01	; 1
    3d88:	80 62       	ori	r24, 0x20	; 32
    3d8a:	81 b9       	out	0x01, r24	; 1
    3d8c:	82 b1       	in	r24, 0x02	; 2
    3d8e:	80 62       	ori	r24, 0x20	; 32
    3d90:	82 b9       	out	0x02, r24	; 2
    3d92:	81 b1       	in	r24, 0x01	; 1
    3d94:	80 64       	ori	r24, 0x40	; 64
    3d96:	81 b9       	out	0x01, r24	; 1
    3d98:	82 b1       	in	r24, 0x02	; 2
    3d9a:	80 64       	ori	r24, 0x40	; 64
    3d9c:	82 b9       	out	0x02, r24	; 2
    3d9e:	81 b1       	in	r24, 0x01	; 1
    3da0:	80 68       	ori	r24, 0x80	; 128
    3da2:	81 b9       	out	0x01, r24	; 1
    3da4:	82 b1       	in	r24, 0x02	; 2
    3da6:	80 68       	ori	r24, 0x80	; 128
    3da8:	82 b9       	out	0x02, r24	; 2
    3daa:	81 b1       	in	r24, 0x01	; 1
    3dac:	82 60       	ori	r24, 0x02	; 2
    3dae:	81 b9       	out	0x01, r24	; 1
    3db0:	82 b1       	in	r24, 0x02	; 2
    3db2:	82 60       	ori	r24, 0x02	; 2
    3db4:	82 b9       	out	0x02, r24	; 2
    3db6:	81 b1       	in	r24, 0x01	; 1
    3db8:	84 60       	ori	r24, 0x04	; 4
    3dba:	81 b9       	out	0x01, r24	; 1
    3dbc:	82 b1       	in	r24, 0x02	; 2
    3dbe:	84 60       	ori	r24, 0x04	; 4
    3dc0:	82 b9       	out	0x02, r24	; 2
    3dc2:	81 b1       	in	r24, 0x01	; 1
    3dc4:	88 60       	ori	r24, 0x08	; 8
    3dc6:	81 b9       	out	0x01, r24	; 1
    3dc8:	82 b1       	in	r24, 0x02	; 2
    3dca:	88 60       	ori	r24, 0x08	; 8
    3dcc:	82 b9       	out	0x02, r24	; 2
    3dce:	08 95       	ret

Disassembly of section .text.FLASH_NAND_CS_ENABLE:

00004678 <FLASH_NAND_CS_ENABLE>:
	PORTA |= (1 << PF3); //setting ~CS pin (PF3) high to de-select the slave device (we are not working on it yet)
}

void FLASH_NAND_CS_ENABLE() //enable the Chip Select of the FLASH NAND
{
	PORTA &= ~(1 << PA3); //~CS pin set low for selecting slave device
    4678:	82 b1       	in	r24, 0x02	; 2
    467a:	87 7f       	andi	r24, 0xF7	; 247
    467c:	82 b9       	out	0x02, r24	; 2
    467e:	08 95       	ret

Disassembly of section .text.FLASH_NAND_CS_DISABLE:

00004680 <FLASH_NAND_CS_DISABLE>:
}

void FLASH_NAND_CS_DISABLE() //disable the Chip Select of the FLASH NAND
{
	PORTA |= (1 << PA3); //~CS pin set high for de-selecting slave device; to end the command sequence
    4680:	82 b1       	in	r24, 0x02	; 2
    4682:	88 60       	ori	r24, 0x08	; 8
    4684:	82 b9       	out	0x02, r24	; 2
    4686:	08 95       	ret

Disassembly of section .text.Print_To_User:

0000335a <Print_To_User>:
	if (command)
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
}

void Print_To_User(int num_elements, int offset, const char *msg, const uint8_t *arr_start, uint8_t *arr_dest) //# of elements to print along with message, and to which array
{
    335a:	3f 92       	push	r3
    335c:	4f 92       	push	r4
    335e:	5f 92       	push	r5
    3360:	6f 92       	push	r6
    3362:	7f 92       	push	r7
    3364:	8f 92       	push	r8
    3366:	9f 92       	push	r9
    3368:	af 92       	push	r10
    336a:	bf 92       	push	r11
    336c:	cf 92       	push	r12
    336e:	df 92       	push	r13
    3370:	ef 92       	push	r14
    3372:	ff 92       	push	r15
    3374:	0f 93       	push	r16
    3376:	1f 93       	push	r17
    3378:	cf 93       	push	r28
    337a:	df 93       	push	r29
    337c:	5c 01       	movw	r10, r24
    337e:	4b 01       	movw	r8, r22
    3380:	72 2e       	mov	r7, r18
    3382:	13 2f       	mov	r17, r19
    3384:	34 2e       	mov	r3, r20
    3386:	27 01       	movw	r4, r14
    3388:	60 2e       	mov	r6, r16
	for (int i = 0; i < num_elements; i++)
    338a:	c0 e0       	ldi	r28, 0x00	; 0
    338c:	d0 e0       	ldi	r29, 0x00	; 0
    338e:	26 c0       	rjmp	.+76     	; 0x33dc <Print_To_User+0x82>
	{
		sprintf(arr_dest, msg, arr_start[i + offset]);
    3390:	ce 01       	movw	r24, r28
    3392:	88 0d       	add	r24, r8
    3394:	99 1d       	adc	r25, r9
    3396:	46 2d       	mov	r20, r6
    3398:	92 01       	movw	r18, r4
    339a:	28 0f       	add	r18, r24
    339c:	39 1f       	adc	r19, r25
    339e:	41 1d       	adc	r20, r1
    33a0:	97 fd       	sbrc	r25, 7
    33a2:	4a 95       	dec	r20
    33a4:	a4 2f       	mov	r26, r20
    33a6:	c9 01       	movw	r24, r18
    33a8:	f9 01       	movw	r30, r18
    33aa:	5a 2f       	mov	r21, r26
    33ac:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    33b0:	1f 92       	push	r1
    33b2:	6f 93       	push	r22
    33b4:	3f 92       	push	r3
    33b6:	1f 93       	push	r17
    33b8:	7f 92       	push	r7
    33ba:	df 92       	push	r13
    33bc:	cf 92       	push	r12
    33be:	0e 94 db 21 	call	0x43b6	; 0x43b6 <sprintf>
		USART_Data(arr_dest);
    33c2:	b6 01       	movw	r22, r12
    33c4:	80 e8       	ldi	r24, 0x80	; 128
    33c6:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
}

void Print_To_User(int num_elements, int offset, const char *msg, const uint8_t *arr_start, uint8_t *arr_dest) //# of elements to print along with message, and to which array
{
	for (int i = 0; i < num_elements; i++)
    33ca:	21 96       	adiw	r28, 0x01	; 1
    33cc:	8d b7       	in	r24, 0x3d	; 61
    33ce:	9e b7       	in	r25, 0x3e	; 62
    33d0:	07 96       	adiw	r24, 0x07	; 7
    33d2:	0f b6       	in	r0, 0x3f	; 63
    33d4:	f8 94       	cli
    33d6:	9e bf       	out	0x3e, r25	; 62
    33d8:	0f be       	out	0x3f, r0	; 63
    33da:	8d bf       	out	0x3d, r24	; 61
    33dc:	ca 15       	cp	r28, r10
    33de:	db 05       	cpc	r29, r11
    33e0:	bc f2       	brlt	.-82     	; 0x3390 <Print_To_User+0x36>
	{
		sprintf(arr_dest, msg, arr_start[i + offset]);
		USART_Data(arr_dest);
	}
}
    33e2:	df 91       	pop	r29
    33e4:	cf 91       	pop	r28
    33e6:	1f 91       	pop	r17
    33e8:	0f 91       	pop	r16
    33ea:	ff 90       	pop	r15
    33ec:	ef 90       	pop	r14
    33ee:	df 90       	pop	r13
    33f0:	cf 90       	pop	r12
    33f2:	bf 90       	pop	r11
    33f4:	af 90       	pop	r10
    33f6:	9f 90       	pop	r9
    33f8:	8f 90       	pop	r8
    33fa:	7f 90       	pop	r7
    33fc:	6f 90       	pop	r6
    33fe:	5f 90       	pop	r5
    3400:	4f 90       	pop	r4
    3402:	3f 90       	pop	r3
    3404:	08 95       	ret

Disassembly of section .text.HEX_Verification:

00003132 <HEX_Verification>:
		}
	}
}

bool HEX_Verification() //verifies uint8_t (ASCII) to Hex validity and allocates in appropriated location
{
    3132:	cf 92       	push	r12
    3134:	df 92       	push	r13
    3136:	ef 92       	push	r14
    3138:	ff 92       	push	r15
    313a:	0f 93       	push	r16
	//parse the data into usable hex values
	for (int i = 0; i <= FLASH_NAND_ADDRESS_MAX; i++)
    313c:	80 e0       	ldi	r24, 0x00	; 0
    313e:	90 e0       	ldi	r25, 0x00	; 0
    3140:	45 c0       	rjmp	.+138    	; 0x31cc <HEX_Verification+0x9a>
	{
		if (CommandBuffer[i] >= '0' && CommandBuffer[i] <= '9')
    3142:	fc 01       	movw	r30, r24
    3144:	e0 50       	subi	r30, 0x00	; 0
    3146:	fe 4f       	sbci	r31, 0xFE	; 254
    3148:	20 81       	ld	r18, Z
    314a:	30 ed       	ldi	r19, 0xD0	; 208
    314c:	32 0f       	add	r19, r18
    314e:	3a 30       	cpi	r19, 0x0A	; 10
    3150:	28 f4       	brcc	.+10     	; 0x315c <HEX_Verification+0x2a>
		{
			CommandBuffer[i] = CommandBuffer[i] - '0';
    3152:	fc 01       	movw	r30, r24
    3154:	e0 50       	subi	r30, 0x00	; 0
    3156:	fe 4f       	sbci	r31, 0xFE	; 254
    3158:	30 83       	st	Z, r19
    315a:	37 c0       	rjmp	.+110    	; 0x31ca <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] >= 'A' && CommandBuffer[i] <= 'F')
    315c:	3f eb       	ldi	r19, 0xBF	; 191
    315e:	32 0f       	add	r19, r18
    3160:	36 30       	cpi	r19, 0x06	; 6
    3162:	30 f4       	brcc	.+12     	; 0x3170 <HEX_Verification+0x3e>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'A' + 10;
    3164:	fc 01       	movw	r30, r24
    3166:	e0 50       	subi	r30, 0x00	; 0
    3168:	fe 4f       	sbci	r31, 0xFE	; 254
    316a:	27 53       	subi	r18, 0x37	; 55
    316c:	20 83       	st	Z, r18
    316e:	2d c0       	rjmp	.+90     	; 0x31ca <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] >= 'a' && CommandBuffer[i] <= 'f')
    3170:	3f e9       	ldi	r19, 0x9F	; 159
    3172:	32 0f       	add	r19, r18
    3174:	36 30       	cpi	r19, 0x06	; 6
    3176:	30 f4       	brcc	.+12     	; 0x3184 <HEX_Verification+0x52>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'a' + 10;
    3178:	fc 01       	movw	r30, r24
    317a:	e0 50       	subi	r30, 0x00	; 0
    317c:	fe 4f       	sbci	r31, 0xFE	; 254
    317e:	27 55       	subi	r18, 0x57	; 87
    3180:	20 83       	st	Z, r18
    3182:	23 c0       	rjmp	.+70     	; 0x31ca <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] == '\r' || CommandBuffer[i] == '\n' || CommandBuffer[i] == '\0')
    3184:	2d 30       	cpi	r18, 0x0D	; 13
    3186:	41 f1       	breq	.+80     	; 0x31d8 <HEX_Verification+0xa6>
    3188:	2a 30       	cpi	r18, 0x0A	; 10
    318a:	41 f1       	breq	.+80     	; 0x31dc <HEX_Verification+0xaa>
    318c:	22 23       	and	r18, r18
    318e:	41 f1       	breq	.+80     	; 0x31e0 <HEX_Verification+0xae>
		{
			break;
		}
		else
		{
			USART_Data("Wrong Input \nMake sure input is HEX valid [0 - F] \n");
    3190:	6a e7       	ldi	r22, 0x7A	; 122
    3192:	71 e0       	ldi	r23, 0x01	; 1
    3194:	80 e0       	ldi	r24, 0x00	; 0
    3196:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
			Print_To_User(1, 0, "Here is what was inputted: 0x%02X \n", CommandBuffer, status_feature);
    319a:	80 e0       	ldi	r24, 0x00	; 0
    319c:	92 e0       	ldi	r25, 0x02	; 2
    319e:	7c 01       	movw	r14, r24
    31a0:	20 e8       	ldi	r18, 0x80	; 128
    31a2:	02 2f       	mov	r16, r18
    31a4:	0f 2e       	mov	r0, r31
    31a6:	f0 e0       	ldi	r31, 0x00	; 0
    31a8:	cf 2e       	mov	r12, r31
    31aa:	fa e0       	ldi	r31, 0x0A	; 10
    31ac:	df 2e       	mov	r13, r31
    31ae:	f0 2d       	mov	r31, r0
    31b0:	2e ea       	ldi	r18, 0xAE	; 174
    31b2:	31 e0       	ldi	r19, 0x01	; 1
    31b4:	40 e0       	ldi	r20, 0x00	; 0
    31b6:	60 e0       	ldi	r22, 0x00	; 0
    31b8:	70 e0       	ldi	r23, 0x00	; 0
    31ba:	81 e0       	ldi	r24, 0x01	; 1
    31bc:	90 e0       	ldi	r25, 0x00	; 0
    31be:	0e 94 ad 19 	call	0x335a	; 0x335a <Print_To_User>
			CLEAR_ARR();
    31c2:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
			return false; //return false, indicating failed test
    31c6:	80 e0       	ldi	r24, 0x00	; 0
    31c8:	0c c0       	rjmp	.+24     	; 0x31e2 <HEX_Verification+0xb0>
}

bool HEX_Verification() //verifies uint8_t (ASCII) to Hex validity and allocates in appropriated location
{
	//parse the data into usable hex values
	for (int i = 0; i <= FLASH_NAND_ADDRESS_MAX; i++)
    31ca:	01 96       	adiw	r24, 0x01	; 1
    31cc:	86 30       	cpi	r24, 0x06	; 6
    31ce:	91 05       	cpc	r25, r1
    31d0:	0c f4       	brge	.+2      	; 0x31d4 <HEX_Verification+0xa2>
    31d2:	b7 cf       	rjmp	.-146    	; 0x3142 <HEX_Verification+0x10>
			Print_To_User(1, 0, "Here is what was inputted: 0x%02X \n", CommandBuffer, status_feature);
			CLEAR_ARR();
			return false; //return false, indicating failed test
		}
	}
	return true; //return true, indicating passed test
    31d4:	81 e0       	ldi	r24, 0x01	; 1
    31d6:	05 c0       	rjmp	.+10     	; 0x31e2 <HEX_Verification+0xb0>
    31d8:	81 e0       	ldi	r24, 0x01	; 1
    31da:	03 c0       	rjmp	.+6      	; 0x31e2 <HEX_Verification+0xb0>
    31dc:	81 e0       	ldi	r24, 0x01	; 1
    31de:	01 c0       	rjmp	.+2      	; 0x31e2 <HEX_Verification+0xb0>
    31e0:	81 e0       	ldi	r24, 0x01	; 1
	//Print_To_User(6, 0, "Parsed nibble: 0x%02X\n", CommandBuffer, status_feature); //troubleshooting, verifies if ASCII is converted to hex values
}
    31e2:	0f 91       	pop	r16
    31e4:	ff 90       	pop	r15
    31e6:	ef 90       	pop	r14
    31e8:	df 90       	pop	r13
    31ea:	cf 90       	pop	r12
    31ec:	08 95       	ret

Disassembly of section .text.NAND_Address_Checker:

00003baa <NAND_Address_Checker>:

void NAND_Address_Checker() //returns user the Column and Block/Page Addresses
{
    3baa:	6f 92       	push	r6
    3bac:	7f 92       	push	r7
    3bae:	8f 92       	push	r8
    3bb0:	cf 92       	push	r12
    3bb2:	df 92       	push	r13
    3bb4:	ef 92       	push	r14
    3bb6:	ff 92       	push	r15
    3bb8:	0f 93       	push	r16
	USART_Data("---Column Address--- 2 bytes \n");
    3bba:	62 ed       	ldi	r22, 0xD2	; 210
    3bbc:	71 e0       	ldi	r23, 0x01	; 1
    3bbe:	80 e0       	ldi	r24, 0x00	; 0
    3bc0:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
	Print_To_User(COLUMN_ADDRESS, 0, "0x%02X \n", Byte_Address, status_feature);
    3bc4:	86 e2       	ldi	r24, 0x26	; 38
    3bc6:	92 e1       	ldi	r25, 0x12	; 18
    3bc8:	3c 01       	movw	r6, r24
    3bca:	20 e8       	ldi	r18, 0x80	; 128
    3bcc:	82 2e       	mov	r8, r18
    3bce:	0f 2e       	mov	r0, r31
    3bd0:	f0 e0       	ldi	r31, 0x00	; 0
    3bd2:	cf 2e       	mov	r12, r31
    3bd4:	fa e0       	ldi	r31, 0x0A	; 10
    3bd6:	df 2e       	mov	r13, r31
    3bd8:	f0 2d       	mov	r31, r0
    3bda:	08 2d       	mov	r16, r8
    3bdc:	73 01       	movw	r14, r6
    3bde:	21 ef       	ldi	r18, 0xF1	; 241
    3be0:	31 e0       	ldi	r19, 0x01	; 1
    3be2:	40 e0       	ldi	r20, 0x00	; 0
    3be4:	60 e0       	ldi	r22, 0x00	; 0
    3be6:	70 e0       	ldi	r23, 0x00	; 0
    3be8:	82 e0       	ldi	r24, 0x02	; 2
    3bea:	90 e0       	ldi	r25, 0x00	; 0
    3bec:	0e 94 ad 19 	call	0x335a	; 0x335a <Print_To_User>

	USART_Data("---Block/Page Address--- 3 bytes \n");	
    3bf0:	6a ef       	ldi	r22, 0xFA	; 250
    3bf2:	71 e0       	ldi	r23, 0x01	; 1
    3bf4:	80 e0       	ldi	r24, 0x00	; 0
    3bf6:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
	Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "0x%02X \n", Byte_Address, status_feature);
    3bfa:	21 ef       	ldi	r18, 0xF1	; 241
    3bfc:	31 e0       	ldi	r19, 0x01	; 1
    3bfe:	40 e0       	ldi	r20, 0x00	; 0
    3c00:	62 e0       	ldi	r22, 0x02	; 2
    3c02:	70 e0       	ldi	r23, 0x00	; 0
    3c04:	83 e0       	ldi	r24, 0x03	; 3
    3c06:	90 e0       	ldi	r25, 0x00	; 0
    3c08:	0e 94 ad 19 	call	0x335a	; 0x335a <Print_To_User>
}
    3c0c:	0f 91       	pop	r16
    3c0e:	ff 90       	pop	r15
    3c10:	ef 90       	pop	r14
    3c12:	df 90       	pop	r13
    3c14:	cf 90       	pop	r12
    3c16:	8f 90       	pop	r8
    3c18:	7f 90       	pop	r7
    3c1a:	6f 90       	pop	r6
    3c1c:	08 95       	ret

Disassembly of section .text.ExecuteCommand:

00001be8 <ExecuteCommand>:

void ExecuteCommand(const uint8_t *str) //Execute Command Line function
{
    1be8:	6f 92       	push	r6
    1bea:	7f 92       	push	r7
    1bec:	8f 92       	push	r8
    1bee:	cf 92       	push	r12
    1bf0:	df 92       	push	r13
    1bf2:	ef 92       	push	r14
    1bf4:	ff 92       	push	r15
    1bf6:	0f 93       	push	r16
    1bf8:	1f 93       	push	r17
    1bfa:	cf 93       	push	r28
    1bfc:	df 93       	push	r29
    1bfe:	6b 01       	movw	r12, r22
    1c00:	e8 2e       	mov	r14, r24
	if (strcmp(str, "Flash ID") == 0) //Flash ID Command
    1c02:	2d e1       	ldi	r18, 0x1D	; 29
    1c04:	32 e0       	ldi	r19, 0x02	; 2
    1c06:	40 e0       	ldi	r20, 0x00	; 0
    1c08:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1c0c:	89 2b       	or	r24, r25
    1c0e:	29 f4       	brne	.+10     	; 0x1c1a <ExecuteCommand+0x32>
	{
		CLEAR_ARR();
    1c10:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
		FLASH_ID(); //reads Device ID
    1c14:	0e 94 d2 1c 	call	0x39a4	; 0x39a4 <FLASH_ID>
    1c18:	e2 c1       	rjmp	.+964    	; 0x1fde <ExecuteCommand+0x3f6>
	}
	
	else if (strcmp(str, "NAND Addresses") == 0) //Tells user what is Column and Block/Page Addresses
    1c1a:	26 e2       	ldi	r18, 0x26	; 38
    1c1c:	32 e0       	ldi	r19, 0x02	; 2
    1c1e:	40 e0       	ldi	r20, 0x00	; 0
    1c20:	8e 2d       	mov	r24, r14
    1c22:	b6 01       	movw	r22, r12
    1c24:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1c28:	89 2b       	or	r24, r25
    1c2a:	19 f4       	brne	.+6      	; 0x1c32 <ExecuteCommand+0x4a>
	{
		NAND_Address_Checker();
    1c2c:	0e 94 d5 1d 	call	0x3baa	; 0x3baa <NAND_Address_Checker>
    1c30:	d6 c1       	rjmp	.+940    	; 0x1fde <ExecuteCommand+0x3f6>
	}
	
	else if (strcmp(str, "Parameter Page") == 0) //Basic Read Test Command
    1c32:	25 e3       	ldi	r18, 0x35	; 53
    1c34:	32 e0       	ldi	r19, 0x02	; 2
    1c36:	40 e0       	ldi	r20, 0x00	; 0
    1c38:	8e 2d       	mov	r24, r14
    1c3a:	b6 01       	movw	r22, r12
    1c3c:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1c40:	89 2b       	or	r24, r25
    1c42:	99 f5       	brne	.+102    	; 0x1caa <ExecuteCommand+0xc2>
	{
		s = 1; //sets main array address to the correct place
    1c44:	81 e0       	ldi	r24, 0x01	; 1
    1c46:	90 e0       	ldi	r25, 0x00	; 0
    1c48:	90 93 25 12 	sts	0x1225, r25	; 0x801225 <s+0x1>
    1c4c:	80 93 24 12 	sts	0x1224, r24	; 0x801224 <s>
		CLEAR_ARR();
    1c50:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
		FLASH_Para_Pg();
    1c54:	0e 94 9c 1f 	call	0x3f38	; 0x3f38 <FLASH_Para_Pg>
		
		//reading data from Data array
		//Print_To_User(PARAMETER_PAGE_SIZE, 0, "%i->Data Received: 0x%02X \n", data, status_feature);
		
		for (int i = 0; i < PARAMETER_PAGE_SIZE; i++) //address is incremented automatically after each byte is shifted out
    1c58:	c0 e0       	ldi	r28, 0x00	; 0
    1c5a:	d0 e0       	ldi	r29, 0x00	; 0
    1c5c:	21 c0       	rjmp	.+66     	; 0x1ca0 <ExecuteCommand+0xb8>
		{
			sprintf(status_feature, "%i->Data Received: 0x%02X \n", i, data[i]); //hex data to string
    1c5e:	fe 01       	movw	r30, r28
    1c60:	e1 5e       	subi	r30, 0xE1	; 225
    1c62:	f5 4f       	sbci	r31, 0xF5	; 245
    1c64:	80 81       	ld	r24, Z
    1c66:	1f 92       	push	r1
    1c68:	8f 93       	push	r24
    1c6a:	df 93       	push	r29
    1c6c:	cf 93       	push	r28
    1c6e:	84 e4       	ldi	r24, 0x44	; 68
    1c70:	92 e0       	ldi	r25, 0x02	; 2
    1c72:	a0 e0       	ldi	r26, 0x00	; 0
    1c74:	af 93       	push	r26
    1c76:	9f 93       	push	r25
    1c78:	8f 93       	push	r24
    1c7a:	00 e0       	ldi	r16, 0x00	; 0
    1c7c:	1a e0       	ldi	r17, 0x0A	; 10
    1c7e:	1f 93       	push	r17
    1c80:	0f 93       	push	r16
    1c82:	0e 94 c8 21 	call	0x4390	; 0x4390 <_sprintf_cdnopuxX>
			USART_Data(status_feature);
    1c86:	b8 01       	movw	r22, r16
    1c88:	80 e8       	ldi	r24, 0x80	; 128
    1c8a:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		FLASH_Para_Pg();
		
		//reading data from Data array
		//Print_To_User(PARAMETER_PAGE_SIZE, 0, "%i->Data Received: 0x%02X \n", data, status_feature);
		
		for (int i = 0; i < PARAMETER_PAGE_SIZE; i++) //address is incremented automatically after each byte is shifted out
    1c8e:	21 96       	adiw	r28, 0x01	; 1
    1c90:	8d b7       	in	r24, 0x3d	; 61
    1c92:	9e b7       	in	r25, 0x3e	; 62
    1c94:	09 96       	adiw	r24, 0x09	; 9
    1c96:	0f b6       	in	r0, 0x3f	; 63
    1c98:	f8 94       	cli
    1c9a:	9e bf       	out	0x3e, r25	; 62
    1c9c:	0f be       	out	0x3f, r0	; 63
    1c9e:	8d bf       	out	0x3d, r24	; 61
    1ca0:	cf 3f       	cpi	r28, 0xFF	; 255
    1ca2:	d1 05       	cpc	r29, r1
    1ca4:	e1 f2       	breq	.-72     	; 0x1c5e <ExecuteCommand+0x76>
    1ca6:	dc f2       	brlt	.-74     	; 0x1c5e <ExecuteCommand+0x76>
    1ca8:	9a c1       	rjmp	.+820    	; 0x1fde <ExecuteCommand+0x3f6>
			sprintf(status_feature, "%i->Data Received: 0x%02X \n", i, data[i]); //hex data to string
			USART_Data(status_feature);
		}	
	}
	
	else if (strcmp(str, "Feature Registers") == 0) //leads user to the Feature registers of the device
    1caa:	20 e6       	ldi	r18, 0x60	; 96
    1cac:	32 e0       	ldi	r19, 0x02	; 2
    1cae:	40 e0       	ldi	r20, 0x00	; 0
    1cb0:	8e 2d       	mov	r24, r14
    1cb2:	b6 01       	movw	r22, r12
    1cb4:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1cb8:	89 2b       	or	r24, r25
    1cba:	09 f0       	breq	.+2      	; 0x1cbe <ExecuteCommand+0xd6>
    1cbc:	a1 c0       	rjmp	.+322    	; 0x1e00 <ExecuteCommand+0x218>
	{
		CLEAR_ARR();
    1cbe:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
		
		USART_Data("1) Block Lock \n");
    1cc2:	62 e7       	ldi	r22, 0x72	; 114
    1cc4:	72 e0       	ldi	r23, 0x02	; 2
    1cc6:	80 e0       	ldi	r24, 0x00	; 0
    1cc8:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		USART_Data("2) Configuration \n");
    1ccc:	62 e8       	ldi	r22, 0x82	; 130
    1cce:	72 e0       	ldi	r23, 0x02	; 2
    1cd0:	80 e0       	ldi	r24, 0x00	; 0
    1cd2:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		USART_Data("3) Status \n");
    1cd6:	65 e9       	ldi	r22, 0x95	; 149
    1cd8:	72 e0       	ldi	r23, 0x02	; 2
    1cda:	80 e0       	ldi	r24, 0x00	; 0
    1cdc:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		USART_Data("4) Die Select \n");
    1ce0:	61 ea       	ldi	r22, 0xA1	; 161
    1ce2:	72 e0       	ldi	r23, 0x02	; 2
    1ce4:	80 e0       	ldi	r24, 0x00	; 0
    1ce6:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		
		UserInput(false);
    1cea:	80 e0       	ldi	r24, 0x00	; 0
    1cec:	0e 94 f7 18 	call	0x31ee	; 0x31ee <UserInput>
		
		if (strcmp(CommandBuffer, "Block Lock") == 0) //goes to Block Lock Register
    1cf0:	80 e0       	ldi	r24, 0x00	; 0
    1cf2:	92 e0       	ldi	r25, 0x02	; 2
    1cf4:	6c 01       	movw	r12, r24
    1cf6:	20 e8       	ldi	r18, 0x80	; 128
    1cf8:	e2 2e       	mov	r14, r18
    1cfa:	21 eb       	ldi	r18, 0xB1	; 177
    1cfc:	32 e0       	ldi	r19, 0x02	; 2
    1cfe:	40 e0       	ldi	r20, 0x00	; 0
    1d00:	8e 2d       	mov	r24, r14
    1d02:	b6 01       	movw	r22, r12
    1d04:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1d08:	89 2b       	or	r24, r25
    1d0a:	09 f0       	breq	.+2      	; 0x1d0e <ExecuteCommand+0x126>
    1d0c:	4e c0       	rjmp	.+156    	; 0x1daa <ExecuteCommand+0x1c2>
		{
			CLEAR_ARR();
    1d0e:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
			
			USART_Data("1) Lock \n");
    1d12:	6c eb       	ldi	r22, 0xBC	; 188
    1d14:	72 e0       	ldi	r23, 0x02	; 2
    1d16:	80 e0       	ldi	r24, 0x00	; 0
    1d18:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
			USART_Data("2) Unlock \n");
    1d1c:	66 ec       	ldi	r22, 0xC6	; 198
    1d1e:	72 e0       	ldi	r23, 0x02	; 2
    1d20:	80 e0       	ldi	r24, 0x00	; 0
    1d22:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
			USART_Data("3) Read \n");
    1d26:	62 ed       	ldi	r22, 0xD2	; 210
    1d28:	72 e0       	ldi	r23, 0x02	; 2
    1d2a:	80 e0       	ldi	r24, 0x00	; 0
    1d2c:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
			USART_Data("4) Configure \n");
    1d30:	6c ed       	ldi	r22, 0xDC	; 220
    1d32:	72 e0       	ldi	r23, 0x02	; 2
    1d34:	80 e0       	ldi	r24, 0x00	; 0
    1d36:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
			
			UserInput(false); //User Input is added into an array, which will be written to memory
    1d3a:	80 e0       	ldi	r24, 0x00	; 0
    1d3c:	0e 94 f7 18 	call	0x31ee	; 0x31ee <UserInput>
			
			if (strcmp(CommandBuffer, "Lock") == 0) //Locks Flash Device
    1d40:	2b ee       	ldi	r18, 0xEB	; 235
    1d42:	32 e0       	ldi	r19, 0x02	; 2
    1d44:	40 e0       	ldi	r20, 0x00	; 0
    1d46:	8e 2d       	mov	r24, r14
    1d48:	b6 01       	movw	r22, r12
    1d4a:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1d4e:	89 2b       	or	r24, r25
    1d50:	21 f4       	brne	.+8      	; 0x1d5a <ExecuteCommand+0x172>
			{
				FLASH_Block_Lock_Setter(true);
    1d52:	81 e0       	ldi	r24, 0x01	; 1
    1d54:	0e 94 0f 1e 	call	0x3c1e	; 0x3c1e <FLASH_Block_Lock_Setter>
    1d58:	42 c1       	rjmp	.+644    	; 0x1fde <ExecuteCommand+0x3f6>
			}
			else if (strcmp(CommandBuffer, "Unlock") == 0) //Unlocks Flash Device
    1d5a:	20 ef       	ldi	r18, 0xF0	; 240
    1d5c:	32 e0       	ldi	r19, 0x02	; 2
    1d5e:	40 e0       	ldi	r20, 0x00	; 0
    1d60:	8e 2d       	mov	r24, r14
    1d62:	b6 01       	movw	r22, r12
    1d64:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1d68:	89 2b       	or	r24, r25
    1d6a:	21 f4       	brne	.+8      	; 0x1d74 <ExecuteCommand+0x18c>
			{
				FLASH_Block_Lock_Setter(false);
    1d6c:	80 e0       	ldi	r24, 0x00	; 0
    1d6e:	0e 94 0f 1e 	call	0x3c1e	; 0x3c1e <FLASH_Block_Lock_Setter>
    1d72:	35 c1       	rjmp	.+618    	; 0x1fde <ExecuteCommand+0x3f6>
			}
			else if (strcmp(CommandBuffer, "Read") == 0) //Read Block Lock Register
    1d74:	27 ef       	ldi	r18, 0xF7	; 247
    1d76:	32 e0       	ldi	r19, 0x02	; 2
    1d78:	40 e0       	ldi	r20, 0x00	; 0
    1d7a:	8e 2d       	mov	r24, r14
    1d7c:	b6 01       	movw	r22, r12
    1d7e:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1d82:	89 2b       	or	r24, r25
    1d84:	21 f4       	brne	.+8      	; 0x1d8e <ExecuteCommand+0x1a6>
			{
				FLASH_Block_Lock(false);
    1d86:	80 e0       	ldi	r24, 0x00	; 0
    1d88:	0e 94 03 1a 	call	0x3406	; 0x3406 <FLASH_Block_Lock>
    1d8c:	28 c1       	rjmp	.+592    	; 0x1fde <ExecuteCommand+0x3f6>
			}
			else if (strcmp(CommandBuffer, "Configure") == 0) //Configure Block Lock Register
    1d8e:	2c ef       	ldi	r18, 0xFC	; 252
    1d90:	32 e0       	ldi	r19, 0x02	; 2
    1d92:	40 e0       	ldi	r20, 0x00	; 0
    1d94:	8e 2d       	mov	r24, r14
    1d96:	b6 01       	movw	r22, r12
    1d98:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1d9c:	89 2b       	or	r24, r25
    1d9e:	09 f0       	breq	.+2      	; 0x1da2 <ExecuteCommand+0x1ba>
    1da0:	1e c1       	rjmp	.+572    	; 0x1fde <ExecuteCommand+0x3f6>
			{
				FLASH_Block_Lock(true);
    1da2:	81 e0       	ldi	r24, 0x01	; 1
    1da4:	0e 94 03 1a 	call	0x3406	; 0x3406 <FLASH_Block_Lock>
    1da8:	1a c1       	rjmp	.+564    	; 0x1fde <ExecuteCommand+0x3f6>
			}
		}
		
		else if (strcmp(CommandBuffer, "Configuration") == 0) //goes to the Configuration Register
    1daa:	26 e0       	ldi	r18, 0x06	; 6
    1dac:	33 e0       	ldi	r19, 0x03	; 3
    1dae:	40 e0       	ldi	r20, 0x00	; 0
    1db0:	8e 2d       	mov	r24, r14
    1db2:	b6 01       	movw	r22, r12
    1db4:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1db8:	89 2b       	or	r24, r25
    1dba:	29 f4       	brne	.+10     	; 0x1dc6 <ExecuteCommand+0x1de>
		{
			CLEAR_ARR();
    1dbc:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
			FLASH_Configuration(); //get Configuration Register Data
    1dc0:	0e 94 98 1d 	call	0x3b30	; 0x3b30 <FLASH_Configuration>
    1dc4:	0c c1       	rjmp	.+536    	; 0x1fde <ExecuteCommand+0x3f6>
		}
		
		else if (strcmp(CommandBuffer, "Status") == 0) //goes to the Status Register
    1dc6:	24 e1       	ldi	r18, 0x14	; 20
    1dc8:	33 e0       	ldi	r19, 0x03	; 3
    1dca:	40 e0       	ldi	r20, 0x00	; 0
    1dcc:	8e 2d       	mov	r24, r14
    1dce:	b6 01       	movw	r22, r12
    1dd0:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1dd4:	89 2b       	or	r24, r25
    1dd6:	29 f4       	brne	.+10     	; 0x1de2 <ExecuteCommand+0x1fa>
		{
			CLEAR_ARR();
    1dd8:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
			FLASH_Status(); //reads status register
    1ddc:	0e 94 17 1d 	call	0x3a2e	; 0x3a2e <FLASH_Status>
    1de0:	fe c0       	rjmp	.+508    	; 0x1fde <ExecuteCommand+0x3f6>
		}
		
		else if (strcmp(CommandBuffer, "Die Select") == 0) //goes to the Die Register
    1de2:	2b e1       	ldi	r18, 0x1B	; 27
    1de4:	33 e0       	ldi	r19, 0x03	; 3
    1de6:	40 e0       	ldi	r20, 0x00	; 0
    1de8:	8e 2d       	mov	r24, r14
    1dea:	b6 01       	movw	r22, r12
    1dec:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1df0:	89 2b       	or	r24, r25
    1df2:	09 f0       	breq	.+2      	; 0x1df6 <ExecuteCommand+0x20e>
    1df4:	f4 c0       	rjmp	.+488    	; 0x1fde <ExecuteCommand+0x3f6>
		{
			CLEAR_ARR();
    1df6:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
			FLASH_Die_Selection(); //at the moment only reads to this
    1dfa:	0e 94 5b 1d 	call	0x3ab6	; 0x3ab6 <FLASH_Die_Selection>
    1dfe:	ef c0       	rjmp	.+478    	; 0x1fde <ExecuteCommand+0x3f6>
		}
	}
	
	else if (strcmp(str, "Test Methods") == 0) //this holds test methods of the device
    1e00:	26 e2       	ldi	r18, 0x26	; 38
    1e02:	33 e0       	ldi	r19, 0x03	; 3
    1e04:	40 e0       	ldi	r20, 0x00	; 0
    1e06:	8e 2d       	mov	r24, r14
    1e08:	b6 01       	movw	r22, r12
    1e0a:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1e0e:	89 2b       	or	r24, r25
    1e10:	09 f0       	breq	.+2      	; 0x1e14 <ExecuteCommand+0x22c>
    1e12:	b9 c0       	rjmp	.+370    	; 0x1f86 <ExecuteCommand+0x39e>
	{
		CLEAR_ARR();
    1e14:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
		
		USART_Data("1) Write Test \n");
    1e18:	63 e3       	ldi	r22, 0x33	; 51
    1e1a:	73 e0       	ldi	r23, 0x03	; 3
    1e1c:	80 e0       	ldi	r24, 0x00	; 0
    1e1e:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		USART_Data("2) Read Test \n");
    1e22:	63 e4       	ldi	r22, 0x43	; 67
    1e24:	73 e0       	ldi	r23, 0x03	; 3
    1e26:	80 e0       	ldi	r24, 0x00	; 0
    1e28:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		USART_Data("3) Erase Test \n");
    1e2c:	62 e5       	ldi	r22, 0x52	; 82
    1e2e:	73 e0       	ldi	r23, 0x03	; 3
    1e30:	80 e0       	ldi	r24, 0x00	; 0
    1e32:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		USART_Data("4) Block Checker \n");
    1e36:	62 e6       	ldi	r22, 0x62	; 98
    1e38:	73 e0       	ldi	r23, 0x03	; 3
    1e3a:	80 e0       	ldi	r24, 0x00	; 0
    1e3c:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		USART_Data("5) Page Checker \n");
    1e40:	65 e7       	ldi	r22, 0x75	; 117
    1e42:	73 e0       	ldi	r23, 0x03	; 3
    1e44:	80 e0       	ldi	r24, 0x00	; 0
    1e46:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		
		UserInput(false);
    1e4a:	80 e0       	ldi	r24, 0x00	; 0
    1e4c:	0e 94 f7 18 	call	0x31ee	; 0x31ee <UserInput>
		
		if (strcmp(CommandBuffer, "Write Test") == 0) //write to memory test
    1e50:	80 e0       	ldi	r24, 0x00	; 0
    1e52:	92 e0       	ldi	r25, 0x02	; 2
    1e54:	3c 01       	movw	r6, r24
    1e56:	20 e8       	ldi	r18, 0x80	; 128
    1e58:	82 2e       	mov	r8, r18
    1e5a:	27 e8       	ldi	r18, 0x87	; 135
    1e5c:	33 e0       	ldi	r19, 0x03	; 3
    1e5e:	40 e0       	ldi	r20, 0x00	; 0
    1e60:	88 2d       	mov	r24, r8
    1e62:	b3 01       	movw	r22, r6
    1e64:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1e68:	89 2b       	or	r24, r25
    1e6a:	81 f5       	brne	.+96     	; 0x1ecc <ExecuteCommand+0x2e4>
		{
			s = 0;
    1e6c:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1e70:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
			CLEAR_ARR();
    1e74:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
			
			UserInput(false); //User Input is added into an array, which will be written to memory
    1e78:	80 e0       	ldi	r24, 0x00	; 0
    1e7a:	0e 94 f7 18 	call	0x31ee	; 0x31ee <UserInput>
			
			USART_Data("---Column Address--- 2 bytes \n");
    1e7e:	62 ed       	ldi	r22, 0xD2	; 210
    1e80:	71 e0       	ldi	r23, 0x01	; 1
    1e82:	80 e0       	ldi	r24, 0x00	; 0
    1e84:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
			COLUMN_BLOCK_PAGE_ADDRESSER(false);
    1e88:	80 e0       	ldi	r24, 0x00	; 0
    1e8a:	0e 94 b3 12 	call	0x2566	; 0x2566 <COLUMN_BLOCK_PAGE_ADDRESSER>

			USART_Data("---Block/Page Address--- 3 bytes \n");
    1e8e:	6a ef       	ldi	r22, 0xFA	; 250
    1e90:	71 e0       	ldi	r23, 0x01	; 1
    1e92:	80 e0       	ldi	r24, 0x00	; 0
    1e94:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
			COLUMN_BLOCK_PAGE_ADDRESSER(true);
    1e98:	81 e0       	ldi	r24, 0x01	; 1
    1e9a:	0e 94 b3 12 	call	0x2566	; 0x2566 <COLUMN_BLOCK_PAGE_ADDRESSER>
			
			Print_To_User(FLASH_NAND_ADDRESS_MAX, 0, "Here is what was inputted: 0x%02X \n", Byte_Address, status_feature);
    1e9e:	86 e2       	ldi	r24, 0x26	; 38
    1ea0:	92 e1       	ldi	r25, 0x12	; 18
    1ea2:	7c 01       	movw	r14, r24
    1ea4:	20 e8       	ldi	r18, 0x80	; 128
    1ea6:	02 2f       	mov	r16, r18
    1ea8:	0f 2e       	mov	r0, r31
    1eaa:	f0 e0       	ldi	r31, 0x00	; 0
    1eac:	cf 2e       	mov	r12, r31
    1eae:	fa e0       	ldi	r31, 0x0A	; 10
    1eb0:	df 2e       	mov	r13, r31
    1eb2:	f0 2d       	mov	r31, r0
    1eb4:	2e ea       	ldi	r18, 0xAE	; 174
    1eb6:	31 e0       	ldi	r19, 0x01	; 1
    1eb8:	40 e0       	ldi	r20, 0x00	; 0
    1eba:	60 e0       	ldi	r22, 0x00	; 0
    1ebc:	70 e0       	ldi	r23, 0x00	; 0
    1ebe:	85 e0       	ldi	r24, 0x05	; 5
    1ec0:	90 e0       	ldi	r25, 0x00	; 0
    1ec2:	0e 94 ad 19 	call	0x335a	; 0x335a <Print_To_User>
			
			FLASH_Page_Program(); //adds user input into Flash Write Function, to memory...
    1ec6:	0e 94 49 1e 	call	0x3c92	; 0x3c92 <FLASH_Page_Program>
    1eca:	89 c0       	rjmp	.+274    	; 0x1fde <ExecuteCommand+0x3f6>
		}
		
		else if (strcmp(CommandBuffer, "Read Test") == 0) //read from memory test
    1ecc:	22 e9       	ldi	r18, 0x92	; 146
    1ece:	33 e0       	ldi	r19, 0x03	; 3
    1ed0:	40 e0       	ldi	r20, 0x00	; 0
    1ed2:	88 2d       	mov	r24, r8
    1ed4:	b3 01       	movw	r22, r6
    1ed6:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1eda:	89 2b       	or	r24, r25
    1edc:	89 f4       	brne	.+34     	; 0x1f00 <ExecuteCommand+0x318>
		{
			s = 0; //sets main array to normal operations
    1ede:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1ee2:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
			CLEAR_ARR();
    1ee6:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
			FLASH_Page_Read();
    1eea:	0e 94 b5 20 	call	0x416a	; 0x416a <FLASH_Page_Read>

			USART_Data(data);
    1eee:	6f e1       	ldi	r22, 0x1F	; 31
    1ef0:	7a e0       	ldi	r23, 0x0A	; 10
    1ef2:	80 e8       	ldi	r24, 0x80	; 128
    1ef4:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
			USART_TX_Data('\n');
    1ef8:	8a e0       	ldi	r24, 0x0A	; 10
    1efa:	0e 94 e6 22 	call	0x45cc	; 0x45cc <USART_TX_Data>
    1efe:	6f c0       	rjmp	.+222    	; 0x1fde <ExecuteCommand+0x3f6>
		}
		
		else if (strcmp(CommandBuffer, "Erase Test") == 0) //erases by blocks
    1f00:	2c e9       	ldi	r18, 0x9C	; 156
    1f02:	33 e0       	ldi	r19, 0x03	; 3
    1f04:	40 e0       	ldi	r20, 0x00	; 0
    1f06:	88 2d       	mov	r24, r8
    1f08:	b3 01       	movw	r22, r6
    1f0a:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1f0e:	89 2b       	or	r24, r25
    1f10:	49 f4       	brne	.+18     	; 0x1f24 <ExecuteCommand+0x33c>
		{
			s = 0; //sets main array address to normal operation
    1f12:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1f16:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
			CLEAR_ARR();
    1f1a:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
			FLASH_Block_Erase(); //Erases Flash Block
    1f1e:	0e 94 74 20 	call	0x40e8	; 0x40e8 <FLASH_Block_Erase>
    1f22:	5d c0       	rjmp	.+186    	; 0x1fde <ExecuteCommand+0x3f6>
		}
		
		//this might stick as part of the main options, but its mostly meant for debugging bad blocks...
		else if (strcmp(CommandBuffer, "Block Checker") == 0) //verifies availability of the block
    1f24:	27 ea       	ldi	r18, 0xA7	; 167
    1f26:	33 e0       	ldi	r19, 0x03	; 3
    1f28:	40 e0       	ldi	r20, 0x00	; 0
    1f2a:	88 2d       	mov	r24, r8
    1f2c:	b3 01       	movw	r22, r6
    1f2e:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1f32:	89 2b       	or	r24, r25
    1f34:	c1 f4       	brne	.+48     	; 0x1f66 <ExecuteCommand+0x37e>
		{
			s = 0;
    1f36:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1f3a:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
			CLEAR_ARR();
    1f3e:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
			FLASH_Page_Read();
    1f42:	0e 94 b5 20 	call	0x416a	; 0x416a <FLASH_Page_Read>

			if (HEX_ID[0] != 0xFF)
    1f46:	80 91 1f 12 	lds	r24, 0x121F	; 0x80121f <HEX_ID>
    1f4a:	8f 3f       	cpi	r24, 0xFF	; 255
    1f4c:	31 f0       	breq	.+12     	; 0x1f5a <ExecuteCommand+0x372>
			{
				USART_Data("Block is marked bad\n");
    1f4e:	65 eb       	ldi	r22, 0xB5	; 181
    1f50:	73 e0       	ldi	r23, 0x03	; 3
    1f52:	80 e0       	ldi	r24, 0x00	; 0
    1f54:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
    1f58:	42 c0       	rjmp	.+132    	; 0x1fde <ExecuteCommand+0x3f6>
			}
			else
			{
				USART_Data("Block appears clean\n");
    1f5a:	6a ec       	ldi	r22, 0xCA	; 202
    1f5c:	73 e0       	ldi	r23, 0x03	; 3
    1f5e:	80 e0       	ldi	r24, 0x00	; 0
    1f60:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
    1f64:	3c c0       	rjmp	.+120    	; 0x1fde <ExecuteCommand+0x3f6>
			}
		}
		
		//meant for debugging bad pages in block...
		else if (strcmp(str, "Page Checker") == 0) //determines if page is good or bad...
    1f66:	2f ed       	ldi	r18, 0xDF	; 223
    1f68:	33 e0       	ldi	r19, 0x03	; 3
    1f6a:	40 e0       	ldi	r20, 0x00	; 0
    1f6c:	8e 2d       	mov	r24, r14
    1f6e:	b6 01       	movw	r22, r12
    1f70:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1f74:	89 2b       	or	r24, r25
    1f76:	99 f5       	brne	.+102    	; 0x1fde <ExecuteCommand+0x3f6>
		{
			s = 0;
    1f78:	10 92 25 12 	sts	0x1225, r1	; 0x801225 <s+0x1>
    1f7c:	10 92 24 12 	sts	0x1224, r1	; 0x801224 <s>
			Page_Tester();
    1f80:	0e 94 39 18 	call	0x3072	; 0x3072 <Page_Tester>
    1f84:	2c c0       	rjmp	.+88     	; 0x1fde <ExecuteCommand+0x3f6>
		}
	}
	
	else if (strcmp(str, "Reset") == 0) //Basic Read Test Command
    1f86:	2c ee       	ldi	r18, 0xEC	; 236
    1f88:	33 e0       	ldi	r19, 0x03	; 3
    1f8a:	40 e0       	ldi	r20, 0x00	; 0
    1f8c:	8e 2d       	mov	r24, r14
    1f8e:	b6 01       	movw	r22, r12
    1f90:	0e 94 30 20 	call	0x4060	; 0x4060 <strcmp>
    1f94:	89 2b       	or	r24, r25
    1f96:	29 f4       	brne	.+10     	; 0x1fa2 <ExecuteCommand+0x3ba>
	{
		CLEAR_ARR();
    1f98:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
		FLASH_Reset();
    1f9c:	0e 94 33 22 	call	0x4466	; 0x4466 <FLASH_Reset>
    1fa0:	1e c0       	rjmp	.+60     	; 0x1fde <ExecuteCommand+0x3f6>
	}
	
	else
	{
		USART_Data("1) Flash ID \n");
    1fa2:	62 ef       	ldi	r22, 0xF2	; 242
    1fa4:	73 e0       	ldi	r23, 0x03	; 3
    1fa6:	80 e0       	ldi	r24, 0x00	; 0
    1fa8:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		USART_Data("2) NAND Addresses \n");
    1fac:	60 e0       	ldi	r22, 0x00	; 0
    1fae:	74 e0       	ldi	r23, 0x04	; 4
    1fb0:	80 e0       	ldi	r24, 0x00	; 0
    1fb2:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		USART_Data("3) Parameter Page \n");
    1fb6:	64 e1       	ldi	r22, 0x14	; 20
    1fb8:	74 e0       	ldi	r23, 0x04	; 4
    1fba:	80 e0       	ldi	r24, 0x00	; 0
    1fbc:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		USART_Data("4) Feature Registers \n");
    1fc0:	68 e2       	ldi	r22, 0x28	; 40
    1fc2:	74 e0       	ldi	r23, 0x04	; 4
    1fc4:	80 e0       	ldi	r24, 0x00	; 0
    1fc6:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		USART_Data("5) Test Methods \n");
    1fca:	6f e3       	ldi	r22, 0x3F	; 63
    1fcc:	74 e0       	ldi	r23, 0x04	; 4
    1fce:	80 e0       	ldi	r24, 0x00	; 0
    1fd0:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
		USART_Data("6) Reset \n");
    1fd4:	61 e5       	ldi	r22, 0x51	; 81
    1fd6:	74 e0       	ldi	r23, 0x04	; 4
    1fd8:	80 e0       	ldi	r24, 0x00	; 0
    1fda:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
	}
}
    1fde:	df 91       	pop	r29
    1fe0:	cf 91       	pop	r28
    1fe2:	1f 91       	pop	r17
    1fe4:	0f 91       	pop	r16
    1fe6:	ff 90       	pop	r15
    1fe8:	ef 90       	pop	r14
    1fea:	df 90       	pop	r13
    1fec:	cf 90       	pop	r12
    1fee:	8f 90       	pop	r8
    1ff0:	7f 90       	pop	r7
    1ff2:	6f 90       	pop	r6
    1ff4:	08 95       	ret

Disassembly of section .text.UserInput:

000031ee <UserInput>:

int arr_address = 0; //for CommandBuffer array
int input_counter = 0; //to count the number of input characters 

void UserInput(bool command) //asking for user input
{
    31ee:	cf 92       	push	r12
    31f0:	df 92       	push	r13
    31f2:	ef 92       	push	r14
    31f4:	cf 93       	push	r28
    31f6:	c8 2f       	mov	r28, r24
	USART_Data("->User Input:\n"); //asking for User Input
    31f8:	6c e5       	ldi	r22, 0x5C	; 92
    31fa:	74 e0       	ldi	r23, 0x04	; 4
    31fc:	80 e0       	ldi	r24, 0x00	; 0
    31fe:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
	
	input_counter = 0; //reset input counter
    3202:	10 92 2f 12 	sts	0x122F, r1	; 0x80122f <_end+0x1>
    3206:	10 92 2e 12 	sts	0x122E, r1	; 0x80122e <_end>
	
	c = USART_RX_Data(); //receive user uint8_t data type input
    320a:	0e 94 ed 22 	call	0x45da	; 0x45da <USART_RX_Data>
    320e:	80 93 1e 0a 	sts	0x0A1E, r24	; 0x800a1e <c>
	
	while ((c != '\r')) //(c != '\n') &&
    3212:	25 c0       	rjmp	.+74     	; 0x325e <UserInput+0x70>
	{
		input_counter++; //increment input counter
    3214:	80 91 2e 12 	lds	r24, 0x122E	; 0x80122e <_end>
    3218:	90 91 2f 12 	lds	r25, 0x122F	; 0x80122f <_end+0x1>
    321c:	01 96       	adiw	r24, 0x01	; 1
    321e:	90 93 2f 12 	sts	0x122F, r25	; 0x80122f <_end+0x1>
    3222:	80 93 2e 12 	sts	0x122E, r24	; 0x80122e <_end>
		CommandBuffer[arr_address] = c; //adding uint8_t into array at index, creating a string
    3226:	80 91 30 12 	lds	r24, 0x1230	; 0x801230 <arr_address>
    322a:	90 91 31 12 	lds	r25, 0x1231	; 0x801231 <arr_address+0x1>
    322e:	fc 01       	movw	r30, r24
    3230:	e0 50       	subi	r30, 0x00	; 0
    3232:	fe 4f       	sbci	r31, 0xFE	; 254
    3234:	20 83       	st	Z, r18
		if (arr_address >= sizeof(CommandBuffer)) //making this an endless array for command lines
    3236:	81 15       	cp	r24, r1
    3238:	98 40       	sbci	r25, 0x08	; 8
    323a:	20 f0       	brcs	.+8      	; 0x3244 <UserInput+0x56>
		{
			arr_address = 0; //resets array at address 0
    323c:	10 92 31 12 	sts	0x1231, r1	; 0x801231 <arr_address+0x1>
    3240:	10 92 30 12 	sts	0x1230, r1	; 0x801230 <arr_address>
		}
		arr_address++;
    3244:	80 91 30 12 	lds	r24, 0x1230	; 0x801230 <arr_address>
    3248:	90 91 31 12 	lds	r25, 0x1231	; 0x801231 <arr_address+0x1>
    324c:	01 96       	adiw	r24, 0x01	; 1
    324e:	90 93 31 12 	sts	0x1231, r25	; 0x801231 <arr_address+0x1>
    3252:	80 93 30 12 	sts	0x1230, r24	; 0x801230 <arr_address>
		c = USART_RX_Data(); //receive user uint8_t data type input
    3256:	0e 94 ed 22 	call	0x45da	; 0x45da <USART_RX_Data>
    325a:	80 93 1e 0a 	sts	0x0A1E, r24	; 0x800a1e <c>
	
	input_counter = 0; //reset input counter
	
	c = USART_RX_Data(); //receive user uint8_t data type input
	
	while ((c != '\r')) //(c != '\n') &&
    325e:	20 91 1e 0a 	lds	r18, 0x0A1E	; 0x800a1e <c>
    3262:	2d 30       	cpi	r18, 0x0D	; 13
    3264:	b9 f6       	brne	.-82     	; 0x3214 <UserInput+0x26>
		}
		arr_address++;
		c = USART_RX_Data(); //receive user uint8_t data type input
	}
	
	CommandBuffer[arr_address] = '\0'; //adding NULL '\0' to mark end of Command String...; adding carriage return '\r' until I can get NULL to work...
    3266:	e0 91 30 12 	lds	r30, 0x1230	; 0x801230 <arr_address>
    326a:	f0 91 31 12 	lds	r31, 0x1231	; 0x801231 <arr_address+0x1>
    326e:	e0 50       	subi	r30, 0x00	; 0
    3270:	fe 4f       	sbci	r31, 0xFE	; 254
    3272:	10 82       	st	Z, r1
	arr_address = 0; //resets array at address 0
    3274:	10 92 31 12 	sts	0x1231, r1	; 0x801231 <arr_address+0x1>
    3278:	10 92 30 12 	sts	0x1230, r1	; 0x801230 <arr_address>
	
	USART_Data(CommandBuffer); //shows what the user wrote on terminal
    327c:	80 e0       	ldi	r24, 0x00	; 0
    327e:	92 e0       	ldi	r25, 0x02	; 2
    3280:	6c 01       	movw	r12, r24
    3282:	20 e8       	ldi	r18, 0x80	; 128
    3284:	e2 2e       	mov	r14, r18
    3286:	8e 2d       	mov	r24, r14
    3288:	b6 01       	movw	r22, r12
    328a:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
	USART_TX_Data('\n');
    328e:	8a e0       	ldi	r24, 0x0A	; 10
    3290:	0e 94 e6 22 	call	0x45cc	; 0x45cc <USART_TX_Data>
	
	if (command)
    3294:	cc 23       	and	r28, r28
    3296:	21 f0       	breq	.+8      	; 0x32a0 <UserInput+0xb2>
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
    3298:	8e 2d       	mov	r24, r14
    329a:	b6 01       	movw	r22, r12
    329c:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <ExecuteCommand>
}
    32a0:	cf 91       	pop	r28
    32a2:	ef 90       	pop	r14
    32a4:	df 90       	pop	r13
    32a6:	cf 90       	pop	r12
    32a8:	08 95       	ret

Disassembly of section .text.COLUMN_BLOCK_PAGE_ADDRESSER:

00002566 <COLUMN_BLOCK_PAGE_ADDRESSER>:
		USART_Data(arr_dest);
	}
}

void COLUMN_BLOCK_PAGE_ADDRESSER(bool addr_type) //gets hex number for Column and Block/Page address
{
    2566:	cf 92       	push	r12
    2568:	df 92       	push	r13
    256a:	ef 92       	push	r14
    256c:	ff 92       	push	r15
    256e:	0f 93       	push	r16
    2570:	cf 93       	push	r28
    2572:	c8 2f       	mov	r28, r24
	UserInput(false); //get the hex numbers, false because not command
    2574:	80 e0       	ldi	r24, 0x00	; 0
    2576:	0e 94 f7 18 	call	0x31ee	; 0x31ee <UserInput>
	
	if (addr_type == false) //false, so address type is Column Address
    257a:	c1 11       	cpse	r28, r1
    257c:	4b c0       	rjmp	.+150    	; 0x2614 <COLUMN_BLOCK_PAGE_ADDRESSER+0xae>
	{
		if (input_counter != 4) //has to be 4 inputs
    257e:	80 91 2e 12 	lds	r24, 0x122E	; 0x80122e <_end>
    2582:	90 91 2f 12 	lds	r25, 0x122F	; 0x80122f <_end+0x1>
    2586:	04 97       	sbiw	r24, 0x04	; 4
    2588:	41 f0       	breq	.+16     	; 0x259a <COLUMN_BLOCK_PAGE_ADDRESSER+0x34>
		{
			USART_Data("Make sure only 4 inputs. \n");
    258a:	6b e6       	ldi	r22, 0x6B	; 107
    258c:	74 e0       	ldi	r23, 0x04	; 4
    258e:	80 e0       	ldi	r24, 0x00	; 0
    2590:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
			UserInput(false);
    2594:	80 e0       	ldi	r24, 0x00	; 0
    2596:	0e 94 f7 18 	call	0x31ee	; 0x31ee <UserInput>
		}
		
		if (HEX_Verification()) //if true (valid)
    259a:	0e 94 99 18 	call	0x3132	; 0x3132 <HEX_Verification>
    259e:	81 11       	cpse	r24, r1
    25a0:	1b c0       	rjmp	.+54     	; 0x25d8 <COLUMN_BLOCK_PAGE_ADDRESSER+0x72>
    25a2:	34 c0       	rjmp	.+104    	; 0x260c <COLUMN_BLOCK_PAGE_ADDRESSER+0xa6>
		{
			for (int i = 0; i < COLUMN_ADDRESS + 1; i+=2)
			{
				Byte_Address[i / 2] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
    25a4:	9c 01       	movw	r18, r24
    25a6:	99 23       	and	r25, r25
    25a8:	14 f4       	brge	.+4      	; 0x25ae <COLUMN_BLOCK_PAGE_ADDRESSER+0x48>
    25aa:	2f 5f       	subi	r18, 0xFF	; 255
    25ac:	3f 4f       	sbci	r19, 0xFF	; 255
    25ae:	35 95       	asr	r19
    25b0:	27 95       	ror	r18
    25b2:	fc 01       	movw	r30, r24
    25b4:	e0 50       	subi	r30, 0x00	; 0
    25b6:	fe 4f       	sbci	r31, 0xFE	; 254
    25b8:	40 81       	ld	r20, Z
    25ba:	60 e1       	ldi	r22, 0x10	; 16
    25bc:	46 9f       	mul	r20, r22
    25be:	a0 01       	movw	r20, r0
    25c0:	11 24       	eor	r1, r1
    25c2:	fc 01       	movw	r30, r24
    25c4:	ef 5f       	subi	r30, 0xFF	; 255
    25c6:	fd 4f       	sbci	r31, 0xFD	; 253
    25c8:	50 81       	ld	r21, Z
    25ca:	f9 01       	movw	r30, r18
    25cc:	ea 5d       	subi	r30, 0xDA	; 218
    25ce:	fd 4e       	sbci	r31, 0xED	; 237
    25d0:	45 2b       	or	r20, r21
    25d2:	40 83       	st	Z, r20
			UserInput(false);
		}
		
		if (HEX_Verification()) //if true (valid)
		{
			for (int i = 0; i < COLUMN_ADDRESS + 1; i+=2)
    25d4:	02 96       	adiw	r24, 0x02	; 2
    25d6:	02 c0       	rjmp	.+4      	; 0x25dc <COLUMN_BLOCK_PAGE_ADDRESSER+0x76>
    25d8:	80 e0       	ldi	r24, 0x00	; 0
    25da:	90 e0       	ldi	r25, 0x00	; 0
    25dc:	83 30       	cpi	r24, 0x03	; 3
    25de:	91 05       	cpc	r25, r1
    25e0:	0c f3       	brlt	.-62     	; 0x25a4 <COLUMN_BLOCK_PAGE_ADDRESSER+0x3e>
			{
				Byte_Address[i / 2] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
			}
			
			Print_To_User(COLUMN_ADDRESS, 0, "Column Address -> 0x%02X \n", Byte_Address, status_feature);	
    25e2:	86 e2       	ldi	r24, 0x26	; 38
    25e4:	92 e1       	ldi	r25, 0x12	; 18
    25e6:	7c 01       	movw	r14, r24
    25e8:	20 e8       	ldi	r18, 0x80	; 128
    25ea:	02 2f       	mov	r16, r18
    25ec:	0f 2e       	mov	r0, r31
    25ee:	f0 e0       	ldi	r31, 0x00	; 0
    25f0:	cf 2e       	mov	r12, r31
    25f2:	fa e0       	ldi	r31, 0x0A	; 10
    25f4:	df 2e       	mov	r13, r31
    25f6:	f0 2d       	mov	r31, r0
    25f8:	26 e8       	ldi	r18, 0x86	; 134
    25fa:	34 e0       	ldi	r19, 0x04	; 4
    25fc:	40 e0       	ldi	r20, 0x00	; 0
    25fe:	60 e0       	ldi	r22, 0x00	; 0
    2600:	70 e0       	ldi	r23, 0x00	; 0
    2602:	82 e0       	ldi	r24, 0x02	; 2
    2604:	90 e0       	ldi	r25, 0x00	; 0
    2606:	0e 94 ad 19 	call	0x335a	; 0x335a <Print_To_User>
    260a:	4e c0       	rjmp	.+156    	; 0x26a8 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
		else
		{
			COLUMN_BLOCK_PAGE_ADDRESSER(addr_type); //call again
    260c:	8c 2f       	mov	r24, r28
    260e:	0e 94 b3 12 	call	0x2566	; 0x2566 <COLUMN_BLOCK_PAGE_ADDRESSER>
    2612:	4a c0       	rjmp	.+148    	; 0x26a8 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
	}
	else //true, so address type is Block/Page Address
	{
		if (input_counter != 6) //has to be 6 inputs
    2614:	80 91 2e 12 	lds	r24, 0x122E	; 0x80122e <_end>
    2618:	90 91 2f 12 	lds	r25, 0x122F	; 0x80122f <_end+0x1>
    261c:	06 97       	sbiw	r24, 0x06	; 6
    261e:	41 f0       	breq	.+16     	; 0x2630 <COLUMN_BLOCK_PAGE_ADDRESSER+0xca>
		{
			USART_Data("Make sure only 6 inputs. \n");
    2620:	61 ea       	ldi	r22, 0xA1	; 161
    2622:	74 e0       	ldi	r23, 0x04	; 4
    2624:	80 e0       	ldi	r24, 0x00	; 0
    2626:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
			UserInput(false);
    262a:	80 e0       	ldi	r24, 0x00	; 0
    262c:	0e 94 f7 18 	call	0x31ee	; 0x31ee <UserInput>
		}
		
		if(HEX_Verification()) //if true (valid)
    2630:	0e 94 99 18 	call	0x3132	; 0x3132 <HEX_Verification>
    2634:	81 11       	cpse	r24, r1
    2636:	1b c0       	rjmp	.+54     	; 0x266e <COLUMN_BLOCK_PAGE_ADDRESSER+0x108>
    2638:	34 c0       	rjmp	.+104    	; 0x26a2 <COLUMN_BLOCK_PAGE_ADDRESSER+0x13c>
		{
			for (int i = 0; i < BLOCK_PAGE_ADDRESS + 2; i+=2)
			{
				Byte_Address[COLUMN_ADDRESS + (i / 2)] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
    263a:	9c 01       	movw	r18, r24
    263c:	99 23       	and	r25, r25
    263e:	14 f4       	brge	.+4      	; 0x2644 <COLUMN_BLOCK_PAGE_ADDRESSER+0xde>
    2640:	2f 5f       	subi	r18, 0xFF	; 255
    2642:	3f 4f       	sbci	r19, 0xFF	; 255
    2644:	35 95       	asr	r19
    2646:	27 95       	ror	r18
    2648:	fc 01       	movw	r30, r24
    264a:	e0 50       	subi	r30, 0x00	; 0
    264c:	fe 4f       	sbci	r31, 0xFE	; 254
    264e:	40 81       	ld	r20, Z
    2650:	60 e1       	ldi	r22, 0x10	; 16
    2652:	46 9f       	mul	r20, r22
    2654:	a0 01       	movw	r20, r0
    2656:	11 24       	eor	r1, r1
    2658:	fc 01       	movw	r30, r24
    265a:	ef 5f       	subi	r30, 0xFF	; 255
    265c:	fd 4f       	sbci	r31, 0xFD	; 253
    265e:	50 81       	ld	r21, Z
    2660:	f9 01       	movw	r30, r18
    2662:	e8 5d       	subi	r30, 0xD8	; 216
    2664:	fd 4e       	sbci	r31, 0xED	; 237
    2666:	45 2b       	or	r20, r21
    2668:	40 83       	st	Z, r20
			UserInput(false);
		}
		
		if(HEX_Verification()) //if true (valid)
		{
			for (int i = 0; i < BLOCK_PAGE_ADDRESS + 2; i+=2)
    266a:	02 96       	adiw	r24, 0x02	; 2
    266c:	02 c0       	rjmp	.+4      	; 0x2672 <COLUMN_BLOCK_PAGE_ADDRESSER+0x10c>
    266e:	80 e0       	ldi	r24, 0x00	; 0
    2670:	90 e0       	ldi	r25, 0x00	; 0
    2672:	85 30       	cpi	r24, 0x05	; 5
    2674:	91 05       	cpc	r25, r1
    2676:	0c f3       	brlt	.-62     	; 0x263a <COLUMN_BLOCK_PAGE_ADDRESSER+0xd4>
			{
				Byte_Address[COLUMN_ADDRESS + (i / 2)] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
			}
			
			Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "Block/Page Address -> 0x%02X \n", Byte_Address, status_feature);
    2678:	86 e2       	ldi	r24, 0x26	; 38
    267a:	92 e1       	ldi	r25, 0x12	; 18
    267c:	7c 01       	movw	r14, r24
    267e:	20 e8       	ldi	r18, 0x80	; 128
    2680:	02 2f       	mov	r16, r18
    2682:	0f 2e       	mov	r0, r31
    2684:	f0 e0       	ldi	r31, 0x00	; 0
    2686:	cf 2e       	mov	r12, r31
    2688:	fa e0       	ldi	r31, 0x0A	; 10
    268a:	df 2e       	mov	r13, r31
    268c:	f0 2d       	mov	r31, r0
    268e:	2c eb       	ldi	r18, 0xBC	; 188
    2690:	34 e0       	ldi	r19, 0x04	; 4
    2692:	40 e0       	ldi	r20, 0x00	; 0
    2694:	62 e0       	ldi	r22, 0x02	; 2
    2696:	70 e0       	ldi	r23, 0x00	; 0
    2698:	83 e0       	ldi	r24, 0x03	; 3
    269a:	90 e0       	ldi	r25, 0x00	; 0
    269c:	0e 94 ad 19 	call	0x335a	; 0x335a <Print_To_User>
    26a0:	03 c0       	rjmp	.+6      	; 0x26a8 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
		else
		{
			COLUMN_BLOCK_PAGE_ADDRESSER(addr_type); //call again
    26a2:	8c 2f       	mov	r24, r28
    26a4:	0e 94 b3 12 	call	0x2566	; 0x2566 <COLUMN_BLOCK_PAGE_ADDRESSER>
		}
	}
}
    26a8:	cf 91       	pop	r28
    26aa:	0f 91       	pop	r16
    26ac:	ff 90       	pop	r15
    26ae:	ef 90       	pop	r14
    26b0:	df 90       	pop	r13
    26b2:	cf 90       	pop	r12
    26b4:	08 95       	ret

Disassembly of section .text.CLEAR_ARR:

00003dd0 <CLEAR_ARR>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3dd0:	80 e0       	ldi	r24, 0x00	; 0
    3dd2:	90 e0       	ldi	r25, 0x00	; 0
    3dd4:	05 c0       	rjmp	.+10     	; 0x3de0 <CLEAR_ARR+0x10>
    3dd6:	fc 01       	movw	r30, r24
    3dd8:	e1 5e       	subi	r30, 0xE1	; 225
    3dda:	fd 4e       	sbci	r31, 0xED	; 237
    3ddc:	10 82       	st	Z, r1
    3dde:	01 96       	adiw	r24, 0x01	; 1
    3de0:	85 30       	cpi	r24, 0x05	; 5
    3de2:	91 05       	cpc	r25, r1
    3de4:	c0 f3       	brcs	.-16     	; 0x3dd6 <CLEAR_ARR+0x6>
    3de6:	80 e0       	ldi	r24, 0x00	; 0
    3de8:	90 e0       	ldi	r25, 0x00	; 0
    3dea:	05 c0       	rjmp	.+10     	; 0x3df6 <CLEAR_ARR+0x26>
    3dec:	fc 01       	movw	r30, r24
    3dee:	e1 5e       	subi	r30, 0xE1	; 225
    3df0:	f5 4f       	sbci	r31, 0xF5	; 245
    3df2:	10 82       	st	Z, r1
    3df4:	01 96       	adiw	r24, 0x01	; 1
    3df6:	81 15       	cp	r24, r1
    3df8:	28 e0       	ldi	r18, 0x08	; 8
    3dfa:	92 07       	cpc	r25, r18
    3dfc:	b8 f3       	brcs	.-18     	; 0x3dec <CLEAR_ARR+0x1c>
    3dfe:	80 e0       	ldi	r24, 0x00	; 0
    3e00:	90 e0       	ldi	r25, 0x00	; 0
    3e02:	05 c0       	rjmp	.+10     	; 0x3e0e <CLEAR_ARR+0x3e>
    3e04:	fc 01       	movw	r30, r24
    3e06:	e0 50       	subi	r30, 0x00	; 0
    3e08:	fe 4f       	sbci	r31, 0xFE	; 254
    3e0a:	10 82       	st	Z, r1
    3e0c:	01 96       	adiw	r24, 0x01	; 1
    3e0e:	81 15       	cp	r24, r1
    3e10:	28 e0       	ldi	r18, 0x08	; 8
    3e12:	92 07       	cpc	r25, r18
    3e14:	b8 f3       	brcs	.-18     	; 0x3e04 <CLEAR_ARR+0x34>
    3e16:	80 e0       	ldi	r24, 0x00	; 0
    3e18:	90 e0       	ldi	r25, 0x00	; 0
    3e1a:	05 c0       	rjmp	.+10     	; 0x3e26 <CLEAR_ARR+0x56>
    3e1c:	fc 01       	movw	r30, r24
    3e1e:	e0 50       	subi	r30, 0x00	; 0
    3e20:	f6 4f       	sbci	r31, 0xF6	; 246
    3e22:	10 82       	st	Z, r1
    3e24:	01 96       	adiw	r24, 0x01	; 1
    3e26:	8e 31       	cpi	r24, 0x1E	; 30
    3e28:	91 05       	cpc	r25, r1
    3e2a:	c0 f3       	brcs	.-16     	; 0x3e1c <CLEAR_ARR+0x4c>
    3e2c:	08 95       	ret

Disassembly of section .text.SPI_MASTER_Init:

000043dc <SPI_MASTER_Init>:

//Master Mode (for ATmega 2560) allows full duplex communication between the ATmega 2560 to Flash NAND Memory chip
void SPI_MASTER_Init() //initializes Serial Peripheral Interference (SPI) operations in Master Mode
{
	//DDR pin assignment, ~CS, MOSI, SCK are outputs (1), and MISO is input (0) (in Master Mode)
	DDRB |= (1 << PB2) | (1 << PB1); //setting MASTER_MOSI (PB2) as output; setting MASTER_SCK (PB1) as output;
    43dc:	84 b1       	in	r24, 0x04	; 4
    43de:	86 60       	ori	r24, 0x06	; 6
    43e0:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << PB3); //setting MASTER_MISO (PB3) as input;
    43e2:	84 b1       	in	r24, 0x04	; 4
    43e4:	87 7f       	andi	r24, 0xF7	; 247
    43e6:	84 b9       	out	0x04, r24	; 4
	
	//MUST set ~SS on the ATmega 2560 in order to get SPI operations working...
	DDRB |= (1 << PB0); //setting ~SS pin (PB0) as output;
    43e8:	84 b1       	in	r24, 0x04	; 4
    43ea:	81 60       	ori	r24, 0x01	; 1
    43ec:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1 << PB0); //setting ~SS pin (PB0) high to "de-select" slave device (not connected to the Flash NAND anyway)
    43ee:	85 b1       	in	r24, 0x05	; 5
    43f0:	81 60       	ori	r24, 0x01	; 1
    43f2:	85 b9       	out	0x05, r24	; 5
	//PORTB &= ~(1 << PB0); //setting ~SS pin (PB0) low to "select" slave device (not connected to the Flash NAND anyway)
	
	SPCR |= (1 << SPE) | (1 << MSTR) | (1 << SPR0); // SPE: enables the SPI; MSTR: sets SPI to Master SPI mode; SPR1 and SPR0: sets the SCK Frequency (divisor of 16);
    43f4:	8c b5       	in	r24, 0x2c	; 44
    43f6:	81 65       	ori	r24, 0x51	; 81
    43f8:	8c bd       	out	0x2c, r24	; 44
	SPCR &= ~(1 << DORD) | ~(1 << CPOL) | ~(1 << CPHA) | ~(1 << SPR1);//DORD, Data order set to MSB transmitted first; SPI Timing Mode is 0, where CPOL and CPHA are both 0
    43fa:	8c b5       	in	r24, 0x2c	; 44
    43fc:	8c bd       	out	0x2c, r24	; 44
    43fe:	08 95       	ret

Disassembly of section .text.FLASH_Write_Enable:

000044d8 <FLASH_Write_Enable>:
}

void FLASH_Write_Enable (void) //select Slave device and initializes Write operations onto Flash NAND
{
	FLASH_NAND_CS_ENABLE();
    44d8:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
	
	SPDR = WRITE_ENABLED; //Flash NAND's Write Enable command into SPI Data Register (SPDR)
    44dc:	86 e0       	ldi	r24, 0x06	; 6
    44de:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete; waits for SPIF to be logic high
    44e0:	0d b4       	in	r0, 0x2d	; 45
    44e2:	07 fe       	sbrs	r0, 7
    44e4:	fd cf       	rjmp	.-6      	; 0x44e0 <FLASH_Write_Enable+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    44e6:	8e b5       	in	r24, 0x2e	; 46
    44e8:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	
	FLASH_NAND_CS_DISABLE();
    44ec:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>
    44f0:	08 95       	ret

Disassembly of section .text.FLASH_Write_Disable:

000044f2 <FLASH_Write_Disable>:
	//USART_Data("Write Enable \n");
}

void FLASH_Write_Disable(void) //de-select Slave device and disable Write operations onto Flash NAND
{
	FLASH_NAND_CS_ENABLE();
    44f2:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
	
	SPDR = WRITE_DISABLED; //Flash NAND's Write Disable command into SPI Data Register (SPDR)
    44f6:	84 e0       	ldi	r24, 0x04	; 4
    44f8:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    44fa:	0d b4       	in	r0, 0x2d	; 45
    44fc:	07 fe       	sbrs	r0, 7
    44fe:	fd cf       	rjmp	.-6      	; 0x44fa <FLASH_Write_Disable+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    4500:	8e b5       	in	r24, 0x2e	; 46
    4502:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	
	FLASH_NAND_CS_DISABLE();
    4506:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>
    450a:	08 95       	ret

Disassembly of section .text.FLASH_ID:

000039a4 <FLASH_ID>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    39a4:	cf 93       	push	r28
    39a6:	df 93       	push	r29
    39a8:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
    39ac:	8f e9       	ldi	r24, 0x9F	; 159
    39ae:	8e bd       	out	0x2e, r24	; 46
    39b0:	0d b4       	in	r0, 0x2d	; 45
    39b2:	07 fe       	sbrs	r0, 7
    39b4:	fd cf       	rjmp	.-6      	; 0x39b0 <FLASH_ID+0xc>
    39b6:	8e b5       	in	r24, 0x2e	; 46
    39b8:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    39bc:	1e bc       	out	0x2e, r1	; 46
    39be:	0d b4       	in	r0, 0x2d	; 45
    39c0:	07 fe       	sbrs	r0, 7
    39c2:	fd cf       	rjmp	.-6      	; 0x39be <FLASH_ID+0x1a>
    39c4:	8e b5       	in	r24, 0x2e	; 46
    39c6:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    39ca:	1e bc       	out	0x2e, r1	; 46
    39cc:	0d b4       	in	r0, 0x2d	; 45
    39ce:	07 fe       	sbrs	r0, 7
    39d0:	fd cf       	rjmp	.-6      	; 0x39cc <FLASH_ID+0x28>
    39d2:	8e b5       	in	r24, 0x2e	; 46
    39d4:	80 93 1f 12 	sts	0x121F, r24	; 0x80121f <HEX_ID>
    39d8:	1e bc       	out	0x2e, r1	; 46
    39da:	0d b4       	in	r0, 0x2d	; 45
    39dc:	07 fe       	sbrs	r0, 7
    39de:	fd cf       	rjmp	.-6      	; 0x39da <FLASH_ID+0x36>
    39e0:	8e b5       	in	r24, 0x2e	; 46
    39e2:	cf e1       	ldi	r28, 0x1F	; 31
    39e4:	d2 e1       	ldi	r29, 0x12	; 18
    39e6:	89 83       	std	Y+1, r24	; 0x01
    39e8:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>
    39ec:	99 81       	ldd	r25, Y+1	; 0x01
    39ee:	88 81       	ld	r24, Y
    39f0:	1f 92       	push	r1
    39f2:	9f 93       	push	r25
    39f4:	1f 92       	push	r1
    39f6:	8f 93       	push	r24
    39f8:	8b ed       	ldi	r24, 0xDB	; 219
    39fa:	94 e0       	ldi	r25, 0x04	; 4
    39fc:	a0 e0       	ldi	r26, 0x00	; 0
    39fe:	af 93       	push	r26
    3a00:	9f 93       	push	r25
    3a02:	8f 93       	push	r24
    3a04:	c0 e0       	ldi	r28, 0x00	; 0
    3a06:	da e0       	ldi	r29, 0x0A	; 10
    3a08:	df 93       	push	r29
    3a0a:	cf 93       	push	r28
    3a0c:	0e 94 c8 21 	call	0x4390	; 0x4390 <_sprintf_cdnopuxX>
    3a10:	be 01       	movw	r22, r28
    3a12:	80 e8       	ldi	r24, 0x80	; 128
    3a14:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
    3a18:	8d b7       	in	r24, 0x3d	; 61
    3a1a:	9e b7       	in	r25, 0x3e	; 62
    3a1c:	09 96       	adiw	r24, 0x09	; 9
    3a1e:	0f b6       	in	r0, 0x3f	; 63
    3a20:	f8 94       	cli
    3a22:	9e bf       	out	0x3e, r25	; 62
    3a24:	0f be       	out	0x3f, r0	; 63
    3a26:	8d bf       	out	0x3d, r24	; 61
    3a28:	df 91       	pop	r29
    3a2a:	cf 91       	pop	r28
    3a2c:	08 95       	ret

Disassembly of section .text.FLASH_Die_Selection:

00003ab6 <FLASH_Die_Selection>:
    3ab6:	cf 92       	push	r12
    3ab8:	df 92       	push	r13
    3aba:	ef 92       	push	r14
    3abc:	ff 92       	push	r15
    3abe:	0f 93       	push	r16
    3ac0:	cf 93       	push	r28
    3ac2:	df 93       	push	r29
    3ac4:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
    3ac8:	8f e0       	ldi	r24, 0x0F	; 15
    3aca:	8e bd       	out	0x2e, r24	; 46
    3acc:	0d b4       	in	r0, 0x2d	; 45
    3ace:	07 fe       	sbrs	r0, 7
    3ad0:	fd cf       	rjmp	.-6      	; 0x3acc <FLASH_Die_Selection+0x16>
    3ad2:	8e b5       	in	r24, 0x2e	; 46
    3ad4:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3ad8:	80 ed       	ldi	r24, 0xD0	; 208
    3ada:	8e bd       	out	0x2e, r24	; 46
    3adc:	0d b4       	in	r0, 0x2d	; 45
    3ade:	07 fe       	sbrs	r0, 7
    3ae0:	fd cf       	rjmp	.-6      	; 0x3adc <FLASH_Die_Selection+0x26>
    3ae2:	8e b5       	in	r24, 0x2e	; 46
    3ae4:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3ae8:	1e bc       	out	0x2e, r1	; 46
    3aea:	0d b4       	in	r0, 0x2d	; 45
    3aec:	07 fe       	sbrs	r0, 7
    3aee:	fd cf       	rjmp	.-6      	; 0x3aea <FLASH_Die_Selection+0x34>
    3af0:	8e b5       	in	r24, 0x2e	; 46
    3af2:	cf e1       	ldi	r28, 0x1F	; 31
    3af4:	da e0       	ldi	r29, 0x0A	; 10
    3af6:	88 83       	st	Y, r24
    3af8:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>
    3afc:	7e 01       	movw	r14, r28
    3afe:	80 e8       	ldi	r24, 0x80	; 128
    3b00:	08 2f       	mov	r16, r24
    3b02:	0f 2e       	mov	r0, r31
    3b04:	f0 e0       	ldi	r31, 0x00	; 0
    3b06:	cf 2e       	mov	r12, r31
    3b08:	fa e0       	ldi	r31, 0x0A	; 10
    3b0a:	df 2e       	mov	r13, r31
    3b0c:	f0 2d       	mov	r31, r0
    3b0e:	23 e1       	ldi	r18, 0x13	; 19
    3b10:	35 e0       	ldi	r19, 0x05	; 5
    3b12:	40 e0       	ldi	r20, 0x00	; 0
    3b14:	60 e0       	ldi	r22, 0x00	; 0
    3b16:	70 e0       	ldi	r23, 0x00	; 0
    3b18:	81 e0       	ldi	r24, 0x01	; 1
    3b1a:	90 e0       	ldi	r25, 0x00	; 0
    3b1c:	0e 94 ad 19 	call	0x335a	; 0x335a <Print_To_User>
    3b20:	df 91       	pop	r29
    3b22:	cf 91       	pop	r28
    3b24:	0f 91       	pop	r16
    3b26:	ff 90       	pop	r15
    3b28:	ef 90       	pop	r14
    3b2a:	df 90       	pop	r13
    3b2c:	cf 90       	pop	r12
    3b2e:	08 95       	ret

Disassembly of section .text.FLASH_Configuration:

00003b30 <FLASH_Configuration>:
    3b30:	cf 92       	push	r12
    3b32:	df 92       	push	r13
    3b34:	ef 92       	push	r14
    3b36:	ff 92       	push	r15
    3b38:	0f 93       	push	r16
    3b3a:	cf 93       	push	r28
    3b3c:	df 93       	push	r29
    3b3e:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
    3b42:	8f e0       	ldi	r24, 0x0F	; 15
    3b44:	8e bd       	out	0x2e, r24	; 46
    3b46:	0d b4       	in	r0, 0x2d	; 45
    3b48:	07 fe       	sbrs	r0, 7
    3b4a:	fd cf       	rjmp	.-6      	; 0x3b46 <FLASH_Configuration+0x16>
    3b4c:	8e b5       	in	r24, 0x2e	; 46
    3b4e:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3b52:	80 eb       	ldi	r24, 0xB0	; 176
    3b54:	8e bd       	out	0x2e, r24	; 46
    3b56:	0d b4       	in	r0, 0x2d	; 45
    3b58:	07 fe       	sbrs	r0, 7
    3b5a:	fd cf       	rjmp	.-6      	; 0x3b56 <FLASH_Configuration+0x26>
    3b5c:	8e b5       	in	r24, 0x2e	; 46
    3b5e:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3b62:	1e bc       	out	0x2e, r1	; 46
    3b64:	0d b4       	in	r0, 0x2d	; 45
    3b66:	07 fe       	sbrs	r0, 7
    3b68:	fd cf       	rjmp	.-6      	; 0x3b64 <FLASH_Configuration+0x34>
    3b6a:	8e b5       	in	r24, 0x2e	; 46
    3b6c:	cf e1       	ldi	r28, 0x1F	; 31
    3b6e:	da e0       	ldi	r29, 0x0A	; 10
    3b70:	88 83       	st	Y, r24
    3b72:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>
    3b76:	7e 01       	movw	r14, r28
    3b78:	80 e8       	ldi	r24, 0x80	; 128
    3b7a:	08 2f       	mov	r16, r24
    3b7c:	0f 2e       	mov	r0, r31
    3b7e:	f0 e0       	ldi	r31, 0x00	; 0
    3b80:	cf 2e       	mov	r12, r31
    3b82:	fa e0       	ldi	r31, 0x0A	; 10
    3b84:	df 2e       	mov	r13, r31
    3b86:	f0 2d       	mov	r31, r0
    3b88:	24 e3       	ldi	r18, 0x34	; 52
    3b8a:	35 e0       	ldi	r19, 0x05	; 5
    3b8c:	40 e0       	ldi	r20, 0x00	; 0
    3b8e:	60 e0       	ldi	r22, 0x00	; 0
    3b90:	70 e0       	ldi	r23, 0x00	; 0
    3b92:	81 e0       	ldi	r24, 0x01	; 1
    3b94:	90 e0       	ldi	r25, 0x00	; 0
    3b96:	0e 94 ad 19 	call	0x335a	; 0x335a <Print_To_User>
    3b9a:	df 91       	pop	r29
    3b9c:	cf 91       	pop	r28
    3b9e:	0f 91       	pop	r16
    3ba0:	ff 90       	pop	r15
    3ba2:	ef 90       	pop	r14
    3ba4:	df 90       	pop	r13
    3ba6:	cf 90       	pop	r12
    3ba8:	08 95       	ret

Disassembly of section .text.FLASH_Block_Lock_Setter:

00003c1e <FLASH_Block_Lock_Setter>:
    3c1e:	cf 93       	push	r28
    3c20:	c8 2f       	mov	r28, r24
    3c22:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
    3c26:	cc 23       	and	r28, r28
    3c28:	c9 f0       	breq	.+50     	; 0x3c5c <FLASH_Block_Lock_Setter+0x3e>
    3c2a:	8f e1       	ldi	r24, 0x1F	; 31
    3c2c:	8e bd       	out	0x2e, r24	; 46
    3c2e:	0d b4       	in	r0, 0x2d	; 45
    3c30:	07 fe       	sbrs	r0, 7
    3c32:	fd cf       	rjmp	.-6      	; 0x3c2e <FLASH_Block_Lock_Setter+0x10>
    3c34:	8e b5       	in	r24, 0x2e	; 46
    3c36:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3c3a:	80 ea       	ldi	r24, 0xA0	; 160
    3c3c:	8e bd       	out	0x2e, r24	; 46
    3c3e:	0d b4       	in	r0, 0x2d	; 45
    3c40:	07 fe       	sbrs	r0, 7
    3c42:	fd cf       	rjmp	.-6      	; 0x3c3e <FLASH_Block_Lock_Setter+0x20>
    3c44:	8e b5       	in	r24, 0x2e	; 46
    3c46:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3c4a:	8c e7       	ldi	r24, 0x7C	; 124
    3c4c:	8e bd       	out	0x2e, r24	; 46
    3c4e:	0d b4       	in	r0, 0x2d	; 45
    3c50:	07 fe       	sbrs	r0, 7
    3c52:	fd cf       	rjmp	.-6      	; 0x3c4e <FLASH_Block_Lock_Setter+0x30>
    3c54:	8e b5       	in	r24, 0x2e	; 46
    3c56:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3c5a:	17 c0       	rjmp	.+46     	; 0x3c8a <FLASH_Block_Lock_Setter+0x6c>
    3c5c:	8f e1       	ldi	r24, 0x1F	; 31
    3c5e:	8e bd       	out	0x2e, r24	; 46
    3c60:	0d b4       	in	r0, 0x2d	; 45
    3c62:	07 fe       	sbrs	r0, 7
    3c64:	fd cf       	rjmp	.-6      	; 0x3c60 <FLASH_Block_Lock_Setter+0x42>
    3c66:	8e b5       	in	r24, 0x2e	; 46
    3c68:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3c6c:	80 ea       	ldi	r24, 0xA0	; 160
    3c6e:	8e bd       	out	0x2e, r24	; 46
    3c70:	0d b4       	in	r0, 0x2d	; 45
    3c72:	07 fe       	sbrs	r0, 7
    3c74:	fd cf       	rjmp	.-6      	; 0x3c70 <FLASH_Block_Lock_Setter+0x52>
    3c76:	8e b5       	in	r24, 0x2e	; 46
    3c78:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3c7c:	1e bc       	out	0x2e, r1	; 46
    3c7e:	0d b4       	in	r0, 0x2d	; 45
    3c80:	07 fe       	sbrs	r0, 7
    3c82:	fd cf       	rjmp	.-6      	; 0x3c7e <FLASH_Block_Lock_Setter+0x60>
    3c84:	8e b5       	in	r24, 0x2e	; 46
    3c86:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3c8a:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>
    3c8e:	cf 91       	pop	r28
    3c90:	08 95       	ret

Disassembly of section .text.FLASH_Block_Lock:

00003406 <FLASH_Block_Lock>:
    3406:	cf 92       	push	r12
    3408:	df 92       	push	r13
    340a:	ef 92       	push	r14
    340c:	ff 92       	push	r15
    340e:	0f 93       	push	r16
    3410:	08 2f       	mov	r16, r24
    3412:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
    3416:	00 23       	and	r16, r16
    3418:	c1 f0       	breq	.+48     	; 0x344a <FLASH_Block_Lock+0x44>
    341a:	8f e1       	ldi	r24, 0x1F	; 31
    341c:	8e bd       	out	0x2e, r24	; 46
    341e:	0d b4       	in	r0, 0x2d	; 45
    3420:	07 fe       	sbrs	r0, 7
    3422:	fd cf       	rjmp	.-6      	; 0x341e <FLASH_Block_Lock+0x18>
    3424:	8e b5       	in	r24, 0x2e	; 46
    3426:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    342a:	80 ea       	ldi	r24, 0xA0	; 160
    342c:	8e bd       	out	0x2e, r24	; 46
    342e:	0d b4       	in	r0, 0x2d	; 45
    3430:	07 fe       	sbrs	r0, 7
    3432:	fd cf       	rjmp	.-6      	; 0x342e <FLASH_Block_Lock+0x28>
    3434:	8e b5       	in	r24, 0x2e	; 46
    3436:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    343a:	1e bc       	out	0x2e, r1	; 46
    343c:	0d b4       	in	r0, 0x2d	; 45
    343e:	07 fe       	sbrs	r0, 7
    3440:	fd cf       	rjmp	.-6      	; 0x343c <FLASH_Block_Lock+0x36>
    3442:	8e b5       	in	r24, 0x2e	; 46
    3444:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3448:	17 c0       	rjmp	.+46     	; 0x3478 <FLASH_Block_Lock+0x72>
    344a:	8f e0       	ldi	r24, 0x0F	; 15
    344c:	8e bd       	out	0x2e, r24	; 46
    344e:	0d b4       	in	r0, 0x2d	; 45
    3450:	07 fe       	sbrs	r0, 7
    3452:	fd cf       	rjmp	.-6      	; 0x344e <FLASH_Block_Lock+0x48>
    3454:	8e b5       	in	r24, 0x2e	; 46
    3456:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    345a:	80 ea       	ldi	r24, 0xA0	; 160
    345c:	8e bd       	out	0x2e, r24	; 46
    345e:	0d b4       	in	r0, 0x2d	; 45
    3460:	07 fe       	sbrs	r0, 7
    3462:	fd cf       	rjmp	.-6      	; 0x345e <FLASH_Block_Lock+0x58>
    3464:	8e b5       	in	r24, 0x2e	; 46
    3466:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    346a:	1e bc       	out	0x2e, r1	; 46
    346c:	0d b4       	in	r0, 0x2d	; 45
    346e:	07 fe       	sbrs	r0, 7
    3470:	fd cf       	rjmp	.-6      	; 0x346c <FLASH_Block_Lock+0x66>
    3472:	8e b5       	in	r24, 0x2e	; 46
    3474:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <data>
    3478:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>
    347c:	8f e1       	ldi	r24, 0x1F	; 31
    347e:	9a e0       	ldi	r25, 0x0A	; 10
    3480:	7c 01       	movw	r14, r24
    3482:	20 e8       	ldi	r18, 0x80	; 128
    3484:	02 2f       	mov	r16, r18
    3486:	0f 2e       	mov	r0, r31
    3488:	f0 e0       	ldi	r31, 0x00	; 0
    348a:	cf 2e       	mov	r12, r31
    348c:	fa e0       	ldi	r31, 0x0A	; 10
    348e:	df 2e       	mov	r13, r31
    3490:	f0 2d       	mov	r31, r0
    3492:	25 e5       	ldi	r18, 0x55	; 85
    3494:	35 e0       	ldi	r19, 0x05	; 5
    3496:	40 e0       	ldi	r20, 0x00	; 0
    3498:	60 e0       	ldi	r22, 0x00	; 0
    349a:	70 e0       	ldi	r23, 0x00	; 0
    349c:	81 e0       	ldi	r24, 0x01	; 1
    349e:	90 e0       	ldi	r25, 0x00	; 0
    34a0:	0e 94 ad 19 	call	0x335a	; 0x335a <Print_To_User>
    34a4:	0f 91       	pop	r16
    34a6:	ff 90       	pop	r15
    34a8:	ef 90       	pop	r14
    34aa:	df 90       	pop	r13
    34ac:	cf 90       	pop	r12
    34ae:	08 95       	ret

Disassembly of section .text.FLASH_Reset:

00004466 <FLASH_Reset>:
	Print_To_User(1, 0, "Block Lock Register: 0x%02X \n", data, status_feature);
}

void FLASH_Reset() //reset memory device
{
	FLASH_NAND_CS_ENABLE();
    4466:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
	
	SPDR = RESET; //Sending READ_ID Command into SPI Data Register (SPDR)
    446a:	8f ef       	ldi	r24, 0xFF	; 255
    446c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    446e:	0d b4       	in	r0, 0x2d	; 45
    4470:	07 fe       	sbrs	r0, 7
    4472:	fd cf       	rjmp	.-6      	; 0x446e <FLASH_Reset+0x8>
	
	FLASH_NAND_CS_DISABLE();
    4474:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>

	USART_Data("Device Reseted \n");
    4478:	63 e7       	ldi	r22, 0x73	; 115
    447a:	75 e0       	ldi	r23, 0x05	; 5
    447c:	80 e0       	ldi	r24, 0x00	; 0
    447e:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
    4482:	08 95       	ret

Disassembly of section .text.FLASH_MainArray_Address:

000034b0 <FLASH_MainArray_Address>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    34b0:	cf 92       	push	r12
    34b2:	df 92       	push	r13
    34b4:	ef 92       	push	r14
    34b6:	9a 01       	movw	r18, r20
    34b8:	46 2f       	mov	r20, r22
    34ba:	00 97       	sbiw	r24, 0x00	; 0
    34bc:	81 f5       	brne	.+96     	; 0x351e <FLASH_MainArray_Address+0x6e>
    34be:	69 01       	movw	r12, r18
    34c0:	e4 2e       	mov	r14, r20
    34c2:	52 e0       	ldi	r21, 0x02	; 2
    34c4:	c5 0e       	add	r12, r21
    34c6:	d1 1c       	adc	r13, r1
    34c8:	e1 1c       	adc	r14, r1
    34ca:	f6 01       	movw	r30, r12
    34cc:	5e 2d       	mov	r21, r14
    34ce:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    34d2:	6e bd       	out	0x2e, r22	; 46
    34d4:	0d b4       	in	r0, 0x2d	; 45
    34d6:	07 fe       	sbrs	r0, 7
    34d8:	fd cf       	rjmp	.-6      	; 0x34d4 <FLASH_MainArray_Address+0x24>
    34da:	5e b5       	in	r21, 0x2e	; 46
    34dc:	50 93 2b 12 	sts	0x122B, r21	; 0x80122b <status>
    34e0:	69 01       	movw	r12, r18
    34e2:	e4 2e       	mov	r14, r20
    34e4:	53 e0       	ldi	r21, 0x03	; 3
    34e6:	c5 0e       	add	r12, r21
    34e8:	d1 1c       	adc	r13, r1
    34ea:	e1 1c       	adc	r14, r1
    34ec:	f6 01       	movw	r30, r12
    34ee:	5e 2d       	mov	r21, r14
    34f0:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    34f4:	6e bd       	out	0x2e, r22	; 46
    34f6:	0d b4       	in	r0, 0x2d	; 45
    34f8:	07 fe       	sbrs	r0, 7
    34fa:	fd cf       	rjmp	.-6      	; 0x34f6 <FLASH_MainArray_Address+0x46>
    34fc:	5e b5       	in	r21, 0x2e	; 46
    34fe:	50 93 2b 12 	sts	0x122B, r21	; 0x80122b <status>
    3502:	2c 5f       	subi	r18, 0xFC	; 252
    3504:	3f 4f       	sbci	r19, 0xFF	; 255
    3506:	4f 4f       	sbci	r20, 0xFF	; 255
    3508:	f9 01       	movw	r30, r18
    350a:	54 2f       	mov	r21, r20
    350c:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    3510:	6e bd       	out	0x2e, r22	; 46
    3512:	0d b4       	in	r0, 0x2d	; 45
    3514:	07 fe       	sbrs	r0, 7
    3516:	fd cf       	rjmp	.-6      	; 0x3512 <FLASH_MainArray_Address+0x62>
    3518:	2e b5       	in	r18, 0x2e	; 46
    351a:	20 93 2b 12 	sts	0x122B, r18	; 0x80122b <status>
    351e:	01 97       	sbiw	r24, 0x01	; 1
    3520:	b1 f4       	brne	.+44     	; 0x354e <FLASH_MainArray_Address+0x9e>
    3522:	1e bc       	out	0x2e, r1	; 46
    3524:	0d b4       	in	r0, 0x2d	; 45
    3526:	07 fe       	sbrs	r0, 7
    3528:	fd cf       	rjmp	.-6      	; 0x3524 <FLASH_MainArray_Address+0x74>
    352a:	8e b5       	in	r24, 0x2e	; 46
    352c:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3530:	1e bc       	out	0x2e, r1	; 46
    3532:	0d b4       	in	r0, 0x2d	; 45
    3534:	07 fe       	sbrs	r0, 7
    3536:	fd cf       	rjmp	.-6      	; 0x3532 <FLASH_MainArray_Address+0x82>
    3538:	8e b5       	in	r24, 0x2e	; 46
    353a:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    353e:	81 e0       	ldi	r24, 0x01	; 1
    3540:	8e bd       	out	0x2e, r24	; 46
    3542:	0d b4       	in	r0, 0x2d	; 45
    3544:	07 fe       	sbrs	r0, 7
    3546:	fd cf       	rjmp	.-6      	; 0x3542 <FLASH_MainArray_Address+0x92>
    3548:	8e b5       	in	r24, 0x2e	; 46
    354a:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    354e:	ef 90       	pop	r14
    3550:	df 90       	pop	r13
    3552:	cf 90       	pop	r12
    3554:	08 95       	ret

Disassembly of section .text.FLASH_Column_Address:

00003e8c <FLASH_Column_Address>:
    3e8c:	9a 01       	movw	r18, r20
    3e8e:	46 2f       	mov	r20, r22
    3e90:	00 97       	sbiw	r24, 0x00	; 0
    3e92:	c9 f4       	brne	.+50     	; 0x3ec6 <FLASH_Column_Address+0x3a>
    3e94:	f9 01       	movw	r30, r18
    3e96:	54 2f       	mov	r21, r20
    3e98:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    3e9c:	6e bd       	out	0x2e, r22	; 46
    3e9e:	0d b4       	in	r0, 0x2d	; 45
    3ea0:	07 fe       	sbrs	r0, 7
    3ea2:	fd cf       	rjmp	.-6      	; 0x3e9e <FLASH_Column_Address+0x12>
    3ea4:	5e b5       	in	r21, 0x2e	; 46
    3ea6:	50 93 2b 12 	sts	0x122B, r21	; 0x80122b <status>
    3eaa:	2f 5f       	subi	r18, 0xFF	; 255
    3eac:	3f 4f       	sbci	r19, 0xFF	; 255
    3eae:	4f 4f       	sbci	r20, 0xFF	; 255
    3eb0:	f9 01       	movw	r30, r18
    3eb2:	54 2f       	mov	r21, r20
    3eb4:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    3eb8:	6e bd       	out	0x2e, r22	; 46
    3eba:	0d b4       	in	r0, 0x2d	; 45
    3ebc:	07 fe       	sbrs	r0, 7
    3ebe:	fd cf       	rjmp	.-6      	; 0x3eba <FLASH_Column_Address+0x2e>
    3ec0:	2e b5       	in	r18, 0x2e	; 46
    3ec2:	20 93 2b 12 	sts	0x122B, r18	; 0x80122b <status>
    3ec6:	01 97       	sbiw	r24, 0x01	; 1
    3ec8:	71 f4       	brne	.+28     	; 0x3ee6 <FLASH_Column_Address+0x5a>
    3eca:	1e bc       	out	0x2e, r1	; 46
    3ecc:	0d b4       	in	r0, 0x2d	; 45
    3ece:	07 fe       	sbrs	r0, 7
    3ed0:	fd cf       	rjmp	.-6      	; 0x3ecc <FLASH_Column_Address+0x40>
    3ed2:	8e b5       	in	r24, 0x2e	; 46
    3ed4:	80 93 1f 12 	sts	0x121F, r24	; 0x80121f <HEX_ID>
    3ed8:	1e bc       	out	0x2e, r1	; 46
    3eda:	0d b4       	in	r0, 0x2d	; 45
    3edc:	07 fe       	sbrs	r0, 7
    3ede:	fd cf       	rjmp	.-6      	; 0x3eda <FLASH_Column_Address+0x4e>
    3ee0:	8e b5       	in	r24, 0x2e	; 46
    3ee2:	80 93 20 12 	sts	0x1220, r24	; 0x801220 <HEX_ID+0x1>
    3ee6:	08 95       	ret

Disassembly of section .text.FLASH_Data_Storage:

00003742 <FLASH_Data_Storage>:
    3742:	cf 92       	push	r12
    3744:	df 92       	push	r13
    3746:	ef 92       	push	r14
    3748:	ff 92       	push	r15
    374a:	0f 93       	push	r16
    374c:	1f 93       	push	r17
    374e:	cf 93       	push	r28
    3750:	df 93       	push	r29
    3752:	ec 01       	movw	r28, r24
    3754:	89 2b       	or	r24, r25
    3756:	19 f1       	breq	.+70     	; 0x379e <FLASH_Data_Storage+0x5c>
    3758:	28 c0       	rjmp	.+80     	; 0x37aa <FLASH_Data_Storage+0x68>
    375a:	1e bc       	out	0x2e, r1	; 46
    375c:	0d b4       	in	r0, 0x2d	; 45
    375e:	07 fe       	sbrs	r0, 7
    3760:	fd cf       	rjmp	.-6      	; 0x375c <FLASH_Data_Storage+0x1a>
    3762:	2e b5       	in	r18, 0x2e	; 46
    3764:	fc 01       	movw	r30, r24
    3766:	e1 5e       	subi	r30, 0xE1	; 225
    3768:	f5 4f       	sbci	r31, 0xF5	; 245
    376a:	20 83       	st	Z, r18
    376c:	2e b5       	in	r18, 0x2e	; 46
    376e:	2d 30       	cpi	r18, 0x0D	; 13
    3770:	a1 f4       	brne	.+40     	; 0x379a <FLASH_Data_Storage+0x58>
    3772:	7c 01       	movw	r14, r24
    3774:	99 0f       	add	r25, r25
    3776:	00 0b       	sbc	r16, r16
    3778:	11 0b       	sbc	r17, r17
    377a:	0f 2e       	mov	r0, r31
    377c:	f0 e0       	ldi	r31, 0x00	; 0
    377e:	cf 2e       	mov	r12, r31
    3780:	fa e0       	ldi	r31, 0x0A	; 10
    3782:	df 2e       	mov	r13, r31
    3784:	f0 2d       	mov	r31, r0
    3786:	24 e8       	ldi	r18, 0x84	; 132
    3788:	35 e0       	ldi	r19, 0x05	; 5
    378a:	40 e0       	ldi	r20, 0x00	; 0
    378c:	60 e0       	ldi	r22, 0x00	; 0
    378e:	70 e0       	ldi	r23, 0x00	; 0
    3790:	81 e0       	ldi	r24, 0x01	; 1
    3792:	90 e0       	ldi	r25, 0x00	; 0
    3794:	0e 94 ad 19 	call	0x335a	; 0x335a <Print_To_User>
    3798:	08 c0       	rjmp	.+16     	; 0x37aa <FLASH_Data_Storage+0x68>
    379a:	01 96       	adiw	r24, 0x01	; 1
    379c:	02 c0       	rjmp	.+4      	; 0x37a2 <FLASH_Data_Storage+0x60>
    379e:	80 e0       	ldi	r24, 0x00	; 0
    37a0:	90 e0       	ldi	r25, 0x00	; 0
    37a2:	81 15       	cp	r24, r1
    37a4:	28 e0       	ldi	r18, 0x08	; 8
    37a6:	92 07       	cpc	r25, r18
    37a8:	c0 f2       	brcs	.-80     	; 0x375a <FLASH_Data_Storage+0x18>
    37aa:	21 97       	sbiw	r28, 0x01	; 1
    37ac:	91 f4       	brne	.+36     	; 0x37d2 <FLASH_Data_Storage+0x90>
    37ae:	0b c0       	rjmp	.+22     	; 0x37c6 <FLASH_Data_Storage+0x84>
    37b0:	1e bc       	out	0x2e, r1	; 46
    37b2:	0d b4       	in	r0, 0x2d	; 45
    37b4:	07 fe       	sbrs	r0, 7
    37b6:	fd cf       	rjmp	.-6      	; 0x37b2 <FLASH_Data_Storage+0x70>
    37b8:	2e b5       	in	r18, 0x2e	; 46
    37ba:	fc 01       	movw	r30, r24
    37bc:	e1 5e       	subi	r30, 0xE1	; 225
    37be:	f5 4f       	sbci	r31, 0xF5	; 245
    37c0:	20 83       	st	Z, r18
    37c2:	01 96       	adiw	r24, 0x01	; 1
    37c4:	02 c0       	rjmp	.+4      	; 0x37ca <FLASH_Data_Storage+0x88>
    37c6:	80 e0       	ldi	r24, 0x00	; 0
    37c8:	90 e0       	ldi	r25, 0x00	; 0
    37ca:	81 15       	cp	r24, r1
    37cc:	28 e0       	ldi	r18, 0x08	; 8
    37ce:	92 07       	cpc	r25, r18
    37d0:	78 f3       	brcs	.-34     	; 0x37b0 <FLASH_Data_Storage+0x6e>
    37d2:	df 91       	pop	r29
    37d4:	cf 91       	pop	r28
    37d6:	1f 91       	pop	r17
    37d8:	0f 91       	pop	r16
    37da:	ff 90       	pop	r15
    37dc:	ef 90       	pop	r14
    37de:	df 90       	pop	r13
    37e0:	cf 90       	pop	r12
    37e2:	08 95       	ret

Disassembly of section .text.FLASH_Read_From_Cache_x1:

00003ee8 <FLASH_Read_From_Cache_x1>:
    3ee8:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
    3eec:	8b e0       	ldi	r24, 0x0B	; 11
    3eee:	8e bd       	out	0x2e, r24	; 46
    3ef0:	0d b4       	in	r0, 0x2d	; 45
    3ef2:	07 fe       	sbrs	r0, 7
    3ef4:	fd cf       	rjmp	.-6      	; 0x3ef0 <FLASH_Read_From_Cache_x1+0x8>
    3ef6:	8e b5       	in	r24, 0x2e	; 46
    3ef8:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3efc:	8a e1       	ldi	r24, 0x1A	; 26
    3efe:	8a 95       	dec	r24
    3f00:	f1 f7       	brne	.-4      	; 0x3efe <FLASH_Read_From_Cache_x1+0x16>
    3f02:	00 c0       	rjmp	.+0      	; 0x3f04 <FLASH_Read_From_Cache_x1+0x1c>
    3f04:	46 e2       	ldi	r20, 0x26	; 38
    3f06:	52 e1       	ldi	r21, 0x12	; 18
    3f08:	60 e8       	ldi	r22, 0x80	; 128
    3f0a:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    3f0e:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    3f12:	0e 94 46 1f 	call	0x3e8c	; 0x3e8c <FLASH_Column_Address>
    3f16:	8f ef       	ldi	r24, 0xFF	; 255
    3f18:	8e bd       	out	0x2e, r24	; 46
    3f1a:	0d b4       	in	r0, 0x2d	; 45
    3f1c:	07 fe       	sbrs	r0, 7
    3f1e:	fd cf       	rjmp	.-6      	; 0x3f1a <FLASH_Read_From_Cache_x1+0x32>
    3f20:	8e b5       	in	r24, 0x2e	; 46
    3f22:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3f26:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    3f2a:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    3f2e:	0e 94 a1 1b 	call	0x3742	; 0x3742 <FLASH_Data_Storage>
    3f32:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>
    3f36:	08 95       	ret

Disassembly of section .text.FLASH_Status:

00003a2e <FLASH_Status>:
    3a2e:	cf 92       	push	r12
    3a30:	df 92       	push	r13
    3a32:	ef 92       	push	r14
    3a34:	ff 92       	push	r15
    3a36:	0f 93       	push	r16
    3a38:	cf 93       	push	r28
    3a3a:	df 93       	push	r29
    3a3c:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
    3a40:	8f e0       	ldi	r24, 0x0F	; 15
    3a42:	8e bd       	out	0x2e, r24	; 46
    3a44:	0d b4       	in	r0, 0x2d	; 45
    3a46:	07 fe       	sbrs	r0, 7
    3a48:	fd cf       	rjmp	.-6      	; 0x3a44 <FLASH_Status+0x16>
    3a4a:	8e b5       	in	r24, 0x2e	; 46
    3a4c:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3a50:	80 ec       	ldi	r24, 0xC0	; 192
    3a52:	8e bd       	out	0x2e, r24	; 46
    3a54:	0d b4       	in	r0, 0x2d	; 45
    3a56:	07 fe       	sbrs	r0, 7
    3a58:	fd cf       	rjmp	.-6      	; 0x3a54 <FLASH_Status+0x26>
    3a5a:	8e b5       	in	r24, 0x2e	; 46
    3a5c:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3a60:	1e bc       	out	0x2e, r1	; 46
    3a62:	0d b4       	in	r0, 0x2d	; 45
    3a64:	07 fe       	sbrs	r0, 7
    3a66:	fd cf       	rjmp	.-6      	; 0x3a62 <FLASH_Status+0x34>
    3a68:	8e b5       	in	r24, 0x2e	; 46
    3a6a:	cf e1       	ldi	r28, 0x1F	; 31
    3a6c:	d2 e1       	ldi	r29, 0x12	; 18
    3a6e:	88 83       	st	Y, r24
    3a70:	7e 01       	movw	r14, r28
    3a72:	80 e8       	ldi	r24, 0x80	; 128
    3a74:	08 2f       	mov	r16, r24
    3a76:	0f 2e       	mov	r0, r31
    3a78:	f0 e0       	ldi	r31, 0x00	; 0
    3a7a:	cf 2e       	mov	r12, r31
    3a7c:	fa e0       	ldi	r31, 0x0A	; 10
    3a7e:	df 2e       	mov	r13, r31
    3a80:	f0 2d       	mov	r31, r0
    3a82:	2e e9       	ldi	r18, 0x9E	; 158
    3a84:	35 e0       	ldi	r19, 0x05	; 5
    3a86:	40 e0       	ldi	r20, 0x00	; 0
    3a88:	60 e0       	ldi	r22, 0x00	; 0
    3a8a:	70 e0       	ldi	r23, 0x00	; 0
    3a8c:	81 e0       	ldi	r24, 0x01	; 1
    3a8e:	90 e0       	ldi	r25, 0x00	; 0
    3a90:	0e 94 ad 19 	call	0x335a	; 0x335a <Print_To_User>
    3a94:	8a e1       	ldi	r24, 0x1A	; 26
    3a96:	8a 95       	dec	r24
    3a98:	f1 f7       	brne	.-4      	; 0x3a96 <FLASH_Status+0x68>
    3a9a:	00 c0       	rjmp	.+0      	; 0x3a9c <FLASH_Status+0x6e>
    3a9c:	88 81       	ld	r24, Y
    3a9e:	80 fd       	sbrc	r24, 0
    3aa0:	df cf       	rjmp	.-66     	; 0x3a60 <FLASH_Status+0x32>
    3aa2:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>
    3aa6:	df 91       	pop	r29
    3aa8:	cf 91       	pop	r28
    3aaa:	0f 91       	pop	r16
    3aac:	ff 90       	pop	r15
    3aae:	ef 90       	pop	r14
    3ab0:	df 90       	pop	r13
    3ab2:	cf 90       	pop	r12
    3ab4:	08 95       	ret

Disassembly of section .text.FLASH_Program_Execute:

00004286 <FLASH_Program_Execute>:

void FLASH_Program_Execute() //new command to transfer data from cache to main array
{	
	FLASH_NAND_CS_ENABLE();
    4286:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
	
	//code below sends Program_Execute command with the starting address of the main array
	SPDR = PROGRAM_EXECUTE; //Sending Program Execute Command into SPI Data Register (SPDR)
    428a:	80 e1       	ldi	r24, 0x10	; 16
    428c:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1 << SPIF))); 
    428e:	0d b4       	in	r0, 0x2d	; 45
    4290:	07 fe       	sbrs	r0, 7
    4292:	fd cf       	rjmp	.-6      	; 0x428e <FLASH_Program_Execute+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    4294:	8e b5       	in	r24, 0x2e	; 46
    4296:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	
	//_delay_us(5);
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to write data to in MainArray
    429a:	46 e2       	ldi	r20, 0x26	; 38
    429c:	52 e1       	ldi	r21, 0x12	; 18
    429e:	60 e8       	ldi	r22, 0x80	; 128
    42a0:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    42a4:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    42a8:	0e 94 58 1a 	call	0x34b0	; 0x34b0 <FLASH_MainArray_Address>
	
	FLASH_NAND_CS_DISABLE();
    42ac:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>
	
	//USART_Data("Program Execute \n");
	
	FLASH_Status(); //checks for the status of data transfer from cache to main array from program_execute command
    42b0:	0e 94 17 1d 	call	0x3a2e	; 0x3a2e <FLASH_Status>

	FLASH_Write_Disable();
    42b4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <FLASH_Write_Disable>
    42b8:	08 95       	ret

Disassembly of section .text.FLASH_Page_Program:

00003c92 <FLASH_Page_Program>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3c92:	cf 93       	push	r28
    3c94:	df 93       	push	r29
    3c96:	0e 94 6c 22 	call	0x44d8	; 0x44d8 <FLASH_Write_Enable>
    3c9a:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
    3c9e:	82 e0       	ldi	r24, 0x02	; 2
    3ca0:	8e bd       	out	0x2e, r24	; 46
    3ca2:	0d b4       	in	r0, 0x2d	; 45
    3ca4:	07 fe       	sbrs	r0, 7
    3ca6:	fd cf       	rjmp	.-6      	; 0x3ca2 <FLASH_Page_Program+0x10>
    3ca8:	8e b5       	in	r24, 0x2e	; 46
    3caa:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3cae:	8a e1       	ldi	r24, 0x1A	; 26
    3cb0:	8a 95       	dec	r24
    3cb2:	f1 f7       	brne	.-4      	; 0x3cb0 <FLASH_Page_Program+0x1e>
    3cb4:	00 c0       	rjmp	.+0      	; 0x3cb6 <FLASH_Page_Program+0x24>
    3cb6:	46 e2       	ldi	r20, 0x26	; 38
    3cb8:	52 e1       	ldi	r21, 0x12	; 18
    3cba:	60 e8       	ldi	r22, 0x80	; 128
    3cbc:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    3cc0:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    3cc4:	0e 94 46 1f 	call	0x3e8c	; 0x3e8c <FLASH_Column_Address>
    3cc8:	c0 e0       	ldi	r28, 0x00	; 0
    3cca:	d0 e0       	ldi	r29, 0x00	; 0
    3ccc:	0c c0       	rjmp	.+24     	; 0x3ce6 <FLASH_Page_Program+0x54>
    3cce:	fe 01       	movw	r30, r28
    3cd0:	e0 50       	subi	r30, 0x00	; 0
    3cd2:	fe 4f       	sbci	r31, 0xFE	; 254
    3cd4:	80 81       	ld	r24, Z
    3cd6:	8e bd       	out	0x2e, r24	; 46
    3cd8:	0d b4       	in	r0, 0x2d	; 45
    3cda:	07 fe       	sbrs	r0, 7
    3cdc:	fd cf       	rjmp	.-6      	; 0x3cd8 <FLASH_Page_Program+0x46>
    3cde:	8e b5       	in	r24, 0x2e	; 46
    3ce0:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    3ce4:	21 96       	adiw	r28, 0x01	; 1
    3ce6:	60 e0       	ldi	r22, 0x00	; 0
    3ce8:	72 e0       	ldi	r23, 0x02	; 2
    3cea:	80 e8       	ldi	r24, 0x80	; 128
    3cec:	0e 94 00 22 	call	0x4400	; 0x4400 <strlen>
    3cf0:	c8 17       	cp	r28, r24
    3cf2:	d9 07       	cpc	r29, r25
    3cf4:	60 f3       	brcs	.-40     	; 0x3cce <FLASH_Page_Program+0x3c>
    3cf6:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>
    3cfa:	0e 94 43 21 	call	0x4286	; 0x4286 <FLASH_Program_Execute>
    3cfe:	df 91       	pop	r29
    3d00:	cf 91       	pop	r28
    3d02:	08 95       	ret

Disassembly of section .text.FLASH_Page_Read:

0000416a <FLASH_Page_Read>:
	FLASH_Write_Disable();
}

void FLASH_Page_Read() //reads a single page data from Block/Page array to transfer to Cache register
{
	FLASH_NAND_CS_ENABLE();
    416a:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
	
	SPDR = PAGE_READ; //Sending Page_Read Command into SPI Data Register (SPDR)
    416e:	83 e1       	ldi	r24, 0x13	; 19
    4170:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    4172:	0d b4       	in	r0, 0x2d	; 45
    4174:	07 fe       	sbrs	r0, 7
    4176:	fd cf       	rjmp	.-6      	; 0x4172 <FLASH_Page_Read+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    4178:	8e b5       	in	r24, 0x2e	; 46
    417a:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    417e:	8a e1       	ldi	r24, 0x1A	; 26
    4180:	8a 95       	dec	r24
    4182:	f1 f7       	brne	.-4      	; 0x4180 <FLASH_Page_Read+0x16>
    4184:	00 c0       	rjmp	.+0      	; 0x4186 <FLASH_Page_Read+0x1c>
	
	_delay_us(5);
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to read data from in MainArray
    4186:	46 e2       	ldi	r20, 0x26	; 38
    4188:	52 e1       	ldi	r21, 0x12	; 18
    418a:	60 e8       	ldi	r22, 0x80	; 128
    418c:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    4190:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    4194:	0e 94 58 1a 	call	0x34b0	; 0x34b0 <FLASH_MainArray_Address>
	
	FLASH_NAND_CS_DISABLE();
    4198:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>
	
	FLASH_Status(); //checks for the status of data transfer from main array to cache from page_read command
    419c:	0e 94 17 1d 	call	0x3a2e	; 0x3a2e <FLASH_Status>
	
	//USART_Data("Page Read \n");
	
	FLASH_Read_From_Cache_x1();
    41a0:	0e 94 74 1f 	call	0x3ee8	; 0x3ee8 <FLASH_Read_From_Cache_x1>
    41a4:	08 95       	ret

Disassembly of section .text.FLASH_Para_Pg:

00003f38 <FLASH_Para_Pg>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3f38:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
    3f3c:	8f e1       	ldi	r24, 0x1F	; 31
    3f3e:	8e bd       	out	0x2e, r24	; 46
    3f40:	0d b4       	in	r0, 0x2d	; 45
    3f42:	07 fe       	sbrs	r0, 7
    3f44:	fd cf       	rjmp	.-6      	; 0x3f40 <FLASH_Para_Pg+0x8>
    3f46:	80 eb       	ldi	r24, 0xB0	; 176
    3f48:	8e bd       	out	0x2e, r24	; 46
    3f4a:	0d b4       	in	r0, 0x2d	; 45
    3f4c:	07 fe       	sbrs	r0, 7
    3f4e:	fd cf       	rjmp	.-6      	; 0x3f4a <FLASH_Para_Pg+0x12>
    3f50:	80 e4       	ldi	r24, 0x40	; 64
    3f52:	8e bd       	out	0x2e, r24	; 46
    3f54:	0d b4       	in	r0, 0x2d	; 45
    3f56:	07 fe       	sbrs	r0, 7
    3f58:	fd cf       	rjmp	.-6      	; 0x3f54 <FLASH_Para_Pg+0x1c>
    3f5a:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>
    3f5e:	0e 94 b5 20 	call	0x416a	; 0x416a <FLASH_Page_Read>
    3f62:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
    3f66:	8f e1       	ldi	r24, 0x1F	; 31
    3f68:	8e bd       	out	0x2e, r24	; 46
    3f6a:	0d b4       	in	r0, 0x2d	; 45
    3f6c:	07 fe       	sbrs	r0, 7
    3f6e:	fd cf       	rjmp	.-6      	; 0x3f6a <FLASH_Para_Pg+0x32>
    3f70:	80 eb       	ldi	r24, 0xB0	; 176
    3f72:	8e bd       	out	0x2e, r24	; 46
    3f74:	0d b4       	in	r0, 0x2d	; 45
    3f76:	07 fe       	sbrs	r0, 7
    3f78:	fd cf       	rjmp	.-6      	; 0x3f74 <FLASH_Para_Pg+0x3c>
    3f7a:	1e bc       	out	0x2e, r1	; 46
    3f7c:	0d b4       	in	r0, 0x2d	; 45
    3f7e:	07 fe       	sbrs	r0, 7
    3f80:	fd cf       	rjmp	.-6      	; 0x3f7c <FLASH_Para_Pg+0x44>
    3f82:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>
    3f86:	08 95       	ret

Disassembly of section .text.FLASH_Block_Erase:

000040e8 <FLASH_Block_Erase>:
    40e8:	0e 94 6c 22 	call	0x44d8	; 0x44d8 <FLASH_Write_Enable>
    40ec:	0e 94 3c 23 	call	0x4678	; 0x4678 <FLASH_NAND_CS_ENABLE>
    40f0:	88 ed       	ldi	r24, 0xD8	; 216
    40f2:	8e bd       	out	0x2e, r24	; 46
    40f4:	0d b4       	in	r0, 0x2d	; 45
    40f6:	07 fe       	sbrs	r0, 7
    40f8:	fd cf       	rjmp	.-6      	; 0x40f4 <FLASH_Block_Erase+0xc>
    40fa:	8e b5       	in	r24, 0x2e	; 46
    40fc:	80 93 2b 12 	sts	0x122B, r24	; 0x80122b <status>
    4100:	46 e2       	ldi	r20, 0x26	; 38
    4102:	52 e1       	ldi	r21, 0x12	; 18
    4104:	60 e8       	ldi	r22, 0x80	; 128
    4106:	80 91 24 12 	lds	r24, 0x1224	; 0x801224 <s>
    410a:	90 91 25 12 	lds	r25, 0x1225	; 0x801225 <s+0x1>
    410e:	0e 94 58 1a 	call	0x34b0	; 0x34b0 <FLASH_MainArray_Address>
    4112:	0e 94 40 23 	call	0x4680	; 0x4680 <FLASH_NAND_CS_DISABLE>
    4116:	6d eb       	ldi	r22, 0xBD	; 189
    4118:	75 e0       	ldi	r23, 0x05	; 5
    411a:	80 e0       	ldi	r24, 0x00	; 0
    411c:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
    4120:	0e 94 17 1d 	call	0x3a2e	; 0x3a2e <FLASH_Status>
    4124:	0e 94 79 22 	call	0x44f2	; 0x44f2 <FLASH_Write_Disable>
    4128:	08 95       	ret

Disassembly of section .text.Page_Tester:

00003072 <Page_Tester>:
#include "../include/FLASH_NAND_MEMORY.h"
#include "../include/AWS_Board_Operations.h"
#include "../include/NAND_Flash_Formatter.h"

void Page_Tester() //tests each page per block
{
    3072:	cf 92       	push	r12
    3074:	df 92       	push	r13
    3076:	ef 92       	push	r14
    3078:	ff 92       	push	r15
    307a:	0f 93       	push	r16
    307c:	cf 93       	push	r28
    307e:	df 93       	push	r29
	 //first obtain Columns and Block/Page addresses
	USART_Data("---Column Address--- 2 bytes \n");
    3080:	6b ec       	ldi	r22, 0xCB	; 203
    3082:	75 e0       	ldi	r23, 0x05	; 5
    3084:	80 e0       	ldi	r24, 0x00	; 0
    3086:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
	COLUMN_BLOCK_PAGE_ADDRESSER(false); //obtain the column address
    308a:	80 e0       	ldi	r24, 0x00	; 0
    308c:	0e 94 b3 12 	call	0x2566	; 0x2566 <COLUMN_BLOCK_PAGE_ADDRESSER>

	USART_Data("---Block/Page Address--- 3 bytes \n");
    3090:	6a ee       	ldi	r22, 0xEA	; 234
    3092:	75 e0       	ldi	r23, 0x05	; 5
    3094:	80 e0       	ldi	r24, 0x00	; 0
    3096:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <USART_Data>
	COLUMN_BLOCK_PAGE_ADDRESSER(true); //obtain the Block/Page address
    309a:	81 e0       	ldi	r24, 0x01	; 1
    309c:	0e 94 b3 12 	call	0x2566	; 0x2566 <COLUMN_BLOCK_PAGE_ADDRESSER>
		
	for (int i = 0; i < PAGES_PER_BLOCK; i++)
    30a0:	c0 e0       	ldi	r28, 0x00	; 0
    30a2:	d0 e0       	ldi	r29, 0x00	; 0
    30a4:	3b c0       	rjmp	.+118    	; 0x311c <Page_Tester+0xaa>
	{
		CLEAR_ARR();
    30a6:	0e 94 e8 1e 	call	0x3dd0	; 0x3dd0 <CLEAR_ARR>
		FLASH_Page_Read();
    30aa:	0e 94 b5 20 	call	0x416a	; 0x416a <FLASH_Page_Read>
		
		if (Byte_Address[4] == 0x40) //break loop if passed this point (x3F) is where all page bits are set to 1
    30ae:	80 91 2a 12 	lds	r24, 0x122A	; 0x80122a <Byte_Address+0x4>
    30b2:	80 34       	cpi	r24, 0x40	; 64
    30b4:	b1 f1       	breq	.+108    	; 0x3122 <Page_Tester+0xb0>
		{
			break;
		}
		
		if (data[0] != 0xFF)
    30b6:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <data>
    30ba:	8f 3f       	cpi	r24, 0xFF	; 255
    30bc:	a9 f0       	breq	.+42     	; 0x30e8 <Page_Tester+0x76>
		{
			Print_To_User(1, 4, "0x%02X This Page is marked bad \n", Byte_Address, status_feature);
    30be:	86 e2       	ldi	r24, 0x26	; 38
    30c0:	92 e1       	ldi	r25, 0x12	; 18
    30c2:	7c 01       	movw	r14, r24
    30c4:	20 e8       	ldi	r18, 0x80	; 128
    30c6:	02 2f       	mov	r16, r18
    30c8:	0f 2e       	mov	r0, r31
    30ca:	f0 e0       	ldi	r31, 0x00	; 0
    30cc:	cf 2e       	mov	r12, r31
    30ce:	fa e0       	ldi	r31, 0x0A	; 10
    30d0:	df 2e       	mov	r13, r31
    30d2:	f0 2d       	mov	r31, r0
    30d4:	2d e0       	ldi	r18, 0x0D	; 13
    30d6:	36 e0       	ldi	r19, 0x06	; 6
    30d8:	40 e0       	ldi	r20, 0x00	; 0
    30da:	64 e0       	ldi	r22, 0x04	; 4
    30dc:	70 e0       	ldi	r23, 0x00	; 0
    30de:	81 e0       	ldi	r24, 0x01	; 1
    30e0:	90 e0       	ldi	r25, 0x00	; 0
    30e2:	0e 94 ad 19 	call	0x335a	; 0x335a <Print_To_User>
    30e6:	14 c0       	rjmp	.+40     	; 0x3110 <Page_Tester+0x9e>
		}
		else
		{
			Print_To_User(1, 4, "0x%02X This Page is clean \n", Byte_Address, status_feature);
    30e8:	86 e2       	ldi	r24, 0x26	; 38
    30ea:	92 e1       	ldi	r25, 0x12	; 18
    30ec:	7c 01       	movw	r14, r24
    30ee:	20 e8       	ldi	r18, 0x80	; 128
    30f0:	02 2f       	mov	r16, r18
    30f2:	0f 2e       	mov	r0, r31
    30f4:	f0 e0       	ldi	r31, 0x00	; 0
    30f6:	cf 2e       	mov	r12, r31
    30f8:	fa e0       	ldi	r31, 0x0A	; 10
    30fa:	df 2e       	mov	r13, r31
    30fc:	f0 2d       	mov	r31, r0
    30fe:	2e e2       	ldi	r18, 0x2E	; 46
    3100:	36 e0       	ldi	r19, 0x06	; 6
    3102:	40 e0       	ldi	r20, 0x00	; 0
    3104:	64 e0       	ldi	r22, 0x04	; 4
    3106:	70 e0       	ldi	r23, 0x00	; 0
    3108:	81 e0       	ldi	r24, 0x01	; 1
    310a:	90 e0       	ldi	r25, 0x00	; 0
    310c:	0e 94 ad 19 	call	0x335a	; 0x335a <Print_To_User>
		}
		
		Byte_Address[4]++; //increment page hopefully...
    3110:	e6 e2       	ldi	r30, 0x26	; 38
    3112:	f2 e1       	ldi	r31, 0x12	; 18
    3114:	84 81       	ldd	r24, Z+4	; 0x04
    3116:	8f 5f       	subi	r24, 0xFF	; 255
    3118:	84 83       	std	Z+4, r24	; 0x04
	COLUMN_BLOCK_PAGE_ADDRESSER(false); //obtain the column address

	USART_Data("---Block/Page Address--- 3 bytes \n");
	COLUMN_BLOCK_PAGE_ADDRESSER(true); //obtain the Block/Page address
		
	for (int i = 0; i < PAGES_PER_BLOCK; i++)
    311a:	21 96       	adiw	r28, 0x01	; 1
    311c:	c0 34       	cpi	r28, 0x40	; 64
    311e:	d1 05       	cpc	r29, r1
    3120:	14 f2       	brlt	.-124    	; 0x30a6 <Page_Tester+0x34>
			Print_To_User(1, 4, "0x%02X This Page is clean \n", Byte_Address, status_feature);
		}
		
		Byte_Address[4]++; //increment page hopefully...
	}
}
    3122:	df 91       	pop	r29
    3124:	cf 91       	pop	r28
    3126:	0f 91       	pop	r16
    3128:	ff 90       	pop	r15
    312a:	ef 90       	pop	r14
    312c:	df 90       	pop	r13
    312e:	cf 90       	pop	r12
    3130:	08 95       	ret

Disassembly of section .text.libgcc:

00004604 <__xload_1>:
    4604:	57 fd       	sbrc	r21, 7
    4606:	03 c0       	rjmp	.+6      	; 0x460e <__xload_1+0xa>
    4608:	5b bf       	out	0x3b, r21	; 59
    460a:	67 91       	elpm	r22, Z+
    460c:	08 95       	ret
    460e:	60 81       	ld	r22, Z
    4610:	08 95       	ret

Disassembly of section .text.__dummy_fini:

000046a6 <_fini>:
    46a6:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000046a8 <__funcs_on_exit>:
    46a8:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000046aa <__simulator_exit>:
    46aa:	08 95       	ret

Disassembly of section .text.exit:

00004582 <exit>:
    4582:	ec 01       	movw	r28, r24
    4584:	0e 94 54 23 	call	0x46a8	; 0x46a8 <__funcs_on_exit>
    4588:	0e 94 53 23 	call	0x46a6	; 0x46a6 <_fini>
    458c:	ce 01       	movw	r24, r28
    458e:	0e 94 55 23 	call	0x46aa	; 0x46aa <__simulator_exit>
    4592:	ce 01       	movw	r24, r28
    4594:	0e 94 51 23 	call	0x46a2	; 0x46a2 <_Exit>

Disassembly of section .text.__wrap_sprintf:

00004390 <_sprintf_cdnopuxX>:
    4390:	a0 e0       	ldi	r26, 0x00	; 0
    4392:	b0 e0       	ldi	r27, 0x00	; 0
    4394:	ee ec       	ldi	r30, 0xCE	; 206
    4396:	f1 e2       	ldi	r31, 0x21	; 33
    4398:	0c 94 01 21 	jmp	0x4202	; 0x4202 <__prologue_saves__+0x20>
    439c:	9e 01       	movw	r18, r28
    439e:	25 5f       	subi	r18, 0xF5	; 245
    43a0:	3f 4f       	sbci	r19, 0xFF	; 255
    43a2:	48 85       	ldd	r20, Y+8	; 0x08
    43a4:	59 85       	ldd	r21, Y+9	; 0x09
    43a6:	6a 85       	ldd	r22, Y+10	; 0x0a
    43a8:	8e 81       	ldd	r24, Y+6	; 0x06
    43aa:	9f 81       	ldd	r25, Y+7	; 0x07
    43ac:	0e 94 92 22 	call	0x4524	; 0x4524 <__vsprintf>
    43b0:	e2 e0       	ldi	r30, 0x02	; 2
    43b2:	0c 94 38 21 	jmp	0x4270	; 0x4270 <__epilogue_restores__+0x20>

Disassembly of section .text.__fmt_s:

00002fa8 <__fmt_s>:
    2fa8:	2f 92       	push	r2
    2faa:	3f 92       	push	r3
    2fac:	4f 92       	push	r4
    2fae:	6f 92       	push	r6
    2fb0:	7f 92       	push	r7
    2fb2:	8f 92       	push	r8
    2fb4:	af 92       	push	r10
    2fb6:	bf 92       	push	r11
    2fb8:	cf 92       	push	r12
    2fba:	df 92       	push	r13
    2fbc:	ef 92       	push	r14
    2fbe:	ff 92       	push	r15
    2fc0:	0f 93       	push	r16
    2fc2:	1f 93       	push	r17
    2fc4:	cf 93       	push	r28
    2fc6:	df 93       	push	r29
    2fc8:	cd b7       	in	r28, 0x3d	; 61
    2fca:	de b7       	in	r29, 0x3e	; 62
    2fcc:	27 97       	sbiw	r28, 0x07	; 7
    2fce:	0f b6       	in	r0, 0x3f	; 63
    2fd0:	f8 94       	cli
    2fd2:	de bf       	out	0x3e, r29	; 62
    2fd4:	0f be       	out	0x3f, r0	; 63
    2fd6:	cd bf       	out	0x3d, r28	; 61
    2fd8:	6c 01       	movw	r12, r24
    2fda:	7b 01       	movw	r14, r22
    2fdc:	39 01       	movw	r6, r18
    2fde:	84 2e       	mov	r8, r20
    2fe0:	98 01       	movw	r18, r16
    2fe2:	83 e9       	ldi	r24, 0x93	; 147
    2fe4:	28 2e       	mov	r2, r24
    2fe6:	86 e0       	ldi	r24, 0x06	; 6
    2fe8:	38 2e       	mov	r3, r24
    2fea:	80 e0       	ldi	r24, 0x00	; 0
    2fec:	48 2e       	mov	r4, r24
    2fee:	87 e0       	ldi	r24, 0x07	; 7
    2ff0:	f1 01       	movw	r30, r2
    2ff2:	ae 01       	movw	r20, r28
    2ff4:	4f 5f       	subi	r20, 0xFF	; 255
    2ff6:	5f 4f       	sbci	r21, 0xFF	; 255
    2ff8:	da 01       	movw	r26, r20
    2ffa:	74 2d       	mov	r23, r4
    2ffc:	0e 94 5e 22 	call	0x44bc	; 0x44bc <__movmemx_qi>
    3000:	f7 01       	movw	r30, r14
    3002:	02 81       	ldd	r16, Z+2	; 0x02
    3004:	13 81       	ldd	r17, Z+3	; 0x03
    3006:	a4 80       	ldd	r10, Z+4	; 0x04
    3008:	b5 80       	ldd	r11, Z+5	; 0x05
    300a:	e0 80       	ld	r14, Z
    300c:	f1 80       	ldd	r15, Z+1	; 0x01
    300e:	61 14       	cp	r6, r1
    3010:	71 04       	cpc	r7, r1
    3012:	81 04       	cpc	r8, r1
    3014:	19 f4       	brne	.+6      	; 0x301c <__fmt_s+0x74>
    3016:	3a 01       	movw	r6, r20
    3018:	f0 e8       	ldi	r31, 0x80	; 128
    301a:	8f 2e       	mov	r8, r31
    301c:	21 15       	cp	r18, r1
    301e:	31 05       	cpc	r19, r1
    3020:	29 f4       	brne	.+10     	; 0x302c <__fmt_s+0x84>
    3022:	88 2d       	mov	r24, r8
    3024:	b3 01       	movw	r22, r6
    3026:	0e 94 00 22 	call	0x4400	; 0x4400 <strlen>
    302a:	9c 01       	movw	r18, r24
    302c:	17 fd       	sbrc	r17, 7
    302e:	04 c0       	rjmp	.+8      	; 0x3038 <__fmt_s+0x90>
    3030:	02 17       	cp	r16, r18
    3032:	13 07       	cpc	r17, r19
    3034:	08 f4       	brcc	.+2      	; 0x3038 <__fmt_s+0x90>
    3036:	98 01       	movw	r18, r16
    3038:	85 01       	movw	r16, r10
    303a:	68 2d       	mov	r22, r8
    303c:	a3 01       	movw	r20, r6
    303e:	c6 01       	movw	r24, r12
    3040:	0e 94 37 15 	call	0x2a6e	; 0x2a6e <__pad>
    3044:	27 96       	adiw	r28, 0x07	; 7
    3046:	0f b6       	in	r0, 0x3f	; 63
    3048:	f8 94       	cli
    304a:	de bf       	out	0x3e, r29	; 62
    304c:	0f be       	out	0x3f, r0	; 63
    304e:	cd bf       	out	0x3d, r28	; 61
    3050:	df 91       	pop	r29
    3052:	cf 91       	pop	r28
    3054:	1f 91       	pop	r17
    3056:	0f 91       	pop	r16
    3058:	ff 90       	pop	r15
    305a:	ef 90       	pop	r14
    305c:	df 90       	pop	r13
    305e:	cf 90       	pop	r12
    3060:	bf 90       	pop	r11
    3062:	af 90       	pop	r10
    3064:	8f 90       	pop	r8
    3066:	7f 90       	pop	r7
    3068:	6f 90       	pop	r6
    306a:	4f 90       	pop	r4
    306c:	3f 90       	pop	r3
    306e:	2f 90       	pop	r2
    3070:	08 95       	ret

Disassembly of section .text.__out:

00003d04 <__out>:
    3d04:	6f 92       	push	r6
    3d06:	7f 92       	push	r7
    3d08:	8f 92       	push	r8
    3d0a:	cf 92       	push	r12
    3d0c:	df 92       	push	r13
    3d0e:	ef 92       	push	r14
    3d10:	0f 93       	push	r16
    3d12:	1f 93       	push	r17
    3d14:	cf 93       	push	r28
    3d16:	df 93       	push	r29
    3d18:	8c 01       	movw	r16, r24
    3d1a:	6a 01       	movw	r12, r20
    3d1c:	e6 2e       	mov	r14, r22
    3d1e:	e9 01       	movw	r28, r18
    3d20:	3a 01       	movw	r6, r20
    3d22:	86 2e       	mov	r8, r22
    3d24:	62 0e       	add	r6, r18
    3d26:	73 1e       	adc	r7, r19
    3d28:	81 1c       	adc	r8, r1
    3d2a:	37 fd       	sbrc	r19, 7
    3d2c:	8a 94       	dec	r8
    3d2e:	c6 14       	cp	r12, r6
    3d30:	d7 04       	cpc	r13, r7
    3d32:	e8 04       	cpc	r14, r8
    3d34:	81 f0       	breq	.+32     	; 0x3d56 <__out+0x52>
    3d36:	f6 01       	movw	r30, r12
    3d38:	5e 2d       	mov	r21, r14
    3d3a:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    3d3e:	86 2f       	mov	r24, r22
    3d40:	b8 01       	movw	r22, r16
    3d42:	08 2e       	mov	r0, r24
    3d44:	00 0c       	add	r0, r0
    3d46:	99 0b       	sbc	r25, r25
    3d48:	0e 94 43 1c 	call	0x3886	; 0x3886 <fputc>
    3d4c:	8f ef       	ldi	r24, 0xFF	; 255
    3d4e:	c8 1a       	sub	r12, r24
    3d50:	d8 0a       	sbc	r13, r24
    3d52:	e8 0a       	sbc	r14, r24
    3d54:	ec cf       	rjmp	.-40     	; 0x3d2e <__out+0x2a>
    3d56:	ce 01       	movw	r24, r28
    3d58:	df 91       	pop	r29
    3d5a:	cf 91       	pop	r28
    3d5c:	1f 91       	pop	r17
    3d5e:	0f 91       	pop	r16
    3d60:	ef 90       	pop	r14
    3d62:	df 90       	pop	r13
    3d64:	cf 90       	pop	r12
    3d66:	8f 90       	pop	r8
    3d68:	7f 90       	pop	r7
    3d6a:	6f 90       	pop	r6
    3d6c:	08 95       	ret

Disassembly of section .text.__pad:

00002a6e <__pad>:
    2a6e:	2f 92       	push	r2
    2a70:	3f 92       	push	r3
    2a72:	4f 92       	push	r4
    2a74:	6f 92       	push	r6
    2a76:	7f 92       	push	r7
    2a78:	8f 92       	push	r8
    2a7a:	af 92       	push	r10
    2a7c:	bf 92       	push	r11
    2a7e:	cf 92       	push	r12
    2a80:	df 92       	push	r13
    2a82:	ef 92       	push	r14
    2a84:	ff 92       	push	r15
    2a86:	0f 93       	push	r16
    2a88:	1f 93       	push	r17
    2a8a:	cf 93       	push	r28
    2a8c:	df 93       	push	r29
    2a8e:	cd b7       	in	r28, 0x3d	; 61
    2a90:	de b7       	in	r29, 0x3e	; 62
    2a92:	66 97       	sbiw	r28, 0x16	; 22
    2a94:	0f b6       	in	r0, 0x3f	; 63
    2a96:	f8 94       	cli
    2a98:	de bf       	out	0x3e, r29	; 62
    2a9a:	0f be       	out	0x3f, r0	; 63
    2a9c:	cd bf       	out	0x3d, r28	; 61
    2a9e:	5c 01       	movw	r10, r24
    2aa0:	3a 01       	movw	r6, r20
    2aa2:	86 2e       	mov	r8, r22
    2aa4:	69 01       	movw	r12, r18
    2aa6:	c7 01       	movw	r24, r14
    2aa8:	81 70       	andi	r24, 0x01	; 1
    2aaa:	99 27       	eor	r25, r25
    2aac:	9c 8b       	std	Y+20, r25	; 0x14
    2aae:	8b 8b       	std	Y+19, r24	; 0x13
    2ab0:	e0 fc       	sbrc	r14, 0
    2ab2:	1d c0       	rjmp	.+58     	; 0x2aee <__pad+0x80>
    2ab4:	20 17       	cp	r18, r16
    2ab6:	31 07       	cpc	r19, r17
    2ab8:	d4 f4       	brge	.+52     	; 0x2aee <__pad+0x80>
    2aba:	78 01       	movw	r14, r16
    2abc:	ec 18       	sub	r14, r12
    2abe:	fd 08       	sbc	r15, r13
    2ac0:	fe 8a       	std	Y+22, r15	; 0x16
    2ac2:	ed 8a       	std	Y+21, r14	; 0x15
    2ac4:	a7 01       	movw	r20, r14
    2ac6:	91 e1       	ldi	r25, 0x11	; 17
    2ac8:	e9 16       	cp	r14, r25
    2aca:	f1 04       	cpc	r15, r1
    2acc:	10 f0       	brcs	.+4      	; 0x2ad2 <__pad+0x64>
    2ace:	40 e1       	ldi	r20, 0x10	; 16
    2ad0:	50 e0       	ldi	r21, 0x00	; 0
    2ad2:	60 e2       	ldi	r22, 0x20	; 32
    2ad4:	70 e0       	ldi	r23, 0x00	; 0
    2ad6:	ce 01       	movw	r24, r28
    2ad8:	01 96       	adiw	r24, 0x01	; 1
    2ada:	9a 8b       	std	Y+18, r25	; 0x12
    2adc:	89 8b       	std	Y+17, r24	; 0x11
    2ade:	0e 94 cc 22 	call	0x4598	; 0x4598 <memset>
    2ae2:	89 89       	ldd	r24, Y+17	; 0x11
    2ae4:	9a 89       	ldd	r25, Y+18	; 0x12
    2ae6:	1c 01       	movw	r2, r24
    2ae8:	20 e8       	ldi	r18, 0x80	; 128
    2aea:	42 2e       	mov	r4, r18
    2aec:	0b c0       	rjmp	.+22     	; 0x2b04 <__pad+0x96>
    2aee:	96 01       	movw	r18, r12
    2af0:	68 2d       	mov	r22, r8
    2af2:	a3 01       	movw	r20, r6
    2af4:	c5 01       	movw	r24, r10
    2af6:	0e 94 82 1e 	call	0x3d04	; 0x3d04 <__out>
    2afa:	c0 16       	cp	r12, r16
    2afc:	d1 06       	cpc	r13, r17
    2afe:	ec f2       	brlt	.-70     	; 0x2aba <__pad+0x4c>
    2b00:	c6 01       	movw	r24, r12
    2b02:	25 c0       	rjmp	.+74     	; 0x2b4e <__pad+0xe0>
    2b04:	90 e1       	ldi	r25, 0x10	; 16
    2b06:	e9 16       	cp	r14, r25
    2b08:	f1 04       	cpc	r15, r1
    2b0a:	58 f0       	brcs	.+22     	; 0x2b22 <__pad+0xb4>
    2b0c:	20 e1       	ldi	r18, 0x10	; 16
    2b0e:	30 e0       	ldi	r19, 0x00	; 0
    2b10:	64 2d       	mov	r22, r4
    2b12:	a1 01       	movw	r20, r2
    2b14:	c5 01       	movw	r24, r10
    2b16:	0e 94 82 1e 	call	0x3d04	; 0x3d04 <__out>
    2b1a:	80 e1       	ldi	r24, 0x10	; 16
    2b1c:	e8 1a       	sub	r14, r24
    2b1e:	f1 08       	sbc	r15, r1
    2b20:	f1 cf       	rjmp	.-30     	; 0x2b04 <__pad+0x96>
    2b22:	2d 89       	ldd	r18, Y+21	; 0x15
    2b24:	3e 89       	ldd	r19, Y+22	; 0x16
    2b26:	2f 70       	andi	r18, 0x0F	; 15
    2b28:	33 27       	eor	r19, r19
    2b2a:	89 89       	ldd	r24, Y+17	; 0x11
    2b2c:	9a 89       	ldd	r25, Y+18	; 0x12
    2b2e:	ac 01       	movw	r20, r24
    2b30:	60 e8       	ldi	r22, 0x80	; 128
    2b32:	c5 01       	movw	r24, r10
    2b34:	0e 94 82 1e 	call	0x3d04	; 0x3d04 <__out>
    2b38:	8b 89       	ldd	r24, Y+19	; 0x13
    2b3a:	9c 89       	ldd	r25, Y+20	; 0x14
    2b3c:	89 2b       	or	r24, r25
    2b3e:	31 f4       	brne	.+12     	; 0x2b4c <__pad+0xde>
    2b40:	96 01       	movw	r18, r12
    2b42:	68 2d       	mov	r22, r8
    2b44:	a3 01       	movw	r20, r6
    2b46:	c5 01       	movw	r24, r10
    2b48:	0e 94 82 1e 	call	0x3d04	; 0x3d04 <__out>
    2b4c:	c8 01       	movw	r24, r16
    2b4e:	66 96       	adiw	r28, 0x16	; 22
    2b50:	0f b6       	in	r0, 0x3f	; 63
    2b52:	f8 94       	cli
    2b54:	de bf       	out	0x3e, r29	; 62
    2b56:	0f be       	out	0x3f, r0	; 63
    2b58:	cd bf       	out	0x3d, r28	; 61
    2b5a:	df 91       	pop	r29
    2b5c:	cf 91       	pop	r28
    2b5e:	1f 91       	pop	r17
    2b60:	0f 91       	pop	r16
    2b62:	ff 90       	pop	r15
    2b64:	ef 90       	pop	r14
    2b66:	df 90       	pop	r13
    2b68:	cf 90       	pop	r12
    2b6a:	bf 90       	pop	r11
    2b6c:	af 90       	pop	r10
    2b6e:	8f 90       	pop	r8
    2b70:	7f 90       	pop	r7
    2b72:	6f 90       	pop	r6
    2b74:	4f 90       	pop	r4
    2b76:	3f 90       	pop	r3
    2b78:	2f 90       	pop	r2
    2b7a:	08 95       	ret

Disassembly of section .text.__fmt_state:

00003556 <__fmt_state>:
    3556:	cf 92       	push	r12
    3558:	df 92       	push	r13
    355a:	ef 92       	push	r14
    355c:	dc 01       	movw	r26, r24
    355e:	90 e0       	ldi	r25, 0x00	; 0
    3560:	29 2f       	mov	r18, r25
    3562:	30 e0       	ldi	r19, 0x00	; 0
    3564:	22 0f       	add	r18, r18
    3566:	33 1f       	adc	r19, r19
    3568:	69 01       	movw	r12, r18
    356a:	03 2e       	mov	r0, r19
    356c:	00 0c       	add	r0, r0
    356e:	ee 08       	sbc	r14, r14
    3570:	6e 2d       	mov	r22, r14
    3572:	a6 01       	movw	r20, r12
    3574:	46 5b       	subi	r20, 0xB6	; 182
    3576:	59 4f       	sbci	r21, 0xF9	; 249
    3578:	6f 4f       	sbci	r22, 0xFF	; 255
    357a:	6a 01       	movw	r12, r20
    357c:	e6 2e       	mov	r14, r22
    357e:	fa 01       	movw	r30, r20
    3580:	5e 2d       	mov	r21, r14
    3582:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    3586:	86 2f       	mov	r24, r22
    3588:	61 11       	cpse	r22, r1
    358a:	0e c0       	rjmp	.+28     	; 0x35a8 <__fmt_state+0x52>
    358c:	2f 5f       	subi	r18, 0xFF	; 255
    358e:	3f 4f       	sbci	r19, 0xFF	; 255
    3590:	03 2e       	mov	r0, r19
    3592:	00 0c       	add	r0, r0
    3594:	44 0b       	sbc	r20, r20
    3596:	26 5b       	subi	r18, 0xB6	; 182
    3598:	39 4f       	sbci	r19, 0xF9	; 249
    359a:	4f 4f       	sbci	r20, 0xFF	; 255
    359c:	f9 01       	movw	r30, r18
    359e:	54 2f       	mov	r21, r20
    35a0:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    35a4:	86 2f       	mov	r24, r22
    35a6:	25 c0       	rjmp	.+74     	; 0x35f2 <__fmt_state+0x9c>
    35a8:	cd 90       	ld	r12, X+
    35aa:	dd 90       	ld	r13, X+
    35ac:	ec 90       	ld	r14, X
    35ae:	12 97       	sbiw	r26, 0x02	; 2
    35b0:	f6 01       	movw	r30, r12
    35b2:	5e 2d       	mov	r21, r14
    35b4:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    35b8:	86 13       	cpse	r24, r22
    35ba:	16 c0       	rjmp	.+44     	; 0x35e8 <__fmt_state+0x92>
    35bc:	2f 5f       	subi	r18, 0xFF	; 255
    35be:	3f 4f       	sbci	r19, 0xFF	; 255
    35c0:	03 2e       	mov	r0, r19
    35c2:	00 0c       	add	r0, r0
    35c4:	44 0b       	sbc	r20, r20
    35c6:	26 5b       	subi	r18, 0xB6	; 182
    35c8:	39 4f       	sbci	r19, 0xF9	; 249
    35ca:	4f 4f       	sbci	r20, 0xFF	; 255
    35cc:	f9 01       	movw	r30, r18
    35ce:	54 2f       	mov	r21, r20
    35d0:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    35d4:	96 2f       	mov	r25, r22
    35d6:	5f ef       	ldi	r21, 0xFF	; 255
    35d8:	c5 1a       	sub	r12, r21
    35da:	d5 0a       	sbc	r13, r21
    35dc:	e5 0a       	sbc	r14, r21
    35de:	cd 92       	st	X+, r12
    35e0:	dd 92       	st	X+, r13
    35e2:	ec 92       	st	X, r14
    35e4:	12 97       	sbiw	r26, 0x02	; 2
    35e6:	01 c0       	rjmp	.+2      	; 0x35ea <__fmt_state+0x94>
    35e8:	9f 5f       	subi	r25, 0xFF	; 255
    35ea:	9b 30       	cpi	r25, 0x0B	; 11
    35ec:	08 f4       	brcc	.+2      	; 0x35f0 <__fmt_state+0x9a>
    35ee:	b8 cf       	rjmp	.-144    	; 0x3560 <__fmt_state+0xa>
    35f0:	89 2f       	mov	r24, r25
    35f2:	ef 90       	pop	r14
    35f4:	df 90       	pop	r13
    35f6:	cf 90       	pop	r12
    35f8:	08 95       	ret

Disassembly of section .text.__printf_core:

000006a0 <__printf_core>:
 6a0:	a3 ea       	ldi	r26, 0xA3	; 163
 6a2:	b0 e0       	ldi	r27, 0x00	; 0
 6a4:	e6 e5       	ldi	r30, 0x56	; 86
 6a6:	f3 e0       	ldi	r31, 0x03	; 3
 6a8:	0c 94 f1 20 	jmp	0x41e2	; 0x41e2 <__prologue_saves__>
 6ac:	4c 01       	movw	r8, r24
 6ae:	59 01       	movw	r10, r18
 6b0:	c7 56       	subi	r28, 0x67	; 103
 6b2:	df 4f       	sbci	r29, 0xFF	; 255
 6b4:	48 83       	st	Y, r20
 6b6:	59 83       	std	Y+1, r21	; 0x01
 6b8:	6a 83       	std	Y+2, r22	; 0x02
 6ba:	c9 59       	subi	r28, 0x99	; 153
 6bc:	d0 40       	sbci	r29, 0x00	; 0
 6be:	21 2c       	mov	r2, r1
 6c0:	31 2c       	mov	r3, r1
 6c2:	6e 01       	movw	r12, r28
 6c4:	2b e8       	ldi	r18, 0x8B	; 139
 6c6:	c2 0e       	add	r12, r18
 6c8:	d1 1c       	adc	r13, r1
 6ca:	85 e2       	ldi	r24, 0x25	; 37
 6cc:	78 2e       	mov	r7, r24
 6ce:	26 01       	movw	r4, r12
 6d0:	30 e8       	ldi	r19, 0x80	; 128
 6d2:	63 2e       	mov	r6, r19
 6d4:	ce 01       	movw	r24, r28
 6d6:	8d 56       	subi	r24, 0x6D	; 109
 6d8:	9f 4f       	sbci	r25, 0xFF	; 255
 6da:	c4 56       	subi	r28, 0x64	; 100
 6dc:	df 4f       	sbci	r29, 0xFF	; 255
 6de:	99 83       	std	Y+1, r25	; 0x01
 6e0:	88 83       	st	Y, r24
 6e2:	cc 59       	subi	r28, 0x9C	; 156
 6e4:	d0 40       	sbci	r29, 0x00	; 0
 6e6:	9c 01       	movw	r18, r24
 6e8:	40 e8       	ldi	r20, 0x80	; 128
 6ea:	cf 55       	subi	r28, 0x5F	; 95
 6ec:	df 4f       	sbci	r29, 0xFF	; 255
 6ee:	28 83       	st	Y, r18
 6f0:	39 83       	std	Y+1, r19	; 0x01
 6f2:	4a 83       	std	Y+2, r20	; 0x02
 6f4:	c1 5a       	subi	r28, 0xA1	; 161
 6f6:	d0 40       	sbci	r29, 0x00	; 0
 6f8:	c7 56       	subi	r28, 0x67	; 103
 6fa:	df 4f       	sbci	r29, 0xFF	; 255
 6fc:	48 81       	ld	r20, Y
 6fe:	c9 59       	subi	r28, 0x99	; 153
 700:	d0 40       	sbci	r29, 0x00	; 0
 702:	c6 56       	subi	r28, 0x66	; 102
 704:	df 4f       	sbci	r29, 0xFF	; 255
 706:	b8 81       	ld	r27, Y
 708:	ca 59       	subi	r28, 0x9A	; 154
 70a:	d0 40       	sbci	r29, 0x00	; 0
 70c:	c5 56       	subi	r28, 0x65	; 101
 70e:	df 4f       	sbci	r29, 0xFF	; 255
 710:	78 81       	ld	r23, Y
 712:	cb 59       	subi	r28, 0x9B	; 155
 714:	d0 40       	sbci	r29, 0x00	; 0
 716:	e4 2f       	mov	r30, r20
 718:	fb 2f       	mov	r31, r27
 71a:	57 2f       	mov	r21, r23
 71c:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
 720:	66 23       	and	r22, r22
 722:	09 f4       	brne	.+2      	; 0x726 <__printf_core+0x86>
 724:	d0 c3       	rjmp	.+1952   	; 0xec6 <__printf_core+0x826>
 726:	cf 57       	subi	r28, 0x7F	; 127
 728:	df 4f       	sbci	r29, 0xFF	; 255
 72a:	19 82       	std	Y+1, r1	; 0x01
 72c:	18 82       	st	Y, r1
 72e:	c1 58       	subi	r28, 0x81	; 129
 730:	d0 40       	sbci	r29, 0x00	; 0
 732:	8f ef       	ldi	r24, 0xFF	; 255
 734:	9f ef       	ldi	r25, 0xFF	; 255
 736:	cd 57       	subi	r28, 0x7D	; 125
 738:	df 4f       	sbci	r29, 0xFF	; 255
 73a:	99 83       	std	Y+1, r25	; 0x01
 73c:	88 83       	st	Y, r24
 73e:	c3 58       	subi	r28, 0x83	; 131
 740:	d0 40       	sbci	r29, 0x00	; 0
 742:	cb 57       	subi	r28, 0x7B	; 123
 744:	df 4f       	sbci	r29, 0xFF	; 255
 746:	19 82       	std	Y+1, r1	; 0x01
 748:	18 82       	st	Y, r1
 74a:	c5 58       	subi	r28, 0x85	; 133
 74c:	d0 40       	sbci	r29, 0x00	; 0
 74e:	e1 e0       	ldi	r30, 0x01	; 1
 750:	f0 e0       	ldi	r31, 0x00	; 0
 752:	ec 0f       	add	r30, r28
 754:	fd 1f       	adc	r31, r29
 756:	c9 57       	subi	r28, 0x79	; 121
 758:	df 4f       	sbci	r29, 0xFF	; 255
 75a:	f9 83       	std	Y+1, r31	; 0x01
 75c:	e8 83       	st	Y, r30
 75e:	c7 58       	subi	r28, 0x87	; 135
 760:	d0 40       	sbci	r29, 0x00	; 0
 762:	20 e8       	ldi	r18, 0x80	; 128
 764:	30 e0       	ldi	r19, 0x00	; 0
 766:	c7 57       	subi	r28, 0x77	; 119
 768:	df 4f       	sbci	r29, 0xFF	; 255
 76a:	39 83       	std	Y+1, r19	; 0x01
 76c:	28 83       	st	Y, r18
 76e:	c9 58       	subi	r28, 0x89	; 137
 770:	d0 40       	sbci	r29, 0x00	; 0
 772:	84 2f       	mov	r24, r20
 774:	9b 2f       	mov	r25, r27
 776:	a7 2f       	mov	r26, r23
 778:	e1 2c       	mov	r14, r1
 77a:	f1 2c       	mov	r15, r1
 77c:	fc 01       	movw	r30, r24
 77e:	5a 2f       	mov	r21, r26
 780:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
 784:	61 11       	cpse	r22, r1
 786:	1d c0       	rjmp	.+58     	; 0x7c2 <__printf_core+0x122>
 788:	e1 14       	cp	r14, r1
 78a:	f1 04       	cpc	r15, r1
 78c:	11 f1       	breq	.+68     	; 0x7d2 <__printf_core+0x132>
 78e:	97 01       	movw	r18, r14
 790:	5b 2f       	mov	r21, r27
 792:	67 2f       	mov	r22, r23
 794:	c4 01       	movw	r24, r8
 796:	0e 94 82 1e 	call	0x3d04	; 0x3d04 <__out>
 79a:	c7 56       	subi	r28, 0x67	; 103
 79c:	df 4f       	sbci	r29, 0xFF	; 255
 79e:	88 81       	ld	r24, Y
 7a0:	99 81       	ldd	r25, Y+1	; 0x01
 7a2:	aa 81       	ldd	r26, Y+2	; 0x02
 7a4:	c9 59       	subi	r28, 0x99	; 153
 7a6:	d0 40       	sbci	r29, 0x00	; 0
 7a8:	8e 0d       	add	r24, r14
 7aa:	9f 1d       	adc	r25, r15
 7ac:	a1 1d       	adc	r26, r1
 7ae:	f7 fc       	sbrc	r15, 7
 7b0:	aa 95       	dec	r26
 7b2:	c7 56       	subi	r28, 0x67	; 103
 7b4:	df 4f       	sbci	r29, 0xFF	; 255
 7b6:	88 83       	st	Y, r24
 7b8:	99 83       	std	Y+1, r25	; 0x01
 7ba:	aa 83       	std	Y+2, r26	; 0x02
 7bc:	c9 59       	subi	r28, 0x99	; 153
 7be:	d0 40       	sbci	r29, 0x00	; 0
 7c0:	08 c0       	rjmp	.+16     	; 0x7d2 <__printf_core+0x132>
 7c2:	01 96       	adiw	r24, 0x01	; 1
 7c4:	a1 1d       	adc	r26, r1
 7c6:	65 32       	cpi	r22, 0x25	; 37
 7c8:	f9 f2       	breq	.-66     	; 0x788 <__printf_core+0xe8>
 7ca:	3f ef       	ldi	r19, 0xFF	; 255
 7cc:	e3 1a       	sub	r14, r19
 7ce:	f3 0a       	sbc	r15, r19
 7d0:	d5 cf       	rjmp	.-86     	; 0x77c <__printf_core+0xdc>
 7d2:	c7 56       	subi	r28, 0x67	; 103
 7d4:	df 4f       	sbci	r29, 0xFF	; 255
 7d6:	88 81       	ld	r24, Y
 7d8:	99 81       	ldd	r25, Y+1	; 0x01
 7da:	aa 81       	ldd	r26, Y+2	; 0x02
 7dc:	c9 59       	subi	r28, 0x99	; 153
 7de:	d0 40       	sbci	r29, 0x00	; 0
 7e0:	fc 01       	movw	r30, r24
 7e2:	5a 2f       	mov	r21, r26
 7e4:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
 7e8:	65 32       	cpi	r22, 0x25	; 37
 7ea:	09 f0       	breq	.+2      	; 0x7ee <__printf_core+0x14e>
 7ec:	5a c3       	rjmp	.+1716   	; 0xea2 <__printf_core+0x802>
 7ee:	9c 01       	movw	r18, r24
 7f0:	4a 2f       	mov	r20, r26
 7f2:	2f 5f       	subi	r18, 0xFF	; 255
 7f4:	3f 4f       	sbci	r19, 0xFF	; 255
 7f6:	4f 4f       	sbci	r20, 0xFF	; 255
 7f8:	c2 56       	subi	r28, 0x62	; 98
 7fa:	df 4f       	sbci	r29, 0xFF	; 255
 7fc:	28 83       	st	Y, r18
 7fe:	39 83       	std	Y+1, r19	; 0x01
 800:	4a 83       	std	Y+2, r20	; 0x02
 802:	ce 59       	subi	r28, 0x9E	; 158
 804:	d0 40       	sbci	r29, 0x00	; 0
 806:	c7 56       	subi	r28, 0x67	; 103
 808:	df 4f       	sbci	r29, 0xFF	; 255
 80a:	28 83       	st	Y, r18
 80c:	39 83       	std	Y+1, r19	; 0x01
 80e:	4a 83       	std	Y+2, r20	; 0x02
 810:	c9 59       	subi	r28, 0x99	; 153
 812:	d0 40       	sbci	r29, 0x00	; 0
 814:	c7 56       	subi	r28, 0x67	; 103
 816:	df 4f       	sbci	r29, 0xFF	; 255
 818:	88 81       	ld	r24, Y
 81a:	99 81       	ldd	r25, Y+1	; 0x01
 81c:	aa 81       	ldd	r26, Y+2	; 0x02
 81e:	c9 59       	subi	r28, 0x99	; 153
 820:	d0 40       	sbci	r29, 0x00	; 0
 822:	fc 01       	movw	r30, r24
 824:	5a 2f       	mov	r21, r26
 826:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
 82a:	6b 32       	cpi	r22, 0x2B	; 43
 82c:	41 f4       	brne	.+16     	; 0x83e <__printf_core+0x19e>
 82e:	cf 57       	subi	r28, 0x7F	; 127
 830:	df 4f       	sbci	r29, 0xFF	; 255
 832:	28 81       	ld	r18, Y
 834:	39 81       	ldd	r19, Y+1	; 0x01
 836:	c1 58       	subi	r28, 0x81	; 129
 838:	d0 40       	sbci	r29, 0x00	; 0
 83a:	24 60       	ori	r18, 0x04	; 4
 83c:	0b c0       	rjmp	.+22     	; 0x854 <__printf_core+0x1b4>
 83e:	6c 32       	cpi	r22, 0x2C	; 44
 840:	cc f0       	brlt	.+50     	; 0x874 <__printf_core+0x1d4>
 842:	6d 32       	cpi	r22, 0x2D	; 45
 844:	59 f5       	brne	.+86     	; 0x89c <__printf_core+0x1fc>
 846:	cf 57       	subi	r28, 0x7F	; 127
 848:	df 4f       	sbci	r29, 0xFF	; 255
 84a:	28 81       	ld	r18, Y
 84c:	39 81       	ldd	r19, Y+1	; 0x01
 84e:	c1 58       	subi	r28, 0x81	; 129
 850:	d0 40       	sbci	r29, 0x00	; 0
 852:	21 60       	ori	r18, 0x01	; 1
 854:	cf 57       	subi	r28, 0x7F	; 127
 856:	df 4f       	sbci	r29, 0xFF	; 255
 858:	39 83       	std	Y+1, r19	; 0x01
 85a:	28 83       	st	Y, r18
 85c:	c1 58       	subi	r28, 0x81	; 129
 85e:	d0 40       	sbci	r29, 0x00	; 0
 860:	01 96       	adiw	r24, 0x01	; 1
 862:	a1 1d       	adc	r26, r1
 864:	c7 56       	subi	r28, 0x67	; 103
 866:	df 4f       	sbci	r29, 0xFF	; 255
 868:	88 83       	st	Y, r24
 86a:	99 83       	std	Y+1, r25	; 0x01
 86c:	aa 83       	std	Y+2, r26	; 0x02
 86e:	c9 59       	subi	r28, 0x99	; 153
 870:	d0 40       	sbci	r29, 0x00	; 0
 872:	d0 cf       	rjmp	.-96     	; 0x814 <__printf_core+0x174>
 874:	60 32       	cpi	r22, 0x20	; 32
 876:	41 f4       	brne	.+16     	; 0x888 <__printf_core+0x1e8>
 878:	cf 57       	subi	r28, 0x7F	; 127
 87a:	df 4f       	sbci	r29, 0xFF	; 255
 87c:	28 81       	ld	r18, Y
 87e:	39 81       	ldd	r19, Y+1	; 0x01
 880:	c1 58       	subi	r28, 0x81	; 129
 882:	d0 40       	sbci	r29, 0x00	; 0
 884:	28 60       	ori	r18, 0x08	; 8
 886:	e6 cf       	rjmp	.-52     	; 0x854 <__printf_core+0x1b4>
 888:	63 32       	cpi	r22, 0x23	; 35
 88a:	91 f4       	brne	.+36     	; 0x8b0 <__printf_core+0x210>
 88c:	cf 57       	subi	r28, 0x7F	; 127
 88e:	df 4f       	sbci	r29, 0xFF	; 255
 890:	28 81       	ld	r18, Y
 892:	39 81       	ldd	r19, Y+1	; 0x01
 894:	c1 58       	subi	r28, 0x81	; 129
 896:	d0 40       	sbci	r29, 0x00	; 0
 898:	20 61       	ori	r18, 0x10	; 16
 89a:	dc cf       	rjmp	.-72     	; 0x854 <__printf_core+0x1b4>
 89c:	60 33       	cpi	r22, 0x30	; 48
 89e:	41 f4       	brne	.+16     	; 0x8b0 <__printf_core+0x210>
 8a0:	cf 57       	subi	r28, 0x7F	; 127
 8a2:	df 4f       	sbci	r29, 0xFF	; 255
 8a4:	28 81       	ld	r18, Y
 8a6:	39 81       	ldd	r19, Y+1	; 0x01
 8a8:	c1 58       	subi	r28, 0x81	; 129
 8aa:	d0 40       	sbci	r29, 0x00	; 0
 8ac:	22 60       	ori	r18, 0x02	; 2
 8ae:	d2 cf       	rjmp	.-92     	; 0x854 <__printf_core+0x1b4>
 8b0:	6a 32       	cpi	r22, 0x2A	; 42
 8b2:	99 f5       	brne	.+102    	; 0x91a <__printf_core+0x27a>
 8b4:	01 96       	adiw	r24, 0x01	; 1
 8b6:	a1 1d       	adc	r26, r1
 8b8:	c7 56       	subi	r28, 0x67	; 103
 8ba:	df 4f       	sbci	r29, 0xFF	; 255
 8bc:	88 83       	st	Y, r24
 8be:	99 83       	std	Y+1, r25	; 0x01
 8c0:	aa 83       	std	Y+2, r26	; 0x02
 8c2:	c9 59       	subi	r28, 0x99	; 153
 8c4:	d0 40       	sbci	r29, 0x00	; 0
 8c6:	d5 01       	movw	r26, r10
 8c8:	ed 91       	ld	r30, X+
 8ca:	fc 91       	ld	r31, X
 8cc:	11 97       	sbiw	r26, 0x01	; 1
 8ce:	cf 01       	movw	r24, r30
 8d0:	02 96       	adiw	r24, 0x02	; 2
 8d2:	8d 93       	st	X+, r24
 8d4:	9c 93       	st	X, r25
 8d6:	80 81       	ld	r24, Z
 8d8:	91 81       	ldd	r25, Z+1	; 0x01
 8da:	cb 57       	subi	r28, 0x7B	; 123
 8dc:	df 4f       	sbci	r29, 0xFF	; 255
 8de:	99 83       	std	Y+1, r25	; 0x01
 8e0:	88 83       	st	Y, r24
 8e2:	c5 58       	subi	r28, 0x85	; 133
 8e4:	d0 40       	sbci	r29, 0x00	; 0
 8e6:	97 ff       	sbrs	r25, 7
 8e8:	3f c0       	rjmp	.+126    	; 0x968 <__printf_core+0x2c8>
 8ea:	cf 57       	subi	r28, 0x7F	; 127
 8ec:	df 4f       	sbci	r29, 0xFF	; 255
 8ee:	28 81       	ld	r18, Y
 8f0:	39 81       	ldd	r19, Y+1	; 0x01
 8f2:	c1 58       	subi	r28, 0x81	; 129
 8f4:	d0 40       	sbci	r29, 0x00	; 0
 8f6:	b1 e0       	ldi	r27, 0x01	; 1
 8f8:	2b 27       	eor	r18, r27
 8fa:	cf 57       	subi	r28, 0x7F	; 127
 8fc:	df 4f       	sbci	r29, 0xFF	; 255
 8fe:	39 83       	std	Y+1, r19	; 0x01
 900:	28 83       	st	Y, r18
 902:	c1 58       	subi	r28, 0x81	; 129
 904:	d0 40       	sbci	r29, 0x00	; 0
 906:	91 95       	neg	r25
 908:	81 95       	neg	r24
 90a:	91 09       	sbc	r25, r1
 90c:	cb 57       	subi	r28, 0x7B	; 123
 90e:	df 4f       	sbci	r29, 0xFF	; 255
 910:	99 83       	std	Y+1, r25	; 0x01
 912:	88 83       	st	Y, r24
 914:	c5 58       	subi	r28, 0x85	; 133
 916:	d0 40       	sbci	r29, 0x00	; 0
 918:	27 c0       	rjmp	.+78     	; 0x968 <__printf_core+0x2c8>
 91a:	bc 01       	movw	r22, r24
 91c:	8a 2f       	mov	r24, r26
 91e:	0e 94 8c 1c 	call	0x3918	; 0x3918 <atoi>
 922:	cb 57       	subi	r28, 0x7B	; 123
 924:	df 4f       	sbci	r29, 0xFF	; 255
 926:	99 83       	std	Y+1, r25	; 0x01
 928:	88 83       	st	Y, r24
 92a:	c5 58       	subi	r28, 0x85	; 133
 92c:	d0 40       	sbci	r29, 0x00	; 0
 92e:	c7 56       	subi	r28, 0x67	; 103
 930:	df 4f       	sbci	r29, 0xFF	; 255
 932:	88 81       	ld	r24, Y
 934:	99 81       	ldd	r25, Y+1	; 0x01
 936:	aa 81       	ldd	r26, Y+2	; 0x02
 938:	c9 59       	subi	r28, 0x99	; 153
 93a:	d0 40       	sbci	r29, 0x00	; 0
 93c:	fc 01       	movw	r30, r24
 93e:	5a 2f       	mov	r21, r26
 940:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
 944:	06 2e       	mov	r0, r22
 946:	00 0c       	add	r0, r0
 948:	77 0b       	sbc	r23, r23
 94a:	60 53       	subi	r22, 0x30	; 48
 94c:	71 09       	sbc	r23, r1
 94e:	6a 30       	cpi	r22, 0x0A	; 10
 950:	71 05       	cpc	r23, r1
 952:	50 f4       	brcc	.+20     	; 0x968 <__printf_core+0x2c8>
 954:	01 96       	adiw	r24, 0x01	; 1
 956:	a1 1d       	adc	r26, r1
 958:	c7 56       	subi	r28, 0x67	; 103
 95a:	df 4f       	sbci	r29, 0xFF	; 255
 95c:	88 83       	st	Y, r24
 95e:	99 83       	std	Y+1, r25	; 0x01
 960:	aa 83       	std	Y+2, r26	; 0x02
 962:	c9 59       	subi	r28, 0x99	; 153
 964:	d0 40       	sbci	r29, 0x00	; 0
 966:	e3 cf       	rjmp	.-58     	; 0x92e <__printf_core+0x28e>
 968:	cf 57       	subi	r28, 0x7F	; 127
 96a:	df 4f       	sbci	r29, 0xFF	; 255
 96c:	88 81       	ld	r24, Y
 96e:	99 81       	ldd	r25, Y+1	; 0x01
 970:	c1 58       	subi	r28, 0x81	; 129
 972:	d0 40       	sbci	r29, 0x00	; 0
 974:	80 ff       	sbrs	r24, 0
 976:	07 c0       	rjmp	.+14     	; 0x986 <__printf_core+0x2e6>
 978:	8d 7f       	andi	r24, 0xFD	; 253
 97a:	cf 57       	subi	r28, 0x7F	; 127
 97c:	df 4f       	sbci	r29, 0xFF	; 255
 97e:	99 83       	std	Y+1, r25	; 0x01
 980:	88 83       	st	Y, r24
 982:	c1 58       	subi	r28, 0x81	; 129
 984:	d0 40       	sbci	r29, 0x00	; 0
 986:	c7 56       	subi	r28, 0x67	; 103
 988:	df 4f       	sbci	r29, 0xFF	; 255
 98a:	88 81       	ld	r24, Y
 98c:	99 81       	ldd	r25, Y+1	; 0x01
 98e:	aa 81       	ldd	r26, Y+2	; 0x02
 990:	c9 59       	subi	r28, 0x99	; 153
 992:	d0 40       	sbci	r29, 0x00	; 0
 994:	fc 01       	movw	r30, r24
 996:	5a 2f       	mov	r21, r26
 998:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
 99c:	6e 32       	cpi	r22, 0x2E	; 46
 99e:	09 f0       	breq	.+2      	; 0x9a2 <__printf_core+0x302>
 9a0:	59 c0       	rjmp	.+178    	; 0xa54 <__printf_core+0x3b4>
 9a2:	cd 57       	subi	r28, 0x7D	; 125
 9a4:	df 4f       	sbci	r29, 0xFF	; 255
 9a6:	19 82       	std	Y+1, r1	; 0x01
 9a8:	18 82       	st	Y, r1
 9aa:	c3 58       	subi	r28, 0x83	; 131
 9ac:	d0 40       	sbci	r29, 0x00	; 0
 9ae:	9c 01       	movw	r18, r24
 9b0:	4a 2f       	mov	r20, r26
 9b2:	2f 5f       	subi	r18, 0xFF	; 255
 9b4:	3f 4f       	sbci	r19, 0xFF	; 255
 9b6:	4f 4f       	sbci	r20, 0xFF	; 255
 9b8:	c7 56       	subi	r28, 0x67	; 103
 9ba:	df 4f       	sbci	r29, 0xFF	; 255
 9bc:	28 83       	st	Y, r18
 9be:	39 83       	std	Y+1, r19	; 0x01
 9c0:	4a 83       	std	Y+2, r20	; 0x02
 9c2:	c9 59       	subi	r28, 0x99	; 153
 9c4:	d0 40       	sbci	r29, 0x00	; 0
 9c6:	f9 01       	movw	r30, r18
 9c8:	54 2f       	mov	r21, r20
 9ca:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
 9ce:	6a 32       	cpi	r22, 0x2A	; 42
 9d0:	d1 f4       	brne	.+52     	; 0xa06 <__printf_core+0x366>
 9d2:	02 96       	adiw	r24, 0x02	; 2
 9d4:	a1 1d       	adc	r26, r1
 9d6:	c7 56       	subi	r28, 0x67	; 103
 9d8:	df 4f       	sbci	r29, 0xFF	; 255
 9da:	88 83       	st	Y, r24
 9dc:	99 83       	std	Y+1, r25	; 0x01
 9de:	aa 83       	std	Y+2, r26	; 0x02
 9e0:	c9 59       	subi	r28, 0x99	; 153
 9e2:	d0 40       	sbci	r29, 0x00	; 0
 9e4:	d5 01       	movw	r26, r10
 9e6:	ed 91       	ld	r30, X+
 9e8:	fc 91       	ld	r31, X
 9ea:	11 97       	sbiw	r26, 0x01	; 1
 9ec:	cf 01       	movw	r24, r30
 9ee:	02 96       	adiw	r24, 0x02	; 2
 9f0:	8d 93       	st	X+, r24
 9f2:	9c 93       	st	X, r25
 9f4:	80 81       	ld	r24, Z
 9f6:	91 81       	ldd	r25, Z+1	; 0x01
 9f8:	cd 57       	subi	r28, 0x7D	; 125
 9fa:	df 4f       	sbci	r29, 0xFF	; 255
 9fc:	99 83       	std	Y+1, r25	; 0x01
 9fe:	88 83       	st	Y, r24
 a00:	c3 58       	subi	r28, 0x83	; 131
 a02:	d0 40       	sbci	r29, 0x00	; 0
 a04:	27 c0       	rjmp	.+78     	; 0xa54 <__printf_core+0x3b4>
 a06:	84 2f       	mov	r24, r20
 a08:	b9 01       	movw	r22, r18
 a0a:	0e 94 8c 1c 	call	0x3918	; 0x3918 <atoi>
 a0e:	cd 57       	subi	r28, 0x7D	; 125
 a10:	df 4f       	sbci	r29, 0xFF	; 255
 a12:	99 83       	std	Y+1, r25	; 0x01
 a14:	88 83       	st	Y, r24
 a16:	c3 58       	subi	r28, 0x83	; 131
 a18:	d0 40       	sbci	r29, 0x00	; 0
 a1a:	c7 56       	subi	r28, 0x67	; 103
 a1c:	df 4f       	sbci	r29, 0xFF	; 255
 a1e:	88 81       	ld	r24, Y
 a20:	99 81       	ldd	r25, Y+1	; 0x01
 a22:	aa 81       	ldd	r26, Y+2	; 0x02
 a24:	c9 59       	subi	r28, 0x99	; 153
 a26:	d0 40       	sbci	r29, 0x00	; 0
 a28:	fc 01       	movw	r30, r24
 a2a:	5a 2f       	mov	r21, r26
 a2c:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
 a30:	06 2e       	mov	r0, r22
 a32:	00 0c       	add	r0, r0
 a34:	77 0b       	sbc	r23, r23
 a36:	60 53       	subi	r22, 0x30	; 48
 a38:	71 09       	sbc	r23, r1
 a3a:	6a 30       	cpi	r22, 0x0A	; 10
 a3c:	71 05       	cpc	r23, r1
 a3e:	50 f4       	brcc	.+20     	; 0xa54 <__printf_core+0x3b4>
 a40:	01 96       	adiw	r24, 0x01	; 1
 a42:	a1 1d       	adc	r26, r1
 a44:	c7 56       	subi	r28, 0x67	; 103
 a46:	df 4f       	sbci	r29, 0xFF	; 255
 a48:	88 83       	st	Y, r24
 a4a:	99 83       	std	Y+1, r25	; 0x01
 a4c:	aa 83       	std	Y+2, r26	; 0x02
 a4e:	c9 59       	subi	r28, 0x99	; 153
 a50:	d0 40       	sbci	r29, 0x00	; 0
 a52:	e3 cf       	rjmp	.-58     	; 0xa1a <__printf_core+0x37a>
 a54:	ce 01       	movw	r24, r28
 a56:	87 56       	subi	r24, 0x67	; 103
 a58:	9f 4f       	sbci	r25, 0xFF	; 255
 a5a:	0e 94 ab 1a 	call	0x3556	; 0x3556 <__fmt_state>
 a5e:	18 2f       	mov	r17, r24
 a60:	c7 56       	subi	r28, 0x67	; 103
 a62:	df 4f       	sbci	r29, 0xFF	; 255
 a64:	98 81       	ld	r25, Y
 a66:	c9 59       	subi	r28, 0x99	; 153
 a68:	d0 40       	sbci	r29, 0x00	; 0
 a6a:	c6 56       	subi	r28, 0x66	; 102
 a6c:	df 4f       	sbci	r29, 0xFF	; 255
 a6e:	88 81       	ld	r24, Y
 a70:	ca 59       	subi	r28, 0x9A	; 154
 a72:	d0 40       	sbci	r29, 0x00	; 0
 a74:	c5 56       	subi	r28, 0x65	; 101
 a76:	df 4f       	sbci	r29, 0xFF	; 255
 a78:	58 81       	ld	r21, Y
 a7a:	cb 59       	subi	r28, 0x9B	; 155
 a7c:	d0 40       	sbci	r29, 0x00	; 0
 a7e:	e9 2f       	mov	r30, r25
 a80:	f8 2f       	mov	r31, r24
 a82:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
 a86:	86 2f       	mov	r24, r22
 a88:	66 0f       	add	r22, r22
 a8a:	99 0b       	sbc	r25, r25
 a8c:	0e 94 de 22 	call	0x45bc	; 0x45bc <tolower>
 a90:	89 36       	cpi	r24, 0x69	; 105
 a92:	91 05       	cpc	r25, r1
 a94:	09 f4       	brne	.+2      	; 0xa98 <__printf_core+0x3f8>
 a96:	5b c0       	rjmp	.+182    	; 0xb4e <__printf_core+0x4ae>
 a98:	b4 f4       	brge	.+44     	; 0xac6 <__printf_core+0x426>
 a9a:	83 36       	cpi	r24, 0x63	; 99
 a9c:	91 05       	cpc	r25, r1
 a9e:	09 f4       	brne	.+2      	; 0xaa2 <__printf_core+0x402>
 aa0:	69 c1       	rjmp	.+722    	; 0xd74 <__printf_core+0x6d4>
 aa2:	44 f4       	brge	.+16     	; 0xab4 <__printf_core+0x414>
 aa4:	85 32       	cpi	r24, 0x25	; 37
 aa6:	91 05       	cpc	r25, r1
 aa8:	09 f4       	brne	.+2      	; 0xaac <__printf_core+0x40c>
 aaa:	a4 c1       	rjmp	.+840    	; 0xdf4 <__printf_core+0x754>
 aac:	81 36       	cpi	r24, 0x61	; 97
 aae:	91 05       	cpc	r25, r1
 ab0:	29 f1       	breq	.+74     	; 0xafc <__printf_core+0x45c>
 ab2:	b6 c1       	rjmp	.+876    	; 0xe20 <__printf_core+0x780>
 ab4:	84 36       	cpi	r24, 0x64	; 100
 ab6:	91 05       	cpc	r25, r1
 ab8:	09 f4       	brne	.+2      	; 0xabc <__printf_core+0x41c>
 aba:	49 c0       	rjmp	.+146    	; 0xb4e <__printf_core+0x4ae>
 abc:	88 36       	cpi	r24, 0x68	; 104
 abe:	91 05       	cpc	r25, r1
 ac0:	0c f4       	brge	.+2      	; 0xac4 <__printf_core+0x424>
 ac2:	2f c1       	rjmp	.+606    	; 0xd22 <__printf_core+0x682>
 ac4:	ad c1       	rjmp	.+858    	; 0xe20 <__printf_core+0x780>
 ac6:	80 37       	cpi	r24, 0x70	; 112
 ac8:	91 05       	cpc	r25, r1
 aca:	09 f4       	brne	.+2      	; 0xace <__printf_core+0x42e>
 acc:	cd c0       	rjmp	.+410    	; 0xc68 <__printf_core+0x5c8>
 ace:	4c f4       	brge	.+18     	; 0xae2 <__printf_core+0x442>
 ad0:	8e 36       	cpi	r24, 0x6E	; 110
 ad2:	91 05       	cpc	r25, r1
 ad4:	09 f4       	brne	.+2      	; 0xad8 <__printf_core+0x438>
 ad6:	1b c1       	rjmp	.+566    	; 0xd0e <__printf_core+0x66e>
 ad8:	8f 36       	cpi	r24, 0x6F	; 111
 ada:	91 05       	cpc	r25, r1
 adc:	09 f4       	brne	.+2      	; 0xae0 <__printf_core+0x440>
 ade:	7d c0       	rjmp	.+250    	; 0xbda <__printf_core+0x53a>
 ae0:	9f c1       	rjmp	.+830    	; 0xe20 <__printf_core+0x780>
 ae2:	85 37       	cpi	r24, 0x75	; 117
 ae4:	91 05       	cpc	r25, r1
 ae6:	09 f4       	brne	.+2      	; 0xaea <__printf_core+0x44a>
 ae8:	55 c0       	rjmp	.+170    	; 0xb94 <__printf_core+0x4f4>
 aea:	88 37       	cpi	r24, 0x78	; 120
 aec:	91 05       	cpc	r25, r1
 aee:	09 f4       	brne	.+2      	; 0xaf2 <__printf_core+0x452>
 af0:	97 c0       	rjmp	.+302    	; 0xc20 <__printf_core+0x580>
 af2:	83 37       	cpi	r24, 0x73	; 115
 af4:	91 05       	cpc	r25, r1
 af6:	09 f0       	breq	.+2      	; 0xafa <__printf_core+0x45a>
 af8:	93 c1       	rjmp	.+806    	; 0xe20 <__printf_core+0x780>
 afa:	5b c1       	rjmp	.+694    	; 0xdb2 <__printf_core+0x712>
 afc:	61 2f       	mov	r22, r17
 afe:	70 e0       	ldi	r23, 0x00	; 0
 b00:	a5 01       	movw	r20, r10
 b02:	c6 01       	movw	r24, r12
 b04:	0e 94 95 20 	call	0x412a	; 0x412a <__pop_float>
 b08:	89 2b       	or	r24, r25
 b0a:	09 f4       	brne	.+2      	; 0xb0e <__printf_core+0x46e>
 b0c:	ba c1       	rjmp	.+884    	; 0xe82 <__printf_core+0x7e2>
 b0e:	c7 56       	subi	r28, 0x67	; 103
 b10:	df 4f       	sbci	r29, 0xFF	; 255
 b12:	88 81       	ld	r24, Y
 b14:	99 81       	ldd	r25, Y+1	; 0x01
 b16:	aa 81       	ldd	r26, Y+2	; 0x02
 b18:	c9 59       	subi	r28, 0x99	; 153
 b1a:	d0 40       	sbci	r29, 0x00	; 0
 b1c:	9c 01       	movw	r18, r24
 b1e:	4a 2f       	mov	r20, r26
 b20:	2f 5f       	subi	r18, 0xFF	; 255
 b22:	3f 4f       	sbci	r19, 0xFF	; 255
 b24:	4f 4f       	sbci	r20, 0xFF	; 255
 b26:	c7 56       	subi	r28, 0x67	; 103
 b28:	df 4f       	sbci	r29, 0xFF	; 255
 b2a:	28 83       	st	Y, r18
 b2c:	39 83       	std	Y+1, r19	; 0x01
 b2e:	4a 83       	std	Y+2, r20	; 0x02
 b30:	c9 59       	subi	r28, 0x99	; 153
 b32:	d0 40       	sbci	r29, 0x00	; 0
 b34:	fc 01       	movw	r30, r24
 b36:	5a 2f       	mov	r21, r26
 b38:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
 b3c:	26 2f       	mov	r18, r22
 b3e:	a6 01       	movw	r20, r12
 b40:	be 01       	movw	r22, r28
 b42:	6f 57       	subi	r22, 0x7F	; 127
 b44:	7f 4f       	sbci	r23, 0xFF	; 255
 b46:	c4 01       	movw	r24, r8
 b48:	0e 94 c6 0a 	call	0x158c	; 0x158c <__fmt_a>
 b4c:	97 c1       	rjmp	.+814    	; 0xe7c <__printf_core+0x7dc>
 b4e:	61 2f       	mov	r22, r17
 b50:	70 e0       	ldi	r23, 0x00	; 0
 b52:	95 01       	movw	r18, r10
 b54:	41 e0       	ldi	r20, 0x01	; 1
 b56:	50 e0       	ldi	r21, 0x00	; 0
 b58:	c6 01       	movw	r24, r12
 b5a:	0e 94 fa 11 	call	0x23f4	; 0x23f4 <__pop_int>
 b5e:	89 2b       	or	r24, r25
 b60:	09 f4       	brne	.+2      	; 0xb64 <__printf_core+0x4c4>
 b62:	8f c1       	rjmp	.+798    	; 0xe82 <__printf_core+0x7e2>
 b64:	c7 56       	subi	r28, 0x67	; 103
 b66:	df 4f       	sbci	r29, 0xFF	; 255
 b68:	88 81       	ld	r24, Y
 b6a:	99 81       	ldd	r25, Y+1	; 0x01
 b6c:	aa 81       	ldd	r26, Y+2	; 0x02
 b6e:	c9 59       	subi	r28, 0x99	; 153
 b70:	d0 40       	sbci	r29, 0x00	; 0
 b72:	01 96       	adiw	r24, 0x01	; 1
 b74:	a1 1d       	adc	r26, r1
 b76:	c7 56       	subi	r28, 0x67	; 103
 b78:	df 4f       	sbci	r29, 0xFF	; 255
 b7a:	88 83       	st	Y, r24
 b7c:	99 83       	std	Y+1, r25	; 0x01
 b7e:	aa 83       	std	Y+2, r26	; 0x02
 b80:	c9 59       	subi	r28, 0x99	; 153
 b82:	d0 40       	sbci	r29, 0x00	; 0
 b84:	a6 01       	movw	r20, r12
 b86:	be 01       	movw	r22, r28
 b88:	6f 57       	subi	r22, 0x7F	; 127
 b8a:	7f 4f       	sbci	r23, 0xFF	; 255
 b8c:	c4 01       	movw	r24, r8
 b8e:	0e 94 3b 11 	call	0x2276	; 0x2276 <__fmt_d>
 b92:	74 c1       	rjmp	.+744    	; 0xe7c <__printf_core+0x7dc>
 b94:	61 2f       	mov	r22, r17
 b96:	70 e0       	ldi	r23, 0x00	; 0
 b98:	95 01       	movw	r18, r10
 b9a:	40 e0       	ldi	r20, 0x00	; 0
 b9c:	50 e0       	ldi	r21, 0x00	; 0
 b9e:	c6 01       	movw	r24, r12
 ba0:	0e 94 fa 11 	call	0x23f4	; 0x23f4 <__pop_int>
 ba4:	89 2b       	or	r24, r25
 ba6:	09 f4       	brne	.+2      	; 0xbaa <__printf_core+0x50a>
 ba8:	6c c1       	rjmp	.+728    	; 0xe82 <__printf_core+0x7e2>
 baa:	c7 56       	subi	r28, 0x67	; 103
 bac:	df 4f       	sbci	r29, 0xFF	; 255
 bae:	88 81       	ld	r24, Y
 bb0:	99 81       	ldd	r25, Y+1	; 0x01
 bb2:	aa 81       	ldd	r26, Y+2	; 0x02
 bb4:	c9 59       	subi	r28, 0x99	; 153
 bb6:	d0 40       	sbci	r29, 0x00	; 0
 bb8:	01 96       	adiw	r24, 0x01	; 1
 bba:	a1 1d       	adc	r26, r1
 bbc:	c7 56       	subi	r28, 0x67	; 103
 bbe:	df 4f       	sbci	r29, 0xFF	; 255
 bc0:	88 83       	st	Y, r24
 bc2:	99 83       	std	Y+1, r25	; 0x01
 bc4:	aa 83       	std	Y+2, r26	; 0x02
 bc6:	c9 59       	subi	r28, 0x99	; 153
 bc8:	d0 40       	sbci	r29, 0x00	; 0
 bca:	a6 01       	movw	r20, r12
 bcc:	be 01       	movw	r22, r28
 bce:	6f 57       	subi	r22, 0x7F	; 127
 bd0:	7f 4f       	sbci	r23, 0xFF	; 255
 bd2:	c4 01       	movw	r24, r8
 bd4:	0e 94 55 19 	call	0x32aa	; 0x32aa <__fmt_u>
 bd8:	51 c1       	rjmp	.+674    	; 0xe7c <__printf_core+0x7dc>
 bda:	61 2f       	mov	r22, r17
 bdc:	70 e0       	ldi	r23, 0x00	; 0
 bde:	95 01       	movw	r18, r10
 be0:	40 e0       	ldi	r20, 0x00	; 0
 be2:	50 e0       	ldi	r21, 0x00	; 0
 be4:	c6 01       	movw	r24, r12
 be6:	0e 94 fa 11 	call	0x23f4	; 0x23f4 <__pop_int>
 bea:	89 2b       	or	r24, r25
 bec:	09 f4       	brne	.+2      	; 0xbf0 <__printf_core+0x550>
 bee:	49 c1       	rjmp	.+658    	; 0xe82 <__printf_core+0x7e2>
 bf0:	c7 56       	subi	r28, 0x67	; 103
 bf2:	df 4f       	sbci	r29, 0xFF	; 255
 bf4:	88 81       	ld	r24, Y
 bf6:	99 81       	ldd	r25, Y+1	; 0x01
 bf8:	aa 81       	ldd	r26, Y+2	; 0x02
 bfa:	c9 59       	subi	r28, 0x99	; 153
 bfc:	d0 40       	sbci	r29, 0x00	; 0
 bfe:	01 96       	adiw	r24, 0x01	; 1
 c00:	a1 1d       	adc	r26, r1
 c02:	c7 56       	subi	r28, 0x67	; 103
 c04:	df 4f       	sbci	r29, 0xFF	; 255
 c06:	88 83       	st	Y, r24
 c08:	99 83       	std	Y+1, r25	; 0x01
 c0a:	aa 83       	std	Y+2, r26	; 0x02
 c0c:	c9 59       	subi	r28, 0x99	; 153
 c0e:	d0 40       	sbci	r29, 0x00	; 0
 c10:	a6 01       	movw	r20, r12
 c12:	be 01       	movw	r22, r28
 c14:	6f 57       	subi	r22, 0x7F	; 127
 c16:	7f 4f       	sbci	r23, 0xFF	; 255
 c18:	c4 01       	movw	r24, r8
 c1a:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__fmt_o>
 c1e:	2e c1       	rjmp	.+604    	; 0xe7c <__printf_core+0x7dc>
 c20:	61 2f       	mov	r22, r17
 c22:	70 e0       	ldi	r23, 0x00	; 0
 c24:	95 01       	movw	r18, r10
 c26:	40 e0       	ldi	r20, 0x00	; 0
 c28:	50 e0       	ldi	r21, 0x00	; 0
 c2a:	c6 01       	movw	r24, r12
 c2c:	0e 94 fa 11 	call	0x23f4	; 0x23f4 <__pop_int>
 c30:	89 2b       	or	r24, r25
 c32:	09 f4       	brne	.+2      	; 0xc36 <__printf_core+0x596>
 c34:	26 c1       	rjmp	.+588    	; 0xe82 <__printf_core+0x7e2>
 c36:	c7 56       	subi	r28, 0x67	; 103
 c38:	df 4f       	sbci	r29, 0xFF	; 255
 c3a:	88 81       	ld	r24, Y
 c3c:	99 81       	ldd	r25, Y+1	; 0x01
 c3e:	aa 81       	ldd	r26, Y+2	; 0x02
 c40:	c9 59       	subi	r28, 0x99	; 153
 c42:	d0 40       	sbci	r29, 0x00	; 0
 c44:	9c 01       	movw	r18, r24
 c46:	4a 2f       	mov	r20, r26
 c48:	2f 5f       	subi	r18, 0xFF	; 255
 c4a:	3f 4f       	sbci	r19, 0xFF	; 255
 c4c:	4f 4f       	sbci	r20, 0xFF	; 255
 c4e:	c7 56       	subi	r28, 0x67	; 103
 c50:	df 4f       	sbci	r29, 0xFF	; 255
 c52:	28 83       	st	Y, r18
 c54:	39 83       	std	Y+1, r19	; 0x01
 c56:	4a 83       	std	Y+2, r20	; 0x02
 c58:	c9 59       	subi	r28, 0x99	; 153
 c5a:	d0 40       	sbci	r29, 0x00	; 0
 c5c:	fc 01       	movw	r30, r24
 c5e:	5a 2f       	mov	r21, r26
 c60:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
 c64:	26 2f       	mov	r18, r22
 c66:	4b c0       	rjmp	.+150    	; 0xcfe <__printf_core+0x65e>
 c68:	95 01       	movw	r18, r10
 c6a:	40 e0       	ldi	r20, 0x00	; 0
 c6c:	50 e0       	ldi	r21, 0x00	; 0
 c6e:	60 ef       	ldi	r22, 0xF0	; 240
 c70:	70 e0       	ldi	r23, 0x00	; 0
 c72:	c6 01       	movw	r24, r12
 c74:	0e 94 fa 11 	call	0x23f4	; 0x23f4 <__pop_int>
 c78:	89 2b       	or	r24, r25
 c7a:	09 f4       	brne	.+2      	; 0xc7e <__printf_core+0x5de>
 c7c:	02 c1       	rjmp	.+516    	; 0xe82 <__printf_core+0x7e2>
 c7e:	c7 56       	subi	r28, 0x67	; 103
 c80:	df 4f       	sbci	r29, 0xFF	; 255
 c82:	88 81       	ld	r24, Y
 c84:	99 81       	ldd	r25, Y+1	; 0x01
 c86:	aa 81       	ldd	r26, Y+2	; 0x02
 c88:	c9 59       	subi	r28, 0x99	; 153
 c8a:	d0 40       	sbci	r29, 0x00	; 0
 c8c:	01 96       	adiw	r24, 0x01	; 1
 c8e:	a1 1d       	adc	r26, r1
 c90:	c7 56       	subi	r28, 0x67	; 103
 c92:	df 4f       	sbci	r29, 0xFF	; 255
 c94:	88 83       	st	Y, r24
 c96:	99 83       	std	Y+1, r25	; 0x01
 c98:	aa 83       	std	Y+2, r26	; 0x02
 c9a:	c9 59       	subi	r28, 0x99	; 153
 c9c:	d0 40       	sbci	r29, 0x00	; 0
 c9e:	86 e0       	ldi	r24, 0x06	; 6
 ca0:	2a e9       	ldi	r18, 0x9A	; 154
 ca2:	36 e0       	ldi	r19, 0x06	; 6
 ca4:	40 e0       	ldi	r20, 0x00	; 0
 ca6:	f9 01       	movw	r30, r18
 ca8:	de 01       	movw	r26, r28
 caa:	ad 56       	subi	r26, 0x6D	; 109
 cac:	bf 4f       	sbci	r27, 0xFF	; 255
 cae:	74 2f       	mov	r23, r20
 cb0:	0e 94 5e 22 	call	0x44bc	; 0x44bc <__movmemx_qi>
 cb4:	d6 01       	movw	r26, r12
 cb6:	2c 91       	ld	r18, X
 cb8:	11 96       	adiw	r26, 0x01	; 1
 cba:	3c 91       	ld	r19, X
 cbc:	11 97       	sbiw	r26, 0x01	; 1
 cbe:	12 96       	adiw	r26, 0x02	; 2
 cc0:	4c 91       	ld	r20, X
 cc2:	12 97       	sbiw	r26, 0x02	; 2
 cc4:	13 96       	adiw	r26, 0x03	; 3
 cc6:	5c 91       	ld	r21, X
 cc8:	13 97       	sbiw	r26, 0x03	; 3
 cca:	14 96       	adiw	r26, 0x04	; 4
 ccc:	6c 91       	ld	r22, X
 cce:	14 97       	sbiw	r26, 0x04	; 4
 cd0:	15 96       	adiw	r26, 0x05	; 5
 cd2:	7c 91       	ld	r23, X
 cd4:	15 97       	sbiw	r26, 0x05	; 5
 cd6:	16 96       	adiw	r26, 0x06	; 6
 cd8:	8c 91       	ld	r24, X
 cda:	16 97       	sbiw	r26, 0x06	; 6
 cdc:	17 96       	adiw	r26, 0x07	; 7
 cde:	9c 91       	ld	r25, X
 ce0:	a0 e0       	ldi	r26, 0x00	; 0
 ce2:	0e 94 9e 22 	call	0x453c	; 0x453c <__cmpdi2_s8>
 ce6:	51 f4       	brne	.+20     	; 0xcfc <__printf_core+0x65c>
 ce8:	00 e0       	ldi	r16, 0x00	; 0
 cea:	10 e0       	ldi	r17, 0x00	; 0
 cec:	cf 55       	subi	r28, 0x5F	; 95
 cee:	df 4f       	sbci	r29, 0xFF	; 255
 cf0:	28 81       	ld	r18, Y
 cf2:	39 81       	ldd	r19, Y+1	; 0x01
 cf4:	4a 81       	ldd	r20, Y+2	; 0x02
 cf6:	c1 5a       	subi	r28, 0xA1	; 161
 cf8:	d0 40       	sbci	r29, 0x00	; 0
 cfa:	ba c0       	rjmp	.+372    	; 0xe70 <__printf_core+0x7d0>
 cfc:	28 e7       	ldi	r18, 0x78	; 120
 cfe:	a6 01       	movw	r20, r12
 d00:	be 01       	movw	r22, r28
 d02:	6f 57       	subi	r22, 0x7F	; 127
 d04:	7f 4f       	sbci	r23, 0xFF	; 255
 d06:	c4 01       	movw	r24, r8
 d08:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__fmt_x>
 d0c:	b7 c0       	rjmp	.+366    	; 0xe7c <__printf_core+0x7dc>
 d0e:	61 2f       	mov	r22, r17
 d10:	70 e0       	ldi	r23, 0x00	; 0
 d12:	95 01       	movw	r18, r10
 d14:	a1 01       	movw	r20, r2
 d16:	4e 0d       	add	r20, r14
 d18:	5f 1d       	adc	r21, r15
 d1a:	c6 01       	movw	r24, r12
 d1c:	0e 94 2d 16 	call	0x2c5a	; 0x2c5a <__pop_ptr>
 d20:	b0 c0       	rjmp	.+352    	; 0xe82 <__printf_core+0x7e2>
 d22:	61 2f       	mov	r22, r17
 d24:	70 e0       	ldi	r23, 0x00	; 0
 d26:	a5 01       	movw	r20, r10
 d28:	c6 01       	movw	r24, r12
 d2a:	0e 94 95 20 	call	0x412a	; 0x412a <__pop_float>
 d2e:	89 2b       	or	r24, r25
 d30:	09 f4       	brne	.+2      	; 0xd34 <__printf_core+0x694>
 d32:	a7 c0       	rjmp	.+334    	; 0xe82 <__printf_core+0x7e2>
 d34:	c7 56       	subi	r28, 0x67	; 103
 d36:	df 4f       	sbci	r29, 0xFF	; 255
 d38:	88 81       	ld	r24, Y
 d3a:	99 81       	ldd	r25, Y+1	; 0x01
 d3c:	aa 81       	ldd	r26, Y+2	; 0x02
 d3e:	c9 59       	subi	r28, 0x99	; 153
 d40:	d0 40       	sbci	r29, 0x00	; 0
 d42:	9c 01       	movw	r18, r24
 d44:	4a 2f       	mov	r20, r26
 d46:	2f 5f       	subi	r18, 0xFF	; 255
 d48:	3f 4f       	sbci	r19, 0xFF	; 255
 d4a:	4f 4f       	sbci	r20, 0xFF	; 255
 d4c:	c7 56       	subi	r28, 0x67	; 103
 d4e:	df 4f       	sbci	r29, 0xFF	; 255
 d50:	28 83       	st	Y, r18
 d52:	39 83       	std	Y+1, r19	; 0x01
 d54:	4a 83       	std	Y+2, r20	; 0x02
 d56:	c9 59       	subi	r28, 0x99	; 153
 d58:	d0 40       	sbci	r29, 0x00	; 0
 d5a:	fc 01       	movw	r30, r24
 d5c:	5a 2f       	mov	r21, r26
 d5e:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
 d62:	26 2f       	mov	r18, r22
 d64:	a6 01       	movw	r20, r12
 d66:	be 01       	movw	r22, r28
 d68:	6f 57       	subi	r22, 0x7F	; 127
 d6a:	7f 4f       	sbci	r23, 0xFF	; 255
 d6c:	c4 01       	movw	r24, r8
 d6e:	0e 94 69 07 	call	0xed2	; 0xed2 <__fmt_fp>
 d72:	84 c0       	rjmp	.+264    	; 0xe7c <__printf_core+0x7dc>
 d74:	10 38       	cpi	r17, 0x80	; 128
 d76:	09 f0       	breq	.+2      	; 0xd7a <__printf_core+0x6da>
 d78:	84 c0       	rjmp	.+264    	; 0xe82 <__printf_core+0x7e2>
 d7a:	c7 56       	subi	r28, 0x67	; 103
 d7c:	df 4f       	sbci	r29, 0xFF	; 255
 d7e:	88 81       	ld	r24, Y
 d80:	99 81       	ldd	r25, Y+1	; 0x01
 d82:	aa 81       	ldd	r26, Y+2	; 0x02
 d84:	c9 59       	subi	r28, 0x99	; 153
 d86:	d0 40       	sbci	r29, 0x00	; 0
 d88:	01 96       	adiw	r24, 0x01	; 1
 d8a:	a1 1d       	adc	r26, r1
 d8c:	c7 56       	subi	r28, 0x67	; 103
 d8e:	df 4f       	sbci	r29, 0xFF	; 255
 d90:	88 83       	st	Y, r24
 d92:	99 83       	std	Y+1, r25	; 0x01
 d94:	aa 83       	std	Y+2, r26	; 0x02
 d96:	c9 59       	subi	r28, 0x99	; 153
 d98:	d0 40       	sbci	r29, 0x00	; 0
 d9a:	d5 01       	movw	r26, r10
 d9c:	ed 91       	ld	r30, X+
 d9e:	fc 91       	ld	r31, X
 da0:	11 97       	sbiw	r26, 0x01	; 1
 da2:	cf 01       	movw	r24, r30
 da4:	02 96       	adiw	r24, 0x02	; 2
 da6:	8d 93       	st	X+, r24
 da8:	9c 93       	st	X, r25
 daa:	80 81       	ld	r24, Z
 dac:	f6 01       	movw	r30, r12
 dae:	80 83       	st	Z, r24
 db0:	5b c0       	rjmp	.+182    	; 0xe68 <__printf_core+0x7c8>
 db2:	10 38       	cpi	r17, 0x80	; 128
 db4:	09 f0       	breq	.+2      	; 0xdb8 <__printf_core+0x718>
 db6:	65 c0       	rjmp	.+202    	; 0xe82 <__printf_core+0x7e2>
 db8:	c7 56       	subi	r28, 0x67	; 103
 dba:	df 4f       	sbci	r29, 0xFF	; 255
 dbc:	88 81       	ld	r24, Y
 dbe:	99 81       	ldd	r25, Y+1	; 0x01
 dc0:	aa 81       	ldd	r26, Y+2	; 0x02
 dc2:	c9 59       	subi	r28, 0x99	; 153
 dc4:	d0 40       	sbci	r29, 0x00	; 0
 dc6:	01 96       	adiw	r24, 0x01	; 1
 dc8:	a1 1d       	adc	r26, r1
 dca:	c7 56       	subi	r28, 0x67	; 103
 dcc:	df 4f       	sbci	r29, 0xFF	; 255
 dce:	88 83       	st	Y, r24
 dd0:	99 83       	std	Y+1, r25	; 0x01
 dd2:	aa 83       	std	Y+2, r26	; 0x02
 dd4:	c9 59       	subi	r28, 0x99	; 153
 dd6:	d0 40       	sbci	r29, 0x00	; 0
 dd8:	d5 01       	movw	r26, r10
 dda:	ed 91       	ld	r30, X+
 ddc:	fc 91       	ld	r31, X
 dde:	11 97       	sbiw	r26, 0x01	; 1
 de0:	cf 01       	movw	r24, r30
 de2:	03 96       	adiw	r24, 0x03	; 3
 de4:	8d 93       	st	X+, r24
 de6:	9c 93       	st	X, r25
 de8:	20 81       	ld	r18, Z
 dea:	31 81       	ldd	r19, Z+1	; 0x01
 dec:	42 81       	ldd	r20, Z+2	; 0x02
 dee:	00 e0       	ldi	r16, 0x00	; 0
 df0:	10 e0       	ldi	r17, 0x00	; 0
 df2:	3e c0       	rjmp	.+124    	; 0xe70 <__printf_core+0x7d0>
 df4:	10 38       	cpi	r17, 0x80	; 128
 df6:	09 f0       	breq	.+2      	; 0xdfa <__printf_core+0x75a>
 df8:	44 c0       	rjmp	.+136    	; 0xe82 <__printf_core+0x7e2>
 dfa:	c7 56       	subi	r28, 0x67	; 103
 dfc:	df 4f       	sbci	r29, 0xFF	; 255
 dfe:	88 81       	ld	r24, Y
 e00:	99 81       	ldd	r25, Y+1	; 0x01
 e02:	aa 81       	ldd	r26, Y+2	; 0x02
 e04:	c9 59       	subi	r28, 0x99	; 153
 e06:	d0 40       	sbci	r29, 0x00	; 0
 e08:	01 96       	adiw	r24, 0x01	; 1
 e0a:	a1 1d       	adc	r26, r1
 e0c:	c7 56       	subi	r28, 0x67	; 103
 e0e:	df 4f       	sbci	r29, 0xFF	; 255
 e10:	88 83       	st	Y, r24
 e12:	99 83       	std	Y+1, r25	; 0x01
 e14:	aa 83       	std	Y+2, r26	; 0x02
 e16:	c9 59       	subi	r28, 0x99	; 153
 e18:	d0 40       	sbci	r29, 0x00	; 0
 e1a:	f6 01       	movw	r30, r12
 e1c:	70 82       	st	Z, r7
 e1e:	24 c0       	rjmp	.+72     	; 0xe68 <__printf_core+0x7c8>
 e20:	d6 01       	movw	r26, r12
 e22:	7c 92       	st	X, r7
 e24:	c2 56       	subi	r28, 0x62	; 98
 e26:	df 4f       	sbci	r29, 0xFF	; 255
 e28:	28 81       	ld	r18, Y
 e2a:	39 81       	ldd	r19, Y+1	; 0x01
 e2c:	4a 81       	ldd	r20, Y+2	; 0x02
 e2e:	ce 59       	subi	r28, 0x9E	; 158
 e30:	d0 40       	sbci	r29, 0x00	; 0
 e32:	c7 56       	subi	r28, 0x67	; 103
 e34:	df 4f       	sbci	r29, 0xFF	; 255
 e36:	28 83       	st	Y, r18
 e38:	39 83       	std	Y+1, r19	; 0x01
 e3a:	4a 83       	std	Y+2, r20	; 0x02
 e3c:	c9 59       	subi	r28, 0x99	; 153
 e3e:	d0 40       	sbci	r29, 0x00	; 0
 e40:	cf 57       	subi	r28, 0x7F	; 127
 e42:	df 4f       	sbci	r29, 0xFF	; 255
 e44:	19 82       	std	Y+1, r1	; 0x01
 e46:	18 82       	st	Y, r1
 e48:	c1 58       	subi	r28, 0x81	; 129
 e4a:	d0 40       	sbci	r29, 0x00	; 0
 e4c:	cb 57       	subi	r28, 0x7B	; 123
 e4e:	df 4f       	sbci	r29, 0xFF	; 255
 e50:	19 82       	std	Y+1, r1	; 0x01
 e52:	18 82       	st	Y, r1
 e54:	c5 58       	subi	r28, 0x85	; 133
 e56:	d0 40       	sbci	r29, 0x00	; 0
 e58:	8f ef       	ldi	r24, 0xFF	; 255
 e5a:	9f ef       	ldi	r25, 0xFF	; 255
 e5c:	cd 57       	subi	r28, 0x7D	; 125
 e5e:	df 4f       	sbci	r29, 0xFF	; 255
 e60:	99 83       	std	Y+1, r25	; 0x01
 e62:	88 83       	st	Y, r24
 e64:	c3 58       	subi	r28, 0x83	; 131
 e66:	d0 40       	sbci	r29, 0x00	; 0
 e68:	01 e0       	ldi	r16, 0x01	; 1
 e6a:	10 e0       	ldi	r17, 0x00	; 0
 e6c:	46 2d       	mov	r20, r6
 e6e:	92 01       	movw	r18, r4
 e70:	be 01       	movw	r22, r28
 e72:	6f 57       	subi	r22, 0x7F	; 127
 e74:	7f 4f       	sbci	r23, 0xFF	; 255
 e76:	c4 01       	movw	r24, r8
 e78:	0e 94 d4 17 	call	0x2fa8	; 0x2fa8 <__fmt_s>
 e7c:	8e 0d       	add	r24, r14
 e7e:	9f 1d       	adc	r25, r15
 e80:	11 c0       	rjmp	.+34     	; 0xea4 <__printf_core+0x804>
 e82:	c7 56       	subi	r28, 0x67	; 103
 e84:	df 4f       	sbci	r29, 0xFF	; 255
 e86:	88 81       	ld	r24, Y
 e88:	99 81       	ldd	r25, Y+1	; 0x01
 e8a:	aa 81       	ldd	r26, Y+2	; 0x02
 e8c:	c9 59       	subi	r28, 0x99	; 153
 e8e:	d0 40       	sbci	r29, 0x00	; 0
 e90:	01 96       	adiw	r24, 0x01	; 1
 e92:	a1 1d       	adc	r26, r1
 e94:	c7 56       	subi	r28, 0x67	; 103
 e96:	df 4f       	sbci	r29, 0xFF	; 255
 e98:	88 83       	st	Y, r24
 e9a:	99 83       	std	Y+1, r25	; 0x01
 e9c:	aa 83       	std	Y+2, r26	; 0x02
 e9e:	c9 59       	subi	r28, 0x99	; 153
 ea0:	d0 40       	sbci	r29, 0x00	; 0
 ea2:	c7 01       	movw	r24, r14
 ea4:	71 01       	movw	r14, r2
 ea6:	e8 0e       	add	r14, r24
 ea8:	f9 1e       	adc	r15, r25
 eaa:	e2 14       	cp	r14, r2
 eac:	f3 04       	cpc	r15, r3
 eae:	4c f4       	brge	.+18     	; 0xec2 <__printf_core+0x822>
 eb0:	8f e4       	ldi	r24, 0x4F	; 79
 eb2:	90 e0       	ldi	r25, 0x00	; 0
 eb4:	90 93 2d 12 	sts	0x122D, r25	; 0x80122d <__errno_val+0x1>
 eb8:	80 93 2c 12 	sts	0x122C, r24	; 0x80122c <__errno_val>
 ebc:	8f ef       	ldi	r24, 0xFF	; 255
 ebe:	9f ef       	ldi	r25, 0xFF	; 255
 ec0:	03 c0       	rjmp	.+6      	; 0xec8 <__printf_core+0x828>
 ec2:	17 01       	movw	r2, r14
 ec4:	19 cc       	rjmp	.-1998   	; 0x6f8 <__printf_core+0x58>
 ec6:	c1 01       	movw	r24, r2
 ec8:	cd 55       	subi	r28, 0x5D	; 93
 eca:	df 4f       	sbci	r29, 0xFF	; 255
 ecc:	e2 e1       	ldi	r30, 0x12	; 18
 ece:	0c 94 28 21 	jmp	0x4250	; 0x4250 <__epilogue_restores__>

Disassembly of section .text.fputc:

00003886 <fputc>:
    3886:	0f 93       	push	r16
    3888:	1f 93       	push	r17
    388a:	cf 93       	push	r28
    388c:	df 93       	push	r29
    388e:	db 01       	movw	r26, r22
    3890:	2d 91       	ld	r18, X+
    3892:	3c 91       	ld	r19, X
    3894:	11 97       	sbiw	r26, 0x01	; 1
    3896:	30 ff       	sbrs	r19, 0
    3898:	25 c0       	rjmp	.+74     	; 0x38e4 <fputc+0x5e>
    389a:	17 96       	adiw	r26, 0x07	; 7
    389c:	4d 91       	ld	r20, X+
    389e:	5c 91       	ld	r21, X
    38a0:	18 97       	sbiw	r26, 0x08	; 8
    38a2:	15 96       	adiw	r26, 0x05	; 5
    38a4:	2d 91       	ld	r18, X+
    38a6:	3c 91       	ld	r19, X
    38a8:	16 97       	sbiw	r26, 0x06	; 6
    38aa:	42 17       	cp	r20, r18
    38ac:	53 07       	cpc	r21, r19
    38ae:	78 f4       	brcc	.+30     	; 0x38ce <fputc+0x48>
    38b0:	12 96       	adiw	r26, 0x02	; 2
    38b2:	ed 91       	ld	r30, X+
    38b4:	fc 91       	ld	r31, X
    38b6:	13 97       	sbiw	r26, 0x03	; 3
    38b8:	80 83       	st	Z, r24
    38ba:	12 96       	adiw	r26, 0x02	; 2
    38bc:	2d 91       	ld	r18, X+
    38be:	3c 91       	ld	r19, X
    38c0:	13 97       	sbiw	r26, 0x03	; 3
    38c2:	2f 5f       	subi	r18, 0xFF	; 255
    38c4:	3f 4f       	sbci	r19, 0xFF	; 255
    38c6:	13 96       	adiw	r26, 0x03	; 3
    38c8:	3c 93       	st	X, r19
    38ca:	2e 93       	st	-X, r18
    38cc:	12 97       	sbiw	r26, 0x02	; 2
    38ce:	17 96       	adiw	r26, 0x07	; 7
    38d0:	2d 91       	ld	r18, X+
    38d2:	3c 91       	ld	r19, X
    38d4:	18 97       	sbiw	r26, 0x08	; 8
    38d6:	2f 5f       	subi	r18, 0xFF	; 255
    38d8:	3f 4f       	sbci	r19, 0xFF	; 255
    38da:	18 96       	adiw	r26, 0x08	; 8
    38dc:	3c 93       	st	X, r19
    38de:	2e 93       	st	-X, r18
    38e0:	17 97       	sbiw	r26, 0x07	; 7
    38e2:	15 c0       	rjmp	.+42     	; 0x390e <fputc+0x88>
    38e4:	1d 96       	adiw	r26, 0x0d	; 13
    38e6:	ed 91       	ld	r30, X+
    38e8:	fc 91       	ld	r31, X
    38ea:	1e 97       	sbiw	r26, 0x0e	; 14
    38ec:	30 97       	sbiw	r30, 0x00	; 0
    38ee:	19 f4       	brne	.+6      	; 0x38f6 <fputc+0x70>
    38f0:	8f ef       	ldi	r24, 0xFF	; 255
    38f2:	9f ef       	ldi	r25, 0xFF	; 255
    38f4:	0c c0       	rjmp	.+24     	; 0x390e <fputc+0x88>
    38f6:	8b 01       	movw	r16, r22
    38f8:	ec 01       	movw	r28, r24
    38fa:	19 95       	eicall
    38fc:	89 2b       	or	r24, r25
    38fe:	c1 f7       	brne	.-16     	; 0x38f0 <fputc+0x6a>
    3900:	f8 01       	movw	r30, r16
    3902:	87 81       	ldd	r24, Z+7	; 0x07
    3904:	90 85       	ldd	r25, Z+8	; 0x08
    3906:	01 96       	adiw	r24, 0x01	; 1
    3908:	90 87       	std	Z+8, r25	; 0x08
    390a:	87 83       	std	Z+7, r24	; 0x07
    390c:	ce 01       	movw	r24, r28
    390e:	df 91       	pop	r29
    3910:	cf 91       	pop	r28
    3912:	1f 91       	pop	r17
    3914:	0f 91       	pop	r16
    3916:	08 95       	ret

Disassembly of section .text.__fmt_d:

00002276 <__fmt_d>:
    2276:	ad e0       	ldi	r26, 0x0D	; 13
    2278:	b0 e0       	ldi	r27, 0x00	; 0
    227a:	e1 e4       	ldi	r30, 0x41	; 65
    227c:	f1 e1       	ldi	r31, 0x11	; 17
    227e:	0c 94 f1 20 	jmp	0x41e2	; 0x41e2 <__prologue_saves__>
    2282:	9a 87       	std	Y+10, r25	; 0x0a
    2284:	89 87       	std	Y+9, r24	; 0x09
    2286:	7c 83       	std	Y+4, r23	; 0x04
    2288:	6b 83       	std	Y+3, r22	; 0x03
    228a:	fa 01       	movw	r30, r20
    228c:	db 01       	movw	r26, r22
    228e:	12 96       	adiw	r26, 0x02	; 2
    2290:	cd 90       	ld	r12, X+
    2292:	dc 90       	ld	r13, X
    2294:	13 97       	sbiw	r26, 0x03	; 3
    2296:	14 96       	adiw	r26, 0x04	; 4
    2298:	8d 91       	ld	r24, X+
    229a:	9c 91       	ld	r25, X
    229c:	15 97       	sbiw	r26, 0x05	; 5
    229e:	9e 83       	std	Y+6, r25	; 0x06
    22a0:	8d 83       	std	Y+5, r24	; 0x05
    22a2:	ed 90       	ld	r14, X+
    22a4:	fc 90       	ld	r15, X
    22a6:	11 97       	sbiw	r26, 0x01	; 1
    22a8:	fa 82       	std	Y+2, r15	; 0x02
    22aa:	e9 82       	std	Y+1, r14	; 0x01
    22ac:	16 96       	adiw	r26, 0x06	; 6
    22ae:	0d 90       	ld	r0, X+
    22b0:	bc 91       	ld	r27, X
    22b2:	a0 2d       	mov	r26, r0
    22b4:	b8 87       	std	Y+8, r27	; 0x08
    22b6:	af 83       	std	Y+7, r26	; 0x07
    22b8:	20 80       	ld	r2, Z
    22ba:	31 80       	ldd	r3, Z+1	; 0x01
    22bc:	42 80       	ldd	r4, Z+2	; 0x02
    22be:	53 80       	ldd	r5, Z+3	; 0x03
    22c0:	64 80       	ldd	r6, Z+4	; 0x04
    22c2:	75 80       	ldd	r7, Z+5	; 0x05
    22c4:	86 80       	ldd	r8, Z+6	; 0x06
    22c6:	97 80       	ldd	r9, Z+7	; 0x07
    22c8:	81 01       	movw	r16, r2
    22ca:	b4 2d       	mov	r27, r4
    22cc:	f5 2d       	mov	r31, r5
    22ce:	e6 2d       	mov	r30, r6
    22d0:	7b 86       	std	Y+11, r7	; 0x0b
    22d2:	8c 86       	std	Y+12, r8	; 0x0c
    22d4:	9d 86       	std	Y+13, r9	; 0x0d
    22d6:	91 01       	movw	r18, r2
    22d8:	a2 01       	movw	r20, r4
    22da:	b3 01       	movw	r22, r6
    22dc:	c4 01       	movw	r24, r8
    22de:	a0 e0       	ldi	r26, 0x00	; 0
    22e0:	0e 94 9e 22 	call	0x453c	; 0x453c <__cmpdi2_s8>
    22e4:	4c f4       	brge	.+18     	; 0x22f8 <__fmt_d+0x82>
    22e6:	0e 94 23 22 	call	0x4446	; 0x4446 <__negdi2>
    22ea:	89 01       	movw	r16, r18
    22ec:	b4 2f       	mov	r27, r20
    22ee:	f5 2f       	mov	r31, r21
    22f0:	e6 2f       	mov	r30, r22
    22f2:	7b 87       	std	Y+11, r23	; 0x0b
    22f4:	8c 87       	std	Y+12, r24	; 0x0c
    22f6:	9d 87       	std	Y+13, r25	; 0x0d
    22f8:	d7 fc       	sbrc	r13, 7
    22fa:	04 c0       	rjmp	.+8      	; 0x2304 <__fmt_d+0x8e>
    22fc:	e8 94       	clt
    22fe:	e1 f8       	bld	r14, 1
    2300:	fa 82       	std	Y+2, r15	; 0x02
    2302:	e9 82       	std	Y+1, r14	; 0x01
    2304:	91 01       	movw	r18, r2
    2306:	a2 01       	movw	r20, r4
    2308:	b3 01       	movw	r22, r6
    230a:	c4 01       	movw	r24, r8
    230c:	a0 e0       	ldi	r26, 0x00	; 0
    230e:	ed 80       	ldd	r14, Y+5	; 0x05
    2310:	fe 80       	ldd	r15, Y+6	; 0x06
    2312:	0e 94 9e 22 	call	0x453c	; 0x453c <__cmpdi2_s8>
    2316:	1c f0       	brlt	.+6      	; 0x231e <__fmt_d+0xa8>
    2318:	89 81       	ldd	r24, Y+1	; 0x01
    231a:	82 ff       	sbrs	r24, 2
    231c:	04 c0       	rjmp	.+8      	; 0x2326 <__fmt_d+0xb0>
    231e:	81 e0       	ldi	r24, 0x01	; 1
    2320:	e8 1a       	sub	r14, r24
    2322:	f1 08       	sbc	r15, r1
    2324:	05 c0       	rjmp	.+10     	; 0x2330 <__fmt_d+0xba>
    2326:	83 ff       	sbrs	r24, 3
    2328:	03 c0       	rjmp	.+6      	; 0x2330 <__fmt_d+0xba>
    232a:	91 e0       	ldi	r25, 0x01	; 1
    232c:	e9 1a       	sub	r14, r25
    232e:	f1 08       	sbc	r15, r1
    2330:	ce 01       	movw	r24, r28
    2332:	01 96       	adiw	r24, 0x01	; 1
    2334:	5c 01       	movw	r10, r24
    2336:	8a e0       	ldi	r24, 0x0A	; 10
    2338:	c8 2e       	mov	r12, r24
    233a:	d1 2c       	mov	r13, r1
    233c:	2b 2f       	mov	r18, r27
    233e:	3f 2f       	mov	r19, r31
    2340:	4e 2f       	mov	r20, r30
    2342:	5b 85       	ldd	r21, Y+11	; 0x0b
    2344:	6c 85       	ldd	r22, Y+12	; 0x0c
    2346:	7d 85       	ldd	r23, Y+13	; 0x0d
    2348:	8b 81       	ldd	r24, Y+3	; 0x03
    234a:	9c 81       	ldd	r25, Y+4	; 0x04
    234c:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <__cvt_u>
    2350:	fc 01       	movw	r30, r24
    2352:	91 01       	movw	r18, r2
    2354:	a2 01       	movw	r20, r4
    2356:	b3 01       	movw	r22, r6
    2358:	c4 01       	movw	r24, r8
    235a:	a0 e0       	ldi	r26, 0x00	; 0
    235c:	0e 94 9e 22 	call	0x453c	; 0x453c <__cmpdi2_s8>
    2360:	1c f0       	brlt	.+6      	; 0x2368 <__fmt_d+0xf2>
    2362:	89 81       	ldd	r24, Y+1	; 0x01
    2364:	82 ff       	sbrs	r24, 2
    2366:	12 c0       	rjmp	.+36     	; 0x238c <__fmt_d+0x116>
    2368:	31 97       	sbiw	r30, 0x01	; 1
    236a:	0f 81       	ldd	r16, Y+7	; 0x07
    236c:	18 85       	ldd	r17, Y+8	; 0x08
    236e:	0e 0f       	add	r16, r30
    2370:	1f 1f       	adc	r17, r31
    2372:	91 01       	movw	r18, r2
    2374:	a2 01       	movw	r20, r4
    2376:	b3 01       	movw	r22, r6
    2378:	c4 01       	movw	r24, r8
    237a:	a0 e0       	ldi	r26, 0x00	; 0
    237c:	0e 94 9e 22 	call	0x453c	; 0x453c <__cmpdi2_s8>
    2380:	14 f0       	brlt	.+4      	; 0x2386 <__fmt_d+0x110>
    2382:	8b e2       	ldi	r24, 0x2B	; 43
    2384:	01 c0       	rjmp	.+2      	; 0x2388 <__fmt_d+0x112>
    2386:	8d e2       	ldi	r24, 0x2D	; 45
    2388:	d8 01       	movw	r26, r16
    238a:	08 c0       	rjmp	.+16     	; 0x239c <__fmt_d+0x126>
    238c:	83 ff       	sbrs	r24, 3
    238e:	07 c0       	rjmp	.+14     	; 0x239e <__fmt_d+0x128>
    2390:	31 97       	sbiw	r30, 0x01	; 1
    2392:	af 81       	ldd	r26, Y+7	; 0x07
    2394:	b8 85       	ldd	r27, Y+8	; 0x08
    2396:	ae 0f       	add	r26, r30
    2398:	bf 1f       	adc	r27, r31
    239a:	80 e2       	ldi	r24, 0x20	; 32
    239c:	8c 93       	st	X, r24
    239e:	e9 80       	ldd	r14, Y+1	; 0x01
    23a0:	fa 80       	ldd	r15, Y+2	; 0x02
    23a2:	ab 81       	ldd	r26, Y+3	; 0x03
    23a4:	bc 81       	ldd	r27, Y+4	; 0x04
    23a6:	18 96       	adiw	r26, 0x08	; 8
    23a8:	2d 91       	ld	r18, X+
    23aa:	3c 91       	ld	r19, X
    23ac:	19 97       	sbiw	r26, 0x09	; 9
    23ae:	21 50       	subi	r18, 0x01	; 1
    23b0:	31 09       	sbc	r19, r1
    23b2:	2e 1b       	sub	r18, r30
    23b4:	3f 0b       	sbc	r19, r31
    23b6:	8f 81       	ldd	r24, Y+7	; 0x07
    23b8:	98 85       	ldd	r25, Y+8	; 0x08
    23ba:	e8 0f       	add	r30, r24
    23bc:	f9 1f       	adc	r31, r25
    23be:	af 01       	movw	r20, r30
    23c0:	60 e8       	ldi	r22, 0x80	; 128
    23c2:	0d 81       	ldd	r16, Y+5	; 0x05
    23c4:	1e 81       	ldd	r17, Y+6	; 0x06
    23c6:	89 85       	ldd	r24, Y+9	; 0x09
    23c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    23ca:	0e 94 37 15 	call	0x2a6e	; 0x2a6e <__pad>
    23ce:	9c 01       	movw	r18, r24
    23d0:	a9 85       	ldd	r26, Y+9	; 0x09
    23d2:	ba 85       	ldd	r27, Y+10	; 0x0a
    23d4:	8d 91       	ld	r24, X+
    23d6:	9c 91       	ld	r25, X
    23d8:	90 ff       	sbrs	r25, 0
    23da:	07 c0       	rjmp	.+14     	; 0x23ea <__fmt_d+0x174>
    23dc:	eb 81       	ldd	r30, Y+3	; 0x03
    23de:	fc 81       	ldd	r31, Y+4	; 0x04
    23e0:	82 81       	ldd	r24, Z+2	; 0x02
    23e2:	93 81       	ldd	r25, Z+3	; 0x03
    23e4:	82 17       	cp	r24, r18
    23e6:	93 07       	cpc	r25, r19
    23e8:	0c f4       	brge	.+2      	; 0x23ec <__fmt_d+0x176>
    23ea:	c9 01       	movw	r24, r18
    23ec:	2d 96       	adiw	r28, 0x0d	; 13
    23ee:	e2 e1       	ldi	r30, 0x12	; 18
    23f0:	0c 94 28 21 	jmp	0x4250	; 0x4250 <__epilogue_restores__>

Disassembly of section .text.__fmt_o:

00002d32 <__fmt_o>:
    2d32:	a2 e0       	ldi	r26, 0x02	; 2
    2d34:	b0 e0       	ldi	r27, 0x00	; 0
    2d36:	ef e9       	ldi	r30, 0x9F	; 159
    2d38:	f6 e1       	ldi	r31, 0x16	; 22
    2d3a:	0c 94 f1 20 	jmp	0x41e2	; 0x41e2 <__prologue_saves__>
    2d3e:	1c 01       	movw	r2, r24
    2d40:	4b 01       	movw	r8, r22
    2d42:	fa 01       	movw	r30, r20
    2d44:	db 01       	movw	r26, r22
    2d46:	12 96       	adiw	r26, 0x02	; 2
    2d48:	2d 91       	ld	r18, X+
    2d4a:	3c 91       	ld	r19, X
    2d4c:	13 97       	sbiw	r26, 0x03	; 3
    2d4e:	14 96       	adiw	r26, 0x04	; 4
    2d50:	4d 90       	ld	r4, X+
    2d52:	5c 90       	ld	r5, X
    2d54:	15 97       	sbiw	r26, 0x05	; 5
    2d56:	8d 91       	ld	r24, X+
    2d58:	9c 91       	ld	r25, X
    2d5a:	11 97       	sbiw	r26, 0x01	; 1
    2d5c:	9a 83       	std	Y+2, r25	; 0x02
    2d5e:	89 83       	std	Y+1, r24	; 0x01
    2d60:	16 96       	adiw	r26, 0x06	; 6
    2d62:	6d 90       	ld	r6, X+
    2d64:	7c 90       	ld	r7, X
    2d66:	17 97       	sbiw	r26, 0x07	; 7
    2d68:	37 fd       	sbrc	r19, 7
    2d6a:	03 c0       	rjmp	.+6      	; 0x2d72 <__fmt_o+0x40>
    2d6c:	8d 7f       	andi	r24, 0xFD	; 253
    2d6e:	9a 83       	std	Y+2, r25	; 0x02
    2d70:	89 83       	std	Y+1, r24	; 0x01
    2d72:	00 81       	ld	r16, Z
    2d74:	11 81       	ldd	r17, Z+1	; 0x01
    2d76:	22 81       	ldd	r18, Z+2	; 0x02
    2d78:	33 81       	ldd	r19, Z+3	; 0x03
    2d7a:	44 81       	ldd	r20, Z+4	; 0x04
    2d7c:	55 81       	ldd	r21, Z+5	; 0x05
    2d7e:	66 81       	ldd	r22, Z+6	; 0x06
    2d80:	77 81       	ldd	r23, Z+7	; 0x07
    2d82:	fe 01       	movw	r30, r28
    2d84:	31 96       	adiw	r30, 0x01	; 1
    2d86:	5f 01       	movw	r10, r30
    2d88:	88 e0       	ldi	r24, 0x08	; 8
    2d8a:	c8 2e       	mov	r12, r24
    2d8c:	d1 2c       	mov	r13, r1
    2d8e:	72 01       	movw	r14, r4
    2d90:	c4 01       	movw	r24, r8
    2d92:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <__cvt_u>
    2d96:	29 81       	ldd	r18, Y+1	; 0x01
    2d98:	24 ff       	sbrs	r18, 4
    2d9a:	06 c0       	rjmp	.+12     	; 0x2da8 <__fmt_o+0x76>
    2d9c:	01 97       	sbiw	r24, 0x01	; 1
    2d9e:	f3 01       	movw	r30, r6
    2da0:	e8 0f       	add	r30, r24
    2da2:	f9 1f       	adc	r31, r25
    2da4:	20 e3       	ldi	r18, 0x30	; 48
    2da6:	20 83       	st	Z, r18
    2da8:	29 81       	ldd	r18, Y+1	; 0x01
    2daa:	23 ff       	sbrs	r18, 3
    2dac:	06 c0       	rjmp	.+12     	; 0x2dba <__fmt_o+0x88>
    2dae:	01 97       	sbiw	r24, 0x01	; 1
    2db0:	f3 01       	movw	r30, r6
    2db2:	e8 0f       	add	r30, r24
    2db4:	f9 1f       	adc	r31, r25
    2db6:	20 e2       	ldi	r18, 0x20	; 32
    2db8:	20 83       	st	Z, r18
    2dba:	e9 80       	ldd	r14, Y+1	; 0x01
    2dbc:	fa 80       	ldd	r15, Y+2	; 0x02
    2dbe:	d4 01       	movw	r26, r8
    2dc0:	18 96       	adiw	r26, 0x08	; 8
    2dc2:	2d 91       	ld	r18, X+
    2dc4:	3c 91       	ld	r19, X
    2dc6:	19 97       	sbiw	r26, 0x09	; 9
    2dc8:	21 50       	subi	r18, 0x01	; 1
    2dca:	31 09       	sbc	r19, r1
    2dcc:	28 1b       	sub	r18, r24
    2dce:	39 0b       	sbc	r19, r25
    2dd0:	86 0d       	add	r24, r6
    2dd2:	97 1d       	adc	r25, r7
    2dd4:	ac 01       	movw	r20, r24
    2dd6:	60 e8       	ldi	r22, 0x80	; 128
    2dd8:	82 01       	movw	r16, r4
    2dda:	c1 01       	movw	r24, r2
    2ddc:	0e 94 37 15 	call	0x2a6e	; 0x2a6e <__pad>
    2de0:	9c 01       	movw	r18, r24
    2de2:	f1 01       	movw	r30, r2
    2de4:	80 81       	ld	r24, Z
    2de6:	91 81       	ldd	r25, Z+1	; 0x01
    2de8:	90 ff       	sbrs	r25, 0
    2dea:	08 c0       	rjmp	.+16     	; 0x2dfc <__fmt_o+0xca>
    2dec:	d4 01       	movw	r26, r8
    2dee:	12 96       	adiw	r26, 0x02	; 2
    2df0:	8d 91       	ld	r24, X+
    2df2:	9c 91       	ld	r25, X
    2df4:	13 97       	sbiw	r26, 0x03	; 3
    2df6:	82 17       	cp	r24, r18
    2df8:	93 07       	cpc	r25, r19
    2dfa:	0c f4       	brge	.+2      	; 0x2dfe <__fmt_o+0xcc>
    2dfc:	c9 01       	movw	r24, r18
    2dfe:	22 96       	adiw	r28, 0x02	; 2
    2e00:	e2 e1       	ldi	r30, 0x12	; 18
    2e02:	0c 94 28 21 	jmp	0x4250	; 0x4250 <__epilogue_restores__>

Disassembly of section .text.__cvt_u:

000026b6 <__cvt_u>:
    26b6:	a2 e1       	ldi	r26, 0x12	; 18
    26b8:	b0 e0       	ldi	r27, 0x00	; 0
    26ba:	e1 e6       	ldi	r30, 0x61	; 97
    26bc:	f3 e1       	ldi	r31, 0x13	; 19
    26be:	0c 94 f1 20 	jmp	0x41e2	; 0x41e2 <__prologue_saves__>
    26c2:	fc 01       	movw	r30, r24
    26c4:	0a 8b       	std	Y+18, r16	; 0x12
    26c6:	1b 83       	std	Y+3, r17	; 0x03
    26c8:	2c 83       	std	Y+4, r18	; 0x04
    26ca:	73 2e       	mov	r7, r19
    26cc:	64 2e       	mov	r6, r20
    26ce:	55 2e       	mov	r5, r21
    26d0:	46 2e       	mov	r4, r22
    26d2:	7d 83       	std	Y+5, r23	; 0x05
    26d4:	cc 86       	std	Y+12, r12	; 0x0c
    26d6:	d8 86       	std	Y+8, r13	; 0x08
    26d8:	bf 82       	std	Y+7, r11	; 0x07
    26da:	ae 82       	std	Y+6, r10	; 0x06
    26dc:	86 81       	ldd	r24, Z+6	; 0x06
    26de:	97 81       	ldd	r25, Z+7	; 0x07
    26e0:	9b 87       	std	Y+11, r25	; 0x0b
    26e2:	8a 87       	std	Y+10, r24	; 0x0a
    26e4:	d5 01       	movw	r26, r10
    26e6:	4d 91       	ld	r20, X+
    26e8:	5c 91       	ld	r21, X
    26ea:	22 81       	ldd	r18, Z+2	; 0x02
    26ec:	33 81       	ldd	r19, Z+3	; 0x03
    26ee:	80 85       	ldd	r24, Z+8	; 0x08
    26f0:	91 85       	ldd	r25, Z+9	; 0x09
    26f2:	01 97       	sbiw	r24, 0x01	; 1
    26f4:	1c 01       	movw	r2, r24
    26f6:	37 ff       	sbrs	r19, 7
    26f8:	02 c0       	rjmp	.+4      	; 0x26fe <__cvt_u+0x48>
    26fa:	21 e0       	ldi	r18, 0x01	; 1
    26fc:	30 e0       	ldi	r19, 0x00	; 0
    26fe:	ea 85       	ldd	r30, Y+10	; 0x0a
    2700:	fb 85       	ldd	r31, Y+11	; 0x0b
    2702:	e8 0f       	add	r30, r24
    2704:	f9 1f       	adc	r31, r25
    2706:	10 82       	st	Z, r1
    2708:	47 01       	movw	r8, r14
    270a:	e1 e0       	ldi	r30, 0x01	; 1
    270c:	f0 e0       	ldi	r31, 0x00	; 0
    270e:	fa 83       	std	Y+2, r31	; 0x02
    2710:	e9 83       	std	Y+1, r30	; 0x01
    2712:	c9 01       	movw	r24, r18
    2714:	8e 19       	sub	r24, r14
    2716:	9f 09       	sbc	r25, r15
    2718:	9e 87       	std	Y+14, r25	; 0x0e
    271a:	8d 87       	std	Y+13, r24	; 0x0d
    271c:	da 01       	movw	r26, r20
    271e:	a2 70       	andi	r26, 0x02	; 2
    2720:	bb 27       	eor	r27, r27
    2722:	b8 8b       	std	Y+16, r27	; 0x10
    2724:	af 87       	std	Y+15, r26	; 0x0f
    2726:	b8 85       	ldd	r27, Y+8	; 0x08
    2728:	bb 0f       	add	r27, r27
    272a:	bb 0b       	sbc	r27, r27
    272c:	b9 8b       	std	Y+17, r27	; 0x11
    272e:	12 14       	cp	r1, r2
    2730:	13 04       	cpc	r1, r3
    2732:	74 f0       	brlt	.+28     	; 0x2750 <__cvt_u+0x9a>
    2734:	a9 81       	ldd	r26, Y+1	; 0x01
    2736:	ba 81       	ldd	r27, Y+2	; 0x02
    2738:	ab 2b       	or	r26, r27
    273a:	09 f0       	breq	.+2      	; 0x273e <__cvt_u+0x88>
    273c:	5c c0       	rjmp	.+184    	; 0x27f6 <__cvt_u+0x140>
    273e:	ae 81       	ldd	r26, Y+6	; 0x06
    2740:	bf 81       	ldd	r27, Y+7	; 0x07
    2742:	8d 91       	ld	r24, X+
    2744:	9c 91       	ld	r25, X
    2746:	11 97       	sbiw	r26, 0x01	; 1
    2748:	8f 7e       	andi	r24, 0xEF	; 239
    274a:	8d 93       	st	X+, r24
    274c:	9c 93       	st	X, r25
    274e:	53 c0       	rjmp	.+166    	; 0x27f6 <__cvt_u+0x140>
    2750:	2a 89       	ldd	r18, Y+18	; 0x12
    2752:	3b 81       	ldd	r19, Y+3	; 0x03
    2754:	4c 81       	ldd	r20, Y+4	; 0x04
    2756:	57 2d       	mov	r21, r7
    2758:	66 2d       	mov	r22, r6
    275a:	75 2d       	mov	r23, r5
    275c:	84 2d       	mov	r24, r4
    275e:	9d 81       	ldd	r25, Y+5	; 0x05
    2760:	a0 e0       	ldi	r26, 0x00	; 0
    2762:	0e 94 9e 22 	call	0x453c	; 0x453c <__cmpdi2_s8>
    2766:	b1 f1       	breq	.+108    	; 0x27d4 <__cvt_u+0x11e>
    2768:	e1 e0       	ldi	r30, 0x01	; 1
    276a:	2e 1a       	sub	r2, r30
    276c:	31 08       	sbc	r3, r1
    276e:	fc 85       	ldd	r31, Y+12	; 0x0c
    2770:	f9 87       	std	Y+9, r31	; 0x09
    2772:	af 2e       	mov	r10, r31
    2774:	b8 84       	ldd	r11, Y+8	; 0x08
    2776:	c9 88       	ldd	r12, Y+17	; 0x11
    2778:	dc 2c       	mov	r13, r12
    277a:	ec 2c       	mov	r14, r12
    277c:	fc 2c       	mov	r15, r12
    277e:	0c 2d       	mov	r16, r12
    2780:	1c 2d       	mov	r17, r12
    2782:	2a 89       	ldd	r18, Y+18	; 0x12
    2784:	3b 81       	ldd	r19, Y+3	; 0x03
    2786:	4c 81       	ldd	r20, Y+4	; 0x04
    2788:	57 2d       	mov	r21, r7
    278a:	66 2d       	mov	r22, r6
    278c:	75 2d       	mov	r23, r5
    278e:	84 2d       	mov	r24, r4
    2790:	9d 81       	ldd	r25, Y+5	; 0x05
    2792:	0e 94 50 22 	call	0x44a0	; 0x44a0 <__umoddi3>
    2796:	c9 01       	movw	r24, r18
    2798:	29 83       	std	Y+1, r18	; 0x01
    279a:	9a 83       	std	Y+2, r25	; 0x02
    279c:	ea 85       	ldd	r30, Y+10	; 0x0a
    279e:	fb 85       	ldd	r31, Y+11	; 0x0b
    27a0:	e2 0d       	add	r30, r2
    27a2:	f3 1d       	adc	r31, r3
    27a4:	80 5d       	subi	r24, 0xD0	; 208
    27a6:	80 83       	st	Z, r24
    27a8:	81 e0       	ldi	r24, 0x01	; 1
    27aa:	88 1a       	sub	r8, r24
    27ac:	91 08       	sbc	r9, r1
    27ae:	2a 89       	ldd	r18, Y+18	; 0x12
    27b0:	3b 81       	ldd	r19, Y+3	; 0x03
    27b2:	4c 81       	ldd	r20, Y+4	; 0x04
    27b4:	57 2d       	mov	r21, r7
    27b6:	66 2d       	mov	r22, r6
    27b8:	75 2d       	mov	r23, r5
    27ba:	84 2d       	mov	r24, r4
    27bc:	9d 81       	ldd	r25, Y+5	; 0x05
    27be:	0e 94 52 22 	call	0x44a4	; 0x44a4 <__udivdi3>
    27c2:	2a 8b       	std	Y+18, r18	; 0x12
    27c4:	3b 83       	std	Y+3, r19	; 0x03
    27c6:	4c 83       	std	Y+4, r20	; 0x04
    27c8:	75 2e       	mov	r7, r21
    27ca:	66 2e       	mov	r6, r22
    27cc:	57 2e       	mov	r5, r23
    27ce:	48 2e       	mov	r4, r24
    27d0:	9d 83       	std	Y+5, r25	; 0x05
    27d2:	ad cf       	rjmp	.-166    	; 0x272e <__cvt_u+0x78>
    27d4:	8d 85       	ldd	r24, Y+13	; 0x0d
    27d6:	9e 85       	ldd	r25, Y+14	; 0x0e
    27d8:	88 0d       	add	r24, r8
    27da:	99 1d       	adc	r25, r9
    27dc:	18 16       	cp	r1, r24
    27de:	19 06       	cpc	r1, r25
    27e0:	1c f2       	brlt	.-122    	; 0x2768 <__cvt_u+0xb2>
    27e2:	18 14       	cp	r1, r8
    27e4:	19 04       	cpc	r1, r9
    27e6:	0c f0       	brlt	.+2      	; 0x27ea <__cvt_u+0x134>
    27e8:	a5 cf       	rjmp	.-182    	; 0x2734 <__cvt_u+0x7e>
    27ea:	ef 85       	ldd	r30, Y+15	; 0x0f
    27ec:	f8 89       	ldd	r31, Y+16	; 0x10
    27ee:	ef 2b       	or	r30, r31
    27f0:	09 f0       	breq	.+2      	; 0x27f4 <__cvt_u+0x13e>
    27f2:	ba cf       	rjmp	.-140    	; 0x2768 <__cvt_u+0xb2>
    27f4:	9f cf       	rjmp	.-194    	; 0x2734 <__cvt_u+0x7e>
    27f6:	c1 01       	movw	r24, r2
    27f8:	62 96       	adiw	r28, 0x12	; 18
    27fa:	e2 e1       	ldi	r30, 0x12	; 18
    27fc:	0c 94 28 21 	jmp	0x4250	; 0x4250 <__epilogue_restores__>

Disassembly of section .text.__fmt_u:

000032aa <__fmt_u>:
    32aa:	a2 e0       	ldi	r26, 0x02	; 2
    32ac:	b0 e0       	ldi	r27, 0x00	; 0
    32ae:	eb e5       	ldi	r30, 0x5B	; 91
    32b0:	f9 e1       	ldi	r31, 0x19	; 25
    32b2:	0c 94 f1 20 	jmp	0x41e2	; 0x41e2 <__prologue_saves__>
    32b6:	3c 01       	movw	r6, r24
    32b8:	4b 01       	movw	r8, r22
    32ba:	fa 01       	movw	r30, r20
    32bc:	db 01       	movw	r26, r22
    32be:	12 96       	adiw	r26, 0x02	; 2
    32c0:	2d 91       	ld	r18, X+
    32c2:	3c 91       	ld	r19, X
    32c4:	13 97       	sbiw	r26, 0x03	; 3
    32c6:	14 96       	adiw	r26, 0x04	; 4
    32c8:	4d 90       	ld	r4, X+
    32ca:	5c 90       	ld	r5, X
    32cc:	15 97       	sbiw	r26, 0x05	; 5
    32ce:	8d 91       	ld	r24, X+
    32d0:	9c 91       	ld	r25, X
    32d2:	11 97       	sbiw	r26, 0x01	; 1
    32d4:	9a 83       	std	Y+2, r25	; 0x02
    32d6:	89 83       	std	Y+1, r24	; 0x01
    32d8:	16 96       	adiw	r26, 0x06	; 6
    32da:	2d 90       	ld	r2, X+
    32dc:	3c 90       	ld	r3, X
    32de:	17 97       	sbiw	r26, 0x07	; 7
    32e0:	37 fd       	sbrc	r19, 7
    32e2:	03 c0       	rjmp	.+6      	; 0x32ea <__fmt_u+0x40>
    32e4:	8d 7f       	andi	r24, 0xFD	; 253
    32e6:	9a 83       	std	Y+2, r25	; 0x02
    32e8:	89 83       	std	Y+1, r24	; 0x01
    32ea:	00 81       	ld	r16, Z
    32ec:	11 81       	ldd	r17, Z+1	; 0x01
    32ee:	22 81       	ldd	r18, Z+2	; 0x02
    32f0:	33 81       	ldd	r19, Z+3	; 0x03
    32f2:	44 81       	ldd	r20, Z+4	; 0x04
    32f4:	55 81       	ldd	r21, Z+5	; 0x05
    32f6:	66 81       	ldd	r22, Z+6	; 0x06
    32f8:	77 81       	ldd	r23, Z+7	; 0x07
    32fa:	fe 01       	movw	r30, r28
    32fc:	31 96       	adiw	r30, 0x01	; 1
    32fe:	5f 01       	movw	r10, r30
    3300:	8a e0       	ldi	r24, 0x0A	; 10
    3302:	c8 2e       	mov	r12, r24
    3304:	d1 2c       	mov	r13, r1
    3306:	72 01       	movw	r14, r4
    3308:	c4 01       	movw	r24, r8
    330a:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <__cvt_u>
    330e:	e9 80       	ldd	r14, Y+1	; 0x01
    3310:	fa 80       	ldd	r15, Y+2	; 0x02
    3312:	d4 01       	movw	r26, r8
    3314:	18 96       	adiw	r26, 0x08	; 8
    3316:	2d 91       	ld	r18, X+
    3318:	3c 91       	ld	r19, X
    331a:	19 97       	sbiw	r26, 0x09	; 9
    331c:	21 50       	subi	r18, 0x01	; 1
    331e:	31 09       	sbc	r19, r1
    3320:	28 1b       	sub	r18, r24
    3322:	39 0b       	sbc	r19, r25
    3324:	82 0d       	add	r24, r2
    3326:	93 1d       	adc	r25, r3
    3328:	ac 01       	movw	r20, r24
    332a:	60 e8       	ldi	r22, 0x80	; 128
    332c:	82 01       	movw	r16, r4
    332e:	c3 01       	movw	r24, r6
    3330:	0e 94 37 15 	call	0x2a6e	; 0x2a6e <__pad>
    3334:	9c 01       	movw	r18, r24
    3336:	f3 01       	movw	r30, r6
    3338:	80 81       	ld	r24, Z
    333a:	91 81       	ldd	r25, Z+1	; 0x01
    333c:	90 ff       	sbrs	r25, 0
    333e:	08 c0       	rjmp	.+16     	; 0x3350 <__fmt_u+0xa6>
    3340:	d4 01       	movw	r26, r8
    3342:	12 96       	adiw	r26, 0x02	; 2
    3344:	8d 91       	ld	r24, X+
    3346:	9c 91       	ld	r25, X
    3348:	13 97       	sbiw	r26, 0x03	; 3
    334a:	82 17       	cp	r24, r18
    334c:	93 07       	cpc	r25, r19
    334e:	0c f4       	brge	.+2      	; 0x3352 <__fmt_u+0xa8>
    3350:	c9 01       	movw	r24, r18
    3352:	22 96       	adiw	r28, 0x02	; 2
    3354:	e2 e1       	ldi	r30, 0x12	; 18
    3356:	0c 94 28 21 	jmp	0x4250	; 0x4250 <__epilogue_restores__>

Disassembly of section .text.__fmt_x:

00001ff6 <__fmt_x>:
    1ff6:	a4 e1       	ldi	r26, 0x14	; 20
    1ff8:	b0 e0       	ldi	r27, 0x00	; 0
    1ffa:	e1 e0       	ldi	r30, 0x01	; 1
    1ffc:	f0 e1       	ldi	r31, 0x10	; 16
    1ffe:	0c 94 f1 20 	jmp	0x41e2	; 0x41e2 <__prologue_saves__>
    2002:	98 87       	std	Y+8, r25	; 0x08
    2004:	8f 83       	std	Y+7, r24	; 0x07
    2006:	7a 83       	std	Y+2, r23	; 0x02
    2008:	69 83       	std	Y+1, r22	; 0x01
    200a:	5c 8b       	std	Y+20, r21	; 0x14
    200c:	4b 8b       	std	Y+19, r20	; 0x13
    200e:	12 2f       	mov	r17, r18
    2010:	db 01       	movw	r26, r22
    2012:	12 96       	adiw	r26, 0x02	; 2
    2014:	ed 91       	ld	r30, X+
    2016:	fc 91       	ld	r31, X
    2018:	13 97       	sbiw	r26, 0x03	; 3
    201a:	14 96       	adiw	r26, 0x04	; 4
    201c:	2d 91       	ld	r18, X+
    201e:	3c 91       	ld	r19, X
    2020:	15 97       	sbiw	r26, 0x05	; 5
    2022:	3e 83       	std	Y+6, r19	; 0x06
    2024:	2d 83       	std	Y+5, r18	; 0x05
    2026:	ed 90       	ld	r14, X+
    2028:	fc 90       	ld	r15, X
    202a:	11 97       	sbiw	r26, 0x01	; 1
    202c:	16 96       	adiw	r26, 0x06	; 6
    202e:	2d 90       	ld	r2, X+
    2030:	3c 90       	ld	r3, X
    2032:	17 97       	sbiw	r26, 0x07	; 7
    2034:	f7 fd       	sbrc	r31, 7
    2036:	03 c0       	rjmp	.+6      	; 0x203e <__DATA_REGION_LENGTH__+0x3e>
    2038:	e8 94       	clt
    203a:	e1 f8       	bld	r14, 1
    203c:	02 c0       	rjmp	.+4      	; 0x2042 <__DATA_REGION_LENGTH__+0x42>
    203e:	e1 e0       	ldi	r30, 0x01	; 1
    2040:	f0 e0       	ldi	r31, 0x00	; 0
    2042:	c7 01       	movw	r24, r14
    2044:	80 71       	andi	r24, 0x10	; 16
    2046:	99 27       	eor	r25, r25
    2048:	9a 87       	std	Y+10, r25	; 0x0a
    204a:	89 87       	std	Y+9, r24	; 0x09
    204c:	e4 fe       	sbrs	r14, 4
    204e:	1f c0       	rjmp	.+62     	; 0x208e <__DATA_REGION_LENGTH__+0x8e>
    2050:	ab 89       	ldd	r26, Y+19	; 0x13
    2052:	bc 89       	ldd	r27, Y+20	; 0x14
    2054:	2c 91       	ld	r18, X
    2056:	11 96       	adiw	r26, 0x01	; 1
    2058:	3c 91       	ld	r19, X
    205a:	11 97       	sbiw	r26, 0x01	; 1
    205c:	12 96       	adiw	r26, 0x02	; 2
    205e:	4c 91       	ld	r20, X
    2060:	12 97       	sbiw	r26, 0x02	; 2
    2062:	13 96       	adiw	r26, 0x03	; 3
    2064:	5c 91       	ld	r21, X
    2066:	13 97       	sbiw	r26, 0x03	; 3
    2068:	14 96       	adiw	r26, 0x04	; 4
    206a:	6c 91       	ld	r22, X
    206c:	14 97       	sbiw	r26, 0x04	; 4
    206e:	15 96       	adiw	r26, 0x05	; 5
    2070:	7c 91       	ld	r23, X
    2072:	15 97       	sbiw	r26, 0x05	; 5
    2074:	16 96       	adiw	r26, 0x06	; 6
    2076:	8c 91       	ld	r24, X
    2078:	16 97       	sbiw	r26, 0x06	; 6
    207a:	17 96       	adiw	r26, 0x07	; 7
    207c:	9c 91       	ld	r25, X
    207e:	a0 e0       	ldi	r26, 0x00	; 0
    2080:	0e 94 9e 22 	call	0x453c	; 0x453c <__cmpdi2_s8>
    2084:	21 f0       	breq	.+8      	; 0x208e <__DATA_REGION_LENGTH__+0x8e>
    2086:	8d 81       	ldd	r24, Y+5	; 0x05
    2088:	9e 81       	ldd	r25, Y+6	; 0x06
    208a:	02 97       	sbiw	r24, 0x02	; 2
    208c:	02 c0       	rjmp	.+4      	; 0x2092 <__DATA_REGION_LENGTH__+0x92>
    208e:	8d 81       	ldd	r24, Y+5	; 0x05
    2090:	9e 81       	ldd	r25, Y+6	; 0x06
    2092:	97 01       	movw	r18, r14
    2094:	28 70       	andi	r18, 0x08	; 8
    2096:	33 27       	eor	r19, r19
    2098:	3c 87       	std	Y+12, r19	; 0x0c
    209a:	2b 87       	std	Y+11, r18	; 0x0b
    209c:	e3 fc       	sbrc	r14, 3
    209e:	01 97       	sbiw	r24, 0x01	; 1
    20a0:	ab 89       	ldd	r26, Y+19	; 0x13
    20a2:	bc 89       	ldd	r27, Y+20	; 0x14
    20a4:	4c 90       	ld	r4, X
    20a6:	11 96       	adiw	r26, 0x01	; 1
    20a8:	5c 90       	ld	r5, X
    20aa:	11 97       	sbiw	r26, 0x01	; 1
    20ac:	12 96       	adiw	r26, 0x02	; 2
    20ae:	6c 90       	ld	r6, X
    20b0:	12 97       	sbiw	r26, 0x02	; 2
    20b2:	13 96       	adiw	r26, 0x03	; 3
    20b4:	7c 90       	ld	r7, X
    20b6:	13 97       	sbiw	r26, 0x03	; 3
    20b8:	14 96       	adiw	r26, 0x04	; 4
    20ba:	8c 90       	ld	r8, X
    20bc:	14 97       	sbiw	r26, 0x04	; 4
    20be:	15 96       	adiw	r26, 0x05	; 5
    20c0:	9c 90       	ld	r9, X
    20c2:	15 97       	sbiw	r26, 0x05	; 5
    20c4:	16 96       	adiw	r26, 0x06	; 6
    20c6:	ac 90       	ld	r10, X
    20c8:	16 97       	sbiw	r26, 0x06	; 6
    20ca:	17 96       	adiw	r26, 0x07	; 7
    20cc:	bc 90       	ld	r11, X
    20ce:	a9 81       	ldd	r26, Y+1	; 0x01
    20d0:	ba 81       	ldd	r27, Y+2	; 0x02
    20d2:	18 96       	adiw	r26, 0x08	; 8
    20d4:	cd 90       	ld	r12, X+
    20d6:	dc 90       	ld	r13, X
    20d8:	19 97       	sbiw	r26, 0x09	; 9
    20da:	b1 e0       	ldi	r27, 0x01	; 1
    20dc:	cb 1a       	sub	r12, r27
    20de:	d1 08       	sbc	r13, r1
    20e0:	d1 01       	movw	r26, r2
    20e2:	ac 0d       	add	r26, r12
    20e4:	bd 1d       	adc	r27, r13
    20e6:	1c 92       	st	X, r1
    20e8:	9c 83       	std	Y+4, r25	; 0x04
    20ea:	8b 83       	std	Y+3, r24	; 0x03
    20ec:	9f 01       	movw	r18, r30
    20ee:	28 1b       	sub	r18, r24
    20f0:	39 0b       	sbc	r19, r25
    20f2:	3e 87       	std	Y+14, r19	; 0x0e
    20f4:	2d 87       	std	Y+13, r18	; 0x0d
    20f6:	c7 01       	movw	r24, r14
    20f8:	82 70       	andi	r24, 0x02	; 2
    20fa:	99 27       	eor	r25, r25
    20fc:	98 8b       	std	Y+16, r25	; 0x10
    20fe:	8f 87       	std	Y+15, r24	; 0x0f
    2100:	81 2f       	mov	r24, r17
    2102:	01 2e       	mov	r0, r17
    2104:	00 0c       	add	r0, r0
    2106:	99 0b       	sbc	r25, r25
    2108:	dc 01       	movw	r26, r24
    210a:	a1 54       	subi	r26, 0x41	; 65
    210c:	b1 09       	sbc	r27, r1
    210e:	ba 8b       	std	Y+18, r27	; 0x12
    2110:	a9 8b       	std	Y+17, r26	; 0x11
    2112:	32 e0       	ldi	r19, 0x02	; 2
    2114:	c3 16       	cp	r12, r19
    2116:	d1 04       	cpc	r13, r1
    2118:	34 f4       	brge	.+12     	; 0x2126 <__DATA_REGION_LENGTH__+0x126>
    211a:	89 85       	ldd	r24, Y+9	; 0x09
    211c:	9a 85       	ldd	r25, Y+10	; 0x0a
    211e:	89 2b       	or	r24, r25
    2120:	09 f0       	breq	.+2      	; 0x2124 <__DATA_REGION_LENGTH__+0x124>
    2122:	4c c0       	rjmp	.+152    	; 0x21bc <__DATA_REGION_LENGTH__+0x1bc>
    2124:	73 c0       	rjmp	.+230    	; 0x220c <__stack+0xd>
    2126:	92 01       	movw	r18, r4
    2128:	a3 01       	movw	r20, r6
    212a:	b4 01       	movw	r22, r8
    212c:	c5 01       	movw	r24, r10
    212e:	a0 e0       	ldi	r26, 0x00	; 0
    2130:	0e 94 9e 22 	call	0x453c	; 0x453c <__cmpdi2_s8>
    2134:	81 f1       	breq	.+96     	; 0x2196 <__DATA_REGION_LENGTH__+0x196>
    2136:	b1 e0       	ldi	r27, 0x01	; 1
    2138:	cb 1a       	sub	r12, r27
    213a:	d1 08       	sbc	r13, r1
    213c:	c2 01       	movw	r24, r4
    213e:	8f 70       	andi	r24, 0x0F	; 15
    2140:	99 27       	eor	r25, r25
    2142:	8a 30       	cpi	r24, 0x0A	; 10
    2144:	91 05       	cpc	r25, r1
    2146:	14 f4       	brge	.+4      	; 0x214c <__DATA_REGION_LENGTH__+0x14c>
    2148:	c0 96       	adiw	r24, 0x30	; 48
    214a:	02 c0       	rjmp	.+4      	; 0x2150 <__DATA_REGION_LENGTH__+0x150>
    214c:	89 5a       	subi	r24, 0xA9	; 169
    214e:	9f 4f       	sbci	r25, 0xFF	; 255
    2150:	e9 89       	ldd	r30, Y+17	; 0x11
    2152:	fa 89       	ldd	r31, Y+18	; 0x12
    2154:	7a 97       	sbiw	r30, 0x1a	; 26
    2156:	48 f4       	brcc	.+18     	; 0x216a <__DATA_REGION_LENGTH__+0x16a>
    2158:	9c 01       	movw	r18, r24
    215a:	20 62       	ori	r18, 0x20	; 32
    215c:	21 56       	subi	r18, 0x61	; 97
    215e:	31 09       	sbc	r19, r1
    2160:	2a 31       	cpi	r18, 0x1A	; 26
    2162:	31 05       	cpc	r19, r1
    2164:	10 f4       	brcc	.+4      	; 0x216a <__DATA_REGION_LENGTH__+0x16a>
    2166:	0e 94 d5 22 	call	0x45aa	; 0x45aa <toupper>
    216a:	f1 01       	movw	r30, r2
    216c:	ec 0d       	add	r30, r12
    216e:	fd 1d       	adc	r31, r13
    2170:	80 83       	st	Z, r24
    2172:	2b 81       	ldd	r18, Y+3	; 0x03
    2174:	3c 81       	ldd	r19, Y+4	; 0x04
    2176:	21 50       	subi	r18, 0x01	; 1
    2178:	31 09       	sbc	r19, r1
    217a:	3c 83       	std	Y+4, r19	; 0x04
    217c:	2b 83       	std	Y+3, r18	; 0x03
    217e:	92 01       	movw	r18, r4
    2180:	a3 01       	movw	r20, r6
    2182:	b4 01       	movw	r22, r8
    2184:	c5 01       	movw	r24, r10
    2186:	04 e0       	ldi	r16, 0x04	; 4
    2188:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__lshrdi3>
    218c:	29 01       	movw	r4, r18
    218e:	3a 01       	movw	r6, r20
    2190:	4b 01       	movw	r8, r22
    2192:	5c 01       	movw	r10, r24
    2194:	be cf       	rjmp	.-132    	; 0x2112 <__DATA_REGION_LENGTH__+0x112>
    2196:	8d 85       	ldd	r24, Y+13	; 0x0d
    2198:	9e 85       	ldd	r25, Y+14	; 0x0e
    219a:	ab 81       	ldd	r26, Y+3	; 0x03
    219c:	bc 81       	ldd	r27, Y+4	; 0x04
    219e:	8a 0f       	add	r24, r26
    21a0:	9b 1f       	adc	r25, r27
    21a2:	18 16       	cp	r1, r24
    21a4:	19 06       	cpc	r1, r25
    21a6:	3c f2       	brlt	.-114    	; 0x2136 <__DATA_REGION_LENGTH__+0x136>
    21a8:	1a 16       	cp	r1, r26
    21aa:	1b 06       	cpc	r1, r27
    21ac:	0c f0       	brlt	.+2      	; 0x21b0 <__DATA_REGION_LENGTH__+0x1b0>
    21ae:	b5 cf       	rjmp	.-150    	; 0x211a <__DATA_REGION_LENGTH__+0x11a>
    21b0:	ef 85       	ldd	r30, Y+15	; 0x0f
    21b2:	f8 89       	ldd	r31, Y+16	; 0x10
    21b4:	ef 2b       	or	r30, r31
    21b6:	09 f0       	breq	.+2      	; 0x21ba <__DATA_REGION_LENGTH__+0x1ba>
    21b8:	be cf       	rjmp	.-132    	; 0x2136 <__DATA_REGION_LENGTH__+0x136>
    21ba:	af cf       	rjmp	.-162    	; 0x211a <__DATA_REGION_LENGTH__+0x11a>
    21bc:	ab 89       	ldd	r26, Y+19	; 0x13
    21be:	bc 89       	ldd	r27, Y+20	; 0x14
    21c0:	2c 91       	ld	r18, X
    21c2:	11 96       	adiw	r26, 0x01	; 1
    21c4:	3c 91       	ld	r19, X
    21c6:	11 97       	sbiw	r26, 0x01	; 1
    21c8:	12 96       	adiw	r26, 0x02	; 2
    21ca:	4c 91       	ld	r20, X
    21cc:	12 97       	sbiw	r26, 0x02	; 2
    21ce:	13 96       	adiw	r26, 0x03	; 3
    21d0:	5c 91       	ld	r21, X
    21d2:	13 97       	sbiw	r26, 0x03	; 3
    21d4:	14 96       	adiw	r26, 0x04	; 4
    21d6:	6c 91       	ld	r22, X
    21d8:	14 97       	sbiw	r26, 0x04	; 4
    21da:	15 96       	adiw	r26, 0x05	; 5
    21dc:	7c 91       	ld	r23, X
    21de:	15 97       	sbiw	r26, 0x05	; 5
    21e0:	16 96       	adiw	r26, 0x06	; 6
    21e2:	8c 91       	ld	r24, X
    21e4:	16 97       	sbiw	r26, 0x06	; 6
    21e6:	17 96       	adiw	r26, 0x07	; 7
    21e8:	9c 91       	ld	r25, X
    21ea:	a0 e0       	ldi	r26, 0x00	; 0
    21ec:	0e 94 9e 22 	call	0x453c	; 0x453c <__cmpdi2_s8>
    21f0:	69 f0       	breq	.+26     	; 0x220c <__stack+0xd>
    21f2:	f1 01       	movw	r30, r2
    21f4:	ec 0d       	add	r30, r12
    21f6:	fd 1d       	adc	r31, r13
    21f8:	31 97       	sbiw	r30, 0x01	; 1
    21fa:	10 83       	st	Z, r17
    21fc:	b2 e0       	ldi	r27, 0x02	; 2
    21fe:	cb 1a       	sub	r12, r27
    2200:	d1 08       	sbc	r13, r1
    2202:	f1 01       	movw	r30, r2
    2204:	ec 0d       	add	r30, r12
    2206:	fd 1d       	adc	r31, r13
    2208:	80 e3       	ldi	r24, 0x30	; 48
    220a:	80 83       	st	Z, r24
    220c:	eb 85       	ldd	r30, Y+11	; 0x0b
    220e:	fc 85       	ldd	r31, Y+12	; 0x0c
    2210:	ef 2b       	or	r30, r31
    2212:	41 f0       	breq	.+16     	; 0x2224 <__stack+0x25>
    2214:	f1 e0       	ldi	r31, 0x01	; 1
    2216:	cf 1a       	sub	r12, r31
    2218:	d1 08       	sbc	r13, r1
    221a:	f1 01       	movw	r30, r2
    221c:	ec 0d       	add	r30, r12
    221e:	fd 1d       	adc	r31, r13
    2220:	80 e2       	ldi	r24, 0x20	; 32
    2222:	80 83       	st	Z, r24
    2224:	a9 81       	ldd	r26, Y+1	; 0x01
    2226:	ba 81       	ldd	r27, Y+2	; 0x02
    2228:	18 96       	adiw	r26, 0x08	; 8
    222a:	2d 91       	ld	r18, X+
    222c:	3c 91       	ld	r19, X
    222e:	19 97       	sbiw	r26, 0x09	; 9
    2230:	21 50       	subi	r18, 0x01	; 1
    2232:	31 09       	sbc	r19, r1
    2234:	2c 19       	sub	r18, r12
    2236:	3d 09       	sbc	r19, r13
    2238:	c2 0c       	add	r12, r2
    223a:	d3 1c       	adc	r13, r3
    223c:	a6 01       	movw	r20, r12
    223e:	60 e8       	ldi	r22, 0x80	; 128
    2240:	0d 81       	ldd	r16, Y+5	; 0x05
    2242:	1e 81       	ldd	r17, Y+6	; 0x06
    2244:	8f 81       	ldd	r24, Y+7	; 0x07
    2246:	98 85       	ldd	r25, Y+8	; 0x08
    2248:	0e 94 37 15 	call	0x2a6e	; 0x2a6e <__pad>
    224c:	9c 01       	movw	r18, r24
    224e:	ef 81       	ldd	r30, Y+7	; 0x07
    2250:	f8 85       	ldd	r31, Y+8	; 0x08
    2252:	80 81       	ld	r24, Z
    2254:	91 81       	ldd	r25, Z+1	; 0x01
    2256:	90 ff       	sbrs	r25, 0
    2258:	09 c0       	rjmp	.+18     	; 0x226c <__stack+0x6d>
    225a:	a9 81       	ldd	r26, Y+1	; 0x01
    225c:	ba 81       	ldd	r27, Y+2	; 0x02
    225e:	12 96       	adiw	r26, 0x02	; 2
    2260:	8d 91       	ld	r24, X+
    2262:	9c 91       	ld	r25, X
    2264:	13 97       	sbiw	r26, 0x03	; 3
    2266:	82 17       	cp	r24, r18
    2268:	93 07       	cpc	r25, r19
    226a:	0c f4       	brge	.+2      	; 0x226e <__stack+0x6f>
    226c:	c9 01       	movw	r24, r18
    226e:	64 96       	adiw	r28, 0x14	; 20
    2270:	e2 e1       	ldi	r30, 0x12	; 18
    2272:	0c 94 28 21 	jmp	0x4250	; 0x4250 <__epilogue_restores__>

Disassembly of section .text.__pop_float:

0000412a <__pop_float>:
    412a:	fa 01       	movw	r30, r20
    412c:	60 38       	cpi	r22, 0x80	; 128
    412e:	71 05       	cpc	r23, r1
    4130:	cc f0       	brlt	.+50     	; 0x4164 <__pop_float+0x3a>
    4132:	62 38       	cpi	r22, 0x82	; 130
    4134:	71 05       	cpc	r23, r1
    4136:	1c f0       	brlt	.+6      	; 0x413e <__pop_float+0x14>
    4138:	63 38       	cpi	r22, 0x83	; 131
    413a:	71 05       	cpc	r23, r1
    413c:	99 f4       	brne	.+38     	; 0x4164 <__pop_float+0x3a>
    413e:	a0 81       	ld	r26, Z
    4140:	b1 81       	ldd	r27, Z+1	; 0x01
    4142:	9d 01       	movw	r18, r26
    4144:	2c 5f       	subi	r18, 0xFC	; 252
    4146:	3f 4f       	sbci	r19, 0xFF	; 255
    4148:	31 83       	std	Z+1, r19	; 0x01
    414a:	20 83       	st	Z, r18
    414c:	4d 91       	ld	r20, X+
    414e:	5d 91       	ld	r21, X+
    4150:	6d 91       	ld	r22, X+
    4152:	7c 91       	ld	r23, X
    4154:	fc 01       	movw	r30, r24
    4156:	40 83       	st	Z, r20
    4158:	51 83       	std	Z+1, r21	; 0x01
    415a:	62 83       	std	Z+2, r22	; 0x02
    415c:	73 83       	std	Z+3, r23	; 0x03
    415e:	81 e0       	ldi	r24, 0x01	; 1
    4160:	90 e0       	ldi	r25, 0x00	; 0
    4162:	08 95       	ret
    4164:	80 e0       	ldi	r24, 0x00	; 0
    4166:	90 e0       	ldi	r25, 0x00	; 0
    4168:	08 95       	ret

Disassembly of section .text.__pop_int:

000023f4 <__pop_int>:
    23f4:	0f 93       	push	r16
    23f6:	1f 93       	push	r17
    23f8:	cf 93       	push	r28
    23fa:	df 93       	push	r29
    23fc:	fc 01       	movw	r30, r24
    23fe:	d9 01       	movw	r26, r18
    2400:	68 38       	cpi	r22, 0x88	; 136
    2402:	71 05       	cpc	r23, r1
    2404:	31 f1       	breq	.+76     	; 0x2452 <__pop_int+0x5e>
    2406:	94 f4       	brge	.+36     	; 0x242c <__pop_int+0x38>
    2408:	61 38       	cpi	r22, 0x81	; 129
    240a:	71 05       	cpc	r23, r1
    240c:	b1 f1       	breq	.+108    	; 0x247a <__pop_int+0x86>
    240e:	2c f4       	brge	.+10     	; 0x241a <__pop_int+0x26>
    2410:	60 38       	cpi	r22, 0x80	; 128
    2412:	71 05       	cpc	r23, r1
    2414:	09 f4       	brne	.+2      	; 0x2418 <__pop_int+0x24>
    2416:	78 c0       	rjmp	.+240    	; 0x2508 <__pop_int+0x114>
    2418:	9f c0       	rjmp	.+318    	; 0x2558 <__pop_int+0x164>
    241a:	62 38       	cpi	r22, 0x82	; 130
    241c:	71 05       	cpc	r23, r1
    241e:	09 f4       	brne	.+2      	; 0x2422 <__pop_int+0x2e>
    2420:	59 c0       	rjmp	.+178    	; 0x24d4 <__pop_int+0xe0>
    2422:	64 38       	cpi	r22, 0x84	; 132
    2424:	71 05       	cpc	r23, r1
    2426:	09 f4       	brne	.+2      	; 0x242a <__pop_int+0x36>
    2428:	6f c0       	rjmp	.+222    	; 0x2508 <__pop_int+0x114>
    242a:	96 c0       	rjmp	.+300    	; 0x2558 <__pop_int+0x164>
    242c:	60 3a       	cpi	r22, 0xA0	; 160
    242e:	71 05       	cpc	r23, r1
    2430:	09 f4       	brne	.+2      	; 0x2434 <__pop_int+0x40>
    2432:	48 c0       	rjmp	.+144    	; 0x24c4 <__pop_int+0xd0>
    2434:	2c f4       	brge	.+10     	; 0x2440 <__pop_int+0x4c>
    2436:	60 39       	cpi	r22, 0x90	; 144
    2438:	71 05       	cpc	r23, r1
    243a:	09 f4       	brne	.+2      	; 0x243e <__pop_int+0x4a>
    243c:	4b c0       	rjmp	.+150    	; 0x24d4 <__pop_int+0xe0>
    243e:	8c c0       	rjmp	.+280    	; 0x2558 <__pop_int+0x164>
    2440:	60 3c       	cpi	r22, 0xC0	; 192
    2442:	71 05       	cpc	r23, r1
    2444:	09 f4       	brne	.+2      	; 0x2448 <__pop_int+0x54>
    2446:	76 c0       	rjmp	.+236    	; 0x2534 <__pop_int+0x140>
    2448:	60 3f       	cpi	r22, 0xF0	; 240
    244a:	71 05       	cpc	r23, r1
    244c:	09 f4       	brne	.+2      	; 0x2450 <__pop_int+0x5c>
    244e:	72 c0       	rjmp	.+228    	; 0x2534 <__pop_int+0x140>
    2450:	83 c0       	rjmp	.+262    	; 0x2558 <__pop_int+0x164>
    2452:	cd 91       	ld	r28, X+
    2454:	dc 91       	ld	r29, X
    2456:	11 97       	sbiw	r26, 0x01	; 1
    2458:	ce 01       	movw	r24, r28
    245a:	02 96       	adiw	r24, 0x02	; 2
    245c:	8d 93       	st	X+, r24
    245e:	9c 93       	st	X, r25
    2460:	45 2b       	or	r20, r21
    2462:	39 f0       	breq	.+14     	; 0x2472 <__pop_int+0x7e>
    2464:	98 81       	ld	r25, Y
    2466:	89 2f       	mov	r24, r25
    2468:	88 0f       	add	r24, r24
    246a:	88 0b       	sbc	r24, r24
    246c:	90 83       	st	Z, r25
    246e:	81 83       	std	Z+1, r24	; 0x01
    2470:	5b c0       	rjmp	.+182    	; 0x2528 <__pop_int+0x134>
    2472:	88 81       	ld	r24, Y
    2474:	80 83       	st	Z, r24
    2476:	11 82       	std	Z+1, r1	; 0x01
    2478:	68 c0       	rjmp	.+208    	; 0x254a <__pop_int+0x156>
    247a:	cd 91       	ld	r28, X+
    247c:	dc 91       	ld	r29, X
    247e:	11 97       	sbiw	r26, 0x01	; 1
    2480:	ce 01       	movw	r24, r28
    2482:	04 96       	adiw	r24, 0x04	; 4
    2484:	8d 93       	st	X+, r24
    2486:	9c 93       	st	X, r25
    2488:	45 2b       	or	r20, r21
    248a:	99 f0       	breq	.+38     	; 0x24b2 <__pop_int+0xbe>
    248c:	88 81       	ld	r24, Y
    248e:	99 81       	ldd	r25, Y+1	; 0x01
    2490:	aa 81       	ldd	r26, Y+2	; 0x02
    2492:	bb 81       	ldd	r27, Y+3	; 0x03
    2494:	ac 01       	movw	r20, r24
    2496:	bd 01       	movw	r22, r26
    2498:	77 0f       	add	r23, r23
    249a:	44 0b       	sbc	r20, r20
    249c:	54 2f       	mov	r21, r20
    249e:	ba 01       	movw	r22, r20
    24a0:	80 83       	st	Z, r24
    24a2:	91 83       	std	Z+1, r25	; 0x01
    24a4:	a2 83       	std	Z+2, r26	; 0x02
    24a6:	b3 83       	std	Z+3, r27	; 0x03
    24a8:	44 83       	std	Z+4, r20	; 0x04
    24aa:	45 83       	std	Z+5, r20	; 0x05
    24ac:	46 83       	std	Z+6, r20	; 0x06
    24ae:	47 83       	std	Z+7, r20	; 0x07
    24b0:	28 c0       	rjmp	.+80     	; 0x2502 <__pop_int+0x10e>
    24b2:	08 81       	ld	r16, Y
    24b4:	19 81       	ldd	r17, Y+1	; 0x01
    24b6:	2a 81       	ldd	r18, Y+2	; 0x02
    24b8:	3b 81       	ldd	r19, Y+3	; 0x03
    24ba:	00 83       	st	Z, r16
    24bc:	11 83       	std	Z+1, r17	; 0x01
    24be:	22 83       	std	Z+2, r18	; 0x02
    24c0:	33 83       	std	Z+3, r19	; 0x03
    24c2:	45 c0       	rjmp	.+138    	; 0x254e <__pop_int+0x15a>
    24c4:	cd 91       	ld	r28, X+
    24c6:	dc 91       	ld	r29, X
    24c8:	11 97       	sbiw	r26, 0x01	; 1
    24ca:	ce 01       	movw	r24, r28
    24cc:	02 96       	adiw	r24, 0x02	; 2
    24ce:	8d 93       	st	X+, r24
    24d0:	9c 93       	st	X, r25
    24d2:	23 c0       	rjmp	.+70     	; 0x251a <__pop_int+0x126>
    24d4:	cd 91       	ld	r28, X+
    24d6:	dc 91       	ld	r29, X
    24d8:	11 97       	sbiw	r26, 0x01	; 1
    24da:	ce 01       	movw	r24, r28
    24dc:	08 96       	adiw	r24, 0x08	; 8
    24de:	8d 93       	st	X+, r24
    24e0:	9c 93       	st	X, r25
    24e2:	78 81       	ld	r23, Y
    24e4:	69 81       	ldd	r22, Y+1	; 0x01
    24e6:	5a 81       	ldd	r21, Y+2	; 0x02
    24e8:	4b 81       	ldd	r20, Y+3	; 0x03
    24ea:	3c 81       	ldd	r19, Y+4	; 0x04
    24ec:	2d 81       	ldd	r18, Y+5	; 0x05
    24ee:	9e 81       	ldd	r25, Y+6	; 0x06
    24f0:	8f 81       	ldd	r24, Y+7	; 0x07
    24f2:	70 83       	st	Z, r23
    24f4:	61 83       	std	Z+1, r22	; 0x01
    24f6:	52 83       	std	Z+2, r21	; 0x02
    24f8:	43 83       	std	Z+3, r20	; 0x03
    24fa:	34 83       	std	Z+4, r19	; 0x04
    24fc:	25 83       	std	Z+5, r18	; 0x05
    24fe:	96 83       	std	Z+6, r25	; 0x06
    2500:	87 83       	std	Z+7, r24	; 0x07
    2502:	81 e0       	ldi	r24, 0x01	; 1
    2504:	90 e0       	ldi	r25, 0x00	; 0
    2506:	2a c0       	rjmp	.+84     	; 0x255c <__pop_int+0x168>
    2508:	cd 91       	ld	r28, X+
    250a:	dc 91       	ld	r29, X
    250c:	11 97       	sbiw	r26, 0x01	; 1
    250e:	ce 01       	movw	r24, r28
    2510:	02 96       	adiw	r24, 0x02	; 2
    2512:	8d 93       	st	X+, r24
    2514:	9c 93       	st	X, r25
    2516:	45 2b       	or	r20, r21
    2518:	a1 f0       	breq	.+40     	; 0x2542 <__pop_int+0x14e>
    251a:	99 81       	ldd	r25, Y+1	; 0x01
    251c:	28 81       	ld	r18, Y
    251e:	89 2f       	mov	r24, r25
    2520:	88 0f       	add	r24, r24
    2522:	88 0b       	sbc	r24, r24
    2524:	20 83       	st	Z, r18
    2526:	91 83       	std	Z+1, r25	; 0x01
    2528:	82 83       	std	Z+2, r24	; 0x02
    252a:	83 83       	std	Z+3, r24	; 0x03
    252c:	84 83       	std	Z+4, r24	; 0x04
    252e:	85 83       	std	Z+5, r24	; 0x05
    2530:	86 83       	std	Z+6, r24	; 0x06
    2532:	e6 cf       	rjmp	.-52     	; 0x2500 <__pop_int+0x10c>
    2534:	cd 91       	ld	r28, X+
    2536:	dc 91       	ld	r29, X
    2538:	11 97       	sbiw	r26, 0x01	; 1
    253a:	ce 01       	movw	r24, r28
    253c:	02 96       	adiw	r24, 0x02	; 2
    253e:	8d 93       	st	X+, r24
    2540:	9c 93       	st	X, r25
    2542:	08 81       	ld	r16, Y
    2544:	19 81       	ldd	r17, Y+1	; 0x01
    2546:	00 83       	st	Z, r16
    2548:	11 83       	std	Z+1, r17	; 0x01
    254a:	12 82       	std	Z+2, r1	; 0x02
    254c:	13 82       	std	Z+3, r1	; 0x03
    254e:	14 82       	std	Z+4, r1	; 0x04
    2550:	15 82       	std	Z+5, r1	; 0x05
    2552:	16 82       	std	Z+6, r1	; 0x06
    2554:	17 82       	std	Z+7, r1	; 0x07
    2556:	d5 cf       	rjmp	.-86     	; 0x2502 <__pop_int+0x10e>
    2558:	80 e0       	ldi	r24, 0x00	; 0
    255a:	90 e0       	ldi	r25, 0x00	; 0
    255c:	df 91       	pop	r29
    255e:	cf 91       	pop	r28
    2560:	1f 91       	pop	r17
    2562:	0f 91       	pop	r16
    2564:	08 95       	ret

Disassembly of section .text.__pop_ptr:

00002c5a <__pop_ptr>:
    2c5a:	cf 93       	push	r28
    2c5c:	df 93       	push	r29
    2c5e:	dc 01       	movw	r26, r24
    2c60:	f9 01       	movw	r30, r18
    2c62:	64 38       	cpi	r22, 0x84	; 132
    2c64:	71 05       	cpc	r23, r1
    2c66:	d9 f1       	breq	.+118    	; 0x2cde <__pop_ptr+0x84>
    2c68:	64 f4       	brge	.+24     	; 0x2c82 <__pop_ptr+0x28>
    2c6a:	61 38       	cpi	r22, 0x81	; 129
    2c6c:	71 05       	cpc	r23, r1
    2c6e:	21 f1       	breq	.+72     	; 0x2cb8 <__pop_ptr+0x5e>
    2c70:	62 38       	cpi	r22, 0x82	; 130
    2c72:	71 05       	cpc	r23, r1
    2c74:	09 f4       	brne	.+2      	; 0x2c78 <__pop_ptr+0x1e>
    2c76:	40 c0       	rjmp	.+128    	; 0x2cf8 <__pop_ptr+0x9e>
    2c78:	60 38       	cpi	r22, 0x80	; 128
    2c7a:	71 05       	cpc	r23, r1
    2c7c:	09 f0       	breq	.+2      	; 0x2c80 <__pop_ptr+0x26>
    2c7e:	54 c0       	rjmp	.+168    	; 0x2d28 <__pop_ptr+0xce>
    2c80:	2e c0       	rjmp	.+92     	; 0x2cde <__pop_ptr+0x84>
    2c82:	60 39       	cpi	r22, 0x90	; 144
    2c84:	71 05       	cpc	r23, r1
    2c86:	c1 f1       	breq	.+112    	; 0x2cf8 <__pop_ptr+0x9e>
    2c88:	84 f4       	brge	.+32     	; 0x2caa <__pop_ptr+0x50>
    2c8a:	68 38       	cpi	r22, 0x88	; 136
    2c8c:	71 05       	cpc	r23, r1
    2c8e:	09 f0       	breq	.+2      	; 0x2c92 <__pop_ptr+0x38>
    2c90:	4b c0       	rjmp	.+150    	; 0x2d28 <__pop_ptr+0xce>
    2c92:	c0 81       	ld	r28, Z
    2c94:	d1 81       	ldd	r29, Z+1	; 0x01
    2c96:	ce 01       	movw	r24, r28
    2c98:	02 96       	adiw	r24, 0x02	; 2
    2c9a:	91 83       	std	Z+1, r25	; 0x01
    2c9c:	80 83       	st	Z, r24
    2c9e:	e8 81       	ld	r30, Y
    2ca0:	f9 81       	ldd	r31, Y+1	; 0x01
    2ca2:	ed 93       	st	X+, r30
    2ca4:	fc 93       	st	X, r31
    2ca6:	40 83       	st	Z, r20
    2ca8:	3c c0       	rjmp	.+120    	; 0x2d22 <__pop_ptr+0xc8>
    2caa:	60 3a       	cpi	r22, 0xA0	; 160
    2cac:	71 05       	cpc	r23, r1
    2cae:	b9 f0       	breq	.+46     	; 0x2cde <__pop_ptr+0x84>
    2cb0:	60 3c       	cpi	r22, 0xC0	; 192
    2cb2:	71 05       	cpc	r23, r1
    2cb4:	a1 f0       	breq	.+40     	; 0x2cde <__pop_ptr+0x84>
    2cb6:	38 c0       	rjmp	.+112    	; 0x2d28 <__pop_ptr+0xce>
    2cb8:	c0 81       	ld	r28, Z
    2cba:	d1 81       	ldd	r29, Z+1	; 0x01
    2cbc:	ce 01       	movw	r24, r28
    2cbe:	02 96       	adiw	r24, 0x02	; 2
    2cc0:	91 83       	std	Z+1, r25	; 0x01
    2cc2:	80 83       	st	Z, r24
    2cc4:	e8 81       	ld	r30, Y
    2cc6:	f9 81       	ldd	r31, Y+1	; 0x01
    2cc8:	ed 93       	st	X+, r30
    2cca:	fc 93       	st	X, r31
    2ccc:	05 2e       	mov	r0, r21
    2cce:	00 0c       	add	r0, r0
    2cd0:	66 0b       	sbc	r22, r22
    2cd2:	77 0b       	sbc	r23, r23
    2cd4:	40 83       	st	Z, r20
    2cd6:	51 83       	std	Z+1, r21	; 0x01
    2cd8:	62 83       	std	Z+2, r22	; 0x02
    2cda:	73 83       	std	Z+3, r23	; 0x03
    2cdc:	22 c0       	rjmp	.+68     	; 0x2d22 <__pop_ptr+0xc8>
    2cde:	c0 81       	ld	r28, Z
    2ce0:	d1 81       	ldd	r29, Z+1	; 0x01
    2ce2:	ce 01       	movw	r24, r28
    2ce4:	02 96       	adiw	r24, 0x02	; 2
    2ce6:	91 83       	std	Z+1, r25	; 0x01
    2ce8:	80 83       	st	Z, r24
    2cea:	e8 81       	ld	r30, Y
    2cec:	f9 81       	ldd	r31, Y+1	; 0x01
    2cee:	ed 93       	st	X+, r30
    2cf0:	fc 93       	st	X, r31
    2cf2:	51 83       	std	Z+1, r21	; 0x01
    2cf4:	40 83       	st	Z, r20
    2cf6:	15 c0       	rjmp	.+42     	; 0x2d22 <__pop_ptr+0xc8>
    2cf8:	c0 81       	ld	r28, Z
    2cfa:	d1 81       	ldd	r29, Z+1	; 0x01
    2cfc:	ce 01       	movw	r24, r28
    2cfe:	02 96       	adiw	r24, 0x02	; 2
    2d00:	91 83       	std	Z+1, r25	; 0x01
    2d02:	80 83       	st	Z, r24
    2d04:	e8 81       	ld	r30, Y
    2d06:	f9 81       	ldd	r31, Y+1	; 0x01
    2d08:	ed 93       	st	X+, r30
    2d0a:	fc 93       	st	X, r31
    2d0c:	51 83       	std	Z+1, r21	; 0x01
    2d0e:	40 83       	st	Z, r20
    2d10:	85 2f       	mov	r24, r21
    2d12:	88 0f       	add	r24, r24
    2d14:	88 0b       	sbc	r24, r24
    2d16:	82 83       	std	Z+2, r24	; 0x02
    2d18:	83 83       	std	Z+3, r24	; 0x03
    2d1a:	84 83       	std	Z+4, r24	; 0x04
    2d1c:	85 83       	std	Z+5, r24	; 0x05
    2d1e:	86 83       	std	Z+6, r24	; 0x06
    2d20:	87 83       	std	Z+7, r24	; 0x07
    2d22:	81 e0       	ldi	r24, 0x01	; 1
    2d24:	90 e0       	ldi	r25, 0x00	; 0
    2d26:	02 c0       	rjmp	.+4      	; 0x2d2c <__pop_ptr+0xd2>
    2d28:	80 e0       	ldi	r24, 0x00	; 0
    2d2a:	90 e0       	ldi	r25, 0x00	; 0
    2d2c:	df 91       	pop	r29
    2d2e:	cf 91       	pop	r28
    2d30:	08 95       	ret

Disassembly of section .text.sprintf:

000043b6 <sprintf>:
    43b6:	a0 e0       	ldi	r26, 0x00	; 0
    43b8:	b0 e0       	ldi	r27, 0x00	; 0
    43ba:	e1 ee       	ldi	r30, 0xE1	; 225
    43bc:	f1 e2       	ldi	r31, 0x21	; 33
    43be:	0c 94 01 21 	jmp	0x4202	; 0x4202 <__prologue_saves__+0x20>
    43c2:	9e 01       	movw	r18, r28
    43c4:	25 5f       	subi	r18, 0xF5	; 245
    43c6:	3f 4f       	sbci	r19, 0xFF	; 255
    43c8:	48 85       	ldd	r20, Y+8	; 0x08
    43ca:	59 85       	ldd	r21, Y+9	; 0x09
    43cc:	6a 85       	ldd	r22, Y+10	; 0x0a
    43ce:	8e 81       	ldd	r24, Y+6	; 0x06
    43d0:	9f 81       	ldd	r25, Y+7	; 0x07
    43d2:	0e 94 86 22 	call	0x450c	; 0x450c <vsprintf>
    43d6:	e2 e0       	ldi	r30, 0x02	; 2
    43d8:	0c 94 38 21 	jmp	0x4270	; 0x4270 <__epilogue_restores__+0x20>

Disassembly of section .text.vsprintf:

0000450c <vsprintf>:
    450c:	0f 93       	push	r16
    450e:	1f 93       	push	r17
    4510:	89 01       	movw	r16, r18
    4512:	9a 01       	movw	r18, r20
    4514:	46 2f       	mov	r20, r22
    4516:	6f ef       	ldi	r22, 0xFF	; 255
    4518:	7f e7       	ldi	r23, 0x7F	; 127
    451a:	0e 94 4f 1b 	call	0x369e	; 0x369e <vsnprintf>
    451e:	1f 91       	pop	r17
    4520:	0f 91       	pop	r16
    4522:	08 95       	ret

Disassembly of section .text.atoi:

00003918 <atoi>:
    3918:	cf 93       	push	r28
    391a:	9b 01       	movw	r18, r22
    391c:	48 2f       	mov	r20, r24
    391e:	f9 01       	movw	r30, r18
    3920:	54 2f       	mov	r21, r20
    3922:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    3926:	60 32       	cpi	r22, 0x20	; 32
    3928:	b9 f1       	breq	.+110    	; 0x3998 <atoi+0x80>
    392a:	86 2f       	mov	r24, r22
    392c:	06 2e       	mov	r0, r22
    392e:	00 0c       	add	r0, r0
    3930:	99 0b       	sbc	r25, r25
    3932:	09 97       	sbiw	r24, 0x09	; 9
    3934:	05 97       	sbiw	r24, 0x05	; 5
    3936:	80 f1       	brcs	.+96     	; 0x3998 <atoi+0x80>
    3938:	6b 32       	cpi	r22, 0x2B	; 43
    393a:	49 f5       	brne	.+82     	; 0x398e <atoi+0x76>
    393c:	a0 e0       	ldi	r26, 0x00	; 0
    393e:	b0 e0       	ldi	r27, 0x00	; 0
    3940:	2f 5f       	subi	r18, 0xFF	; 255
    3942:	3f 4f       	sbci	r19, 0xFF	; 255
    3944:	4f 4f       	sbci	r20, 0xFF	; 255
    3946:	02 c0       	rjmp	.+4      	; 0x394c <atoi+0x34>
    3948:	a0 e0       	ldi	r26, 0x00	; 0
    394a:	b0 e0       	ldi	r27, 0x00	; 0
    394c:	80 e0       	ldi	r24, 0x00	; 0
    394e:	90 e0       	ldi	r25, 0x00	; 0
    3950:	ca e0       	ldi	r28, 0x0A	; 10
    3952:	f9 01       	movw	r30, r18
    3954:	54 2f       	mov	r21, r20
    3956:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    395a:	06 2e       	mov	r0, r22
    395c:	00 0c       	add	r0, r0
    395e:	77 0b       	sbc	r23, r23
    3960:	60 53       	subi	r22, 0x30	; 48
    3962:	71 09       	sbc	r23, r1
    3964:	6a 30       	cpi	r22, 0x0A	; 10
    3966:	71 05       	cpc	r23, r1
    3968:	60 f4       	brcc	.+24     	; 0x3982 <atoi+0x6a>
    396a:	c8 9f       	mul	r28, r24
    396c:	f0 01       	movw	r30, r0
    396e:	c9 9f       	mul	r28, r25
    3970:	f0 0d       	add	r31, r0
    3972:	11 24       	eor	r1, r1
    3974:	2f 5f       	subi	r18, 0xFF	; 255
    3976:	3f 4f       	sbci	r19, 0xFF	; 255
    3978:	4f 4f       	sbci	r20, 0xFF	; 255
    397a:	cf 01       	movw	r24, r30
    397c:	86 1b       	sub	r24, r22
    397e:	97 0b       	sbc	r25, r23
    3980:	e8 cf       	rjmp	.-48     	; 0x3952 <atoi+0x3a>
    3982:	ab 2b       	or	r26, r27
    3984:	69 f4       	brne	.+26     	; 0x39a0 <atoi+0x88>
    3986:	91 95       	neg	r25
    3988:	81 95       	neg	r24
    398a:	91 09       	sbc	r25, r1
    398c:	09 c0       	rjmp	.+18     	; 0x39a0 <atoi+0x88>
    398e:	6d 32       	cpi	r22, 0x2D	; 45
    3990:	d9 f6       	brne	.-74     	; 0x3948 <atoi+0x30>
    3992:	a1 e0       	ldi	r26, 0x01	; 1
    3994:	b0 e0       	ldi	r27, 0x00	; 0
    3996:	d4 cf       	rjmp	.-88     	; 0x3940 <atoi+0x28>
    3998:	2f 5f       	subi	r18, 0xFF	; 255
    399a:	3f 4f       	sbci	r19, 0xFF	; 255
    399c:	4f 4f       	sbci	r20, 0xFF	; 255
    399e:	bf cf       	rjmp	.-130    	; 0x391e <atoi+0x6>
    39a0:	cf 91       	pop	r28
    39a2:	08 95       	ret

Disassembly of section .text.memset:

00004598 <memset>:
    4598:	fc 01       	movw	r30, r24
    459a:	48 0f       	add	r20, r24
    459c:	59 1f       	adc	r21, r25
    459e:	e4 17       	cp	r30, r20
    45a0:	f5 07       	cpc	r31, r21
    45a2:	11 f0       	breq	.+4      	; 0x45a8 <memset+0x10>
    45a4:	61 93       	st	Z+, r22
    45a6:	fb cf       	rjmp	.-10     	; 0x459e <memset+0x6>
    45a8:	08 95       	ret

Disassembly of section .text.strcmp:

00004060 <strcmp>:
    4060:	cf 92       	push	r12
    4062:	df 92       	push	r13
    4064:	ef 92       	push	r14
    4066:	6b 01       	movw	r12, r22
    4068:	e8 2e       	mov	r14, r24
    406a:	f6 01       	movw	r30, r12
    406c:	5e 2d       	mov	r21, r14
    406e:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    4072:	86 2f       	mov	r24, r22
    4074:	f9 01       	movw	r30, r18
    4076:	54 2f       	mov	r21, r20
    4078:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    407c:	86 13       	cpse	r24, r22
    407e:	0b c0       	rjmp	.+22     	; 0x4096 <strcmp+0x36>
    4080:	88 23       	and	r24, r24
    4082:	41 f0       	breq	.+16     	; 0x4094 <strcmp+0x34>
    4084:	8f ef       	ldi	r24, 0xFF	; 255
    4086:	c8 1a       	sub	r12, r24
    4088:	d8 0a       	sbc	r13, r24
    408a:	e8 0a       	sbc	r14, r24
    408c:	2f 5f       	subi	r18, 0xFF	; 255
    408e:	3f 4f       	sbci	r19, 0xFF	; 255
    4090:	4f 4f       	sbci	r20, 0xFF	; 255
    4092:	eb cf       	rjmp	.-42     	; 0x406a <strcmp+0xa>
    4094:	68 2f       	mov	r22, r24
    4096:	90 e0       	ldi	r25, 0x00	; 0
    4098:	86 1b       	sub	r24, r22
    409a:	91 09       	sbc	r25, r1
    409c:	ef 90       	pop	r14
    409e:	df 90       	pop	r13
    40a0:	cf 90       	pop	r12
    40a2:	08 95       	ret

Disassembly of section .text.strlen:

00004400 <strlen>:
    4400:	9b 01       	movw	r18, r22
    4402:	48 2f       	mov	r20, r24
    4404:	a8 2f       	mov	r26, r24
    4406:	cb 01       	movw	r24, r22
    4408:	fc 01       	movw	r30, r24
    440a:	5a 2f       	mov	r21, r26
    440c:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    4410:	66 23       	and	r22, r22
    4412:	19 f0       	breq	.+6      	; 0x441a <strlen+0x1a>
    4414:	01 96       	adiw	r24, 0x01	; 1
    4416:	a1 1d       	adc	r26, r1
    4418:	f7 cf       	rjmp	.-18     	; 0x4408 <strlen+0x8>
    441a:	64 2f       	mov	r22, r20
    441c:	a9 01       	movw	r20, r18
    441e:	84 1b       	sub	r24, r20
    4420:	95 0b       	sbc	r25, r21
    4422:	08 95       	ret

Disassembly of section .text.tolower:

000045bc <tolower>:
    45bc:	9c 01       	movw	r18, r24
    45be:	21 54       	subi	r18, 0x41	; 65
    45c0:	31 09       	sbc	r19, r1
    45c2:	2a 31       	cpi	r18, 0x1A	; 26
    45c4:	31 05       	cpc	r19, r1
    45c6:	08 f4       	brcc	.+2      	; 0x45ca <tolower+0xe>
    45c8:	80 62       	ori	r24, 0x20	; 32
    45ca:	08 95       	ret

Disassembly of section .text.toupper:

000045aa <toupper>:
    45aa:	9c 01       	movw	r18, r24
    45ac:	21 56       	subi	r18, 0x61	; 97
    45ae:	31 09       	sbc	r19, r1
    45b0:	2a 31       	cpi	r18, 0x1A	; 26
    45b2:	31 05       	cpc	r19, r1
    45b4:	10 f4       	brcc	.+4      	; 0x45ba <toupper+0x10>
    45b6:	8f 75       	andi	r24, 0x5F	; 95
    45b8:	99 27       	eor	r25, r25
    45ba:	08 95       	ret

Disassembly of section .text._Exit:

000046a2 <_Exit>:
    46a2:	0e 94 bb 00 	call	0x176	; 0x176 <_exit>

Disassembly of section .text.__vsprintf:

00004524 <__vsprintf>:
    4524:	0f 93       	push	r16
    4526:	1f 93       	push	r17
    4528:	89 01       	movw	r16, r18
    452a:	9a 01       	movw	r18, r20
    452c:	46 2f       	mov	r20, r22
    452e:	6f ef       	ldi	r22, 0xFF	; 255
    4530:	7f e7       	ldi	r23, 0x7F	; 127
    4532:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <__vsnprintf>
    4536:	1f 91       	pop	r17
    4538:	0f 91       	pop	r16
    453a:	08 95       	ret

Disassembly of section .text.__vsnprintf:

000035fa <__vsnprintf>:
    35fa:	6f 92       	push	r6
    35fc:	7f 92       	push	r7
    35fe:	8f 92       	push	r8
    3600:	ef 92       	push	r14
    3602:	ff 92       	push	r15
    3604:	0f 93       	push	r16
    3606:	1f 93       	push	r17
    3608:	cf 93       	push	r28
    360a:	df 93       	push	r29
    360c:	cd b7       	in	r28, 0x3d	; 61
    360e:	de b7       	in	r29, 0x3e	; 62
    3610:	61 97       	sbiw	r28, 0x11	; 17
    3612:	0f b6       	in	r0, 0x3f	; 63
    3614:	f8 94       	cli
    3616:	de bf       	out	0x3e, r29	; 62
    3618:	0f be       	out	0x3f, r0	; 63
    361a:	cd bf       	out	0x3d, r28	; 61
    361c:	fe 01       	movw	r30, r28
    361e:	31 96       	adiw	r30, 0x01	; 1
    3620:	51 e1       	ldi	r21, 0x11	; 17
    3622:	df 01       	movw	r26, r30
    3624:	1d 92       	st	X+, r1
    3626:	5a 95       	dec	r21
    3628:	e9 f7       	brne	.-6      	; 0x3624 <__vsnprintf+0x2a>
    362a:	a2 e0       	ldi	r26, 0x02	; 2
    362c:	b1 e0       	ldi	r27, 0x01	; 1
    362e:	ba 83       	std	Y+2, r27	; 0x02
    3630:	a9 83       	std	Y+1, r26	; 0x01
    3632:	9c 83       	std	Y+4, r25	; 0x04
    3634:	8b 83       	std	Y+3, r24	; 0x03
    3636:	77 ff       	sbrs	r23, 7
    3638:	09 c0       	rjmp	.+18     	; 0x364c <__vsnprintf+0x52>
    363a:	8f e4       	ldi	r24, 0x4F	; 79
    363c:	90 e0       	ldi	r25, 0x00	; 0
    363e:	90 93 2d 12 	sts	0x122D, r25	; 0x80122d <__errno_val+0x1>
    3642:	80 93 2c 12 	sts	0x122C, r24	; 0x80122c <__errno_val>
    3646:	8f ef       	ldi	r24, 0xFF	; 255
    3648:	9f ef       	ldi	r25, 0xFF	; 255
    364a:	19 c0       	rjmp	.+50     	; 0x367e <__vsnprintf+0x84>
    364c:	39 01       	movw	r6, r18
    364e:	84 2e       	mov	r8, r20
    3650:	7c 01       	movw	r14, r24
    3652:	61 50       	subi	r22, 0x01	; 1
    3654:	71 09       	sbc	r23, r1
    3656:	7f 83       	std	Y+7, r23	; 0x07
    3658:	6e 83       	std	Y+6, r22	; 0x06
    365a:	98 01       	movw	r18, r16
    365c:	68 2d       	mov	r22, r8
    365e:	a3 01       	movw	r20, r6
    3660:	cf 01       	movw	r24, r30
    3662:	0e 94 75 21 	call	0x42ea	; 0x42ea <__vfprintf>
    3666:	48 85       	ldd	r20, Y+8	; 0x08
    3668:	59 85       	ldd	r21, Y+9	; 0x09
    366a:	2e 81       	ldd	r18, Y+6	; 0x06
    366c:	3f 81       	ldd	r19, Y+7	; 0x07
    366e:	42 17       	cp	r20, r18
    3670:	53 07       	cpc	r21, r19
    3672:	08 f4       	brcc	.+2      	; 0x3676 <__vsnprintf+0x7c>
    3674:	9a 01       	movw	r18, r20
    3676:	f7 01       	movw	r30, r14
    3678:	e2 0f       	add	r30, r18
    367a:	f3 1f       	adc	r31, r19
    367c:	10 82       	st	Z, r1
    367e:	61 96       	adiw	r28, 0x11	; 17
    3680:	0f b6       	in	r0, 0x3f	; 63
    3682:	f8 94       	cli
    3684:	de bf       	out	0x3e, r29	; 62
    3686:	0f be       	out	0x3f, r0	; 63
    3688:	cd bf       	out	0x3d, r28	; 61
    368a:	df 91       	pop	r29
    368c:	cf 91       	pop	r28
    368e:	1f 91       	pop	r17
    3690:	0f 91       	pop	r16
    3692:	ff 90       	pop	r15
    3694:	ef 90       	pop	r14
    3696:	8f 90       	pop	r8
    3698:	7f 90       	pop	r7
    369a:	6f 90       	pop	r6
    369c:	08 95       	ret

Disassembly of section .text.vsnprintf:

0000369e <vsnprintf>:
    369e:	6f 92       	push	r6
    36a0:	7f 92       	push	r7
    36a2:	8f 92       	push	r8
    36a4:	ef 92       	push	r14
    36a6:	ff 92       	push	r15
    36a8:	0f 93       	push	r16
    36aa:	1f 93       	push	r17
    36ac:	cf 93       	push	r28
    36ae:	df 93       	push	r29
    36b0:	cd b7       	in	r28, 0x3d	; 61
    36b2:	de b7       	in	r29, 0x3e	; 62
    36b4:	61 97       	sbiw	r28, 0x11	; 17
    36b6:	0f b6       	in	r0, 0x3f	; 63
    36b8:	f8 94       	cli
    36ba:	de bf       	out	0x3e, r29	; 62
    36bc:	0f be       	out	0x3f, r0	; 63
    36be:	cd bf       	out	0x3d, r28	; 61
    36c0:	fe 01       	movw	r30, r28
    36c2:	31 96       	adiw	r30, 0x01	; 1
    36c4:	51 e1       	ldi	r21, 0x11	; 17
    36c6:	df 01       	movw	r26, r30
    36c8:	1d 92       	st	X+, r1
    36ca:	5a 95       	dec	r21
    36cc:	e9 f7       	brne	.-6      	; 0x36c8 <vsnprintf+0x2a>
    36ce:	a2 e0       	ldi	r26, 0x02	; 2
    36d0:	b1 e0       	ldi	r27, 0x01	; 1
    36d2:	ba 83       	std	Y+2, r27	; 0x02
    36d4:	a9 83       	std	Y+1, r26	; 0x01
    36d6:	9c 83       	std	Y+4, r25	; 0x04
    36d8:	8b 83       	std	Y+3, r24	; 0x03
    36da:	77 ff       	sbrs	r23, 7
    36dc:	09 c0       	rjmp	.+18     	; 0x36f0 <vsnprintf+0x52>
    36de:	8f e4       	ldi	r24, 0x4F	; 79
    36e0:	90 e0       	ldi	r25, 0x00	; 0
    36e2:	90 93 2d 12 	sts	0x122D, r25	; 0x80122d <__errno_val+0x1>
    36e6:	80 93 2c 12 	sts	0x122C, r24	; 0x80122c <__errno_val>
    36ea:	8f ef       	ldi	r24, 0xFF	; 255
    36ec:	9f ef       	ldi	r25, 0xFF	; 255
    36ee:	19 c0       	rjmp	.+50     	; 0x3722 <vsnprintf+0x84>
    36f0:	39 01       	movw	r6, r18
    36f2:	84 2e       	mov	r8, r20
    36f4:	7c 01       	movw	r14, r24
    36f6:	61 50       	subi	r22, 0x01	; 1
    36f8:	71 09       	sbc	r23, r1
    36fa:	7f 83       	std	Y+7, r23	; 0x07
    36fc:	6e 83       	std	Y+6, r22	; 0x06
    36fe:	98 01       	movw	r18, r16
    3700:	68 2d       	mov	r22, r8
    3702:	a3 01       	movw	r20, r6
    3704:	cf 01       	movw	r24, r30
    3706:	0e 94 5d 21 	call	0x42ba	; 0x42ba <vfprintf>
    370a:	48 85       	ldd	r20, Y+8	; 0x08
    370c:	59 85       	ldd	r21, Y+9	; 0x09
    370e:	2e 81       	ldd	r18, Y+6	; 0x06
    3710:	3f 81       	ldd	r19, Y+7	; 0x07
    3712:	42 17       	cp	r20, r18
    3714:	53 07       	cpc	r21, r19
    3716:	08 f4       	brcc	.+2      	; 0x371a <vsnprintf+0x7c>
    3718:	9a 01       	movw	r18, r20
    371a:	f7 01       	movw	r30, r14
    371c:	e2 0f       	add	r30, r18
    371e:	f3 1f       	adc	r31, r19
    3720:	10 82       	st	Z, r1
    3722:	61 96       	adiw	r28, 0x11	; 17
    3724:	0f b6       	in	r0, 0x3f	; 63
    3726:	f8 94       	cli
    3728:	de bf       	out	0x3e, r29	; 62
    372a:	0f be       	out	0x3f, r0	; 63
    372c:	cd bf       	out	0x3d, r28	; 61
    372e:	df 91       	pop	r29
    3730:	cf 91       	pop	r28
    3732:	1f 91       	pop	r17
    3734:	0f 91       	pop	r16
    3736:	ff 90       	pop	r15
    3738:	ef 90       	pop	r14
    373a:	8f 90       	pop	r8
    373c:	7f 90       	pop	r7
    373e:	6f 90       	pop	r6
    3740:	08 95       	ret

Disassembly of section .text.vfprintf:

000042ba <vfprintf>:
    42ba:	a2 e0       	ldi	r26, 0x02	; 2
    42bc:	b0 e0       	ldi	r27, 0x00	; 0
    42be:	e3 e6       	ldi	r30, 0x63	; 99
    42c0:	f1 e2       	ldi	r31, 0x21	; 33
    42c2:	0c 94 ff 20 	jmp	0x41fe	; 0x41fe <__prologue_saves__+0x1c>
    42c6:	8c 01       	movw	r16, r24
    42c8:	3a 83       	std	Y+2, r19	; 0x02
    42ca:	29 83       	std	Y+1, r18	; 0x01
    42cc:	9e 01       	movw	r18, r28
    42ce:	2f 5f       	subi	r18, 0xFF	; 255
    42d0:	3f 4f       	sbci	r19, 0xFF	; 255
    42d2:	0e 94 50 03 	call	0x6a0	; 0x6a0 <__printf_core>
    42d6:	f8 01       	movw	r30, r16
    42d8:	20 81       	ld	r18, Z
    42da:	24 ff       	sbrs	r18, 4
    42dc:	02 c0       	rjmp	.+4      	; 0x42e2 <vfprintf+0x28>
    42de:	8f ef       	ldi	r24, 0xFF	; 255
    42e0:	9f ef       	ldi	r25, 0xFF	; 255
    42e2:	22 96       	adiw	r28, 0x02	; 2
    42e4:	e4 e0       	ldi	r30, 0x04	; 4
    42e6:	0c 94 36 21 	jmp	0x426c	; 0x426c <__epilogue_restores__+0x1c>

Disassembly of section .text.__vfprintf:

000042ea <__vfprintf>:
    42ea:	a2 e0       	ldi	r26, 0x02	; 2
    42ec:	b0 e0       	ldi	r27, 0x00	; 0
    42ee:	eb e7       	ldi	r30, 0x7B	; 123
    42f0:	f1 e2       	ldi	r31, 0x21	; 33
    42f2:	0c 94 ff 20 	jmp	0x41fe	; 0x41fe <__prologue_saves__+0x1c>
    42f6:	8c 01       	movw	r16, r24
    42f8:	3a 83       	std	Y+2, r19	; 0x02
    42fa:	29 83       	std	Y+1, r18	; 0x01
    42fc:	9e 01       	movw	r18, r28
    42fe:	2f 5f       	subi	r18, 0xFF	; 255
    4300:	3f 4f       	sbci	r19, 0xFF	; 255
    4302:	0e 94 50 03 	call	0x6a0	; 0x6a0 <__printf_core>
    4306:	f8 01       	movw	r30, r16
    4308:	20 81       	ld	r18, Z
    430a:	24 ff       	sbrs	r18, 4
    430c:	02 c0       	rjmp	.+4      	; 0x4312 <__vfprintf+0x28>
    430e:	8f ef       	ldi	r24, 0xFF	; 255
    4310:	9f ef       	ldi	r25, 0xFF	; 255
    4312:	22 96       	adiw	r28, 0x02	; 2
    4314:	e4 e0       	ldi	r30, 0x04	; 4
    4316:	0c 94 36 21 	jmp	0x426c	; 0x426c <__epilogue_restores__+0x1c>

Disassembly of section .text.__fmt_fp:

00000ed2 <__fmt_fp>:
     ed2:	a6 e2       	ldi	r26, 0x26	; 38
     ed4:	b0 e0       	ldi	r27, 0x00	; 0
     ed6:	ef e6       	ldi	r30, 0x6F	; 111
     ed8:	f7 e0       	ldi	r31, 0x07	; 7
     eda:	0c 94 f1 20 	jmp	0x41e2	; 0x41e2 <__prologue_saves__>
     ede:	9f 8f       	std	Y+31, r25	; 0x1f
     ee0:	8e 8f       	std	Y+30, r24	; 0x1e
     ee2:	79 8f       	std	Y+25, r23	; 0x19
     ee4:	68 8f       	std	Y+24, r22	; 0x18
     ee6:	12 2f       	mov	r17, r18
     ee8:	fb 01       	movw	r30, r22
     eea:	01 90       	ld	r0, Z+
     eec:	f0 81       	ld	r31, Z
     eee:	e0 2d       	mov	r30, r0
     ef0:	fa 87       	std	Y+10, r31	; 0x0a
     ef2:	e9 87       	std	Y+9, r30	; 0x09
     ef4:	fb 01       	movw	r30, r22
     ef6:	c2 80       	ldd	r12, Z+2	; 0x02
     ef8:	d3 80       	ldd	r13, Z+3	; 0x03
     efa:	24 81       	ldd	r18, Z+4	; 0x04
     efc:	35 81       	ldd	r19, Z+5	; 0x05
     efe:	3c 8b       	std	Y+20, r19	; 0x14
     f00:	2b 8b       	std	Y+19, r18	; 0x13
     f02:	80 85       	ldd	r24, Z+8	; 0x08
     f04:	91 85       	ldd	r25, Z+9	; 0x09
     f06:	99 a3       	std	Y+33, r25	; 0x21
     f08:	88 a3       	std	Y+32, r24	; 0x20
     f0a:	06 80       	ldd	r0, Z+6	; 0x06
     f0c:	f7 81       	ldd	r31, Z+7	; 0x07
     f0e:	e0 2d       	mov	r30, r0
     f10:	fa 83       	std	Y+2, r31	; 0x02
     f12:	e9 83       	std	Y+1, r30	; 0x01
     f14:	fa 01       	movw	r30, r20
     f16:	80 80       	ld	r8, Z
     f18:	91 80       	ldd	r9, Z+1	; 0x01
     f1a:	a2 80       	ldd	r10, Z+2	; 0x02
     f1c:	b3 80       	ldd	r11, Z+3	; 0x03
     f1e:	20 e0       	ldi	r18, 0x00	; 0
     f20:	30 e0       	ldi	r19, 0x00	; 0
     f22:	a9 01       	movw	r20, r18
     f24:	c5 01       	movw	r24, r10
     f26:	b4 01       	movw	r22, r8
     f28:	0e 94 32 23 	call	0x4664	; 0x4664 <__cmpsf2>
     f2c:	87 ff       	sbrs	r24, 7
     f2e:	06 c0       	rjmp	.+12     	; 0xf3c <__fmt_fp+0x6a>
     f30:	b7 fa       	bst	r11, 7
     f32:	b0 94       	com	r11
     f34:	b7 f8       	bld	r11, 7
     f36:	b0 94       	com	r11
     f38:	8d e2       	ldi	r24, 0x2D	; 45
     f3a:	04 c0       	rjmp	.+8      	; 0xf44 <__fmt_fp+0x72>
     f3c:	f9 85       	ldd	r31, Y+9	; 0x09
     f3e:	f2 ff       	sbrs	r31, 2
     f40:	0c c3       	rjmp	.+1560   	; 0x155a <__EEPROM_REGION_LENGTH__+0x55a>
     f42:	8b e2       	ldi	r24, 0x2B	; 43
     f44:	e9 81       	ldd	r30, Y+1	; 0x01
     f46:	fa 81       	ldd	r31, Y+2	; 0x02
     f48:	80 83       	st	Z, r24
     f4a:	2b 89       	ldd	r18, Y+19	; 0x13
     f4c:	3c 89       	ldd	r19, Y+20	; 0x14
     f4e:	21 50       	subi	r18, 0x01	; 1
     f50:	31 09       	sbc	r19, r1
     f52:	38 87       	std	Y+8, r19	; 0x08
     f54:	2f 83       	std	Y+7, r18	; 0x07
     f56:	41 e0       	ldi	r20, 0x01	; 1
     f58:	50 e0       	ldi	r21, 0x00	; 0
     f5a:	5a 8b       	std	Y+18, r21	; 0x12
     f5c:	49 8b       	std	Y+17, r20	; 0x11
     f5e:	06 c0       	rjmp	.+12     	; 0xf6c <__fmt_fp+0x9a>
     f60:	8b 89       	ldd	r24, Y+19	; 0x13
     f62:	9c 89       	ldd	r25, Y+20	; 0x14
     f64:	98 87       	std	Y+8, r25	; 0x08
     f66:	8f 83       	std	Y+7, r24	; 0x07
     f68:	1a 8a       	std	Y+18, r1	; 0x12
     f6a:	19 8a       	std	Y+17, r1	; 0x11
     f6c:	d5 01       	movw	r26, r10
     f6e:	c4 01       	movw	r24, r8
     f70:	bf 77       	andi	r27, 0x7F	; 127
     f72:	00 97       	sbiw	r24, 0x00	; 0
     f74:	e0 e8       	ldi	r30, 0x80	; 128
     f76:	ae 07       	cpc	r26, r30
     f78:	ef e7       	ldi	r30, 0x7F	; 127
     f7a:	be 07       	cpc	r27, r30
     f7c:	d9 f4       	brne	.+54     	; 0xfb4 <__fmt_fp+0xe2>
     f7e:	21 2f       	mov	r18, r17
     f80:	11 0f       	add	r17, r17
     f82:	33 0b       	sbc	r19, r19
     f84:	21 54       	subi	r18, 0x41	; 65
     f86:	31 09       	sbc	r19, r1
     f88:	89 81       	ldd	r24, Y+1	; 0x01
     f8a:	9a 81       	ldd	r25, Y+2	; 0x02
     f8c:	49 89       	ldd	r20, Y+17	; 0x11
     f8e:	5a 89       	ldd	r21, Y+18	; 0x12
     f90:	84 0f       	add	r24, r20
     f92:	95 1f       	adc	r25, r21
     f94:	2a 31       	cpi	r18, 0x1A	; 26
     f96:	31 05       	cpc	r19, r1
     f98:	20 f4       	brcc	.+8      	; 0xfa2 <__fmt_fp+0xd0>
     f9a:	43 e7       	ldi	r20, 0x73	; 115
     f9c:	56 e0       	ldi	r21, 0x06	; 6
     f9e:	60 e0       	ldi	r22, 0x00	; 0
     fa0:	03 c0       	rjmp	.+6      	; 0xfa8 <__fmt_fp+0xd6>
     fa2:	47 e7       	ldi	r20, 0x77	; 119
     fa4:	56 e0       	ldi	r21, 0x06	; 6
     fa6:	60 e0       	ldi	r22, 0x00	; 0
     fa8:	0e 94 42 22 	call	0x4484	; 0x4484 <strcpy>
     fac:	67 e7       	ldi	r22, 0x77	; 119
     fae:	76 e0       	ldi	r23, 0x06	; 6
     fb0:	80 e0       	ldi	r24, 0x00	; 0
     fb2:	1e c0       	rjmp	.+60     	; 0xff0 <__fmt_fp+0x11e>
     fb4:	01 97       	sbiw	r24, 0x01	; 1
     fb6:	a0 48       	sbci	r26, 0x80	; 128
     fb8:	bf 47       	sbci	r27, 0x7F	; 127
     fba:	30 f1       	brcs	.+76     	; 0x1008 <__EEPROM_REGION_LENGTH__+0x8>
     fbc:	21 2f       	mov	r18, r17
     fbe:	11 0f       	add	r17, r17
     fc0:	33 0b       	sbc	r19, r19
     fc2:	21 54       	subi	r18, 0x41	; 65
     fc4:	31 09       	sbc	r19, r1
     fc6:	89 81       	ldd	r24, Y+1	; 0x01
     fc8:	9a 81       	ldd	r25, Y+2	; 0x02
     fca:	49 89       	ldd	r20, Y+17	; 0x11
     fcc:	5a 89       	ldd	r21, Y+18	; 0x12
     fce:	84 0f       	add	r24, r20
     fd0:	95 1f       	adc	r25, r21
     fd2:	2a 31       	cpi	r18, 0x1A	; 26
     fd4:	31 05       	cpc	r19, r1
     fd6:	20 f4       	brcc	.+8      	; 0xfe0 <__fmt_fp+0x10e>
     fd8:	4b e7       	ldi	r20, 0x7B	; 123
     fda:	56 e0       	ldi	r21, 0x06	; 6
     fdc:	60 e0       	ldi	r22, 0x00	; 0
     fde:	03 c0       	rjmp	.+6      	; 0xfe6 <__fmt_fp+0x114>
     fe0:	4f e7       	ldi	r20, 0x7F	; 127
     fe2:	56 e0       	ldi	r21, 0x06	; 6
     fe4:	60 e0       	ldi	r22, 0x00	; 0
     fe6:	0e 94 42 22 	call	0x4484	; 0x4484 <strcpy>
     fea:	6f e7       	ldi	r22, 0x7F	; 127
     fec:	76 e0       	ldi	r23, 0x06	; 6
     fee:	80 e0       	ldi	r24, 0x00	; 0
     ff0:	0e 94 00 22 	call	0x4400	; 0x4400 <strlen>
     ff4:	e9 81       	ldd	r30, Y+1	; 0x01
     ff6:	fa 81       	ldd	r31, Y+2	; 0x02
     ff8:	af 01       	movw	r20, r30
     ffa:	60 e8       	ldi	r22, 0x80	; 128
     ffc:	e9 84       	ldd	r14, Y+9	; 0x09
     ffe:	fa 84       	ldd	r15, Y+10	; 0x0a
    1000:	0b 89       	ldd	r16, Y+19	; 0x13
    1002:	1c 89       	ldd	r17, Y+20	; 0x14
    1004:	9c 01       	movw	r18, r24
    1006:	a1 c2       	rjmp	.+1346   	; 0x154a <__EEPROM_REGION_LENGTH__+0x54a>
    1008:	20 e0       	ldi	r18, 0x00	; 0
    100a:	30 e0       	ldi	r19, 0x00	; 0
    100c:	a9 01       	movw	r20, r18
    100e:	c5 01       	movw	r24, r10
    1010:	b4 01       	movw	r22, r8
    1012:	0e 94 32 23 	call	0x4664	; 0x4664 <__cmpsf2>
    1016:	1b 82       	std	Y+3, r1	; 0x03
    1018:	1c 82       	std	Y+4, r1	; 0x04
    101a:	88 23       	and	r24, r24
    101c:	09 f4       	brne	.+2      	; 0x1020 <__EEPROM_REGION_LENGTH__+0x20>
    101e:	67 c0       	rjmp	.+206    	; 0x10ee <__EEPROM_REGION_LENGTH__+0xee>
    1020:	f0 e8       	ldi	r31, 0x80	; 128
    1022:	fd 83       	std	Y+5, r31	; 0x05
    1024:	2f e3       	ldi	r18, 0x3F	; 63
    1026:	2e 83       	std	Y+6, r18	; 0x06
    1028:	21 2c       	mov	r2, r1
    102a:	31 2c       	mov	r3, r1
    102c:	20 e0       	ldi	r18, 0x00	; 0
    102e:	30 e0       	ldi	r19, 0x00	; 0
    1030:	40 e2       	ldi	r20, 0x20	; 32
    1032:	51 e4       	ldi	r21, 0x41	; 65
    1034:	6b 81       	ldd	r22, Y+3	; 0x03
    1036:	7c 81       	ldd	r23, Y+4	; 0x04
    1038:	8d 81       	ldd	r24, Y+5	; 0x05
    103a:	9e 81       	ldd	r25, Y+6	; 0x06
    103c:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3>
    1040:	f6 2e       	mov	r15, r22
    1042:	07 2f       	mov	r16, r23
    1044:	8d 87       	std	Y+13, r24	; 0x0d
    1046:	9b 87       	std	Y+11, r25	; 0x0b
    1048:	a5 01       	movw	r20, r10
    104a:	94 01       	movw	r18, r8
    104c:	0e 94 37 23 	call	0x466e	; 0x466e <__gesf2>
    1050:	18 16       	cp	r1, r24
    1052:	54 f0       	brlt	.+20     	; 0x1068 <__EEPROM_REGION_LENGTH__+0x68>
    1054:	3f ef       	ldi	r19, 0xFF	; 255
    1056:	23 1a       	sub	r2, r19
    1058:	33 0a       	sbc	r3, r19
    105a:	fb 82       	std	Y+3, r15	; 0x03
    105c:	0c 83       	std	Y+4, r16	; 0x04
    105e:	4d 85       	ldd	r20, Y+13	; 0x0d
    1060:	4d 83       	std	Y+5, r20	; 0x05
    1062:	5b 85       	ldd	r21, Y+11	; 0x0b
    1064:	5e 83       	std	Y+6, r21	; 0x06
    1066:	e2 cf       	rjmp	.-60     	; 0x102c <__EEPROM_REGION_LENGTH__+0x2c>
    1068:	1c 86       	std	Y+12, r1	; 0x0c
    106a:	1b 86       	std	Y+11, r1	; 0x0b
    106c:	2b 81       	ldd	r18, Y+3	; 0x03
    106e:	3c 81       	ldd	r19, Y+4	; 0x04
    1070:	4d 81       	ldd	r20, Y+5	; 0x05
    1072:	5e 81       	ldd	r21, Y+6	; 0x06
    1074:	c5 01       	movw	r24, r10
    1076:	b4 01       	movw	r22, r8
    1078:	0e 94 32 23 	call	0x4664	; 0x4664 <__cmpsf2>
    107c:	87 ff       	sbrs	r24, 7
    107e:	3d c0       	rjmp	.+122    	; 0x10fa <__EEPROM_REGION_LENGTH__+0xfa>
    1080:	84 ed       	ldi	r24, 0xD4	; 212
    1082:	28 16       	cp	r2, r24
    1084:	8e ef       	ldi	r24, 0xFE	; 254
    1086:	38 06       	cpc	r3, r24
    1088:	04 f5       	brge	.+64     	; 0x10ca <__EEPROM_REGION_LENGTH__+0xca>
    108a:	eb 85       	ldd	r30, Y+11	; 0x0b
    108c:	fc 85       	ldd	r31, Y+12	; 0x0c
    108e:	ef 2b       	or	r30, r31
    1090:	e1 f4       	brne	.+56     	; 0x10ca <__EEPROM_REGION_LENGTH__+0xca>
    1092:	20 e0       	ldi	r18, 0x00	; 0
    1094:	30 e0       	ldi	r19, 0x00	; 0
    1096:	40 e8       	ldi	r20, 0x80	; 128
    1098:	5a e5       	ldi	r21, 0x5A	; 90
    109a:	c5 01       	movw	r24, r10
    109c:	b4 01       	movw	r22, r8
    109e:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3>
    10a2:	4b 01       	movw	r8, r22
    10a4:	5c 01       	movw	r10, r24
    10a6:	20 e0       	ldi	r18, 0x00	; 0
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	40 e8       	ldi	r20, 0x80	; 128
    10ac:	5a e5       	ldi	r21, 0x5A	; 90
    10ae:	6b 81       	ldd	r22, Y+3	; 0x03
    10b0:	7c 81       	ldd	r23, Y+4	; 0x04
    10b2:	8d 81       	ldd	r24, Y+5	; 0x05
    10b4:	9e 81       	ldd	r25, Y+6	; 0x06
    10b6:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3>
    10ba:	6b 83       	std	Y+3, r22	; 0x03
    10bc:	7c 83       	std	Y+4, r23	; 0x04
    10be:	8d 83       	std	Y+5, r24	; 0x05
    10c0:	9e 83       	std	Y+6, r25	; 0x06
    10c2:	21 e0       	ldi	r18, 0x01	; 1
    10c4:	30 e0       	ldi	r19, 0x00	; 0
    10c6:	3c 87       	std	Y+12, r19	; 0x0c
    10c8:	2b 87       	std	Y+11, r18	; 0x0b
    10ca:	20 e0       	ldi	r18, 0x00	; 0
    10cc:	30 e0       	ldi	r19, 0x00	; 0
    10ce:	40 e2       	ldi	r20, 0x20	; 32
    10d0:	51 e4       	ldi	r21, 0x41	; 65
    10d2:	6b 81       	ldd	r22, Y+3	; 0x03
    10d4:	7c 81       	ldd	r23, Y+4	; 0x04
    10d6:	8d 81       	ldd	r24, Y+5	; 0x05
    10d8:	9e 81       	ldd	r25, Y+6	; 0x06
    10da:	0e 94 44 23 	call	0x4688	; 0x4688 <__divsf3>
    10de:	6b 83       	std	Y+3, r22	; 0x03
    10e0:	7c 83       	std	Y+4, r23	; 0x04
    10e2:	8d 83       	std	Y+5, r24	; 0x05
    10e4:	9e 83       	std	Y+6, r25	; 0x06
    10e6:	31 e0       	ldi	r19, 0x01	; 1
    10e8:	23 1a       	sub	r2, r19
    10ea:	31 08       	sbc	r3, r1
    10ec:	bf cf       	rjmp	.-130    	; 0x106c <__EEPROM_REGION_LENGTH__+0x6c>
    10ee:	40 e8       	ldi	r20, 0x80	; 128
    10f0:	4d 83       	std	Y+5, r20	; 0x05
    10f2:	5f e3       	ldi	r21, 0x3F	; 63
    10f4:	5e 83       	std	Y+6, r21	; 0x06
    10f6:	21 2c       	mov	r2, r1
    10f8:	31 2c       	mov	r3, r1
    10fa:	81 2f       	mov	r24, r17
    10fc:	11 0f       	add	r17, r17
    10fe:	99 0b       	sbc	r25, r25
    1100:	9b a3       	std	Y+35, r25	; 0x23
    1102:	8a a3       	std	Y+34, r24	; 0x22
    1104:	0e 94 de 22 	call	0x45bc	; 0x45bc <tolower>
    1108:	8b 8f       	std	Y+27, r24	; 0x1b
    110a:	d7 fc       	sbrc	r13, 7
    110c:	03 c0       	rjmp	.+6      	; 0x1114 <__EEPROM_REGION_LENGTH__+0x114>
    110e:	de a2       	std	Y+38, r13	; 0x26
    1110:	cd a2       	std	Y+37, r12	; 0x25
    1112:	04 c0       	rjmp	.+8      	; 0x111c <__EEPROM_REGION_LENGTH__+0x11c>
    1114:	e6 e0       	ldi	r30, 0x06	; 6
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	fe a3       	std	Y+38, r31	; 0x26
    111a:	ed a3       	std	Y+37, r30	; 0x25
    111c:	fb 8d       	ldd	r31, Y+27	; 0x1b
    111e:	f7 36       	cpi	r31, 0x67	; 103
    1120:	41 f4       	brne	.+16     	; 0x1132 <__EEPROM_REGION_LENGTH__+0x132>
    1122:	cd 28       	or	r12, r13
    1124:	09 f0       	breq	.+2      	; 0x1128 <__EEPROM_REGION_LENGTH__+0x128>
    1126:	1e c2       	rjmp	.+1084   	; 0x1564 <__EEPROM_REGION_LENGTH__+0x564>
    1128:	21 e0       	ldi	r18, 0x01	; 1
    112a:	30 e0       	ldi	r19, 0x00	; 0
    112c:	3e a3       	std	Y+38, r19	; 0x26
    112e:	2d a3       	std	Y+37, r18	; 0x25
    1130:	19 c2       	rjmp	.+1074   	; 0x1564 <__EEPROM_REGION_LENGTH__+0x564>
    1132:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1134:	8d 8b       	std	Y+21, r24	; 0x15
    1136:	04 c0       	rjmp	.+8      	; 0x1140 <__EEPROM_REGION_LENGTH__+0x140>
    1138:	37 fe       	sbrs	r3, 7
    113a:	25 c2       	rjmp	.+1098   	; 0x1586 <__EEPROM_REGION_LENGTH__+0x586>
    113c:	96 e6       	ldi	r25, 0x66	; 102
    113e:	9d 8b       	std	Y+21, r25	; 0x15
    1140:	ed a1       	ldd	r30, Y+37	; 0x25
    1142:	fe a1       	ldd	r31, Y+38	; 0x26
    1144:	31 96       	adiw	r30, 0x01	; 1
    1146:	fe a3       	std	Y+38, r31	; 0x26
    1148:	ed a3       	std	Y+37, r30	; 0x25
    114a:	fd 89       	ldd	r31, Y+21	; 0x15
    114c:	f6 36       	cpi	r31, 0x66	; 102
    114e:	99 f4       	brne	.+38     	; 0x1176 <__EEPROM_REGION_LENGTH__+0x176>
    1150:	37 fe       	sbrs	r3, 7
    1152:	08 c0       	rjmp	.+16     	; 0x1164 <__EEPROM_REGION_LENGTH__+0x164>
    1154:	1b 82       	std	Y+3, r1	; 0x03
    1156:	1c 82       	std	Y+4, r1	; 0x04
    1158:	20 e8       	ldi	r18, 0x80	; 128
    115a:	2d 83       	std	Y+5, r18	; 0x05
    115c:	3f e3       	ldi	r19, 0x3F	; 63
    115e:	3e 83       	std	Y+6, r19	; 0x06
    1160:	21 2c       	mov	r2, r1
    1162:	31 2c       	mov	r3, r1
    1164:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1166:	47 36       	cpi	r20, 0x67	; 103
    1168:	31 f0       	breq	.+12     	; 0x1176 <__EEPROM_REGION_LENGTH__+0x176>
    116a:	8d a1       	ldd	r24, Y+37	; 0x25
    116c:	9e a1       	ldd	r25, Y+38	; 0x26
    116e:	82 0d       	add	r24, r2
    1170:	93 1d       	adc	r25, r3
    1172:	9e a3       	std	Y+38, r25	; 0x26
    1174:	8d a3       	std	Y+37, r24	; 0x25
    1176:	9b 81       	ldd	r25, Y+3	; 0x03
    1178:	9b 87       	std	Y+11, r25	; 0x0b
    117a:	ec 81       	ldd	r30, Y+4	; 0x04
    117c:	ed 87       	std	Y+13, r30	; 0x0d
    117e:	fd 81       	ldd	r31, Y+5	; 0x05
    1180:	fe 8b       	std	Y+22, r31	; 0x16
    1182:	2e 81       	ldd	r18, Y+6	; 0x06
    1184:	2a 8f       	std	Y+26, r18	; 0x1a
    1186:	75 01       	movw	r14, r10
    1188:	64 01       	movw	r12, r8
    118a:	1d 8e       	std	Y+29, r1	; 0x1d
    118c:	1c 8e       	std	Y+28, r1	; 0x1c
    118e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1190:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1192:	ed a1       	ldd	r30, Y+37	; 0x25
    1194:	fe a1       	ldd	r31, Y+38	; 0x26
    1196:	8e 17       	cp	r24, r30
    1198:	9f 07       	cpc	r25, r31
    119a:	c1 f1       	breq	.+112    	; 0x120c <__EEPROM_REGION_LENGTH__+0x20c>
    119c:	2b 85       	ldd	r18, Y+11	; 0x0b
    119e:	3d 85       	ldd	r19, Y+13	; 0x0d
    11a0:	4e 89       	ldd	r20, Y+22	; 0x16
    11a2:	5a 8d       	ldd	r21, Y+26	; 0x1a
    11a4:	c7 01       	movw	r24, r14
    11a6:	b6 01       	movw	r22, r12
    11a8:	0e 94 44 23 	call	0x4688	; 0x4688 <__divsf3>
    11ac:	0e 94 9e 14 	call	0x293c	; 0x293c <floorf>
    11b0:	2b 01       	movw	r4, r22
    11b2:	3c 01       	movw	r6, r24
    11b4:	0e 94 10 23 	call	0x4620	; 0x4620 <__fixsfsi>
    11b8:	6c a3       	std	Y+36, r22	; 0x24
    11ba:	87 01       	movw	r16, r14
    11bc:	76 01       	movw	r14, r12
    11be:	17 fb       	bst	r17, 7
    11c0:	10 95       	com	r17
    11c2:	17 f9       	bld	r17, 7
    11c4:	10 95       	com	r17
    11c6:	2b 85       	ldd	r18, Y+11	; 0x0b
    11c8:	3d 85       	ldd	r19, Y+13	; 0x0d
    11ca:	4e 89       	ldd	r20, Y+22	; 0x16
    11cc:	5a 8d       	ldd	r21, Y+26	; 0x1a
    11ce:	c3 01       	movw	r24, r6
    11d0:	b2 01       	movw	r22, r4
    11d2:	0e 94 00 14 	call	0x2800	; 0x2800 <fmaf>
    11d6:	6b 01       	movw	r12, r22
    11d8:	7c 01       	movw	r14, r24
    11da:	f7 fa       	bst	r15, 7
    11dc:	f0 94       	com	r15
    11de:	f7 f8       	bld	r15, 7
    11e0:	f0 94       	com	r15
    11e2:	20 e0       	ldi	r18, 0x00	; 0
    11e4:	30 e0       	ldi	r19, 0x00	; 0
    11e6:	40 e2       	ldi	r20, 0x20	; 32
    11e8:	51 e4       	ldi	r21, 0x41	; 65
    11ea:	6b 85       	ldd	r22, Y+11	; 0x0b
    11ec:	7d 85       	ldd	r23, Y+13	; 0x0d
    11ee:	8e 89       	ldd	r24, Y+22	; 0x16
    11f0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    11f2:	0e 94 44 23 	call	0x4688	; 0x4688 <__divsf3>
    11f6:	6b 87       	std	Y+11, r22	; 0x0b
    11f8:	7d 87       	std	Y+13, r23	; 0x0d
    11fa:	8e 8b       	std	Y+22, r24	; 0x16
    11fc:	9a 8f       	std	Y+26, r25	; 0x1a
    11fe:	4c 8d       	ldd	r20, Y+28	; 0x1c
    1200:	5d 8d       	ldd	r21, Y+29	; 0x1d
    1202:	4f 5f       	subi	r20, 0xFF	; 255
    1204:	5f 4f       	sbci	r21, 0xFF	; 255
    1206:	5d 8f       	std	Y+29, r21	; 0x1d
    1208:	4c 8f       	std	Y+28, r20	; 0x1c
    120a:	c1 cf       	rjmp	.-126    	; 0x118e <__EEPROM_REGION_LENGTH__+0x18e>
    120c:	20 e0       	ldi	r18, 0x00	; 0
    120e:	30 e0       	ldi	r19, 0x00	; 0
    1210:	40 ea       	ldi	r20, 0xA0	; 160
    1212:	50 e4       	ldi	r21, 0x40	; 64
    1214:	6b 85       	ldd	r22, Y+11	; 0x0b
    1216:	7d 85       	ldd	r23, Y+13	; 0x0d
    1218:	8e 89       	ldd	r24, Y+22	; 0x16
    121a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    121c:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3>
    1220:	2b 01       	movw	r4, r22
    1222:	3c 01       	movw	r6, r24
    1224:	9b 01       	movw	r18, r22
    1226:	ac 01       	movw	r20, r24
    1228:	c7 01       	movw	r24, r14
    122a:	b6 01       	movw	r22, r12
    122c:	0e 94 32 23 	call	0x4664	; 0x4664 <__cmpsf2>
    1230:	87 fd       	sbrc	r24, 7
    1232:	0b c0       	rjmp	.+22     	; 0x124a <__EEPROM_REGION_LENGTH__+0x24a>
    1234:	a3 01       	movw	r20, r6
    1236:	92 01       	movw	r18, r4
    1238:	c7 01       	movw	r24, r14
    123a:	b6 01       	movw	r22, r12
    123c:	0e 94 32 23 	call	0x4664	; 0x4664 <__cmpsf2>
    1240:	81 11       	cpse	r24, r1
    1242:	06 c0       	rjmp	.+12     	; 0x1250 <__EEPROM_REGION_LENGTH__+0x250>
    1244:	fc a1       	ldd	r31, Y+36	; 0x24
    1246:	f0 fd       	sbrc	r31, 0
    1248:	03 c0       	rjmp	.+6      	; 0x1250 <__EEPROM_REGION_LENGTH__+0x250>
    124a:	41 2c       	mov	r4, r1
    124c:	51 2c       	mov	r5, r1
    124e:	32 01       	movw	r6, r4
    1250:	a3 01       	movw	r20, r6
    1252:	92 01       	movw	r18, r4
    1254:	c5 01       	movw	r24, r10
    1256:	b4 01       	movw	r22, r8
    1258:	0e 94 0a 23 	call	0x4614	; 0x4614 <__addsf3>
    125c:	4b 01       	movw	r8, r22
    125e:	5c 01       	movw	r10, r24
    1260:	2d 89       	ldd	r18, Y+21	; 0x15
    1262:	25 36       	cpi	r18, 0x65	; 101
    1264:	11 f0       	breq	.+4      	; 0x126a <__EEPROM_REGION_LENGTH__+0x26a>
    1266:	31 01       	movw	r6, r2
    1268:	02 c0       	rjmp	.+4      	; 0x126e <__EEPROM_REGION_LENGTH__+0x26e>
    126a:	61 2c       	mov	r6, r1
    126c:	71 2c       	mov	r7, r1
    126e:	23 01       	movw	r4, r6
    1270:	4d a1       	ldd	r20, Y+37	; 0x25
    1272:	5e a1       	ldd	r21, Y+38	; 0x26
    1274:	44 1a       	sub	r4, r20
    1276:	55 0a       	sbc	r5, r21
    1278:	c9 88       	ldd	r12, Y+17	; 0x11
    127a:	da 88       	ldd	r13, Y+18	; 0x12
    127c:	00 e0       	ldi	r16, 0x00	; 0
    127e:	10 e0       	ldi	r17, 0x00	; 0
    1280:	1c 86       	std	Y+12, r1	; 0x0c
    1282:	1b 86       	std	Y+11, r1	; 0x0b
    1284:	89 85       	ldd	r24, Y+9	; 0x09
    1286:	9a 85       	ldd	r25, Y+10	; 0x0a
    1288:	80 71       	andi	r24, 0x10	; 16
    128a:	99 27       	eor	r25, r25
    128c:	9f 8b       	std	Y+23, r25	; 0x17
    128e:	8e 8b       	std	Y+22, r24	; 0x16
    1290:	64 14       	cp	r6, r4
    1292:	75 04       	cpc	r7, r5
    1294:	31 f4       	brne	.+12     	; 0x12a2 <__EEPROM_REGION_LENGTH__+0x2a2>
    1296:	8b 85       	ldd	r24, Y+11	; 0x0b
    1298:	9c 85       	ldd	r25, Y+12	; 0x0c
    129a:	89 2b       	or	r24, r25
    129c:	09 f4       	brne	.+2      	; 0x12a0 <__EEPROM_REGION_LENGTH__+0x2a0>
    129e:	9a c0       	rjmp	.+308    	; 0x13d4 <__EEPROM_REGION_LENGTH__+0x3d4>
    12a0:	a6 c0       	rjmp	.+332    	; 0x13ee <__EEPROM_REGION_LENGTH__+0x3ee>
    12a2:	dd 8e       	std	Y+29, r13	; 0x1d
    12a4:	cc 8e       	std	Y+28, r12	; 0x1c
    12a6:	e8 8d       	ldd	r30, Y+24	; 0x18
    12a8:	f9 8d       	ldd	r31, Y+25	; 0x19
    12aa:	80 85       	ldd	r24, Z+8	; 0x08
    12ac:	91 85       	ldd	r25, Z+9	; 0x09
    12ae:	05 97       	sbiw	r24, 0x05	; 5
    12b0:	c8 16       	cp	r12, r24
    12b2:	d9 06       	cpc	r13, r25
    12b4:	80 f7       	brcc	.-32     	; 0x1296 <__EEPROM_REGION_LENGTH__+0x296>
    12b6:	2b 81       	ldd	r18, Y+3	; 0x03
    12b8:	3c 81       	ldd	r19, Y+4	; 0x04
    12ba:	4d 81       	ldd	r20, Y+5	; 0x05
    12bc:	5e 81       	ldd	r21, Y+6	; 0x06
    12be:	c5 01       	movw	r24, r10
    12c0:	b4 01       	movw	r22, r8
    12c2:	0e 94 44 23 	call	0x4688	; 0x4688 <__divsf3>
    12c6:	0e 94 9e 14 	call	0x293c	; 0x293c <floorf>
    12ca:	6d 87       	std	Y+13, r22	; 0x0d
    12cc:	7e 87       	std	Y+14, r23	; 0x0e
    12ce:	8f 87       	std	Y+15, r24	; 0x0f
    12d0:	98 8b       	std	Y+16, r25	; 0x10
    12d2:	0e 94 10 23 	call	0x4620	; 0x4620 <__fixsfsi>
    12d6:	cb 01       	movw	r24, r22
    12d8:	ee 89       	ldd	r30, Y+22	; 0x16
    12da:	ff 89       	ldd	r31, Y+23	; 0x17
    12dc:	ef 2b       	or	r30, r31
    12de:	69 f4       	brne	.+26     	; 0x12fa <__EEPROM_REGION_LENGTH__+0x2fa>
    12e0:	89 2b       	or	r24, r25
    12e2:	59 f4       	brne	.+22     	; 0x12fa <__EEPROM_REGION_LENGTH__+0x2fa>
    12e4:	fb 8d       	ldd	r31, Y+27	; 0x1b
    12e6:	f7 36       	cpi	r31, 0x67	; 103
    12e8:	41 f4       	brne	.+16     	; 0x12fa <__EEPROM_REGION_LENGTH__+0x2fa>
    12ea:	77 fe       	sbrs	r7, 7
    12ec:	06 c0       	rjmp	.+12     	; 0x12fa <__EEPROM_REGION_LENGTH__+0x2fa>
    12ee:	98 01       	movw	r18, r16
    12f0:	2f 5f       	subi	r18, 0xFF	; 255
    12f2:	3f 4f       	sbci	r19, 0xFF	; 255
    12f4:	3d 8f       	std	Y+29, r19	; 0x1d
    12f6:	2c 8f       	std	Y+28, r18	; 0x1c
    12f8:	43 c0       	rjmp	.+134    	; 0x1380 <__EEPROM_REGION_LENGTH__+0x380>
    12fa:	4b 85       	ldd	r20, Y+11	; 0x0b
    12fc:	5c 85       	ldd	r21, Y+12	; 0x0c
    12fe:	45 2b       	or	r20, r21
    1300:	b1 f4       	brne	.+44     	; 0x132e <__EEPROM_REGION_LENGTH__+0x32e>
    1302:	77 fe       	sbrs	r7, 7
    1304:	14 c0       	rjmp	.+40     	; 0x132e <__EEPROM_REGION_LENGTH__+0x32e>
    1306:	5f ef       	ldi	r21, 0xFF	; 255
    1308:	c5 1a       	sub	r12, r21
    130a:	d5 0a       	sbc	r13, r21
    130c:	e9 81       	ldd	r30, Y+1	; 0x01
    130e:	fa 81       	ldd	r31, Y+2	; 0x02
    1310:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1312:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1314:	e8 0f       	add	r30, r24
    1316:	f9 1f       	adc	r31, r25
    1318:	9e e2       	ldi	r25, 0x2E	; 46
    131a:	90 83       	st	Z, r25
    131c:	ef 81       	ldd	r30, Y+7	; 0x07
    131e:	f8 85       	ldd	r31, Y+8	; 0x08
    1320:	31 97       	sbiw	r30, 0x01	; 1
    1322:	f8 87       	std	Y+8, r31	; 0x08
    1324:	ef 83       	std	Y+7, r30	; 0x07
    1326:	21 e0       	ldi	r18, 0x01	; 1
    1328:	30 e0       	ldi	r19, 0x00	; 0
    132a:	3c 87       	std	Y+12, r19	; 0x0c
    132c:	2b 87       	std	Y+11, r18	; 0x0b
    132e:	e9 81       	ldd	r30, Y+1	; 0x01
    1330:	fa 81       	ldd	r31, Y+2	; 0x02
    1332:	ec 0d       	add	r30, r12
    1334:	fd 1d       	adc	r31, r13
    1336:	1d 8f       	std	Y+29, r17	; 0x1d
    1338:	0c 8f       	std	Y+28, r16	; 0x1c
    133a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    133c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    133e:	89 2b       	or	r24, r25
    1340:	49 f0       	breq	.+18     	; 0x1354 <__EEPROM_REGION_LENGTH__+0x354>
    1342:	30 e3       	ldi	r19, 0x30	; 48
    1344:	31 93       	st	Z+, r19
    1346:	4c 8d       	ldd	r20, Y+28	; 0x1c
    1348:	5d 8d       	ldd	r21, Y+29	; 0x1d
    134a:	41 50       	subi	r20, 0x01	; 1
    134c:	51 09       	sbc	r21, r1
    134e:	5d 8f       	std	Y+29, r21	; 0x1d
    1350:	4c 8f       	std	Y+28, r20	; 0x1c
    1352:	f3 cf       	rjmp	.-26     	; 0x133a <__EEPROM_REGION_LENGTH__+0x33a>
    1354:	c8 01       	movw	r24, r16
    1356:	8c 0d       	add	r24, r12
    1358:	9d 1d       	adc	r25, r13
    135a:	2f 81       	ldd	r18, Y+7	; 0x07
    135c:	38 85       	ldd	r19, Y+8	; 0x08
    135e:	20 1b       	sub	r18, r16
    1360:	31 0b       	sbc	r19, r17
    1362:	6c 01       	movw	r12, r24
    1364:	ef ef       	ldi	r30, 0xFF	; 255
    1366:	ce 1a       	sub	r12, r30
    1368:	de 0a       	sbc	r13, r30
    136a:	e9 81       	ldd	r30, Y+1	; 0x01
    136c:	fa 81       	ldd	r31, Y+2	; 0x02
    136e:	e8 0f       	add	r30, r24
    1370:	f9 1f       	adc	r31, r25
    1372:	60 5d       	subi	r22, 0xD0	; 208
    1374:	60 83       	st	Z, r22
    1376:	a9 01       	movw	r20, r18
    1378:	41 50       	subi	r20, 0x01	; 1
    137a:	51 09       	sbc	r21, r1
    137c:	58 87       	std	Y+8, r21	; 0x08
    137e:	4f 83       	std	Y+7, r20	; 0x07
    1380:	85 01       	movw	r16, r10
    1382:	74 01       	movw	r14, r8
    1384:	17 fb       	bst	r17, 7
    1386:	10 95       	com	r17
    1388:	17 f9       	bld	r17, 7
    138a:	10 95       	com	r17
    138c:	2b 81       	ldd	r18, Y+3	; 0x03
    138e:	3c 81       	ldd	r19, Y+4	; 0x04
    1390:	4d 81       	ldd	r20, Y+5	; 0x05
    1392:	5e 81       	ldd	r21, Y+6	; 0x06
    1394:	6d 85       	ldd	r22, Y+13	; 0x0d
    1396:	7e 85       	ldd	r23, Y+14	; 0x0e
    1398:	8f 85       	ldd	r24, Y+15	; 0x0f
    139a:	98 89       	ldd	r25, Y+16	; 0x10
    139c:	0e 94 00 14 	call	0x2800	; 0x2800 <fmaf>
    13a0:	4b 01       	movw	r8, r22
    13a2:	5c 01       	movw	r10, r24
    13a4:	b7 fa       	bst	r11, 7
    13a6:	b0 94       	com	r11
    13a8:	b7 f8       	bld	r11, 7
    13aa:	b0 94       	com	r11
    13ac:	20 e0       	ldi	r18, 0x00	; 0
    13ae:	30 e0       	ldi	r19, 0x00	; 0
    13b0:	40 e2       	ldi	r20, 0x20	; 32
    13b2:	51 e4       	ldi	r21, 0x41	; 65
    13b4:	6b 81       	ldd	r22, Y+3	; 0x03
    13b6:	7c 81       	ldd	r23, Y+4	; 0x04
    13b8:	8d 81       	ldd	r24, Y+5	; 0x05
    13ba:	9e 81       	ldd	r25, Y+6	; 0x06
    13bc:	0e 94 44 23 	call	0x4688	; 0x4688 <__divsf3>
    13c0:	6b 83       	std	Y+3, r22	; 0x03
    13c2:	7c 83       	std	Y+4, r23	; 0x04
    13c4:	8d 83       	std	Y+5, r24	; 0x05
    13c6:	9e 83       	std	Y+6, r25	; 0x06
    13c8:	51 e0       	ldi	r21, 0x01	; 1
    13ca:	65 1a       	sub	r6, r21
    13cc:	71 08       	sbc	r7, r1
    13ce:	0c 8d       	ldd	r16, Y+28	; 0x1c
    13d0:	1d 8d       	ldd	r17, Y+29	; 0x1d
    13d2:	5e cf       	rjmp	.-324    	; 0x1290 <__EEPROM_REGION_LENGTH__+0x290>
    13d4:	f9 85       	ldd	r31, Y+9	; 0x09
    13d6:	f4 ff       	sbrs	r31, 4
    13d8:	0a c0       	rjmp	.+20     	; 0x13ee <__EEPROM_REGION_LENGTH__+0x3ee>
    13da:	e9 81       	ldd	r30, Y+1	; 0x01
    13dc:	fa 81       	ldd	r31, Y+2	; 0x02
    13de:	ec 0d       	add	r30, r12
    13e0:	fd 1d       	adc	r31, r13
    13e2:	8e e2       	ldi	r24, 0x2E	; 46
    13e4:	80 83       	st	Z, r24
    13e6:	96 01       	movw	r18, r12
    13e8:	2f 5f       	subi	r18, 0xFF	; 255
    13ea:	3f 4f       	sbci	r19, 0xFF	; 255
    13ec:	69 01       	movw	r12, r18
    13ee:	49 81       	ldd	r20, Y+1	; 0x01
    13f0:	5a 81       	ldd	r21, Y+2	; 0x02
    13f2:	4c 0d       	add	r20, r12
    13f4:	5d 1d       	adc	r21, r13
    13f6:	5c 87       	std	Y+12, r21	; 0x0c
    13f8:	4b 87       	std	Y+11, r20	; 0x0b
    13fa:	fa 01       	movw	r30, r20
    13fc:	10 82       	st	Z, r1
    13fe:	fd 89       	ldd	r31, Y+21	; 0x15
    1400:	f5 36       	cpi	r31, 0x65	; 101
    1402:	09 f0       	breq	.+2      	; 0x1406 <__EEPROM_REGION_LENGTH__+0x406>
    1404:	61 c0       	rjmp	.+194    	; 0x14c8 <__EEPROM_REGION_LENGTH__+0x4c8>
    1406:	e9 81       	ldd	r30, Y+1	; 0x01
    1408:	fa 81       	ldd	r31, Y+2	; 0x02
    140a:	28 a1       	ldd	r18, Y+32	; 0x20
    140c:	39 a1       	ldd	r19, Y+33	; 0x21
    140e:	e2 0f       	add	r30, r18
    1410:	f3 1f       	adc	r31, r19
    1412:	31 97       	sbiw	r30, 0x01	; 1
    1414:	10 82       	st	Z, r1
    1416:	37 fe       	sbrs	r3, 7
    1418:	06 c0       	rjmp	.+12     	; 0x1426 <__EEPROM_REGION_LENGTH__+0x426>
    141a:	31 94       	neg	r3
    141c:	21 94       	neg	r2
    141e:	31 08       	sbc	r3, r1
    1420:	01 e0       	ldi	r16, 0x01	; 1
    1422:	10 e0       	ldi	r17, 0x00	; 0
    1424:	02 c0       	rjmp	.+4      	; 0x142a <__EEPROM_REGION_LENGTH__+0x42a>
    1426:	00 e0       	ldi	r16, 0x00	; 0
    1428:	10 e0       	ldi	r17, 0x00	; 0
    142a:	e8 a1       	ldd	r30, Y+32	; 0x20
    142c:	f9 a1       	ldd	r31, Y+33	; 0x21
    142e:	31 97       	sbiw	r30, 0x01	; 1
    1430:	49 81       	ldd	r20, Y+1	; 0x01
    1432:	5a 81       	ldd	r21, Y+2	; 0x02
    1434:	e4 0f       	add	r30, r20
    1436:	f5 1f       	adc	r31, r21
    1438:	22 e0       	ldi	r18, 0x02	; 2
    143a:	30 e0       	ldi	r19, 0x00	; 0
    143c:	8a e0       	ldi	r24, 0x0A	; 10
    143e:	e8 2e       	mov	r14, r24
    1440:	f1 2c       	mov	r15, r1
    1442:	cf 01       	movw	r24, r30
    1444:	49 81       	ldd	r20, Y+1	; 0x01
    1446:	5a 81       	ldd	r21, Y+2	; 0x02
    1448:	84 1b       	sub	r24, r20
    144a:	95 0b       	sbc	r25, r21
    144c:	21 14       	cp	r2, r1
    144e:	31 04       	cpc	r3, r1
    1450:	79 f0       	breq	.+30     	; 0x1470 <__EEPROM_REGION_LENGTH__+0x470>
    1452:	c1 01       	movw	r24, r2
    1454:	b7 01       	movw	r22, r14
    1456:	0e 94 8d 21 	call	0x431a	; 0x431a <__divmodhi4>
    145a:	80 5d       	subi	r24, 0xD0	; 208
    145c:	82 93       	st	-Z, r24
    145e:	1b 01       	movw	r2, r22
    1460:	21 50       	subi	r18, 0x01	; 1
    1462:	31 09       	sbc	r19, r1
    1464:	8f 81       	ldd	r24, Y+7	; 0x07
    1466:	98 85       	ldd	r25, Y+8	; 0x08
    1468:	01 97       	sbiw	r24, 0x01	; 1
    146a:	98 87       	std	Y+8, r25	; 0x08
    146c:	8f 83       	std	Y+7, r24	; 0x07
    146e:	e9 cf       	rjmp	.-46     	; 0x1442 <__EEPROM_REGION_LENGTH__+0x442>
    1470:	12 16       	cp	r1, r18
    1472:	13 06       	cpc	r1, r19
    1474:	74 f3       	brlt	.-36     	; 0x1452 <__EEPROM_REGION_LENGTH__+0x452>
    1476:	fc 01       	movw	r30, r24
    1478:	31 97       	sbiw	r30, 0x01	; 1
    147a:	e4 0f       	add	r30, r20
    147c:	f5 1f       	adc	r31, r21
    147e:	01 2b       	or	r16, r17
    1480:	11 f4       	brne	.+4      	; 0x1486 <__EEPROM_REGION_LENGTH__+0x486>
    1482:	2b e2       	ldi	r18, 0x2B	; 43
    1484:	01 c0       	rjmp	.+2      	; 0x1488 <__EEPROM_REGION_LENGTH__+0x488>
    1486:	2d e2       	ldi	r18, 0x2D	; 45
    1488:	20 83       	st	Z, r18
    148a:	02 97       	sbiw	r24, 0x02	; 2
    148c:	e9 81       	ldd	r30, Y+1	; 0x01
    148e:	fa 81       	ldd	r31, Y+2	; 0x02
    1490:	e8 0f       	add	r30, r24
    1492:	f9 1f       	adc	r31, r25
    1494:	2a a1       	ldd	r18, Y+34	; 0x22
    1496:	3b a1       	ldd	r19, Y+35	; 0x23
    1498:	21 54       	subi	r18, 0x41	; 65
    149a:	31 09       	sbc	r19, r1
    149c:	2a 31       	cpi	r18, 0x1A	; 26
    149e:	31 05       	cpc	r19, r1
    14a0:	10 f0       	brcs	.+4      	; 0x14a6 <__EEPROM_REGION_LENGTH__+0x4a6>
    14a2:	25 e6       	ldi	r18, 0x65	; 101
    14a4:	01 c0       	rjmp	.+2      	; 0x14a8 <__EEPROM_REGION_LENGTH__+0x4a8>
    14a6:	25 e4       	ldi	r18, 0x45	; 69
    14a8:	20 83       	st	Z, r18
    14aa:	2f 81       	ldd	r18, Y+7	; 0x07
    14ac:	38 85       	ldd	r19, Y+8	; 0x08
    14ae:	22 50       	subi	r18, 0x02	; 2
    14b0:	31 09       	sbc	r19, r1
    14b2:	38 87       	std	Y+8, r19	; 0x08
    14b4:	2f 83       	std	Y+7, r18	; 0x07
    14b6:	c8 16       	cp	r12, r24
    14b8:	d9 06       	cpc	r13, r25
    14ba:	34 f4       	brge	.+12     	; 0x14c8 <__EEPROM_REGION_LENGTH__+0x4c8>
    14bc:	af 01       	movw	r20, r30
    14be:	60 e8       	ldi	r22, 0x80	; 128
    14c0:	8b 85       	ldd	r24, Y+11	; 0x0b
    14c2:	9c 85       	ldd	r25, Y+12	; 0x0c
    14c4:	0e 94 42 22 	call	0x4484	; 0x4484 <strcpy>
    14c8:	49 81       	ldd	r20, Y+1	; 0x01
    14ca:	5a 81       	ldd	r21, Y+2	; 0x02
    14cc:	3a 01       	movw	r6, r20
    14ce:	80 e8       	ldi	r24, 0x80	; 128
    14d0:	88 2e       	mov	r8, r24
    14d2:	99 85       	ldd	r25, Y+9	; 0x09
    14d4:	91 ff       	sbrs	r25, 1
    14d6:	2e c0       	rjmp	.+92     	; 0x1534 <__EEPROM_REGION_LENGTH__+0x534>
    14d8:	90 fd       	sbrc	r25, 0
    14da:	2c c0       	rjmp	.+88     	; 0x1534 <__EEPROM_REGION_LENGTH__+0x534>
    14dc:	ef 81       	ldd	r30, Y+7	; 0x07
    14de:	f8 85       	ldd	r31, Y+8	; 0x08
    14e0:	1e 16       	cp	r1, r30
    14e2:	1f 06       	cpc	r1, r31
    14e4:	3c f5       	brge	.+78     	; 0x1534 <__EEPROM_REGION_LENGTH__+0x534>
    14e6:	88 2d       	mov	r24, r8
    14e8:	b3 01       	movw	r22, r6
    14ea:	0e 94 00 22 	call	0x4400	; 0x4400 <strlen>
    14ee:	29 81       	ldd	r18, Y+1	; 0x01
    14f0:	3a 81       	ldd	r19, Y+2	; 0x02
    14f2:	82 0f       	add	r24, r18
    14f4:	93 1f       	adc	r25, r19
    14f6:	9c 01       	movw	r18, r24
    14f8:	49 81       	ldd	r20, Y+1	; 0x01
    14fa:	5a 81       	ldd	r21, Y+2	; 0x02
    14fc:	24 1b       	sub	r18, r20
    14fe:	35 0b       	sbc	r19, r21
    1500:	e9 89       	ldd	r30, Y+17	; 0x11
    1502:	fa 89       	ldd	r31, Y+18	; 0x12
    1504:	2e 17       	cp	r18, r30
    1506:	3f 07       	cpc	r19, r31
    1508:	4c f0       	brlt	.+18     	; 0x151c <__EEPROM_REGION_LENGTH__+0x51c>
    150a:	fc 01       	movw	r30, r24
    150c:	20 81       	ld	r18, Z
    150e:	ef 81       	ldd	r30, Y+7	; 0x07
    1510:	f8 85       	ldd	r31, Y+8	; 0x08
    1512:	e8 0f       	add	r30, r24
    1514:	f9 1f       	adc	r31, r25
    1516:	20 83       	st	Z, r18
    1518:	01 97       	sbiw	r24, 0x01	; 1
    151a:	ed cf       	rjmp	.-38     	; 0x14f6 <__EEPROM_REGION_LENGTH__+0x4f6>
    151c:	4f 81       	ldd	r20, Y+7	; 0x07
    151e:	58 85       	ldd	r21, Y+8	; 0x08
    1520:	60 e3       	ldi	r22, 0x30	; 48
    1522:	70 e0       	ldi	r23, 0x00	; 0
    1524:	89 81       	ldd	r24, Y+1	; 0x01
    1526:	9a 81       	ldd	r25, Y+2	; 0x02
    1528:	8e 0f       	add	r24, r30
    152a:	9f 1f       	adc	r25, r31
    152c:	0e 94 cc 22 	call	0x4598	; 0x4598 <memset>
    1530:	1c 8a       	std	Y+20, r1	; 0x14
    1532:	1b 8a       	std	Y+19, r1	; 0x13
    1534:	88 2d       	mov	r24, r8
    1536:	b3 01       	movw	r22, r6
    1538:	0e 94 00 22 	call	0x4400	; 0x4400 <strlen>
    153c:	e9 84       	ldd	r14, Y+9	; 0x09
    153e:	fa 84       	ldd	r15, Y+10	; 0x0a
    1540:	0b 89       	ldd	r16, Y+19	; 0x13
    1542:	1c 89       	ldd	r17, Y+20	; 0x14
    1544:	9c 01       	movw	r18, r24
    1546:	68 2d       	mov	r22, r8
    1548:	a3 01       	movw	r20, r6
    154a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    154c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    154e:	0e 94 37 15 	call	0x2a6e	; 0x2a6e <__pad>
    1552:	a6 96       	adiw	r28, 0x26	; 38
    1554:	e2 e1       	ldi	r30, 0x12	; 18
    1556:	0c 94 28 21 	jmp	0x4250	; 0x4250 <__epilogue_restores__>
    155a:	59 85       	ldd	r21, Y+9	; 0x09
    155c:	53 ff       	sbrs	r21, 3
    155e:	00 cd       	rjmp	.-1536   	; 0xf60 <__fmt_fp+0x8e>
    1560:	80 e2       	ldi	r24, 0x20	; 32
    1562:	f0 cc       	rjmp	.-1568   	; 0xf44 <__fmt_fp+0x72>
    1564:	2c ef       	ldi	r18, 0xFC	; 252
    1566:	22 16       	cp	r2, r18
    1568:	2f ef       	ldi	r18, 0xFF	; 255
    156a:	32 06       	cpc	r3, r18
    156c:	4c f0       	brlt	.+18     	; 0x1580 <__EEPROM_REGION_LENGTH__+0x580>
    156e:	4d a1       	ldd	r20, Y+37	; 0x25
    1570:	5e a1       	ldd	r21, Y+38	; 0x26
    1572:	24 16       	cp	r2, r20
    1574:	35 06       	cpc	r3, r21
    1576:	0c f4       	brge	.+2      	; 0x157a <__EEPROM_REGION_LENGTH__+0x57a>
    1578:	df cd       	rjmp	.-1090   	; 0x1138 <__EEPROM_REGION_LENGTH__+0x138>
    157a:	55 e6       	ldi	r21, 0x65	; 101
    157c:	5d 8b       	std	Y+21, r21	; 0x15
    157e:	fb cd       	rjmp	.-1034   	; 0x1176 <__EEPROM_REGION_LENGTH__+0x176>
    1580:	35 e6       	ldi	r19, 0x65	; 101
    1582:	3d 8b       	std	Y+21, r19	; 0x15
    1584:	f8 cd       	rjmp	.-1040   	; 0x1176 <__EEPROM_REGION_LENGTH__+0x176>
    1586:	46 e6       	ldi	r20, 0x66	; 102
    1588:	4d 8b       	std	Y+21, r20	; 0x15
    158a:	f5 cd       	rjmp	.-1046   	; 0x1176 <__EEPROM_REGION_LENGTH__+0x176>

Disassembly of section .text.__fmt_a:

0000158c <__fmt_a>:
    158c:	a0 e2       	ldi	r26, 0x20	; 32
    158e:	b0 e0       	ldi	r27, 0x00	; 0
    1590:	ec ec       	ldi	r30, 0xCC	; 204
    1592:	fa e0       	ldi	r31, 0x0A	; 10
    1594:	0c 94 f1 20 	jmp	0x41e2	; 0x41e2 <__prologue_saves__>
    1598:	9d 8f       	std	Y+29, r25	; 0x1d
    159a:	8c 8f       	std	Y+28, r24	; 0x1c
    159c:	fb 01       	movw	r30, r22
    159e:	29 83       	std	Y+1, r18	; 0x01
    15a0:	20 81       	ld	r18, Z
    15a2:	2d 83       	std	Y+5, r18	; 0x05
    15a4:	31 81       	ldd	r19, Z+1	; 0x01
    15a6:	3e 8f       	std	Y+30, r19	; 0x1e
    15a8:	82 81       	ldd	r24, Z+2	; 0x02
    15aa:	93 81       	ldd	r25, Z+3	; 0x03
    15ac:	9b 8b       	std	Y+19, r25	; 0x13
    15ae:	8a 8b       	std	Y+18, r24	; 0x12
    15b0:	24 81       	ldd	r18, Z+4	; 0x04
    15b2:	35 81       	ldd	r19, Z+5	; 0x05
    15b4:	39 87       	std	Y+9, r19	; 0x09
    15b6:	28 87       	std	Y+8, r18	; 0x08
    15b8:	80 85       	ldd	r24, Z+8	; 0x08
    15ba:	91 85       	ldd	r25, Z+9	; 0x09
    15bc:	99 8f       	std	Y+25, r25	; 0x19
    15be:	88 8f       	std	Y+24, r24	; 0x18
    15c0:	46 80       	ldd	r4, Z+6	; 0x06
    15c2:	57 80       	ldd	r5, Z+7	; 0x07
    15c4:	fa 01       	movw	r30, r20
    15c6:	c0 80       	ld	r12, Z
    15c8:	d1 80       	ldd	r13, Z+1	; 0x01
    15ca:	e2 80       	ldd	r14, Z+2	; 0x02
    15cc:	f3 80       	ldd	r15, Z+3	; 0x03
    15ce:	20 e0       	ldi	r18, 0x00	; 0
    15d0:	30 e0       	ldi	r19, 0x00	; 0
    15d2:	a9 01       	movw	r20, r18
    15d4:	c7 01       	movw	r24, r14
    15d6:	b6 01       	movw	r22, r12
    15d8:	0e 94 32 23 	call	0x4664	; 0x4664 <__cmpsf2>
    15dc:	87 ff       	sbrs	r24, 7
    15de:	06 c0       	rjmp	.+12     	; 0x15ec <__fmt_a+0x60>
    15e0:	f7 fa       	bst	r15, 7
    15e2:	f0 94       	com	r15
    15e4:	f7 f8       	bld	r15, 7
    15e6:	f0 94       	com	r15
    15e8:	8d e2       	ldi	r24, 0x2D	; 45
    15ea:	04 c0       	rjmp	.+8      	; 0x15f4 <__fmt_a+0x68>
    15ec:	5d 81       	ldd	r21, Y+5	; 0x05
    15ee:	52 ff       	sbrs	r21, 2
    15f0:	f6 c2       	rjmp	.+1516   	; 0x1bde <__fmt_a+0x652>
    15f2:	8b e2       	ldi	r24, 0x2B	; 43
    15f4:	f2 01       	movw	r30, r4
    15f6:	80 83       	st	Z, r24
    15f8:	28 85       	ldd	r18, Y+8	; 0x08
    15fa:	39 85       	ldd	r19, Y+9	; 0x09
    15fc:	21 50       	subi	r18, 0x01	; 1
    15fe:	31 09       	sbc	r19, r1
    1600:	3f 87       	std	Y+15, r19	; 0x0f
    1602:	2e 87       	std	Y+14, r18	; 0x0e
    1604:	41 e0       	ldi	r20, 0x01	; 1
    1606:	50 e0       	ldi	r21, 0x00	; 0
    1608:	5c 83       	std	Y+4, r21	; 0x04
    160a:	4b 83       	std	Y+3, r20	; 0x03
    160c:	06 c0       	rjmp	.+12     	; 0x161a <__fmt_a+0x8e>
    160e:	88 85       	ldd	r24, Y+8	; 0x08
    1610:	99 85       	ldd	r25, Y+9	; 0x09
    1612:	9f 87       	std	Y+15, r25	; 0x0f
    1614:	8e 87       	std	Y+14, r24	; 0x0e
    1616:	1c 82       	std	Y+4, r1	; 0x04
    1618:	1b 82       	std	Y+3, r1	; 0x03
    161a:	b7 01       	movw	r22, r14
    161c:	a6 01       	movw	r20, r12
    161e:	7f 77       	andi	r23, 0x7F	; 127
    1620:	e9 81       	ldd	r30, Y+1	; 0x01
    1622:	0e 2e       	mov	r0, r30
    1624:	00 0c       	add	r0, r0
    1626:	ff 0b       	sbc	r31, r31
    1628:	f9 8b       	std	Y+17, r31	; 0x11
    162a:	e8 8b       	std	Y+16, r30	; 0x10
    162c:	41 15       	cp	r20, r1
    162e:	51 05       	cpc	r21, r1
    1630:	f0 e8       	ldi	r31, 0x80	; 128
    1632:	6f 07       	cpc	r22, r31
    1634:	ff e7       	ldi	r31, 0x7F	; 127
    1636:	7f 07       	cpc	r23, r31
    1638:	c1 f4       	brne	.+48     	; 0x166a <__fmt_a+0xde>
    163a:	28 89       	ldd	r18, Y+16	; 0x10
    163c:	39 89       	ldd	r19, Y+17	; 0x11
    163e:	21 54       	subi	r18, 0x41	; 65
    1640:	31 09       	sbc	r19, r1
    1642:	8b 81       	ldd	r24, Y+3	; 0x03
    1644:	9c 81       	ldd	r25, Y+4	; 0x04
    1646:	84 0d       	add	r24, r4
    1648:	95 1d       	adc	r25, r5
    164a:	2a 31       	cpi	r18, 0x1A	; 26
    164c:	31 05       	cpc	r19, r1
    164e:	20 f4       	brcc	.+8      	; 0x1658 <__fmt_a+0xcc>
    1650:	43 e8       	ldi	r20, 0x83	; 131
    1652:	56 e0       	ldi	r21, 0x06	; 6
    1654:	60 e0       	ldi	r22, 0x00	; 0
    1656:	03 c0       	rjmp	.+6      	; 0x165e <__fmt_a+0xd2>
    1658:	47 e8       	ldi	r20, 0x87	; 135
    165a:	56 e0       	ldi	r21, 0x06	; 6
    165c:	60 e0       	ldi	r22, 0x00	; 0
    165e:	0e 94 42 22 	call	0x4484	; 0x4484 <strcpy>
    1662:	67 e8       	ldi	r22, 0x87	; 135
    1664:	76 e0       	ldi	r23, 0x06	; 6
    1666:	80 e0       	ldi	r24, 0x00	; 0
    1668:	1c c0       	rjmp	.+56     	; 0x16a2 <__fmt_a+0x116>
    166a:	8b 81       	ldd	r24, Y+3	; 0x03
    166c:	9c 81       	ldd	r25, Y+4	; 0x04
    166e:	84 0d       	add	r24, r4
    1670:	95 1d       	adc	r25, r5
    1672:	41 30       	cpi	r20, 0x01	; 1
    1674:	51 05       	cpc	r21, r1
    1676:	60 48       	sbci	r22, 0x80	; 128
    1678:	7f 47       	sbci	r23, 0x7F	; 127
    167a:	e8 f0       	brcs	.+58     	; 0x16b6 <__fmt_a+0x12a>
    167c:	28 89       	ldd	r18, Y+16	; 0x10
    167e:	39 89       	ldd	r19, Y+17	; 0x11
    1680:	21 54       	subi	r18, 0x41	; 65
    1682:	31 09       	sbc	r19, r1
    1684:	2a 31       	cpi	r18, 0x1A	; 26
    1686:	31 05       	cpc	r19, r1
    1688:	20 f4       	brcc	.+8      	; 0x1692 <__fmt_a+0x106>
    168a:	4b e8       	ldi	r20, 0x8B	; 139
    168c:	56 e0       	ldi	r21, 0x06	; 6
    168e:	60 e0       	ldi	r22, 0x00	; 0
    1690:	03 c0       	rjmp	.+6      	; 0x1698 <__fmt_a+0x10c>
    1692:	4f e8       	ldi	r20, 0x8F	; 143
    1694:	56 e0       	ldi	r21, 0x06	; 6
    1696:	60 e0       	ldi	r22, 0x00	; 0
    1698:	0e 94 42 22 	call	0x4484	; 0x4484 <strcpy>
    169c:	6f e8       	ldi	r22, 0x8F	; 143
    169e:	76 e0       	ldi	r23, 0x06	; 6
    16a0:	80 e0       	ldi	r24, 0x00	; 0
    16a2:	0e 94 00 22 	call	0x4400	; 0x4400 <strlen>
    16a6:	a2 01       	movw	r20, r4
    16a8:	60 e8       	ldi	r22, 0x80	; 128
    16aa:	ed 80       	ldd	r14, Y+5	; 0x05
    16ac:	fe 8c       	ldd	r15, Y+30	; 0x1e
    16ae:	08 85       	ldd	r16, Y+8	; 0x08
    16b0:	19 85       	ldd	r17, Y+9	; 0x09
    16b2:	9c 01       	movw	r18, r24
    16b4:	8c c2       	rjmp	.+1304   	; 0x1bce <__fmt_a+0x642>
    16b6:	20 e3       	ldi	r18, 0x30	; 48
    16b8:	fc 01       	movw	r30, r24
    16ba:	20 83       	st	Z, r18
    16bc:	eb 81       	ldd	r30, Y+3	; 0x03
    16be:	fc 81       	ldd	r31, Y+4	; 0x04
    16c0:	31 96       	adiw	r30, 0x01	; 1
    16c2:	e4 0d       	add	r30, r4
    16c4:	f5 1d       	adc	r31, r5
    16c6:	2b 81       	ldd	r18, Y+3	; 0x03
    16c8:	3c 81       	ldd	r19, Y+4	; 0x04
    16ca:	2e 5f       	subi	r18, 0xFE	; 254
    16cc:	3f 4f       	sbci	r19, 0xFF	; 255
    16ce:	3c 83       	std	Y+4, r19	; 0x04
    16d0:	2b 83       	std	Y+3, r18	; 0x03
    16d2:	48 89       	ldd	r20, Y+16	; 0x10
    16d4:	59 89       	ldd	r21, Y+17	; 0x11
    16d6:	41 54       	subi	r20, 0x41	; 65
    16d8:	51 09       	sbc	r21, r1
    16da:	5b 8f       	std	Y+27, r21	; 0x1b
    16dc:	4a 8f       	std	Y+26, r20	; 0x1a
    16de:	4a 31       	cpi	r20, 0x1A	; 26
    16e0:	51 05       	cpc	r21, r1
    16e2:	10 f0       	brcs	.+4      	; 0x16e8 <__fmt_a+0x15c>
    16e4:	88 e7       	ldi	r24, 0x78	; 120
    16e6:	01 c0       	rjmp	.+2      	; 0x16ea <__fmt_a+0x15e>
    16e8:	88 e5       	ldi	r24, 0x58	; 88
    16ea:	80 83       	st	Z, r24
    16ec:	20 e0       	ldi	r18, 0x00	; 0
    16ee:	30 e0       	ldi	r19, 0x00	; 0
    16f0:	a9 01       	movw	r20, r18
    16f2:	c7 01       	movw	r24, r14
    16f4:	b6 01       	movw	r22, r12
    16f6:	0e 94 32 23 	call	0x4664	; 0x4664 <__cmpsf2>
    16fa:	61 2c       	mov	r6, r1
    16fc:	71 2c       	mov	r7, r1
    16fe:	1f 8e       	std	Y+31, r1	; 0x1f
    1700:	19 82       	std	Y+1, r1	; 0x01
    1702:	88 23       	and	r24, r24
    1704:	09 f4       	brne	.+2      	; 0x1708 <__fmt_a+0x17c>
    1706:	64 c0       	rjmp	.+200    	; 0x17d0 <__fmt_a+0x244>
    1708:	50 e8       	ldi	r21, 0x80	; 128
    170a:	58 a3       	std	Y+32, r21	; 0x20
    170c:	8f e3       	ldi	r24, 0x3F	; 63
    170e:	8a 83       	std	Y+2, r24	; 0x02
    1710:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1712:	39 81       	ldd	r19, Y+1	; 0x01
    1714:	48 a1       	ldd	r20, Y+32	; 0x20
    1716:	5a 81       	ldd	r21, Y+2	; 0x02
    1718:	6f 8d       	ldd	r22, Y+31	; 0x1f
    171a:	79 81       	ldd	r23, Y+1	; 0x01
    171c:	88 a1       	ldd	r24, Y+32	; 0x20
    171e:	9a 81       	ldd	r25, Y+2	; 0x02
    1720:	0e 94 0a 23 	call	0x4614	; 0x4614 <__addsf3>
    1724:	5b 01       	movw	r10, r22
    1726:	8c 01       	movw	r16, r24
    1728:	a7 01       	movw	r20, r14
    172a:	96 01       	movw	r18, r12
    172c:	0e 94 37 23 	call	0x466e	; 0x466e <__gesf2>
    1730:	18 16       	cp	r1, r24
    1732:	0c f4       	brge	.+2      	; 0x1736 <__fmt_a+0x1aa>
    1734:	42 c0       	rjmp	.+132    	; 0x17ba <__fmt_a+0x22e>
    1736:	9f ef       	ldi	r25, 0xFF	; 255
    1738:	69 1a       	sub	r6, r25
    173a:	79 0a       	sbc	r7, r25
    173c:	af 8e       	std	Y+31, r10	; 0x1f
    173e:	b9 82       	std	Y+1, r11	; 0x01
    1740:	08 a3       	std	Y+32, r16	; 0x20
    1742:	1a 83       	std	Y+2, r17	; 0x02
    1744:	e5 cf       	rjmp	.-54     	; 0x1710 <__fmt_a+0x184>
    1746:	20 e0       	ldi	r18, 0x00	; 0
    1748:	30 e0       	ldi	r19, 0x00	; 0
    174a:	40 e0       	ldi	r20, 0x00	; 0
    174c:	5f e3       	ldi	r21, 0x3F	; 63
    174e:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1750:	79 81       	ldd	r23, Y+1	; 0x01
    1752:	88 a1       	ldd	r24, Y+32	; 0x20
    1754:	9a 81       	ldd	r25, Y+2	; 0x02
    1756:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3>
    175a:	20 e0       	ldi	r18, 0x00	; 0
    175c:	30 e0       	ldi	r19, 0x00	; 0
    175e:	a9 01       	movw	r20, r18
    1760:	0e 94 32 23 	call	0x4664	; 0x4664 <__cmpsf2>
    1764:	81 11       	cpse	r24, r1
    1766:	18 c0       	rjmp	.+48     	; 0x1798 <__fmt_a+0x20c>
    1768:	20 e0       	ldi	r18, 0x00	; 0
    176a:	30 e0       	ldi	r19, 0x00	; 0
    176c:	40 e8       	ldi	r20, 0x80	; 128
    176e:	5a e5       	ldi	r21, 0x5A	; 90
    1770:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1772:	79 81       	ldd	r23, Y+1	; 0x01
    1774:	88 a1       	ldd	r24, Y+32	; 0x20
    1776:	9a 81       	ldd	r25, Y+2	; 0x02
    1778:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3>
    177c:	6f 8f       	std	Y+31, r22	; 0x1f
    177e:	79 83       	std	Y+1, r23	; 0x01
    1780:	88 a3       	std	Y+32, r24	; 0x20
    1782:	9a 83       	std	Y+2, r25	; 0x02
    1784:	20 e0       	ldi	r18, 0x00	; 0
    1786:	30 e0       	ldi	r19, 0x00	; 0
    1788:	40 e8       	ldi	r20, 0x80	; 128
    178a:	5a e5       	ldi	r21, 0x5A	; 90
    178c:	c7 01       	movw	r24, r14
    178e:	b6 01       	movw	r22, r12
    1790:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3>
    1794:	6b 01       	movw	r12, r22
    1796:	7c 01       	movw	r14, r24
    1798:	20 e0       	ldi	r18, 0x00	; 0
    179a:	30 e0       	ldi	r19, 0x00	; 0
    179c:	40 e0       	ldi	r20, 0x00	; 0
    179e:	5f e3       	ldi	r21, 0x3F	; 63
    17a0:	6f 8d       	ldd	r22, Y+31	; 0x1f
    17a2:	79 81       	ldd	r23, Y+1	; 0x01
    17a4:	88 a1       	ldd	r24, Y+32	; 0x20
    17a6:	9a 81       	ldd	r25, Y+2	; 0x02
    17a8:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3>
    17ac:	6f 8f       	std	Y+31, r22	; 0x1f
    17ae:	79 83       	std	Y+1, r23	; 0x01
    17b0:	88 a3       	std	Y+32, r24	; 0x20
    17b2:	9a 83       	std	Y+2, r25	; 0x02
    17b4:	a1 e0       	ldi	r26, 0x01	; 1
    17b6:	6a 1a       	sub	r6, r26
    17b8:	71 08       	sbc	r7, r1
    17ba:	2f 8d       	ldd	r18, Y+31	; 0x1f
    17bc:	39 81       	ldd	r19, Y+1	; 0x01
    17be:	48 a1       	ldd	r20, Y+32	; 0x20
    17c0:	5a 81       	ldd	r21, Y+2	; 0x02
    17c2:	c7 01       	movw	r24, r14
    17c4:	b6 01       	movw	r22, r12
    17c6:	0e 94 32 23 	call	0x4664	; 0x4664 <__cmpsf2>
    17ca:	87 fd       	sbrc	r24, 7
    17cc:	bc cf       	rjmp	.-136    	; 0x1746 <__fmt_a+0x1ba>
    17ce:	04 c0       	rjmp	.+8      	; 0x17d8 <__fmt_a+0x24c>
    17d0:	e0 e8       	ldi	r30, 0x80	; 128
    17d2:	e8 a3       	std	Y+32, r30	; 0x20
    17d4:	ff e3       	ldi	r31, 0x3F	; 63
    17d6:	fa 83       	std	Y+2, r31	; 0x02
    17d8:	2a 89       	ldd	r18, Y+18	; 0x12
    17da:	3b 89       	ldd	r19, Y+19	; 0x13
    17dc:	37 fd       	sbrc	r19, 7
    17de:	02 c0       	rjmp	.+4      	; 0x17e4 <__fmt_a+0x258>
    17e0:	c9 01       	movw	r24, r18
    17e2:	02 c0       	rjmp	.+4      	; 0x17e8 <__fmt_a+0x25c>
    17e4:	88 e1       	ldi	r24, 0x18	; 24
    17e6:	90 e0       	ldi	r25, 0x00	; 0
    17e8:	ac 01       	movw	r20, r24
    17ea:	4f 5f       	subi	r20, 0xFF	; 255
    17ec:	5f 4f       	sbci	r21, 0xFF	; 255
    17ee:	5b 87       	std	Y+11, r21	; 0x0b
    17f0:	4a 87       	std	Y+10, r20	; 0x0a
    17f2:	8f 8c       	ldd	r8, Y+31	; 0x1f
    17f4:	99 80       	ldd	r9, Y+1	; 0x01
    17f6:	a8 a0       	ldd	r10, Y+32	; 0x20
    17f8:	ba 80       	ldd	r11, Y+2	; 0x02
    17fa:	16 01       	movw	r2, r12
    17fc:	87 01       	movw	r16, r14
    17fe:	1f 82       	std	Y+7, r1	; 0x07
    1800:	1e 82       	std	Y+6, r1	; 0x06
    1802:	94 01       	movw	r18, r8
    1804:	a5 01       	movw	r20, r10
    1806:	b1 01       	movw	r22, r2
    1808:	c8 01       	movw	r24, r16
    180a:	0e 94 44 23 	call	0x4688	; 0x4688 <__divsf3>
    180e:	0e 94 9e 14 	call	0x293c	; 0x293c <floorf>
    1812:	6c 8b       	std	Y+20, r22	; 0x14
    1814:	7d 8b       	std	Y+21, r23	; 0x15
    1816:	8e 8b       	std	Y+22, r24	; 0x16
    1818:	9f 8b       	std	Y+23, r25	; 0x17
    181a:	94 01       	movw	r18, r8
    181c:	a5 01       	movw	r20, r10
    181e:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3>
    1822:	9b 01       	movw	r18, r22
    1824:	ac 01       	movw	r20, r24
    1826:	b1 01       	movw	r22, r2
    1828:	c8 01       	movw	r24, r16
    182a:	0e 94 09 23 	call	0x4612	; 0x4612 <__subsf3>
    182e:	1b 01       	movw	r2, r22
    1830:	8c 01       	movw	r16, r24
    1832:	20 e0       	ldi	r18, 0x00	; 0
    1834:	30 e0       	ldi	r19, 0x00	; 0
    1836:	40 e8       	ldi	r20, 0x80	; 128
    1838:	5d e3       	ldi	r21, 0x3D	; 61
    183a:	b4 01       	movw	r22, r8
    183c:	c5 01       	movw	r24, r10
    183e:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3>
    1842:	4b 01       	movw	r8, r22
    1844:	5c 01       	movw	r10, r24
    1846:	8e 81       	ldd	r24, Y+6	; 0x06
    1848:	9f 81       	ldd	r25, Y+7	; 0x07
    184a:	01 96       	adiw	r24, 0x01	; 1
    184c:	9f 83       	std	Y+7, r25	; 0x07
    184e:	8e 83       	std	Y+6, r24	; 0x06
    1850:	ea 89       	ldd	r30, Y+18	; 0x12
    1852:	fb 89       	ldd	r31, Y+19	; 0x13
    1854:	f7 ff       	sbrs	r31, 7
    1856:	09 c0       	rjmp	.+18     	; 0x186a <__fmt_a+0x2de>
    1858:	20 e0       	ldi	r18, 0x00	; 0
    185a:	30 e0       	ldi	r19, 0x00	; 0
    185c:	a9 01       	movw	r20, r18
    185e:	b1 01       	movw	r22, r2
    1860:	c8 01       	movw	r24, r16
    1862:	0e 94 32 23 	call	0x4664	; 0x4664 <__cmpsf2>
    1866:	88 23       	and	r24, r24
    1868:	41 f0       	breq	.+16     	; 0x187a <__fmt_a+0x2ee>
    186a:	2a 85       	ldd	r18, Y+10	; 0x0a
    186c:	3b 85       	ldd	r19, Y+11	; 0x0b
    186e:	4e 81       	ldd	r20, Y+6	; 0x06
    1870:	5f 81       	ldd	r21, Y+7	; 0x07
    1872:	42 17       	cp	r20, r18
    1874:	53 07       	cpc	r21, r19
    1876:	2c f2       	brlt	.-118    	; 0x1802 <__fmt_a+0x276>
    1878:	04 c0       	rjmp	.+8      	; 0x1882 <__fmt_a+0x2f6>
    187a:	8e 81       	ldd	r24, Y+6	; 0x06
    187c:	9f 81       	ldd	r25, Y+7	; 0x07
    187e:	9b 87       	std	Y+11, r25	; 0x0b
    1880:	8a 87       	std	Y+10, r24	; 0x0a
    1882:	20 e0       	ldi	r18, 0x00	; 0
    1884:	30 e0       	ldi	r19, 0x00	; 0
    1886:	40 e0       	ldi	r20, 0x00	; 0
    1888:	51 e4       	ldi	r21, 0x41	; 65
    188a:	b4 01       	movw	r22, r8
    188c:	c5 01       	movw	r24, r10
    188e:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3>
    1892:	4b 01       	movw	r8, r22
    1894:	5c 01       	movw	r10, r24
    1896:	9b 01       	movw	r18, r22
    1898:	ac 01       	movw	r20, r24
    189a:	b1 01       	movw	r22, r2
    189c:	c8 01       	movw	r24, r16
    189e:	0e 94 32 23 	call	0x4664	; 0x4664 <__cmpsf2>
    18a2:	87 fd       	sbrc	r24, 7
    18a4:	12 c0       	rjmp	.+36     	; 0x18ca <__fmt_a+0x33e>
    18a6:	a5 01       	movw	r20, r10
    18a8:	94 01       	movw	r18, r8
    18aa:	b1 01       	movw	r22, r2
    18ac:	c8 01       	movw	r24, r16
    18ae:	0e 94 32 23 	call	0x4664	; 0x4664 <__cmpsf2>
    18b2:	81 11       	cpse	r24, r1
    18b4:	0d c0       	rjmp	.+26     	; 0x18d0 <__fmt_a+0x344>
    18b6:	6c 89       	ldd	r22, Y+20	; 0x14
    18b8:	7d 89       	ldd	r23, Y+21	; 0x15
    18ba:	8e 89       	ldd	r24, Y+22	; 0x16
    18bc:	9f 89       	ldd	r25, Y+23	; 0x17
    18be:	0e 94 10 23 	call	0x4620	; 0x4620 <__fixsfsi>
    18c2:	61 70       	andi	r22, 0x01	; 1
    18c4:	77 27       	eor	r23, r23
    18c6:	67 2b       	or	r22, r23
    18c8:	19 f4       	brne	.+6      	; 0x18d0 <__fmt_a+0x344>
    18ca:	81 2c       	mov	r8, r1
    18cc:	91 2c       	mov	r9, r1
    18ce:	54 01       	movw	r10, r8
    18d0:	a5 01       	movw	r20, r10
    18d2:	94 01       	movw	r18, r8
    18d4:	c7 01       	movw	r24, r14
    18d6:	b6 01       	movw	r22, r12
    18d8:	0e 94 0a 23 	call	0x4614	; 0x4614 <__addsf3>
    18dc:	6b 01       	movw	r12, r22
    18de:	7c 01       	movw	r14, r24
    18e0:	dc 01       	movw	r26, r24
    18e2:	cb 01       	movw	r24, r22
    18e4:	bf 77       	andi	r27, 0x7F	; 127
    18e6:	00 97       	sbiw	r24, 0x00	; 0
    18e8:	a0 48       	sbci	r26, 0x80	; 128
    18ea:	bf 47       	sbci	r27, 0x7F	; 127
    18ec:	09 f4       	brne	.+2      	; 0x18f0 <__fmt_a+0x364>
    18ee:	a5 ce       	rjmp	.-694    	; 0x163a <__fmt_a+0xae>
    18f0:	2e 84       	ldd	r2, Y+14	; 0x0e
    18f2:	3f 84       	ldd	r3, Y+15	; 0x0f
    18f4:	f2 e0       	ldi	r31, 0x02	; 2
    18f6:	2f 1a       	sub	r2, r31
    18f8:	31 08       	sbc	r3, r1
    18fa:	2a 85       	ldd	r18, Y+10	; 0x0a
    18fc:	3b 85       	ldd	r19, Y+11	; 0x0b
    18fe:	31 95       	neg	r19
    1900:	21 95       	neg	r18
    1902:	31 09       	sbc	r19, r1
    1904:	39 8b       	std	Y+17, r19	; 0x11
    1906:	28 8b       	std	Y+16, r18	; 0x10
    1908:	0b 81       	ldd	r16, Y+3	; 0x03
    190a:	1c 81       	ldd	r17, Y+4	; 0x04
    190c:	a1 2c       	mov	r10, r1
    190e:	b1 2c       	mov	r11, r1
    1910:	1f 82       	std	Y+7, r1	; 0x07
    1912:	1e 82       	std	Y+6, r1	; 0x06
    1914:	81 2c       	mov	r8, r1
    1916:	91 2c       	mov	r9, r1
    1918:	48 8d       	ldd	r20, Y+24	; 0x18
    191a:	59 8d       	ldd	r21, Y+25	; 0x19
    191c:	45 50       	subi	r20, 0x05	; 5
    191e:	51 09       	sbc	r21, r1
    1920:	5d 8b       	std	Y+21, r21	; 0x15
    1922:	4c 8b       	std	Y+20, r20	; 0x14
    1924:	ec 89       	ldd	r30, Y+20	; 0x14
    1926:	fd 89       	ldd	r31, Y+21	; 0x15
    1928:	0e 17       	cp	r16, r30
    192a:	1f 07       	cpc	r17, r31
    192c:	0c f0       	brlt	.+2      	; 0x1930 <__fmt_a+0x3a4>
    192e:	91 c0       	rjmp	.+290    	; 0x1a52 <__fmt_a+0x4c6>
    1930:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1932:	39 81       	ldd	r19, Y+1	; 0x01
    1934:	48 a1       	ldd	r20, Y+32	; 0x20
    1936:	5a 81       	ldd	r21, Y+2	; 0x02
    1938:	c7 01       	movw	r24, r14
    193a:	b6 01       	movw	r22, r12
    193c:	0e 94 44 23 	call	0x4688	; 0x4688 <__divsf3>
    1940:	0e 94 9e 14 	call	0x293c	; 0x293c <floorf>
    1944:	6a 87       	std	Y+10, r22	; 0x0a
    1946:	7b 87       	std	Y+11, r23	; 0x0b
    1948:	8c 87       	std	Y+12, r24	; 0x0c
    194a:	9d 87       	std	Y+13, r25	; 0x0d
    194c:	0e 94 10 23 	call	0x4620	; 0x4620 <__fixsfsi>
    1950:	ab 01       	movw	r20, r22
    1952:	61 15       	cp	r22, r1
    1954:	71 05       	cpc	r23, r1
    1956:	39 f4       	brne	.+14     	; 0x1966 <__fmt_a+0x3da>
    1958:	81 14       	cp	r8, r1
    195a:	91 04       	cpc	r9, r1
    195c:	21 f0       	breq	.+8      	; 0x1966 <__fmt_a+0x3da>
    195e:	5f ef       	ldi	r21, 0xFF	; 255
    1960:	a5 1a       	sub	r10, r21
    1962:	b5 0a       	sbc	r11, r21
    1964:	4d c0       	rjmp	.+154    	; 0x1a00 <__fmt_a+0x474>
    1966:	ee 81       	ldd	r30, Y+6	; 0x06
    1968:	ff 81       	ldd	r31, Y+7	; 0x07
    196a:	ef 2b       	or	r30, r31
    196c:	89 f4       	brne	.+34     	; 0x1990 <__fmt_a+0x404>
    196e:	81 14       	cp	r8, r1
    1970:	91 04       	cpc	r9, r1
    1972:	71 f0       	breq	.+28     	; 0x1990 <__fmt_a+0x404>
    1974:	f2 01       	movw	r30, r4
    1976:	e0 0f       	add	r30, r16
    1978:	f1 1f       	adc	r31, r17
    197a:	2e e2       	ldi	r18, 0x2E	; 46
    197c:	20 83       	st	Z, r18
    197e:	31 e0       	ldi	r19, 0x01	; 1
    1980:	23 1a       	sub	r2, r19
    1982:	31 08       	sbc	r3, r1
    1984:	0f 5f       	subi	r16, 0xFF	; 255
    1986:	1f 4f       	sbci	r17, 0xFF	; 255
    1988:	e1 e0       	ldi	r30, 0x01	; 1
    198a:	f0 e0       	ldi	r31, 0x00	; 0
    198c:	ff 83       	std	Y+7, r31	; 0x07
    198e:	ee 83       	std	Y+6, r30	; 0x06
    1990:	f2 01       	movw	r30, r4
    1992:	e0 0f       	add	r30, r16
    1994:	f1 1f       	adc	r31, r17
    1996:	95 01       	movw	r18, r10
    1998:	21 15       	cp	r18, r1
    199a:	31 05       	cpc	r19, r1
    199c:	29 f0       	breq	.+10     	; 0x19a8 <__fmt_a+0x41c>
    199e:	a0 e3       	ldi	r26, 0x30	; 48
    19a0:	a1 93       	st	Z+, r26
    19a2:	21 50       	subi	r18, 0x01	; 1
    19a4:	31 09       	sbc	r19, r1
    19a6:	f8 cf       	rjmp	.-16     	; 0x1998 <__fmt_a+0x40c>
    19a8:	f8 01       	movw	r30, r16
    19aa:	ea 0d       	add	r30, r10
    19ac:	fb 1d       	adc	r31, r11
    19ae:	ff 87       	std	Y+15, r31	; 0x0f
    19b0:	ee 87       	std	Y+14, r30	; 0x0e
    19b2:	2a 18       	sub	r2, r10
    19b4:	3b 08       	sbc	r3, r11
    19b6:	4a 30       	cpi	r20, 0x0A	; 10
    19b8:	51 05       	cpc	r21, r1
    19ba:	1c f4       	brge	.+6      	; 0x19c2 <__fmt_a+0x436>
    19bc:	60 5d       	subi	r22, 0xD0	; 208
    19be:	7f 4f       	sbci	r23, 0xFF	; 255
    19c0:	02 c0       	rjmp	.+4      	; 0x19c6 <__fmt_a+0x43a>
    19c2:	69 5a       	subi	r22, 0xA9	; 169
    19c4:	7f 4f       	sbci	r23, 0xFF	; 255
    19c6:	2a 8d       	ldd	r18, Y+26	; 0x1a
    19c8:	3b 8d       	ldd	r19, Y+27	; 0x1b
    19ca:	2a 31       	cpi	r18, 0x1A	; 26
    19cc:	31 05       	cpc	r19, r1
    19ce:	50 f4       	brcc	.+20     	; 0x19e4 <__fmt_a+0x458>
    19d0:	cb 01       	movw	r24, r22
    19d2:	80 62       	ori	r24, 0x20	; 32
    19d4:	81 56       	subi	r24, 0x61	; 97
    19d6:	91 09       	sbc	r25, r1
    19d8:	4a 97       	sbiw	r24, 0x1a	; 26
    19da:	20 f4       	brcc	.+8      	; 0x19e4 <__fmt_a+0x458>
    19dc:	cb 01       	movw	r24, r22
    19de:	0e 94 d5 22 	call	0x45aa	; 0x45aa <toupper>
    19e2:	bc 01       	movw	r22, r24
    19e4:	0e 85       	ldd	r16, Y+14	; 0x0e
    19e6:	1f 85       	ldd	r17, Y+15	; 0x0f
    19e8:	0f 5f       	subi	r16, 0xFF	; 255
    19ea:	1f 4f       	sbci	r17, 0xFF	; 255
    19ec:	ee 85       	ldd	r30, Y+14	; 0x0e
    19ee:	ff 85       	ldd	r31, Y+15	; 0x0f
    19f0:	e4 0d       	add	r30, r4
    19f2:	f5 1d       	adc	r31, r5
    19f4:	60 83       	st	Z, r22
    19f6:	31 e0       	ldi	r19, 0x01	; 1
    19f8:	23 1a       	sub	r2, r19
    19fa:	31 08       	sbc	r3, r1
    19fc:	a1 2c       	mov	r10, r1
    19fe:	b1 2c       	mov	r11, r1
    1a00:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1a02:	39 81       	ldd	r19, Y+1	; 0x01
    1a04:	48 a1       	ldd	r20, Y+32	; 0x20
    1a06:	5a 81       	ldd	r21, Y+2	; 0x02
    1a08:	6a 85       	ldd	r22, Y+10	; 0x0a
    1a0a:	7b 85       	ldd	r23, Y+11	; 0x0b
    1a0c:	8c 85       	ldd	r24, Y+12	; 0x0c
    1a0e:	9d 85       	ldd	r25, Y+13	; 0x0d
    1a10:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3>
    1a14:	9b 01       	movw	r18, r22
    1a16:	ac 01       	movw	r20, r24
    1a18:	c7 01       	movw	r24, r14
    1a1a:	b6 01       	movw	r22, r12
    1a1c:	0e 94 09 23 	call	0x4612	; 0x4612 <__subsf3>
    1a20:	6b 01       	movw	r12, r22
    1a22:	7c 01       	movw	r14, r24
    1a24:	20 e0       	ldi	r18, 0x00	; 0
    1a26:	30 e0       	ldi	r19, 0x00	; 0
    1a28:	40 e8       	ldi	r20, 0x80	; 128
    1a2a:	5d e3       	ldi	r21, 0x3D	; 61
    1a2c:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1a2e:	79 81       	ldd	r23, Y+1	; 0x01
    1a30:	88 a1       	ldd	r24, Y+32	; 0x20
    1a32:	9a 81       	ldd	r25, Y+2	; 0x02
    1a34:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3>
    1a38:	6f 8f       	std	Y+31, r22	; 0x1f
    1a3a:	79 83       	std	Y+1, r23	; 0x01
    1a3c:	88 a3       	std	Y+32, r24	; 0x20
    1a3e:	9a 83       	std	Y+2, r25	; 0x02
    1a40:	41 e0       	ldi	r20, 0x01	; 1
    1a42:	84 1a       	sub	r8, r20
    1a44:	91 08       	sbc	r9, r1
    1a46:	88 89       	ldd	r24, Y+16	; 0x10
    1a48:	99 89       	ldd	r25, Y+17	; 0x11
    1a4a:	88 15       	cp	r24, r8
    1a4c:	99 05       	cpc	r25, r9
    1a4e:	09 f0       	breq	.+2      	; 0x1a52 <__fmt_a+0x4c6>
    1a50:	69 cf       	rjmp	.-302    	; 0x1924 <__fmt_a+0x398>
    1a52:	2e 81       	ldd	r18, Y+6	; 0x06
    1a54:	3f 81       	ldd	r19, Y+7	; 0x07
    1a56:	23 2b       	or	r18, r19
    1a58:	51 f5       	brne	.+84     	; 0x1aae <__fmt_a+0x522>
    1a5a:	f2 01       	movw	r30, r4
    1a5c:	e0 0f       	add	r30, r16
    1a5e:	f1 1f       	adc	r31, r17
    1a60:	a1 14       	cp	r10, r1
    1a62:	b1 04       	cpc	r11, r1
    1a64:	e9 f0       	breq	.+58     	; 0x1aa0 <__fmt_a+0x514>
    1a66:	4a 89       	ldd	r20, Y+18	; 0x12
    1a68:	5b 89       	ldd	r21, Y+19	; 0x13
    1a6a:	14 16       	cp	r1, r20
    1a6c:	15 06       	cpc	r1, r21
    1a6e:	c4 f4       	brge	.+48     	; 0x1aa0 <__fmt_a+0x514>
    1a70:	5d 81       	ldd	r21, Y+5	; 0x05
    1a72:	50 fd       	sbrc	r21, 0
    1a74:	15 c0       	rjmp	.+42     	; 0x1aa0 <__fmt_a+0x514>
    1a76:	8e e2       	ldi	r24, 0x2E	; 46
    1a78:	80 83       	st	Z, r24
    1a7a:	f8 01       	movw	r30, r16
    1a7c:	31 96       	adiw	r30, 0x01	; 1
    1a7e:	e4 0d       	add	r30, r4
    1a80:	f5 1d       	adc	r31, r5
    1a82:	c5 01       	movw	r24, r10
    1a84:	20 e3       	ldi	r18, 0x30	; 48
    1a86:	21 93       	st	Z+, r18
    1a88:	01 97       	sbiw	r24, 0x01	; 1
    1a8a:	e9 f7       	brne	.-6      	; 0x1a86 <__fmt_a+0x4fa>
    1a8c:	0a 0d       	add	r16, r10
    1a8e:	1b 1d       	adc	r17, r11
    1a90:	0f 5f       	subi	r16, 0xFF	; 255
    1a92:	1f 4f       	sbci	r17, 0xFF	; 255
    1a94:	c5 01       	movw	r24, r10
    1a96:	80 95       	com	r24
    1a98:	90 95       	com	r25
    1a9a:	28 0e       	add	r2, r24
    1a9c:	39 1e       	adc	r3, r25
    1a9e:	07 c0       	rjmp	.+14     	; 0x1aae <__fmt_a+0x522>
    1aa0:	8d 81       	ldd	r24, Y+5	; 0x05
    1aa2:	84 ff       	sbrs	r24, 4
    1aa4:	04 c0       	rjmp	.+8      	; 0x1aae <__fmt_a+0x522>
    1aa6:	8e e2       	ldi	r24, 0x2E	; 46
    1aa8:	80 83       	st	Z, r24
    1aaa:	0f 5f       	subi	r16, 0xFF	; 255
    1aac:	1f 4f       	sbci	r17, 0xFF	; 255
    1aae:	f2 01       	movw	r30, r4
    1ab0:	e0 0f       	add	r30, r16
    1ab2:	f1 1f       	adc	r31, r17
    1ab4:	ff 83       	std	Y+7, r31	; 0x07
    1ab6:	ee 83       	std	Y+6, r30	; 0x06
    1ab8:	10 82       	st	Z, r1
    1aba:	e8 8d       	ldd	r30, Y+24	; 0x18
    1abc:	f9 8d       	ldd	r31, Y+25	; 0x19
    1abe:	e4 0d       	add	r30, r4
    1ac0:	f5 1d       	adc	r31, r5
    1ac2:	31 97       	sbiw	r30, 0x01	; 1
    1ac4:	10 82       	st	Z, r1
    1ac6:	77 fe       	sbrs	r7, 7
    1ac8:	07 c0       	rjmp	.+14     	; 0x1ad8 <__fmt_a+0x54c>
    1aca:	71 94       	neg	r7
    1acc:	61 94       	neg	r6
    1ace:	71 08       	sbc	r7, r1
    1ad0:	ee 24       	eor	r14, r14
    1ad2:	e3 94       	inc	r14
    1ad4:	f1 2c       	mov	r15, r1
    1ad6:	02 c0       	rjmp	.+4      	; 0x1adc <__fmt_a+0x550>
    1ad8:	e1 2c       	mov	r14, r1
    1ada:	f1 2c       	mov	r15, r1
    1adc:	e8 8d       	ldd	r30, Y+24	; 0x18
    1ade:	f9 8d       	ldd	r31, Y+25	; 0x19
    1ae0:	31 97       	sbiw	r30, 0x01	; 1
    1ae2:	e4 0d       	add	r30, r4
    1ae4:	f5 1d       	adc	r31, r5
    1ae6:	21 e0       	ldi	r18, 0x01	; 1
    1ae8:	30 e0       	ldi	r19, 0x00	; 0
    1aea:	8a e0       	ldi	r24, 0x0A	; 10
    1aec:	c8 2e       	mov	r12, r24
    1aee:	d1 2c       	mov	r13, r1
    1af0:	cf 01       	movw	r24, r30
    1af2:	84 19       	sub	r24, r4
    1af4:	95 09       	sbc	r25, r5
    1af6:	61 14       	cp	r6, r1
    1af8:	71 04       	cpc	r7, r1
    1afa:	69 f0       	breq	.+26     	; 0x1b16 <__fmt_a+0x58a>
    1afc:	c3 01       	movw	r24, r6
    1afe:	b6 01       	movw	r22, r12
    1b00:	0e 94 8d 21 	call	0x431a	; 0x431a <__divmodhi4>
    1b04:	80 5d       	subi	r24, 0xD0	; 208
    1b06:	82 93       	st	-Z, r24
    1b08:	3b 01       	movw	r6, r22
    1b0a:	21 50       	subi	r18, 0x01	; 1
    1b0c:	31 09       	sbc	r19, r1
    1b0e:	41 e0       	ldi	r20, 0x01	; 1
    1b10:	24 1a       	sub	r2, r20
    1b12:	31 08       	sbc	r3, r1
    1b14:	ed cf       	rjmp	.-38     	; 0x1af0 <__fmt_a+0x564>
    1b16:	21 30       	cpi	r18, 0x01	; 1
    1b18:	31 05       	cpc	r19, r1
    1b1a:	81 f3       	breq	.-32     	; 0x1afc <__fmt_a+0x570>
    1b1c:	fc 01       	movw	r30, r24
    1b1e:	31 97       	sbiw	r30, 0x01	; 1
    1b20:	e4 0d       	add	r30, r4
    1b22:	f5 1d       	adc	r31, r5
    1b24:	ef 28       	or	r14, r15
    1b26:	11 f4       	brne	.+4      	; 0x1b2c <__fmt_a+0x5a0>
    1b28:	2b e2       	ldi	r18, 0x2B	; 43
    1b2a:	01 c0       	rjmp	.+2      	; 0x1b2e <__fmt_a+0x5a2>
    1b2c:	2d e2       	ldi	r18, 0x2D	; 45
    1b2e:	20 83       	st	Z, r18
    1b30:	02 97       	sbiw	r24, 0x02	; 2
    1b32:	f2 01       	movw	r30, r4
    1b34:	e8 0f       	add	r30, r24
    1b36:	f9 1f       	adc	r31, r25
    1b38:	2a 8d       	ldd	r18, Y+26	; 0x1a
    1b3a:	3b 8d       	ldd	r19, Y+27	; 0x1b
    1b3c:	2a 31       	cpi	r18, 0x1A	; 26
    1b3e:	31 05       	cpc	r19, r1
    1b40:	10 f0       	brcs	.+4      	; 0x1b46 <__fmt_a+0x5ba>
    1b42:	20 e7       	ldi	r18, 0x70	; 112
    1b44:	01 c0       	rjmp	.+2      	; 0x1b48 <__fmt_a+0x5bc>
    1b46:	20 e5       	ldi	r18, 0x50	; 80
    1b48:	20 83       	st	Z, r18
    1b4a:	08 17       	cp	r16, r24
    1b4c:	19 07       	cpc	r17, r25
    1b4e:	34 f4       	brge	.+12     	; 0x1b5c <__fmt_a+0x5d0>
    1b50:	af 01       	movw	r20, r30
    1b52:	60 e8       	ldi	r22, 0x80	; 128
    1b54:	8e 81       	ldd	r24, Y+6	; 0x06
    1b56:	9f 81       	ldd	r25, Y+7	; 0x07
    1b58:	0e 94 42 22 	call	0x4484	; 0x4484 <strcpy>
    1b5c:	32 01       	movw	r6, r4
    1b5e:	30 e8       	ldi	r19, 0x80	; 128
    1b60:	83 2e       	mov	r8, r19
    1b62:	4d 81       	ldd	r20, Y+5	; 0x05
    1b64:	41 ff       	sbrs	r20, 1
    1b66:	28 c0       	rjmp	.+80     	; 0x1bb8 <__fmt_a+0x62c>
    1b68:	40 fd       	sbrc	r20, 0
    1b6a:	26 c0       	rjmp	.+76     	; 0x1bb8 <__fmt_a+0x62c>
    1b6c:	52 e0       	ldi	r21, 0x02	; 2
    1b6e:	25 1a       	sub	r2, r21
    1b70:	31 08       	sbc	r3, r1
    1b72:	12 14       	cp	r1, r2
    1b74:	13 04       	cpc	r1, r3
    1b76:	04 f5       	brge	.+64     	; 0x1bb8 <__fmt_a+0x62c>
    1b78:	88 2d       	mov	r24, r8
    1b7a:	b3 01       	movw	r22, r6
    1b7c:	0e 94 00 22 	call	0x4400	; 0x4400 <strlen>
    1b80:	84 0d       	add	r24, r4
    1b82:	95 1d       	adc	r25, r5
    1b84:	9c 01       	movw	r18, r24
    1b86:	24 19       	sub	r18, r4
    1b88:	35 09       	sbc	r19, r5
    1b8a:	4b 81       	ldd	r20, Y+3	; 0x03
    1b8c:	5c 81       	ldd	r21, Y+4	; 0x04
    1b8e:	24 17       	cp	r18, r20
    1b90:	35 07       	cpc	r19, r21
    1b92:	3c f0       	brlt	.+14     	; 0x1ba2 <__fmt_a+0x616>
    1b94:	fc 01       	movw	r30, r24
    1b96:	20 81       	ld	r18, Z
    1b98:	e2 0d       	add	r30, r2
    1b9a:	f3 1d       	adc	r31, r3
    1b9c:	20 83       	st	Z, r18
    1b9e:	01 97       	sbiw	r24, 0x01	; 1
    1ba0:	f1 cf       	rjmp	.-30     	; 0x1b84 <__fmt_a+0x5f8>
    1ba2:	a1 01       	movw	r20, r2
    1ba4:	60 e3       	ldi	r22, 0x30	; 48
    1ba6:	70 e0       	ldi	r23, 0x00	; 0
    1ba8:	8b 81       	ldd	r24, Y+3	; 0x03
    1baa:	9c 81       	ldd	r25, Y+4	; 0x04
    1bac:	84 0d       	add	r24, r4
    1bae:	95 1d       	adc	r25, r5
    1bb0:	0e 94 cc 22 	call	0x4598	; 0x4598 <memset>
    1bb4:	19 86       	std	Y+9, r1	; 0x09
    1bb6:	18 86       	std	Y+8, r1	; 0x08
    1bb8:	88 2d       	mov	r24, r8
    1bba:	b3 01       	movw	r22, r6
    1bbc:	0e 94 00 22 	call	0x4400	; 0x4400 <strlen>
    1bc0:	ed 80       	ldd	r14, Y+5	; 0x05
    1bc2:	fe 8c       	ldd	r15, Y+30	; 0x1e
    1bc4:	08 85       	ldd	r16, Y+8	; 0x08
    1bc6:	19 85       	ldd	r17, Y+9	; 0x09
    1bc8:	9c 01       	movw	r18, r24
    1bca:	68 2d       	mov	r22, r8
    1bcc:	a3 01       	movw	r20, r6
    1bce:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1bd0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1bd2:	0e 94 37 15 	call	0x2a6e	; 0x2a6e <__pad>
    1bd6:	a0 96       	adiw	r28, 0x20	; 32
    1bd8:	e2 e1       	ldi	r30, 0x12	; 18
    1bda:	0c 94 28 21 	jmp	0x4250	; 0x4250 <__epilogue_restores__>
    1bde:	5d 81       	ldd	r21, Y+5	; 0x05
    1be0:	53 ff       	sbrs	r21, 3
    1be2:	15 cd       	rjmp	.-1494   	; 0x160e <__fmt_a+0x82>
    1be4:	80 e2       	ldi	r24, 0x20	; 32
    1be6:	06 cd       	rjmp	.-1524   	; 0x15f4 <__fmt_a+0x68>

Disassembly of section .text.strcpy:

00004484 <strcpy>:
    4484:	9a 01       	movw	r18, r20
    4486:	46 2f       	mov	r20, r22
    4488:	dc 01       	movw	r26, r24
    448a:	f9 01       	movw	r30, r18
    448c:	54 2f       	mov	r21, r20
    448e:	0e 94 02 23 	call	0x4604	; 0x4604 <__xload_1>
    4492:	6d 93       	st	X+, r22
    4494:	2f 5f       	subi	r18, 0xFF	; 255
    4496:	3f 4f       	sbci	r19, 0xFF	; 255
    4498:	4f 4f       	sbci	r20, 0xFF	; 255
    449a:	61 11       	cpse	r22, r1
    449c:	f6 cf       	rjmp	.-20     	; 0x448a <strcpy+0x6>
    449e:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000431a <__divmodhi4>:
    431a:	97 fb       	bst	r25, 7
    431c:	07 2e       	mov	r0, r23
    431e:	16 f4       	brtc	.+4      	; 0x4324 <__divmodhi4+0xa>
    4320:	00 94       	com	r0
    4322:	07 d0       	rcall	.+14     	; 0x4332 <__divmodhi4_neg1>
    4324:	77 fd       	sbrc	r23, 7
    4326:	09 d0       	rcall	.+18     	; 0x433a <__divmodhi4_neg2>
    4328:	0e 94 a1 21 	call	0x4342	; 0x4342 <__udivmodhi4>
    432c:	07 fc       	sbrc	r0, 7
    432e:	05 d0       	rcall	.+10     	; 0x433a <__divmodhi4_neg2>
    4330:	3e f4       	brtc	.+14     	; 0x4340 <__divmodhi4_exit>

00004332 <__divmodhi4_neg1>:
    4332:	90 95       	com	r25
    4334:	81 95       	neg	r24
    4336:	9f 4f       	sbci	r25, 0xFF	; 255
    4338:	08 95       	ret

0000433a <__divmodhi4_neg2>:
    433a:	70 95       	com	r23
    433c:	61 95       	neg	r22
    433e:	7f 4f       	sbci	r23, 0xFF	; 255

00004340 <__divmodhi4_exit>:
    4340:	08 95       	ret

Disassembly of section .text.libgcc.div:

000044a0 <__umoddi3>:
    44a0:	68 94       	set
    44a2:	01 c0       	rjmp	.+2      	; 0x44a6 <__udivdi3_umoddi3>

000044a4 <__udivdi3>:
    44a4:	e8 94       	clt

000044a6 <__udivdi3_umoddi3>:
    44a6:	8f 92       	push	r8
    44a8:	9f 92       	push	r9
    44aa:	cf 93       	push	r28
    44ac:	df 93       	push	r29
    44ae:	0e 94 f2 1b 	call	0x37e4	; 0x37e4 <__udivmod64>
    44b2:	df 91       	pop	r29
    44b4:	cf 91       	pop	r28
    44b6:	9f 90       	pop	r9
    44b8:	8f 90       	pop	r8
    44ba:	08 95       	ret

Disassembly of section .text.libgcc.div:

000037e4 <__udivmod64>:
    37e4:	88 24       	eor	r8, r8
    37e6:	99 24       	eor	r9, r9
    37e8:	f4 01       	movw	r30, r8
    37ea:	e4 01       	movw	r28, r8
    37ec:	b0 e4       	ldi	r27, 0x40	; 64
    37ee:	9f 93       	push	r25
    37f0:	aa 27       	eor	r26, r26
    37f2:	9a 15       	cp	r25, r10
    37f4:	8b 04       	cpc	r8, r11
    37f6:	9c 04       	cpc	r9, r12
    37f8:	ed 05       	cpc	r30, r13
    37fa:	fe 05       	cpc	r31, r14
    37fc:	cf 05       	cpc	r28, r15
    37fe:	d0 07       	cpc	r29, r16
    3800:	a1 07       	cpc	r26, r17
    3802:	98 f4       	brcc	.+38     	; 0x382a <__udivmod64+0x46>
    3804:	ad 2f       	mov	r26, r29
    3806:	dc 2f       	mov	r29, r28
    3808:	cf 2f       	mov	r28, r31
    380a:	fe 2f       	mov	r31, r30
    380c:	e9 2d       	mov	r30, r9
    380e:	98 2c       	mov	r9, r8
    3810:	89 2e       	mov	r8, r25
    3812:	98 2f       	mov	r25, r24
    3814:	87 2f       	mov	r24, r23
    3816:	76 2f       	mov	r23, r22
    3818:	65 2f       	mov	r22, r21
    381a:	54 2f       	mov	r21, r20
    381c:	43 2f       	mov	r20, r19
    381e:	32 2f       	mov	r19, r18
    3820:	22 27       	eor	r18, r18
    3822:	b8 50       	subi	r27, 0x08	; 8
    3824:	31 f7       	brne	.-52     	; 0x37f2 <__udivmod64+0xe>
    3826:	bf 91       	pop	r27
    3828:	27 c0       	rjmp	.+78     	; 0x3878 <__udivmod64+0x94>
    382a:	1b 2e       	mov	r1, r27
    382c:	bf 91       	pop	r27
    382e:	bb 27       	eor	r27, r27
    3830:	22 0f       	add	r18, r18
    3832:	33 1f       	adc	r19, r19
    3834:	44 1f       	adc	r20, r20
    3836:	55 1f       	adc	r21, r21
    3838:	66 1f       	adc	r22, r22
    383a:	77 1f       	adc	r23, r23
    383c:	88 1f       	adc	r24, r24
    383e:	99 1f       	adc	r25, r25
    3840:	88 1c       	adc	r8, r8
    3842:	99 1c       	adc	r9, r9
    3844:	ee 1f       	adc	r30, r30
    3846:	ff 1f       	adc	r31, r31
    3848:	cc 1f       	adc	r28, r28
    384a:	dd 1f       	adc	r29, r29
    384c:	aa 1f       	adc	r26, r26
    384e:	bb 1f       	adc	r27, r27
    3850:	8a 14       	cp	r8, r10
    3852:	9b 04       	cpc	r9, r11
    3854:	ec 05       	cpc	r30, r12
    3856:	fd 05       	cpc	r31, r13
    3858:	ce 05       	cpc	r28, r14
    385a:	df 05       	cpc	r29, r15
    385c:	a0 07       	cpc	r26, r16
    385e:	b1 07       	cpc	r27, r17
    3860:	48 f0       	brcs	.+18     	; 0x3874 <__udivmod64+0x90>
    3862:	8a 18       	sub	r8, r10
    3864:	9b 08       	sbc	r9, r11
    3866:	ec 09       	sbc	r30, r12
    3868:	fd 09       	sbc	r31, r13
    386a:	ce 09       	sbc	r28, r14
    386c:	df 09       	sbc	r29, r15
    386e:	a0 0b       	sbc	r26, r16
    3870:	b1 0b       	sbc	r27, r17
    3872:	21 60       	ori	r18, 0x01	; 1
    3874:	1a 94       	dec	r1
    3876:	e1 f6       	brne	.-72     	; 0x3830 <__udivmod64+0x4c>
    3878:	2e f4       	brtc	.+10     	; 0x3884 <__udivmod64+0xa0>
    387a:	94 01       	movw	r18, r8
    387c:	af 01       	movw	r20, r30
    387e:	be 01       	movw	r22, r28
    3880:	cd 01       	movw	r24, r26
    3882:	00 0c       	add	r0, r0
    3884:	08 95       	ret

Disassembly of section .text.libgcc:

00004446 <__negdi2>:
    4446:	60 95       	com	r22
    4448:	70 95       	com	r23
    444a:	80 95       	com	r24
    444c:	90 95       	com	r25
    444e:	30 95       	com	r19
    4450:	40 95       	com	r20
    4452:	50 95       	com	r21
    4454:	21 95       	neg	r18
    4456:	3f 4f       	sbci	r19, 0xFF	; 255
    4458:	4f 4f       	sbci	r20, 0xFF	; 255
    445a:	5f 4f       	sbci	r21, 0xFF	; 255
    445c:	6f 4f       	sbci	r22, 0xFF	; 255
    445e:	7f 4f       	sbci	r23, 0xFF	; 255
    4460:	8f 4f       	sbci	r24, 0xFF	; 255
    4462:	9f 4f       	sbci	r25, 0xFF	; 255
    4464:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

000041e2 <__prologue_saves__>:
    41e2:	2f 92       	push	r2
    41e4:	3f 92       	push	r3
    41e6:	4f 92       	push	r4
    41e8:	5f 92       	push	r5
    41ea:	6f 92       	push	r6
    41ec:	7f 92       	push	r7
    41ee:	8f 92       	push	r8
    41f0:	9f 92       	push	r9
    41f2:	af 92       	push	r10
    41f4:	bf 92       	push	r11
    41f6:	cf 92       	push	r12
    41f8:	df 92       	push	r13
    41fa:	ef 92       	push	r14
    41fc:	ff 92       	push	r15
    41fe:	0f 93       	push	r16
    4200:	1f 93       	push	r17
    4202:	cf 93       	push	r28
    4204:	df 93       	push	r29
    4206:	cd b7       	in	r28, 0x3d	; 61
    4208:	de b7       	in	r29, 0x3e	; 62
    420a:	ca 1b       	sub	r28, r26
    420c:	db 0b       	sbc	r29, r27
    420e:	0f b6       	in	r0, 0x3f	; 63
    4210:	f8 94       	cli
    4212:	de bf       	out	0x3e, r29	; 62
    4214:	0f be       	out	0x3f, r0	; 63
    4216:	cd bf       	out	0x3d, r28	; 61
    4218:	19 94       	eijmp

Disassembly of section .text.libgcc.prologue:

00004250 <__epilogue_restores__>:
    4250:	2a 88       	ldd	r2, Y+18	; 0x12
    4252:	39 88       	ldd	r3, Y+17	; 0x11
    4254:	48 88       	ldd	r4, Y+16	; 0x10
    4256:	5f 84       	ldd	r5, Y+15	; 0x0f
    4258:	6e 84       	ldd	r6, Y+14	; 0x0e
    425a:	7d 84       	ldd	r7, Y+13	; 0x0d
    425c:	8c 84       	ldd	r8, Y+12	; 0x0c
    425e:	9b 84       	ldd	r9, Y+11	; 0x0b
    4260:	aa 84       	ldd	r10, Y+10	; 0x0a
    4262:	b9 84       	ldd	r11, Y+9	; 0x09
    4264:	c8 84       	ldd	r12, Y+8	; 0x08
    4266:	df 80       	ldd	r13, Y+7	; 0x07
    4268:	ee 80       	ldd	r14, Y+6	; 0x06
    426a:	fd 80       	ldd	r15, Y+5	; 0x05
    426c:	0c 81       	ldd	r16, Y+4	; 0x04
    426e:	1b 81       	ldd	r17, Y+3	; 0x03
    4270:	aa 81       	ldd	r26, Y+2	; 0x02
    4272:	b9 81       	ldd	r27, Y+1	; 0x01
    4274:	ce 0f       	add	r28, r30
    4276:	d1 1d       	adc	r29, r1
    4278:	0f b6       	in	r0, 0x3f	; 63
    427a:	f8 94       	cli
    427c:	de bf       	out	0x3e, r29	; 62
    427e:	0f be       	out	0x3f, r0	; 63
    4280:	cd bf       	out	0x3d, r28	; 61
    4282:	ed 01       	movw	r28, r26
    4284:	08 95       	ret

Disassembly of section .text.libgcc:

000044bc <__movmemx_qi>:
    44bc:	99 27       	eor	r25, r25

000044be <__movmemx_hi>:
    44be:	77 fd       	sbrc	r23, 7
    44c0:	06 c0       	rjmp	.+12     	; 0x44ce <__movmemx_hi+0x10>
    44c2:	7b bf       	out	0x3b, r23	; 59
    44c4:	07 90       	elpm	r0, Z+
    44c6:	0d 92       	st	X+, r0
    44c8:	01 97       	sbiw	r24, 0x01	; 1
    44ca:	e1 f7       	brne	.-8      	; 0x44c4 <__movmemx_hi+0x6>
    44cc:	08 95       	ret
    44ce:	01 90       	ld	r0, Z+
    44d0:	0d 92       	st	X+, r0
    44d2:	01 97       	sbiw	r24, 0x01	; 1
    44d4:	e1 f7       	brne	.-8      	; 0x44ce <__movmemx_hi+0x10>
    44d6:	08 95       	ret

Disassembly of section .text.libgcc.builtins:

000041a6 <__ashrdi3>:
    41a6:	97 fb       	bst	r25, 7
    41a8:	10 f8       	bld	r1, 0

000041aa <__lshrdi3>:
    41aa:	16 94       	lsr	r1
    41ac:	00 08       	sbc	r0, r0
    41ae:	0f 93       	push	r16
    41b0:	08 30       	cpi	r16, 0x08	; 8
    41b2:	98 f0       	brcs	.+38     	; 0x41da <__lshrdi3+0x30>
    41b4:	08 50       	subi	r16, 0x08	; 8
    41b6:	23 2f       	mov	r18, r19
    41b8:	34 2f       	mov	r19, r20
    41ba:	45 2f       	mov	r20, r21
    41bc:	56 2f       	mov	r21, r22
    41be:	67 2f       	mov	r22, r23
    41c0:	78 2f       	mov	r23, r24
    41c2:	89 2f       	mov	r24, r25
    41c4:	90 2d       	mov	r25, r0
    41c6:	f4 cf       	rjmp	.-24     	; 0x41b0 <__lshrdi3+0x6>
    41c8:	05 94       	asr	r0
    41ca:	97 95       	ror	r25
    41cc:	87 95       	ror	r24
    41ce:	77 95       	ror	r23
    41d0:	67 95       	ror	r22
    41d2:	57 95       	ror	r21
    41d4:	47 95       	ror	r20
    41d6:	37 95       	ror	r19
    41d8:	27 95       	ror	r18
    41da:	0a 95       	dec	r16
    41dc:	aa f7       	brpl	.-22     	; 0x41c8 <__lshrdi3+0x1e>
    41de:	0f 91       	pop	r16
    41e0:	08 95       	ret

Disassembly of section .text.libgcc:

0000453c <__cmpdi2_s8>:
    453c:	00 24       	eor	r0, r0
    453e:	a7 fd       	sbrc	r26, 7
    4540:	00 94       	com	r0
    4542:	2a 17       	cp	r18, r26
    4544:	30 05       	cpc	r19, r0
    4546:	40 05       	cpc	r20, r0
    4548:	50 05       	cpc	r21, r0
    454a:	60 05       	cpc	r22, r0
    454c:	70 05       	cpc	r23, r0
    454e:	80 05       	cpc	r24, r0
    4550:	90 05       	cpc	r25, r0
    4552:	08 95       	ret

Disassembly of section .text.libgcc.div:

00004342 <__udivmodhi4>:
    4342:	aa 1b       	sub	r26, r26
    4344:	bb 1b       	sub	r27, r27
    4346:	51 e1       	ldi	r21, 0x11	; 17
    4348:	07 c0       	rjmp	.+14     	; 0x4358 <__udivmodhi4_ep>

0000434a <__udivmodhi4_loop>:
    434a:	aa 1f       	adc	r26, r26
    434c:	bb 1f       	adc	r27, r27
    434e:	a6 17       	cp	r26, r22
    4350:	b7 07       	cpc	r27, r23
    4352:	10 f0       	brcs	.+4      	; 0x4358 <__udivmodhi4_ep>
    4354:	a6 1b       	sub	r26, r22
    4356:	b7 0b       	sbc	r27, r23

00004358 <__udivmodhi4_ep>:
    4358:	88 1f       	adc	r24, r24
    435a:	99 1f       	adc	r25, r25
    435c:	5a 95       	dec	r21
    435e:	a9 f7       	brne	.-22     	; 0x434a <__udivmodhi4_loop>
    4360:	80 95       	com	r24
    4362:	90 95       	com	r25
    4364:	bc 01       	movw	r22, r24
    4366:	cd 01       	movw	r24, r26
    4368:	08 95       	ret

Disassembly of section .text:

00004612 <__subsf3>:
    4612:	50 58       	subi	r21, 0x80	; 128

00004614 <__addsf3>:
    4614:	bb 27       	eor	r27, r27
    4616:	aa 27       	eor	r26, r26
    4618:	0e 94 6d 17 	call	0x2eda	; 0x2eda <__addsf3x>
    461c:	0c 94 12 22 	jmp	0x4424	; 0x4424 <__fp_round>

Disassembly of section .text:

00002eda <__addsf3x>:
    2eda:	11 c0       	rjmp	.+34     	; 0x2efe <__addsf3x+0x24>
    2edc:	0e 94 17 23 	call	0x462e	; 0x462e <__fp_pscA>
    2ee0:	38 f0       	brcs	.+14     	; 0x2ef0 <__addsf3x+0x16>
    2ee2:	0e 94 1e 23 	call	0x463c	; 0x463c <__fp_pscB>
    2ee6:	20 f0       	brcs	.+8      	; 0x2ef0 <__addsf3x+0x16>
    2ee8:	39 f4       	brne	.+14     	; 0x2ef8 <__addsf3x+0x1e>
    2eea:	9f 3f       	cpi	r25, 0xFF	; 255
    2eec:	19 f4       	brne	.+6      	; 0x2ef4 <__addsf3x+0x1a>
    2eee:	26 f4       	brtc	.+8      	; 0x2ef8 <__addsf3x+0x1e>
    2ef0:	0c 94 4c 23 	jmp	0x4698	; 0x4698 <__fp_nan>
    2ef4:	0e f4       	brtc	.+2      	; 0x2ef8 <__addsf3x+0x1e>
    2ef6:	e0 95       	com	r30
    2ef8:	e7 fb       	bst	r30, 7
    2efa:	0c 94 2c 23 	jmp	0x4658	; 0x4658 <__fp_inf>
    2efe:	e9 2f       	mov	r30, r25
    2f00:	0e 94 52 20 	call	0x40a4	; 0x40a4 <__fp_split3>
    2f04:	58 f3       	brcs	.-42     	; 0x2edc <__addsf3x+0x2>
    2f06:	ba 17       	cp	r27, r26
    2f08:	62 07       	cpc	r22, r18
    2f0a:	73 07       	cpc	r23, r19
    2f0c:	84 07       	cpc	r24, r20
    2f0e:	95 07       	cpc	r25, r21
    2f10:	20 f0       	brcs	.+8      	; 0x2f1a <__addsf3x+0x40>
    2f12:	79 f4       	brne	.+30     	; 0x2f32 <__addsf3x+0x58>
    2f14:	a6 f5       	brtc	.+104    	; 0x2f7e <__addsf3x+0xa4>
    2f16:	0c 94 25 23 	jmp	0x464a	; 0x464a <__fp_zero>
    2f1a:	0e f4       	brtc	.+2      	; 0x2f1e <__addsf3x+0x44>
    2f1c:	e0 95       	com	r30
    2f1e:	0b 2e       	mov	r0, r27
    2f20:	ba 2f       	mov	r27, r26
    2f22:	a0 2d       	mov	r26, r0
    2f24:	0b 01       	movw	r0, r22
    2f26:	b9 01       	movw	r22, r18
    2f28:	90 01       	movw	r18, r0
    2f2a:	0c 01       	movw	r0, r24
    2f2c:	ca 01       	movw	r24, r20
    2f2e:	a0 01       	movw	r20, r0
    2f30:	11 24       	eor	r1, r1
    2f32:	ff 27       	eor	r31, r31
    2f34:	59 1b       	sub	r21, r25
    2f36:	99 f0       	breq	.+38     	; 0x2f5e <__addsf3x+0x84>
    2f38:	59 3f       	cpi	r21, 0xF9	; 249
    2f3a:	50 f4       	brcc	.+20     	; 0x2f50 <__addsf3x+0x76>
    2f3c:	50 3e       	cpi	r21, 0xE0	; 224
    2f3e:	68 f1       	brcs	.+90     	; 0x2f9a <__addsf3x+0xc0>
    2f40:	1a 16       	cp	r1, r26
    2f42:	f0 40       	sbci	r31, 0x00	; 0
    2f44:	a2 2f       	mov	r26, r18
    2f46:	23 2f       	mov	r18, r19
    2f48:	34 2f       	mov	r19, r20
    2f4a:	44 27       	eor	r20, r20
    2f4c:	58 5f       	subi	r21, 0xF8	; 248
    2f4e:	f3 cf       	rjmp	.-26     	; 0x2f36 <__addsf3x+0x5c>
    2f50:	46 95       	lsr	r20
    2f52:	37 95       	ror	r19
    2f54:	27 95       	ror	r18
    2f56:	a7 95       	ror	r26
    2f58:	f0 40       	sbci	r31, 0x00	; 0
    2f5a:	53 95       	inc	r21
    2f5c:	c9 f7       	brne	.-14     	; 0x2f50 <__addsf3x+0x76>
    2f5e:	7e f4       	brtc	.+30     	; 0x2f7e <__addsf3x+0xa4>
    2f60:	1f 16       	cp	r1, r31
    2f62:	ba 0b       	sbc	r27, r26
    2f64:	62 0b       	sbc	r22, r18
    2f66:	73 0b       	sbc	r23, r19
    2f68:	84 0b       	sbc	r24, r20
    2f6a:	ba f0       	brmi	.+46     	; 0x2f9a <__addsf3x+0xc0>
    2f6c:	91 50       	subi	r25, 0x01	; 1
    2f6e:	a1 f0       	breq	.+40     	; 0x2f98 <__addsf3x+0xbe>
    2f70:	ff 0f       	add	r31, r31
    2f72:	bb 1f       	adc	r27, r27
    2f74:	66 1f       	adc	r22, r22
    2f76:	77 1f       	adc	r23, r23
    2f78:	88 1f       	adc	r24, r24
    2f7a:	c2 f7       	brpl	.-16     	; 0x2f6c <__addsf3x+0x92>
    2f7c:	0e c0       	rjmp	.+28     	; 0x2f9a <__addsf3x+0xc0>
    2f7e:	ba 0f       	add	r27, r26
    2f80:	62 1f       	adc	r22, r18
    2f82:	73 1f       	adc	r23, r19
    2f84:	84 1f       	adc	r24, r20
    2f86:	48 f4       	brcc	.+18     	; 0x2f9a <__addsf3x+0xc0>
    2f88:	87 95       	ror	r24
    2f8a:	77 95       	ror	r23
    2f8c:	67 95       	ror	r22
    2f8e:	b7 95       	ror	r27
    2f90:	f7 95       	ror	r31
    2f92:	9e 3f       	cpi	r25, 0xFE	; 254
    2f94:	08 f0       	brcs	.+2      	; 0x2f98 <__addsf3x+0xbe>
    2f96:	b0 cf       	rjmp	.-160    	; 0x2ef8 <__addsf3x+0x1e>
    2f98:	93 95       	inc	r25
    2f9a:	88 0f       	add	r24, r24
    2f9c:	08 f0       	brcs	.+2      	; 0x2fa0 <__addsf3x+0xc6>
    2f9e:	99 27       	eor	r25, r25
    2fa0:	ee 0f       	add	r30, r30
    2fa2:	97 95       	ror	r25
    2fa4:	87 95       	ror	r24
    2fa6:	08 95       	ret

Disassembly of section .text:

00004664 <__cmpsf2>:
    4664:	0e 94 ea 1f 	call	0x3fd4	; 0x3fd4 <__fp_cmp>
    4668:	08 f4       	brcc	.+2      	; 0x466c <__cmpsf2+0x8>
    466a:	81 e0       	ldi	r24, 0x01	; 1
    466c:	08 95       	ret

Disassembly of section .text:

00004688 <__divsf3>:
    4688:	0e 94 be 15 	call	0x2b7c	; 0x2b7c <__divsf3x>
    468c:	0c 94 12 22 	jmp	0x4424	; 0x4424 <__fp_round>

Disassembly of section .text:

00002b7c <__divsf3x>:
    2b7c:	10 c0       	rjmp	.+32     	; 0x2b9e <__divsf3x+0x22>
    2b7e:	0e 94 1e 23 	call	0x463c	; 0x463c <__fp_pscB>
    2b82:	58 f0       	brcs	.+22     	; 0x2b9a <__divsf3x+0x1e>
    2b84:	0e 94 17 23 	call	0x462e	; 0x462e <__fp_pscA>
    2b88:	40 f0       	brcs	.+16     	; 0x2b9a <__divsf3x+0x1e>
    2b8a:	29 f4       	brne	.+10     	; 0x2b96 <__divsf3x+0x1a>
    2b8c:	5f 3f       	cpi	r21, 0xFF	; 255
    2b8e:	29 f0       	breq	.+10     	; 0x2b9a <__divsf3x+0x1e>
    2b90:	0c 94 2c 23 	jmp	0x4658	; 0x4658 <__fp_inf>
    2b94:	51 11       	cpse	r21, r1
    2b96:	0c 94 26 23 	jmp	0x464c	; 0x464c <__fp_szero>
    2b9a:	0c 94 4c 23 	jmp	0x4698	; 0x4698 <__fp_nan>
    2b9e:	0e 94 52 20 	call	0x40a4	; 0x40a4 <__fp_split3>
    2ba2:	68 f3       	brcs	.-38     	; 0x2b7e <__divsf3x+0x2>

00002ba4 <__divsf3_pse>:
    2ba4:	99 23       	and	r25, r25
    2ba6:	b1 f3       	breq	.-20     	; 0x2b94 <__divsf3x+0x18>
    2ba8:	55 23       	and	r21, r21
    2baa:	91 f3       	breq	.-28     	; 0x2b90 <__divsf3x+0x14>
    2bac:	95 1b       	sub	r25, r21
    2bae:	55 0b       	sbc	r21, r21
    2bb0:	bb 27       	eor	r27, r27
    2bb2:	aa 27       	eor	r26, r26
    2bb4:	62 17       	cp	r22, r18
    2bb6:	73 07       	cpc	r23, r19
    2bb8:	84 07       	cpc	r24, r20
    2bba:	38 f0       	brcs	.+14     	; 0x2bca <__divsf3_pse+0x26>
    2bbc:	9f 5f       	subi	r25, 0xFF	; 255
    2bbe:	5f 4f       	sbci	r21, 0xFF	; 255
    2bc0:	22 0f       	add	r18, r18
    2bc2:	33 1f       	adc	r19, r19
    2bc4:	44 1f       	adc	r20, r20
    2bc6:	aa 1f       	adc	r26, r26
    2bc8:	a9 f3       	breq	.-22     	; 0x2bb4 <__divsf3_pse+0x10>
    2bca:	35 d0       	rcall	.+106    	; 0x2c36 <__divsf3_pse+0x92>
    2bcc:	0e 2e       	mov	r0, r30
    2bce:	3a f0       	brmi	.+14     	; 0x2bde <__divsf3_pse+0x3a>
    2bd0:	e0 e8       	ldi	r30, 0x80	; 128
    2bd2:	32 d0       	rcall	.+100    	; 0x2c38 <__divsf3_pse+0x94>
    2bd4:	91 50       	subi	r25, 0x01	; 1
    2bd6:	50 40       	sbci	r21, 0x00	; 0
    2bd8:	e6 95       	lsr	r30
    2bda:	00 1c       	adc	r0, r0
    2bdc:	ca f7       	brpl	.-14     	; 0x2bd0 <__divsf3_pse+0x2c>
    2bde:	2b d0       	rcall	.+86     	; 0x2c36 <__divsf3_pse+0x92>
    2be0:	fe 2f       	mov	r31, r30
    2be2:	29 d0       	rcall	.+82     	; 0x2c36 <__divsf3_pse+0x92>
    2be4:	66 0f       	add	r22, r22
    2be6:	77 1f       	adc	r23, r23
    2be8:	88 1f       	adc	r24, r24
    2bea:	bb 1f       	adc	r27, r27
    2bec:	26 17       	cp	r18, r22
    2bee:	37 07       	cpc	r19, r23
    2bf0:	48 07       	cpc	r20, r24
    2bf2:	ab 07       	cpc	r26, r27
    2bf4:	b0 e8       	ldi	r27, 0x80	; 128
    2bf6:	09 f0       	breq	.+2      	; 0x2bfa <__divsf3_pse+0x56>
    2bf8:	bb 0b       	sbc	r27, r27
    2bfa:	80 2d       	mov	r24, r0
    2bfc:	bf 01       	movw	r22, r30
    2bfe:	ff 27       	eor	r31, r31
    2c00:	93 58       	subi	r25, 0x83	; 131
    2c02:	5f 4f       	sbci	r21, 0xFF	; 255
    2c04:	3a f0       	brmi	.+14     	; 0x2c14 <__divsf3_pse+0x70>
    2c06:	9e 3f       	cpi	r25, 0xFE	; 254
    2c08:	51 05       	cpc	r21, r1
    2c0a:	78 f0       	brcs	.+30     	; 0x2c2a <__divsf3_pse+0x86>
    2c0c:	0c 94 2c 23 	jmp	0x4658	; 0x4658 <__fp_inf>
    2c10:	0c 94 26 23 	jmp	0x464c	; 0x464c <__fp_szero>
    2c14:	5f 3f       	cpi	r21, 0xFF	; 255
    2c16:	e4 f3       	brlt	.-8      	; 0x2c10 <__divsf3_pse+0x6c>
    2c18:	98 3e       	cpi	r25, 0xE8	; 232
    2c1a:	d4 f3       	brlt	.-12     	; 0x2c10 <__divsf3_pse+0x6c>
    2c1c:	86 95       	lsr	r24
    2c1e:	77 95       	ror	r23
    2c20:	67 95       	ror	r22
    2c22:	b7 95       	ror	r27
    2c24:	f7 95       	ror	r31
    2c26:	9f 5f       	subi	r25, 0xFF	; 255
    2c28:	c9 f7       	brne	.-14     	; 0x2c1c <__divsf3_pse+0x78>
    2c2a:	88 0f       	add	r24, r24
    2c2c:	91 1d       	adc	r25, r1
    2c2e:	96 95       	lsr	r25
    2c30:	87 95       	ror	r24
    2c32:	97 f9       	bld	r25, 7
    2c34:	08 95       	ret
    2c36:	e1 e0       	ldi	r30, 0x01	; 1
    2c38:	66 0f       	add	r22, r22
    2c3a:	77 1f       	adc	r23, r23
    2c3c:	88 1f       	adc	r24, r24
    2c3e:	bb 1f       	adc	r27, r27
    2c40:	62 17       	cp	r22, r18
    2c42:	73 07       	cpc	r23, r19
    2c44:	84 07       	cpc	r24, r20
    2c46:	ba 07       	cpc	r27, r26
    2c48:	20 f0       	brcs	.+8      	; 0x2c52 <__divsf3_pse+0xae>
    2c4a:	62 1b       	sub	r22, r18
    2c4c:	73 0b       	sbc	r23, r19
    2c4e:	84 0b       	sbc	r24, r20
    2c50:	ba 0b       	sbc	r27, r26
    2c52:	ee 1f       	adc	r30, r30
    2c54:	88 f7       	brcc	.-30     	; 0x2c38 <__divsf3_pse+0x94>
    2c56:	e0 95       	com	r30
    2c58:	08 95       	ret

Disassembly of section .text:

00004620 <__fixsfsi>:
    4620:	0e 94 17 1f 	call	0x3e2e	; 0x3e2e <__fixunssfsi>
    4624:	68 94       	set
    4626:	b1 11       	cpse	r27, r1
    4628:	0c 94 26 23 	jmp	0x464c	; 0x464c <__fp_szero>
    462c:	08 95       	ret

Disassembly of section .text:

00003e2e <__fixunssfsi>:
    3e2e:	0e 94 5a 20 	call	0x40b4	; 0x40b4 <__fp_splitA>
    3e32:	88 f0       	brcs	.+34     	; 0x3e56 <__fixunssfsi+0x28>
    3e34:	9f 57       	subi	r25, 0x7F	; 127
    3e36:	98 f0       	brcs	.+38     	; 0x3e5e <__fixunssfsi+0x30>
    3e38:	b9 2f       	mov	r27, r25
    3e3a:	99 27       	eor	r25, r25
    3e3c:	b7 51       	subi	r27, 0x17	; 23
    3e3e:	b0 f0       	brcs	.+44     	; 0x3e6c <__fixunssfsi+0x3e>
    3e40:	e1 f0       	breq	.+56     	; 0x3e7a <__fixunssfsi+0x4c>
    3e42:	66 0f       	add	r22, r22
    3e44:	77 1f       	adc	r23, r23
    3e46:	88 1f       	adc	r24, r24
    3e48:	99 1f       	adc	r25, r25
    3e4a:	1a f0       	brmi	.+6      	; 0x3e52 <__fixunssfsi+0x24>
    3e4c:	ba 95       	dec	r27
    3e4e:	c9 f7       	brne	.-14     	; 0x3e42 <__fixunssfsi+0x14>
    3e50:	14 c0       	rjmp	.+40     	; 0x3e7a <__fixunssfsi+0x4c>
    3e52:	b1 30       	cpi	r27, 0x01	; 1
    3e54:	91 f0       	breq	.+36     	; 0x3e7a <__fixunssfsi+0x4c>
    3e56:	0e 94 25 23 	call	0x464a	; 0x464a <__fp_zero>
    3e5a:	b1 e0       	ldi	r27, 0x01	; 1
    3e5c:	08 95       	ret
    3e5e:	0c 94 25 23 	jmp	0x464a	; 0x464a <__fp_zero>
    3e62:	67 2f       	mov	r22, r23
    3e64:	78 2f       	mov	r23, r24
    3e66:	88 27       	eor	r24, r24
    3e68:	b8 5f       	subi	r27, 0xF8	; 248
    3e6a:	39 f0       	breq	.+14     	; 0x3e7a <__fixunssfsi+0x4c>
    3e6c:	b9 3f       	cpi	r27, 0xF9	; 249
    3e6e:	cc f3       	brlt	.-14     	; 0x3e62 <__fixunssfsi+0x34>
    3e70:	86 95       	lsr	r24
    3e72:	77 95       	ror	r23
    3e74:	67 95       	ror	r22
    3e76:	b3 95       	inc	r27
    3e78:	d9 f7       	brne	.-10     	; 0x3e70 <__fixunssfsi+0x42>
    3e7a:	3e f4       	brtc	.+14     	; 0x3e8a <__fixunssfsi+0x5c>
    3e7c:	90 95       	com	r25
    3e7e:	80 95       	com	r24
    3e80:	70 95       	com	r23
    3e82:	61 95       	neg	r22
    3e84:	7f 4f       	sbci	r23, 0xFF	; 255
    3e86:	8f 4f       	sbci	r24, 0xFF	; 255
    3e88:	9f 4f       	sbci	r25, 0xFF	; 255
    3e8a:	08 95       	ret

Disassembly of section .text:

00003fd4 <__fp_cmp>:
    3fd4:	99 0f       	add	r25, r25
    3fd6:	00 08       	sbc	r0, r0
    3fd8:	55 0f       	add	r21, r21
    3fda:	aa 0b       	sbc	r26, r26
    3fdc:	e0 e8       	ldi	r30, 0x80	; 128
    3fde:	fe ef       	ldi	r31, 0xFE	; 254
    3fe0:	16 16       	cp	r1, r22
    3fe2:	17 06       	cpc	r1, r23
    3fe4:	e8 07       	cpc	r30, r24
    3fe6:	f9 07       	cpc	r31, r25
    3fe8:	c0 f0       	brcs	.+48     	; 0x401a <__fp_cmp+0x46>
    3fea:	12 16       	cp	r1, r18
    3fec:	13 06       	cpc	r1, r19
    3fee:	e4 07       	cpc	r30, r20
    3ff0:	f5 07       	cpc	r31, r21
    3ff2:	98 f0       	brcs	.+38     	; 0x401a <__fp_cmp+0x46>
    3ff4:	62 1b       	sub	r22, r18
    3ff6:	73 0b       	sbc	r23, r19
    3ff8:	84 0b       	sbc	r24, r20
    3ffa:	95 0b       	sbc	r25, r21
    3ffc:	39 f4       	brne	.+14     	; 0x400c <__fp_cmp+0x38>
    3ffe:	0a 26       	eor	r0, r26
    4000:	61 f0       	breq	.+24     	; 0x401a <__fp_cmp+0x46>
    4002:	23 2b       	or	r18, r19
    4004:	24 2b       	or	r18, r20
    4006:	25 2b       	or	r18, r21
    4008:	21 f4       	brne	.+8      	; 0x4012 <__fp_cmp+0x3e>
    400a:	08 95       	ret
    400c:	0a 26       	eor	r0, r26
    400e:	09 f4       	brne	.+2      	; 0x4012 <__fp_cmp+0x3e>
    4010:	a1 40       	sbci	r26, 0x01	; 1
    4012:	a6 95       	lsr	r26
    4014:	8f ef       	ldi	r24, 0xFF	; 255
    4016:	81 1d       	adc	r24, r1
    4018:	81 1d       	adc	r24, r1
    401a:	08 95       	ret

Disassembly of section .text:

00004658 <__fp_inf>:
    4658:	97 f9       	bld	r25, 7
    465a:	9f 67       	ori	r25, 0x7F	; 127
    465c:	80 e8       	ldi	r24, 0x80	; 128
    465e:	70 e0       	ldi	r23, 0x00	; 0
    4660:	60 e0       	ldi	r22, 0x00	; 0
    4662:	08 95       	ret

Disassembly of section .text:

00004698 <__fp_nan>:
    4698:	9f ef       	ldi	r25, 0xFF	; 255
    469a:	80 ec       	ldi	r24, 0xC0	; 192
    469c:	08 95       	ret

Disassembly of section .text:

0000462e <__fp_pscA>:
    462e:	00 24       	eor	r0, r0
    4630:	0a 94       	dec	r0
    4632:	16 16       	cp	r1, r22
    4634:	17 06       	cpc	r1, r23
    4636:	18 06       	cpc	r1, r24
    4638:	09 06       	cpc	r0, r25
    463a:	08 95       	ret

Disassembly of section .text:

0000463c <__fp_pscB>:
    463c:	00 24       	eor	r0, r0
    463e:	0a 94       	dec	r0
    4640:	12 16       	cp	r1, r18
    4642:	13 06       	cpc	r1, r19
    4644:	14 06       	cpc	r1, r20
    4646:	05 06       	cpc	r0, r21
    4648:	08 95       	ret

Disassembly of section .text:

00004424 <__fp_round>:
    4424:	09 2e       	mov	r0, r25
    4426:	03 94       	inc	r0
    4428:	00 0c       	add	r0, r0
    442a:	11 f4       	brne	.+4      	; 0x4430 <__fp_round+0xc>
    442c:	88 23       	and	r24, r24
    442e:	52 f0       	brmi	.+20     	; 0x4444 <__fp_round+0x20>
    4430:	bb 0f       	add	r27, r27
    4432:	40 f4       	brcc	.+16     	; 0x4444 <__fp_round+0x20>
    4434:	bf 2b       	or	r27, r31
    4436:	11 f4       	brne	.+4      	; 0x443c <__fp_round+0x18>
    4438:	60 ff       	sbrs	r22, 0
    443a:	04 c0       	rjmp	.+8      	; 0x4444 <__fp_round+0x20>
    443c:	6f 5f       	subi	r22, 0xFF	; 255
    443e:	7f 4f       	sbci	r23, 0xFF	; 255
    4440:	8f 4f       	sbci	r24, 0xFF	; 255
    4442:	9f 4f       	sbci	r25, 0xFF	; 255
    4444:	08 95       	ret

Disassembly of section .text:

000040a4 <__fp_split3>:
    40a4:	57 fd       	sbrc	r21, 7
    40a6:	90 58       	subi	r25, 0x80	; 128
    40a8:	44 0f       	add	r20, r20
    40aa:	55 1f       	adc	r21, r21
    40ac:	59 f0       	breq	.+22     	; 0x40c4 <__fp_splitA+0x10>
    40ae:	5f 3f       	cpi	r21, 0xFF	; 255
    40b0:	71 f0       	breq	.+28     	; 0x40ce <__fp_splitA+0x1a>
    40b2:	47 95       	ror	r20

000040b4 <__fp_splitA>:
    40b4:	88 0f       	add	r24, r24
    40b6:	97 fb       	bst	r25, 7
    40b8:	99 1f       	adc	r25, r25
    40ba:	61 f0       	breq	.+24     	; 0x40d4 <__fp_splitA+0x20>
    40bc:	9f 3f       	cpi	r25, 0xFF	; 255
    40be:	79 f0       	breq	.+30     	; 0x40de <__fp_splitA+0x2a>
    40c0:	87 95       	ror	r24
    40c2:	08 95       	ret
    40c4:	12 16       	cp	r1, r18
    40c6:	13 06       	cpc	r1, r19
    40c8:	14 06       	cpc	r1, r20
    40ca:	55 1f       	adc	r21, r21
    40cc:	f2 cf       	rjmp	.-28     	; 0x40b2 <__fp_split3+0xe>
    40ce:	46 95       	lsr	r20
    40d0:	f1 df       	rcall	.-30     	; 0x40b4 <__fp_splitA>
    40d2:	08 c0       	rjmp	.+16     	; 0x40e4 <__fp_splitA+0x30>
    40d4:	16 16       	cp	r1, r22
    40d6:	17 06       	cpc	r1, r23
    40d8:	18 06       	cpc	r1, r24
    40da:	99 1f       	adc	r25, r25
    40dc:	f1 cf       	rjmp	.-30     	; 0x40c0 <__fp_splitA+0xc>
    40de:	86 95       	lsr	r24
    40e0:	71 05       	cpc	r23, r1
    40e2:	61 05       	cpc	r22, r1
    40e4:	08 94       	sec
    40e6:	08 95       	ret

Disassembly of section .text:

0000464a <__fp_zero>:
    464a:	e8 94       	clt

0000464c <__fp_szero>:
    464c:	bb 27       	eor	r27, r27
    464e:	66 27       	eor	r22, r22
    4650:	77 27       	eor	r23, r23
    4652:	cb 01       	movw	r24, r22
    4654:	97 f9       	bld	r25, 7
    4656:	08 95       	ret

Disassembly of section .text:

0000466e <__gesf2>:
    466e:	0e 94 ea 1f 	call	0x3fd4	; 0x3fd4 <__fp_cmp>
    4672:	08 f4       	brcc	.+2      	; 0x4676 <__gesf2+0x8>
    4674:	8f ef       	ldi	r24, 0xFF	; 255
    4676:	08 95       	ret

Disassembly of section .text:

00004690 <__mulsf3>:
    4690:	0e 94 03 17 	call	0x2e06	; 0x2e06 <__mulsf3x>
    4694:	0c 94 12 22 	jmp	0x4424	; 0x4424 <__fp_round>

Disassembly of section .text:

00002e06 <__mulsf3x>:
    2e06:	0f c0       	rjmp	.+30     	; 0x2e26 <__mulsf3x+0x20>
    2e08:	0e 94 17 23 	call	0x462e	; 0x462e <__fp_pscA>
    2e0c:	38 f0       	brcs	.+14     	; 0x2e1c <__mulsf3x+0x16>
    2e0e:	0e 94 1e 23 	call	0x463c	; 0x463c <__fp_pscB>
    2e12:	20 f0       	brcs	.+8      	; 0x2e1c <__mulsf3x+0x16>
    2e14:	95 23       	and	r25, r21
    2e16:	11 f0       	breq	.+4      	; 0x2e1c <__mulsf3x+0x16>
    2e18:	0c 94 2c 23 	jmp	0x4658	; 0x4658 <__fp_inf>
    2e1c:	0c 94 4c 23 	jmp	0x4698	; 0x4698 <__fp_nan>
    2e20:	11 24       	eor	r1, r1
    2e22:	0c 94 26 23 	jmp	0x464c	; 0x464c <__fp_szero>
    2e26:	0e 94 52 20 	call	0x40a4	; 0x40a4 <__fp_split3>
    2e2a:	70 f3       	brcs	.-36     	; 0x2e08 <__mulsf3x+0x2>

00002e2c <__mulsf3_pse>:
    2e2c:	95 9f       	mul	r25, r21
    2e2e:	c1 f3       	breq	.-16     	; 0x2e20 <__mulsf3x+0x1a>
    2e30:	95 0f       	add	r25, r21
    2e32:	50 e0       	ldi	r21, 0x00	; 0
    2e34:	55 1f       	adc	r21, r21
    2e36:	62 9f       	mul	r22, r18
    2e38:	f0 01       	movw	r30, r0
    2e3a:	72 9f       	mul	r23, r18
    2e3c:	bb 27       	eor	r27, r27
    2e3e:	f0 0d       	add	r31, r0
    2e40:	b1 1d       	adc	r27, r1
    2e42:	63 9f       	mul	r22, r19
    2e44:	aa 27       	eor	r26, r26
    2e46:	f0 0d       	add	r31, r0
    2e48:	b1 1d       	adc	r27, r1
    2e4a:	aa 1f       	adc	r26, r26
    2e4c:	64 9f       	mul	r22, r20
    2e4e:	66 27       	eor	r22, r22
    2e50:	b0 0d       	add	r27, r0
    2e52:	a1 1d       	adc	r26, r1
    2e54:	66 1f       	adc	r22, r22
    2e56:	82 9f       	mul	r24, r18
    2e58:	22 27       	eor	r18, r18
    2e5a:	b0 0d       	add	r27, r0
    2e5c:	a1 1d       	adc	r26, r1
    2e5e:	62 1f       	adc	r22, r18
    2e60:	73 9f       	mul	r23, r19
    2e62:	b0 0d       	add	r27, r0
    2e64:	a1 1d       	adc	r26, r1
    2e66:	62 1f       	adc	r22, r18
    2e68:	83 9f       	mul	r24, r19
    2e6a:	a0 0d       	add	r26, r0
    2e6c:	61 1d       	adc	r22, r1
    2e6e:	22 1f       	adc	r18, r18
    2e70:	74 9f       	mul	r23, r20
    2e72:	33 27       	eor	r19, r19
    2e74:	a0 0d       	add	r26, r0
    2e76:	61 1d       	adc	r22, r1
    2e78:	23 1f       	adc	r18, r19
    2e7a:	84 9f       	mul	r24, r20
    2e7c:	60 0d       	add	r22, r0
    2e7e:	21 1d       	adc	r18, r1
    2e80:	82 2f       	mov	r24, r18
    2e82:	76 2f       	mov	r23, r22
    2e84:	6a 2f       	mov	r22, r26
    2e86:	11 24       	eor	r1, r1
    2e88:	9f 57       	subi	r25, 0x7F	; 127
    2e8a:	50 40       	sbci	r21, 0x00	; 0
    2e8c:	9a f0       	brmi	.+38     	; 0x2eb4 <__mulsf3_pse+0x88>
    2e8e:	f1 f0       	breq	.+60     	; 0x2ecc <__mulsf3_pse+0xa0>
    2e90:	88 23       	and	r24, r24
    2e92:	4a f0       	brmi	.+18     	; 0x2ea6 <__mulsf3_pse+0x7a>
    2e94:	ee 0f       	add	r30, r30
    2e96:	ff 1f       	adc	r31, r31
    2e98:	bb 1f       	adc	r27, r27
    2e9a:	66 1f       	adc	r22, r22
    2e9c:	77 1f       	adc	r23, r23
    2e9e:	88 1f       	adc	r24, r24
    2ea0:	91 50       	subi	r25, 0x01	; 1
    2ea2:	50 40       	sbci	r21, 0x00	; 0
    2ea4:	a9 f7       	brne	.-22     	; 0x2e90 <__mulsf3_pse+0x64>
    2ea6:	9e 3f       	cpi	r25, 0xFE	; 254
    2ea8:	51 05       	cpc	r21, r1
    2eaa:	80 f0       	brcs	.+32     	; 0x2ecc <__mulsf3_pse+0xa0>
    2eac:	0c 94 2c 23 	jmp	0x4658	; 0x4658 <__fp_inf>
    2eb0:	0c 94 26 23 	jmp	0x464c	; 0x464c <__fp_szero>
    2eb4:	5f 3f       	cpi	r21, 0xFF	; 255
    2eb6:	e4 f3       	brlt	.-8      	; 0x2eb0 <__mulsf3_pse+0x84>
    2eb8:	98 3e       	cpi	r25, 0xE8	; 232
    2eba:	d4 f3       	brlt	.-12     	; 0x2eb0 <__mulsf3_pse+0x84>
    2ebc:	86 95       	lsr	r24
    2ebe:	77 95       	ror	r23
    2ec0:	67 95       	ror	r22
    2ec2:	b7 95       	ror	r27
    2ec4:	f7 95       	ror	r31
    2ec6:	e7 95       	ror	r30
    2ec8:	9f 5f       	subi	r25, 0xFF	; 255
    2eca:	c1 f7       	brne	.-16     	; 0x2ebc <__mulsf3_pse+0x90>
    2ecc:	fe 2b       	or	r31, r30
    2ece:	88 0f       	add	r24, r24
    2ed0:	91 1d       	adc	r25, r1
    2ed2:	96 95       	lsr	r25
    2ed4:	87 95       	ror	r24
    2ed6:	97 f9       	bld	r25, 7
    2ed8:	08 95       	ret

Disassembly of section .text.floorf:

0000293c <floorf>:
    293c:	4f 92       	push	r4
    293e:	5f 92       	push	r5
    2940:	6f 92       	push	r6
    2942:	7f 92       	push	r7
    2944:	8f 92       	push	r8
    2946:	9f 92       	push	r9
    2948:	af 92       	push	r10
    294a:	bf 92       	push	r11
    294c:	cf 92       	push	r12
    294e:	df 92       	push	r13
    2950:	ef 92       	push	r14
    2952:	ff 92       	push	r15
    2954:	cf 93       	push	r28
    2956:	df 93       	push	r29
    2958:	cd b7       	in	r28, 0x3d	; 61
    295a:	de b7       	in	r29, 0x3e	; 62
    295c:	28 97       	sbiw	r28, 0x08	; 8
    295e:	0f b6       	in	r0, 0x3f	; 63
    2960:	f8 94       	cli
    2962:	de bf       	out	0x3e, r29	; 62
    2964:	0f be       	out	0x3f, r0	; 63
    2966:	cd bf       	out	0x3d, r28	; 61
    2968:	6b 01       	movw	r12, r22
    296a:	7c 01       	movw	r14, r24
    296c:	dc 01       	movw	r26, r24
    296e:	cb 01       	movw	r24, r22
    2970:	47 e1       	ldi	r20, 0x17	; 23
    2972:	b6 95       	lsr	r27
    2974:	a7 95       	ror	r26
    2976:	97 95       	ror	r25
    2978:	87 95       	ror	r24
    297a:	4a 95       	dec	r20
    297c:	d1 f7       	brne	.-12     	; 0x2972 <floorf+0x36>
    297e:	99 27       	eor	r25, r25
    2980:	8f 57       	subi	r24, 0x7F	; 127
    2982:	91 09       	sbc	r25, r1
    2984:	87 31       	cpi	r24, 0x17	; 23
    2986:	91 05       	cpc	r25, r1
    2988:	9c f5       	brge	.+102    	; 0x29f0 <floorf+0xb4>
    298a:	97 fd       	sbrc	r25, 7
    298c:	36 c0       	rjmp	.+108    	; 0x29fa <floorf+0xbe>
    298e:	88 24       	eor	r8, r8
    2990:	8a 94       	dec	r8
    2992:	98 2c       	mov	r9, r8
    2994:	3f e7       	ldi	r19, 0x7F	; 127
    2996:	a3 2e       	mov	r10, r19
    2998:	b1 2c       	mov	r11, r1
    299a:	04 c0       	rjmp	.+8      	; 0x29a4 <floorf+0x68>
    299c:	b5 94       	asr	r11
    299e:	a7 94       	ror	r10
    29a0:	97 94       	ror	r9
    29a2:	87 94       	ror	r8
    29a4:	8a 95       	dec	r24
    29a6:	d2 f7       	brpl	.-12     	; 0x299c <floorf+0x60>
    29a8:	d5 01       	movw	r26, r10
    29aa:	c4 01       	movw	r24, r8
    29ac:	8c 21       	and	r24, r12
    29ae:	9d 21       	and	r25, r13
    29b0:	ae 21       	and	r26, r14
    29b2:	bf 21       	and	r27, r15
    29b4:	89 2b       	or	r24, r25
    29b6:	8a 2b       	or	r24, r26
    29b8:	8b 2b       	or	r24, r27
    29ba:	d1 f0       	breq	.+52     	; 0x29f0 <floorf+0xb4>
    29bc:	20 e0       	ldi	r18, 0x00	; 0
    29be:	30 e0       	ldi	r19, 0x00	; 0
    29c0:	40 e8       	ldi	r20, 0x80	; 128
    29c2:	5b e7       	ldi	r21, 0x7B	; 123
    29c4:	c7 01       	movw	r24, r14
    29c6:	b6 01       	movw	r22, r12
    29c8:	0e 94 0a 23 	call	0x4614	; 0x4614 <__addsf3>
    29cc:	6d 83       	std	Y+5, r22	; 0x05
    29ce:	7e 83       	std	Y+6, r23	; 0x06
    29d0:	8f 83       	std	Y+7, r24	; 0x07
    29d2:	98 87       	std	Y+8, r25	; 0x08
    29d4:	f7 fe       	sbrs	r15, 7
    29d6:	04 c0       	rjmp	.+8      	; 0x29e0 <floorf+0xa4>
    29d8:	c8 0c       	add	r12, r8
    29da:	d9 1c       	adc	r13, r9
    29dc:	ea 1c       	adc	r14, r10
    29de:	fb 1c       	adc	r15, r11
    29e0:	80 94       	com	r8
    29e2:	90 94       	com	r9
    29e4:	a0 94       	com	r10
    29e6:	b0 94       	com	r11
    29e8:	c8 20       	and	r12, r8
    29ea:	d9 20       	and	r13, r9
    29ec:	ea 20       	and	r14, r10
    29ee:	fb 20       	and	r15, r11
    29f0:	5c 2d       	mov	r21, r12
    29f2:	4d 2d       	mov	r20, r13
    29f4:	3e 2d       	mov	r19, r14
    29f6:	2f 2d       	mov	r18, r15
    29f8:	21 c0       	rjmp	.+66     	; 0x2a3c <floorf+0x100>
    29fa:	20 e0       	ldi	r18, 0x00	; 0
    29fc:	30 e0       	ldi	r19, 0x00	; 0
    29fe:	40 e8       	ldi	r20, 0x80	; 128
    2a00:	5b e7       	ldi	r21, 0x7B	; 123
    2a02:	c7 01       	movw	r24, r14
    2a04:	b6 01       	movw	r22, r12
    2a06:	0e 94 0a 23 	call	0x4614	; 0x4614 <__addsf3>
    2a0a:	69 83       	std	Y+1, r22	; 0x01
    2a0c:	7a 83       	std	Y+2, r23	; 0x02
    2a0e:	8b 83       	std	Y+3, r24	; 0x03
    2a10:	9c 83       	std	Y+4, r25	; 0x04
    2a12:	f7 fe       	sbrs	r15, 7
    2a14:	0f c0       	rjmp	.+30     	; 0x2a34 <floorf+0xf8>
    2a16:	d7 01       	movw	r26, r14
    2a18:	c6 01       	movw	r24, r12
    2a1a:	88 0f       	add	r24, r24
    2a1c:	99 1f       	adc	r25, r25
    2a1e:	aa 1f       	adc	r26, r26
    2a20:	bb 1f       	adc	r27, r27
    2a22:	89 2b       	or	r24, r25
    2a24:	8a 2b       	or	r24, r26
    2a26:	8b 2b       	or	r24, r27
    2a28:	19 f3       	breq	.-58     	; 0x29f0 <floorf+0xb4>
    2a2a:	50 e0       	ldi	r21, 0x00	; 0
    2a2c:	40 e0       	ldi	r20, 0x00	; 0
    2a2e:	30 e8       	ldi	r19, 0x80	; 128
    2a30:	2f eb       	ldi	r18, 0xBF	; 191
    2a32:	04 c0       	rjmp	.+8      	; 0x2a3c <floorf+0x100>
    2a34:	50 e0       	ldi	r21, 0x00	; 0
    2a36:	40 e0       	ldi	r20, 0x00	; 0
    2a38:	30 e0       	ldi	r19, 0x00	; 0
    2a3a:	20 e0       	ldi	r18, 0x00	; 0
    2a3c:	65 2f       	mov	r22, r21
    2a3e:	74 2f       	mov	r23, r20
    2a40:	83 2f       	mov	r24, r19
    2a42:	92 2f       	mov	r25, r18
    2a44:	28 96       	adiw	r28, 0x08	; 8
    2a46:	0f b6       	in	r0, 0x3f	; 63
    2a48:	f8 94       	cli
    2a4a:	de bf       	out	0x3e, r29	; 62
    2a4c:	0f be       	out	0x3f, r0	; 63
    2a4e:	cd bf       	out	0x3d, r28	; 61
    2a50:	df 91       	pop	r29
    2a52:	cf 91       	pop	r28
    2a54:	ff 90       	pop	r15
    2a56:	ef 90       	pop	r14
    2a58:	df 90       	pop	r13
    2a5a:	cf 90       	pop	r12
    2a5c:	bf 90       	pop	r11
    2a5e:	af 90       	pop	r10
    2a60:	9f 90       	pop	r9
    2a62:	8f 90       	pop	r8
    2a64:	7f 90       	pop	r7
    2a66:	6f 90       	pop	r6
    2a68:	5f 90       	pop	r5
    2a6a:	4f 90       	pop	r4
    2a6c:	08 95       	ret

Disassembly of section .text.fmaf:

00002800 <fmaf>:
    2800:	a5 e1       	ldi	r26, 0x15	; 21
    2802:	b0 e0       	ldi	r27, 0x00	; 0
    2804:	e6 e0       	ldi	r30, 0x06	; 6
    2806:	f4 e1       	ldi	r31, 0x14	; 20
    2808:	0c 94 f1 20 	jmp	0x41e2	; 0x41e2 <__prologue_saves__>
    280c:	47 01       	movw	r8, r14
    280e:	58 01       	movw	r10, r16
    2810:	0e 94 48 23 	call	0x4690	; 0x4690 <__mulsf3>
    2814:	2b 01       	movw	r4, r22
    2816:	3c 01       	movw	r6, r24
    2818:	a8 01       	movw	r20, r16
    281a:	97 01       	movw	r18, r14
    281c:	0e 94 0a 23 	call	0x4614	; 0x4614 <__addsf3>
    2820:	16 2f       	mov	r17, r22
    2822:	c7 2e       	mov	r12, r23
    2824:	d8 2e       	mov	r13, r24
    2826:	f9 2e       	mov	r15, r25
    2828:	86 2f       	mov	r24, r22
    282a:	9c 2d       	mov	r25, r12
    282c:	ad 2d       	mov	r26, r13
    282e:	bf 2d       	mov	r27, r15
    2830:	89 83       	std	Y+1, r24	; 0x01
    2832:	9a 83       	std	Y+2, r25	; 0x02
    2834:	ab 83       	std	Y+3, r26	; 0x03
    2836:	bc 83       	std	Y+4, r27	; 0x04
    2838:	aa 81       	ldd	r26, Y+2	; 0x02
    283a:	fb 81       	ldd	r31, Y+3	; 0x03
    283c:	ec 81       	ldd	r30, Y+4	; 0x04
    283e:	ed 80       	ldd	r14, Y+5	; 0x05
    2840:	3e 80       	ldd	r3, Y+6	; 0x06
    2842:	2f 80       	ldd	r2, Y+7	; 0x07
    2844:	08 85       	ldd	r16, Y+8	; 0x08
    2846:	0d 8b       	std	Y+21, r16	; 0x15
    2848:	5e 2f       	mov	r21, r30
    284a:	5f 71       	andi	r21, 0x1F	; 31
    284c:	21 2f       	mov	r18, r17
    284e:	3a 2f       	mov	r19, r26
    2850:	4f 2f       	mov	r20, r31
    2852:	60 e0       	ldi	r22, 0x00	; 0
    2854:	70 e0       	ldi	r23, 0x00	; 0
    2856:	80 e0       	ldi	r24, 0x00	; 0
    2858:	90 e0       	ldi	r25, 0x00	; 0
    285a:	21 15       	cp	r18, r1
    285c:	31 05       	cpc	r19, r1
    285e:	41 05       	cpc	r20, r1
    2860:	00 e1       	ldi	r16, 0x10	; 16
    2862:	50 07       	cpc	r21, r16
    2864:	61 05       	cpc	r22, r1
    2866:	71 05       	cpc	r23, r1
    2868:	81 05       	cpc	r24, r1
    286a:	91 05       	cpc	r25, r1
    286c:	09 f0       	breq	.+2      	; 0x2870 <fmaf+0x70>
    286e:	5e c0       	rjmp	.+188    	; 0x292c <fmaf+0x12c>
    2870:	5e 2f       	mov	r21, r30
    2872:	6e 2d       	mov	r22, r14
    2874:	73 2d       	mov	r23, r3
    2876:	82 2d       	mov	r24, r2
    2878:	9d 89       	ldd	r25, Y+21	; 0x15
    287a:	04 e3       	ldi	r16, 0x34	; 52
    287c:	0e 94 d5 20 	call	0x41aa	; 0x41aa <__lshrdi3>
    2880:	2d 87       	std	Y+13, r18	; 0x0d
    2882:	3e 87       	std	Y+14, r19	; 0x0e
    2884:	4f 87       	std	Y+15, r20	; 0x0f
    2886:	58 8b       	std	Y+16, r21	; 0x10
    2888:	69 8b       	std	Y+17, r22	; 0x11
    288a:	7a 8b       	std	Y+18, r23	; 0x12
    288c:	8b 8b       	std	Y+19, r24	; 0x13
    288e:	9c 8b       	std	Y+20, r25	; 0x14
    2890:	8d 85       	ldd	r24, Y+13	; 0x0d
    2892:	9e 85       	ldd	r25, Y+14	; 0x0e
    2894:	97 70       	andi	r25, 0x07	; 7
    2896:	8f 3f       	cpi	r24, 0xFF	; 255
    2898:	97 40       	sbci	r25, 0x07	; 7
    289a:	09 f4       	brne	.+2      	; 0x289e <fmaf+0x9e>
    289c:	47 c0       	rjmp	.+142    	; 0x292c <fmaf+0x12c>
    289e:	a3 01       	movw	r20, r6
    28a0:	92 01       	movw	r18, r4
    28a2:	61 2f       	mov	r22, r17
    28a4:	7c 2d       	mov	r23, r12
    28a6:	8d 2d       	mov	r24, r13
    28a8:	9f 2d       	mov	r25, r15
    28aa:	0e 94 09 23 	call	0x4612	; 0x4612 <__subsf3>
    28ae:	9b 01       	movw	r18, r22
    28b0:	ac 01       	movw	r20, r24
    28b2:	c5 01       	movw	r24, r10
    28b4:	b4 01       	movw	r22, r8
    28b6:	0e 94 32 23 	call	0x4664	; 0x4664 <__cmpsf2>
    28ba:	88 23       	and	r24, r24
    28bc:	b9 f1       	breq	.+110    	; 0x292c <fmaf+0x12c>
    28be:	49 86       	std	Y+9, r4	; 0x09
    28c0:	5a 86       	std	Y+10, r5	; 0x0a
    28c2:	6b 86       	std	Y+11, r6	; 0x0b
    28c4:	7c 86       	std	Y+12, r7	; 0x0c
    28c6:	29 85       	ldd	r18, Y+9	; 0x09
    28c8:	3a 85       	ldd	r19, Y+10	; 0x0a
    28ca:	4b 85       	ldd	r20, Y+11	; 0x0b
    28cc:	5c 85       	ldd	r21, Y+12	; 0x0c
    28ce:	c5 01       	movw	r24, r10
    28d0:	b4 01       	movw	r22, r8
    28d2:	0e 94 0a 23 	call	0x4614	; 0x4614 <__addsf3>
    28d6:	b6 2e       	mov	r11, r22
    28d8:	87 2e       	mov	r8, r23
    28da:	98 2e       	mov	r9, r24
    28dc:	a9 2e       	mov	r10, r25
    28de:	26 2f       	mov	r18, r22
    28e0:	37 2f       	mov	r19, r23
    28e2:	48 2f       	mov	r20, r24
    28e4:	59 2f       	mov	r21, r25
    28e6:	61 2f       	mov	r22, r17
    28e8:	7c 2d       	mov	r23, r12
    28ea:	8d 2d       	mov	r24, r13
    28ec:	9f 2d       	mov	r25, r15
    28ee:	0e 94 32 23 	call	0x4664	; 0x4664 <__cmpsf2>
    28f2:	81 11       	cpse	r24, r1
    28f4:	18 c0       	rjmp	.+48     	; 0x2926 <fmaf+0x126>
    28f6:	2b 2d       	mov	r18, r11
    28f8:	8b 2d       	mov	r24, r11
    28fa:	98 2d       	mov	r25, r8
    28fc:	a9 2d       	mov	r26, r9
    28fe:	ba 2d       	mov	r27, r10
    2900:	89 83       	std	Y+1, r24	; 0x01
    2902:	9a 83       	std	Y+2, r25	; 0x02
    2904:	ab 83       	std	Y+3, r26	; 0x03
    2906:	bc 83       	std	Y+4, r27	; 0x04
    2908:	3a 81       	ldd	r19, Y+2	; 0x02
    290a:	4b 81       	ldd	r20, Y+3	; 0x03
    290c:	5c 81       	ldd	r21, Y+4	; 0x04
    290e:	6e 2d       	mov	r22, r14
    2910:	73 2d       	mov	r23, r3
    2912:	82 2d       	mov	r24, r2
    2914:	9d 89       	ldd	r25, Y+21	; 0x15
    2916:	a1 e0       	ldi	r26, 0x01	; 1
    2918:	0e 94 aa 22 	call	0x4554	; 0x4554 <__adddi3_s8>
    291c:	12 2f       	mov	r17, r18
    291e:	c3 2e       	mov	r12, r19
    2920:	d4 2e       	mov	r13, r20
    2922:	f5 2e       	mov	r15, r21
    2924:	03 c0       	rjmp	.+6      	; 0x292c <fmaf+0x12c>
    2926:	1b 2d       	mov	r17, r11
    2928:	64 01       	movw	r12, r8
    292a:	fa 2c       	mov	r15, r10
    292c:	61 2f       	mov	r22, r17
    292e:	7c 2d       	mov	r23, r12
    2930:	8d 2d       	mov	r24, r13
    2932:	9f 2d       	mov	r25, r15
    2934:	65 96       	adiw	r28, 0x15	; 21
    2936:	e2 e1       	ldi	r30, 0x12	; 18
    2938:	0c 94 28 21 	jmp	0x4250	; 0x4250 <__epilogue_restores__>

Disassembly of section .text.libgcc:

00004554 <__adddi3_s8>:
    4554:	00 24       	eor	r0, r0
    4556:	a7 fd       	sbrc	r26, 7
    4558:	00 94       	com	r0
    455a:	2a 0f       	add	r18, r26
    455c:	30 1d       	adc	r19, r0
    455e:	40 1d       	adc	r20, r0
    4560:	50 1d       	adc	r21, r0
    4562:	60 1d       	adc	r22, r0
    4564:	70 1d       	adc	r23, r0
    4566:	80 1d       	adc	r24, r0
    4568:	90 1d       	adc	r25, r0
    456a:	08 95       	ret
