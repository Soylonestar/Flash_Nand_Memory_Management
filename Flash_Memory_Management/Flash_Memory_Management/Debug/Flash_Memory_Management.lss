
Flash_Memory_Management.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00004a18  2**0
                  ALLOC, LOAD, DATA
  1 .text         0000017a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000020d  00800200  00800200  00004a18  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00004a18  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 00000196  00000000  00000000  00004a47  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000001c8  00000000  00000000  00004bdd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000033a5  00000000  00000000  00004da5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001295  00000000  00000000  0000814a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001916  00000000  00000000  000093df  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000558  00000000  00000000  0000acf8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000542  00000000  00000000  0000b250  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000df2  00000000  00000000  0000b792  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  0000c584  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  00004956  00004956  00004a0a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000c774  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .progmemx.data 00000013  00000695  00000695  00000749  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 16 .text.main    00000044  00004298  00004298  0000434c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.USART_Init 00000036  00004510  00004510  000045c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.USART_TX_Data 0000000e  00004894  00004894  00004948  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.USART_Data 0000004c  000041bc  000041bc  00004270  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.USART_RX_Data 0000000e  000048a2  000048a2  00004956  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.LED_Init 00000016  00004834  00004834  000048e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.LED_Red_Toggle 0000000e  000048b0  000048b0  00004964  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.LED_Green_Toggle 0000000e  000048be  000048be  00004972  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.VOLTAGE_Translator_Init 00000026  00004684  00004684  00004738  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.SLAVE_CS_Deselect 00000062  00003fe2  00003fe2  00004096  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.FLASH_NAND_CS_ENABLE 0000003a  00004464  00004464  00004518  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.FLASH_NAND_CS_DISABLE 0000003a  0000449e  0000449e  00004552  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.Print_To_User 000000ac  000035c2  000035c2  00003676  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .progmemx.data 000003bc  0000017a  0000017a  0000022e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 30 .text.HEX_Verification 000000bc  0000339c  0000339c  00003450  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.ExecuteCommand 00000584  00001c1e  00001c1e  00001cd2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.UserInput 000000be  000032de  000032de  00003392  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.COLUMN_BLOCK_PAGE_ADDRESSER 00000150  00002712  00002712  000027c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.NAND_Address_Checker 0000009a  000039a2  000039a2  00003a56  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .bss.input_counter 00000002  0080040d  0080040d  00004a18  2**0
                  ALLOC
 36 .bss.arr_address 00000002  0080040f  0080040f  00004a18  2**0
                  ALLOC
 37 .text.CLEAR_ARR 00000060  00004044  00004044  000040f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.SPI_MASTER_Init 00000024  000046f6  000046f6  000047aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.FLASH_Write_Enable 0000002a  0000460a  0000460a  000046be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .progmemx.data 000000ca  00000536  00000536  000005ea  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 41 .text.FLASH_ID 00000096  00003a3c  00003a3c  00003af0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.FLASH_Die_Selection 00000084  00003d0e  00003d0e  00003dc2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.FLASH_Configuration 00000084  00003d92  00003d92  00003e46  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.FLASH_Block_Lock_Setter 00000084  00003e16  00003e16  00003eca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.FLASH_Block_Lock 000000ba  00003458  00003458  0000350c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.FLASH_Reset 0000002e  000045dc  000045dc  00004690  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.FLASH_MainArray_Address 000000a6  0000366e  0000366e  00003722  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.FLASH_Column_Address 0000005c  00004160  00004160  00004214  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.FLASH_Data_Storage 0000006e  00003f0a  00003f0a  00003fbe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.FLASH_Read_From_Cache_x1 0000005e  000040a4  000040a4  00004158  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.FLASH_Status 0000008c  00003bf6  00003bf6  00003caa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.FLASH_Program_Execute 00000040  000043a8  000043a8  0000445c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.FLASH_Page_Program 00000092  00003ad2  00003ad2  00003b86  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.FLASH_Page_Read 00000048  00004208  00004208  000042bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.FLASH_Para_Pg 00000070  00003e9a  00003e9a  00003f4e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.FLASH_Block_Erase 00000044  000042dc  000042dc  00004390  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .progmemx.data 0000007f  00000600  00000600  000006b4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 58 .text.Page_Tester 000000c0  0000321e  0000321e  000032d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.libgcc  0000000e  000048cc  000048cc  00004980  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.__dummy_fini 00000002  0000495e  0000495e  00004a12  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.__dummy_funcs_on_exit 00000002  00004960  00004960  00004a14  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.__dummy_simulator_exit 00000002  00004962  00004962  00004a16  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.exit    00000016  0000484a  0000484a  000048fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.__wrap_sprintf 00000026  000046aa  000046aa  0000475e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .progmemx.data 00000007  000006c8  000006c8  0000077c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 66 .text.__fmt_s 000000ca  00003154  00003154  00003208  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.__out   0000006a  00003f78  00003f78  0000402c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.__pad   0000010e  00002c1a  00002c1a  00002cce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.__fmt_state 000000a4  00003714  00003714  000037c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .progmemx.data 00000006  000006cf  000006cf  00000783  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 71 .text.__printf_core 00000832  000006d6  000006d6  0000078a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .progmemx.data.state_table 00000016  0000067f  0000067f  00000733  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 73 .text.fputc   00000092  00003b64  00003b64  00003c18  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.__fmt_d 0000017e  00002422  00002422  000024d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.__fmt_o 000000d4  00002ede  00002ede  00002f92  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.__cvt_u 0000014a  00002862  00002862  00002916  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.__fmt_u 000000b0  00003512  00003512  000035c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.__fmt_x 00000280  000021a2  000021a2  00002256  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.__pop_float 00000040  000043e8  000043e8  0000449c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.__pop_int 00000172  000025a0  000025a0  00002654  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text.__pop_ptr 000000d8  00002e06  00002e06  00002eba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.sprintf 00000026  000046d0  000046d0  00004784  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .text.vsprintf 00000018  000047d4  000047d4  00004888  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 .text.atoi    0000008c  00003c82  00003c82  00003d36  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 .text.memset  00000012  00004860  00004860  00004914  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 .text.strcmp  00000044  00004320  00004320  000043d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 .text.strlen  00000024  0000471a  0000471a  000047ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 .text.tolower 00000010  00004884  00004884  00004938  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 .text.toupper 00000012  00004872  00004872  00004926  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 .text._Exit   00000004  0000495a  0000495a  00004a0e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 .text.__vsprintf 00000018  000047ec  000047ec  000048a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 .text.__vsnprintf 000000a4  000037b8  000037b8  0000386c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 .text.vsnprintf 000000a4  0000385c  0000385c  00003910  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 .text.vfprintf 00000030  0000457c  0000457c  00004630  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 .text.__vfprintf 00000030  000045ac  000045ac  00004660  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 .progmemx.data 00000010  000006a8  000006a8  0000075c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 97 .text.__fmt_fp 000006ba  00000f08  00000f08  00000fbc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 98 .progmemx.data 00000010  000006b8  000006b8  0000076c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 99 .text.__fmt_a 0000065c  000015c2  000015c2  00001676  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 .text.strcpy  0000001c  00004780  00004780  00004834  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 .text.libgcc.div 00000028  00004634  00004634  000046e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 .text.libgcc.div 0000001c  0000479c  0000479c  00004850  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 .text.libgcc.div 000000a2  00003900  00003900  000039b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 .text.libgcc  00000020  00004760  00004760  00004814  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 .text.libgcc.prologue 00000038  000044d8  000044d8  0000458c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 .text.libgcc.prologue 00000036  00004546  00004546  000045fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 .text.libgcc  0000001c  000047b8  000047b8  0000486c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 .text.libgcc.builtins 0000003c  00004428  00004428  000044dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 .text.libgcc  00000018  00004804  00004804  000048b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 .text.libgcc.div 00000028  0000465c  0000465c  00004710  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 .text         0000000e  000048da  000048da  0000498e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 .text         000000ce  00003086  00003086  0000313a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 .text         0000000a  0000492c  0000492c  000049e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 .text         00000008  00004940  00004940  000049f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 .text         000000de  00002d28  00002d28  00002ddc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 .text         0000000e  000048e8  000048e8  0000499c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 .text         0000005e  00004102  00004102  000041b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 .text         00000048  00004250  00004250  00004304  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 .text         0000000c  00004920  00004920  000049d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 .text         00000006  00004950  00004950  00004a04  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 .text         0000000e  000048f6  000048f6  000049aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 .text         0000000e  00004904  00004904  000049b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 .text         00000022  0000473e  0000473e  000047f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 .text         00000044  00004364  00004364  00004418  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 .text         0000000e  00004912  00004912  000049c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 .text         0000000a  00004936  00004936  000049ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 .text         00000008  00004948  00004948  000049fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 .text         000000d4  00002fb2  00002fb2  00003066  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 .text.floorf  00000132  00002ae8  00002ae8  00002b9c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 .text.fmaf    0000013c  000029ac  000029ac  00002a60  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 .text.libgcc  00000018  0000481c  0000481c  000048d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__ctors_end>
   4:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
   8:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
   c:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  10:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  14:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  18:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  1c:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  20:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  24:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  28:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  2c:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  30:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  34:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  38:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  3c:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  40:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  44:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  48:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  4c:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  50:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  54:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  58:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  5c:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  60:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  64:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  68:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  6c:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  70:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  74:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  78:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  7c:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  80:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  84:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  88:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  8c:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  90:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  94:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  98:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  9c:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  a0:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  a4:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  a8:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  ac:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  b0:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  b4:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  b8:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  bc:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  c0:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  c4:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  c8:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  cc:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  d0:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  d4:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  d8:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  dc:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>
  e0:	0c 94 ab 24 	jmp	0x4956	; 0x4956 <__bad_interrupt>

000000e4 <.dinit>:
  e4:	02 00       	.word	0x0002	; ????
  e6:	04 11       	cpse	r16, r4
  e8:	80 00       	.word	0x0080	; ????

000000ea <__trampolines_start>:
  ea:	0c 94 75 17 	jmp	0x2eea	; 0x2eea <__fmt_o+0xc>
  ee:	0c 94 71 03 	jmp	0x6e2	; 0x6e2 <__printf_core+0xc>
  f2:	0c 94 8a 07 	jmp	0xf14	; 0xf14 <__fmt_fp+0xc>
  f6:	0c 94 d7 10 	jmp	0x21ae	; 0x21ae <__fmt_x+0xc>
  fa:	0c 94 e7 0a 	jmp	0x15ce	; 0x15ce <__fmt_a+0xc>
  fe:	0c 94 dc 22 	jmp	0x45b8	; 0x45b8 <__vfprintf+0xc>
 102:	0c 94 dc 14 	jmp	0x29b8	; 0x29b8 <fmaf+0xc>
 106:	0c 94 c4 22 	jmp	0x4588	; 0x4588 <vfprintf+0xc>
 10a:	0c 94 17 12 	jmp	0x242e	; 0x242e <__fmt_d+0xc>
 10e:	0c 94 5b 23 	jmp	0x46b6	; 0x46b6 <_sprintf_cdnopuxX+0xc>
 112:	0c 94 6e 23 	jmp	0x46dc	; 0x46dc <sprintf+0xc>
 116:	0c 94 37 14 	jmp	0x286e	; 0x286e <__cvt_u+0xc>
 11a:	0c 94 8f 1a 	jmp	0x351e	; 0x351e <__fmt_u+0xc>

0000011e <__ctors_end>:
 11e:	11 24       	eor	r1, r1
 120:	1f be       	out	0x3f, r1	; 63
 122:	cf ef       	ldi	r28, 0xFF	; 255
 124:	d1 e2       	ldi	r29, 0x21	; 33
 126:	de bf       	out	0x3e, r29	; 62
 128:	cd bf       	out	0x3d, r28	; 61
 12a:	00 e0       	ldi	r16, 0x00	; 0
 12c:	0c bf       	out	0x3c, r16	; 60

0000012e <__do_copy_data>:
 12e:	e4 ee       	ldi	r30, 0xE4	; 228
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	40 e0       	ldi	r20, 0x00	; 0
 134:	19 c0       	rjmp	.+50     	; 0x168 <__do_clear_bss+0x8>
 136:	b7 91       	elpm	r27, Z+
 138:	a7 91       	elpm	r26, Z+
 13a:	37 91       	elpm	r19, Z+
 13c:	27 91       	elpm	r18, Z+
 13e:	07 91       	elpm	r16, Z+
 140:	07 fd       	sbrc	r16, 7
 142:	0e c0       	rjmp	.+28     	; 0x160 <__do_clear_bss>
 144:	97 91       	elpm	r25, Z+
 146:	87 91       	elpm	r24, Z+
 148:	ef 01       	movw	r28, r30
 14a:	f9 2f       	mov	r31, r25
 14c:	e8 2f       	mov	r30, r24
 14e:	0b bf       	out	0x3b, r16	; 59
 150:	07 90       	elpm	r0, Z+
 152:	0d 92       	st	X+, r0
 154:	a2 17       	cp	r26, r18
 156:	b3 07       	cpc	r27, r19
 158:	d9 f7       	brne	.-10     	; 0x150 <__do_copy_data+0x22>
 15a:	fe 01       	movw	r30, r28
 15c:	1b be       	out	0x3b, r1	; 59
 15e:	04 c0       	rjmp	.+8      	; 0x168 <__do_clear_bss+0x8>

00000160 <__do_clear_bss>:
 160:	1d 92       	st	X+, r1
 162:	a2 17       	cp	r26, r18
 164:	b3 07       	cpc	r27, r19
 166:	e1 f7       	brne	.-8      	; 0x160 <__do_clear_bss>
 168:	e9 3e       	cpi	r30, 0xE9	; 233
 16a:	f4 07       	cpc	r31, r20
 16c:	21 f7       	brne	.-56     	; 0x136 <__do_copy_data+0x8>
 16e:	0e 94 4c 21 	call	0x4298	; 0x4298 <main>
 172:	0c 94 25 24 	jmp	0x484a	; 0x484a <exit>

00000176 <_exit>:
 176:	f8 94       	cli

00000178 <__stop_program>:
 178:	ff cf       	rjmp	.-2      	; 0x178 <__stop_program>

Disassembly of section .text:

00004956 <__bad_interrupt>:
    4956:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00004298 <main>:

#include "main.h" //has everything...

int main(void)
{
	LED_Init();
    4298:	0e 94 1a 24 	call	0x4834	; 0x4834 <LED_Init>
	VOLTAGE_Translator_Init();
    429c:	0e 94 42 23 	call	0x4684	; 0x4684 <VOLTAGE_Translator_Init>
	USART_Init();
    42a0:	0e 94 88 22 	call	0x4510	; 0x4510 <USART_Init>
	SLAVE_CS_Deselect();
    42a4:	0e 94 f1 1f 	call	0x3fe2	; 0x3fe2 <SLAVE_CS_Deselect>
	SPI_MASTER_Init();
    42a8:	0e 94 7b 23 	call	0x46f6	; 0x46f6 <SPI_MASTER_Init>
	LED_Green_Toggle();
    42ac:	0e 94 5f 24 	call	0x48be	; 0x48be <LED_Green_Toggle>
	//PORTA &= ~(1 << PA3); //~CS pin set low for selecting slave device
	
    while(1)
    {		
		CLEAR_ARR();
    42b0:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
		USART_Data("->Arrays Cleared \n");
    42b4:	65 e9       	ldi	r22, 0x95	; 149
    42b6:	76 e0       	ldi	r23, 0x06	; 6
    42b8:	80 e0       	ldi	r24, 0x00	; 0
    42ba:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		
		UserInput(true); //true therefore command
    42be:	81 e0       	ldi	r24, 0x01	; 1
    42c0:	0e 94 6f 19 	call	0x32de	; 0x32de <UserInput>
		
		LED_Red_Toggle();
    42c4:	0e 94 58 24 	call	0x48b0	; 0x48b0 <LED_Red_Toggle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    42c8:	2f ef       	ldi	r18, 0xFF	; 255
    42ca:	81 ee       	ldi	r24, 0xE1	; 225
    42cc:	94 e0       	ldi	r25, 0x04	; 4
    42ce:	21 50       	subi	r18, 0x01	; 1
    42d0:	80 40       	sbci	r24, 0x00	; 0
    42d2:	90 40       	sbci	r25, 0x00	; 0
    42d4:	e1 f7       	brne	.-8      	; 0x42ce <main+0x36>
    42d6:	00 c0       	rjmp	.+0      	; 0x42d8 <main+0x40>
    42d8:	00 00       	nop
    42da:	ea cf       	rjmp	.-44     	; 0x42b0 <main+0x18>

Disassembly of section .text.USART_Init:

00004510 <USART_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    4510:	87 e6       	ldi	r24, 0x67	; 103
    4512:	90 e0       	ldi	r25, 0x00	; 0
    4514:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
    4518:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
    451c:	8d b1       	in	r24, 0x0d	; 13
    451e:	82 60       	ori	r24, 0x02	; 2
    4520:	8d b9       	out	0x0d, r24	; 13
    4522:	e1 ec       	ldi	r30, 0xC1	; 193
    4524:	f0 e0       	ldi	r31, 0x00	; 0
    4526:	80 81       	ld	r24, Z
    4528:	88 60       	ori	r24, 0x08	; 8
    452a:	80 83       	st	Z, r24
    452c:	8d b1       	in	r24, 0x0d	; 13
    452e:	8e 7f       	andi	r24, 0xFE	; 254
    4530:	8d b9       	out	0x0d, r24	; 13
    4532:	80 81       	ld	r24, Z
    4534:	80 61       	ori	r24, 0x10	; 16
    4536:	80 83       	st	Z, r24
    4538:	81 b1       	in	r24, 0x01	; 1
    453a:	84 60       	ori	r24, 0x04	; 4
    453c:	81 b9       	out	0x01, r24	; 1
    453e:	82 b1       	in	r24, 0x02	; 2
    4540:	84 60       	ori	r24, 0x04	; 4
    4542:	82 b9       	out	0x02, r24	; 2
    4544:	08 95       	ret

Disassembly of section .text.USART_TX_Data:

00004894 <USART_TX_Data>:
    4894:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    4898:	95 ff       	sbrs	r25, 5
    489a:	fc cf       	rjmp	.-8      	; 0x4894 <USART_TX_Data>
    489c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    48a0:	08 95       	ret

Disassembly of section .text.USART_Data:

000041bc <USART_Data>:
    41bc:	cf 92       	push	r12
    41be:	df 92       	push	r13
    41c0:	ef 92       	push	r14
    41c2:	cf 93       	push	r28
    41c4:	df 93       	push	r29
    41c6:	6b 01       	movw	r12, r22
    41c8:	e8 2e       	mov	r14, r24
    41ca:	c0 e0       	ldi	r28, 0x00	; 0
    41cc:	d0 e0       	ldi	r29, 0x00	; 0
    41ce:	0f c0       	rjmp	.+30     	; 0x41ee <USART_Data+0x32>
    41d0:	ae 2d       	mov	r26, r14
    41d2:	c6 01       	movw	r24, r12
    41d4:	8c 0f       	add	r24, r28
    41d6:	9d 1f       	adc	r25, r29
    41d8:	a1 1d       	adc	r26, r1
    41da:	d7 fd       	sbrc	r29, 7
    41dc:	aa 95       	dec	r26
    41de:	fc 01       	movw	r30, r24
    41e0:	5a 2f       	mov	r21, r26
    41e2:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    41e6:	86 2f       	mov	r24, r22
    41e8:	0e 94 4a 24 	call	0x4894	; 0x4894 <USART_TX_Data>
    41ec:	21 96       	adiw	r28, 0x01	; 1
    41ee:	8e 2d       	mov	r24, r14
    41f0:	b6 01       	movw	r22, r12
    41f2:	0e 94 8d 23 	call	0x471a	; 0x471a <strlen>
    41f6:	c8 17       	cp	r28, r24
    41f8:	d9 07       	cpc	r29, r25
    41fa:	50 f3       	brcs	.-44     	; 0x41d0 <USART_Data+0x14>
    41fc:	df 91       	pop	r29
    41fe:	cf 91       	pop	r28
    4200:	ef 90       	pop	r14
    4202:	df 90       	pop	r13
    4204:	cf 90       	pop	r12
    4206:	08 95       	ret

Disassembly of section .text.USART_RX_Data:

000048a2 <USART_RX_Data>:
    48a2:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    48a6:	88 23       	and	r24, r24
    48a8:	e4 f7       	brge	.-8      	; 0x48a2 <USART_RX_Data>
    48aa:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    48ae:	08 95       	ret

Disassembly of section .text.LED_Init:

00004834 <LED_Init>:
    4834:	e1 e0       	ldi	r30, 0x01	; 1
    4836:	f1 e0       	ldi	r31, 0x01	; 1
    4838:	80 81       	ld	r24, Z
    483a:	80 66       	ori	r24, 0x60	; 96
    483c:	80 83       	st	Z, r24
    483e:	e2 e0       	ldi	r30, 0x02	; 2
    4840:	f1 e0       	ldi	r31, 0x01	; 1
    4842:	80 81       	ld	r24, Z
    4844:	80 66       	ori	r24, 0x60	; 96
    4846:	80 83       	st	Z, r24
    4848:	08 95       	ret

Disassembly of section .text.LED_Red_Toggle:

000048b0 <LED_Red_Toggle>:
}

void LED_Red_Toggle()
{
	PORTH ^= (1 << PH6); //toggle RED_LED (PH6)
    48b0:	e2 e0       	ldi	r30, 0x02	; 2
    48b2:	f1 e0       	ldi	r31, 0x01	; 1
    48b4:	90 81       	ld	r25, Z
    48b6:	80 e4       	ldi	r24, 0x40	; 64
    48b8:	89 27       	eor	r24, r25
    48ba:	80 83       	st	Z, r24
    48bc:	08 95       	ret

Disassembly of section .text.LED_Green_Toggle:

000048be <LED_Green_Toggle>:
}

void LED_Green_Toggle()
{
	PORTH ^= (1 << PH5); //toggle GREEN_LED (PH5)
    48be:	e2 e0       	ldi	r30, 0x02	; 2
    48c0:	f1 e0       	ldi	r31, 0x01	; 1
    48c2:	90 81       	ld	r25, Z
    48c4:	80 e2       	ldi	r24, 0x20	; 32
    48c6:	89 27       	eor	r24, r25
    48c8:	80 83       	st	Z, r24
    48ca:	08 95       	ret

Disassembly of section .text.VOLTAGE_Translator_Init:

00004684 <VOLTAGE_Translator_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    4684:	87 b1       	in	r24, 0x07	; 7
    4686:	80 64       	ori	r24, 0x40	; 64
    4688:	87 b9       	out	0x07, r24	; 7
    468a:	88 b1       	in	r24, 0x08	; 8
    468c:	80 64       	ori	r24, 0x40	; 64
    468e:	88 b9       	out	0x08, r24	; 8
    4690:	83 b3       	in	r24, 0x13	; 19
    4692:	81 60       	ori	r24, 0x01	; 1
    4694:	83 bb       	out	0x13, r24	; 19
    4696:	84 b3       	in	r24, 0x14	; 20
    4698:	81 60       	ori	r24, 0x01	; 1
    469a:	84 bb       	out	0x14, r24	; 20
    469c:	83 b3       	in	r24, 0x13	; 19
    469e:	82 60       	ori	r24, 0x02	; 2
    46a0:	83 bb       	out	0x13, r24	; 19
    46a2:	84 b3       	in	r24, 0x14	; 20
    46a4:	82 60       	ori	r24, 0x02	; 2
    46a6:	84 bb       	out	0x14, r24	; 20
    46a8:	08 95       	ret

Disassembly of section .text.SLAVE_CS_Deselect:

00003fe2 <SLAVE_CS_Deselect>:
    3fe2:	81 b1       	in	r24, 0x01	; 1
    3fe4:	88 60       	ori	r24, 0x08	; 8
    3fe6:	81 b9       	out	0x01, r24	; 1
    3fe8:	82 b1       	in	r24, 0x02	; 2
    3fea:	88 60       	ori	r24, 0x08	; 8
    3fec:	82 b9       	out	0x02, r24	; 2
    3fee:	81 b1       	in	r24, 0x01	; 1
    3ff0:	80 61       	ori	r24, 0x10	; 16
    3ff2:	81 b9       	out	0x01, r24	; 1
    3ff4:	82 b1       	in	r24, 0x02	; 2
    3ff6:	80 61       	ori	r24, 0x10	; 16
    3ff8:	82 b9       	out	0x02, r24	; 2
    3ffa:	81 b1       	in	r24, 0x01	; 1
    3ffc:	80 62       	ori	r24, 0x20	; 32
    3ffe:	81 b9       	out	0x01, r24	; 1
    4000:	82 b1       	in	r24, 0x02	; 2
    4002:	80 62       	ori	r24, 0x20	; 32
    4004:	82 b9       	out	0x02, r24	; 2
    4006:	81 b1       	in	r24, 0x01	; 1
    4008:	80 64       	ori	r24, 0x40	; 64
    400a:	81 b9       	out	0x01, r24	; 1
    400c:	82 b1       	in	r24, 0x02	; 2
    400e:	80 64       	ori	r24, 0x40	; 64
    4010:	82 b9       	out	0x02, r24	; 2
    4012:	81 b1       	in	r24, 0x01	; 1
    4014:	80 68       	ori	r24, 0x80	; 128
    4016:	81 b9       	out	0x01, r24	; 1
    4018:	82 b1       	in	r24, 0x02	; 2
    401a:	80 68       	ori	r24, 0x80	; 128
    401c:	82 b9       	out	0x02, r24	; 2
    401e:	81 b1       	in	r24, 0x01	; 1
    4020:	82 60       	ori	r24, 0x02	; 2
    4022:	81 b9       	out	0x01, r24	; 1
    4024:	82 b1       	in	r24, 0x02	; 2
    4026:	82 60       	ori	r24, 0x02	; 2
    4028:	82 b9       	out	0x02, r24	; 2
    402a:	81 b1       	in	r24, 0x01	; 1
    402c:	84 60       	ori	r24, 0x04	; 4
    402e:	81 b9       	out	0x01, r24	; 1
    4030:	82 b1       	in	r24, 0x02	; 2
    4032:	84 60       	ori	r24, 0x04	; 4
    4034:	82 b9       	out	0x02, r24	; 2
    4036:	81 b1       	in	r24, 0x01	; 1
    4038:	88 60       	ori	r24, 0x08	; 8
    403a:	81 b9       	out	0x01, r24	; 1
    403c:	82 b1       	in	r24, 0x02	; 2
    403e:	88 60       	ori	r24, 0x08	; 8
    4040:	82 b9       	out	0x02, r24	; 2
    4042:	08 95       	ret

Disassembly of section .text.FLASH_NAND_CS_ENABLE:

00004464 <FLASH_NAND_CS_ENABLE>:
    4464:	82 30       	cpi	r24, 0x02	; 2
    4466:	91 05       	cpc	r25, r1
    4468:	71 f0       	breq	.+28     	; 0x4486 <FLASH_NAND_CS_ENABLE+0x22>
    446a:	1c f4       	brge	.+6      	; 0x4472 <FLASH_NAND_CS_ENABLE+0xe>
    446c:	01 97       	sbiw	r24, 0x01	; 1
    446e:	39 f0       	breq	.+14     	; 0x447e <FLASH_NAND_CS_ENABLE+0x1a>
    4470:	08 95       	ret
    4472:	83 30       	cpi	r24, 0x03	; 3
    4474:	91 05       	cpc	r25, r1
    4476:	59 f0       	breq	.+22     	; 0x448e <FLASH_NAND_CS_ENABLE+0x2a>
    4478:	04 97       	sbiw	r24, 0x04	; 4
    447a:	69 f0       	breq	.+26     	; 0x4496 <FLASH_NAND_CS_ENABLE+0x32>
    447c:	08 95       	ret
    447e:	82 b1       	in	r24, 0x02	; 2
    4480:	87 7f       	andi	r24, 0xF7	; 247
    4482:	82 b9       	out	0x02, r24	; 2
    4484:	08 95       	ret
    4486:	82 b1       	in	r24, 0x02	; 2
    4488:	8f 7e       	andi	r24, 0xEF	; 239
    448a:	82 b9       	out	0x02, r24	; 2
    448c:	08 95       	ret
    448e:	82 b1       	in	r24, 0x02	; 2
    4490:	8f 7d       	andi	r24, 0xDF	; 223
    4492:	82 b9       	out	0x02, r24	; 2
    4494:	08 95       	ret
    4496:	82 b1       	in	r24, 0x02	; 2
    4498:	8f 7b       	andi	r24, 0xBF	; 191
    449a:	82 b9       	out	0x02, r24	; 2
    449c:	08 95       	ret

Disassembly of section .text.FLASH_NAND_CS_DISABLE:

0000449e <FLASH_NAND_CS_DISABLE>:
    449e:	82 30       	cpi	r24, 0x02	; 2
    44a0:	91 05       	cpc	r25, r1
    44a2:	71 f0       	breq	.+28     	; 0x44c0 <FLASH_NAND_CS_DISABLE+0x22>
    44a4:	1c f4       	brge	.+6      	; 0x44ac <FLASH_NAND_CS_DISABLE+0xe>
    44a6:	01 97       	sbiw	r24, 0x01	; 1
    44a8:	39 f0       	breq	.+14     	; 0x44b8 <FLASH_NAND_CS_DISABLE+0x1a>
    44aa:	08 95       	ret
    44ac:	83 30       	cpi	r24, 0x03	; 3
    44ae:	91 05       	cpc	r25, r1
    44b0:	59 f0       	breq	.+22     	; 0x44c8 <FLASH_NAND_CS_DISABLE+0x2a>
    44b2:	04 97       	sbiw	r24, 0x04	; 4
    44b4:	69 f0       	breq	.+26     	; 0x44d0 <FLASH_NAND_CS_DISABLE+0x32>
    44b6:	08 95       	ret
    44b8:	82 b1       	in	r24, 0x02	; 2
    44ba:	88 60       	ori	r24, 0x08	; 8
    44bc:	82 b9       	out	0x02, r24	; 2
    44be:	08 95       	ret
    44c0:	82 b1       	in	r24, 0x02	; 2
    44c2:	80 61       	ori	r24, 0x10	; 16
    44c4:	82 b9       	out	0x02, r24	; 2
    44c6:	08 95       	ret
    44c8:	82 b1       	in	r24, 0x02	; 2
    44ca:	80 62       	ori	r24, 0x20	; 32
    44cc:	82 b9       	out	0x02, r24	; 2
    44ce:	08 95       	ret
    44d0:	82 b1       	in	r24, 0x02	; 2
    44d2:	80 64       	ori	r24, 0x40	; 64
    44d4:	82 b9       	out	0x02, r24	; 2
    44d6:	08 95       	ret

Disassembly of section .text.Print_To_User:

000035c2 <Print_To_User>:
	if (command)
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
}

void Print_To_User(int num_elements, int offset, const char *msg, const uint8_t *arr_start, uint8_t *arr_dest) //# of elements to print along with message, and to which array
{
    35c2:	3f 92       	push	r3
    35c4:	4f 92       	push	r4
    35c6:	5f 92       	push	r5
    35c8:	6f 92       	push	r6
    35ca:	7f 92       	push	r7
    35cc:	8f 92       	push	r8
    35ce:	9f 92       	push	r9
    35d0:	af 92       	push	r10
    35d2:	bf 92       	push	r11
    35d4:	cf 92       	push	r12
    35d6:	df 92       	push	r13
    35d8:	ef 92       	push	r14
    35da:	ff 92       	push	r15
    35dc:	0f 93       	push	r16
    35de:	1f 93       	push	r17
    35e0:	cf 93       	push	r28
    35e2:	df 93       	push	r29
    35e4:	5c 01       	movw	r10, r24
    35e6:	4b 01       	movw	r8, r22
    35e8:	72 2e       	mov	r7, r18
    35ea:	13 2f       	mov	r17, r19
    35ec:	34 2e       	mov	r3, r20
    35ee:	27 01       	movw	r4, r14
    35f0:	60 2e       	mov	r6, r16
	for (int i = 0; i < num_elements; i++)
    35f2:	c0 e0       	ldi	r28, 0x00	; 0
    35f4:	d0 e0       	ldi	r29, 0x00	; 0
    35f6:	26 c0       	rjmp	.+76     	; 0x3644 <Print_To_User+0x82>
	{
		sprintf(arr_dest, msg, arr_start[i + offset]);
    35f8:	ce 01       	movw	r24, r28
    35fa:	88 0d       	add	r24, r8
    35fc:	99 1d       	adc	r25, r9
    35fe:	46 2d       	mov	r20, r6
    3600:	92 01       	movw	r18, r4
    3602:	28 0f       	add	r18, r24
    3604:	39 1f       	adc	r19, r25
    3606:	41 1d       	adc	r20, r1
    3608:	97 fd       	sbrc	r25, 7
    360a:	4a 95       	dec	r20
    360c:	a4 2f       	mov	r26, r20
    360e:	c9 01       	movw	r24, r18
    3610:	f9 01       	movw	r30, r18
    3612:	5a 2f       	mov	r21, r26
    3614:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    3618:	1f 92       	push	r1
    361a:	6f 93       	push	r22
    361c:	3f 92       	push	r3
    361e:	1f 93       	push	r17
    3620:	7f 92       	push	r7
    3622:	df 92       	push	r13
    3624:	cf 92       	push	r12
    3626:	0e 94 68 23 	call	0x46d0	; 0x46d0 <sprintf>
		USART_Data(arr_dest);
    362a:	b6 01       	movw	r22, r12
    362c:	80 e8       	ldi	r24, 0x80	; 128
    362e:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
}

void Print_To_User(int num_elements, int offset, const char *msg, const uint8_t *arr_start, uint8_t *arr_dest) //# of elements to print along with message, and to which array
{
	for (int i = 0; i < num_elements; i++)
    3632:	21 96       	adiw	r28, 0x01	; 1
    3634:	8d b7       	in	r24, 0x3d	; 61
    3636:	9e b7       	in	r25, 0x3e	; 62
    3638:	07 96       	adiw	r24, 0x07	; 7
    363a:	0f b6       	in	r0, 0x3f	; 63
    363c:	f8 94       	cli
    363e:	9e bf       	out	0x3e, r25	; 62
    3640:	0f be       	out	0x3f, r0	; 63
    3642:	8d bf       	out	0x3d, r24	; 61
    3644:	ca 15       	cp	r28, r10
    3646:	db 05       	cpc	r29, r11
    3648:	bc f2       	brlt	.-82     	; 0x35f8 <Print_To_User+0x36>
	{
		sprintf(arr_dest, msg, arr_start[i + offset]);
		USART_Data(arr_dest);
	}
}
    364a:	df 91       	pop	r29
    364c:	cf 91       	pop	r28
    364e:	1f 91       	pop	r17
    3650:	0f 91       	pop	r16
    3652:	ff 90       	pop	r15
    3654:	ef 90       	pop	r14
    3656:	df 90       	pop	r13
    3658:	cf 90       	pop	r12
    365a:	bf 90       	pop	r11
    365c:	af 90       	pop	r10
    365e:	9f 90       	pop	r9
    3660:	8f 90       	pop	r8
    3662:	7f 90       	pop	r7
    3664:	6f 90       	pop	r6
    3666:	5f 90       	pop	r5
    3668:	4f 90       	pop	r4
    366a:	3f 90       	pop	r3
    366c:	08 95       	ret

Disassembly of section .text.HEX_Verification:

0000339c <HEX_Verification>:
		}
	}
}

bool HEX_Verification() //verifies uint8_t (ASCII) to Hex validity and allocates in appropriated location
{
    339c:	cf 92       	push	r12
    339e:	df 92       	push	r13
    33a0:	ef 92       	push	r14
    33a2:	ff 92       	push	r15
    33a4:	0f 93       	push	r16
	//parse the data into usable hex values
	for (int i = 0; i <= FLASH_NAND_ADDRESS_MAX; i++)
    33a6:	80 e0       	ldi	r24, 0x00	; 0
    33a8:	90 e0       	ldi	r25, 0x00	; 0
    33aa:	45 c0       	rjmp	.+138    	; 0x3436 <HEX_Verification+0x9a>
	{
		if (CommandBuffer[i] >= '0' && CommandBuffer[i] <= '9')
    33ac:	fc 01       	movw	r30, r24
    33ae:	e0 50       	subi	r30, 0x00	; 0
    33b0:	fe 4f       	sbci	r31, 0xFE	; 254
    33b2:	20 81       	ld	r18, Z
    33b4:	30 ed       	ldi	r19, 0xD0	; 208
    33b6:	32 0f       	add	r19, r18
    33b8:	3a 30       	cpi	r19, 0x0A	; 10
    33ba:	28 f4       	brcc	.+10     	; 0x33c6 <HEX_Verification+0x2a>
		{
			CommandBuffer[i] = CommandBuffer[i] - '0';
    33bc:	fc 01       	movw	r30, r24
    33be:	e0 50       	subi	r30, 0x00	; 0
    33c0:	fe 4f       	sbci	r31, 0xFE	; 254
    33c2:	30 83       	st	Z, r19
    33c4:	37 c0       	rjmp	.+110    	; 0x3434 <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] >= 'A' && CommandBuffer[i] <= 'F')
    33c6:	3f eb       	ldi	r19, 0xBF	; 191
    33c8:	32 0f       	add	r19, r18
    33ca:	36 30       	cpi	r19, 0x06	; 6
    33cc:	30 f4       	brcc	.+12     	; 0x33da <HEX_Verification+0x3e>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'A' + 10;
    33ce:	fc 01       	movw	r30, r24
    33d0:	e0 50       	subi	r30, 0x00	; 0
    33d2:	fe 4f       	sbci	r31, 0xFE	; 254
    33d4:	27 53       	subi	r18, 0x37	; 55
    33d6:	20 83       	st	Z, r18
    33d8:	2d c0       	rjmp	.+90     	; 0x3434 <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] >= 'a' && CommandBuffer[i] <= 'f')
    33da:	3f e9       	ldi	r19, 0x9F	; 159
    33dc:	32 0f       	add	r19, r18
    33de:	36 30       	cpi	r19, 0x06	; 6
    33e0:	30 f4       	brcc	.+12     	; 0x33ee <HEX_Verification+0x52>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'a' + 10;
    33e2:	fc 01       	movw	r30, r24
    33e4:	e0 50       	subi	r30, 0x00	; 0
    33e6:	fe 4f       	sbci	r31, 0xFE	; 254
    33e8:	27 55       	subi	r18, 0x57	; 87
    33ea:	20 83       	st	Z, r18
    33ec:	23 c0       	rjmp	.+70     	; 0x3434 <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] == '\r' || CommandBuffer[i] == '\n' || CommandBuffer[i] == '\0')
    33ee:	2d 30       	cpi	r18, 0x0D	; 13
    33f0:	41 f1       	breq	.+80     	; 0x3442 <HEX_Verification+0xa6>
    33f2:	2a 30       	cpi	r18, 0x0A	; 10
    33f4:	41 f1       	breq	.+80     	; 0x3446 <HEX_Verification+0xaa>
    33f6:	22 23       	and	r18, r18
    33f8:	41 f1       	breq	.+80     	; 0x344a <HEX_Verification+0xae>
		{
			break;
		}
		else
		{
			USART_Data("Wrong Input \nMake sure input is HEX valid [0 - F] \n");
    33fa:	6a e7       	ldi	r22, 0x7A	; 122
    33fc:	71 e0       	ldi	r23, 0x01	; 1
    33fe:	80 e0       	ldi	r24, 0x00	; 0
    3400:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
			Print_To_User(1, 0, "Here is what was inputted: 0x%02X \n", CommandBuffer, ARR_DAT.random_data);
    3404:	80 e0       	ldi	r24, 0x00	; 0
    3406:	92 e0       	ldi	r25, 0x02	; 2
    3408:	7c 01       	movw	r14, r24
    340a:	20 e8       	ldi	r18, 0x80	; 128
    340c:	02 2f       	mov	r16, r18
    340e:	0f 2e       	mov	r0, r31
    3410:	fa e0       	ldi	r31, 0x0A	; 10
    3412:	cf 2e       	mov	r12, r31
    3414:	f3 e0       	ldi	r31, 0x03	; 3
    3416:	df 2e       	mov	r13, r31
    3418:	f0 2d       	mov	r31, r0
    341a:	2e ea       	ldi	r18, 0xAE	; 174
    341c:	31 e0       	ldi	r19, 0x01	; 1
    341e:	40 e0       	ldi	r20, 0x00	; 0
    3420:	60 e0       	ldi	r22, 0x00	; 0
    3422:	70 e0       	ldi	r23, 0x00	; 0
    3424:	81 e0       	ldi	r24, 0x01	; 1
    3426:	90 e0       	ldi	r25, 0x00	; 0
    3428:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <Print_To_User>
			CLEAR_ARR();
    342c:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
			return false; //return false, indicating failed test
    3430:	80 e0       	ldi	r24, 0x00	; 0
    3432:	0c c0       	rjmp	.+24     	; 0x344c <HEX_Verification+0xb0>
}

bool HEX_Verification() //verifies uint8_t (ASCII) to Hex validity and allocates in appropriated location
{
	//parse the data into usable hex values
	for (int i = 0; i <= FLASH_NAND_ADDRESS_MAX; i++)
    3434:	01 96       	adiw	r24, 0x01	; 1
    3436:	86 30       	cpi	r24, 0x06	; 6
    3438:	91 05       	cpc	r25, r1
    343a:	0c f4       	brge	.+2      	; 0x343e <HEX_Verification+0xa2>
    343c:	b7 cf       	rjmp	.-146    	; 0x33ac <HEX_Verification+0x10>
			Print_To_User(1, 0, "Here is what was inputted: 0x%02X \n", CommandBuffer, ARR_DAT.random_data);
			CLEAR_ARR();
			return false; //return false, indicating failed test
		}
	}
	return true; //return true, indicating passed test
    343e:	81 e0       	ldi	r24, 0x01	; 1
    3440:	05 c0       	rjmp	.+10     	; 0x344c <HEX_Verification+0xb0>
    3442:	81 e0       	ldi	r24, 0x01	; 1
    3444:	03 c0       	rjmp	.+6      	; 0x344c <HEX_Verification+0xb0>
    3446:	81 e0       	ldi	r24, 0x01	; 1
    3448:	01 c0       	rjmp	.+2      	; 0x344c <HEX_Verification+0xb0>
    344a:	81 e0       	ldi	r24, 0x01	; 1
	//Print_To_User(6, 0, "Parsed nibble: 0x%02X\n", CommandBuffer, status_feature); //troubleshooting, verifies if ASCII is converted to hex values
}
    344c:	0f 91       	pop	r16
    344e:	ff 90       	pop	r15
    3450:	ef 90       	pop	r14
    3452:	df 90       	pop	r13
    3454:	cf 90       	pop	r12
    3456:	08 95       	ret

Disassembly of section .text.ExecuteCommand:

00001c1e <ExecuteCommand>:
		Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "0x%02X \n", Byte_Address, ARR_DAT.random_data);	
	}
}

void ExecuteCommand(const uint8_t *str) //Execute Command Line function
{
    1c1e:	6f 92       	push	r6
    1c20:	7f 92       	push	r7
    1c22:	8f 92       	push	r8
    1c24:	cf 92       	push	r12
    1c26:	df 92       	push	r13
    1c28:	ef 92       	push	r14
    1c2a:	ff 92       	push	r15
    1c2c:	0f 93       	push	r16
    1c2e:	1f 93       	push	r17
    1c30:	cf 93       	push	r28
    1c32:	df 93       	push	r29
    1c34:	6b 01       	movw	r12, r22
    1c36:	e8 2e       	mov	r14, r24
	if (strcmp(str, "Flash ID") == 0) //Flash ID Command
    1c38:	22 ed       	ldi	r18, 0xD2	; 210
    1c3a:	31 e0       	ldi	r19, 0x01	; 1
    1c3c:	40 e0       	ldi	r20, 0x00	; 0
    1c3e:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1c42:	89 2b       	or	r24, r25
    1c44:	b9 f4       	brne	.+46     	; 0x1c74 <ExecuteCommand+0x56>
	{
		CLEAR_ARR();
    1c46:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
		d = 1;
    1c4a:	c1 e0       	ldi	r28, 0x01	; 1
    1c4c:	d0 e0       	ldi	r29, 0x00	; 0
    1c4e:	d0 93 02 03 	sts	0x0302, r29	; 0x800302 <d+0x1>
    1c52:	c0 93 01 03 	sts	0x0301, r28	; 0x800301 <d>
		FLASH_ID(); //reads Device ID #1
    1c56:	0e 94 1e 1d 	call	0x3a3c	; 0x3a3c <FLASH_ID>
		d = 2;
    1c5a:	82 e0       	ldi	r24, 0x02	; 2
    1c5c:	90 e0       	ldi	r25, 0x00	; 0
    1c5e:	90 93 02 03 	sts	0x0302, r25	; 0x800302 <d+0x1>
    1c62:	80 93 01 03 	sts	0x0301, r24	; 0x800301 <d>
		FLASH_ID(); //reads Device ID #2
    1c66:	0e 94 1e 1d 	call	0x3a3c	; 0x3a3c <FLASH_ID>
		d = 1;
    1c6a:	d0 93 02 03 	sts	0x0302, r29	; 0x800302 <d+0x1>
    1c6e:	c0 93 01 03 	sts	0x0301, r28	; 0x800301 <d>
    1c72:	8b c2       	rjmp	.+1302   	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
	}
	
	else if (strcmp(str, "NAND Address") == 0) //Tells user what is Column and Block/Page Addresses
    1c74:	2b ed       	ldi	r18, 0xDB	; 219
    1c76:	31 e0       	ldi	r19, 0x01	; 1
    1c78:	40 e0       	ldi	r20, 0x00	; 0
    1c7a:	8e 2d       	mov	r24, r14
    1c7c:	b6 01       	movw	r22, r12
    1c7e:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1c82:	89 2b       	or	r24, r25
    1c84:	c9 f5       	brne	.+114    	; 0x1cf8 <ExecuteCommand+0xda>
	{
		CLEAR_ARR();
    1c86:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
		
		USART_Data("1) Read \n");
    1c8a:	68 ee       	ldi	r22, 0xE8	; 232
    1c8c:	71 e0       	ldi	r23, 0x01	; 1
    1c8e:	80 e0       	ldi	r24, 0x00	; 0
    1c90:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		USART_Data("2) Write \n");
    1c94:	62 ef       	ldi	r22, 0xF2	; 242
    1c96:	71 e0       	ldi	r23, 0x01	; 1
    1c98:	80 e0       	ldi	r24, 0x00	; 0
    1c9a:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		
		UserInput(false);
    1c9e:	80 e0       	ldi	r24, 0x00	; 0
    1ca0:	0e 94 6f 19 	call	0x32de	; 0x32de <UserInput>
		
		if (strcmp(CommandBuffer, "Read") == 0)
    1ca4:	80 e0       	ldi	r24, 0x00	; 0
    1ca6:	92 e0       	ldi	r25, 0x02	; 2
    1ca8:	6c 01       	movw	r12, r24
    1caa:	20 e8       	ldi	r18, 0x80	; 128
    1cac:	e2 2e       	mov	r14, r18
    1cae:	2d ef       	ldi	r18, 0xFD	; 253
    1cb0:	31 e0       	ldi	r19, 0x01	; 1
    1cb2:	40 e0       	ldi	r20, 0x00	; 0
    1cb4:	8e 2d       	mov	r24, r14
    1cb6:	b6 01       	movw	r22, r12
    1cb8:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1cbc:	89 2b       	or	r24, r25
    1cbe:	49 f4       	brne	.+18     	; 0x1cd2 <ExecuteCommand+0xb4>
		{
			NAND_Address_Checker(false); //read current NAND addresses
    1cc0:	80 e0       	ldi	r24, 0x00	; 0
    1cc2:	0e 94 d1 1c 	call	0x39a2	; 0x39a2 <NAND_Address_Checker>
			ExecuteCommand("NAND Addresses");
    1cc6:	62 e0       	ldi	r22, 0x02	; 2
    1cc8:	72 e0       	ldi	r23, 0x02	; 2
    1cca:	80 e0       	ldi	r24, 0x00	; 0
    1ccc:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    1cd0:	5c c2       	rjmp	.+1208   	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
		}
		else if (strcmp(CommandBuffer, "Write") == 0)
    1cd2:	21 e1       	ldi	r18, 0x11	; 17
    1cd4:	32 e0       	ldi	r19, 0x02	; 2
    1cd6:	40 e0       	ldi	r20, 0x00	; 0
    1cd8:	8e 2d       	mov	r24, r14
    1cda:	b6 01       	movw	r22, r12
    1cdc:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1ce0:	89 2b       	or	r24, r25
    1ce2:	09 f0       	breq	.+2      	; 0x1ce6 <ExecuteCommand+0xc8>
    1ce4:	52 c2       	rjmp	.+1188   	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
		{
			NAND_Address_Checker(true); //write new NAND addresses
    1ce6:	81 e0       	ldi	r24, 0x01	; 1
    1ce8:	0e 94 d1 1c 	call	0x39a2	; 0x39a2 <NAND_Address_Checker>
			ExecuteCommand("NAND Addresses");
    1cec:	62 e0       	ldi	r22, 0x02	; 2
    1cee:	72 e0       	ldi	r23, 0x02	; 2
    1cf0:	80 e0       	ldi	r24, 0x00	; 0
    1cf2:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    1cf6:	49 c2       	rjmp	.+1170   	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
		}
	}
	
	else if (strcmp(str, "Parameter Page") == 0) //Basic Read Test Command
    1cf8:	27 e1       	ldi	r18, 0x17	; 23
    1cfa:	32 e0       	ldi	r19, 0x02	; 2
    1cfc:	40 e0       	ldi	r20, 0x00	; 0
    1cfe:	8e 2d       	mov	r24, r14
    1d00:	b6 01       	movw	r22, r12
    1d02:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1d06:	89 2b       	or	r24, r25
    1d08:	99 f5       	brne	.+102    	; 0x1d70 <ExecuteCommand+0x152>
	{
		CLEAR_ARR();
    1d0a:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
		s = 1; //sets main array address to the correct place
    1d0e:	81 e0       	ldi	r24, 0x01	; 1
    1d10:	90 e0       	ldi	r25, 0x00	; 0
    1d12:	90 93 04 03 	sts	0x0304, r25	; 0x800304 <s+0x1>
    1d16:	80 93 03 03 	sts	0x0303, r24	; 0x800303 <s>
		FLASH_Para_Pg();
    1d1a:	0e 94 4d 1f 	call	0x3e9a	; 0x3e9a <FLASH_Para_Pg>
		
		//reading data from Data array
		//Print_To_User(PARAMETER_PAGE_SIZE, 0, "%i->Data Received: 0x%02X \n", data, status_feature);
		
		for (int i = 0; i < sizeof(ARR_DAT.data); i++)	//PARAMETER_PAGE_SIZE; i++) //address is incremented automatically after each byte is shifted out
    1d1e:	c0 e0       	ldi	r28, 0x00	; 0
    1d20:	d0 e0       	ldi	r29, 0x00	; 0
    1d22:	21 c0       	rjmp	.+66     	; 0x1d66 <ExecuteCommand+0x148>
		{
			//sprintf(ARR_DAT.random_data, "%i->Data Received: 0x%02X \n", i, ARR_DAT.data[i]); //hex data to string
			//USART_Data(ARR_DAT.random_data);
			sprintf(CommandBuffer, "%i->Data Received: 0x%02X \n", i, ARR_DAT.data[i]); //hex data to string
    1d24:	fe 01       	movw	r30, r28
    1d26:	e6 5f       	subi	r30, 0xF6	; 246
    1d28:	fc 4f       	sbci	r31, 0xFC	; 252
    1d2a:	80 81       	ld	r24, Z
    1d2c:	1f 92       	push	r1
    1d2e:	8f 93       	push	r24
    1d30:	df 93       	push	r29
    1d32:	cf 93       	push	r28
    1d34:	86 e2       	ldi	r24, 0x26	; 38
    1d36:	92 e0       	ldi	r25, 0x02	; 2
    1d38:	a0 e0       	ldi	r26, 0x00	; 0
    1d3a:	af 93       	push	r26
    1d3c:	9f 93       	push	r25
    1d3e:	8f 93       	push	r24
    1d40:	00 e0       	ldi	r16, 0x00	; 0
    1d42:	12 e0       	ldi	r17, 0x02	; 2
    1d44:	1f 93       	push	r17
    1d46:	0f 93       	push	r16
    1d48:	0e 94 55 23 	call	0x46aa	; 0x46aa <_sprintf_cdnopuxX>
			USART_Data(CommandBuffer);
    1d4c:	b8 01       	movw	r22, r16
    1d4e:	80 e8       	ldi	r24, 0x80	; 128
    1d50:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		FLASH_Para_Pg();
		
		//reading data from Data array
		//Print_To_User(PARAMETER_PAGE_SIZE, 0, "%i->Data Received: 0x%02X \n", data, status_feature);
		
		for (int i = 0; i < sizeof(ARR_DAT.data); i++)	//PARAMETER_PAGE_SIZE; i++) //address is incremented automatically after each byte is shifted out
    1d54:	21 96       	adiw	r28, 0x01	; 1
    1d56:	8d b7       	in	r24, 0x3d	; 61
    1d58:	9e b7       	in	r25, 0x3e	; 62
    1d5a:	09 96       	adiw	r24, 0x09	; 9
    1d5c:	0f b6       	in	r0, 0x3f	; 63
    1d5e:	f8 94       	cli
    1d60:	9e bf       	out	0x3e, r25	; 62
    1d62:	0f be       	out	0x3f, r0	; 63
    1d64:	8d bf       	out	0x3d, r24	; 61
    1d66:	cf 3f       	cpi	r28, 0xFF	; 255
    1d68:	d1 05       	cpc	r29, r1
    1d6a:	e1 f2       	breq	.-72     	; 0x1d24 <ExecuteCommand+0x106>
    1d6c:	d8 f2       	brcs	.-74     	; 0x1d24 <ExecuteCommand+0x106>
    1d6e:	0d c2       	rjmp	.+1050   	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
			sprintf(CommandBuffer, "%i->Data Received: 0x%02X \n", i, ARR_DAT.data[i]); //hex data to string
			USART_Data(CommandBuffer);
		}	
	}
	
	else if (strcmp(str, "Feature Registers") == 0) //leads user to the Feature registers of the device
    1d70:	22 e4       	ldi	r18, 0x42	; 66
    1d72:	32 e0       	ldi	r19, 0x02	; 2
    1d74:	40 e0       	ldi	r20, 0x00	; 0
    1d76:	8e 2d       	mov	r24, r14
    1d78:	b6 01       	movw	r22, r12
    1d7a:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1d7e:	89 2b       	or	r24, r25
    1d80:	09 f0       	breq	.+2      	; 0x1d84 <ExecuteCommand+0x166>
    1d82:	c9 c0       	rjmp	.+402    	; 0x1f16 <ExecuteCommand+0x2f8>
	{
		CLEAR_ARR();
    1d84:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
		
		USART_Data("1) Block Lock \n");
    1d88:	64 e5       	ldi	r22, 0x54	; 84
    1d8a:	72 e0       	ldi	r23, 0x02	; 2
    1d8c:	80 e0       	ldi	r24, 0x00	; 0
    1d8e:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		USART_Data("2) Configuration \n");
    1d92:	64 e6       	ldi	r22, 0x64	; 100
    1d94:	72 e0       	ldi	r23, 0x02	; 2
    1d96:	80 e0       	ldi	r24, 0x00	; 0
    1d98:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		USART_Data("3) Status \n");
    1d9c:	67 e7       	ldi	r22, 0x77	; 119
    1d9e:	72 e0       	ldi	r23, 0x02	; 2
    1da0:	80 e0       	ldi	r24, 0x00	; 0
    1da2:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		USART_Data("4) Die Select \n");
    1da6:	63 e8       	ldi	r22, 0x83	; 131
    1da8:	72 e0       	ldi	r23, 0x02	; 2
    1daa:	80 e0       	ldi	r24, 0x00	; 0
    1dac:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		
		UserInput(false);
    1db0:	80 e0       	ldi	r24, 0x00	; 0
    1db2:	0e 94 6f 19 	call	0x32de	; 0x32de <UserInput>
		
		if (strcmp(CommandBuffer, "Block Lock") == 0) //goes to Block Lock Register
    1db6:	80 e0       	ldi	r24, 0x00	; 0
    1db8:	92 e0       	ldi	r25, 0x02	; 2
    1dba:	6c 01       	movw	r12, r24
    1dbc:	20 e8       	ldi	r18, 0x80	; 128
    1dbe:	e2 2e       	mov	r14, r18
    1dc0:	23 e9       	ldi	r18, 0x93	; 147
    1dc2:	32 e0       	ldi	r19, 0x02	; 2
    1dc4:	40 e0       	ldi	r20, 0x00	; 0
    1dc6:	8e 2d       	mov	r24, r14
    1dc8:	b6 01       	movw	r22, r12
    1dca:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1dce:	89 2b       	or	r24, r25
    1dd0:	09 f0       	breq	.+2      	; 0x1dd4 <ExecuteCommand+0x1b6>
    1dd2:	67 c0       	rjmp	.+206    	; 0x1ea2 <ExecuteCommand+0x284>
		{
			CLEAR_ARR();
    1dd4:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
			
			USART_Data("1) Lock \n");
    1dd8:	6e e9       	ldi	r22, 0x9E	; 158
    1dda:	72 e0       	ldi	r23, 0x02	; 2
    1ddc:	80 e0       	ldi	r24, 0x00	; 0
    1dde:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
			USART_Data("2) Unlock \n");
    1de2:	68 ea       	ldi	r22, 0xA8	; 168
    1de4:	72 e0       	ldi	r23, 0x02	; 2
    1de6:	80 e0       	ldi	r24, 0x00	; 0
    1de8:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
			USART_Data("3) Read \n");
    1dec:	64 eb       	ldi	r22, 0xB4	; 180
    1dee:	72 e0       	ldi	r23, 0x02	; 2
    1df0:	80 e0       	ldi	r24, 0x00	; 0
    1df2:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
			USART_Data("4) Configure \n");
    1df6:	6e eb       	ldi	r22, 0xBE	; 190
    1df8:	72 e0       	ldi	r23, 0x02	; 2
    1dfa:	80 e0       	ldi	r24, 0x00	; 0
    1dfc:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
			
			UserInput(false); //User Input is added into an array, which will be written to memory
    1e00:	80 e0       	ldi	r24, 0x00	; 0
    1e02:	0e 94 6f 19 	call	0x32de	; 0x32de <UserInput>
			
			if (strcmp(CommandBuffer, "Lock") == 0) //Locks Flash Device
    1e06:	2d ec       	ldi	r18, 0xCD	; 205
    1e08:	32 e0       	ldi	r19, 0x02	; 2
    1e0a:	40 e0       	ldi	r20, 0x00	; 0
    1e0c:	8e 2d       	mov	r24, r14
    1e0e:	b6 01       	movw	r22, r12
    1e10:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1e14:	89 2b       	or	r24, r25
    1e16:	49 f4       	brne	.+18     	; 0x1e2a <ExecuteCommand+0x20c>
			{
				FLASH_Block_Lock_Setter(true);
    1e18:	81 e0       	ldi	r24, 0x01	; 1
    1e1a:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <FLASH_Block_Lock_Setter>
				ExecuteCommand("Feature Registers");
    1e1e:	62 e4       	ldi	r22, 0x42	; 66
    1e20:	72 e0       	ldi	r23, 0x02	; 2
    1e22:	80 e0       	ldi	r24, 0x00	; 0
    1e24:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    1e28:	b0 c1       	rjmp	.+864    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
			}
			else if (strcmp(CommandBuffer, "Unlock") == 0) //Unlocks Flash Device
    1e2a:	22 ed       	ldi	r18, 0xD2	; 210
    1e2c:	32 e0       	ldi	r19, 0x02	; 2
    1e2e:	40 e0       	ldi	r20, 0x00	; 0
    1e30:	8e 2d       	mov	r24, r14
    1e32:	b6 01       	movw	r22, r12
    1e34:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1e38:	89 2b       	or	r24, r25
    1e3a:	49 f4       	brne	.+18     	; 0x1e4e <ExecuteCommand+0x230>
			{
				FLASH_Block_Lock_Setter(false);
    1e3c:	80 e0       	ldi	r24, 0x00	; 0
    1e3e:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <FLASH_Block_Lock_Setter>
				ExecuteCommand("Feature Registers");
    1e42:	62 e4       	ldi	r22, 0x42	; 66
    1e44:	72 e0       	ldi	r23, 0x02	; 2
    1e46:	80 e0       	ldi	r24, 0x00	; 0
    1e48:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    1e4c:	9e c1       	rjmp	.+828    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
			}
			else if (strcmp(CommandBuffer, "Read") == 0) //Read Block Lock Register
    1e4e:	2d ef       	ldi	r18, 0xFD	; 253
    1e50:	31 e0       	ldi	r19, 0x01	; 1
    1e52:	40 e0       	ldi	r20, 0x00	; 0
    1e54:	8e 2d       	mov	r24, r14
    1e56:	b6 01       	movw	r22, r12
    1e58:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1e5c:	89 2b       	or	r24, r25
    1e5e:	49 f4       	brne	.+18     	; 0x1e72 <ExecuteCommand+0x254>
			{
				FLASH_Block_Lock(false);
    1e60:	80 e0       	ldi	r24, 0x00	; 0
    1e62:	0e 94 2c 1a 	call	0x3458	; 0x3458 <FLASH_Block_Lock>
				ExecuteCommand("Feature Registers");
    1e66:	62 e4       	ldi	r22, 0x42	; 66
    1e68:	72 e0       	ldi	r23, 0x02	; 2
    1e6a:	80 e0       	ldi	r24, 0x00	; 0
    1e6c:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    1e70:	8c c1       	rjmp	.+792    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
			}
			else if (strcmp(CommandBuffer, "Configure") == 0) //Configure Block Lock Register
    1e72:	29 ed       	ldi	r18, 0xD9	; 217
    1e74:	32 e0       	ldi	r19, 0x02	; 2
    1e76:	40 e0       	ldi	r20, 0x00	; 0
    1e78:	8e 2d       	mov	r24, r14
    1e7a:	b6 01       	movw	r22, r12
    1e7c:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1e80:	89 2b       	or	r24, r25
    1e82:	49 f4       	brne	.+18     	; 0x1e96 <ExecuteCommand+0x278>
			{
				FLASH_Block_Lock(true);
    1e84:	81 e0       	ldi	r24, 0x01	; 1
    1e86:	0e 94 2c 1a 	call	0x3458	; 0x3458 <FLASH_Block_Lock>
				ExecuteCommand("Feature Registers");
    1e8a:	62 e4       	ldi	r22, 0x42	; 66
    1e8c:	72 e0       	ldi	r23, 0x02	; 2
    1e8e:	80 e0       	ldi	r24, 0x00	; 0
    1e90:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    1e94:	7a c1       	rjmp	.+756    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
			}
			else 
			{
				ExecuteCommand("Feature Registers");
    1e96:	62 e4       	ldi	r22, 0x42	; 66
    1e98:	72 e0       	ldi	r23, 0x02	; 2
    1e9a:	80 e0       	ldi	r24, 0x00	; 0
    1e9c:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    1ea0:	74 c1       	rjmp	.+744    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
			}
		}
		
		else if (strcmp(CommandBuffer, "Configuration") == 0) //goes to the Configuration Register
    1ea2:	23 ee       	ldi	r18, 0xE3	; 227
    1ea4:	32 e0       	ldi	r19, 0x02	; 2
    1ea6:	40 e0       	ldi	r20, 0x00	; 0
    1ea8:	8e 2d       	mov	r24, r14
    1eaa:	b6 01       	movw	r22, r12
    1eac:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1eb0:	89 2b       	or	r24, r25
    1eb2:	51 f4       	brne	.+20     	; 0x1ec8 <ExecuteCommand+0x2aa>
		{
			CLEAR_ARR();
    1eb4:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
			FLASH_Configuration(); //get Configuration Register Data
    1eb8:	0e 94 c9 1e 	call	0x3d92	; 0x3d92 <FLASH_Configuration>
			ExecuteCommand("Feature Registers");
    1ebc:	62 e4       	ldi	r22, 0x42	; 66
    1ebe:	72 e0       	ldi	r23, 0x02	; 2
    1ec0:	80 e0       	ldi	r24, 0x00	; 0
    1ec2:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    1ec6:	61 c1       	rjmp	.+706    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
		}
		
		else if (strcmp(CommandBuffer, "Status") == 0) //goes to the Status Register
    1ec8:	21 ef       	ldi	r18, 0xF1	; 241
    1eca:	32 e0       	ldi	r19, 0x02	; 2
    1ecc:	40 e0       	ldi	r20, 0x00	; 0
    1ece:	8e 2d       	mov	r24, r14
    1ed0:	b6 01       	movw	r22, r12
    1ed2:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1ed6:	89 2b       	or	r24, r25
    1ed8:	51 f4       	brne	.+20     	; 0x1eee <ExecuteCommand+0x2d0>
		{
			CLEAR_ARR();
    1eda:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
			FLASH_Status(); //reads status register
    1ede:	0e 94 fb 1d 	call	0x3bf6	; 0x3bf6 <FLASH_Status>
			
			ExecuteCommand("Feature Registers");
    1ee2:	62 e4       	ldi	r22, 0x42	; 66
    1ee4:	72 e0       	ldi	r23, 0x02	; 2
    1ee6:	80 e0       	ldi	r24, 0x00	; 0
    1ee8:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    1eec:	4e c1       	rjmp	.+668    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
		}
		
		else if (strcmp(CommandBuffer, "Die Select") == 0) //goes to the Die Register
    1eee:	28 ef       	ldi	r18, 0xF8	; 248
    1ef0:	32 e0       	ldi	r19, 0x02	; 2
    1ef2:	40 e0       	ldi	r20, 0x00	; 0
    1ef4:	8e 2d       	mov	r24, r14
    1ef6:	b6 01       	movw	r22, r12
    1ef8:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1efc:	89 2b       	or	r24, r25
    1efe:	09 f0       	breq	.+2      	; 0x1f02 <ExecuteCommand+0x2e4>
    1f00:	44 c1       	rjmp	.+648    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
		{
			CLEAR_ARR();
    1f02:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
			FLASH_Die_Selection(); //at the moment only reads to this
    1f06:	0e 94 87 1e 	call	0x3d0e	; 0x3d0e <FLASH_Die_Selection>
			ExecuteCommand("Feature Registers");
    1f0a:	62 e4       	ldi	r22, 0x42	; 66
    1f0c:	72 e0       	ldi	r23, 0x02	; 2
    1f0e:	80 e0       	ldi	r24, 0x00	; 0
    1f10:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    1f14:	3a c1       	rjmp	.+628    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
		}
	}
	
	else if (strcmp(str, "Test Methods") == 0) //this holds test methods of the device
    1f16:	23 e0       	ldi	r18, 0x03	; 3
    1f18:	33 e0       	ldi	r19, 0x03	; 3
    1f1a:	40 e0       	ldi	r20, 0x00	; 0
    1f1c:	8e 2d       	mov	r24, r14
    1f1e:	b6 01       	movw	r22, r12
    1f20:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1f24:	89 2b       	or	r24, r25
    1f26:	09 f0       	breq	.+2      	; 0x1f2a <ExecuteCommand+0x30c>
    1f28:	04 c1       	rjmp	.+520    	; 0x2132 <__DATA_REGION_LENGTH__+0x132>
	{
		CLEAR_ARR();
    1f2a:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
		
		USART_Data("1) Write Test \n");
    1f2e:	60 e1       	ldi	r22, 0x10	; 16
    1f30:	73 e0       	ldi	r23, 0x03	; 3
    1f32:	80 e0       	ldi	r24, 0x00	; 0
    1f34:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		USART_Data("2) Read Test \n");
    1f38:	60 e2       	ldi	r22, 0x20	; 32
    1f3a:	73 e0       	ldi	r23, 0x03	; 3
    1f3c:	80 e0       	ldi	r24, 0x00	; 0
    1f3e:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		USART_Data("3) Erase Test \n");
    1f42:	6f e2       	ldi	r22, 0x2F	; 47
    1f44:	73 e0       	ldi	r23, 0x03	; 3
    1f46:	80 e0       	ldi	r24, 0x00	; 0
    1f48:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		USART_Data("4) Block Checker \n");
    1f4c:	6f e3       	ldi	r22, 0x3F	; 63
    1f4e:	73 e0       	ldi	r23, 0x03	; 3
    1f50:	80 e0       	ldi	r24, 0x00	; 0
    1f52:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		USART_Data("5) Page Checker \n");
    1f56:	62 e5       	ldi	r22, 0x52	; 82
    1f58:	73 e0       	ldi	r23, 0x03	; 3
    1f5a:	80 e0       	ldi	r24, 0x00	; 0
    1f5c:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		USART_Data("6) NAND Address \n");
    1f60:	64 e6       	ldi	r22, 0x64	; 100
    1f62:	73 e0       	ldi	r23, 0x03	; 3
    1f64:	80 e0       	ldi	r24, 0x00	; 0
    1f66:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		
		UserInput(false);
    1f6a:	80 e0       	ldi	r24, 0x00	; 0
    1f6c:	0e 94 6f 19 	call	0x32de	; 0x32de <UserInput>
		
		if (strcmp(CommandBuffer, "Write Test") == 0) //write to memory test
    1f70:	80 e0       	ldi	r24, 0x00	; 0
    1f72:	92 e0       	ldi	r25, 0x02	; 2
    1f74:	3c 01       	movw	r6, r24
    1f76:	20 e8       	ldi	r18, 0x80	; 128
    1f78:	82 2e       	mov	r8, r18
    1f7a:	26 e7       	ldi	r18, 0x76	; 118
    1f7c:	33 e0       	ldi	r19, 0x03	; 3
    1f7e:	40 e0       	ldi	r20, 0x00	; 0
    1f80:	88 2d       	mov	r24, r8
    1f82:	b3 01       	movw	r22, r6
    1f84:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1f88:	89 2b       	or	r24, r25
    1f8a:	29 f5       	brne	.+74     	; 0x1fd6 <ExecuteCommand+0x3b8>
		{
			s = 0;
    1f8c:	10 92 04 03 	sts	0x0304, r1	; 0x800304 <s+0x1>
    1f90:	10 92 03 03 	sts	0x0303, r1	; 0x800303 <s>
			CLEAR_ARR();
    1f94:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
				
			Print_To_User(FLASH_NAND_ADDRESS_MAX, 0, "Here is our NAND Address: 0x%02X \n", Byte_Address, ARR_DAT.random_data);
    1f98:	85 e0       	ldi	r24, 0x05	; 5
    1f9a:	93 e0       	ldi	r25, 0x03	; 3
    1f9c:	7c 01       	movw	r14, r24
    1f9e:	20 e8       	ldi	r18, 0x80	; 128
    1fa0:	02 2f       	mov	r16, r18
    1fa2:	0f 2e       	mov	r0, r31
    1fa4:	fa e0       	ldi	r31, 0x0A	; 10
    1fa6:	cf 2e       	mov	r12, r31
    1fa8:	f3 e0       	ldi	r31, 0x03	; 3
    1faa:	df 2e       	mov	r13, r31
    1fac:	f0 2d       	mov	r31, r0
    1fae:	21 e8       	ldi	r18, 0x81	; 129
    1fb0:	33 e0       	ldi	r19, 0x03	; 3
    1fb2:	40 e0       	ldi	r20, 0x00	; 0
    1fb4:	60 e0       	ldi	r22, 0x00	; 0
    1fb6:	70 e0       	ldi	r23, 0x00	; 0
    1fb8:	85 e0       	ldi	r24, 0x05	; 5
    1fba:	90 e0       	ldi	r25, 0x00	; 0
    1fbc:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <Print_To_User>
			
			UserInput(false);
    1fc0:	80 e0       	ldi	r24, 0x00	; 0
    1fc2:	0e 94 6f 19 	call	0x32de	; 0x32de <UserInput>
			
			FLASH_Page_Program(); //adds user input into Flash Write Function, to memory...
    1fc6:	0e 94 69 1d 	call	0x3ad2	; 0x3ad2 <FLASH_Page_Program>
			
			ExecuteCommand("Test Methods");
    1fca:	63 e0       	ldi	r22, 0x03	; 3
    1fcc:	73 e0       	ldi	r23, 0x03	; 3
    1fce:	80 e0       	ldi	r24, 0x00	; 0
    1fd0:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    1fd4:	da c0       	rjmp	.+436    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
		}
		
		else if (strcmp(CommandBuffer, "Read Test") == 0) //read from memory test
    1fd6:	24 ea       	ldi	r18, 0xA4	; 164
    1fd8:	33 e0       	ldi	r19, 0x03	; 3
    1fda:	40 e0       	ldi	r20, 0x00	; 0
    1fdc:	88 2d       	mov	r24, r8
    1fde:	b3 01       	movw	r22, r6
    1fe0:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    1fe4:	89 2b       	or	r24, r25
    1fe6:	b1 f4       	brne	.+44     	; 0x2014 <__DATA_REGION_LENGTH__+0x14>
		{
			s = 0; //sets main array to normal operations
    1fe8:	10 92 04 03 	sts	0x0304, r1	; 0x800304 <s+0x1>
    1fec:	10 92 03 03 	sts	0x0303, r1	; 0x800303 <s>
			CLEAR_ARR();
    1ff0:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
			FLASH_Page_Read();
    1ff4:	0e 94 04 21 	call	0x4208	; 0x4208 <FLASH_Page_Read>

			USART_Data(ARR_DAT.data);
    1ff8:	6a e0       	ldi	r22, 0x0A	; 10
    1ffa:	73 e0       	ldi	r23, 0x03	; 3
    1ffc:	80 e8       	ldi	r24, 0x80	; 128
    1ffe:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
			USART_TX_Data('\n');
    2002:	8a e0       	ldi	r24, 0x0A	; 10
    2004:	0e 94 4a 24 	call	0x4894	; 0x4894 <USART_TX_Data>
			
			ExecuteCommand("Test Methods");
    2008:	63 e0       	ldi	r22, 0x03	; 3
    200a:	73 e0       	ldi	r23, 0x03	; 3
    200c:	80 e0       	ldi	r24, 0x00	; 0
    200e:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    2012:	bb c0       	rjmp	.+374    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
		}
		
		else if (strcmp(CommandBuffer, "Erase Test") == 0) //erases by blocks
    2014:	2e ea       	ldi	r18, 0xAE	; 174
    2016:	33 e0       	ldi	r19, 0x03	; 3
    2018:	40 e0       	ldi	r20, 0x00	; 0
    201a:	88 2d       	mov	r24, r8
    201c:	b3 01       	movw	r22, r6
    201e:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    2022:	89 2b       	or	r24, r25
    2024:	71 f4       	brne	.+28     	; 0x2042 <__DATA_REGION_LENGTH__+0x42>
		{
			s = 0; //sets main array address to normal operation
    2026:	10 92 04 03 	sts	0x0304, r1	; 0x800304 <s+0x1>
    202a:	10 92 03 03 	sts	0x0303, r1	; 0x800303 <s>
			CLEAR_ARR();
    202e:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
			FLASH_Block_Erase(); //Erases Flash Block
    2032:	0e 94 6e 21 	call	0x42dc	; 0x42dc <FLASH_Block_Erase>
			
			ExecuteCommand("Test Methods");
    2036:	63 e0       	ldi	r22, 0x03	; 3
    2038:	73 e0       	ldi	r23, 0x03	; 3
    203a:	80 e0       	ldi	r24, 0x00	; 0
    203c:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    2040:	a4 c0       	rjmp	.+328    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
		}
		
		//this might stick as part of the main options, but its mostly meant for debugging bad blocks...
		else if (strcmp(CommandBuffer, "Block Checker") == 0) //verifies availability of the block
    2042:	29 eb       	ldi	r18, 0xB9	; 185
    2044:	33 e0       	ldi	r19, 0x03	; 3
    2046:	40 e0       	ldi	r20, 0x00	; 0
    2048:	88 2d       	mov	r24, r8
    204a:	b3 01       	movw	r22, r6
    204c:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    2050:	89 2b       	or	r24, r25
    2052:	e9 f4       	brne	.+58     	; 0x208e <__DATA_REGION_LENGTH__+0x8e>
		{
			s = 0;
    2054:	10 92 04 03 	sts	0x0304, r1	; 0x800304 <s+0x1>
    2058:	10 92 03 03 	sts	0x0303, r1	; 0x800303 <s>
			CLEAR_ARR();
    205c:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
			FLASH_Page_Read();
    2060:	0e 94 04 21 	call	0x4208	; 0x4208 <FLASH_Page_Read>

			if (ARR_DAT.Device_ID[0] != 0xFF)
    2064:	80 91 0a 03 	lds	r24, 0x030A	; 0x80030a <ARR_DAT>
    2068:	8f 3f       	cpi	r24, 0xFF	; 255
    206a:	31 f0       	breq	.+12     	; 0x2078 <__DATA_REGION_LENGTH__+0x78>
			{
				USART_Data("Block is marked bad\n");
    206c:	67 ec       	ldi	r22, 0xC7	; 199
    206e:	73 e0       	ldi	r23, 0x03	; 3
    2070:	80 e0       	ldi	r24, 0x00	; 0
    2072:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
    2076:	05 c0       	rjmp	.+10     	; 0x2082 <__DATA_REGION_LENGTH__+0x82>
			}
			else
			{
				USART_Data("Block appears clean\n");
    2078:	6c ed       	ldi	r22, 0xDC	; 220
    207a:	73 e0       	ldi	r23, 0x03	; 3
    207c:	80 e0       	ldi	r24, 0x00	; 0
    207e:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
			}
			
			ExecuteCommand("Test Methods");
    2082:	63 e0       	ldi	r22, 0x03	; 3
    2084:	73 e0       	ldi	r23, 0x03	; 3
    2086:	80 e0       	ldi	r24, 0x00	; 0
    2088:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    208c:	7e c0       	rjmp	.+252    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
		}
		
		//meant for debugging bad pages in block...
		else if (strcmp(str, "Page Checker") == 0) //determines if page is good or bad...
    208e:	21 ef       	ldi	r18, 0xF1	; 241
    2090:	33 e0       	ldi	r19, 0x03	; 3
    2092:	40 e0       	ldi	r20, 0x00	; 0
    2094:	8e 2d       	mov	r24, r14
    2096:	b6 01       	movw	r22, r12
    2098:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    209c:	89 2b       	or	r24, r25
    209e:	61 f4       	brne	.+24     	; 0x20b8 <__DATA_REGION_LENGTH__+0xb8>
		{
			s = 0;
    20a0:	10 92 04 03 	sts	0x0304, r1	; 0x800304 <s+0x1>
    20a4:	10 92 03 03 	sts	0x0303, r1	; 0x800303 <s>
			Page_Tester();
    20a8:	0e 94 0f 19 	call	0x321e	; 0x321e <Page_Tester>
			
			ExecuteCommand("Test Methods");
    20ac:	63 e0       	ldi	r22, 0x03	; 3
    20ae:	73 e0       	ldi	r23, 0x03	; 3
    20b0:	80 e0       	ldi	r24, 0x00	; 0
    20b2:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    20b6:	69 c0       	rjmp	.+210    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
		}
		
		else if (strcmp(str, "NAND Address") == 0) //Tells user what is Column and Block/Page Addresses
    20b8:	2b ed       	ldi	r18, 0xDB	; 219
    20ba:	31 e0       	ldi	r19, 0x01	; 1
    20bc:	40 e0       	ldi	r20, 0x00	; 0
    20be:	8e 2d       	mov	r24, r14
    20c0:	b6 01       	movw	r22, r12
    20c2:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    20c6:	89 2b       	or	r24, r25
    20c8:	09 f0       	breq	.+2      	; 0x20cc <__DATA_REGION_LENGTH__+0xcc>
    20ca:	5f c0       	rjmp	.+190    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
		{
			CLEAR_ARR();
    20cc:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
			
			USART_Data("1) Read \n");
    20d0:	68 ee       	ldi	r22, 0xE8	; 232
    20d2:	71 e0       	ldi	r23, 0x01	; 1
    20d4:	80 e0       	ldi	r24, 0x00	; 0
    20d6:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
			USART_Data("2) Write \n");
    20da:	62 ef       	ldi	r22, 0xF2	; 242
    20dc:	71 e0       	ldi	r23, 0x01	; 1
    20de:	80 e0       	ldi	r24, 0x00	; 0
    20e0:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
			
			UserInput(false);
    20e4:	80 e0       	ldi	r24, 0x00	; 0
    20e6:	0e 94 6f 19 	call	0x32de	; 0x32de <UserInput>
			
			if (strcmp(CommandBuffer, "Read") == 0)
    20ea:	2d ef       	ldi	r18, 0xFD	; 253
    20ec:	31 e0       	ldi	r19, 0x01	; 1
    20ee:	40 e0       	ldi	r20, 0x00	; 0
    20f0:	88 2d       	mov	r24, r8
    20f2:	b3 01       	movw	r22, r6
    20f4:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    20f8:	89 2b       	or	r24, r25
    20fa:	49 f4       	brne	.+18     	; 0x210e <__DATA_REGION_LENGTH__+0x10e>
			{
				NAND_Address_Checker(false); //read current NAND addresses
    20fc:	80 e0       	ldi	r24, 0x00	; 0
    20fe:	0e 94 d1 1c 	call	0x39a2	; 0x39a2 <NAND_Address_Checker>
				ExecuteCommand("Test Methods");
    2102:	63 e0       	ldi	r22, 0x03	; 3
    2104:	73 e0       	ldi	r23, 0x03	; 3
    2106:	80 e0       	ldi	r24, 0x00	; 0
    2108:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    210c:	3e c0       	rjmp	.+124    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
			}
			else if (strcmp(CommandBuffer, "Write") == 0)
    210e:	21 e1       	ldi	r18, 0x11	; 17
    2110:	32 e0       	ldi	r19, 0x02	; 2
    2112:	40 e0       	ldi	r20, 0x00	; 0
    2114:	88 2d       	mov	r24, r8
    2116:	b3 01       	movw	r22, r6
    2118:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    211c:	89 2b       	or	r24, r25
    211e:	a9 f5       	brne	.+106    	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
			{
				NAND_Address_Checker(true); //write new NAND addresses
    2120:	81 e0       	ldi	r24, 0x01	; 1
    2122:	0e 94 d1 1c 	call	0x39a2	; 0x39a2 <NAND_Address_Checker>
				ExecuteCommand("Test Methods");
    2126:	63 e0       	ldi	r22, 0x03	; 3
    2128:	73 e0       	ldi	r23, 0x03	; 3
    212a:	80 e0       	ldi	r24, 0x00	; 0
    212c:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
    2130:	2c c0       	rjmp	.+88     	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
			}
		}
	}
	
	else if (strcmp(str, "Reset") == 0) //Basic Read Test Command
    2132:	2e ef       	ldi	r18, 0xFE	; 254
    2134:	33 e0       	ldi	r19, 0x03	; 3
    2136:	40 e0       	ldi	r20, 0x00	; 0
    2138:	8e 2d       	mov	r24, r14
    213a:	b6 01       	movw	r22, r12
    213c:	0e 94 90 21 	call	0x4320	; 0x4320 <strcmp>
    2140:	89 2b       	or	r24, r25
    2142:	29 f4       	brne	.+10     	; 0x214e <__DATA_REGION_LENGTH__+0x14e>
	{
		CLEAR_ARR();
    2144:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
		FLASH_Reset();
    2148:	0e 94 ee 22 	call	0x45dc	; 0x45dc <FLASH_Reset>
    214c:	1e c0       	rjmp	.+60     	; 0x218a <__DATA_REGION_LENGTH__+0x18a>
	}
	
	else
	{
		USART_Data("1) Flash ID \n");
    214e:	64 e0       	ldi	r22, 0x04	; 4
    2150:	74 e0       	ldi	r23, 0x04	; 4
    2152:	80 e0       	ldi	r24, 0x00	; 0
    2154:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		USART_Data("2) NAND Address \n");
    2158:	62 e1       	ldi	r22, 0x12	; 18
    215a:	74 e0       	ldi	r23, 0x04	; 4
    215c:	80 e0       	ldi	r24, 0x00	; 0
    215e:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		USART_Data("3) Parameter Page \n");
    2162:	64 e2       	ldi	r22, 0x24	; 36
    2164:	74 e0       	ldi	r23, 0x04	; 4
    2166:	80 e0       	ldi	r24, 0x00	; 0
    2168:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		USART_Data("4) Feature Registers \n");
    216c:	68 e3       	ldi	r22, 0x38	; 56
    216e:	74 e0       	ldi	r23, 0x04	; 4
    2170:	80 e0       	ldi	r24, 0x00	; 0
    2172:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		USART_Data("5) Test Methods \n");
    2176:	6f e4       	ldi	r22, 0x4F	; 79
    2178:	74 e0       	ldi	r23, 0x04	; 4
    217a:	80 e0       	ldi	r24, 0x00	; 0
    217c:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		USART_Data("6) Reset \n");
    2180:	61 e6       	ldi	r22, 0x61	; 97
    2182:	74 e0       	ldi	r23, 0x04	; 4
    2184:	80 e0       	ldi	r24, 0x00	; 0
    2186:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
	}
}
    218a:	df 91       	pop	r29
    218c:	cf 91       	pop	r28
    218e:	1f 91       	pop	r17
    2190:	0f 91       	pop	r16
    2192:	ff 90       	pop	r15
    2194:	ef 90       	pop	r14
    2196:	df 90       	pop	r13
    2198:	cf 90       	pop	r12
    219a:	8f 90       	pop	r8
    219c:	7f 90       	pop	r7
    219e:	6f 90       	pop	r6
    21a0:	08 95       	ret

Disassembly of section .text.UserInput:

000032de <UserInput>:

int arr_address = 0; //for CommandBuffer array
int input_counter = 0; //to count the number of input characters 

void UserInput(bool command) //asking for user input
{
    32de:	cf 92       	push	r12
    32e0:	df 92       	push	r13
    32e2:	ef 92       	push	r14
    32e4:	cf 93       	push	r28
    32e6:	c8 2f       	mov	r28, r24
	USART_Data("->User Input:\n"); //asking for User Input
    32e8:	6c e6       	ldi	r22, 0x6C	; 108
    32ea:	74 e0       	ldi	r23, 0x04	; 4
    32ec:	80 e0       	ldi	r24, 0x00	; 0
    32ee:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
	
	input_counter = 0; //reset input counter
    32f2:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <_end+0x1>
    32f6:	10 92 0d 04 	sts	0x040D, r1	; 0x80040d <_end>
	
	c = USART_RX_Data(); //receive user uint8_t data type input
    32fa:	0e 94 51 24 	call	0x48a2	; 0x48a2 <USART_RX_Data>
    32fe:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <c>
	
	while ((c != '\r')) //(c != '\n') &&
    3302:	26 c0       	rjmp	.+76     	; 0x3350 <UserInput+0x72>
	{
		input_counter++; //increment input counter
    3304:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <_end>
    3308:	90 91 0e 04 	lds	r25, 0x040E	; 0x80040e <_end+0x1>
    330c:	01 96       	adiw	r24, 0x01	; 1
    330e:	90 93 0e 04 	sts	0x040E, r25	; 0x80040e <_end+0x1>
    3312:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <_end>
		CommandBuffer[arr_address] = c; //adding uint8_t into array at index, creating a string
    3316:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <arr_address>
    331a:	90 91 10 04 	lds	r25, 0x0410	; 0x800410 <arr_address+0x1>
    331e:	fc 01       	movw	r30, r24
    3320:	e0 50       	subi	r30, 0x00	; 0
    3322:	fe 4f       	sbci	r31, 0xFE	; 254
    3324:	20 83       	st	Z, r18
		if (arr_address >= sizeof(CommandBuffer)) //making this an endless array for command lines
    3326:	8f 3f       	cpi	r24, 0xFF	; 255
    3328:	91 05       	cpc	r25, r1
    332a:	29 f0       	breq	.+10     	; 0x3336 <UserInput+0x58>
    332c:	20 f0       	brcs	.+8      	; 0x3336 <UserInput+0x58>
		{
			arr_address = 0; //resets array at address 0
    332e:	10 92 10 04 	sts	0x0410, r1	; 0x800410 <arr_address+0x1>
    3332:	10 92 0f 04 	sts	0x040F, r1	; 0x80040f <arr_address>
		}
		arr_address++;
    3336:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <arr_address>
    333a:	90 91 10 04 	lds	r25, 0x0410	; 0x800410 <arr_address+0x1>
    333e:	01 96       	adiw	r24, 0x01	; 1
    3340:	90 93 10 04 	sts	0x0410, r25	; 0x800410 <arr_address+0x1>
    3344:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <arr_address>
		c = USART_RX_Data(); //receive user uint8_t data type input
    3348:	0e 94 51 24 	call	0x48a2	; 0x48a2 <USART_RX_Data>
    334c:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <c>
	
	input_counter = 0; //reset input counter
	
	c = USART_RX_Data(); //receive user uint8_t data type input
	
	while ((c != '\r')) //(c != '\n') &&
    3350:	20 91 00 03 	lds	r18, 0x0300	; 0x800300 <c>
    3354:	2d 30       	cpi	r18, 0x0D	; 13
    3356:	b1 f6       	brne	.-84     	; 0x3304 <UserInput+0x26>
		arr_address++;
		c = USART_RX_Data(); //receive user uint8_t data type input
	}
	
	//CommandBuffer[arr_address + 1] = '\r';
	CommandBuffer[arr_address] = '\0'; //adding NULL '\0' to mark end of Command String...; adding carriage return '\r' until I can get NULL to work...
    3358:	e0 91 0f 04 	lds	r30, 0x040F	; 0x80040f <arr_address>
    335c:	f0 91 10 04 	lds	r31, 0x0410	; 0x800410 <arr_address+0x1>
    3360:	e0 50       	subi	r30, 0x00	; 0
    3362:	fe 4f       	sbci	r31, 0xFE	; 254
    3364:	10 82       	st	Z, r1
	arr_address = 0; //resets array at address 0
    3366:	10 92 10 04 	sts	0x0410, r1	; 0x800410 <arr_address+0x1>
    336a:	10 92 0f 04 	sts	0x040F, r1	; 0x80040f <arr_address>
	
	USART_Data(CommandBuffer); //shows what the user wrote on terminal
    336e:	80 e0       	ldi	r24, 0x00	; 0
    3370:	92 e0       	ldi	r25, 0x02	; 2
    3372:	6c 01       	movw	r12, r24
    3374:	20 e8       	ldi	r18, 0x80	; 128
    3376:	e2 2e       	mov	r14, r18
    3378:	8e 2d       	mov	r24, r14
    337a:	b6 01       	movw	r22, r12
    337c:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
	USART_TX_Data('\n');
    3380:	8a e0       	ldi	r24, 0x0A	; 10
    3382:	0e 94 4a 24 	call	0x4894	; 0x4894 <USART_TX_Data>
	
	if (command)
    3386:	cc 23       	and	r28, r28
    3388:	21 f0       	breq	.+8      	; 0x3392 <UserInput+0xb4>
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
    338a:	8e 2d       	mov	r24, r14
    338c:	b6 01       	movw	r22, r12
    338e:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <ExecuteCommand>
}
    3392:	cf 91       	pop	r28
    3394:	ef 90       	pop	r14
    3396:	df 90       	pop	r13
    3398:	cf 90       	pop	r12
    339a:	08 95       	ret

Disassembly of section .text.COLUMN_BLOCK_PAGE_ADDRESSER:

00002712 <COLUMN_BLOCK_PAGE_ADDRESSER>:
		USART_Data(arr_dest);
	}
}

void COLUMN_BLOCK_PAGE_ADDRESSER(bool addr_type) //gets hex number for Column and Block/Page address
{
    2712:	cf 92       	push	r12
    2714:	df 92       	push	r13
    2716:	ef 92       	push	r14
    2718:	ff 92       	push	r15
    271a:	0f 93       	push	r16
    271c:	cf 93       	push	r28
    271e:	c8 2f       	mov	r28, r24
	UserInput(false); //get the hex numbers, false because not command
    2720:	80 e0       	ldi	r24, 0x00	; 0
    2722:	0e 94 6f 19 	call	0x32de	; 0x32de <UserInput>
	
	if (addr_type == false) //false, so address type is Column Address
    2726:	c1 11       	cpse	r28, r1
    2728:	4b c0       	rjmp	.+150    	; 0x27c0 <COLUMN_BLOCK_PAGE_ADDRESSER+0xae>
	{
		if (input_counter != 4) //has to be 4 inputs
    272a:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <_end>
    272e:	90 91 0e 04 	lds	r25, 0x040E	; 0x80040e <_end+0x1>
    2732:	04 97       	sbiw	r24, 0x04	; 4
    2734:	41 f0       	breq	.+16     	; 0x2746 <COLUMN_BLOCK_PAGE_ADDRESSER+0x34>
		{
			USART_Data("Make sure only 4 inputs. \n");
    2736:	6b e7       	ldi	r22, 0x7B	; 123
    2738:	74 e0       	ldi	r23, 0x04	; 4
    273a:	80 e0       	ldi	r24, 0x00	; 0
    273c:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
			UserInput(false);
    2740:	80 e0       	ldi	r24, 0x00	; 0
    2742:	0e 94 6f 19 	call	0x32de	; 0x32de <UserInput>
		}
		
		if (HEX_Verification()) //if true (valid)
    2746:	0e 94 ce 19 	call	0x339c	; 0x339c <HEX_Verification>
    274a:	81 11       	cpse	r24, r1
    274c:	1b c0       	rjmp	.+54     	; 0x2784 <COLUMN_BLOCK_PAGE_ADDRESSER+0x72>
    274e:	34 c0       	rjmp	.+104    	; 0x27b8 <COLUMN_BLOCK_PAGE_ADDRESSER+0xa6>
		{
			for (int i = 0; i < COLUMN_ADDRESS + 1; i+=2)
			{
				Byte_Address[i / 2] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
    2750:	9c 01       	movw	r18, r24
    2752:	99 23       	and	r25, r25
    2754:	14 f4       	brge	.+4      	; 0x275a <COLUMN_BLOCK_PAGE_ADDRESSER+0x48>
    2756:	2f 5f       	subi	r18, 0xFF	; 255
    2758:	3f 4f       	sbci	r19, 0xFF	; 255
    275a:	35 95       	asr	r19
    275c:	27 95       	ror	r18
    275e:	fc 01       	movw	r30, r24
    2760:	e0 50       	subi	r30, 0x00	; 0
    2762:	fe 4f       	sbci	r31, 0xFE	; 254
    2764:	40 81       	ld	r20, Z
    2766:	60 e1       	ldi	r22, 0x10	; 16
    2768:	46 9f       	mul	r20, r22
    276a:	a0 01       	movw	r20, r0
    276c:	11 24       	eor	r1, r1
    276e:	fc 01       	movw	r30, r24
    2770:	ef 5f       	subi	r30, 0xFF	; 255
    2772:	fd 4f       	sbci	r31, 0xFD	; 253
    2774:	50 81       	ld	r21, Z
    2776:	f9 01       	movw	r30, r18
    2778:	eb 5f       	subi	r30, 0xFB	; 251
    277a:	fc 4f       	sbci	r31, 0xFC	; 252
    277c:	45 2b       	or	r20, r21
    277e:	40 83       	st	Z, r20
			UserInput(false);
		}
		
		if (HEX_Verification()) //if true (valid)
		{
			for (int i = 0; i < COLUMN_ADDRESS + 1; i+=2)
    2780:	02 96       	adiw	r24, 0x02	; 2
    2782:	02 c0       	rjmp	.+4      	; 0x2788 <COLUMN_BLOCK_PAGE_ADDRESSER+0x76>
    2784:	80 e0       	ldi	r24, 0x00	; 0
    2786:	90 e0       	ldi	r25, 0x00	; 0
    2788:	83 30       	cpi	r24, 0x03	; 3
    278a:	91 05       	cpc	r25, r1
    278c:	0c f3       	brlt	.-62     	; 0x2750 <COLUMN_BLOCK_PAGE_ADDRESSER+0x3e>
			{
				Byte_Address[i / 2] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
			}
			
			Print_To_User(COLUMN_ADDRESS, 0, "Column Address -> 0x%02X \n", Byte_Address, ARR_DAT.random_data);	
    278e:	85 e0       	ldi	r24, 0x05	; 5
    2790:	93 e0       	ldi	r25, 0x03	; 3
    2792:	7c 01       	movw	r14, r24
    2794:	20 e8       	ldi	r18, 0x80	; 128
    2796:	02 2f       	mov	r16, r18
    2798:	0f 2e       	mov	r0, r31
    279a:	fa e0       	ldi	r31, 0x0A	; 10
    279c:	cf 2e       	mov	r12, r31
    279e:	f3 e0       	ldi	r31, 0x03	; 3
    27a0:	df 2e       	mov	r13, r31
    27a2:	f0 2d       	mov	r31, r0
    27a4:	26 e9       	ldi	r18, 0x96	; 150
    27a6:	34 e0       	ldi	r19, 0x04	; 4
    27a8:	40 e0       	ldi	r20, 0x00	; 0
    27aa:	60 e0       	ldi	r22, 0x00	; 0
    27ac:	70 e0       	ldi	r23, 0x00	; 0
    27ae:	82 e0       	ldi	r24, 0x02	; 2
    27b0:	90 e0       	ldi	r25, 0x00	; 0
    27b2:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <Print_To_User>
    27b6:	4e c0       	rjmp	.+156    	; 0x2854 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
		else
		{
			COLUMN_BLOCK_PAGE_ADDRESSER(addr_type); //call again
    27b8:	8c 2f       	mov	r24, r28
    27ba:	0e 94 89 13 	call	0x2712	; 0x2712 <COLUMN_BLOCK_PAGE_ADDRESSER>
    27be:	4a c0       	rjmp	.+148    	; 0x2854 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
	}
	else //true, so address type is Block/Page Address
	{
		if (input_counter != 6) //has to be 6 inputs
    27c0:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <_end>
    27c4:	90 91 0e 04 	lds	r25, 0x040E	; 0x80040e <_end+0x1>
    27c8:	06 97       	sbiw	r24, 0x06	; 6
    27ca:	41 f0       	breq	.+16     	; 0x27dc <COLUMN_BLOCK_PAGE_ADDRESSER+0xca>
		{
			USART_Data("Make sure only 6 inputs. \n");
    27cc:	61 eb       	ldi	r22, 0xB1	; 177
    27ce:	74 e0       	ldi	r23, 0x04	; 4
    27d0:	80 e0       	ldi	r24, 0x00	; 0
    27d2:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
			UserInput(false);
    27d6:	80 e0       	ldi	r24, 0x00	; 0
    27d8:	0e 94 6f 19 	call	0x32de	; 0x32de <UserInput>
		}
		
		if(HEX_Verification()) //if true (valid)
    27dc:	0e 94 ce 19 	call	0x339c	; 0x339c <HEX_Verification>
    27e0:	81 11       	cpse	r24, r1
    27e2:	1b c0       	rjmp	.+54     	; 0x281a <COLUMN_BLOCK_PAGE_ADDRESSER+0x108>
    27e4:	34 c0       	rjmp	.+104    	; 0x284e <COLUMN_BLOCK_PAGE_ADDRESSER+0x13c>
		{
			for (int i = 0; i < BLOCK_PAGE_ADDRESS + 2; i+=2)
			{
				Byte_Address[COLUMN_ADDRESS + (i / 2)] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
    27e6:	9c 01       	movw	r18, r24
    27e8:	99 23       	and	r25, r25
    27ea:	14 f4       	brge	.+4      	; 0x27f0 <COLUMN_BLOCK_PAGE_ADDRESSER+0xde>
    27ec:	2f 5f       	subi	r18, 0xFF	; 255
    27ee:	3f 4f       	sbci	r19, 0xFF	; 255
    27f0:	35 95       	asr	r19
    27f2:	27 95       	ror	r18
    27f4:	fc 01       	movw	r30, r24
    27f6:	e0 50       	subi	r30, 0x00	; 0
    27f8:	fe 4f       	sbci	r31, 0xFE	; 254
    27fa:	40 81       	ld	r20, Z
    27fc:	60 e1       	ldi	r22, 0x10	; 16
    27fe:	46 9f       	mul	r20, r22
    2800:	a0 01       	movw	r20, r0
    2802:	11 24       	eor	r1, r1
    2804:	fc 01       	movw	r30, r24
    2806:	ef 5f       	subi	r30, 0xFF	; 255
    2808:	fd 4f       	sbci	r31, 0xFD	; 253
    280a:	50 81       	ld	r21, Z
    280c:	f9 01       	movw	r30, r18
    280e:	e9 5f       	subi	r30, 0xF9	; 249
    2810:	fc 4f       	sbci	r31, 0xFC	; 252
    2812:	45 2b       	or	r20, r21
    2814:	40 83       	st	Z, r20
			UserInput(false);
		}
		
		if(HEX_Verification()) //if true (valid)
		{
			for (int i = 0; i < BLOCK_PAGE_ADDRESS + 2; i+=2)
    2816:	02 96       	adiw	r24, 0x02	; 2
    2818:	02 c0       	rjmp	.+4      	; 0x281e <COLUMN_BLOCK_PAGE_ADDRESSER+0x10c>
    281a:	80 e0       	ldi	r24, 0x00	; 0
    281c:	90 e0       	ldi	r25, 0x00	; 0
    281e:	85 30       	cpi	r24, 0x05	; 5
    2820:	91 05       	cpc	r25, r1
    2822:	0c f3       	brlt	.-62     	; 0x27e6 <COLUMN_BLOCK_PAGE_ADDRESSER+0xd4>
			{
				Byte_Address[COLUMN_ADDRESS + (i / 2)] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
			}
			
			Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "Block/Page Address -> 0x%02X \n", Byte_Address, ARR_DAT.random_data);
    2824:	85 e0       	ldi	r24, 0x05	; 5
    2826:	93 e0       	ldi	r25, 0x03	; 3
    2828:	7c 01       	movw	r14, r24
    282a:	20 e8       	ldi	r18, 0x80	; 128
    282c:	02 2f       	mov	r16, r18
    282e:	0f 2e       	mov	r0, r31
    2830:	fa e0       	ldi	r31, 0x0A	; 10
    2832:	cf 2e       	mov	r12, r31
    2834:	f3 e0       	ldi	r31, 0x03	; 3
    2836:	df 2e       	mov	r13, r31
    2838:	f0 2d       	mov	r31, r0
    283a:	2c ec       	ldi	r18, 0xCC	; 204
    283c:	34 e0       	ldi	r19, 0x04	; 4
    283e:	40 e0       	ldi	r20, 0x00	; 0
    2840:	62 e0       	ldi	r22, 0x02	; 2
    2842:	70 e0       	ldi	r23, 0x00	; 0
    2844:	83 e0       	ldi	r24, 0x03	; 3
    2846:	90 e0       	ldi	r25, 0x00	; 0
    2848:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <Print_To_User>
    284c:	03 c0       	rjmp	.+6      	; 0x2854 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
		else
		{
			COLUMN_BLOCK_PAGE_ADDRESSER(addr_type); //call again
    284e:	8c 2f       	mov	r24, r28
    2850:	0e 94 89 13 	call	0x2712	; 0x2712 <COLUMN_BLOCK_PAGE_ADDRESSER>
		}
	}
}
    2854:	cf 91       	pop	r28
    2856:	0f 91       	pop	r16
    2858:	ff 90       	pop	r15
    285a:	ef 90       	pop	r14
    285c:	df 90       	pop	r13
    285e:	cf 90       	pop	r12
    2860:	08 95       	ret

Disassembly of section .text.NAND_Address_Checker:

000039a2 <NAND_Address_Checker>:
	return true; //return true, indicating passed test
	//Print_To_User(6, 0, "Parsed nibble: 0x%02X\n", CommandBuffer, status_feature); //troubleshooting, verifies if ASCII is converted to hex values
}

void NAND_Address_Checker(bool choice) //returns user the Column and Block/Page Addresses
{
    39a2:	6f 92       	push	r6
    39a4:	7f 92       	push	r7
    39a6:	8f 92       	push	r8
    39a8:	cf 92       	push	r12
    39aa:	df 92       	push	r13
    39ac:	ef 92       	push	r14
    39ae:	ff 92       	push	r15
    39b0:	0f 93       	push	r16
	if(choice) //true so write new address
    39b2:	88 23       	and	r24, r24
    39b4:	89 f0       	breq	.+34     	; 0x39d8 <NAND_Address_Checker+0x36>
	{	
		USART_Data("---Column Address--- 2 bytes \n");
    39b6:	6b ee       	ldi	r22, 0xEB	; 235
    39b8:	74 e0       	ldi	r23, 0x04	; 4
    39ba:	80 e0       	ldi	r24, 0x00	; 0
    39bc:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		COLUMN_BLOCK_PAGE_ADDRESSER(false);
    39c0:	80 e0       	ldi	r24, 0x00	; 0
    39c2:	0e 94 89 13 	call	0x2712	; 0x2712 <COLUMN_BLOCK_PAGE_ADDRESSER>

		USART_Data("---Block/Page Address--- 3 bytes \n");
    39c6:	6a e0       	ldi	r22, 0x0A	; 10
    39c8:	75 e0       	ldi	r23, 0x05	; 5
    39ca:	80 e0       	ldi	r24, 0x00	; 0
    39cc:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		COLUMN_BLOCK_PAGE_ADDRESSER(true);
    39d0:	81 e0       	ldi	r24, 0x01	; 1
    39d2:	0e 94 89 13 	call	0x2712	; 0x2712 <COLUMN_BLOCK_PAGE_ADDRESSER>
    39d6:	29 c0       	rjmp	.+82     	; 0x3a2a <NAND_Address_Checker+0x88>
	}
	else //false so read current address
	{
		USART_Data("---Column Address--- 2 bytes \n");
    39d8:	6b ee       	ldi	r22, 0xEB	; 235
    39da:	74 e0       	ldi	r23, 0x04	; 4
    39dc:	80 e0       	ldi	r24, 0x00	; 0
    39de:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		Print_To_User(COLUMN_ADDRESS, 0, "0x%02X \n", Byte_Address, ARR_DAT.random_data);
    39e2:	85 e0       	ldi	r24, 0x05	; 5
    39e4:	93 e0       	ldi	r25, 0x03	; 3
    39e6:	3c 01       	movw	r6, r24
    39e8:	20 e8       	ldi	r18, 0x80	; 128
    39ea:	82 2e       	mov	r8, r18
    39ec:	0f 2e       	mov	r0, r31
    39ee:	fa e0       	ldi	r31, 0x0A	; 10
    39f0:	cf 2e       	mov	r12, r31
    39f2:	f3 e0       	ldi	r31, 0x03	; 3
    39f4:	df 2e       	mov	r13, r31
    39f6:	f0 2d       	mov	r31, r0
    39f8:	08 2d       	mov	r16, r8
    39fa:	73 01       	movw	r14, r6
    39fc:	2d e2       	ldi	r18, 0x2D	; 45
    39fe:	35 e0       	ldi	r19, 0x05	; 5
    3a00:	40 e0       	ldi	r20, 0x00	; 0
    3a02:	60 e0       	ldi	r22, 0x00	; 0
    3a04:	70 e0       	ldi	r23, 0x00	; 0
    3a06:	82 e0       	ldi	r24, 0x02	; 2
    3a08:	90 e0       	ldi	r25, 0x00	; 0
    3a0a:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <Print_To_User>

		USART_Data("---Block/Page Address--- 3 bytes \n");
    3a0e:	6a e0       	ldi	r22, 0x0A	; 10
    3a10:	75 e0       	ldi	r23, 0x05	; 5
    3a12:	80 e0       	ldi	r24, 0x00	; 0
    3a14:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
		Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "0x%02X \n", Byte_Address, ARR_DAT.random_data);	
    3a18:	2d e2       	ldi	r18, 0x2D	; 45
    3a1a:	35 e0       	ldi	r19, 0x05	; 5
    3a1c:	40 e0       	ldi	r20, 0x00	; 0
    3a1e:	62 e0       	ldi	r22, 0x02	; 2
    3a20:	70 e0       	ldi	r23, 0x00	; 0
    3a22:	83 e0       	ldi	r24, 0x03	; 3
    3a24:	90 e0       	ldi	r25, 0x00	; 0
    3a26:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <Print_To_User>
	}
}
    3a2a:	0f 91       	pop	r16
    3a2c:	ff 90       	pop	r15
    3a2e:	ef 90       	pop	r14
    3a30:	df 90       	pop	r13
    3a32:	cf 90       	pop	r12
    3a34:	8f 90       	pop	r8
    3a36:	7f 90       	pop	r7
    3a38:	6f 90       	pop	r6
    3a3a:	08 95       	ret

Disassembly of section .text.CLEAR_ARR:

00004044 <CLEAR_ARR>:
	FLASH_NAND_CS_DISABLE(d);

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    4044:	80 e0       	ldi	r24, 0x00	; 0
    4046:	90 e0       	ldi	r25, 0x00	; 0
    4048:	05 c0       	rjmp	.+10     	; 0x4054 <CLEAR_ARR+0x10>
    404a:	fc 01       	movw	r30, r24
    404c:	e6 5f       	subi	r30, 0xF6	; 246
    404e:	fc 4f       	sbci	r31, 0xFC	; 252
    4050:	10 82       	st	Z, r1
    4052:	01 96       	adiw	r24, 0x01	; 1
    4054:	82 30       	cpi	r24, 0x02	; 2
    4056:	91 05       	cpc	r25, r1
    4058:	c0 f3       	brcs	.-16     	; 0x404a <CLEAR_ARR+0x6>
    405a:	80 e0       	ldi	r24, 0x00	; 0
    405c:	90 e0       	ldi	r25, 0x00	; 0
    405e:	05 c0       	rjmp	.+10     	; 0x406a <CLEAR_ARR+0x26>
    4060:	fc 01       	movw	r30, r24
    4062:	e6 5f       	subi	r30, 0xF6	; 246
    4064:	fc 4f       	sbci	r31, 0xFC	; 252
    4066:	10 82       	st	Z, r1
    4068:	01 96       	adiw	r24, 0x01	; 1
    406a:	8f 3f       	cpi	r24, 0xFF	; 255
    406c:	91 05       	cpc	r25, r1
    406e:	c1 f3       	breq	.-16     	; 0x4060 <CLEAR_ARR+0x1c>
    4070:	b8 f3       	brcs	.-18     	; 0x4060 <CLEAR_ARR+0x1c>
    4072:	80 e0       	ldi	r24, 0x00	; 0
    4074:	90 e0       	ldi	r25, 0x00	; 0
    4076:	05 c0       	rjmp	.+10     	; 0x4082 <CLEAR_ARR+0x3e>
    4078:	fc 01       	movw	r30, r24
    407a:	e0 50       	subi	r30, 0x00	; 0
    407c:	fe 4f       	sbci	r31, 0xFE	; 254
    407e:	10 82       	st	Z, r1
    4080:	01 96       	adiw	r24, 0x01	; 1
    4082:	8f 3f       	cpi	r24, 0xFF	; 255
    4084:	91 05       	cpc	r25, r1
    4086:	c1 f3       	breq	.-16     	; 0x4078 <CLEAR_ARR+0x34>
    4088:	b8 f3       	brcs	.-18     	; 0x4078 <CLEAR_ARR+0x34>
    408a:	80 e0       	ldi	r24, 0x00	; 0
    408c:	90 e0       	ldi	r25, 0x00	; 0
    408e:	05 c0       	rjmp	.+10     	; 0x409a <CLEAR_ARR+0x56>
    4090:	fc 01       	movw	r30, r24
    4092:	e6 5f       	subi	r30, 0xF6	; 246
    4094:	fc 4f       	sbci	r31, 0xFC	; 252
    4096:	10 82       	st	Z, r1
    4098:	01 96       	adiw	r24, 0x01	; 1
    409a:	8f 3f       	cpi	r24, 0xFF	; 255
    409c:	91 05       	cpc	r25, r1
    409e:	c1 f3       	breq	.-16     	; 0x4090 <CLEAR_ARR+0x4c>
    40a0:	b8 f3       	brcs	.-18     	; 0x4090 <CLEAR_ARR+0x4c>
    40a2:	08 95       	ret

Disassembly of section .text.SPI_MASTER_Init:

000046f6 <SPI_MASTER_Init>:

//Master Mode (for ATmega 2560) allows full duplex communication between the ATmega 2560 to Flash NAND Memory chip
void SPI_MASTER_Init() //initializes Serial Peripheral Interference (SPI) operations in Master Mode
{
	//DDR pin assignment, ~CS, MOSI, SCK are outputs (1), and MISO is input (0) (in Master Mode)
	DDRB |= (1 << PB2) | (1 << PB1); //setting MASTER_MOSI (PB2) as output; setting MASTER_SCK (PB1) as output;
    46f6:	84 b1       	in	r24, 0x04	; 4
    46f8:	86 60       	ori	r24, 0x06	; 6
    46fa:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << PB3); //setting MASTER_MISO (PB3) as input;
    46fc:	84 b1       	in	r24, 0x04	; 4
    46fe:	87 7f       	andi	r24, 0xF7	; 247
    4700:	84 b9       	out	0x04, r24	; 4
	
	//MUST set ~SS on the ATmega 2560 in order to get SPI operations working...
	DDRB |= (1 << PB0); //setting ~SS pin (PB0) as output;
    4702:	84 b1       	in	r24, 0x04	; 4
    4704:	81 60       	ori	r24, 0x01	; 1
    4706:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1 << PB0); //setting ~SS pin (PB0) high to "de-select" slave device (not connected to the Flash NAND anyway)
    4708:	85 b1       	in	r24, 0x05	; 5
    470a:	81 60       	ori	r24, 0x01	; 1
    470c:	85 b9       	out	0x05, r24	; 5
	//PORTB &= ~(1 << PB0); //setting ~SS pin (PB0) low to "select" slave device (not connected to the Flash NAND anyway)
	
	SPCR |= (1 << SPE) | (1 << MSTR) | (1 << SPR0); // SPE: enables the SPI; MSTR: sets SPI to Master SPI mode; SPR1 and SPR0: sets the SCK Frequency (divisor of 16);
    470e:	8c b5       	in	r24, 0x2c	; 44
    4710:	81 65       	ori	r24, 0x51	; 81
    4712:	8c bd       	out	0x2c, r24	; 44
	SPCR &= ~(1 << DORD) | ~(1 << CPOL) | ~(1 << CPHA) | ~(1 << SPR1);//DORD, Data order set to MSB transmitted first; SPI Timing Mode is 0, where CPOL and CPHA are both 0
    4714:	8c b5       	in	r24, 0x2c	; 44
    4716:	8c bd       	out	0x2c, r24	; 44
    4718:	08 95       	ret

Disassembly of section .text.FLASH_Write_Enable:

0000460a <FLASH_Write_Enable>:
}

void FLASH_Write_Enable (void) //select Slave device and initializes Write operations onto Flash NAND
{
	FLASH_NAND_CS_ENABLE(d);
    460a:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    460e:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    4612:	0e 94 32 22 	call	0x4464	; 0x4464 <FLASH_NAND_CS_ENABLE>
	
	SPDR = WRITE_ENABLED; //Flash NAND's Write Enable command into SPI Data Register (SPDR)
    4616:	86 e0       	ldi	r24, 0x06	; 6
    4618:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete; waits for SPIF to be logic high
    461a:	0d b4       	in	r0, 0x2d	; 45
    461c:	07 fe       	sbrs	r0, 7
    461e:	fd cf       	rjmp	.-6      	; 0x461a <FLASH_Write_Enable+0x10>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    4620:	8e b5       	in	r24, 0x2e	; 46
    4622:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
	
	FLASH_NAND_CS_DISABLE(d);
    4626:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    462a:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    462e:	0e 94 4f 22 	call	0x449e	; 0x449e <FLASH_NAND_CS_DISABLE>
    4632:	08 95       	ret

Disassembly of section .text.FLASH_ID:

00003a3c <FLASH_ID>:
	FLASH_NAND_CS_DISABLE(d);

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3a3c:	cf 93       	push	r28
    3a3e:	df 93       	push	r29
    3a40:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3a44:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3a48:	0e 94 32 22 	call	0x4464	; 0x4464 <FLASH_NAND_CS_ENABLE>
    3a4c:	8f e9       	ldi	r24, 0x9F	; 159
    3a4e:	8e bd       	out	0x2e, r24	; 46
    3a50:	0d b4       	in	r0, 0x2d	; 45
    3a52:	07 fe       	sbrs	r0, 7
    3a54:	fd cf       	rjmp	.-6      	; 0x3a50 <FLASH_ID+0x14>
    3a56:	8e b5       	in	r24, 0x2e	; 46
    3a58:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3a5c:	1e bc       	out	0x2e, r1	; 46
    3a5e:	0d b4       	in	r0, 0x2d	; 45
    3a60:	07 fe       	sbrs	r0, 7
    3a62:	fd cf       	rjmp	.-6      	; 0x3a5e <FLASH_ID+0x22>
    3a64:	8e b5       	in	r24, 0x2e	; 46
    3a66:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3a6a:	1e bc       	out	0x2e, r1	; 46
    3a6c:	0d b4       	in	r0, 0x2d	; 45
    3a6e:	07 fe       	sbrs	r0, 7
    3a70:	fd cf       	rjmp	.-6      	; 0x3a6c <FLASH_ID+0x30>
    3a72:	8e b5       	in	r24, 0x2e	; 46
    3a74:	80 93 0a 03 	sts	0x030A, r24	; 0x80030a <ARR_DAT>
    3a78:	1e bc       	out	0x2e, r1	; 46
    3a7a:	0d b4       	in	r0, 0x2d	; 45
    3a7c:	07 fe       	sbrs	r0, 7
    3a7e:	fd cf       	rjmp	.-6      	; 0x3a7a <FLASH_ID+0x3e>
    3a80:	8e b5       	in	r24, 0x2e	; 46
    3a82:	ca e0       	ldi	r28, 0x0A	; 10
    3a84:	d3 e0       	ldi	r29, 0x03	; 3
    3a86:	89 83       	std	Y+1, r24	; 0x01
    3a88:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3a8c:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3a90:	0e 94 4f 22 	call	0x449e	; 0x449e <FLASH_NAND_CS_DISABLE>
    3a94:	99 81       	ldd	r25, Y+1	; 0x01
    3a96:	88 81       	ld	r24, Y
    3a98:	1f 92       	push	r1
    3a9a:	9f 93       	push	r25
    3a9c:	1f 92       	push	r1
    3a9e:	8f 93       	push	r24
    3aa0:	86 e3       	ldi	r24, 0x36	; 54
    3aa2:	95 e0       	ldi	r25, 0x05	; 5
    3aa4:	a0 e0       	ldi	r26, 0x00	; 0
    3aa6:	af 93       	push	r26
    3aa8:	9f 93       	push	r25
    3aaa:	8f 93       	push	r24
    3aac:	df 93       	push	r29
    3aae:	cf 93       	push	r28
    3ab0:	0e 94 55 23 	call	0x46aa	; 0x46aa <_sprintf_cdnopuxX>
    3ab4:	be 01       	movw	r22, r28
    3ab6:	80 e8       	ldi	r24, 0x80	; 128
    3ab8:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
    3abc:	8d b7       	in	r24, 0x3d	; 61
    3abe:	9e b7       	in	r25, 0x3e	; 62
    3ac0:	09 96       	adiw	r24, 0x09	; 9
    3ac2:	0f b6       	in	r0, 0x3f	; 63
    3ac4:	f8 94       	cli
    3ac6:	9e bf       	out	0x3e, r25	; 62
    3ac8:	0f be       	out	0x3f, r0	; 63
    3aca:	8d bf       	out	0x3d, r24	; 61
    3acc:	df 91       	pop	r29
    3ace:	cf 91       	pop	r28
    3ad0:	08 95       	ret

Disassembly of section .text.FLASH_Die_Selection:

00003d0e <FLASH_Die_Selection>:
    3d0e:	cf 92       	push	r12
    3d10:	df 92       	push	r13
    3d12:	ef 92       	push	r14
    3d14:	ff 92       	push	r15
    3d16:	0f 93       	push	r16
    3d18:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3d1c:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3d20:	0e 94 32 22 	call	0x4464	; 0x4464 <FLASH_NAND_CS_ENABLE>
    3d24:	8f e0       	ldi	r24, 0x0F	; 15
    3d26:	8e bd       	out	0x2e, r24	; 46
    3d28:	0d b4       	in	r0, 0x2d	; 45
    3d2a:	07 fe       	sbrs	r0, 7
    3d2c:	fd cf       	rjmp	.-6      	; 0x3d28 <FLASH_Die_Selection+0x1a>
    3d2e:	8e b5       	in	r24, 0x2e	; 46
    3d30:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3d34:	80 ed       	ldi	r24, 0xD0	; 208
    3d36:	8e bd       	out	0x2e, r24	; 46
    3d38:	0d b4       	in	r0, 0x2d	; 45
    3d3a:	07 fe       	sbrs	r0, 7
    3d3c:	fd cf       	rjmp	.-6      	; 0x3d38 <FLASH_Die_Selection+0x2a>
    3d3e:	8e b5       	in	r24, 0x2e	; 46
    3d40:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3d44:	1e bc       	out	0x2e, r1	; 46
    3d46:	0d b4       	in	r0, 0x2d	; 45
    3d48:	07 fe       	sbrs	r0, 7
    3d4a:	fd cf       	rjmp	.-6      	; 0x3d46 <FLASH_Die_Selection+0x38>
    3d4c:	8e b5       	in	r24, 0x2e	; 46
    3d4e:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3d52:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3d56:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3d5a:	0e 94 4f 22 	call	0x449e	; 0x449e <FLASH_NAND_CS_DISABLE>
    3d5e:	8a e0       	ldi	r24, 0x0A	; 10
    3d60:	94 e0       	ldi	r25, 0x04	; 4
    3d62:	7c 01       	movw	r14, r24
    3d64:	20 e8       	ldi	r18, 0x80	; 128
    3d66:	02 2f       	mov	r16, r18
    3d68:	0f 2e       	mov	r0, r31
    3d6a:	fa e0       	ldi	r31, 0x0A	; 10
    3d6c:	cf 2e       	mov	r12, r31
    3d6e:	f3 e0       	ldi	r31, 0x03	; 3
    3d70:	df 2e       	mov	r13, r31
    3d72:	f0 2d       	mov	r31, r0
    3d74:	2e e6       	ldi	r18, 0x6E	; 110
    3d76:	35 e0       	ldi	r19, 0x05	; 5
    3d78:	40 e0       	ldi	r20, 0x00	; 0
    3d7a:	60 e0       	ldi	r22, 0x00	; 0
    3d7c:	70 e0       	ldi	r23, 0x00	; 0
    3d7e:	81 e0       	ldi	r24, 0x01	; 1
    3d80:	90 e0       	ldi	r25, 0x00	; 0
    3d82:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <Print_To_User>
    3d86:	0f 91       	pop	r16
    3d88:	ff 90       	pop	r15
    3d8a:	ef 90       	pop	r14
    3d8c:	df 90       	pop	r13
    3d8e:	cf 90       	pop	r12
    3d90:	08 95       	ret

Disassembly of section .text.FLASH_Configuration:

00003d92 <FLASH_Configuration>:
    3d92:	cf 92       	push	r12
    3d94:	df 92       	push	r13
    3d96:	ef 92       	push	r14
    3d98:	ff 92       	push	r15
    3d9a:	0f 93       	push	r16
    3d9c:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3da0:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3da4:	0e 94 32 22 	call	0x4464	; 0x4464 <FLASH_NAND_CS_ENABLE>
    3da8:	8f e0       	ldi	r24, 0x0F	; 15
    3daa:	8e bd       	out	0x2e, r24	; 46
    3dac:	0d b4       	in	r0, 0x2d	; 45
    3dae:	07 fe       	sbrs	r0, 7
    3db0:	fd cf       	rjmp	.-6      	; 0x3dac <FLASH_Configuration+0x1a>
    3db2:	8e b5       	in	r24, 0x2e	; 46
    3db4:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3db8:	80 eb       	ldi	r24, 0xB0	; 176
    3dba:	8e bd       	out	0x2e, r24	; 46
    3dbc:	0d b4       	in	r0, 0x2d	; 45
    3dbe:	07 fe       	sbrs	r0, 7
    3dc0:	fd cf       	rjmp	.-6      	; 0x3dbc <FLASH_Configuration+0x2a>
    3dc2:	8e b5       	in	r24, 0x2e	; 46
    3dc4:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3dc8:	1e bc       	out	0x2e, r1	; 46
    3dca:	0d b4       	in	r0, 0x2d	; 45
    3dcc:	07 fe       	sbrs	r0, 7
    3dce:	fd cf       	rjmp	.-6      	; 0x3dca <FLASH_Configuration+0x38>
    3dd0:	8e b5       	in	r24, 0x2e	; 46
    3dd2:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3dd6:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3dda:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3dde:	0e 94 4f 22 	call	0x449e	; 0x449e <FLASH_NAND_CS_DISABLE>
    3de2:	8a e0       	ldi	r24, 0x0A	; 10
    3de4:	94 e0       	ldi	r25, 0x04	; 4
    3de6:	7c 01       	movw	r14, r24
    3de8:	20 e8       	ldi	r18, 0x80	; 128
    3dea:	02 2f       	mov	r16, r18
    3dec:	0f 2e       	mov	r0, r31
    3dee:	fa e0       	ldi	r31, 0x0A	; 10
    3df0:	cf 2e       	mov	r12, r31
    3df2:	f3 e0       	ldi	r31, 0x03	; 3
    3df4:	df 2e       	mov	r13, r31
    3df6:	f0 2d       	mov	r31, r0
    3df8:	2f e8       	ldi	r18, 0x8F	; 143
    3dfa:	35 e0       	ldi	r19, 0x05	; 5
    3dfc:	40 e0       	ldi	r20, 0x00	; 0
    3dfe:	60 e0       	ldi	r22, 0x00	; 0
    3e00:	70 e0       	ldi	r23, 0x00	; 0
    3e02:	81 e0       	ldi	r24, 0x01	; 1
    3e04:	90 e0       	ldi	r25, 0x00	; 0
    3e06:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <Print_To_User>
    3e0a:	0f 91       	pop	r16
    3e0c:	ff 90       	pop	r15
    3e0e:	ef 90       	pop	r14
    3e10:	df 90       	pop	r13
    3e12:	cf 90       	pop	r12
    3e14:	08 95       	ret

Disassembly of section .text.FLASH_Block_Lock_Setter:

00003e16 <FLASH_Block_Lock_Setter>:
    3e16:	cf 93       	push	r28
    3e18:	c8 2f       	mov	r28, r24
    3e1a:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3e1e:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3e22:	0e 94 32 22 	call	0x4464	; 0x4464 <FLASH_NAND_CS_ENABLE>
    3e26:	cc 23       	and	r28, r28
    3e28:	c9 f0       	breq	.+50     	; 0x3e5c <FLASH_Block_Lock_Setter+0x46>
    3e2a:	8f e1       	ldi	r24, 0x1F	; 31
    3e2c:	8e bd       	out	0x2e, r24	; 46
    3e2e:	0d b4       	in	r0, 0x2d	; 45
    3e30:	07 fe       	sbrs	r0, 7
    3e32:	fd cf       	rjmp	.-6      	; 0x3e2e <FLASH_Block_Lock_Setter+0x18>
    3e34:	8e b5       	in	r24, 0x2e	; 46
    3e36:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3e3a:	80 ea       	ldi	r24, 0xA0	; 160
    3e3c:	8e bd       	out	0x2e, r24	; 46
    3e3e:	0d b4       	in	r0, 0x2d	; 45
    3e40:	07 fe       	sbrs	r0, 7
    3e42:	fd cf       	rjmp	.-6      	; 0x3e3e <FLASH_Block_Lock_Setter+0x28>
    3e44:	8e b5       	in	r24, 0x2e	; 46
    3e46:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3e4a:	8c e7       	ldi	r24, 0x7C	; 124
    3e4c:	8e bd       	out	0x2e, r24	; 46
    3e4e:	0d b4       	in	r0, 0x2d	; 45
    3e50:	07 fe       	sbrs	r0, 7
    3e52:	fd cf       	rjmp	.-6      	; 0x3e4e <FLASH_Block_Lock_Setter+0x38>
    3e54:	8e b5       	in	r24, 0x2e	; 46
    3e56:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3e5a:	17 c0       	rjmp	.+46     	; 0x3e8a <FLASH_Block_Lock_Setter+0x74>
    3e5c:	8f e1       	ldi	r24, 0x1F	; 31
    3e5e:	8e bd       	out	0x2e, r24	; 46
    3e60:	0d b4       	in	r0, 0x2d	; 45
    3e62:	07 fe       	sbrs	r0, 7
    3e64:	fd cf       	rjmp	.-6      	; 0x3e60 <FLASH_Block_Lock_Setter+0x4a>
    3e66:	8e b5       	in	r24, 0x2e	; 46
    3e68:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3e6c:	80 ea       	ldi	r24, 0xA0	; 160
    3e6e:	8e bd       	out	0x2e, r24	; 46
    3e70:	0d b4       	in	r0, 0x2d	; 45
    3e72:	07 fe       	sbrs	r0, 7
    3e74:	fd cf       	rjmp	.-6      	; 0x3e70 <FLASH_Block_Lock_Setter+0x5a>
    3e76:	8e b5       	in	r24, 0x2e	; 46
    3e78:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3e7c:	1e bc       	out	0x2e, r1	; 46
    3e7e:	0d b4       	in	r0, 0x2d	; 45
    3e80:	07 fe       	sbrs	r0, 7
    3e82:	fd cf       	rjmp	.-6      	; 0x3e7e <FLASH_Block_Lock_Setter+0x68>
    3e84:	8e b5       	in	r24, 0x2e	; 46
    3e86:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3e8a:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3e8e:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3e92:	0e 94 4f 22 	call	0x449e	; 0x449e <FLASH_NAND_CS_DISABLE>
    3e96:	cf 91       	pop	r28
    3e98:	08 95       	ret

Disassembly of section .text.FLASH_Block_Lock:

00003458 <FLASH_Block_Lock>:
    3458:	cf 92       	push	r12
    345a:	df 92       	push	r13
    345c:	ef 92       	push	r14
    345e:	ff 92       	push	r15
    3460:	0f 93       	push	r16
    3462:	08 2f       	mov	r16, r24
    3464:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3468:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    346c:	0e 94 32 22 	call	0x4464	; 0x4464 <FLASH_NAND_CS_ENABLE>
    3470:	00 23       	and	r16, r16
    3472:	c1 f0       	breq	.+48     	; 0x34a4 <FLASH_Block_Lock+0x4c>
    3474:	8f e1       	ldi	r24, 0x1F	; 31
    3476:	8e bd       	out	0x2e, r24	; 46
    3478:	0d b4       	in	r0, 0x2d	; 45
    347a:	07 fe       	sbrs	r0, 7
    347c:	fd cf       	rjmp	.-6      	; 0x3478 <FLASH_Block_Lock+0x20>
    347e:	8e b5       	in	r24, 0x2e	; 46
    3480:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3484:	80 ea       	ldi	r24, 0xA0	; 160
    3486:	8e bd       	out	0x2e, r24	; 46
    3488:	0d b4       	in	r0, 0x2d	; 45
    348a:	07 fe       	sbrs	r0, 7
    348c:	fd cf       	rjmp	.-6      	; 0x3488 <FLASH_Block_Lock+0x30>
    348e:	8e b5       	in	r24, 0x2e	; 46
    3490:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3494:	1e bc       	out	0x2e, r1	; 46
    3496:	0d b4       	in	r0, 0x2d	; 45
    3498:	07 fe       	sbrs	r0, 7
    349a:	fd cf       	rjmp	.-6      	; 0x3496 <FLASH_Block_Lock+0x3e>
    349c:	8e b5       	in	r24, 0x2e	; 46
    349e:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    34a2:	17 c0       	rjmp	.+46     	; 0x34d2 <FLASH_Block_Lock+0x7a>
    34a4:	8f e0       	ldi	r24, 0x0F	; 15
    34a6:	8e bd       	out	0x2e, r24	; 46
    34a8:	0d b4       	in	r0, 0x2d	; 45
    34aa:	07 fe       	sbrs	r0, 7
    34ac:	fd cf       	rjmp	.-6      	; 0x34a8 <FLASH_Block_Lock+0x50>
    34ae:	8e b5       	in	r24, 0x2e	; 46
    34b0:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    34b4:	80 ea       	ldi	r24, 0xA0	; 160
    34b6:	8e bd       	out	0x2e, r24	; 46
    34b8:	0d b4       	in	r0, 0x2d	; 45
    34ba:	07 fe       	sbrs	r0, 7
    34bc:	fd cf       	rjmp	.-6      	; 0x34b8 <FLASH_Block_Lock+0x60>
    34be:	8e b5       	in	r24, 0x2e	; 46
    34c0:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    34c4:	1e bc       	out	0x2e, r1	; 46
    34c6:	0d b4       	in	r0, 0x2d	; 45
    34c8:	07 fe       	sbrs	r0, 7
    34ca:	fd cf       	rjmp	.-6      	; 0x34c6 <FLASH_Block_Lock+0x6e>
    34cc:	8e b5       	in	r24, 0x2e	; 46
    34ce:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    34d2:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    34d6:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    34da:	0e 94 4f 22 	call	0x449e	; 0x449e <FLASH_NAND_CS_DISABLE>
    34de:	8a e0       	ldi	r24, 0x0A	; 10
    34e0:	94 e0       	ldi	r25, 0x04	; 4
    34e2:	7c 01       	movw	r14, r24
    34e4:	20 e8       	ldi	r18, 0x80	; 128
    34e6:	02 2f       	mov	r16, r18
    34e8:	0f 2e       	mov	r0, r31
    34ea:	fa e0       	ldi	r31, 0x0A	; 10
    34ec:	cf 2e       	mov	r12, r31
    34ee:	f3 e0       	ldi	r31, 0x03	; 3
    34f0:	df 2e       	mov	r13, r31
    34f2:	f0 2d       	mov	r31, r0
    34f4:	20 eb       	ldi	r18, 0xB0	; 176
    34f6:	35 e0       	ldi	r19, 0x05	; 5
    34f8:	40 e0       	ldi	r20, 0x00	; 0
    34fa:	60 e0       	ldi	r22, 0x00	; 0
    34fc:	70 e0       	ldi	r23, 0x00	; 0
    34fe:	81 e0       	ldi	r24, 0x01	; 1
    3500:	90 e0       	ldi	r25, 0x00	; 0
    3502:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <Print_To_User>
    3506:	0f 91       	pop	r16
    3508:	ff 90       	pop	r15
    350a:	ef 90       	pop	r14
    350c:	df 90       	pop	r13
    350e:	cf 90       	pop	r12
    3510:	08 95       	ret

Disassembly of section .text.FLASH_Reset:

000045dc <FLASH_Reset>:
	Print_To_User(1, 0, "Block Lock Register: 0x%02X \n", &status, ARR_DAT.random_data);
}

void FLASH_Reset() //reset memory device
{
	FLASH_NAND_CS_ENABLE(d);
    45dc:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    45e0:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    45e4:	0e 94 32 22 	call	0x4464	; 0x4464 <FLASH_NAND_CS_ENABLE>
	
	SPDR = RESET; //Sending READ_ID Command into SPI Data Register (SPDR)
    45e8:	8f ef       	ldi	r24, 0xFF	; 255
    45ea:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    45ec:	0d b4       	in	r0, 0x2d	; 45
    45ee:	07 fe       	sbrs	r0, 7
    45f0:	fd cf       	rjmp	.-6      	; 0x45ec <FLASH_Reset+0x10>
	
	FLASH_NAND_CS_DISABLE(d);
    45f2:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    45f6:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    45fa:	0e 94 4f 22 	call	0x449e	; 0x449e <FLASH_NAND_CS_DISABLE>

	USART_Data("Device Reseted \n");
    45fe:	6e ec       	ldi	r22, 0xCE	; 206
    4600:	75 e0       	ldi	r23, 0x05	; 5
    4602:	80 e0       	ldi	r24, 0x00	; 0
    4604:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
    4608:	08 95       	ret

Disassembly of section .text.FLASH_MainArray_Address:

0000366e <FLASH_MainArray_Address>:
	FLASH_NAND_CS_DISABLE(d);

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    366e:	cf 92       	push	r12
    3670:	df 92       	push	r13
    3672:	ef 92       	push	r14
    3674:	9a 01       	movw	r18, r20
    3676:	46 2f       	mov	r20, r22
    3678:	00 97       	sbiw	r24, 0x00	; 0
    367a:	81 f5       	brne	.+96     	; 0x36dc <FLASH_MainArray_Address+0x6e>
    367c:	69 01       	movw	r12, r18
    367e:	e4 2e       	mov	r14, r20
    3680:	52 e0       	ldi	r21, 0x02	; 2
    3682:	c5 0e       	add	r12, r21
    3684:	d1 1c       	adc	r13, r1
    3686:	e1 1c       	adc	r14, r1
    3688:	f6 01       	movw	r30, r12
    368a:	5e 2d       	mov	r21, r14
    368c:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    3690:	6e bd       	out	0x2e, r22	; 46
    3692:	0d b4       	in	r0, 0x2d	; 45
    3694:	07 fe       	sbrs	r0, 7
    3696:	fd cf       	rjmp	.-6      	; 0x3692 <FLASH_MainArray_Address+0x24>
    3698:	5e b5       	in	r21, 0x2e	; 46
    369a:	50 93 0a 04 	sts	0x040A, r21	; 0x80040a <status>
    369e:	69 01       	movw	r12, r18
    36a0:	e4 2e       	mov	r14, r20
    36a2:	53 e0       	ldi	r21, 0x03	; 3
    36a4:	c5 0e       	add	r12, r21
    36a6:	d1 1c       	adc	r13, r1
    36a8:	e1 1c       	adc	r14, r1
    36aa:	f6 01       	movw	r30, r12
    36ac:	5e 2d       	mov	r21, r14
    36ae:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    36b2:	6e bd       	out	0x2e, r22	; 46
    36b4:	0d b4       	in	r0, 0x2d	; 45
    36b6:	07 fe       	sbrs	r0, 7
    36b8:	fd cf       	rjmp	.-6      	; 0x36b4 <FLASH_MainArray_Address+0x46>
    36ba:	5e b5       	in	r21, 0x2e	; 46
    36bc:	50 93 0a 04 	sts	0x040A, r21	; 0x80040a <status>
    36c0:	2c 5f       	subi	r18, 0xFC	; 252
    36c2:	3f 4f       	sbci	r19, 0xFF	; 255
    36c4:	4f 4f       	sbci	r20, 0xFF	; 255
    36c6:	f9 01       	movw	r30, r18
    36c8:	54 2f       	mov	r21, r20
    36ca:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    36ce:	6e bd       	out	0x2e, r22	; 46
    36d0:	0d b4       	in	r0, 0x2d	; 45
    36d2:	07 fe       	sbrs	r0, 7
    36d4:	fd cf       	rjmp	.-6      	; 0x36d0 <FLASH_MainArray_Address+0x62>
    36d6:	2e b5       	in	r18, 0x2e	; 46
    36d8:	20 93 0a 04 	sts	0x040A, r18	; 0x80040a <status>
    36dc:	01 97       	sbiw	r24, 0x01	; 1
    36de:	b1 f4       	brne	.+44     	; 0x370c <FLASH_MainArray_Address+0x9e>
    36e0:	1e bc       	out	0x2e, r1	; 46
    36e2:	0d b4       	in	r0, 0x2d	; 45
    36e4:	07 fe       	sbrs	r0, 7
    36e6:	fd cf       	rjmp	.-6      	; 0x36e2 <FLASH_MainArray_Address+0x74>
    36e8:	8e b5       	in	r24, 0x2e	; 46
    36ea:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    36ee:	1e bc       	out	0x2e, r1	; 46
    36f0:	0d b4       	in	r0, 0x2d	; 45
    36f2:	07 fe       	sbrs	r0, 7
    36f4:	fd cf       	rjmp	.-6      	; 0x36f0 <FLASH_MainArray_Address+0x82>
    36f6:	8e b5       	in	r24, 0x2e	; 46
    36f8:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    36fc:	81 e0       	ldi	r24, 0x01	; 1
    36fe:	8e bd       	out	0x2e, r24	; 46
    3700:	0d b4       	in	r0, 0x2d	; 45
    3702:	07 fe       	sbrs	r0, 7
    3704:	fd cf       	rjmp	.-6      	; 0x3700 <FLASH_MainArray_Address+0x92>
    3706:	8e b5       	in	r24, 0x2e	; 46
    3708:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    370c:	ef 90       	pop	r14
    370e:	df 90       	pop	r13
    3710:	cf 90       	pop	r12
    3712:	08 95       	ret

Disassembly of section .text.FLASH_Column_Address:

00004160 <FLASH_Column_Address>:
    4160:	9a 01       	movw	r18, r20
    4162:	46 2f       	mov	r20, r22
    4164:	00 97       	sbiw	r24, 0x00	; 0
    4166:	c9 f4       	brne	.+50     	; 0x419a <FLASH_Column_Address+0x3a>
    4168:	f9 01       	movw	r30, r18
    416a:	54 2f       	mov	r21, r20
    416c:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    4170:	6e bd       	out	0x2e, r22	; 46
    4172:	0d b4       	in	r0, 0x2d	; 45
    4174:	07 fe       	sbrs	r0, 7
    4176:	fd cf       	rjmp	.-6      	; 0x4172 <FLASH_Column_Address+0x12>
    4178:	5e b5       	in	r21, 0x2e	; 46
    417a:	50 93 0a 04 	sts	0x040A, r21	; 0x80040a <status>
    417e:	2f 5f       	subi	r18, 0xFF	; 255
    4180:	3f 4f       	sbci	r19, 0xFF	; 255
    4182:	4f 4f       	sbci	r20, 0xFF	; 255
    4184:	f9 01       	movw	r30, r18
    4186:	54 2f       	mov	r21, r20
    4188:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    418c:	6e bd       	out	0x2e, r22	; 46
    418e:	0d b4       	in	r0, 0x2d	; 45
    4190:	07 fe       	sbrs	r0, 7
    4192:	fd cf       	rjmp	.-6      	; 0x418e <FLASH_Column_Address+0x2e>
    4194:	2e b5       	in	r18, 0x2e	; 46
    4196:	20 93 0a 04 	sts	0x040A, r18	; 0x80040a <status>
    419a:	01 97       	sbiw	r24, 0x01	; 1
    419c:	71 f4       	brne	.+28     	; 0x41ba <FLASH_Column_Address+0x5a>
    419e:	1e bc       	out	0x2e, r1	; 46
    41a0:	0d b4       	in	r0, 0x2d	; 45
    41a2:	07 fe       	sbrs	r0, 7
    41a4:	fd cf       	rjmp	.-6      	; 0x41a0 <FLASH_Column_Address+0x40>
    41a6:	8e b5       	in	r24, 0x2e	; 46
    41a8:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    41ac:	1e bc       	out	0x2e, r1	; 46
    41ae:	0d b4       	in	r0, 0x2d	; 45
    41b0:	07 fe       	sbrs	r0, 7
    41b2:	fd cf       	rjmp	.-6      	; 0x41ae <FLASH_Column_Address+0x4e>
    41b4:	8e b5       	in	r24, 0x2e	; 46
    41b6:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    41ba:	08 95       	ret

Disassembly of section .text.FLASH_Data_Storage:

00003f0a <FLASH_Data_Storage>:
    3f0a:	cf 93       	push	r28
    3f0c:	df 93       	push	r29
    3f0e:	ec 01       	movw	r28, r24
    3f10:	89 2b       	or	r24, r25
    3f12:	a9 f0       	breq	.+42     	; 0x3f3e <FLASH_Data_Storage+0x34>
    3f14:	1a c0       	rjmp	.+52     	; 0x3f4a <FLASH_Data_Storage+0x40>
    3f16:	1e bc       	out	0x2e, r1	; 46
    3f18:	0d b4       	in	r0, 0x2d	; 45
    3f1a:	07 fe       	sbrs	r0, 7
    3f1c:	fd cf       	rjmp	.-6      	; 0x3f18 <FLASH_Data_Storage+0xe>
    3f1e:	2e b5       	in	r18, 0x2e	; 46
    3f20:	fc 01       	movw	r30, r24
    3f22:	e6 5f       	subi	r30, 0xF6	; 246
    3f24:	fc 4f       	sbci	r31, 0xFC	; 252
    3f26:	20 83       	st	Z, r18
    3f28:	2e b5       	in	r18, 0x2e	; 46
    3f2a:	2d 30       	cpi	r18, 0x0D	; 13
    3f2c:	31 f4       	brne	.+12     	; 0x3f3a <FLASH_Data_Storage+0x30>
    3f2e:	6f ed       	ldi	r22, 0xDF	; 223
    3f30:	75 e0       	ldi	r23, 0x05	; 5
    3f32:	80 e0       	ldi	r24, 0x00	; 0
    3f34:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
    3f38:	08 c0       	rjmp	.+16     	; 0x3f4a <FLASH_Data_Storage+0x40>
    3f3a:	01 96       	adiw	r24, 0x01	; 1
    3f3c:	02 c0       	rjmp	.+4      	; 0x3f42 <FLASH_Data_Storage+0x38>
    3f3e:	80 e0       	ldi	r24, 0x00	; 0
    3f40:	90 e0       	ldi	r25, 0x00	; 0
    3f42:	8f 3f       	cpi	r24, 0xFF	; 255
    3f44:	91 05       	cpc	r25, r1
    3f46:	39 f3       	breq	.-50     	; 0x3f16 <FLASH_Data_Storage+0xc>
    3f48:	30 f3       	brcs	.-52     	; 0x3f16 <FLASH_Data_Storage+0xc>
    3f4a:	21 97       	sbiw	r28, 0x01	; 1
    3f4c:	91 f4       	brne	.+36     	; 0x3f72 <FLASH_Data_Storage+0x68>
    3f4e:	0b c0       	rjmp	.+22     	; 0x3f66 <FLASH_Data_Storage+0x5c>
    3f50:	1e bc       	out	0x2e, r1	; 46
    3f52:	0d b4       	in	r0, 0x2d	; 45
    3f54:	07 fe       	sbrs	r0, 7
    3f56:	fd cf       	rjmp	.-6      	; 0x3f52 <FLASH_Data_Storage+0x48>
    3f58:	2e b5       	in	r18, 0x2e	; 46
    3f5a:	fc 01       	movw	r30, r24
    3f5c:	e6 5f       	subi	r30, 0xF6	; 246
    3f5e:	fc 4f       	sbci	r31, 0xFC	; 252
    3f60:	20 83       	st	Z, r18
    3f62:	01 96       	adiw	r24, 0x01	; 1
    3f64:	02 c0       	rjmp	.+4      	; 0x3f6a <FLASH_Data_Storage+0x60>
    3f66:	80 e0       	ldi	r24, 0x00	; 0
    3f68:	90 e0       	ldi	r25, 0x00	; 0
    3f6a:	8f 3f       	cpi	r24, 0xFF	; 255
    3f6c:	91 05       	cpc	r25, r1
    3f6e:	81 f3       	breq	.-32     	; 0x3f50 <FLASH_Data_Storage+0x46>
    3f70:	78 f3       	brcs	.-34     	; 0x3f50 <FLASH_Data_Storage+0x46>
    3f72:	df 91       	pop	r29
    3f74:	cf 91       	pop	r28
    3f76:	08 95       	ret

Disassembly of section .text.FLASH_Read_From_Cache_x1:

000040a4 <FLASH_Read_From_Cache_x1>:
    40a4:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    40a8:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    40ac:	0e 94 32 22 	call	0x4464	; 0x4464 <FLASH_NAND_CS_ENABLE>
    40b0:	83 e0       	ldi	r24, 0x03	; 3
    40b2:	8e bd       	out	0x2e, r24	; 46
    40b4:	0d b4       	in	r0, 0x2d	; 45
    40b6:	07 fe       	sbrs	r0, 7
    40b8:	fd cf       	rjmp	.-6      	; 0x40b4 <FLASH_Read_From_Cache_x1+0x10>
    40ba:	8e b5       	in	r24, 0x2e	; 46
    40bc:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    40c0:	8a e1       	ldi	r24, 0x1A	; 26
    40c2:	8a 95       	dec	r24
    40c4:	f1 f7       	brne	.-4      	; 0x40c2 <FLASH_Read_From_Cache_x1+0x1e>
    40c6:	00 c0       	rjmp	.+0      	; 0x40c8 <FLASH_Read_From_Cache_x1+0x24>
    40c8:	45 e0       	ldi	r20, 0x05	; 5
    40ca:	53 e0       	ldi	r21, 0x03	; 3
    40cc:	60 e8       	ldi	r22, 0x80	; 128
    40ce:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <s>
    40d2:	90 91 04 03 	lds	r25, 0x0304	; 0x800304 <s+0x1>
    40d6:	0e 94 b0 20 	call	0x4160	; 0x4160 <FLASH_Column_Address>
    40da:	1e bc       	out	0x2e, r1	; 46
    40dc:	0d b4       	in	r0, 0x2d	; 45
    40de:	07 fe       	sbrs	r0, 7
    40e0:	fd cf       	rjmp	.-6      	; 0x40dc <FLASH_Read_From_Cache_x1+0x38>
    40e2:	8e b5       	in	r24, 0x2e	; 46
    40e4:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    40e8:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <s>
    40ec:	90 91 04 03 	lds	r25, 0x0304	; 0x800304 <s+0x1>
    40f0:	0e 94 85 1f 	call	0x3f0a	; 0x3f0a <FLASH_Data_Storage>
    40f4:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    40f8:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    40fc:	0e 94 4f 22 	call	0x449e	; 0x449e <FLASH_NAND_CS_DISABLE>
    4100:	08 95       	ret

Disassembly of section .text.FLASH_Status:

00003bf6 <FLASH_Status>:
    3bf6:	cf 92       	push	r12
    3bf8:	df 92       	push	r13
    3bfa:	ef 92       	push	r14
    3bfc:	ff 92       	push	r15
    3bfe:	0f 93       	push	r16
    3c00:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3c04:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3c08:	0e 94 32 22 	call	0x4464	; 0x4464 <FLASH_NAND_CS_ENABLE>
    3c0c:	8f e0       	ldi	r24, 0x0F	; 15
    3c0e:	8e bd       	out	0x2e, r24	; 46
    3c10:	0d b4       	in	r0, 0x2d	; 45
    3c12:	07 fe       	sbrs	r0, 7
    3c14:	fd cf       	rjmp	.-6      	; 0x3c10 <FLASH_Status+0x1a>
    3c16:	8e b5       	in	r24, 0x2e	; 46
    3c18:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3c1c:	80 ec       	ldi	r24, 0xC0	; 192
    3c1e:	8e bd       	out	0x2e, r24	; 46
    3c20:	0d b4       	in	r0, 0x2d	; 45
    3c22:	07 fe       	sbrs	r0, 7
    3c24:	fd cf       	rjmp	.-6      	; 0x3c20 <FLASH_Status+0x2a>
    3c26:	8e b5       	in	r24, 0x2e	; 46
    3c28:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3c2c:	1e bc       	out	0x2e, r1	; 46
    3c2e:	0d b4       	in	r0, 0x2d	; 45
    3c30:	07 fe       	sbrs	r0, 7
    3c32:	fd cf       	rjmp	.-6      	; 0x3c2e <FLASH_Status+0x38>
    3c34:	8e b5       	in	r24, 0x2e	; 46
    3c36:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3c3a:	8a e0       	ldi	r24, 0x0A	; 10
    3c3c:	94 e0       	ldi	r25, 0x04	; 4
    3c3e:	7c 01       	movw	r14, r24
    3c40:	20 e8       	ldi	r18, 0x80	; 128
    3c42:	02 2f       	mov	r16, r18
    3c44:	0f 2e       	mov	r0, r31
    3c46:	fa e0       	ldi	r31, 0x0A	; 10
    3c48:	cf 2e       	mov	r12, r31
    3c4a:	f3 e0       	ldi	r31, 0x03	; 3
    3c4c:	df 2e       	mov	r13, r31
    3c4e:	f0 2d       	mov	r31, r0
    3c50:	2f ee       	ldi	r18, 0xEF	; 239
    3c52:	35 e0       	ldi	r19, 0x05	; 5
    3c54:	40 e0       	ldi	r20, 0x00	; 0
    3c56:	60 e0       	ldi	r22, 0x00	; 0
    3c58:	70 e0       	ldi	r23, 0x00	; 0
    3c5a:	81 e0       	ldi	r24, 0x01	; 1
    3c5c:	90 e0       	ldi	r25, 0x00	; 0
    3c5e:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <Print_To_User>
    3c62:	80 91 0a 04 	lds	r24, 0x040A	; 0x80040a <status>
    3c66:	80 fd       	sbrc	r24, 0
    3c68:	e1 cf       	rjmp	.-62     	; 0x3c2c <FLASH_Status+0x36>
    3c6a:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3c6e:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3c72:	0e 94 4f 22 	call	0x449e	; 0x449e <FLASH_NAND_CS_DISABLE>
    3c76:	0f 91       	pop	r16
    3c78:	ff 90       	pop	r15
    3c7a:	ef 90       	pop	r14
    3c7c:	df 90       	pop	r13
    3c7e:	cf 90       	pop	r12
    3c80:	08 95       	ret

Disassembly of section .text.FLASH_Program_Execute:

000043a8 <FLASH_Program_Execute>:

void FLASH_Program_Execute() //new command to transfer data from cache to main array
{	
	FLASH_NAND_CS_ENABLE(d);
    43a8:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    43ac:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    43b0:	0e 94 32 22 	call	0x4464	; 0x4464 <FLASH_NAND_CS_ENABLE>
	
	//code below sends Program_Execute command with the starting address of the main array
	SPDR = PROGRAM_EXECUTE; //Sending Program Execute Command into SPI Data Register (SPDR)
    43b4:	80 e1       	ldi	r24, 0x10	; 16
    43b6:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1 << SPIF))); 
    43b8:	0d b4       	in	r0, 0x2d	; 45
    43ba:	07 fe       	sbrs	r0, 7
    43bc:	fd cf       	rjmp	.-6      	; 0x43b8 <FLASH_Program_Execute+0x10>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    43be:	8e b5       	in	r24, 0x2e	; 46
    43c0:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
	
	//_delay_us(5);
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to write data to in MainArray
    43c4:	45 e0       	ldi	r20, 0x05	; 5
    43c6:	53 e0       	ldi	r21, 0x03	; 3
    43c8:	60 e8       	ldi	r22, 0x80	; 128
    43ca:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <s>
    43ce:	90 91 04 03 	lds	r25, 0x0304	; 0x800304 <s+0x1>
    43d2:	0e 94 37 1b 	call	0x366e	; 0x366e <FLASH_MainArray_Address>
	
	FLASH_NAND_CS_DISABLE(d);
    43d6:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    43da:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    43de:	0e 94 4f 22 	call	0x449e	; 0x449e <FLASH_NAND_CS_DISABLE>
	
	//USART_Data("Program Execute \n");
	
	FLASH_Status(); //checks for the status of data transfer from cache to main array from program_execute command
    43e2:	0e 94 fb 1d 	call	0x3bf6	; 0x3bf6 <FLASH_Status>
    43e6:	08 95       	ret

Disassembly of section .text.FLASH_Page_Program:

00003ad2 <FLASH_Page_Program>:
	FLASH_NAND_CS_DISABLE(d);

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3ad2:	cf 93       	push	r28
    3ad4:	df 93       	push	r29
    3ad6:	0e 94 05 23 	call	0x460a	; 0x460a <FLASH_Write_Enable>
    3ada:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3ade:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3ae2:	0e 94 32 22 	call	0x4464	; 0x4464 <FLASH_NAND_CS_ENABLE>
    3ae6:	82 e0       	ldi	r24, 0x02	; 2
    3ae8:	8e bd       	out	0x2e, r24	; 46
    3aea:	0d b4       	in	r0, 0x2d	; 45
    3aec:	07 fe       	sbrs	r0, 7
    3aee:	fd cf       	rjmp	.-6      	; 0x3aea <FLASH_Page_Program+0x18>
    3af0:	8e b5       	in	r24, 0x2e	; 46
    3af2:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3af6:	8a e1       	ldi	r24, 0x1A	; 26
    3af8:	8a 95       	dec	r24
    3afa:	f1 f7       	brne	.-4      	; 0x3af8 <FLASH_Page_Program+0x26>
    3afc:	00 c0       	rjmp	.+0      	; 0x3afe <FLASH_Page_Program+0x2c>
    3afe:	45 e0       	ldi	r20, 0x05	; 5
    3b00:	53 e0       	ldi	r21, 0x03	; 3
    3b02:	60 e8       	ldi	r22, 0x80	; 128
    3b04:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <s>
    3b08:	90 91 04 03 	lds	r25, 0x0304	; 0x800304 <s+0x1>
    3b0c:	0e 94 b0 20 	call	0x4160	; 0x4160 <FLASH_Column_Address>
    3b10:	c0 e0       	ldi	r28, 0x00	; 0
    3b12:	d0 e0       	ldi	r29, 0x00	; 0
    3b14:	0c c0       	rjmp	.+24     	; 0x3b2e <FLASH_Page_Program+0x5c>
    3b16:	fe 01       	movw	r30, r28
    3b18:	e0 50       	subi	r30, 0x00	; 0
    3b1a:	fe 4f       	sbci	r31, 0xFE	; 254
    3b1c:	80 81       	ld	r24, Z
    3b1e:	8e bd       	out	0x2e, r24	; 46
    3b20:	0d b4       	in	r0, 0x2d	; 45
    3b22:	07 fe       	sbrs	r0, 7
    3b24:	fd cf       	rjmp	.-6      	; 0x3b20 <FLASH_Page_Program+0x4e>
    3b26:	8e b5       	in	r24, 0x2e	; 46
    3b28:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3b2c:	21 96       	adiw	r28, 0x01	; 1
    3b2e:	60 e0       	ldi	r22, 0x00	; 0
    3b30:	72 e0       	ldi	r23, 0x02	; 2
    3b32:	80 e8       	ldi	r24, 0x80	; 128
    3b34:	0e 94 8d 23 	call	0x471a	; 0x471a <strlen>
    3b38:	c8 17       	cp	r28, r24
    3b3a:	d9 07       	cpc	r29, r25
    3b3c:	60 f3       	brcs	.-40     	; 0x3b16 <FLASH_Page_Program+0x44>
    3b3e:	8d e0       	ldi	r24, 0x0D	; 13
    3b40:	8e bd       	out	0x2e, r24	; 46
    3b42:	0d b4       	in	r0, 0x2d	; 45
    3b44:	07 fe       	sbrs	r0, 7
    3b46:	fd cf       	rjmp	.-6      	; 0x3b42 <FLASH_Page_Program+0x70>
    3b48:	8e b5       	in	r24, 0x2e	; 46
    3b4a:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
    3b4e:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3b52:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3b56:	0e 94 4f 22 	call	0x449e	; 0x449e <FLASH_NAND_CS_DISABLE>
    3b5a:	0e 94 d4 21 	call	0x43a8	; 0x43a8 <FLASH_Program_Execute>
    3b5e:	df 91       	pop	r29
    3b60:	cf 91       	pop	r28
    3b62:	08 95       	ret

Disassembly of section .text.FLASH_Page_Read:

00004208 <FLASH_Page_Read>:
	FLASH_Status(); //checks for the status of data transfer from cache to main array from program_execute command
}

void FLASH_Page_Read() //reads a single page data from Block/Page array to transfer to Cache register
{
	FLASH_NAND_CS_ENABLE(d);
    4208:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    420c:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    4210:	0e 94 32 22 	call	0x4464	; 0x4464 <FLASH_NAND_CS_ENABLE>
	
	SPDR = PAGE_READ; //Sending Page_Read Command into SPI Data Register (SPDR)
    4214:	83 e1       	ldi	r24, 0x13	; 19
    4216:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    4218:	0d b4       	in	r0, 0x2d	; 45
    421a:	07 fe       	sbrs	r0, 7
    421c:	fd cf       	rjmp	.-6      	; 0x4218 <FLASH_Page_Read+0x10>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    421e:	8e b5       	in	r24, 0x2e	; 46
    4220:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
	
	//_delay_us(5);
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to read data from in MainArray
    4224:	45 e0       	ldi	r20, 0x05	; 5
    4226:	53 e0       	ldi	r21, 0x03	; 3
    4228:	60 e8       	ldi	r22, 0x80	; 128
    422a:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <s>
    422e:	90 91 04 03 	lds	r25, 0x0304	; 0x800304 <s+0x1>
    4232:	0e 94 37 1b 	call	0x366e	; 0x366e <FLASH_MainArray_Address>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    4236:	00 c0       	rjmp	.+0      	; 0x4238 <FLASH_Page_Read+0x30>
    4238:	00 c0       	rjmp	.+0      	; 0x423a <FLASH_Page_Read+0x32>
	
	_delay_us(0.200);
	
	FLASH_NAND_CS_DISABLE(d);
    423a:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    423e:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    4242:	0e 94 4f 22 	call	0x449e	; 0x449e <FLASH_NAND_CS_DISABLE>

	FLASH_Status(); //checks for the status of data transfer from main array to cache from page_read command
    4246:	0e 94 fb 1d 	call	0x3bf6	; 0x3bf6 <FLASH_Status>
	
	//USART_Data("Page Read \n");
	
	FLASH_Read_From_Cache_x1();
    424a:	0e 94 52 20 	call	0x40a4	; 0x40a4 <FLASH_Read_From_Cache_x1>
    424e:	08 95       	ret

Disassembly of section .text.FLASH_Para_Pg:

00003e9a <FLASH_Para_Pg>:
	FLASH_NAND_CS_DISABLE(d);

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3e9a:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3e9e:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3ea2:	0e 94 32 22 	call	0x4464	; 0x4464 <FLASH_NAND_CS_ENABLE>
    3ea6:	8f e1       	ldi	r24, 0x1F	; 31
    3ea8:	8e bd       	out	0x2e, r24	; 46
    3eaa:	0d b4       	in	r0, 0x2d	; 45
    3eac:	07 fe       	sbrs	r0, 7
    3eae:	fd cf       	rjmp	.-6      	; 0x3eaa <FLASH_Para_Pg+0x10>
    3eb0:	80 eb       	ldi	r24, 0xB0	; 176
    3eb2:	8e bd       	out	0x2e, r24	; 46
    3eb4:	0d b4       	in	r0, 0x2d	; 45
    3eb6:	07 fe       	sbrs	r0, 7
    3eb8:	fd cf       	rjmp	.-6      	; 0x3eb4 <FLASH_Para_Pg+0x1a>
    3eba:	80 e4       	ldi	r24, 0x40	; 64
    3ebc:	8e bd       	out	0x2e, r24	; 46
    3ebe:	0d b4       	in	r0, 0x2d	; 45
    3ec0:	07 fe       	sbrs	r0, 7
    3ec2:	fd cf       	rjmp	.-6      	; 0x3ebe <FLASH_Para_Pg+0x24>
    3ec4:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3ec8:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3ecc:	0e 94 4f 22 	call	0x449e	; 0x449e <FLASH_NAND_CS_DISABLE>
    3ed0:	0e 94 04 21 	call	0x4208	; 0x4208 <FLASH_Page_Read>
    3ed4:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3ed8:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3edc:	0e 94 32 22 	call	0x4464	; 0x4464 <FLASH_NAND_CS_ENABLE>
    3ee0:	8f e1       	ldi	r24, 0x1F	; 31
    3ee2:	8e bd       	out	0x2e, r24	; 46
    3ee4:	0d b4       	in	r0, 0x2d	; 45
    3ee6:	07 fe       	sbrs	r0, 7
    3ee8:	fd cf       	rjmp	.-6      	; 0x3ee4 <FLASH_Para_Pg+0x4a>
    3eea:	80 eb       	ldi	r24, 0xB0	; 176
    3eec:	8e bd       	out	0x2e, r24	; 46
    3eee:	0d b4       	in	r0, 0x2d	; 45
    3ef0:	07 fe       	sbrs	r0, 7
    3ef2:	fd cf       	rjmp	.-6      	; 0x3eee <FLASH_Para_Pg+0x54>
    3ef4:	1e bc       	out	0x2e, r1	; 46
    3ef6:	0d b4       	in	r0, 0x2d	; 45
    3ef8:	07 fe       	sbrs	r0, 7
    3efa:	fd cf       	rjmp	.-6      	; 0x3ef6 <FLASH_Para_Pg+0x5c>
    3efc:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    3f00:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    3f04:	0e 94 4f 22 	call	0x449e	; 0x449e <FLASH_NAND_CS_DISABLE>
    3f08:	08 95       	ret

Disassembly of section .text.FLASH_Block_Erase:

000042dc <FLASH_Block_Erase>:
	//USART_Data("Read from Cache: \n");
}

void FLASH_Block_Erase() //erases data from Flash Nand Memory at the block level
{
	FLASH_Write_Enable();
    42dc:	0e 94 05 23 	call	0x460a	; 0x460a <FLASH_Write_Enable>
	
	FLASH_NAND_CS_ENABLE(d);
    42e0:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    42e4:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    42e8:	0e 94 32 22 	call	0x4464	; 0x4464 <FLASH_NAND_CS_ENABLE>
	
	SPDR = BLOCK_ERASE; //Sending Block_Erase Command into SPI Data Register (SPDR)
    42ec:	88 ed       	ldi	r24, 0xD8	; 216
    42ee:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    42f0:	0d b4       	in	r0, 0x2d	; 45
    42f2:	07 fe       	sbrs	r0, 7
    42f4:	fd cf       	rjmp	.-6      	; 0x42f0 <FLASH_Block_Erase+0x14>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    42f6:	8e b5       	in	r24, 0x2e	; 46
    42f8:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <status>
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to write/read data to in MainArray
    42fc:	45 e0       	ldi	r20, 0x05	; 5
    42fe:	53 e0       	ldi	r21, 0x03	; 3
    4300:	60 e8       	ldi	r22, 0x80	; 128
    4302:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <s>
    4306:	90 91 04 03 	lds	r25, 0x0304	; 0x800304 <s+0x1>
    430a:	0e 94 37 1b 	call	0x366e	; 0x366e <FLASH_MainArray_Address>

	FLASH_NAND_CS_DISABLE(d);
    430e:	80 91 01 03 	lds	r24, 0x0301	; 0x800301 <d>
    4312:	90 91 02 03 	lds	r25, 0x0302	; 0x800302 <d+0x1>
    4316:	0e 94 4f 22 	call	0x449e	; 0x449e <FLASH_NAND_CS_DISABLE>
	
	FLASH_Status(); //checks for the status of data deletion on the block level from Block_Erase command
    431a:	0e 94 fb 1d 	call	0x3bf6	; 0x3bf6 <FLASH_Status>
    431e:	08 95       	ret

Disassembly of section .text.Page_Tester:

0000321e <Page_Tester>:
#include "../main.h"

#ifdef NAND_Flash_Formatter
 
void Page_Tester() //tests each page per block
{
    321e:	cf 92       	push	r12
    3220:	df 92       	push	r13
    3222:	ef 92       	push	r14
    3224:	ff 92       	push	r15
    3226:	0f 93       	push	r16
    3228:	cf 93       	push	r28
    322a:	df 93       	push	r29
	 //first obtain Columns and Block/Page addresses
	USART_Data("---Column Address--- 2 bytes \n");
    322c:	60 e0       	ldi	r22, 0x00	; 0
    322e:	76 e0       	ldi	r23, 0x06	; 6
    3230:	80 e0       	ldi	r24, 0x00	; 0
    3232:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
	COLUMN_BLOCK_PAGE_ADDRESSER(false); //obtain the column address
    3236:	80 e0       	ldi	r24, 0x00	; 0
    3238:	0e 94 89 13 	call	0x2712	; 0x2712 <COLUMN_BLOCK_PAGE_ADDRESSER>

	USART_Data("---Block/Page Address--- 3 bytes \n");
    323c:	6f e1       	ldi	r22, 0x1F	; 31
    323e:	76 e0       	ldi	r23, 0x06	; 6
    3240:	80 e0       	ldi	r24, 0x00	; 0
    3242:	0e 94 de 20 	call	0x41bc	; 0x41bc <USART_Data>
	COLUMN_BLOCK_PAGE_ADDRESSER(true); //obtain the Block/Page address
    3246:	81 e0       	ldi	r24, 0x01	; 1
    3248:	0e 94 89 13 	call	0x2712	; 0x2712 <COLUMN_BLOCK_PAGE_ADDRESSER>
		
	for (int i = 0; i < PAGES_PER_BLOCK; i++)
    324c:	c0 e0       	ldi	r28, 0x00	; 0
    324e:	d0 e0       	ldi	r29, 0x00	; 0
    3250:	3b c0       	rjmp	.+118    	; 0x32c8 <Page_Tester+0xaa>
	{
		CLEAR_ARR();
    3252:	0e 94 22 20 	call	0x4044	; 0x4044 <CLEAR_ARR>
		FLASH_Page_Read();
    3256:	0e 94 04 21 	call	0x4208	; 0x4208 <FLASH_Page_Read>
		
		if (Byte_Address[4] == 0x40) //break loop if passed this point (x3F) is where all page bits are set to 1
    325a:	80 91 09 03 	lds	r24, 0x0309	; 0x800309 <Byte_Address+0x4>
    325e:	80 34       	cpi	r24, 0x40	; 64
    3260:	b1 f1       	breq	.+108    	; 0x32ce <Page_Tester+0xb0>
		{
			break;
		}
		
		if (ARR_DAT.data[0] != 0xFF)
    3262:	80 91 0a 03 	lds	r24, 0x030A	; 0x80030a <ARR_DAT>
    3266:	8f 3f       	cpi	r24, 0xFF	; 255
    3268:	a9 f0       	breq	.+42     	; 0x3294 <Page_Tester+0x76>
		{
			Print_To_User(1, 4, "0x%02X This Page is marked bad \n", Byte_Address, ARR_DAT.random_data);
    326a:	85 e0       	ldi	r24, 0x05	; 5
    326c:	93 e0       	ldi	r25, 0x03	; 3
    326e:	7c 01       	movw	r14, r24
    3270:	20 e8       	ldi	r18, 0x80	; 128
    3272:	02 2f       	mov	r16, r18
    3274:	0f 2e       	mov	r0, r31
    3276:	fa e0       	ldi	r31, 0x0A	; 10
    3278:	cf 2e       	mov	r12, r31
    327a:	f3 e0       	ldi	r31, 0x03	; 3
    327c:	df 2e       	mov	r13, r31
    327e:	f0 2d       	mov	r31, r0
    3280:	22 e4       	ldi	r18, 0x42	; 66
    3282:	36 e0       	ldi	r19, 0x06	; 6
    3284:	40 e0       	ldi	r20, 0x00	; 0
    3286:	64 e0       	ldi	r22, 0x04	; 4
    3288:	70 e0       	ldi	r23, 0x00	; 0
    328a:	81 e0       	ldi	r24, 0x01	; 1
    328c:	90 e0       	ldi	r25, 0x00	; 0
    328e:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <Print_To_User>
    3292:	14 c0       	rjmp	.+40     	; 0x32bc <Page_Tester+0x9e>
		}
		else
		{
			Print_To_User(1, 4, "0x%02X This Page is clean \n", Byte_Address, ARR_DAT.random_data);
    3294:	85 e0       	ldi	r24, 0x05	; 5
    3296:	93 e0       	ldi	r25, 0x03	; 3
    3298:	7c 01       	movw	r14, r24
    329a:	20 e8       	ldi	r18, 0x80	; 128
    329c:	02 2f       	mov	r16, r18
    329e:	0f 2e       	mov	r0, r31
    32a0:	fa e0       	ldi	r31, 0x0A	; 10
    32a2:	cf 2e       	mov	r12, r31
    32a4:	f3 e0       	ldi	r31, 0x03	; 3
    32a6:	df 2e       	mov	r13, r31
    32a8:	f0 2d       	mov	r31, r0
    32aa:	23 e6       	ldi	r18, 0x63	; 99
    32ac:	36 e0       	ldi	r19, 0x06	; 6
    32ae:	40 e0       	ldi	r20, 0x00	; 0
    32b0:	64 e0       	ldi	r22, 0x04	; 4
    32b2:	70 e0       	ldi	r23, 0x00	; 0
    32b4:	81 e0       	ldi	r24, 0x01	; 1
    32b6:	90 e0       	ldi	r25, 0x00	; 0
    32b8:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <Print_To_User>
		}
		
		Byte_Address[4]++; //increment page hopefully...
    32bc:	e5 e0       	ldi	r30, 0x05	; 5
    32be:	f3 e0       	ldi	r31, 0x03	; 3
    32c0:	84 81       	ldd	r24, Z+4	; 0x04
    32c2:	8f 5f       	subi	r24, 0xFF	; 255
    32c4:	84 83       	std	Z+4, r24	; 0x04
	COLUMN_BLOCK_PAGE_ADDRESSER(false); //obtain the column address

	USART_Data("---Block/Page Address--- 3 bytes \n");
	COLUMN_BLOCK_PAGE_ADDRESSER(true); //obtain the Block/Page address
		
	for (int i = 0; i < PAGES_PER_BLOCK; i++)
    32c6:	21 96       	adiw	r28, 0x01	; 1
    32c8:	c0 34       	cpi	r28, 0x40	; 64
    32ca:	d1 05       	cpc	r29, r1
    32cc:	14 f2       	brlt	.-124    	; 0x3252 <Page_Tester+0x34>
			Print_To_User(1, 4, "0x%02X This Page is clean \n", Byte_Address, ARR_DAT.random_data);
		}
		
		Byte_Address[4]++; //increment page hopefully...
	}
}
    32ce:	df 91       	pop	r29
    32d0:	cf 91       	pop	r28
    32d2:	0f 91       	pop	r16
    32d4:	ff 90       	pop	r15
    32d6:	ef 90       	pop	r14
    32d8:	df 90       	pop	r13
    32da:	cf 90       	pop	r12
    32dc:	08 95       	ret

Disassembly of section .text.libgcc:

000048cc <__xload_1>:
    48cc:	57 fd       	sbrc	r21, 7
    48ce:	03 c0       	rjmp	.+6      	; 0x48d6 <__xload_1+0xa>
    48d0:	5b bf       	out	0x3b, r21	; 59
    48d2:	67 91       	elpm	r22, Z+
    48d4:	08 95       	ret
    48d6:	60 81       	ld	r22, Z
    48d8:	08 95       	ret

Disassembly of section .text.__dummy_fini:

0000495e <_fini>:
    495e:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00004960 <__funcs_on_exit>:
    4960:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00004962 <__simulator_exit>:
    4962:	08 95       	ret

Disassembly of section .text.exit:

0000484a <exit>:
    484a:	ec 01       	movw	r28, r24
    484c:	0e 94 b0 24 	call	0x4960	; 0x4960 <__funcs_on_exit>
    4850:	0e 94 af 24 	call	0x495e	; 0x495e <_fini>
    4854:	ce 01       	movw	r24, r28
    4856:	0e 94 b1 24 	call	0x4962	; 0x4962 <__simulator_exit>
    485a:	ce 01       	movw	r24, r28
    485c:	0e 94 ad 24 	call	0x495a	; 0x495a <_Exit>

Disassembly of section .text.__wrap_sprintf:

000046aa <_sprintf_cdnopuxX>:
    46aa:	a0 e0       	ldi	r26, 0x00	; 0
    46ac:	b0 e0       	ldi	r27, 0x00	; 0
    46ae:	eb e5       	ldi	r30, 0x5B	; 91
    46b0:	f3 e2       	ldi	r31, 0x23	; 35
    46b2:	0c 94 7c 22 	jmp	0x44f8	; 0x44f8 <__prologue_saves__+0x20>
    46b6:	9e 01       	movw	r18, r28
    46b8:	25 5f       	subi	r18, 0xF5	; 245
    46ba:	3f 4f       	sbci	r19, 0xFF	; 255
    46bc:	48 85       	ldd	r20, Y+8	; 0x08
    46be:	59 85       	ldd	r21, Y+9	; 0x09
    46c0:	6a 85       	ldd	r22, Y+10	; 0x0a
    46c2:	8e 81       	ldd	r24, Y+6	; 0x06
    46c4:	9f 81       	ldd	r25, Y+7	; 0x07
    46c6:	0e 94 f6 23 	call	0x47ec	; 0x47ec <__vsprintf>
    46ca:	e2 e0       	ldi	r30, 0x02	; 2
    46cc:	0c 94 b3 22 	jmp	0x4566	; 0x4566 <__epilogue_restores__+0x20>

Disassembly of section .text.__fmt_s:

00003154 <__fmt_s>:
    3154:	2f 92       	push	r2
    3156:	3f 92       	push	r3
    3158:	4f 92       	push	r4
    315a:	6f 92       	push	r6
    315c:	7f 92       	push	r7
    315e:	8f 92       	push	r8
    3160:	af 92       	push	r10
    3162:	bf 92       	push	r11
    3164:	cf 92       	push	r12
    3166:	df 92       	push	r13
    3168:	ef 92       	push	r14
    316a:	ff 92       	push	r15
    316c:	0f 93       	push	r16
    316e:	1f 93       	push	r17
    3170:	cf 93       	push	r28
    3172:	df 93       	push	r29
    3174:	cd b7       	in	r28, 0x3d	; 61
    3176:	de b7       	in	r29, 0x3e	; 62
    3178:	27 97       	sbiw	r28, 0x07	; 7
    317a:	0f b6       	in	r0, 0x3f	; 63
    317c:	f8 94       	cli
    317e:	de bf       	out	0x3e, r29	; 62
    3180:	0f be       	out	0x3f, r0	; 63
    3182:	cd bf       	out	0x3d, r28	; 61
    3184:	6c 01       	movw	r12, r24
    3186:	7b 01       	movw	r14, r22
    3188:	39 01       	movw	r6, r18
    318a:	84 2e       	mov	r8, r20
    318c:	98 01       	movw	r18, r16
    318e:	88 ec       	ldi	r24, 0xC8	; 200
    3190:	28 2e       	mov	r2, r24
    3192:	86 e0       	ldi	r24, 0x06	; 6
    3194:	38 2e       	mov	r3, r24
    3196:	80 e0       	ldi	r24, 0x00	; 0
    3198:	48 2e       	mov	r4, r24
    319a:	87 e0       	ldi	r24, 0x07	; 7
    319c:	f1 01       	movw	r30, r2
    319e:	ae 01       	movw	r20, r28
    31a0:	4f 5f       	subi	r20, 0xFF	; 255
    31a2:	5f 4f       	sbci	r21, 0xFF	; 255
    31a4:	da 01       	movw	r26, r20
    31a6:	74 2d       	mov	r23, r4
    31a8:	0e 94 dc 23 	call	0x47b8	; 0x47b8 <__movmemx_qi>
    31ac:	f7 01       	movw	r30, r14
    31ae:	02 81       	ldd	r16, Z+2	; 0x02
    31b0:	13 81       	ldd	r17, Z+3	; 0x03
    31b2:	a4 80       	ldd	r10, Z+4	; 0x04
    31b4:	b5 80       	ldd	r11, Z+5	; 0x05
    31b6:	e0 80       	ld	r14, Z
    31b8:	f1 80       	ldd	r15, Z+1	; 0x01
    31ba:	61 14       	cp	r6, r1
    31bc:	71 04       	cpc	r7, r1
    31be:	81 04       	cpc	r8, r1
    31c0:	19 f4       	brne	.+6      	; 0x31c8 <__fmt_s+0x74>
    31c2:	3a 01       	movw	r6, r20
    31c4:	f0 e8       	ldi	r31, 0x80	; 128
    31c6:	8f 2e       	mov	r8, r31
    31c8:	21 15       	cp	r18, r1
    31ca:	31 05       	cpc	r19, r1
    31cc:	29 f4       	brne	.+10     	; 0x31d8 <__fmt_s+0x84>
    31ce:	88 2d       	mov	r24, r8
    31d0:	b3 01       	movw	r22, r6
    31d2:	0e 94 8d 23 	call	0x471a	; 0x471a <strlen>
    31d6:	9c 01       	movw	r18, r24
    31d8:	17 fd       	sbrc	r17, 7
    31da:	04 c0       	rjmp	.+8      	; 0x31e4 <__fmt_s+0x90>
    31dc:	02 17       	cp	r16, r18
    31de:	13 07       	cpc	r17, r19
    31e0:	08 f4       	brcc	.+2      	; 0x31e4 <__fmt_s+0x90>
    31e2:	98 01       	movw	r18, r16
    31e4:	85 01       	movw	r16, r10
    31e6:	68 2d       	mov	r22, r8
    31e8:	a3 01       	movw	r20, r6
    31ea:	c6 01       	movw	r24, r12
    31ec:	0e 94 0d 16 	call	0x2c1a	; 0x2c1a <__pad>
    31f0:	27 96       	adiw	r28, 0x07	; 7
    31f2:	0f b6       	in	r0, 0x3f	; 63
    31f4:	f8 94       	cli
    31f6:	de bf       	out	0x3e, r29	; 62
    31f8:	0f be       	out	0x3f, r0	; 63
    31fa:	cd bf       	out	0x3d, r28	; 61
    31fc:	df 91       	pop	r29
    31fe:	cf 91       	pop	r28
    3200:	1f 91       	pop	r17
    3202:	0f 91       	pop	r16
    3204:	ff 90       	pop	r15
    3206:	ef 90       	pop	r14
    3208:	df 90       	pop	r13
    320a:	cf 90       	pop	r12
    320c:	bf 90       	pop	r11
    320e:	af 90       	pop	r10
    3210:	8f 90       	pop	r8
    3212:	7f 90       	pop	r7
    3214:	6f 90       	pop	r6
    3216:	4f 90       	pop	r4
    3218:	3f 90       	pop	r3
    321a:	2f 90       	pop	r2
    321c:	08 95       	ret

Disassembly of section .text.__out:

00003f78 <__out>:
    3f78:	6f 92       	push	r6
    3f7a:	7f 92       	push	r7
    3f7c:	8f 92       	push	r8
    3f7e:	cf 92       	push	r12
    3f80:	df 92       	push	r13
    3f82:	ef 92       	push	r14
    3f84:	0f 93       	push	r16
    3f86:	1f 93       	push	r17
    3f88:	cf 93       	push	r28
    3f8a:	df 93       	push	r29
    3f8c:	8c 01       	movw	r16, r24
    3f8e:	6a 01       	movw	r12, r20
    3f90:	e6 2e       	mov	r14, r22
    3f92:	e9 01       	movw	r28, r18
    3f94:	3a 01       	movw	r6, r20
    3f96:	86 2e       	mov	r8, r22
    3f98:	62 0e       	add	r6, r18
    3f9a:	73 1e       	adc	r7, r19
    3f9c:	81 1c       	adc	r8, r1
    3f9e:	37 fd       	sbrc	r19, 7
    3fa0:	8a 94       	dec	r8
    3fa2:	c6 14       	cp	r12, r6
    3fa4:	d7 04       	cpc	r13, r7
    3fa6:	e8 04       	cpc	r14, r8
    3fa8:	81 f0       	breq	.+32     	; 0x3fca <__out+0x52>
    3faa:	f6 01       	movw	r30, r12
    3fac:	5e 2d       	mov	r21, r14
    3fae:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    3fb2:	86 2f       	mov	r24, r22
    3fb4:	b8 01       	movw	r22, r16
    3fb6:	08 2e       	mov	r0, r24
    3fb8:	00 0c       	add	r0, r0
    3fba:	99 0b       	sbc	r25, r25
    3fbc:	0e 94 b2 1d 	call	0x3b64	; 0x3b64 <fputc>
    3fc0:	8f ef       	ldi	r24, 0xFF	; 255
    3fc2:	c8 1a       	sub	r12, r24
    3fc4:	d8 0a       	sbc	r13, r24
    3fc6:	e8 0a       	sbc	r14, r24
    3fc8:	ec cf       	rjmp	.-40     	; 0x3fa2 <__out+0x2a>
    3fca:	ce 01       	movw	r24, r28
    3fcc:	df 91       	pop	r29
    3fce:	cf 91       	pop	r28
    3fd0:	1f 91       	pop	r17
    3fd2:	0f 91       	pop	r16
    3fd4:	ef 90       	pop	r14
    3fd6:	df 90       	pop	r13
    3fd8:	cf 90       	pop	r12
    3fda:	8f 90       	pop	r8
    3fdc:	7f 90       	pop	r7
    3fde:	6f 90       	pop	r6
    3fe0:	08 95       	ret

Disassembly of section .text.__pad:

00002c1a <__pad>:
    2c1a:	2f 92       	push	r2
    2c1c:	3f 92       	push	r3
    2c1e:	4f 92       	push	r4
    2c20:	6f 92       	push	r6
    2c22:	7f 92       	push	r7
    2c24:	8f 92       	push	r8
    2c26:	af 92       	push	r10
    2c28:	bf 92       	push	r11
    2c2a:	cf 92       	push	r12
    2c2c:	df 92       	push	r13
    2c2e:	ef 92       	push	r14
    2c30:	ff 92       	push	r15
    2c32:	0f 93       	push	r16
    2c34:	1f 93       	push	r17
    2c36:	cf 93       	push	r28
    2c38:	df 93       	push	r29
    2c3a:	cd b7       	in	r28, 0x3d	; 61
    2c3c:	de b7       	in	r29, 0x3e	; 62
    2c3e:	66 97       	sbiw	r28, 0x16	; 22
    2c40:	0f b6       	in	r0, 0x3f	; 63
    2c42:	f8 94       	cli
    2c44:	de bf       	out	0x3e, r29	; 62
    2c46:	0f be       	out	0x3f, r0	; 63
    2c48:	cd bf       	out	0x3d, r28	; 61
    2c4a:	5c 01       	movw	r10, r24
    2c4c:	3a 01       	movw	r6, r20
    2c4e:	86 2e       	mov	r8, r22
    2c50:	69 01       	movw	r12, r18
    2c52:	c7 01       	movw	r24, r14
    2c54:	81 70       	andi	r24, 0x01	; 1
    2c56:	99 27       	eor	r25, r25
    2c58:	9c 8b       	std	Y+20, r25	; 0x14
    2c5a:	8b 8b       	std	Y+19, r24	; 0x13
    2c5c:	e0 fc       	sbrc	r14, 0
    2c5e:	1d c0       	rjmp	.+58     	; 0x2c9a <__pad+0x80>
    2c60:	20 17       	cp	r18, r16
    2c62:	31 07       	cpc	r19, r17
    2c64:	d4 f4       	brge	.+52     	; 0x2c9a <__pad+0x80>
    2c66:	78 01       	movw	r14, r16
    2c68:	ec 18       	sub	r14, r12
    2c6a:	fd 08       	sbc	r15, r13
    2c6c:	fe 8a       	std	Y+22, r15	; 0x16
    2c6e:	ed 8a       	std	Y+21, r14	; 0x15
    2c70:	a7 01       	movw	r20, r14
    2c72:	91 e1       	ldi	r25, 0x11	; 17
    2c74:	e9 16       	cp	r14, r25
    2c76:	f1 04       	cpc	r15, r1
    2c78:	10 f0       	brcs	.+4      	; 0x2c7e <__pad+0x64>
    2c7a:	40 e1       	ldi	r20, 0x10	; 16
    2c7c:	50 e0       	ldi	r21, 0x00	; 0
    2c7e:	60 e2       	ldi	r22, 0x20	; 32
    2c80:	70 e0       	ldi	r23, 0x00	; 0
    2c82:	ce 01       	movw	r24, r28
    2c84:	01 96       	adiw	r24, 0x01	; 1
    2c86:	9a 8b       	std	Y+18, r25	; 0x12
    2c88:	89 8b       	std	Y+17, r24	; 0x11
    2c8a:	0e 94 30 24 	call	0x4860	; 0x4860 <memset>
    2c8e:	89 89       	ldd	r24, Y+17	; 0x11
    2c90:	9a 89       	ldd	r25, Y+18	; 0x12
    2c92:	1c 01       	movw	r2, r24
    2c94:	20 e8       	ldi	r18, 0x80	; 128
    2c96:	42 2e       	mov	r4, r18
    2c98:	0b c0       	rjmp	.+22     	; 0x2cb0 <__pad+0x96>
    2c9a:	96 01       	movw	r18, r12
    2c9c:	68 2d       	mov	r22, r8
    2c9e:	a3 01       	movw	r20, r6
    2ca0:	c5 01       	movw	r24, r10
    2ca2:	0e 94 bc 1f 	call	0x3f78	; 0x3f78 <__out>
    2ca6:	c0 16       	cp	r12, r16
    2ca8:	d1 06       	cpc	r13, r17
    2caa:	ec f2       	brlt	.-70     	; 0x2c66 <__pad+0x4c>
    2cac:	c6 01       	movw	r24, r12
    2cae:	25 c0       	rjmp	.+74     	; 0x2cfa <__pad+0xe0>
    2cb0:	90 e1       	ldi	r25, 0x10	; 16
    2cb2:	e9 16       	cp	r14, r25
    2cb4:	f1 04       	cpc	r15, r1
    2cb6:	58 f0       	brcs	.+22     	; 0x2cce <__pad+0xb4>
    2cb8:	20 e1       	ldi	r18, 0x10	; 16
    2cba:	30 e0       	ldi	r19, 0x00	; 0
    2cbc:	64 2d       	mov	r22, r4
    2cbe:	a1 01       	movw	r20, r2
    2cc0:	c5 01       	movw	r24, r10
    2cc2:	0e 94 bc 1f 	call	0x3f78	; 0x3f78 <__out>
    2cc6:	80 e1       	ldi	r24, 0x10	; 16
    2cc8:	e8 1a       	sub	r14, r24
    2cca:	f1 08       	sbc	r15, r1
    2ccc:	f1 cf       	rjmp	.-30     	; 0x2cb0 <__pad+0x96>
    2cce:	2d 89       	ldd	r18, Y+21	; 0x15
    2cd0:	3e 89       	ldd	r19, Y+22	; 0x16
    2cd2:	2f 70       	andi	r18, 0x0F	; 15
    2cd4:	33 27       	eor	r19, r19
    2cd6:	89 89       	ldd	r24, Y+17	; 0x11
    2cd8:	9a 89       	ldd	r25, Y+18	; 0x12
    2cda:	ac 01       	movw	r20, r24
    2cdc:	60 e8       	ldi	r22, 0x80	; 128
    2cde:	c5 01       	movw	r24, r10
    2ce0:	0e 94 bc 1f 	call	0x3f78	; 0x3f78 <__out>
    2ce4:	8b 89       	ldd	r24, Y+19	; 0x13
    2ce6:	9c 89       	ldd	r25, Y+20	; 0x14
    2ce8:	89 2b       	or	r24, r25
    2cea:	31 f4       	brne	.+12     	; 0x2cf8 <__pad+0xde>
    2cec:	96 01       	movw	r18, r12
    2cee:	68 2d       	mov	r22, r8
    2cf0:	a3 01       	movw	r20, r6
    2cf2:	c5 01       	movw	r24, r10
    2cf4:	0e 94 bc 1f 	call	0x3f78	; 0x3f78 <__out>
    2cf8:	c8 01       	movw	r24, r16
    2cfa:	66 96       	adiw	r28, 0x16	; 22
    2cfc:	0f b6       	in	r0, 0x3f	; 63
    2cfe:	f8 94       	cli
    2d00:	de bf       	out	0x3e, r29	; 62
    2d02:	0f be       	out	0x3f, r0	; 63
    2d04:	cd bf       	out	0x3d, r28	; 61
    2d06:	df 91       	pop	r29
    2d08:	cf 91       	pop	r28
    2d0a:	1f 91       	pop	r17
    2d0c:	0f 91       	pop	r16
    2d0e:	ff 90       	pop	r15
    2d10:	ef 90       	pop	r14
    2d12:	df 90       	pop	r13
    2d14:	cf 90       	pop	r12
    2d16:	bf 90       	pop	r11
    2d18:	af 90       	pop	r10
    2d1a:	8f 90       	pop	r8
    2d1c:	7f 90       	pop	r7
    2d1e:	6f 90       	pop	r6
    2d20:	4f 90       	pop	r4
    2d22:	3f 90       	pop	r3
    2d24:	2f 90       	pop	r2
    2d26:	08 95       	ret

Disassembly of section .text.__fmt_state:

00003714 <__fmt_state>:
    3714:	cf 92       	push	r12
    3716:	df 92       	push	r13
    3718:	ef 92       	push	r14
    371a:	dc 01       	movw	r26, r24
    371c:	90 e0       	ldi	r25, 0x00	; 0
    371e:	29 2f       	mov	r18, r25
    3720:	30 e0       	ldi	r19, 0x00	; 0
    3722:	22 0f       	add	r18, r18
    3724:	33 1f       	adc	r19, r19
    3726:	69 01       	movw	r12, r18
    3728:	03 2e       	mov	r0, r19
    372a:	00 0c       	add	r0, r0
    372c:	ee 08       	sbc	r14, r14
    372e:	6e 2d       	mov	r22, r14
    3730:	a6 01       	movw	r20, r12
    3732:	41 58       	subi	r20, 0x81	; 129
    3734:	59 4f       	sbci	r21, 0xF9	; 249
    3736:	6f 4f       	sbci	r22, 0xFF	; 255
    3738:	6a 01       	movw	r12, r20
    373a:	e6 2e       	mov	r14, r22
    373c:	fa 01       	movw	r30, r20
    373e:	5e 2d       	mov	r21, r14
    3740:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    3744:	86 2f       	mov	r24, r22
    3746:	61 11       	cpse	r22, r1
    3748:	0e c0       	rjmp	.+28     	; 0x3766 <__fmt_state+0x52>
    374a:	2f 5f       	subi	r18, 0xFF	; 255
    374c:	3f 4f       	sbci	r19, 0xFF	; 255
    374e:	03 2e       	mov	r0, r19
    3750:	00 0c       	add	r0, r0
    3752:	44 0b       	sbc	r20, r20
    3754:	21 58       	subi	r18, 0x81	; 129
    3756:	39 4f       	sbci	r19, 0xF9	; 249
    3758:	4f 4f       	sbci	r20, 0xFF	; 255
    375a:	f9 01       	movw	r30, r18
    375c:	54 2f       	mov	r21, r20
    375e:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    3762:	86 2f       	mov	r24, r22
    3764:	25 c0       	rjmp	.+74     	; 0x37b0 <__fmt_state+0x9c>
    3766:	cd 90       	ld	r12, X+
    3768:	dd 90       	ld	r13, X+
    376a:	ec 90       	ld	r14, X
    376c:	12 97       	sbiw	r26, 0x02	; 2
    376e:	f6 01       	movw	r30, r12
    3770:	5e 2d       	mov	r21, r14
    3772:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    3776:	86 13       	cpse	r24, r22
    3778:	16 c0       	rjmp	.+44     	; 0x37a6 <__fmt_state+0x92>
    377a:	2f 5f       	subi	r18, 0xFF	; 255
    377c:	3f 4f       	sbci	r19, 0xFF	; 255
    377e:	03 2e       	mov	r0, r19
    3780:	00 0c       	add	r0, r0
    3782:	44 0b       	sbc	r20, r20
    3784:	21 58       	subi	r18, 0x81	; 129
    3786:	39 4f       	sbci	r19, 0xF9	; 249
    3788:	4f 4f       	sbci	r20, 0xFF	; 255
    378a:	f9 01       	movw	r30, r18
    378c:	54 2f       	mov	r21, r20
    378e:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    3792:	96 2f       	mov	r25, r22
    3794:	5f ef       	ldi	r21, 0xFF	; 255
    3796:	c5 1a       	sub	r12, r21
    3798:	d5 0a       	sbc	r13, r21
    379a:	e5 0a       	sbc	r14, r21
    379c:	cd 92       	st	X+, r12
    379e:	dd 92       	st	X+, r13
    37a0:	ec 92       	st	X, r14
    37a2:	12 97       	sbiw	r26, 0x02	; 2
    37a4:	01 c0       	rjmp	.+2      	; 0x37a8 <__fmt_state+0x94>
    37a6:	9f 5f       	subi	r25, 0xFF	; 255
    37a8:	9b 30       	cpi	r25, 0x0B	; 11
    37aa:	08 f4       	brcc	.+2      	; 0x37ae <__fmt_state+0x9a>
    37ac:	b8 cf       	rjmp	.-144    	; 0x371e <__fmt_state+0xa>
    37ae:	89 2f       	mov	r24, r25
    37b0:	ef 90       	pop	r14
    37b2:	df 90       	pop	r13
    37b4:	cf 90       	pop	r12
    37b6:	08 95       	ret

Disassembly of section .text.__printf_core:

000006d6 <__printf_core>:
 6d6:	a3 ea       	ldi	r26, 0xA3	; 163
 6d8:	b0 e0       	ldi	r27, 0x00	; 0
 6da:	e1 e7       	ldi	r30, 0x71	; 113
 6dc:	f3 e0       	ldi	r31, 0x03	; 3
 6de:	0c 94 6c 22 	jmp	0x44d8	; 0x44d8 <__prologue_saves__>
 6e2:	4c 01       	movw	r8, r24
 6e4:	59 01       	movw	r10, r18
 6e6:	c7 56       	subi	r28, 0x67	; 103
 6e8:	df 4f       	sbci	r29, 0xFF	; 255
 6ea:	48 83       	st	Y, r20
 6ec:	59 83       	std	Y+1, r21	; 0x01
 6ee:	6a 83       	std	Y+2, r22	; 0x02
 6f0:	c9 59       	subi	r28, 0x99	; 153
 6f2:	d0 40       	sbci	r29, 0x00	; 0
 6f4:	21 2c       	mov	r2, r1
 6f6:	31 2c       	mov	r3, r1
 6f8:	6e 01       	movw	r12, r28
 6fa:	2b e8       	ldi	r18, 0x8B	; 139
 6fc:	c2 0e       	add	r12, r18
 6fe:	d1 1c       	adc	r13, r1
 700:	85 e2       	ldi	r24, 0x25	; 37
 702:	78 2e       	mov	r7, r24
 704:	26 01       	movw	r4, r12
 706:	30 e8       	ldi	r19, 0x80	; 128
 708:	63 2e       	mov	r6, r19
 70a:	ce 01       	movw	r24, r28
 70c:	8d 56       	subi	r24, 0x6D	; 109
 70e:	9f 4f       	sbci	r25, 0xFF	; 255
 710:	c4 56       	subi	r28, 0x64	; 100
 712:	df 4f       	sbci	r29, 0xFF	; 255
 714:	99 83       	std	Y+1, r25	; 0x01
 716:	88 83       	st	Y, r24
 718:	cc 59       	subi	r28, 0x9C	; 156
 71a:	d0 40       	sbci	r29, 0x00	; 0
 71c:	9c 01       	movw	r18, r24
 71e:	40 e8       	ldi	r20, 0x80	; 128
 720:	cf 55       	subi	r28, 0x5F	; 95
 722:	df 4f       	sbci	r29, 0xFF	; 255
 724:	28 83       	st	Y, r18
 726:	39 83       	std	Y+1, r19	; 0x01
 728:	4a 83       	std	Y+2, r20	; 0x02
 72a:	c1 5a       	subi	r28, 0xA1	; 161
 72c:	d0 40       	sbci	r29, 0x00	; 0
 72e:	c7 56       	subi	r28, 0x67	; 103
 730:	df 4f       	sbci	r29, 0xFF	; 255
 732:	48 81       	ld	r20, Y
 734:	c9 59       	subi	r28, 0x99	; 153
 736:	d0 40       	sbci	r29, 0x00	; 0
 738:	c6 56       	subi	r28, 0x66	; 102
 73a:	df 4f       	sbci	r29, 0xFF	; 255
 73c:	b8 81       	ld	r27, Y
 73e:	ca 59       	subi	r28, 0x9A	; 154
 740:	d0 40       	sbci	r29, 0x00	; 0
 742:	c5 56       	subi	r28, 0x65	; 101
 744:	df 4f       	sbci	r29, 0xFF	; 255
 746:	78 81       	ld	r23, Y
 748:	cb 59       	subi	r28, 0x9B	; 155
 74a:	d0 40       	sbci	r29, 0x00	; 0
 74c:	e4 2f       	mov	r30, r20
 74e:	fb 2f       	mov	r31, r27
 750:	57 2f       	mov	r21, r23
 752:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
 756:	66 23       	and	r22, r22
 758:	09 f4       	brne	.+2      	; 0x75c <__printf_core+0x86>
 75a:	d0 c3       	rjmp	.+1952   	; 0xefc <__printf_core+0x826>
 75c:	cf 57       	subi	r28, 0x7F	; 127
 75e:	df 4f       	sbci	r29, 0xFF	; 255
 760:	19 82       	std	Y+1, r1	; 0x01
 762:	18 82       	st	Y, r1
 764:	c1 58       	subi	r28, 0x81	; 129
 766:	d0 40       	sbci	r29, 0x00	; 0
 768:	8f ef       	ldi	r24, 0xFF	; 255
 76a:	9f ef       	ldi	r25, 0xFF	; 255
 76c:	cd 57       	subi	r28, 0x7D	; 125
 76e:	df 4f       	sbci	r29, 0xFF	; 255
 770:	99 83       	std	Y+1, r25	; 0x01
 772:	88 83       	st	Y, r24
 774:	c3 58       	subi	r28, 0x83	; 131
 776:	d0 40       	sbci	r29, 0x00	; 0
 778:	cb 57       	subi	r28, 0x7B	; 123
 77a:	df 4f       	sbci	r29, 0xFF	; 255
 77c:	19 82       	std	Y+1, r1	; 0x01
 77e:	18 82       	st	Y, r1
 780:	c5 58       	subi	r28, 0x85	; 133
 782:	d0 40       	sbci	r29, 0x00	; 0
 784:	e1 e0       	ldi	r30, 0x01	; 1
 786:	f0 e0       	ldi	r31, 0x00	; 0
 788:	ec 0f       	add	r30, r28
 78a:	fd 1f       	adc	r31, r29
 78c:	c9 57       	subi	r28, 0x79	; 121
 78e:	df 4f       	sbci	r29, 0xFF	; 255
 790:	f9 83       	std	Y+1, r31	; 0x01
 792:	e8 83       	st	Y, r30
 794:	c7 58       	subi	r28, 0x87	; 135
 796:	d0 40       	sbci	r29, 0x00	; 0
 798:	20 e8       	ldi	r18, 0x80	; 128
 79a:	30 e0       	ldi	r19, 0x00	; 0
 79c:	c7 57       	subi	r28, 0x77	; 119
 79e:	df 4f       	sbci	r29, 0xFF	; 255
 7a0:	39 83       	std	Y+1, r19	; 0x01
 7a2:	28 83       	st	Y, r18
 7a4:	c9 58       	subi	r28, 0x89	; 137
 7a6:	d0 40       	sbci	r29, 0x00	; 0
 7a8:	84 2f       	mov	r24, r20
 7aa:	9b 2f       	mov	r25, r27
 7ac:	a7 2f       	mov	r26, r23
 7ae:	e1 2c       	mov	r14, r1
 7b0:	f1 2c       	mov	r15, r1
 7b2:	fc 01       	movw	r30, r24
 7b4:	5a 2f       	mov	r21, r26
 7b6:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
 7ba:	61 11       	cpse	r22, r1
 7bc:	1d c0       	rjmp	.+58     	; 0x7f8 <__printf_core+0x122>
 7be:	e1 14       	cp	r14, r1
 7c0:	f1 04       	cpc	r15, r1
 7c2:	11 f1       	breq	.+68     	; 0x808 <__printf_core+0x132>
 7c4:	97 01       	movw	r18, r14
 7c6:	5b 2f       	mov	r21, r27
 7c8:	67 2f       	mov	r22, r23
 7ca:	c4 01       	movw	r24, r8
 7cc:	0e 94 bc 1f 	call	0x3f78	; 0x3f78 <__out>
 7d0:	c7 56       	subi	r28, 0x67	; 103
 7d2:	df 4f       	sbci	r29, 0xFF	; 255
 7d4:	88 81       	ld	r24, Y
 7d6:	99 81       	ldd	r25, Y+1	; 0x01
 7d8:	aa 81       	ldd	r26, Y+2	; 0x02
 7da:	c9 59       	subi	r28, 0x99	; 153
 7dc:	d0 40       	sbci	r29, 0x00	; 0
 7de:	8e 0d       	add	r24, r14
 7e0:	9f 1d       	adc	r25, r15
 7e2:	a1 1d       	adc	r26, r1
 7e4:	f7 fc       	sbrc	r15, 7
 7e6:	aa 95       	dec	r26
 7e8:	c7 56       	subi	r28, 0x67	; 103
 7ea:	df 4f       	sbci	r29, 0xFF	; 255
 7ec:	88 83       	st	Y, r24
 7ee:	99 83       	std	Y+1, r25	; 0x01
 7f0:	aa 83       	std	Y+2, r26	; 0x02
 7f2:	c9 59       	subi	r28, 0x99	; 153
 7f4:	d0 40       	sbci	r29, 0x00	; 0
 7f6:	08 c0       	rjmp	.+16     	; 0x808 <__printf_core+0x132>
 7f8:	01 96       	adiw	r24, 0x01	; 1
 7fa:	a1 1d       	adc	r26, r1
 7fc:	65 32       	cpi	r22, 0x25	; 37
 7fe:	f9 f2       	breq	.-66     	; 0x7be <__printf_core+0xe8>
 800:	3f ef       	ldi	r19, 0xFF	; 255
 802:	e3 1a       	sub	r14, r19
 804:	f3 0a       	sbc	r15, r19
 806:	d5 cf       	rjmp	.-86     	; 0x7b2 <__printf_core+0xdc>
 808:	c7 56       	subi	r28, 0x67	; 103
 80a:	df 4f       	sbci	r29, 0xFF	; 255
 80c:	88 81       	ld	r24, Y
 80e:	99 81       	ldd	r25, Y+1	; 0x01
 810:	aa 81       	ldd	r26, Y+2	; 0x02
 812:	c9 59       	subi	r28, 0x99	; 153
 814:	d0 40       	sbci	r29, 0x00	; 0
 816:	fc 01       	movw	r30, r24
 818:	5a 2f       	mov	r21, r26
 81a:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
 81e:	65 32       	cpi	r22, 0x25	; 37
 820:	09 f0       	breq	.+2      	; 0x824 <__printf_core+0x14e>
 822:	5a c3       	rjmp	.+1716   	; 0xed8 <__printf_core+0x802>
 824:	9c 01       	movw	r18, r24
 826:	4a 2f       	mov	r20, r26
 828:	2f 5f       	subi	r18, 0xFF	; 255
 82a:	3f 4f       	sbci	r19, 0xFF	; 255
 82c:	4f 4f       	sbci	r20, 0xFF	; 255
 82e:	c2 56       	subi	r28, 0x62	; 98
 830:	df 4f       	sbci	r29, 0xFF	; 255
 832:	28 83       	st	Y, r18
 834:	39 83       	std	Y+1, r19	; 0x01
 836:	4a 83       	std	Y+2, r20	; 0x02
 838:	ce 59       	subi	r28, 0x9E	; 158
 83a:	d0 40       	sbci	r29, 0x00	; 0
 83c:	c7 56       	subi	r28, 0x67	; 103
 83e:	df 4f       	sbci	r29, 0xFF	; 255
 840:	28 83       	st	Y, r18
 842:	39 83       	std	Y+1, r19	; 0x01
 844:	4a 83       	std	Y+2, r20	; 0x02
 846:	c9 59       	subi	r28, 0x99	; 153
 848:	d0 40       	sbci	r29, 0x00	; 0
 84a:	c7 56       	subi	r28, 0x67	; 103
 84c:	df 4f       	sbci	r29, 0xFF	; 255
 84e:	88 81       	ld	r24, Y
 850:	99 81       	ldd	r25, Y+1	; 0x01
 852:	aa 81       	ldd	r26, Y+2	; 0x02
 854:	c9 59       	subi	r28, 0x99	; 153
 856:	d0 40       	sbci	r29, 0x00	; 0
 858:	fc 01       	movw	r30, r24
 85a:	5a 2f       	mov	r21, r26
 85c:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
 860:	6b 32       	cpi	r22, 0x2B	; 43
 862:	41 f4       	brne	.+16     	; 0x874 <__printf_core+0x19e>
 864:	cf 57       	subi	r28, 0x7F	; 127
 866:	df 4f       	sbci	r29, 0xFF	; 255
 868:	28 81       	ld	r18, Y
 86a:	39 81       	ldd	r19, Y+1	; 0x01
 86c:	c1 58       	subi	r28, 0x81	; 129
 86e:	d0 40       	sbci	r29, 0x00	; 0
 870:	24 60       	ori	r18, 0x04	; 4
 872:	0b c0       	rjmp	.+22     	; 0x88a <__printf_core+0x1b4>
 874:	6c 32       	cpi	r22, 0x2C	; 44
 876:	cc f0       	brlt	.+50     	; 0x8aa <__printf_core+0x1d4>
 878:	6d 32       	cpi	r22, 0x2D	; 45
 87a:	59 f5       	brne	.+86     	; 0x8d2 <__printf_core+0x1fc>
 87c:	cf 57       	subi	r28, 0x7F	; 127
 87e:	df 4f       	sbci	r29, 0xFF	; 255
 880:	28 81       	ld	r18, Y
 882:	39 81       	ldd	r19, Y+1	; 0x01
 884:	c1 58       	subi	r28, 0x81	; 129
 886:	d0 40       	sbci	r29, 0x00	; 0
 888:	21 60       	ori	r18, 0x01	; 1
 88a:	cf 57       	subi	r28, 0x7F	; 127
 88c:	df 4f       	sbci	r29, 0xFF	; 255
 88e:	39 83       	std	Y+1, r19	; 0x01
 890:	28 83       	st	Y, r18
 892:	c1 58       	subi	r28, 0x81	; 129
 894:	d0 40       	sbci	r29, 0x00	; 0
 896:	01 96       	adiw	r24, 0x01	; 1
 898:	a1 1d       	adc	r26, r1
 89a:	c7 56       	subi	r28, 0x67	; 103
 89c:	df 4f       	sbci	r29, 0xFF	; 255
 89e:	88 83       	st	Y, r24
 8a0:	99 83       	std	Y+1, r25	; 0x01
 8a2:	aa 83       	std	Y+2, r26	; 0x02
 8a4:	c9 59       	subi	r28, 0x99	; 153
 8a6:	d0 40       	sbci	r29, 0x00	; 0
 8a8:	d0 cf       	rjmp	.-96     	; 0x84a <__printf_core+0x174>
 8aa:	60 32       	cpi	r22, 0x20	; 32
 8ac:	41 f4       	brne	.+16     	; 0x8be <__printf_core+0x1e8>
 8ae:	cf 57       	subi	r28, 0x7F	; 127
 8b0:	df 4f       	sbci	r29, 0xFF	; 255
 8b2:	28 81       	ld	r18, Y
 8b4:	39 81       	ldd	r19, Y+1	; 0x01
 8b6:	c1 58       	subi	r28, 0x81	; 129
 8b8:	d0 40       	sbci	r29, 0x00	; 0
 8ba:	28 60       	ori	r18, 0x08	; 8
 8bc:	e6 cf       	rjmp	.-52     	; 0x88a <__printf_core+0x1b4>
 8be:	63 32       	cpi	r22, 0x23	; 35
 8c0:	91 f4       	brne	.+36     	; 0x8e6 <__printf_core+0x210>
 8c2:	cf 57       	subi	r28, 0x7F	; 127
 8c4:	df 4f       	sbci	r29, 0xFF	; 255
 8c6:	28 81       	ld	r18, Y
 8c8:	39 81       	ldd	r19, Y+1	; 0x01
 8ca:	c1 58       	subi	r28, 0x81	; 129
 8cc:	d0 40       	sbci	r29, 0x00	; 0
 8ce:	20 61       	ori	r18, 0x10	; 16
 8d0:	dc cf       	rjmp	.-72     	; 0x88a <__printf_core+0x1b4>
 8d2:	60 33       	cpi	r22, 0x30	; 48
 8d4:	41 f4       	brne	.+16     	; 0x8e6 <__printf_core+0x210>
 8d6:	cf 57       	subi	r28, 0x7F	; 127
 8d8:	df 4f       	sbci	r29, 0xFF	; 255
 8da:	28 81       	ld	r18, Y
 8dc:	39 81       	ldd	r19, Y+1	; 0x01
 8de:	c1 58       	subi	r28, 0x81	; 129
 8e0:	d0 40       	sbci	r29, 0x00	; 0
 8e2:	22 60       	ori	r18, 0x02	; 2
 8e4:	d2 cf       	rjmp	.-92     	; 0x88a <__printf_core+0x1b4>
 8e6:	6a 32       	cpi	r22, 0x2A	; 42
 8e8:	99 f5       	brne	.+102    	; 0x950 <__printf_core+0x27a>
 8ea:	01 96       	adiw	r24, 0x01	; 1
 8ec:	a1 1d       	adc	r26, r1
 8ee:	c7 56       	subi	r28, 0x67	; 103
 8f0:	df 4f       	sbci	r29, 0xFF	; 255
 8f2:	88 83       	st	Y, r24
 8f4:	99 83       	std	Y+1, r25	; 0x01
 8f6:	aa 83       	std	Y+2, r26	; 0x02
 8f8:	c9 59       	subi	r28, 0x99	; 153
 8fa:	d0 40       	sbci	r29, 0x00	; 0
 8fc:	d5 01       	movw	r26, r10
 8fe:	ed 91       	ld	r30, X+
 900:	fc 91       	ld	r31, X
 902:	11 97       	sbiw	r26, 0x01	; 1
 904:	cf 01       	movw	r24, r30
 906:	02 96       	adiw	r24, 0x02	; 2
 908:	8d 93       	st	X+, r24
 90a:	9c 93       	st	X, r25
 90c:	80 81       	ld	r24, Z
 90e:	91 81       	ldd	r25, Z+1	; 0x01
 910:	cb 57       	subi	r28, 0x7B	; 123
 912:	df 4f       	sbci	r29, 0xFF	; 255
 914:	99 83       	std	Y+1, r25	; 0x01
 916:	88 83       	st	Y, r24
 918:	c5 58       	subi	r28, 0x85	; 133
 91a:	d0 40       	sbci	r29, 0x00	; 0
 91c:	97 ff       	sbrs	r25, 7
 91e:	3f c0       	rjmp	.+126    	; 0x99e <__printf_core+0x2c8>
 920:	cf 57       	subi	r28, 0x7F	; 127
 922:	df 4f       	sbci	r29, 0xFF	; 255
 924:	28 81       	ld	r18, Y
 926:	39 81       	ldd	r19, Y+1	; 0x01
 928:	c1 58       	subi	r28, 0x81	; 129
 92a:	d0 40       	sbci	r29, 0x00	; 0
 92c:	b1 e0       	ldi	r27, 0x01	; 1
 92e:	2b 27       	eor	r18, r27
 930:	cf 57       	subi	r28, 0x7F	; 127
 932:	df 4f       	sbci	r29, 0xFF	; 255
 934:	39 83       	std	Y+1, r19	; 0x01
 936:	28 83       	st	Y, r18
 938:	c1 58       	subi	r28, 0x81	; 129
 93a:	d0 40       	sbci	r29, 0x00	; 0
 93c:	91 95       	neg	r25
 93e:	81 95       	neg	r24
 940:	91 09       	sbc	r25, r1
 942:	cb 57       	subi	r28, 0x7B	; 123
 944:	df 4f       	sbci	r29, 0xFF	; 255
 946:	99 83       	std	Y+1, r25	; 0x01
 948:	88 83       	st	Y, r24
 94a:	c5 58       	subi	r28, 0x85	; 133
 94c:	d0 40       	sbci	r29, 0x00	; 0
 94e:	27 c0       	rjmp	.+78     	; 0x99e <__printf_core+0x2c8>
 950:	bc 01       	movw	r22, r24
 952:	8a 2f       	mov	r24, r26
 954:	0e 94 41 1e 	call	0x3c82	; 0x3c82 <atoi>
 958:	cb 57       	subi	r28, 0x7B	; 123
 95a:	df 4f       	sbci	r29, 0xFF	; 255
 95c:	99 83       	std	Y+1, r25	; 0x01
 95e:	88 83       	st	Y, r24
 960:	c5 58       	subi	r28, 0x85	; 133
 962:	d0 40       	sbci	r29, 0x00	; 0
 964:	c7 56       	subi	r28, 0x67	; 103
 966:	df 4f       	sbci	r29, 0xFF	; 255
 968:	88 81       	ld	r24, Y
 96a:	99 81       	ldd	r25, Y+1	; 0x01
 96c:	aa 81       	ldd	r26, Y+2	; 0x02
 96e:	c9 59       	subi	r28, 0x99	; 153
 970:	d0 40       	sbci	r29, 0x00	; 0
 972:	fc 01       	movw	r30, r24
 974:	5a 2f       	mov	r21, r26
 976:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
 97a:	06 2e       	mov	r0, r22
 97c:	00 0c       	add	r0, r0
 97e:	77 0b       	sbc	r23, r23
 980:	60 53       	subi	r22, 0x30	; 48
 982:	71 09       	sbc	r23, r1
 984:	6a 30       	cpi	r22, 0x0A	; 10
 986:	71 05       	cpc	r23, r1
 988:	50 f4       	brcc	.+20     	; 0x99e <__printf_core+0x2c8>
 98a:	01 96       	adiw	r24, 0x01	; 1
 98c:	a1 1d       	adc	r26, r1
 98e:	c7 56       	subi	r28, 0x67	; 103
 990:	df 4f       	sbci	r29, 0xFF	; 255
 992:	88 83       	st	Y, r24
 994:	99 83       	std	Y+1, r25	; 0x01
 996:	aa 83       	std	Y+2, r26	; 0x02
 998:	c9 59       	subi	r28, 0x99	; 153
 99a:	d0 40       	sbci	r29, 0x00	; 0
 99c:	e3 cf       	rjmp	.-58     	; 0x964 <__printf_core+0x28e>
 99e:	cf 57       	subi	r28, 0x7F	; 127
 9a0:	df 4f       	sbci	r29, 0xFF	; 255
 9a2:	88 81       	ld	r24, Y
 9a4:	99 81       	ldd	r25, Y+1	; 0x01
 9a6:	c1 58       	subi	r28, 0x81	; 129
 9a8:	d0 40       	sbci	r29, 0x00	; 0
 9aa:	80 ff       	sbrs	r24, 0
 9ac:	07 c0       	rjmp	.+14     	; 0x9bc <__printf_core+0x2e6>
 9ae:	8d 7f       	andi	r24, 0xFD	; 253
 9b0:	cf 57       	subi	r28, 0x7F	; 127
 9b2:	df 4f       	sbci	r29, 0xFF	; 255
 9b4:	99 83       	std	Y+1, r25	; 0x01
 9b6:	88 83       	st	Y, r24
 9b8:	c1 58       	subi	r28, 0x81	; 129
 9ba:	d0 40       	sbci	r29, 0x00	; 0
 9bc:	c7 56       	subi	r28, 0x67	; 103
 9be:	df 4f       	sbci	r29, 0xFF	; 255
 9c0:	88 81       	ld	r24, Y
 9c2:	99 81       	ldd	r25, Y+1	; 0x01
 9c4:	aa 81       	ldd	r26, Y+2	; 0x02
 9c6:	c9 59       	subi	r28, 0x99	; 153
 9c8:	d0 40       	sbci	r29, 0x00	; 0
 9ca:	fc 01       	movw	r30, r24
 9cc:	5a 2f       	mov	r21, r26
 9ce:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
 9d2:	6e 32       	cpi	r22, 0x2E	; 46
 9d4:	09 f0       	breq	.+2      	; 0x9d8 <__printf_core+0x302>
 9d6:	59 c0       	rjmp	.+178    	; 0xa8a <__printf_core+0x3b4>
 9d8:	cd 57       	subi	r28, 0x7D	; 125
 9da:	df 4f       	sbci	r29, 0xFF	; 255
 9dc:	19 82       	std	Y+1, r1	; 0x01
 9de:	18 82       	st	Y, r1
 9e0:	c3 58       	subi	r28, 0x83	; 131
 9e2:	d0 40       	sbci	r29, 0x00	; 0
 9e4:	9c 01       	movw	r18, r24
 9e6:	4a 2f       	mov	r20, r26
 9e8:	2f 5f       	subi	r18, 0xFF	; 255
 9ea:	3f 4f       	sbci	r19, 0xFF	; 255
 9ec:	4f 4f       	sbci	r20, 0xFF	; 255
 9ee:	c7 56       	subi	r28, 0x67	; 103
 9f0:	df 4f       	sbci	r29, 0xFF	; 255
 9f2:	28 83       	st	Y, r18
 9f4:	39 83       	std	Y+1, r19	; 0x01
 9f6:	4a 83       	std	Y+2, r20	; 0x02
 9f8:	c9 59       	subi	r28, 0x99	; 153
 9fa:	d0 40       	sbci	r29, 0x00	; 0
 9fc:	f9 01       	movw	r30, r18
 9fe:	54 2f       	mov	r21, r20
 a00:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
 a04:	6a 32       	cpi	r22, 0x2A	; 42
 a06:	d1 f4       	brne	.+52     	; 0xa3c <__printf_core+0x366>
 a08:	02 96       	adiw	r24, 0x02	; 2
 a0a:	a1 1d       	adc	r26, r1
 a0c:	c7 56       	subi	r28, 0x67	; 103
 a0e:	df 4f       	sbci	r29, 0xFF	; 255
 a10:	88 83       	st	Y, r24
 a12:	99 83       	std	Y+1, r25	; 0x01
 a14:	aa 83       	std	Y+2, r26	; 0x02
 a16:	c9 59       	subi	r28, 0x99	; 153
 a18:	d0 40       	sbci	r29, 0x00	; 0
 a1a:	d5 01       	movw	r26, r10
 a1c:	ed 91       	ld	r30, X+
 a1e:	fc 91       	ld	r31, X
 a20:	11 97       	sbiw	r26, 0x01	; 1
 a22:	cf 01       	movw	r24, r30
 a24:	02 96       	adiw	r24, 0x02	; 2
 a26:	8d 93       	st	X+, r24
 a28:	9c 93       	st	X, r25
 a2a:	80 81       	ld	r24, Z
 a2c:	91 81       	ldd	r25, Z+1	; 0x01
 a2e:	cd 57       	subi	r28, 0x7D	; 125
 a30:	df 4f       	sbci	r29, 0xFF	; 255
 a32:	99 83       	std	Y+1, r25	; 0x01
 a34:	88 83       	st	Y, r24
 a36:	c3 58       	subi	r28, 0x83	; 131
 a38:	d0 40       	sbci	r29, 0x00	; 0
 a3a:	27 c0       	rjmp	.+78     	; 0xa8a <__printf_core+0x3b4>
 a3c:	84 2f       	mov	r24, r20
 a3e:	b9 01       	movw	r22, r18
 a40:	0e 94 41 1e 	call	0x3c82	; 0x3c82 <atoi>
 a44:	cd 57       	subi	r28, 0x7D	; 125
 a46:	df 4f       	sbci	r29, 0xFF	; 255
 a48:	99 83       	std	Y+1, r25	; 0x01
 a4a:	88 83       	st	Y, r24
 a4c:	c3 58       	subi	r28, 0x83	; 131
 a4e:	d0 40       	sbci	r29, 0x00	; 0
 a50:	c7 56       	subi	r28, 0x67	; 103
 a52:	df 4f       	sbci	r29, 0xFF	; 255
 a54:	88 81       	ld	r24, Y
 a56:	99 81       	ldd	r25, Y+1	; 0x01
 a58:	aa 81       	ldd	r26, Y+2	; 0x02
 a5a:	c9 59       	subi	r28, 0x99	; 153
 a5c:	d0 40       	sbci	r29, 0x00	; 0
 a5e:	fc 01       	movw	r30, r24
 a60:	5a 2f       	mov	r21, r26
 a62:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
 a66:	06 2e       	mov	r0, r22
 a68:	00 0c       	add	r0, r0
 a6a:	77 0b       	sbc	r23, r23
 a6c:	60 53       	subi	r22, 0x30	; 48
 a6e:	71 09       	sbc	r23, r1
 a70:	6a 30       	cpi	r22, 0x0A	; 10
 a72:	71 05       	cpc	r23, r1
 a74:	50 f4       	brcc	.+20     	; 0xa8a <__printf_core+0x3b4>
 a76:	01 96       	adiw	r24, 0x01	; 1
 a78:	a1 1d       	adc	r26, r1
 a7a:	c7 56       	subi	r28, 0x67	; 103
 a7c:	df 4f       	sbci	r29, 0xFF	; 255
 a7e:	88 83       	st	Y, r24
 a80:	99 83       	std	Y+1, r25	; 0x01
 a82:	aa 83       	std	Y+2, r26	; 0x02
 a84:	c9 59       	subi	r28, 0x99	; 153
 a86:	d0 40       	sbci	r29, 0x00	; 0
 a88:	e3 cf       	rjmp	.-58     	; 0xa50 <__printf_core+0x37a>
 a8a:	ce 01       	movw	r24, r28
 a8c:	87 56       	subi	r24, 0x67	; 103
 a8e:	9f 4f       	sbci	r25, 0xFF	; 255
 a90:	0e 94 8a 1b 	call	0x3714	; 0x3714 <__fmt_state>
 a94:	18 2f       	mov	r17, r24
 a96:	c7 56       	subi	r28, 0x67	; 103
 a98:	df 4f       	sbci	r29, 0xFF	; 255
 a9a:	98 81       	ld	r25, Y
 a9c:	c9 59       	subi	r28, 0x99	; 153
 a9e:	d0 40       	sbci	r29, 0x00	; 0
 aa0:	c6 56       	subi	r28, 0x66	; 102
 aa2:	df 4f       	sbci	r29, 0xFF	; 255
 aa4:	88 81       	ld	r24, Y
 aa6:	ca 59       	subi	r28, 0x9A	; 154
 aa8:	d0 40       	sbci	r29, 0x00	; 0
 aaa:	c5 56       	subi	r28, 0x65	; 101
 aac:	df 4f       	sbci	r29, 0xFF	; 255
 aae:	58 81       	ld	r21, Y
 ab0:	cb 59       	subi	r28, 0x9B	; 155
 ab2:	d0 40       	sbci	r29, 0x00	; 0
 ab4:	e9 2f       	mov	r30, r25
 ab6:	f8 2f       	mov	r31, r24
 ab8:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
 abc:	86 2f       	mov	r24, r22
 abe:	66 0f       	add	r22, r22
 ac0:	99 0b       	sbc	r25, r25
 ac2:	0e 94 42 24 	call	0x4884	; 0x4884 <tolower>
 ac6:	89 36       	cpi	r24, 0x69	; 105
 ac8:	91 05       	cpc	r25, r1
 aca:	09 f4       	brne	.+2      	; 0xace <__printf_core+0x3f8>
 acc:	5b c0       	rjmp	.+182    	; 0xb84 <__printf_core+0x4ae>
 ace:	b4 f4       	brge	.+44     	; 0xafc <__printf_core+0x426>
 ad0:	83 36       	cpi	r24, 0x63	; 99
 ad2:	91 05       	cpc	r25, r1
 ad4:	09 f4       	brne	.+2      	; 0xad8 <__printf_core+0x402>
 ad6:	69 c1       	rjmp	.+722    	; 0xdaa <__printf_core+0x6d4>
 ad8:	44 f4       	brge	.+16     	; 0xaea <__printf_core+0x414>
 ada:	85 32       	cpi	r24, 0x25	; 37
 adc:	91 05       	cpc	r25, r1
 ade:	09 f4       	brne	.+2      	; 0xae2 <__printf_core+0x40c>
 ae0:	a4 c1       	rjmp	.+840    	; 0xe2a <__printf_core+0x754>
 ae2:	81 36       	cpi	r24, 0x61	; 97
 ae4:	91 05       	cpc	r25, r1
 ae6:	29 f1       	breq	.+74     	; 0xb32 <__printf_core+0x45c>
 ae8:	b6 c1       	rjmp	.+876    	; 0xe56 <__printf_core+0x780>
 aea:	84 36       	cpi	r24, 0x64	; 100
 aec:	91 05       	cpc	r25, r1
 aee:	09 f4       	brne	.+2      	; 0xaf2 <__printf_core+0x41c>
 af0:	49 c0       	rjmp	.+146    	; 0xb84 <__printf_core+0x4ae>
 af2:	88 36       	cpi	r24, 0x68	; 104
 af4:	91 05       	cpc	r25, r1
 af6:	0c f4       	brge	.+2      	; 0xafa <__printf_core+0x424>
 af8:	2f c1       	rjmp	.+606    	; 0xd58 <__printf_core+0x682>
 afa:	ad c1       	rjmp	.+858    	; 0xe56 <__printf_core+0x780>
 afc:	80 37       	cpi	r24, 0x70	; 112
 afe:	91 05       	cpc	r25, r1
 b00:	09 f4       	brne	.+2      	; 0xb04 <__printf_core+0x42e>
 b02:	cd c0       	rjmp	.+410    	; 0xc9e <__printf_core+0x5c8>
 b04:	4c f4       	brge	.+18     	; 0xb18 <__printf_core+0x442>
 b06:	8e 36       	cpi	r24, 0x6E	; 110
 b08:	91 05       	cpc	r25, r1
 b0a:	09 f4       	brne	.+2      	; 0xb0e <__printf_core+0x438>
 b0c:	1b c1       	rjmp	.+566    	; 0xd44 <__printf_core+0x66e>
 b0e:	8f 36       	cpi	r24, 0x6F	; 111
 b10:	91 05       	cpc	r25, r1
 b12:	09 f4       	brne	.+2      	; 0xb16 <__printf_core+0x440>
 b14:	7d c0       	rjmp	.+250    	; 0xc10 <__printf_core+0x53a>
 b16:	9f c1       	rjmp	.+830    	; 0xe56 <__printf_core+0x780>
 b18:	85 37       	cpi	r24, 0x75	; 117
 b1a:	91 05       	cpc	r25, r1
 b1c:	09 f4       	brne	.+2      	; 0xb20 <__printf_core+0x44a>
 b1e:	55 c0       	rjmp	.+170    	; 0xbca <__printf_core+0x4f4>
 b20:	88 37       	cpi	r24, 0x78	; 120
 b22:	91 05       	cpc	r25, r1
 b24:	09 f4       	brne	.+2      	; 0xb28 <__printf_core+0x452>
 b26:	97 c0       	rjmp	.+302    	; 0xc56 <__printf_core+0x580>
 b28:	83 37       	cpi	r24, 0x73	; 115
 b2a:	91 05       	cpc	r25, r1
 b2c:	09 f0       	breq	.+2      	; 0xb30 <__printf_core+0x45a>
 b2e:	93 c1       	rjmp	.+806    	; 0xe56 <__printf_core+0x780>
 b30:	5b c1       	rjmp	.+694    	; 0xde8 <__printf_core+0x712>
 b32:	61 2f       	mov	r22, r17
 b34:	70 e0       	ldi	r23, 0x00	; 0
 b36:	a5 01       	movw	r20, r10
 b38:	c6 01       	movw	r24, r12
 b3a:	0e 94 f4 21 	call	0x43e8	; 0x43e8 <__pop_float>
 b3e:	89 2b       	or	r24, r25
 b40:	09 f4       	brne	.+2      	; 0xb44 <__printf_core+0x46e>
 b42:	ba c1       	rjmp	.+884    	; 0xeb8 <__printf_core+0x7e2>
 b44:	c7 56       	subi	r28, 0x67	; 103
 b46:	df 4f       	sbci	r29, 0xFF	; 255
 b48:	88 81       	ld	r24, Y
 b4a:	99 81       	ldd	r25, Y+1	; 0x01
 b4c:	aa 81       	ldd	r26, Y+2	; 0x02
 b4e:	c9 59       	subi	r28, 0x99	; 153
 b50:	d0 40       	sbci	r29, 0x00	; 0
 b52:	9c 01       	movw	r18, r24
 b54:	4a 2f       	mov	r20, r26
 b56:	2f 5f       	subi	r18, 0xFF	; 255
 b58:	3f 4f       	sbci	r19, 0xFF	; 255
 b5a:	4f 4f       	sbci	r20, 0xFF	; 255
 b5c:	c7 56       	subi	r28, 0x67	; 103
 b5e:	df 4f       	sbci	r29, 0xFF	; 255
 b60:	28 83       	st	Y, r18
 b62:	39 83       	std	Y+1, r19	; 0x01
 b64:	4a 83       	std	Y+2, r20	; 0x02
 b66:	c9 59       	subi	r28, 0x99	; 153
 b68:	d0 40       	sbci	r29, 0x00	; 0
 b6a:	fc 01       	movw	r30, r24
 b6c:	5a 2f       	mov	r21, r26
 b6e:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
 b72:	26 2f       	mov	r18, r22
 b74:	a6 01       	movw	r20, r12
 b76:	be 01       	movw	r22, r28
 b78:	6f 57       	subi	r22, 0x7F	; 127
 b7a:	7f 4f       	sbci	r23, 0xFF	; 255
 b7c:	c4 01       	movw	r24, r8
 b7e:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__fmt_a>
 b82:	97 c1       	rjmp	.+814    	; 0xeb2 <__printf_core+0x7dc>
 b84:	61 2f       	mov	r22, r17
 b86:	70 e0       	ldi	r23, 0x00	; 0
 b88:	95 01       	movw	r18, r10
 b8a:	41 e0       	ldi	r20, 0x01	; 1
 b8c:	50 e0       	ldi	r21, 0x00	; 0
 b8e:	c6 01       	movw	r24, r12
 b90:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <__pop_int>
 b94:	89 2b       	or	r24, r25
 b96:	09 f4       	brne	.+2      	; 0xb9a <__printf_core+0x4c4>
 b98:	8f c1       	rjmp	.+798    	; 0xeb8 <__printf_core+0x7e2>
 b9a:	c7 56       	subi	r28, 0x67	; 103
 b9c:	df 4f       	sbci	r29, 0xFF	; 255
 b9e:	88 81       	ld	r24, Y
 ba0:	99 81       	ldd	r25, Y+1	; 0x01
 ba2:	aa 81       	ldd	r26, Y+2	; 0x02
 ba4:	c9 59       	subi	r28, 0x99	; 153
 ba6:	d0 40       	sbci	r29, 0x00	; 0
 ba8:	01 96       	adiw	r24, 0x01	; 1
 baa:	a1 1d       	adc	r26, r1
 bac:	c7 56       	subi	r28, 0x67	; 103
 bae:	df 4f       	sbci	r29, 0xFF	; 255
 bb0:	88 83       	st	Y, r24
 bb2:	99 83       	std	Y+1, r25	; 0x01
 bb4:	aa 83       	std	Y+2, r26	; 0x02
 bb6:	c9 59       	subi	r28, 0x99	; 153
 bb8:	d0 40       	sbci	r29, 0x00	; 0
 bba:	a6 01       	movw	r20, r12
 bbc:	be 01       	movw	r22, r28
 bbe:	6f 57       	subi	r22, 0x7F	; 127
 bc0:	7f 4f       	sbci	r23, 0xFF	; 255
 bc2:	c4 01       	movw	r24, r8
 bc4:	0e 94 11 12 	call	0x2422	; 0x2422 <__fmt_d>
 bc8:	74 c1       	rjmp	.+744    	; 0xeb2 <__printf_core+0x7dc>
 bca:	61 2f       	mov	r22, r17
 bcc:	70 e0       	ldi	r23, 0x00	; 0
 bce:	95 01       	movw	r18, r10
 bd0:	40 e0       	ldi	r20, 0x00	; 0
 bd2:	50 e0       	ldi	r21, 0x00	; 0
 bd4:	c6 01       	movw	r24, r12
 bd6:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <__pop_int>
 bda:	89 2b       	or	r24, r25
 bdc:	09 f4       	brne	.+2      	; 0xbe0 <__printf_core+0x50a>
 bde:	6c c1       	rjmp	.+728    	; 0xeb8 <__printf_core+0x7e2>
 be0:	c7 56       	subi	r28, 0x67	; 103
 be2:	df 4f       	sbci	r29, 0xFF	; 255
 be4:	88 81       	ld	r24, Y
 be6:	99 81       	ldd	r25, Y+1	; 0x01
 be8:	aa 81       	ldd	r26, Y+2	; 0x02
 bea:	c9 59       	subi	r28, 0x99	; 153
 bec:	d0 40       	sbci	r29, 0x00	; 0
 bee:	01 96       	adiw	r24, 0x01	; 1
 bf0:	a1 1d       	adc	r26, r1
 bf2:	c7 56       	subi	r28, 0x67	; 103
 bf4:	df 4f       	sbci	r29, 0xFF	; 255
 bf6:	88 83       	st	Y, r24
 bf8:	99 83       	std	Y+1, r25	; 0x01
 bfa:	aa 83       	std	Y+2, r26	; 0x02
 bfc:	c9 59       	subi	r28, 0x99	; 153
 bfe:	d0 40       	sbci	r29, 0x00	; 0
 c00:	a6 01       	movw	r20, r12
 c02:	be 01       	movw	r22, r28
 c04:	6f 57       	subi	r22, 0x7F	; 127
 c06:	7f 4f       	sbci	r23, 0xFF	; 255
 c08:	c4 01       	movw	r24, r8
 c0a:	0e 94 89 1a 	call	0x3512	; 0x3512 <__fmt_u>
 c0e:	51 c1       	rjmp	.+674    	; 0xeb2 <__printf_core+0x7dc>
 c10:	61 2f       	mov	r22, r17
 c12:	70 e0       	ldi	r23, 0x00	; 0
 c14:	95 01       	movw	r18, r10
 c16:	40 e0       	ldi	r20, 0x00	; 0
 c18:	50 e0       	ldi	r21, 0x00	; 0
 c1a:	c6 01       	movw	r24, r12
 c1c:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <__pop_int>
 c20:	89 2b       	or	r24, r25
 c22:	09 f4       	brne	.+2      	; 0xc26 <__printf_core+0x550>
 c24:	49 c1       	rjmp	.+658    	; 0xeb8 <__printf_core+0x7e2>
 c26:	c7 56       	subi	r28, 0x67	; 103
 c28:	df 4f       	sbci	r29, 0xFF	; 255
 c2a:	88 81       	ld	r24, Y
 c2c:	99 81       	ldd	r25, Y+1	; 0x01
 c2e:	aa 81       	ldd	r26, Y+2	; 0x02
 c30:	c9 59       	subi	r28, 0x99	; 153
 c32:	d0 40       	sbci	r29, 0x00	; 0
 c34:	01 96       	adiw	r24, 0x01	; 1
 c36:	a1 1d       	adc	r26, r1
 c38:	c7 56       	subi	r28, 0x67	; 103
 c3a:	df 4f       	sbci	r29, 0xFF	; 255
 c3c:	88 83       	st	Y, r24
 c3e:	99 83       	std	Y+1, r25	; 0x01
 c40:	aa 83       	std	Y+2, r26	; 0x02
 c42:	c9 59       	subi	r28, 0x99	; 153
 c44:	d0 40       	sbci	r29, 0x00	; 0
 c46:	a6 01       	movw	r20, r12
 c48:	be 01       	movw	r22, r28
 c4a:	6f 57       	subi	r22, 0x7F	; 127
 c4c:	7f 4f       	sbci	r23, 0xFF	; 255
 c4e:	c4 01       	movw	r24, r8
 c50:	0e 94 6f 17 	call	0x2ede	; 0x2ede <__fmt_o>
 c54:	2e c1       	rjmp	.+604    	; 0xeb2 <__printf_core+0x7dc>
 c56:	61 2f       	mov	r22, r17
 c58:	70 e0       	ldi	r23, 0x00	; 0
 c5a:	95 01       	movw	r18, r10
 c5c:	40 e0       	ldi	r20, 0x00	; 0
 c5e:	50 e0       	ldi	r21, 0x00	; 0
 c60:	c6 01       	movw	r24, r12
 c62:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <__pop_int>
 c66:	89 2b       	or	r24, r25
 c68:	09 f4       	brne	.+2      	; 0xc6c <__printf_core+0x596>
 c6a:	26 c1       	rjmp	.+588    	; 0xeb8 <__printf_core+0x7e2>
 c6c:	c7 56       	subi	r28, 0x67	; 103
 c6e:	df 4f       	sbci	r29, 0xFF	; 255
 c70:	88 81       	ld	r24, Y
 c72:	99 81       	ldd	r25, Y+1	; 0x01
 c74:	aa 81       	ldd	r26, Y+2	; 0x02
 c76:	c9 59       	subi	r28, 0x99	; 153
 c78:	d0 40       	sbci	r29, 0x00	; 0
 c7a:	9c 01       	movw	r18, r24
 c7c:	4a 2f       	mov	r20, r26
 c7e:	2f 5f       	subi	r18, 0xFF	; 255
 c80:	3f 4f       	sbci	r19, 0xFF	; 255
 c82:	4f 4f       	sbci	r20, 0xFF	; 255
 c84:	c7 56       	subi	r28, 0x67	; 103
 c86:	df 4f       	sbci	r29, 0xFF	; 255
 c88:	28 83       	st	Y, r18
 c8a:	39 83       	std	Y+1, r19	; 0x01
 c8c:	4a 83       	std	Y+2, r20	; 0x02
 c8e:	c9 59       	subi	r28, 0x99	; 153
 c90:	d0 40       	sbci	r29, 0x00	; 0
 c92:	fc 01       	movw	r30, r24
 c94:	5a 2f       	mov	r21, r26
 c96:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
 c9a:	26 2f       	mov	r18, r22
 c9c:	4b c0       	rjmp	.+150    	; 0xd34 <__printf_core+0x65e>
 c9e:	95 01       	movw	r18, r10
 ca0:	40 e0       	ldi	r20, 0x00	; 0
 ca2:	50 e0       	ldi	r21, 0x00	; 0
 ca4:	60 ef       	ldi	r22, 0xF0	; 240
 ca6:	70 e0       	ldi	r23, 0x00	; 0
 ca8:	c6 01       	movw	r24, r12
 caa:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <__pop_int>
 cae:	89 2b       	or	r24, r25
 cb0:	09 f4       	brne	.+2      	; 0xcb4 <__printf_core+0x5de>
 cb2:	02 c1       	rjmp	.+516    	; 0xeb8 <__printf_core+0x7e2>
 cb4:	c7 56       	subi	r28, 0x67	; 103
 cb6:	df 4f       	sbci	r29, 0xFF	; 255
 cb8:	88 81       	ld	r24, Y
 cba:	99 81       	ldd	r25, Y+1	; 0x01
 cbc:	aa 81       	ldd	r26, Y+2	; 0x02
 cbe:	c9 59       	subi	r28, 0x99	; 153
 cc0:	d0 40       	sbci	r29, 0x00	; 0
 cc2:	01 96       	adiw	r24, 0x01	; 1
 cc4:	a1 1d       	adc	r26, r1
 cc6:	c7 56       	subi	r28, 0x67	; 103
 cc8:	df 4f       	sbci	r29, 0xFF	; 255
 cca:	88 83       	st	Y, r24
 ccc:	99 83       	std	Y+1, r25	; 0x01
 cce:	aa 83       	std	Y+2, r26	; 0x02
 cd0:	c9 59       	subi	r28, 0x99	; 153
 cd2:	d0 40       	sbci	r29, 0x00	; 0
 cd4:	86 e0       	ldi	r24, 0x06	; 6
 cd6:	2f ec       	ldi	r18, 0xCF	; 207
 cd8:	36 e0       	ldi	r19, 0x06	; 6
 cda:	40 e0       	ldi	r20, 0x00	; 0
 cdc:	f9 01       	movw	r30, r18
 cde:	de 01       	movw	r26, r28
 ce0:	ad 56       	subi	r26, 0x6D	; 109
 ce2:	bf 4f       	sbci	r27, 0xFF	; 255
 ce4:	74 2f       	mov	r23, r20
 ce6:	0e 94 dc 23 	call	0x47b8	; 0x47b8 <__movmemx_qi>
 cea:	d6 01       	movw	r26, r12
 cec:	2c 91       	ld	r18, X
 cee:	11 96       	adiw	r26, 0x01	; 1
 cf0:	3c 91       	ld	r19, X
 cf2:	11 97       	sbiw	r26, 0x01	; 1
 cf4:	12 96       	adiw	r26, 0x02	; 2
 cf6:	4c 91       	ld	r20, X
 cf8:	12 97       	sbiw	r26, 0x02	; 2
 cfa:	13 96       	adiw	r26, 0x03	; 3
 cfc:	5c 91       	ld	r21, X
 cfe:	13 97       	sbiw	r26, 0x03	; 3
 d00:	14 96       	adiw	r26, 0x04	; 4
 d02:	6c 91       	ld	r22, X
 d04:	14 97       	sbiw	r26, 0x04	; 4
 d06:	15 96       	adiw	r26, 0x05	; 5
 d08:	7c 91       	ld	r23, X
 d0a:	15 97       	sbiw	r26, 0x05	; 5
 d0c:	16 96       	adiw	r26, 0x06	; 6
 d0e:	8c 91       	ld	r24, X
 d10:	16 97       	sbiw	r26, 0x06	; 6
 d12:	17 96       	adiw	r26, 0x07	; 7
 d14:	9c 91       	ld	r25, X
 d16:	a0 e0       	ldi	r26, 0x00	; 0
 d18:	0e 94 02 24 	call	0x4804	; 0x4804 <__cmpdi2_s8>
 d1c:	51 f4       	brne	.+20     	; 0xd32 <__printf_core+0x65c>
 d1e:	00 e0       	ldi	r16, 0x00	; 0
 d20:	10 e0       	ldi	r17, 0x00	; 0
 d22:	cf 55       	subi	r28, 0x5F	; 95
 d24:	df 4f       	sbci	r29, 0xFF	; 255
 d26:	28 81       	ld	r18, Y
 d28:	39 81       	ldd	r19, Y+1	; 0x01
 d2a:	4a 81       	ldd	r20, Y+2	; 0x02
 d2c:	c1 5a       	subi	r28, 0xA1	; 161
 d2e:	d0 40       	sbci	r29, 0x00	; 0
 d30:	ba c0       	rjmp	.+372    	; 0xea6 <__printf_core+0x7d0>
 d32:	28 e7       	ldi	r18, 0x78	; 120
 d34:	a6 01       	movw	r20, r12
 d36:	be 01       	movw	r22, r28
 d38:	6f 57       	subi	r22, 0x7F	; 127
 d3a:	7f 4f       	sbci	r23, 0xFF	; 255
 d3c:	c4 01       	movw	r24, r8
 d3e:	0e 94 d1 10 	call	0x21a2	; 0x21a2 <__fmt_x>
 d42:	b7 c0       	rjmp	.+366    	; 0xeb2 <__printf_core+0x7dc>
 d44:	61 2f       	mov	r22, r17
 d46:	70 e0       	ldi	r23, 0x00	; 0
 d48:	95 01       	movw	r18, r10
 d4a:	a1 01       	movw	r20, r2
 d4c:	4e 0d       	add	r20, r14
 d4e:	5f 1d       	adc	r21, r15
 d50:	c6 01       	movw	r24, r12
 d52:	0e 94 03 17 	call	0x2e06	; 0x2e06 <__pop_ptr>
 d56:	b0 c0       	rjmp	.+352    	; 0xeb8 <__printf_core+0x7e2>
 d58:	61 2f       	mov	r22, r17
 d5a:	70 e0       	ldi	r23, 0x00	; 0
 d5c:	a5 01       	movw	r20, r10
 d5e:	c6 01       	movw	r24, r12
 d60:	0e 94 f4 21 	call	0x43e8	; 0x43e8 <__pop_float>
 d64:	89 2b       	or	r24, r25
 d66:	09 f4       	brne	.+2      	; 0xd6a <__printf_core+0x694>
 d68:	a7 c0       	rjmp	.+334    	; 0xeb8 <__printf_core+0x7e2>
 d6a:	c7 56       	subi	r28, 0x67	; 103
 d6c:	df 4f       	sbci	r29, 0xFF	; 255
 d6e:	88 81       	ld	r24, Y
 d70:	99 81       	ldd	r25, Y+1	; 0x01
 d72:	aa 81       	ldd	r26, Y+2	; 0x02
 d74:	c9 59       	subi	r28, 0x99	; 153
 d76:	d0 40       	sbci	r29, 0x00	; 0
 d78:	9c 01       	movw	r18, r24
 d7a:	4a 2f       	mov	r20, r26
 d7c:	2f 5f       	subi	r18, 0xFF	; 255
 d7e:	3f 4f       	sbci	r19, 0xFF	; 255
 d80:	4f 4f       	sbci	r20, 0xFF	; 255
 d82:	c7 56       	subi	r28, 0x67	; 103
 d84:	df 4f       	sbci	r29, 0xFF	; 255
 d86:	28 83       	st	Y, r18
 d88:	39 83       	std	Y+1, r19	; 0x01
 d8a:	4a 83       	std	Y+2, r20	; 0x02
 d8c:	c9 59       	subi	r28, 0x99	; 153
 d8e:	d0 40       	sbci	r29, 0x00	; 0
 d90:	fc 01       	movw	r30, r24
 d92:	5a 2f       	mov	r21, r26
 d94:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
 d98:	26 2f       	mov	r18, r22
 d9a:	a6 01       	movw	r20, r12
 d9c:	be 01       	movw	r22, r28
 d9e:	6f 57       	subi	r22, 0x7F	; 127
 da0:	7f 4f       	sbci	r23, 0xFF	; 255
 da2:	c4 01       	movw	r24, r8
 da4:	0e 94 84 07 	call	0xf08	; 0xf08 <__fmt_fp>
 da8:	84 c0       	rjmp	.+264    	; 0xeb2 <__printf_core+0x7dc>
 daa:	10 38       	cpi	r17, 0x80	; 128
 dac:	09 f0       	breq	.+2      	; 0xdb0 <__printf_core+0x6da>
 dae:	84 c0       	rjmp	.+264    	; 0xeb8 <__printf_core+0x7e2>
 db0:	c7 56       	subi	r28, 0x67	; 103
 db2:	df 4f       	sbci	r29, 0xFF	; 255
 db4:	88 81       	ld	r24, Y
 db6:	99 81       	ldd	r25, Y+1	; 0x01
 db8:	aa 81       	ldd	r26, Y+2	; 0x02
 dba:	c9 59       	subi	r28, 0x99	; 153
 dbc:	d0 40       	sbci	r29, 0x00	; 0
 dbe:	01 96       	adiw	r24, 0x01	; 1
 dc0:	a1 1d       	adc	r26, r1
 dc2:	c7 56       	subi	r28, 0x67	; 103
 dc4:	df 4f       	sbci	r29, 0xFF	; 255
 dc6:	88 83       	st	Y, r24
 dc8:	99 83       	std	Y+1, r25	; 0x01
 dca:	aa 83       	std	Y+2, r26	; 0x02
 dcc:	c9 59       	subi	r28, 0x99	; 153
 dce:	d0 40       	sbci	r29, 0x00	; 0
 dd0:	d5 01       	movw	r26, r10
 dd2:	ed 91       	ld	r30, X+
 dd4:	fc 91       	ld	r31, X
 dd6:	11 97       	sbiw	r26, 0x01	; 1
 dd8:	cf 01       	movw	r24, r30
 dda:	02 96       	adiw	r24, 0x02	; 2
 ddc:	8d 93       	st	X+, r24
 dde:	9c 93       	st	X, r25
 de0:	80 81       	ld	r24, Z
 de2:	f6 01       	movw	r30, r12
 de4:	80 83       	st	Z, r24
 de6:	5b c0       	rjmp	.+182    	; 0xe9e <__printf_core+0x7c8>
 de8:	10 38       	cpi	r17, 0x80	; 128
 dea:	09 f0       	breq	.+2      	; 0xdee <__printf_core+0x718>
 dec:	65 c0       	rjmp	.+202    	; 0xeb8 <__printf_core+0x7e2>
 dee:	c7 56       	subi	r28, 0x67	; 103
 df0:	df 4f       	sbci	r29, 0xFF	; 255
 df2:	88 81       	ld	r24, Y
 df4:	99 81       	ldd	r25, Y+1	; 0x01
 df6:	aa 81       	ldd	r26, Y+2	; 0x02
 df8:	c9 59       	subi	r28, 0x99	; 153
 dfa:	d0 40       	sbci	r29, 0x00	; 0
 dfc:	01 96       	adiw	r24, 0x01	; 1
 dfe:	a1 1d       	adc	r26, r1
 e00:	c7 56       	subi	r28, 0x67	; 103
 e02:	df 4f       	sbci	r29, 0xFF	; 255
 e04:	88 83       	st	Y, r24
 e06:	99 83       	std	Y+1, r25	; 0x01
 e08:	aa 83       	std	Y+2, r26	; 0x02
 e0a:	c9 59       	subi	r28, 0x99	; 153
 e0c:	d0 40       	sbci	r29, 0x00	; 0
 e0e:	d5 01       	movw	r26, r10
 e10:	ed 91       	ld	r30, X+
 e12:	fc 91       	ld	r31, X
 e14:	11 97       	sbiw	r26, 0x01	; 1
 e16:	cf 01       	movw	r24, r30
 e18:	03 96       	adiw	r24, 0x03	; 3
 e1a:	8d 93       	st	X+, r24
 e1c:	9c 93       	st	X, r25
 e1e:	20 81       	ld	r18, Z
 e20:	31 81       	ldd	r19, Z+1	; 0x01
 e22:	42 81       	ldd	r20, Z+2	; 0x02
 e24:	00 e0       	ldi	r16, 0x00	; 0
 e26:	10 e0       	ldi	r17, 0x00	; 0
 e28:	3e c0       	rjmp	.+124    	; 0xea6 <__printf_core+0x7d0>
 e2a:	10 38       	cpi	r17, 0x80	; 128
 e2c:	09 f0       	breq	.+2      	; 0xe30 <__printf_core+0x75a>
 e2e:	44 c0       	rjmp	.+136    	; 0xeb8 <__printf_core+0x7e2>
 e30:	c7 56       	subi	r28, 0x67	; 103
 e32:	df 4f       	sbci	r29, 0xFF	; 255
 e34:	88 81       	ld	r24, Y
 e36:	99 81       	ldd	r25, Y+1	; 0x01
 e38:	aa 81       	ldd	r26, Y+2	; 0x02
 e3a:	c9 59       	subi	r28, 0x99	; 153
 e3c:	d0 40       	sbci	r29, 0x00	; 0
 e3e:	01 96       	adiw	r24, 0x01	; 1
 e40:	a1 1d       	adc	r26, r1
 e42:	c7 56       	subi	r28, 0x67	; 103
 e44:	df 4f       	sbci	r29, 0xFF	; 255
 e46:	88 83       	st	Y, r24
 e48:	99 83       	std	Y+1, r25	; 0x01
 e4a:	aa 83       	std	Y+2, r26	; 0x02
 e4c:	c9 59       	subi	r28, 0x99	; 153
 e4e:	d0 40       	sbci	r29, 0x00	; 0
 e50:	f6 01       	movw	r30, r12
 e52:	70 82       	st	Z, r7
 e54:	24 c0       	rjmp	.+72     	; 0xe9e <__printf_core+0x7c8>
 e56:	d6 01       	movw	r26, r12
 e58:	7c 92       	st	X, r7
 e5a:	c2 56       	subi	r28, 0x62	; 98
 e5c:	df 4f       	sbci	r29, 0xFF	; 255
 e5e:	28 81       	ld	r18, Y
 e60:	39 81       	ldd	r19, Y+1	; 0x01
 e62:	4a 81       	ldd	r20, Y+2	; 0x02
 e64:	ce 59       	subi	r28, 0x9E	; 158
 e66:	d0 40       	sbci	r29, 0x00	; 0
 e68:	c7 56       	subi	r28, 0x67	; 103
 e6a:	df 4f       	sbci	r29, 0xFF	; 255
 e6c:	28 83       	st	Y, r18
 e6e:	39 83       	std	Y+1, r19	; 0x01
 e70:	4a 83       	std	Y+2, r20	; 0x02
 e72:	c9 59       	subi	r28, 0x99	; 153
 e74:	d0 40       	sbci	r29, 0x00	; 0
 e76:	cf 57       	subi	r28, 0x7F	; 127
 e78:	df 4f       	sbci	r29, 0xFF	; 255
 e7a:	19 82       	std	Y+1, r1	; 0x01
 e7c:	18 82       	st	Y, r1
 e7e:	c1 58       	subi	r28, 0x81	; 129
 e80:	d0 40       	sbci	r29, 0x00	; 0
 e82:	cb 57       	subi	r28, 0x7B	; 123
 e84:	df 4f       	sbci	r29, 0xFF	; 255
 e86:	19 82       	std	Y+1, r1	; 0x01
 e88:	18 82       	st	Y, r1
 e8a:	c5 58       	subi	r28, 0x85	; 133
 e8c:	d0 40       	sbci	r29, 0x00	; 0
 e8e:	8f ef       	ldi	r24, 0xFF	; 255
 e90:	9f ef       	ldi	r25, 0xFF	; 255
 e92:	cd 57       	subi	r28, 0x7D	; 125
 e94:	df 4f       	sbci	r29, 0xFF	; 255
 e96:	99 83       	std	Y+1, r25	; 0x01
 e98:	88 83       	st	Y, r24
 e9a:	c3 58       	subi	r28, 0x83	; 131
 e9c:	d0 40       	sbci	r29, 0x00	; 0
 e9e:	01 e0       	ldi	r16, 0x01	; 1
 ea0:	10 e0       	ldi	r17, 0x00	; 0
 ea2:	46 2d       	mov	r20, r6
 ea4:	92 01       	movw	r18, r4
 ea6:	be 01       	movw	r22, r28
 ea8:	6f 57       	subi	r22, 0x7F	; 127
 eaa:	7f 4f       	sbci	r23, 0xFF	; 255
 eac:	c4 01       	movw	r24, r8
 eae:	0e 94 aa 18 	call	0x3154	; 0x3154 <__fmt_s>
 eb2:	8e 0d       	add	r24, r14
 eb4:	9f 1d       	adc	r25, r15
 eb6:	11 c0       	rjmp	.+34     	; 0xeda <__printf_core+0x804>
 eb8:	c7 56       	subi	r28, 0x67	; 103
 eba:	df 4f       	sbci	r29, 0xFF	; 255
 ebc:	88 81       	ld	r24, Y
 ebe:	99 81       	ldd	r25, Y+1	; 0x01
 ec0:	aa 81       	ldd	r26, Y+2	; 0x02
 ec2:	c9 59       	subi	r28, 0x99	; 153
 ec4:	d0 40       	sbci	r29, 0x00	; 0
 ec6:	01 96       	adiw	r24, 0x01	; 1
 ec8:	a1 1d       	adc	r26, r1
 eca:	c7 56       	subi	r28, 0x67	; 103
 ecc:	df 4f       	sbci	r29, 0xFF	; 255
 ece:	88 83       	st	Y, r24
 ed0:	99 83       	std	Y+1, r25	; 0x01
 ed2:	aa 83       	std	Y+2, r26	; 0x02
 ed4:	c9 59       	subi	r28, 0x99	; 153
 ed6:	d0 40       	sbci	r29, 0x00	; 0
 ed8:	c7 01       	movw	r24, r14
 eda:	71 01       	movw	r14, r2
 edc:	e8 0e       	add	r14, r24
 ede:	f9 1e       	adc	r15, r25
 ee0:	e2 14       	cp	r14, r2
 ee2:	f3 04       	cpc	r15, r3
 ee4:	4c f4       	brge	.+18     	; 0xef8 <__printf_core+0x822>
 ee6:	8f e4       	ldi	r24, 0x4F	; 79
 ee8:	90 e0       	ldi	r25, 0x00	; 0
 eea:	90 93 0c 04 	sts	0x040C, r25	; 0x80040c <__errno_val+0x1>
 eee:	80 93 0b 04 	sts	0x040B, r24	; 0x80040b <__errno_val>
 ef2:	8f ef       	ldi	r24, 0xFF	; 255
 ef4:	9f ef       	ldi	r25, 0xFF	; 255
 ef6:	03 c0       	rjmp	.+6      	; 0xefe <__printf_core+0x828>
 ef8:	17 01       	movw	r2, r14
 efa:	19 cc       	rjmp	.-1998   	; 0x72e <__printf_core+0x58>
 efc:	c1 01       	movw	r24, r2
 efe:	cd 55       	subi	r28, 0x5D	; 93
 f00:	df 4f       	sbci	r29, 0xFF	; 255
 f02:	e2 e1       	ldi	r30, 0x12	; 18
 f04:	0c 94 a3 22 	jmp	0x4546	; 0x4546 <__epilogue_restores__>

Disassembly of section .text.fputc:

00003b64 <fputc>:
    3b64:	0f 93       	push	r16
    3b66:	1f 93       	push	r17
    3b68:	cf 93       	push	r28
    3b6a:	df 93       	push	r29
    3b6c:	db 01       	movw	r26, r22
    3b6e:	2d 91       	ld	r18, X+
    3b70:	3c 91       	ld	r19, X
    3b72:	11 97       	sbiw	r26, 0x01	; 1
    3b74:	30 ff       	sbrs	r19, 0
    3b76:	25 c0       	rjmp	.+74     	; 0x3bc2 <fputc+0x5e>
    3b78:	17 96       	adiw	r26, 0x07	; 7
    3b7a:	4d 91       	ld	r20, X+
    3b7c:	5c 91       	ld	r21, X
    3b7e:	18 97       	sbiw	r26, 0x08	; 8
    3b80:	15 96       	adiw	r26, 0x05	; 5
    3b82:	2d 91       	ld	r18, X+
    3b84:	3c 91       	ld	r19, X
    3b86:	16 97       	sbiw	r26, 0x06	; 6
    3b88:	42 17       	cp	r20, r18
    3b8a:	53 07       	cpc	r21, r19
    3b8c:	78 f4       	brcc	.+30     	; 0x3bac <fputc+0x48>
    3b8e:	12 96       	adiw	r26, 0x02	; 2
    3b90:	ed 91       	ld	r30, X+
    3b92:	fc 91       	ld	r31, X
    3b94:	13 97       	sbiw	r26, 0x03	; 3
    3b96:	80 83       	st	Z, r24
    3b98:	12 96       	adiw	r26, 0x02	; 2
    3b9a:	2d 91       	ld	r18, X+
    3b9c:	3c 91       	ld	r19, X
    3b9e:	13 97       	sbiw	r26, 0x03	; 3
    3ba0:	2f 5f       	subi	r18, 0xFF	; 255
    3ba2:	3f 4f       	sbci	r19, 0xFF	; 255
    3ba4:	13 96       	adiw	r26, 0x03	; 3
    3ba6:	3c 93       	st	X, r19
    3ba8:	2e 93       	st	-X, r18
    3baa:	12 97       	sbiw	r26, 0x02	; 2
    3bac:	17 96       	adiw	r26, 0x07	; 7
    3bae:	2d 91       	ld	r18, X+
    3bb0:	3c 91       	ld	r19, X
    3bb2:	18 97       	sbiw	r26, 0x08	; 8
    3bb4:	2f 5f       	subi	r18, 0xFF	; 255
    3bb6:	3f 4f       	sbci	r19, 0xFF	; 255
    3bb8:	18 96       	adiw	r26, 0x08	; 8
    3bba:	3c 93       	st	X, r19
    3bbc:	2e 93       	st	-X, r18
    3bbe:	17 97       	sbiw	r26, 0x07	; 7
    3bc0:	15 c0       	rjmp	.+42     	; 0x3bec <fputc+0x88>
    3bc2:	1d 96       	adiw	r26, 0x0d	; 13
    3bc4:	ed 91       	ld	r30, X+
    3bc6:	fc 91       	ld	r31, X
    3bc8:	1e 97       	sbiw	r26, 0x0e	; 14
    3bca:	30 97       	sbiw	r30, 0x00	; 0
    3bcc:	19 f4       	brne	.+6      	; 0x3bd4 <fputc+0x70>
    3bce:	8f ef       	ldi	r24, 0xFF	; 255
    3bd0:	9f ef       	ldi	r25, 0xFF	; 255
    3bd2:	0c c0       	rjmp	.+24     	; 0x3bec <fputc+0x88>
    3bd4:	8b 01       	movw	r16, r22
    3bd6:	ec 01       	movw	r28, r24
    3bd8:	19 95       	eicall
    3bda:	89 2b       	or	r24, r25
    3bdc:	c1 f7       	brne	.-16     	; 0x3bce <fputc+0x6a>
    3bde:	f8 01       	movw	r30, r16
    3be0:	87 81       	ldd	r24, Z+7	; 0x07
    3be2:	90 85       	ldd	r25, Z+8	; 0x08
    3be4:	01 96       	adiw	r24, 0x01	; 1
    3be6:	90 87       	std	Z+8, r25	; 0x08
    3be8:	87 83       	std	Z+7, r24	; 0x07
    3bea:	ce 01       	movw	r24, r28
    3bec:	df 91       	pop	r29
    3bee:	cf 91       	pop	r28
    3bf0:	1f 91       	pop	r17
    3bf2:	0f 91       	pop	r16
    3bf4:	08 95       	ret

Disassembly of section .text.__fmt_d:

00002422 <__fmt_d>:
    2422:	ad e0       	ldi	r26, 0x0D	; 13
    2424:	b0 e0       	ldi	r27, 0x00	; 0
    2426:	e7 e1       	ldi	r30, 0x17	; 23
    2428:	f2 e1       	ldi	r31, 0x12	; 18
    242a:	0c 94 6c 22 	jmp	0x44d8	; 0x44d8 <__prologue_saves__>
    242e:	9a 87       	std	Y+10, r25	; 0x0a
    2430:	89 87       	std	Y+9, r24	; 0x09
    2432:	7c 83       	std	Y+4, r23	; 0x04
    2434:	6b 83       	std	Y+3, r22	; 0x03
    2436:	fa 01       	movw	r30, r20
    2438:	db 01       	movw	r26, r22
    243a:	12 96       	adiw	r26, 0x02	; 2
    243c:	cd 90       	ld	r12, X+
    243e:	dc 90       	ld	r13, X
    2440:	13 97       	sbiw	r26, 0x03	; 3
    2442:	14 96       	adiw	r26, 0x04	; 4
    2444:	8d 91       	ld	r24, X+
    2446:	9c 91       	ld	r25, X
    2448:	15 97       	sbiw	r26, 0x05	; 5
    244a:	9e 83       	std	Y+6, r25	; 0x06
    244c:	8d 83       	std	Y+5, r24	; 0x05
    244e:	ed 90       	ld	r14, X+
    2450:	fc 90       	ld	r15, X
    2452:	11 97       	sbiw	r26, 0x01	; 1
    2454:	fa 82       	std	Y+2, r15	; 0x02
    2456:	e9 82       	std	Y+1, r14	; 0x01
    2458:	16 96       	adiw	r26, 0x06	; 6
    245a:	0d 90       	ld	r0, X+
    245c:	bc 91       	ld	r27, X
    245e:	a0 2d       	mov	r26, r0
    2460:	b8 87       	std	Y+8, r27	; 0x08
    2462:	af 83       	std	Y+7, r26	; 0x07
    2464:	20 80       	ld	r2, Z
    2466:	31 80       	ldd	r3, Z+1	; 0x01
    2468:	42 80       	ldd	r4, Z+2	; 0x02
    246a:	53 80       	ldd	r5, Z+3	; 0x03
    246c:	64 80       	ldd	r6, Z+4	; 0x04
    246e:	75 80       	ldd	r7, Z+5	; 0x05
    2470:	86 80       	ldd	r8, Z+6	; 0x06
    2472:	97 80       	ldd	r9, Z+7	; 0x07
    2474:	81 01       	movw	r16, r2
    2476:	b4 2d       	mov	r27, r4
    2478:	f5 2d       	mov	r31, r5
    247a:	e6 2d       	mov	r30, r6
    247c:	7b 86       	std	Y+11, r7	; 0x0b
    247e:	8c 86       	std	Y+12, r8	; 0x0c
    2480:	9d 86       	std	Y+13, r9	; 0x0d
    2482:	91 01       	movw	r18, r2
    2484:	a2 01       	movw	r20, r4
    2486:	b3 01       	movw	r22, r6
    2488:	c4 01       	movw	r24, r8
    248a:	a0 e0       	ldi	r26, 0x00	; 0
    248c:	0e 94 02 24 	call	0x4804	; 0x4804 <__cmpdi2_s8>
    2490:	4c f4       	brge	.+18     	; 0x24a4 <__fmt_d+0x82>
    2492:	0e 94 b0 23 	call	0x4760	; 0x4760 <__negdi2>
    2496:	89 01       	movw	r16, r18
    2498:	b4 2f       	mov	r27, r20
    249a:	f5 2f       	mov	r31, r21
    249c:	e6 2f       	mov	r30, r22
    249e:	7b 87       	std	Y+11, r23	; 0x0b
    24a0:	8c 87       	std	Y+12, r24	; 0x0c
    24a2:	9d 87       	std	Y+13, r25	; 0x0d
    24a4:	d7 fc       	sbrc	r13, 7
    24a6:	04 c0       	rjmp	.+8      	; 0x24b0 <__fmt_d+0x8e>
    24a8:	e8 94       	clt
    24aa:	e1 f8       	bld	r14, 1
    24ac:	fa 82       	std	Y+2, r15	; 0x02
    24ae:	e9 82       	std	Y+1, r14	; 0x01
    24b0:	91 01       	movw	r18, r2
    24b2:	a2 01       	movw	r20, r4
    24b4:	b3 01       	movw	r22, r6
    24b6:	c4 01       	movw	r24, r8
    24b8:	a0 e0       	ldi	r26, 0x00	; 0
    24ba:	ed 80       	ldd	r14, Y+5	; 0x05
    24bc:	fe 80       	ldd	r15, Y+6	; 0x06
    24be:	0e 94 02 24 	call	0x4804	; 0x4804 <__cmpdi2_s8>
    24c2:	1c f0       	brlt	.+6      	; 0x24ca <__fmt_d+0xa8>
    24c4:	89 81       	ldd	r24, Y+1	; 0x01
    24c6:	82 ff       	sbrs	r24, 2
    24c8:	04 c0       	rjmp	.+8      	; 0x24d2 <__fmt_d+0xb0>
    24ca:	81 e0       	ldi	r24, 0x01	; 1
    24cc:	e8 1a       	sub	r14, r24
    24ce:	f1 08       	sbc	r15, r1
    24d0:	05 c0       	rjmp	.+10     	; 0x24dc <__fmt_d+0xba>
    24d2:	83 ff       	sbrs	r24, 3
    24d4:	03 c0       	rjmp	.+6      	; 0x24dc <__fmt_d+0xba>
    24d6:	91 e0       	ldi	r25, 0x01	; 1
    24d8:	e9 1a       	sub	r14, r25
    24da:	f1 08       	sbc	r15, r1
    24dc:	ce 01       	movw	r24, r28
    24de:	01 96       	adiw	r24, 0x01	; 1
    24e0:	5c 01       	movw	r10, r24
    24e2:	8a e0       	ldi	r24, 0x0A	; 10
    24e4:	c8 2e       	mov	r12, r24
    24e6:	d1 2c       	mov	r13, r1
    24e8:	2b 2f       	mov	r18, r27
    24ea:	3f 2f       	mov	r19, r31
    24ec:	4e 2f       	mov	r20, r30
    24ee:	5b 85       	ldd	r21, Y+11	; 0x0b
    24f0:	6c 85       	ldd	r22, Y+12	; 0x0c
    24f2:	7d 85       	ldd	r23, Y+13	; 0x0d
    24f4:	8b 81       	ldd	r24, Y+3	; 0x03
    24f6:	9c 81       	ldd	r25, Y+4	; 0x04
    24f8:	0e 94 31 14 	call	0x2862	; 0x2862 <__cvt_u>
    24fc:	fc 01       	movw	r30, r24
    24fe:	91 01       	movw	r18, r2
    2500:	a2 01       	movw	r20, r4
    2502:	b3 01       	movw	r22, r6
    2504:	c4 01       	movw	r24, r8
    2506:	a0 e0       	ldi	r26, 0x00	; 0
    2508:	0e 94 02 24 	call	0x4804	; 0x4804 <__cmpdi2_s8>
    250c:	1c f0       	brlt	.+6      	; 0x2514 <__fmt_d+0xf2>
    250e:	89 81       	ldd	r24, Y+1	; 0x01
    2510:	82 ff       	sbrs	r24, 2
    2512:	12 c0       	rjmp	.+36     	; 0x2538 <__fmt_d+0x116>
    2514:	31 97       	sbiw	r30, 0x01	; 1
    2516:	0f 81       	ldd	r16, Y+7	; 0x07
    2518:	18 85       	ldd	r17, Y+8	; 0x08
    251a:	0e 0f       	add	r16, r30
    251c:	1f 1f       	adc	r17, r31
    251e:	91 01       	movw	r18, r2
    2520:	a2 01       	movw	r20, r4
    2522:	b3 01       	movw	r22, r6
    2524:	c4 01       	movw	r24, r8
    2526:	a0 e0       	ldi	r26, 0x00	; 0
    2528:	0e 94 02 24 	call	0x4804	; 0x4804 <__cmpdi2_s8>
    252c:	14 f0       	brlt	.+4      	; 0x2532 <__fmt_d+0x110>
    252e:	8b e2       	ldi	r24, 0x2B	; 43
    2530:	01 c0       	rjmp	.+2      	; 0x2534 <__fmt_d+0x112>
    2532:	8d e2       	ldi	r24, 0x2D	; 45
    2534:	d8 01       	movw	r26, r16
    2536:	08 c0       	rjmp	.+16     	; 0x2548 <__fmt_d+0x126>
    2538:	83 ff       	sbrs	r24, 3
    253a:	07 c0       	rjmp	.+14     	; 0x254a <__fmt_d+0x128>
    253c:	31 97       	sbiw	r30, 0x01	; 1
    253e:	af 81       	ldd	r26, Y+7	; 0x07
    2540:	b8 85       	ldd	r27, Y+8	; 0x08
    2542:	ae 0f       	add	r26, r30
    2544:	bf 1f       	adc	r27, r31
    2546:	80 e2       	ldi	r24, 0x20	; 32
    2548:	8c 93       	st	X, r24
    254a:	e9 80       	ldd	r14, Y+1	; 0x01
    254c:	fa 80       	ldd	r15, Y+2	; 0x02
    254e:	ab 81       	ldd	r26, Y+3	; 0x03
    2550:	bc 81       	ldd	r27, Y+4	; 0x04
    2552:	18 96       	adiw	r26, 0x08	; 8
    2554:	2d 91       	ld	r18, X+
    2556:	3c 91       	ld	r19, X
    2558:	19 97       	sbiw	r26, 0x09	; 9
    255a:	21 50       	subi	r18, 0x01	; 1
    255c:	31 09       	sbc	r19, r1
    255e:	2e 1b       	sub	r18, r30
    2560:	3f 0b       	sbc	r19, r31
    2562:	8f 81       	ldd	r24, Y+7	; 0x07
    2564:	98 85       	ldd	r25, Y+8	; 0x08
    2566:	e8 0f       	add	r30, r24
    2568:	f9 1f       	adc	r31, r25
    256a:	af 01       	movw	r20, r30
    256c:	60 e8       	ldi	r22, 0x80	; 128
    256e:	0d 81       	ldd	r16, Y+5	; 0x05
    2570:	1e 81       	ldd	r17, Y+6	; 0x06
    2572:	89 85       	ldd	r24, Y+9	; 0x09
    2574:	9a 85       	ldd	r25, Y+10	; 0x0a
    2576:	0e 94 0d 16 	call	0x2c1a	; 0x2c1a <__pad>
    257a:	9c 01       	movw	r18, r24
    257c:	a9 85       	ldd	r26, Y+9	; 0x09
    257e:	ba 85       	ldd	r27, Y+10	; 0x0a
    2580:	8d 91       	ld	r24, X+
    2582:	9c 91       	ld	r25, X
    2584:	90 ff       	sbrs	r25, 0
    2586:	07 c0       	rjmp	.+14     	; 0x2596 <__fmt_d+0x174>
    2588:	eb 81       	ldd	r30, Y+3	; 0x03
    258a:	fc 81       	ldd	r31, Y+4	; 0x04
    258c:	82 81       	ldd	r24, Z+2	; 0x02
    258e:	93 81       	ldd	r25, Z+3	; 0x03
    2590:	82 17       	cp	r24, r18
    2592:	93 07       	cpc	r25, r19
    2594:	0c f4       	brge	.+2      	; 0x2598 <__fmt_d+0x176>
    2596:	c9 01       	movw	r24, r18
    2598:	2d 96       	adiw	r28, 0x0d	; 13
    259a:	e2 e1       	ldi	r30, 0x12	; 18
    259c:	0c 94 a3 22 	jmp	0x4546	; 0x4546 <__epilogue_restores__>

Disassembly of section .text.__fmt_o:

00002ede <__fmt_o>:
    2ede:	a2 e0       	ldi	r26, 0x02	; 2
    2ee0:	b0 e0       	ldi	r27, 0x00	; 0
    2ee2:	e5 e7       	ldi	r30, 0x75	; 117
    2ee4:	f7 e1       	ldi	r31, 0x17	; 23
    2ee6:	0c 94 6c 22 	jmp	0x44d8	; 0x44d8 <__prologue_saves__>
    2eea:	1c 01       	movw	r2, r24
    2eec:	4b 01       	movw	r8, r22
    2eee:	fa 01       	movw	r30, r20
    2ef0:	db 01       	movw	r26, r22
    2ef2:	12 96       	adiw	r26, 0x02	; 2
    2ef4:	2d 91       	ld	r18, X+
    2ef6:	3c 91       	ld	r19, X
    2ef8:	13 97       	sbiw	r26, 0x03	; 3
    2efa:	14 96       	adiw	r26, 0x04	; 4
    2efc:	4d 90       	ld	r4, X+
    2efe:	5c 90       	ld	r5, X
    2f00:	15 97       	sbiw	r26, 0x05	; 5
    2f02:	8d 91       	ld	r24, X+
    2f04:	9c 91       	ld	r25, X
    2f06:	11 97       	sbiw	r26, 0x01	; 1
    2f08:	9a 83       	std	Y+2, r25	; 0x02
    2f0a:	89 83       	std	Y+1, r24	; 0x01
    2f0c:	16 96       	adiw	r26, 0x06	; 6
    2f0e:	6d 90       	ld	r6, X+
    2f10:	7c 90       	ld	r7, X
    2f12:	17 97       	sbiw	r26, 0x07	; 7
    2f14:	37 fd       	sbrc	r19, 7
    2f16:	03 c0       	rjmp	.+6      	; 0x2f1e <__fmt_o+0x40>
    2f18:	8d 7f       	andi	r24, 0xFD	; 253
    2f1a:	9a 83       	std	Y+2, r25	; 0x02
    2f1c:	89 83       	std	Y+1, r24	; 0x01
    2f1e:	00 81       	ld	r16, Z
    2f20:	11 81       	ldd	r17, Z+1	; 0x01
    2f22:	22 81       	ldd	r18, Z+2	; 0x02
    2f24:	33 81       	ldd	r19, Z+3	; 0x03
    2f26:	44 81       	ldd	r20, Z+4	; 0x04
    2f28:	55 81       	ldd	r21, Z+5	; 0x05
    2f2a:	66 81       	ldd	r22, Z+6	; 0x06
    2f2c:	77 81       	ldd	r23, Z+7	; 0x07
    2f2e:	fe 01       	movw	r30, r28
    2f30:	31 96       	adiw	r30, 0x01	; 1
    2f32:	5f 01       	movw	r10, r30
    2f34:	88 e0       	ldi	r24, 0x08	; 8
    2f36:	c8 2e       	mov	r12, r24
    2f38:	d1 2c       	mov	r13, r1
    2f3a:	72 01       	movw	r14, r4
    2f3c:	c4 01       	movw	r24, r8
    2f3e:	0e 94 31 14 	call	0x2862	; 0x2862 <__cvt_u>
    2f42:	29 81       	ldd	r18, Y+1	; 0x01
    2f44:	24 ff       	sbrs	r18, 4
    2f46:	06 c0       	rjmp	.+12     	; 0x2f54 <__fmt_o+0x76>
    2f48:	01 97       	sbiw	r24, 0x01	; 1
    2f4a:	f3 01       	movw	r30, r6
    2f4c:	e8 0f       	add	r30, r24
    2f4e:	f9 1f       	adc	r31, r25
    2f50:	20 e3       	ldi	r18, 0x30	; 48
    2f52:	20 83       	st	Z, r18
    2f54:	29 81       	ldd	r18, Y+1	; 0x01
    2f56:	23 ff       	sbrs	r18, 3
    2f58:	06 c0       	rjmp	.+12     	; 0x2f66 <__fmt_o+0x88>
    2f5a:	01 97       	sbiw	r24, 0x01	; 1
    2f5c:	f3 01       	movw	r30, r6
    2f5e:	e8 0f       	add	r30, r24
    2f60:	f9 1f       	adc	r31, r25
    2f62:	20 e2       	ldi	r18, 0x20	; 32
    2f64:	20 83       	st	Z, r18
    2f66:	e9 80       	ldd	r14, Y+1	; 0x01
    2f68:	fa 80       	ldd	r15, Y+2	; 0x02
    2f6a:	d4 01       	movw	r26, r8
    2f6c:	18 96       	adiw	r26, 0x08	; 8
    2f6e:	2d 91       	ld	r18, X+
    2f70:	3c 91       	ld	r19, X
    2f72:	19 97       	sbiw	r26, 0x09	; 9
    2f74:	21 50       	subi	r18, 0x01	; 1
    2f76:	31 09       	sbc	r19, r1
    2f78:	28 1b       	sub	r18, r24
    2f7a:	39 0b       	sbc	r19, r25
    2f7c:	86 0d       	add	r24, r6
    2f7e:	97 1d       	adc	r25, r7
    2f80:	ac 01       	movw	r20, r24
    2f82:	60 e8       	ldi	r22, 0x80	; 128
    2f84:	82 01       	movw	r16, r4
    2f86:	c1 01       	movw	r24, r2
    2f88:	0e 94 0d 16 	call	0x2c1a	; 0x2c1a <__pad>
    2f8c:	9c 01       	movw	r18, r24
    2f8e:	f1 01       	movw	r30, r2
    2f90:	80 81       	ld	r24, Z
    2f92:	91 81       	ldd	r25, Z+1	; 0x01
    2f94:	90 ff       	sbrs	r25, 0
    2f96:	08 c0       	rjmp	.+16     	; 0x2fa8 <__fmt_o+0xca>
    2f98:	d4 01       	movw	r26, r8
    2f9a:	12 96       	adiw	r26, 0x02	; 2
    2f9c:	8d 91       	ld	r24, X+
    2f9e:	9c 91       	ld	r25, X
    2fa0:	13 97       	sbiw	r26, 0x03	; 3
    2fa2:	82 17       	cp	r24, r18
    2fa4:	93 07       	cpc	r25, r19
    2fa6:	0c f4       	brge	.+2      	; 0x2faa <__fmt_o+0xcc>
    2fa8:	c9 01       	movw	r24, r18
    2faa:	22 96       	adiw	r28, 0x02	; 2
    2fac:	e2 e1       	ldi	r30, 0x12	; 18
    2fae:	0c 94 a3 22 	jmp	0x4546	; 0x4546 <__epilogue_restores__>

Disassembly of section .text.__cvt_u:

00002862 <__cvt_u>:
    2862:	a2 e1       	ldi	r26, 0x12	; 18
    2864:	b0 e0       	ldi	r27, 0x00	; 0
    2866:	e7 e3       	ldi	r30, 0x37	; 55
    2868:	f4 e1       	ldi	r31, 0x14	; 20
    286a:	0c 94 6c 22 	jmp	0x44d8	; 0x44d8 <__prologue_saves__>
    286e:	fc 01       	movw	r30, r24
    2870:	0a 8b       	std	Y+18, r16	; 0x12
    2872:	1b 83       	std	Y+3, r17	; 0x03
    2874:	2c 83       	std	Y+4, r18	; 0x04
    2876:	73 2e       	mov	r7, r19
    2878:	64 2e       	mov	r6, r20
    287a:	55 2e       	mov	r5, r21
    287c:	46 2e       	mov	r4, r22
    287e:	7d 83       	std	Y+5, r23	; 0x05
    2880:	cc 86       	std	Y+12, r12	; 0x0c
    2882:	d8 86       	std	Y+8, r13	; 0x08
    2884:	bf 82       	std	Y+7, r11	; 0x07
    2886:	ae 82       	std	Y+6, r10	; 0x06
    2888:	86 81       	ldd	r24, Z+6	; 0x06
    288a:	97 81       	ldd	r25, Z+7	; 0x07
    288c:	9b 87       	std	Y+11, r25	; 0x0b
    288e:	8a 87       	std	Y+10, r24	; 0x0a
    2890:	d5 01       	movw	r26, r10
    2892:	4d 91       	ld	r20, X+
    2894:	5c 91       	ld	r21, X
    2896:	22 81       	ldd	r18, Z+2	; 0x02
    2898:	33 81       	ldd	r19, Z+3	; 0x03
    289a:	80 85       	ldd	r24, Z+8	; 0x08
    289c:	91 85       	ldd	r25, Z+9	; 0x09
    289e:	01 97       	sbiw	r24, 0x01	; 1
    28a0:	1c 01       	movw	r2, r24
    28a2:	37 ff       	sbrs	r19, 7
    28a4:	02 c0       	rjmp	.+4      	; 0x28aa <__cvt_u+0x48>
    28a6:	21 e0       	ldi	r18, 0x01	; 1
    28a8:	30 e0       	ldi	r19, 0x00	; 0
    28aa:	ea 85       	ldd	r30, Y+10	; 0x0a
    28ac:	fb 85       	ldd	r31, Y+11	; 0x0b
    28ae:	e8 0f       	add	r30, r24
    28b0:	f9 1f       	adc	r31, r25
    28b2:	10 82       	st	Z, r1
    28b4:	47 01       	movw	r8, r14
    28b6:	e1 e0       	ldi	r30, 0x01	; 1
    28b8:	f0 e0       	ldi	r31, 0x00	; 0
    28ba:	fa 83       	std	Y+2, r31	; 0x02
    28bc:	e9 83       	std	Y+1, r30	; 0x01
    28be:	c9 01       	movw	r24, r18
    28c0:	8e 19       	sub	r24, r14
    28c2:	9f 09       	sbc	r25, r15
    28c4:	9e 87       	std	Y+14, r25	; 0x0e
    28c6:	8d 87       	std	Y+13, r24	; 0x0d
    28c8:	da 01       	movw	r26, r20
    28ca:	a2 70       	andi	r26, 0x02	; 2
    28cc:	bb 27       	eor	r27, r27
    28ce:	b8 8b       	std	Y+16, r27	; 0x10
    28d0:	af 87       	std	Y+15, r26	; 0x0f
    28d2:	b8 85       	ldd	r27, Y+8	; 0x08
    28d4:	bb 0f       	add	r27, r27
    28d6:	bb 0b       	sbc	r27, r27
    28d8:	b9 8b       	std	Y+17, r27	; 0x11
    28da:	12 14       	cp	r1, r2
    28dc:	13 04       	cpc	r1, r3
    28de:	74 f0       	brlt	.+28     	; 0x28fc <__cvt_u+0x9a>
    28e0:	a9 81       	ldd	r26, Y+1	; 0x01
    28e2:	ba 81       	ldd	r27, Y+2	; 0x02
    28e4:	ab 2b       	or	r26, r27
    28e6:	09 f0       	breq	.+2      	; 0x28ea <__cvt_u+0x88>
    28e8:	5c c0       	rjmp	.+184    	; 0x29a2 <__cvt_u+0x140>
    28ea:	ae 81       	ldd	r26, Y+6	; 0x06
    28ec:	bf 81       	ldd	r27, Y+7	; 0x07
    28ee:	8d 91       	ld	r24, X+
    28f0:	9c 91       	ld	r25, X
    28f2:	11 97       	sbiw	r26, 0x01	; 1
    28f4:	8f 7e       	andi	r24, 0xEF	; 239
    28f6:	8d 93       	st	X+, r24
    28f8:	9c 93       	st	X, r25
    28fa:	53 c0       	rjmp	.+166    	; 0x29a2 <__cvt_u+0x140>
    28fc:	2a 89       	ldd	r18, Y+18	; 0x12
    28fe:	3b 81       	ldd	r19, Y+3	; 0x03
    2900:	4c 81       	ldd	r20, Y+4	; 0x04
    2902:	57 2d       	mov	r21, r7
    2904:	66 2d       	mov	r22, r6
    2906:	75 2d       	mov	r23, r5
    2908:	84 2d       	mov	r24, r4
    290a:	9d 81       	ldd	r25, Y+5	; 0x05
    290c:	a0 e0       	ldi	r26, 0x00	; 0
    290e:	0e 94 02 24 	call	0x4804	; 0x4804 <__cmpdi2_s8>
    2912:	b1 f1       	breq	.+108    	; 0x2980 <__cvt_u+0x11e>
    2914:	e1 e0       	ldi	r30, 0x01	; 1
    2916:	2e 1a       	sub	r2, r30
    2918:	31 08       	sbc	r3, r1
    291a:	fc 85       	ldd	r31, Y+12	; 0x0c
    291c:	f9 87       	std	Y+9, r31	; 0x09
    291e:	af 2e       	mov	r10, r31
    2920:	b8 84       	ldd	r11, Y+8	; 0x08
    2922:	c9 88       	ldd	r12, Y+17	; 0x11
    2924:	dc 2c       	mov	r13, r12
    2926:	ec 2c       	mov	r14, r12
    2928:	fc 2c       	mov	r15, r12
    292a:	0c 2d       	mov	r16, r12
    292c:	1c 2d       	mov	r17, r12
    292e:	2a 89       	ldd	r18, Y+18	; 0x12
    2930:	3b 81       	ldd	r19, Y+3	; 0x03
    2932:	4c 81       	ldd	r20, Y+4	; 0x04
    2934:	57 2d       	mov	r21, r7
    2936:	66 2d       	mov	r22, r6
    2938:	75 2d       	mov	r23, r5
    293a:	84 2d       	mov	r24, r4
    293c:	9d 81       	ldd	r25, Y+5	; 0x05
    293e:	0e 94 ce 23 	call	0x479c	; 0x479c <__umoddi3>
    2942:	c9 01       	movw	r24, r18
    2944:	29 83       	std	Y+1, r18	; 0x01
    2946:	9a 83       	std	Y+2, r25	; 0x02
    2948:	ea 85       	ldd	r30, Y+10	; 0x0a
    294a:	fb 85       	ldd	r31, Y+11	; 0x0b
    294c:	e2 0d       	add	r30, r2
    294e:	f3 1d       	adc	r31, r3
    2950:	80 5d       	subi	r24, 0xD0	; 208
    2952:	80 83       	st	Z, r24
    2954:	81 e0       	ldi	r24, 0x01	; 1
    2956:	88 1a       	sub	r8, r24
    2958:	91 08       	sbc	r9, r1
    295a:	2a 89       	ldd	r18, Y+18	; 0x12
    295c:	3b 81       	ldd	r19, Y+3	; 0x03
    295e:	4c 81       	ldd	r20, Y+4	; 0x04
    2960:	57 2d       	mov	r21, r7
    2962:	66 2d       	mov	r22, r6
    2964:	75 2d       	mov	r23, r5
    2966:	84 2d       	mov	r24, r4
    2968:	9d 81       	ldd	r25, Y+5	; 0x05
    296a:	0e 94 d0 23 	call	0x47a0	; 0x47a0 <__udivdi3>
    296e:	2a 8b       	std	Y+18, r18	; 0x12
    2970:	3b 83       	std	Y+3, r19	; 0x03
    2972:	4c 83       	std	Y+4, r20	; 0x04
    2974:	75 2e       	mov	r7, r21
    2976:	66 2e       	mov	r6, r22
    2978:	57 2e       	mov	r5, r23
    297a:	48 2e       	mov	r4, r24
    297c:	9d 83       	std	Y+5, r25	; 0x05
    297e:	ad cf       	rjmp	.-166    	; 0x28da <__cvt_u+0x78>
    2980:	8d 85       	ldd	r24, Y+13	; 0x0d
    2982:	9e 85       	ldd	r25, Y+14	; 0x0e
    2984:	88 0d       	add	r24, r8
    2986:	99 1d       	adc	r25, r9
    2988:	18 16       	cp	r1, r24
    298a:	19 06       	cpc	r1, r25
    298c:	1c f2       	brlt	.-122    	; 0x2914 <__cvt_u+0xb2>
    298e:	18 14       	cp	r1, r8
    2990:	19 04       	cpc	r1, r9
    2992:	0c f0       	brlt	.+2      	; 0x2996 <__cvt_u+0x134>
    2994:	a5 cf       	rjmp	.-182    	; 0x28e0 <__cvt_u+0x7e>
    2996:	ef 85       	ldd	r30, Y+15	; 0x0f
    2998:	f8 89       	ldd	r31, Y+16	; 0x10
    299a:	ef 2b       	or	r30, r31
    299c:	09 f0       	breq	.+2      	; 0x29a0 <__cvt_u+0x13e>
    299e:	ba cf       	rjmp	.-140    	; 0x2914 <__cvt_u+0xb2>
    29a0:	9f cf       	rjmp	.-194    	; 0x28e0 <__cvt_u+0x7e>
    29a2:	c1 01       	movw	r24, r2
    29a4:	62 96       	adiw	r28, 0x12	; 18
    29a6:	e2 e1       	ldi	r30, 0x12	; 18
    29a8:	0c 94 a3 22 	jmp	0x4546	; 0x4546 <__epilogue_restores__>

Disassembly of section .text.__fmt_u:

00003512 <__fmt_u>:
    3512:	a2 e0       	ldi	r26, 0x02	; 2
    3514:	b0 e0       	ldi	r27, 0x00	; 0
    3516:	ef e8       	ldi	r30, 0x8F	; 143
    3518:	fa e1       	ldi	r31, 0x1A	; 26
    351a:	0c 94 6c 22 	jmp	0x44d8	; 0x44d8 <__prologue_saves__>
    351e:	3c 01       	movw	r6, r24
    3520:	4b 01       	movw	r8, r22
    3522:	fa 01       	movw	r30, r20
    3524:	db 01       	movw	r26, r22
    3526:	12 96       	adiw	r26, 0x02	; 2
    3528:	2d 91       	ld	r18, X+
    352a:	3c 91       	ld	r19, X
    352c:	13 97       	sbiw	r26, 0x03	; 3
    352e:	14 96       	adiw	r26, 0x04	; 4
    3530:	4d 90       	ld	r4, X+
    3532:	5c 90       	ld	r5, X
    3534:	15 97       	sbiw	r26, 0x05	; 5
    3536:	8d 91       	ld	r24, X+
    3538:	9c 91       	ld	r25, X
    353a:	11 97       	sbiw	r26, 0x01	; 1
    353c:	9a 83       	std	Y+2, r25	; 0x02
    353e:	89 83       	std	Y+1, r24	; 0x01
    3540:	16 96       	adiw	r26, 0x06	; 6
    3542:	2d 90       	ld	r2, X+
    3544:	3c 90       	ld	r3, X
    3546:	17 97       	sbiw	r26, 0x07	; 7
    3548:	37 fd       	sbrc	r19, 7
    354a:	03 c0       	rjmp	.+6      	; 0x3552 <__fmt_u+0x40>
    354c:	8d 7f       	andi	r24, 0xFD	; 253
    354e:	9a 83       	std	Y+2, r25	; 0x02
    3550:	89 83       	std	Y+1, r24	; 0x01
    3552:	00 81       	ld	r16, Z
    3554:	11 81       	ldd	r17, Z+1	; 0x01
    3556:	22 81       	ldd	r18, Z+2	; 0x02
    3558:	33 81       	ldd	r19, Z+3	; 0x03
    355a:	44 81       	ldd	r20, Z+4	; 0x04
    355c:	55 81       	ldd	r21, Z+5	; 0x05
    355e:	66 81       	ldd	r22, Z+6	; 0x06
    3560:	77 81       	ldd	r23, Z+7	; 0x07
    3562:	fe 01       	movw	r30, r28
    3564:	31 96       	adiw	r30, 0x01	; 1
    3566:	5f 01       	movw	r10, r30
    3568:	8a e0       	ldi	r24, 0x0A	; 10
    356a:	c8 2e       	mov	r12, r24
    356c:	d1 2c       	mov	r13, r1
    356e:	72 01       	movw	r14, r4
    3570:	c4 01       	movw	r24, r8
    3572:	0e 94 31 14 	call	0x2862	; 0x2862 <__cvt_u>
    3576:	e9 80       	ldd	r14, Y+1	; 0x01
    3578:	fa 80       	ldd	r15, Y+2	; 0x02
    357a:	d4 01       	movw	r26, r8
    357c:	18 96       	adiw	r26, 0x08	; 8
    357e:	2d 91       	ld	r18, X+
    3580:	3c 91       	ld	r19, X
    3582:	19 97       	sbiw	r26, 0x09	; 9
    3584:	21 50       	subi	r18, 0x01	; 1
    3586:	31 09       	sbc	r19, r1
    3588:	28 1b       	sub	r18, r24
    358a:	39 0b       	sbc	r19, r25
    358c:	82 0d       	add	r24, r2
    358e:	93 1d       	adc	r25, r3
    3590:	ac 01       	movw	r20, r24
    3592:	60 e8       	ldi	r22, 0x80	; 128
    3594:	82 01       	movw	r16, r4
    3596:	c3 01       	movw	r24, r6
    3598:	0e 94 0d 16 	call	0x2c1a	; 0x2c1a <__pad>
    359c:	9c 01       	movw	r18, r24
    359e:	f3 01       	movw	r30, r6
    35a0:	80 81       	ld	r24, Z
    35a2:	91 81       	ldd	r25, Z+1	; 0x01
    35a4:	90 ff       	sbrs	r25, 0
    35a6:	08 c0       	rjmp	.+16     	; 0x35b8 <__fmt_u+0xa6>
    35a8:	d4 01       	movw	r26, r8
    35aa:	12 96       	adiw	r26, 0x02	; 2
    35ac:	8d 91       	ld	r24, X+
    35ae:	9c 91       	ld	r25, X
    35b0:	13 97       	sbiw	r26, 0x03	; 3
    35b2:	82 17       	cp	r24, r18
    35b4:	93 07       	cpc	r25, r19
    35b6:	0c f4       	brge	.+2      	; 0x35ba <__fmt_u+0xa8>
    35b8:	c9 01       	movw	r24, r18
    35ba:	22 96       	adiw	r28, 0x02	; 2
    35bc:	e2 e1       	ldi	r30, 0x12	; 18
    35be:	0c 94 a3 22 	jmp	0x4546	; 0x4546 <__epilogue_restores__>

Disassembly of section .text.__fmt_x:

000021a2 <__fmt_x>:
    21a2:	a4 e1       	ldi	r26, 0x14	; 20
    21a4:	b0 e0       	ldi	r27, 0x00	; 0
    21a6:	e7 ed       	ldi	r30, 0xD7	; 215
    21a8:	f0 e1       	ldi	r31, 0x10	; 16
    21aa:	0c 94 6c 22 	jmp	0x44d8	; 0x44d8 <__prologue_saves__>
    21ae:	98 87       	std	Y+8, r25	; 0x08
    21b0:	8f 83       	std	Y+7, r24	; 0x07
    21b2:	7a 83       	std	Y+2, r23	; 0x02
    21b4:	69 83       	std	Y+1, r22	; 0x01
    21b6:	5c 8b       	std	Y+20, r21	; 0x14
    21b8:	4b 8b       	std	Y+19, r20	; 0x13
    21ba:	12 2f       	mov	r17, r18
    21bc:	db 01       	movw	r26, r22
    21be:	12 96       	adiw	r26, 0x02	; 2
    21c0:	ed 91       	ld	r30, X+
    21c2:	fc 91       	ld	r31, X
    21c4:	13 97       	sbiw	r26, 0x03	; 3
    21c6:	14 96       	adiw	r26, 0x04	; 4
    21c8:	2d 91       	ld	r18, X+
    21ca:	3c 91       	ld	r19, X
    21cc:	15 97       	sbiw	r26, 0x05	; 5
    21ce:	3e 83       	std	Y+6, r19	; 0x06
    21d0:	2d 83       	std	Y+5, r18	; 0x05
    21d2:	ed 90       	ld	r14, X+
    21d4:	fc 90       	ld	r15, X
    21d6:	11 97       	sbiw	r26, 0x01	; 1
    21d8:	16 96       	adiw	r26, 0x06	; 6
    21da:	2d 90       	ld	r2, X+
    21dc:	3c 90       	ld	r3, X
    21de:	17 97       	sbiw	r26, 0x07	; 7
    21e0:	f7 fd       	sbrc	r31, 7
    21e2:	03 c0       	rjmp	.+6      	; 0x21ea <__fmt_x+0x48>
    21e4:	e8 94       	clt
    21e6:	e1 f8       	bld	r14, 1
    21e8:	02 c0       	rjmp	.+4      	; 0x21ee <__fmt_x+0x4c>
    21ea:	e1 e0       	ldi	r30, 0x01	; 1
    21ec:	f0 e0       	ldi	r31, 0x00	; 0
    21ee:	c7 01       	movw	r24, r14
    21f0:	80 71       	andi	r24, 0x10	; 16
    21f2:	99 27       	eor	r25, r25
    21f4:	9a 87       	std	Y+10, r25	; 0x0a
    21f6:	89 87       	std	Y+9, r24	; 0x09
    21f8:	e4 fe       	sbrs	r14, 4
    21fa:	1f c0       	rjmp	.+62     	; 0x223a <__stack+0x3b>
    21fc:	ab 89       	ldd	r26, Y+19	; 0x13
    21fe:	bc 89       	ldd	r27, Y+20	; 0x14
    2200:	2c 91       	ld	r18, X
    2202:	11 96       	adiw	r26, 0x01	; 1
    2204:	3c 91       	ld	r19, X
    2206:	11 97       	sbiw	r26, 0x01	; 1
    2208:	12 96       	adiw	r26, 0x02	; 2
    220a:	4c 91       	ld	r20, X
    220c:	12 97       	sbiw	r26, 0x02	; 2
    220e:	13 96       	adiw	r26, 0x03	; 3
    2210:	5c 91       	ld	r21, X
    2212:	13 97       	sbiw	r26, 0x03	; 3
    2214:	14 96       	adiw	r26, 0x04	; 4
    2216:	6c 91       	ld	r22, X
    2218:	14 97       	sbiw	r26, 0x04	; 4
    221a:	15 96       	adiw	r26, 0x05	; 5
    221c:	7c 91       	ld	r23, X
    221e:	15 97       	sbiw	r26, 0x05	; 5
    2220:	16 96       	adiw	r26, 0x06	; 6
    2222:	8c 91       	ld	r24, X
    2224:	16 97       	sbiw	r26, 0x06	; 6
    2226:	17 96       	adiw	r26, 0x07	; 7
    2228:	9c 91       	ld	r25, X
    222a:	a0 e0       	ldi	r26, 0x00	; 0
    222c:	0e 94 02 24 	call	0x4804	; 0x4804 <__cmpdi2_s8>
    2230:	21 f0       	breq	.+8      	; 0x223a <__stack+0x3b>
    2232:	8d 81       	ldd	r24, Y+5	; 0x05
    2234:	9e 81       	ldd	r25, Y+6	; 0x06
    2236:	02 97       	sbiw	r24, 0x02	; 2
    2238:	02 c0       	rjmp	.+4      	; 0x223e <__stack+0x3f>
    223a:	8d 81       	ldd	r24, Y+5	; 0x05
    223c:	9e 81       	ldd	r25, Y+6	; 0x06
    223e:	97 01       	movw	r18, r14
    2240:	28 70       	andi	r18, 0x08	; 8
    2242:	33 27       	eor	r19, r19
    2244:	3c 87       	std	Y+12, r19	; 0x0c
    2246:	2b 87       	std	Y+11, r18	; 0x0b
    2248:	e3 fc       	sbrc	r14, 3
    224a:	01 97       	sbiw	r24, 0x01	; 1
    224c:	ab 89       	ldd	r26, Y+19	; 0x13
    224e:	bc 89       	ldd	r27, Y+20	; 0x14
    2250:	4c 90       	ld	r4, X
    2252:	11 96       	adiw	r26, 0x01	; 1
    2254:	5c 90       	ld	r5, X
    2256:	11 97       	sbiw	r26, 0x01	; 1
    2258:	12 96       	adiw	r26, 0x02	; 2
    225a:	6c 90       	ld	r6, X
    225c:	12 97       	sbiw	r26, 0x02	; 2
    225e:	13 96       	adiw	r26, 0x03	; 3
    2260:	7c 90       	ld	r7, X
    2262:	13 97       	sbiw	r26, 0x03	; 3
    2264:	14 96       	adiw	r26, 0x04	; 4
    2266:	8c 90       	ld	r8, X
    2268:	14 97       	sbiw	r26, 0x04	; 4
    226a:	15 96       	adiw	r26, 0x05	; 5
    226c:	9c 90       	ld	r9, X
    226e:	15 97       	sbiw	r26, 0x05	; 5
    2270:	16 96       	adiw	r26, 0x06	; 6
    2272:	ac 90       	ld	r10, X
    2274:	16 97       	sbiw	r26, 0x06	; 6
    2276:	17 96       	adiw	r26, 0x07	; 7
    2278:	bc 90       	ld	r11, X
    227a:	a9 81       	ldd	r26, Y+1	; 0x01
    227c:	ba 81       	ldd	r27, Y+2	; 0x02
    227e:	18 96       	adiw	r26, 0x08	; 8
    2280:	cd 90       	ld	r12, X+
    2282:	dc 90       	ld	r13, X
    2284:	19 97       	sbiw	r26, 0x09	; 9
    2286:	b1 e0       	ldi	r27, 0x01	; 1
    2288:	cb 1a       	sub	r12, r27
    228a:	d1 08       	sbc	r13, r1
    228c:	d1 01       	movw	r26, r2
    228e:	ac 0d       	add	r26, r12
    2290:	bd 1d       	adc	r27, r13
    2292:	1c 92       	st	X, r1
    2294:	9c 83       	std	Y+4, r25	; 0x04
    2296:	8b 83       	std	Y+3, r24	; 0x03
    2298:	9f 01       	movw	r18, r30
    229a:	28 1b       	sub	r18, r24
    229c:	39 0b       	sbc	r19, r25
    229e:	3e 87       	std	Y+14, r19	; 0x0e
    22a0:	2d 87       	std	Y+13, r18	; 0x0d
    22a2:	c7 01       	movw	r24, r14
    22a4:	82 70       	andi	r24, 0x02	; 2
    22a6:	99 27       	eor	r25, r25
    22a8:	98 8b       	std	Y+16, r25	; 0x10
    22aa:	8f 87       	std	Y+15, r24	; 0x0f
    22ac:	81 2f       	mov	r24, r17
    22ae:	01 2e       	mov	r0, r17
    22b0:	00 0c       	add	r0, r0
    22b2:	99 0b       	sbc	r25, r25
    22b4:	dc 01       	movw	r26, r24
    22b6:	a1 54       	subi	r26, 0x41	; 65
    22b8:	b1 09       	sbc	r27, r1
    22ba:	ba 8b       	std	Y+18, r27	; 0x12
    22bc:	a9 8b       	std	Y+17, r26	; 0x11
    22be:	32 e0       	ldi	r19, 0x02	; 2
    22c0:	c3 16       	cp	r12, r19
    22c2:	d1 04       	cpc	r13, r1
    22c4:	34 f4       	brge	.+12     	; 0x22d2 <__stack+0xd3>
    22c6:	89 85       	ldd	r24, Y+9	; 0x09
    22c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    22ca:	89 2b       	or	r24, r25
    22cc:	09 f0       	breq	.+2      	; 0x22d0 <__stack+0xd1>
    22ce:	4c c0       	rjmp	.+152    	; 0x2368 <__stack+0x169>
    22d0:	73 c0       	rjmp	.+230    	; 0x23b8 <__stack+0x1b9>
    22d2:	92 01       	movw	r18, r4
    22d4:	a3 01       	movw	r20, r6
    22d6:	b4 01       	movw	r22, r8
    22d8:	c5 01       	movw	r24, r10
    22da:	a0 e0       	ldi	r26, 0x00	; 0
    22dc:	0e 94 02 24 	call	0x4804	; 0x4804 <__cmpdi2_s8>
    22e0:	81 f1       	breq	.+96     	; 0x2342 <__stack+0x143>
    22e2:	b1 e0       	ldi	r27, 0x01	; 1
    22e4:	cb 1a       	sub	r12, r27
    22e6:	d1 08       	sbc	r13, r1
    22e8:	c2 01       	movw	r24, r4
    22ea:	8f 70       	andi	r24, 0x0F	; 15
    22ec:	99 27       	eor	r25, r25
    22ee:	8a 30       	cpi	r24, 0x0A	; 10
    22f0:	91 05       	cpc	r25, r1
    22f2:	14 f4       	brge	.+4      	; 0x22f8 <__stack+0xf9>
    22f4:	c0 96       	adiw	r24, 0x30	; 48
    22f6:	02 c0       	rjmp	.+4      	; 0x22fc <__stack+0xfd>
    22f8:	89 5a       	subi	r24, 0xA9	; 169
    22fa:	9f 4f       	sbci	r25, 0xFF	; 255
    22fc:	e9 89       	ldd	r30, Y+17	; 0x11
    22fe:	fa 89       	ldd	r31, Y+18	; 0x12
    2300:	7a 97       	sbiw	r30, 0x1a	; 26
    2302:	48 f4       	brcc	.+18     	; 0x2316 <__stack+0x117>
    2304:	9c 01       	movw	r18, r24
    2306:	20 62       	ori	r18, 0x20	; 32
    2308:	21 56       	subi	r18, 0x61	; 97
    230a:	31 09       	sbc	r19, r1
    230c:	2a 31       	cpi	r18, 0x1A	; 26
    230e:	31 05       	cpc	r19, r1
    2310:	10 f4       	brcc	.+4      	; 0x2316 <__stack+0x117>
    2312:	0e 94 39 24 	call	0x4872	; 0x4872 <toupper>
    2316:	f1 01       	movw	r30, r2
    2318:	ec 0d       	add	r30, r12
    231a:	fd 1d       	adc	r31, r13
    231c:	80 83       	st	Z, r24
    231e:	2b 81       	ldd	r18, Y+3	; 0x03
    2320:	3c 81       	ldd	r19, Y+4	; 0x04
    2322:	21 50       	subi	r18, 0x01	; 1
    2324:	31 09       	sbc	r19, r1
    2326:	3c 83       	std	Y+4, r19	; 0x04
    2328:	2b 83       	std	Y+3, r18	; 0x03
    232a:	92 01       	movw	r18, r4
    232c:	a3 01       	movw	r20, r6
    232e:	b4 01       	movw	r22, r8
    2330:	c5 01       	movw	r24, r10
    2332:	04 e0       	ldi	r16, 0x04	; 4
    2334:	0e 94 16 22 	call	0x442c	; 0x442c <__lshrdi3>
    2338:	29 01       	movw	r4, r18
    233a:	3a 01       	movw	r6, r20
    233c:	4b 01       	movw	r8, r22
    233e:	5c 01       	movw	r10, r24
    2340:	be cf       	rjmp	.-132    	; 0x22be <__stack+0xbf>
    2342:	8d 85       	ldd	r24, Y+13	; 0x0d
    2344:	9e 85       	ldd	r25, Y+14	; 0x0e
    2346:	ab 81       	ldd	r26, Y+3	; 0x03
    2348:	bc 81       	ldd	r27, Y+4	; 0x04
    234a:	8a 0f       	add	r24, r26
    234c:	9b 1f       	adc	r25, r27
    234e:	18 16       	cp	r1, r24
    2350:	19 06       	cpc	r1, r25
    2352:	3c f2       	brlt	.-114    	; 0x22e2 <__stack+0xe3>
    2354:	1a 16       	cp	r1, r26
    2356:	1b 06       	cpc	r1, r27
    2358:	0c f0       	brlt	.+2      	; 0x235c <__stack+0x15d>
    235a:	b5 cf       	rjmp	.-150    	; 0x22c6 <__stack+0xc7>
    235c:	ef 85       	ldd	r30, Y+15	; 0x0f
    235e:	f8 89       	ldd	r31, Y+16	; 0x10
    2360:	ef 2b       	or	r30, r31
    2362:	09 f0       	breq	.+2      	; 0x2366 <__stack+0x167>
    2364:	be cf       	rjmp	.-132    	; 0x22e2 <__stack+0xe3>
    2366:	af cf       	rjmp	.-162    	; 0x22c6 <__stack+0xc7>
    2368:	ab 89       	ldd	r26, Y+19	; 0x13
    236a:	bc 89       	ldd	r27, Y+20	; 0x14
    236c:	2c 91       	ld	r18, X
    236e:	11 96       	adiw	r26, 0x01	; 1
    2370:	3c 91       	ld	r19, X
    2372:	11 97       	sbiw	r26, 0x01	; 1
    2374:	12 96       	adiw	r26, 0x02	; 2
    2376:	4c 91       	ld	r20, X
    2378:	12 97       	sbiw	r26, 0x02	; 2
    237a:	13 96       	adiw	r26, 0x03	; 3
    237c:	5c 91       	ld	r21, X
    237e:	13 97       	sbiw	r26, 0x03	; 3
    2380:	14 96       	adiw	r26, 0x04	; 4
    2382:	6c 91       	ld	r22, X
    2384:	14 97       	sbiw	r26, 0x04	; 4
    2386:	15 96       	adiw	r26, 0x05	; 5
    2388:	7c 91       	ld	r23, X
    238a:	15 97       	sbiw	r26, 0x05	; 5
    238c:	16 96       	adiw	r26, 0x06	; 6
    238e:	8c 91       	ld	r24, X
    2390:	16 97       	sbiw	r26, 0x06	; 6
    2392:	17 96       	adiw	r26, 0x07	; 7
    2394:	9c 91       	ld	r25, X
    2396:	a0 e0       	ldi	r26, 0x00	; 0
    2398:	0e 94 02 24 	call	0x4804	; 0x4804 <__cmpdi2_s8>
    239c:	69 f0       	breq	.+26     	; 0x23b8 <__stack+0x1b9>
    239e:	f1 01       	movw	r30, r2
    23a0:	ec 0d       	add	r30, r12
    23a2:	fd 1d       	adc	r31, r13
    23a4:	31 97       	sbiw	r30, 0x01	; 1
    23a6:	10 83       	st	Z, r17
    23a8:	b2 e0       	ldi	r27, 0x02	; 2
    23aa:	cb 1a       	sub	r12, r27
    23ac:	d1 08       	sbc	r13, r1
    23ae:	f1 01       	movw	r30, r2
    23b0:	ec 0d       	add	r30, r12
    23b2:	fd 1d       	adc	r31, r13
    23b4:	80 e3       	ldi	r24, 0x30	; 48
    23b6:	80 83       	st	Z, r24
    23b8:	eb 85       	ldd	r30, Y+11	; 0x0b
    23ba:	fc 85       	ldd	r31, Y+12	; 0x0c
    23bc:	ef 2b       	or	r30, r31
    23be:	41 f0       	breq	.+16     	; 0x23d0 <__stack+0x1d1>
    23c0:	f1 e0       	ldi	r31, 0x01	; 1
    23c2:	cf 1a       	sub	r12, r31
    23c4:	d1 08       	sbc	r13, r1
    23c6:	f1 01       	movw	r30, r2
    23c8:	ec 0d       	add	r30, r12
    23ca:	fd 1d       	adc	r31, r13
    23cc:	80 e2       	ldi	r24, 0x20	; 32
    23ce:	80 83       	st	Z, r24
    23d0:	a9 81       	ldd	r26, Y+1	; 0x01
    23d2:	ba 81       	ldd	r27, Y+2	; 0x02
    23d4:	18 96       	adiw	r26, 0x08	; 8
    23d6:	2d 91       	ld	r18, X+
    23d8:	3c 91       	ld	r19, X
    23da:	19 97       	sbiw	r26, 0x09	; 9
    23dc:	21 50       	subi	r18, 0x01	; 1
    23de:	31 09       	sbc	r19, r1
    23e0:	2c 19       	sub	r18, r12
    23e2:	3d 09       	sbc	r19, r13
    23e4:	c2 0c       	add	r12, r2
    23e6:	d3 1c       	adc	r13, r3
    23e8:	a6 01       	movw	r20, r12
    23ea:	60 e8       	ldi	r22, 0x80	; 128
    23ec:	0d 81       	ldd	r16, Y+5	; 0x05
    23ee:	1e 81       	ldd	r17, Y+6	; 0x06
    23f0:	8f 81       	ldd	r24, Y+7	; 0x07
    23f2:	98 85       	ldd	r25, Y+8	; 0x08
    23f4:	0e 94 0d 16 	call	0x2c1a	; 0x2c1a <__pad>
    23f8:	9c 01       	movw	r18, r24
    23fa:	ef 81       	ldd	r30, Y+7	; 0x07
    23fc:	f8 85       	ldd	r31, Y+8	; 0x08
    23fe:	80 81       	ld	r24, Z
    2400:	91 81       	ldd	r25, Z+1	; 0x01
    2402:	90 ff       	sbrs	r25, 0
    2404:	09 c0       	rjmp	.+18     	; 0x2418 <__stack+0x219>
    2406:	a9 81       	ldd	r26, Y+1	; 0x01
    2408:	ba 81       	ldd	r27, Y+2	; 0x02
    240a:	12 96       	adiw	r26, 0x02	; 2
    240c:	8d 91       	ld	r24, X+
    240e:	9c 91       	ld	r25, X
    2410:	13 97       	sbiw	r26, 0x03	; 3
    2412:	82 17       	cp	r24, r18
    2414:	93 07       	cpc	r25, r19
    2416:	0c f4       	brge	.+2      	; 0x241a <__stack+0x21b>
    2418:	c9 01       	movw	r24, r18
    241a:	64 96       	adiw	r28, 0x14	; 20
    241c:	e2 e1       	ldi	r30, 0x12	; 18
    241e:	0c 94 a3 22 	jmp	0x4546	; 0x4546 <__epilogue_restores__>

Disassembly of section .text.__pop_float:

000043e8 <__pop_float>:
    43e8:	fa 01       	movw	r30, r20
    43ea:	60 38       	cpi	r22, 0x80	; 128
    43ec:	71 05       	cpc	r23, r1
    43ee:	cc f0       	brlt	.+50     	; 0x4422 <__pop_float+0x3a>
    43f0:	62 38       	cpi	r22, 0x82	; 130
    43f2:	71 05       	cpc	r23, r1
    43f4:	1c f0       	brlt	.+6      	; 0x43fc <__pop_float+0x14>
    43f6:	63 38       	cpi	r22, 0x83	; 131
    43f8:	71 05       	cpc	r23, r1
    43fa:	99 f4       	brne	.+38     	; 0x4422 <__pop_float+0x3a>
    43fc:	a0 81       	ld	r26, Z
    43fe:	b1 81       	ldd	r27, Z+1	; 0x01
    4400:	9d 01       	movw	r18, r26
    4402:	2c 5f       	subi	r18, 0xFC	; 252
    4404:	3f 4f       	sbci	r19, 0xFF	; 255
    4406:	31 83       	std	Z+1, r19	; 0x01
    4408:	20 83       	st	Z, r18
    440a:	4d 91       	ld	r20, X+
    440c:	5d 91       	ld	r21, X+
    440e:	6d 91       	ld	r22, X+
    4410:	7c 91       	ld	r23, X
    4412:	fc 01       	movw	r30, r24
    4414:	40 83       	st	Z, r20
    4416:	51 83       	std	Z+1, r21	; 0x01
    4418:	62 83       	std	Z+2, r22	; 0x02
    441a:	73 83       	std	Z+3, r23	; 0x03
    441c:	81 e0       	ldi	r24, 0x01	; 1
    441e:	90 e0       	ldi	r25, 0x00	; 0
    4420:	08 95       	ret
    4422:	80 e0       	ldi	r24, 0x00	; 0
    4424:	90 e0       	ldi	r25, 0x00	; 0
    4426:	08 95       	ret

Disassembly of section .text.__pop_int:

000025a0 <__pop_int>:
    25a0:	0f 93       	push	r16
    25a2:	1f 93       	push	r17
    25a4:	cf 93       	push	r28
    25a6:	df 93       	push	r29
    25a8:	fc 01       	movw	r30, r24
    25aa:	d9 01       	movw	r26, r18
    25ac:	68 38       	cpi	r22, 0x88	; 136
    25ae:	71 05       	cpc	r23, r1
    25b0:	31 f1       	breq	.+76     	; 0x25fe <__pop_int+0x5e>
    25b2:	94 f4       	brge	.+36     	; 0x25d8 <__pop_int+0x38>
    25b4:	61 38       	cpi	r22, 0x81	; 129
    25b6:	71 05       	cpc	r23, r1
    25b8:	b1 f1       	breq	.+108    	; 0x2626 <__pop_int+0x86>
    25ba:	2c f4       	brge	.+10     	; 0x25c6 <__pop_int+0x26>
    25bc:	60 38       	cpi	r22, 0x80	; 128
    25be:	71 05       	cpc	r23, r1
    25c0:	09 f4       	brne	.+2      	; 0x25c4 <__pop_int+0x24>
    25c2:	78 c0       	rjmp	.+240    	; 0x26b4 <__pop_int+0x114>
    25c4:	9f c0       	rjmp	.+318    	; 0x2704 <__pop_int+0x164>
    25c6:	62 38       	cpi	r22, 0x82	; 130
    25c8:	71 05       	cpc	r23, r1
    25ca:	09 f4       	brne	.+2      	; 0x25ce <__pop_int+0x2e>
    25cc:	59 c0       	rjmp	.+178    	; 0x2680 <__pop_int+0xe0>
    25ce:	64 38       	cpi	r22, 0x84	; 132
    25d0:	71 05       	cpc	r23, r1
    25d2:	09 f4       	brne	.+2      	; 0x25d6 <__pop_int+0x36>
    25d4:	6f c0       	rjmp	.+222    	; 0x26b4 <__pop_int+0x114>
    25d6:	96 c0       	rjmp	.+300    	; 0x2704 <__pop_int+0x164>
    25d8:	60 3a       	cpi	r22, 0xA0	; 160
    25da:	71 05       	cpc	r23, r1
    25dc:	09 f4       	brne	.+2      	; 0x25e0 <__pop_int+0x40>
    25de:	48 c0       	rjmp	.+144    	; 0x2670 <__pop_int+0xd0>
    25e0:	2c f4       	brge	.+10     	; 0x25ec <__pop_int+0x4c>
    25e2:	60 39       	cpi	r22, 0x90	; 144
    25e4:	71 05       	cpc	r23, r1
    25e6:	09 f4       	brne	.+2      	; 0x25ea <__pop_int+0x4a>
    25e8:	4b c0       	rjmp	.+150    	; 0x2680 <__pop_int+0xe0>
    25ea:	8c c0       	rjmp	.+280    	; 0x2704 <__pop_int+0x164>
    25ec:	60 3c       	cpi	r22, 0xC0	; 192
    25ee:	71 05       	cpc	r23, r1
    25f0:	09 f4       	brne	.+2      	; 0x25f4 <__pop_int+0x54>
    25f2:	76 c0       	rjmp	.+236    	; 0x26e0 <__pop_int+0x140>
    25f4:	60 3f       	cpi	r22, 0xF0	; 240
    25f6:	71 05       	cpc	r23, r1
    25f8:	09 f4       	brne	.+2      	; 0x25fc <__pop_int+0x5c>
    25fa:	72 c0       	rjmp	.+228    	; 0x26e0 <__pop_int+0x140>
    25fc:	83 c0       	rjmp	.+262    	; 0x2704 <__pop_int+0x164>
    25fe:	cd 91       	ld	r28, X+
    2600:	dc 91       	ld	r29, X
    2602:	11 97       	sbiw	r26, 0x01	; 1
    2604:	ce 01       	movw	r24, r28
    2606:	02 96       	adiw	r24, 0x02	; 2
    2608:	8d 93       	st	X+, r24
    260a:	9c 93       	st	X, r25
    260c:	45 2b       	or	r20, r21
    260e:	39 f0       	breq	.+14     	; 0x261e <__pop_int+0x7e>
    2610:	98 81       	ld	r25, Y
    2612:	89 2f       	mov	r24, r25
    2614:	88 0f       	add	r24, r24
    2616:	88 0b       	sbc	r24, r24
    2618:	90 83       	st	Z, r25
    261a:	81 83       	std	Z+1, r24	; 0x01
    261c:	5b c0       	rjmp	.+182    	; 0x26d4 <__pop_int+0x134>
    261e:	88 81       	ld	r24, Y
    2620:	80 83       	st	Z, r24
    2622:	11 82       	std	Z+1, r1	; 0x01
    2624:	68 c0       	rjmp	.+208    	; 0x26f6 <__pop_int+0x156>
    2626:	cd 91       	ld	r28, X+
    2628:	dc 91       	ld	r29, X
    262a:	11 97       	sbiw	r26, 0x01	; 1
    262c:	ce 01       	movw	r24, r28
    262e:	04 96       	adiw	r24, 0x04	; 4
    2630:	8d 93       	st	X+, r24
    2632:	9c 93       	st	X, r25
    2634:	45 2b       	or	r20, r21
    2636:	99 f0       	breq	.+38     	; 0x265e <__pop_int+0xbe>
    2638:	88 81       	ld	r24, Y
    263a:	99 81       	ldd	r25, Y+1	; 0x01
    263c:	aa 81       	ldd	r26, Y+2	; 0x02
    263e:	bb 81       	ldd	r27, Y+3	; 0x03
    2640:	ac 01       	movw	r20, r24
    2642:	bd 01       	movw	r22, r26
    2644:	77 0f       	add	r23, r23
    2646:	44 0b       	sbc	r20, r20
    2648:	54 2f       	mov	r21, r20
    264a:	ba 01       	movw	r22, r20
    264c:	80 83       	st	Z, r24
    264e:	91 83       	std	Z+1, r25	; 0x01
    2650:	a2 83       	std	Z+2, r26	; 0x02
    2652:	b3 83       	std	Z+3, r27	; 0x03
    2654:	44 83       	std	Z+4, r20	; 0x04
    2656:	45 83       	std	Z+5, r20	; 0x05
    2658:	46 83       	std	Z+6, r20	; 0x06
    265a:	47 83       	std	Z+7, r20	; 0x07
    265c:	28 c0       	rjmp	.+80     	; 0x26ae <__pop_int+0x10e>
    265e:	08 81       	ld	r16, Y
    2660:	19 81       	ldd	r17, Y+1	; 0x01
    2662:	2a 81       	ldd	r18, Y+2	; 0x02
    2664:	3b 81       	ldd	r19, Y+3	; 0x03
    2666:	00 83       	st	Z, r16
    2668:	11 83       	std	Z+1, r17	; 0x01
    266a:	22 83       	std	Z+2, r18	; 0x02
    266c:	33 83       	std	Z+3, r19	; 0x03
    266e:	45 c0       	rjmp	.+138    	; 0x26fa <__pop_int+0x15a>
    2670:	cd 91       	ld	r28, X+
    2672:	dc 91       	ld	r29, X
    2674:	11 97       	sbiw	r26, 0x01	; 1
    2676:	ce 01       	movw	r24, r28
    2678:	02 96       	adiw	r24, 0x02	; 2
    267a:	8d 93       	st	X+, r24
    267c:	9c 93       	st	X, r25
    267e:	23 c0       	rjmp	.+70     	; 0x26c6 <__pop_int+0x126>
    2680:	cd 91       	ld	r28, X+
    2682:	dc 91       	ld	r29, X
    2684:	11 97       	sbiw	r26, 0x01	; 1
    2686:	ce 01       	movw	r24, r28
    2688:	08 96       	adiw	r24, 0x08	; 8
    268a:	8d 93       	st	X+, r24
    268c:	9c 93       	st	X, r25
    268e:	78 81       	ld	r23, Y
    2690:	69 81       	ldd	r22, Y+1	; 0x01
    2692:	5a 81       	ldd	r21, Y+2	; 0x02
    2694:	4b 81       	ldd	r20, Y+3	; 0x03
    2696:	3c 81       	ldd	r19, Y+4	; 0x04
    2698:	2d 81       	ldd	r18, Y+5	; 0x05
    269a:	9e 81       	ldd	r25, Y+6	; 0x06
    269c:	8f 81       	ldd	r24, Y+7	; 0x07
    269e:	70 83       	st	Z, r23
    26a0:	61 83       	std	Z+1, r22	; 0x01
    26a2:	52 83       	std	Z+2, r21	; 0x02
    26a4:	43 83       	std	Z+3, r20	; 0x03
    26a6:	34 83       	std	Z+4, r19	; 0x04
    26a8:	25 83       	std	Z+5, r18	; 0x05
    26aa:	96 83       	std	Z+6, r25	; 0x06
    26ac:	87 83       	std	Z+7, r24	; 0x07
    26ae:	81 e0       	ldi	r24, 0x01	; 1
    26b0:	90 e0       	ldi	r25, 0x00	; 0
    26b2:	2a c0       	rjmp	.+84     	; 0x2708 <__pop_int+0x168>
    26b4:	cd 91       	ld	r28, X+
    26b6:	dc 91       	ld	r29, X
    26b8:	11 97       	sbiw	r26, 0x01	; 1
    26ba:	ce 01       	movw	r24, r28
    26bc:	02 96       	adiw	r24, 0x02	; 2
    26be:	8d 93       	st	X+, r24
    26c0:	9c 93       	st	X, r25
    26c2:	45 2b       	or	r20, r21
    26c4:	a1 f0       	breq	.+40     	; 0x26ee <__pop_int+0x14e>
    26c6:	99 81       	ldd	r25, Y+1	; 0x01
    26c8:	28 81       	ld	r18, Y
    26ca:	89 2f       	mov	r24, r25
    26cc:	88 0f       	add	r24, r24
    26ce:	88 0b       	sbc	r24, r24
    26d0:	20 83       	st	Z, r18
    26d2:	91 83       	std	Z+1, r25	; 0x01
    26d4:	82 83       	std	Z+2, r24	; 0x02
    26d6:	83 83       	std	Z+3, r24	; 0x03
    26d8:	84 83       	std	Z+4, r24	; 0x04
    26da:	85 83       	std	Z+5, r24	; 0x05
    26dc:	86 83       	std	Z+6, r24	; 0x06
    26de:	e6 cf       	rjmp	.-52     	; 0x26ac <__pop_int+0x10c>
    26e0:	cd 91       	ld	r28, X+
    26e2:	dc 91       	ld	r29, X
    26e4:	11 97       	sbiw	r26, 0x01	; 1
    26e6:	ce 01       	movw	r24, r28
    26e8:	02 96       	adiw	r24, 0x02	; 2
    26ea:	8d 93       	st	X+, r24
    26ec:	9c 93       	st	X, r25
    26ee:	08 81       	ld	r16, Y
    26f0:	19 81       	ldd	r17, Y+1	; 0x01
    26f2:	00 83       	st	Z, r16
    26f4:	11 83       	std	Z+1, r17	; 0x01
    26f6:	12 82       	std	Z+2, r1	; 0x02
    26f8:	13 82       	std	Z+3, r1	; 0x03
    26fa:	14 82       	std	Z+4, r1	; 0x04
    26fc:	15 82       	std	Z+5, r1	; 0x05
    26fe:	16 82       	std	Z+6, r1	; 0x06
    2700:	17 82       	std	Z+7, r1	; 0x07
    2702:	d5 cf       	rjmp	.-86     	; 0x26ae <__pop_int+0x10e>
    2704:	80 e0       	ldi	r24, 0x00	; 0
    2706:	90 e0       	ldi	r25, 0x00	; 0
    2708:	df 91       	pop	r29
    270a:	cf 91       	pop	r28
    270c:	1f 91       	pop	r17
    270e:	0f 91       	pop	r16
    2710:	08 95       	ret

Disassembly of section .text.__pop_ptr:

00002e06 <__pop_ptr>:
    2e06:	cf 93       	push	r28
    2e08:	df 93       	push	r29
    2e0a:	dc 01       	movw	r26, r24
    2e0c:	f9 01       	movw	r30, r18
    2e0e:	64 38       	cpi	r22, 0x84	; 132
    2e10:	71 05       	cpc	r23, r1
    2e12:	d9 f1       	breq	.+118    	; 0x2e8a <__pop_ptr+0x84>
    2e14:	64 f4       	brge	.+24     	; 0x2e2e <__pop_ptr+0x28>
    2e16:	61 38       	cpi	r22, 0x81	; 129
    2e18:	71 05       	cpc	r23, r1
    2e1a:	21 f1       	breq	.+72     	; 0x2e64 <__pop_ptr+0x5e>
    2e1c:	62 38       	cpi	r22, 0x82	; 130
    2e1e:	71 05       	cpc	r23, r1
    2e20:	09 f4       	brne	.+2      	; 0x2e24 <__pop_ptr+0x1e>
    2e22:	40 c0       	rjmp	.+128    	; 0x2ea4 <__pop_ptr+0x9e>
    2e24:	60 38       	cpi	r22, 0x80	; 128
    2e26:	71 05       	cpc	r23, r1
    2e28:	09 f0       	breq	.+2      	; 0x2e2c <__pop_ptr+0x26>
    2e2a:	54 c0       	rjmp	.+168    	; 0x2ed4 <__pop_ptr+0xce>
    2e2c:	2e c0       	rjmp	.+92     	; 0x2e8a <__pop_ptr+0x84>
    2e2e:	60 39       	cpi	r22, 0x90	; 144
    2e30:	71 05       	cpc	r23, r1
    2e32:	c1 f1       	breq	.+112    	; 0x2ea4 <__pop_ptr+0x9e>
    2e34:	84 f4       	brge	.+32     	; 0x2e56 <__pop_ptr+0x50>
    2e36:	68 38       	cpi	r22, 0x88	; 136
    2e38:	71 05       	cpc	r23, r1
    2e3a:	09 f0       	breq	.+2      	; 0x2e3e <__pop_ptr+0x38>
    2e3c:	4b c0       	rjmp	.+150    	; 0x2ed4 <__pop_ptr+0xce>
    2e3e:	c0 81       	ld	r28, Z
    2e40:	d1 81       	ldd	r29, Z+1	; 0x01
    2e42:	ce 01       	movw	r24, r28
    2e44:	02 96       	adiw	r24, 0x02	; 2
    2e46:	91 83       	std	Z+1, r25	; 0x01
    2e48:	80 83       	st	Z, r24
    2e4a:	e8 81       	ld	r30, Y
    2e4c:	f9 81       	ldd	r31, Y+1	; 0x01
    2e4e:	ed 93       	st	X+, r30
    2e50:	fc 93       	st	X, r31
    2e52:	40 83       	st	Z, r20
    2e54:	3c c0       	rjmp	.+120    	; 0x2ece <__pop_ptr+0xc8>
    2e56:	60 3a       	cpi	r22, 0xA0	; 160
    2e58:	71 05       	cpc	r23, r1
    2e5a:	b9 f0       	breq	.+46     	; 0x2e8a <__pop_ptr+0x84>
    2e5c:	60 3c       	cpi	r22, 0xC0	; 192
    2e5e:	71 05       	cpc	r23, r1
    2e60:	a1 f0       	breq	.+40     	; 0x2e8a <__pop_ptr+0x84>
    2e62:	38 c0       	rjmp	.+112    	; 0x2ed4 <__pop_ptr+0xce>
    2e64:	c0 81       	ld	r28, Z
    2e66:	d1 81       	ldd	r29, Z+1	; 0x01
    2e68:	ce 01       	movw	r24, r28
    2e6a:	02 96       	adiw	r24, 0x02	; 2
    2e6c:	91 83       	std	Z+1, r25	; 0x01
    2e6e:	80 83       	st	Z, r24
    2e70:	e8 81       	ld	r30, Y
    2e72:	f9 81       	ldd	r31, Y+1	; 0x01
    2e74:	ed 93       	st	X+, r30
    2e76:	fc 93       	st	X, r31
    2e78:	05 2e       	mov	r0, r21
    2e7a:	00 0c       	add	r0, r0
    2e7c:	66 0b       	sbc	r22, r22
    2e7e:	77 0b       	sbc	r23, r23
    2e80:	40 83       	st	Z, r20
    2e82:	51 83       	std	Z+1, r21	; 0x01
    2e84:	62 83       	std	Z+2, r22	; 0x02
    2e86:	73 83       	std	Z+3, r23	; 0x03
    2e88:	22 c0       	rjmp	.+68     	; 0x2ece <__pop_ptr+0xc8>
    2e8a:	c0 81       	ld	r28, Z
    2e8c:	d1 81       	ldd	r29, Z+1	; 0x01
    2e8e:	ce 01       	movw	r24, r28
    2e90:	02 96       	adiw	r24, 0x02	; 2
    2e92:	91 83       	std	Z+1, r25	; 0x01
    2e94:	80 83       	st	Z, r24
    2e96:	e8 81       	ld	r30, Y
    2e98:	f9 81       	ldd	r31, Y+1	; 0x01
    2e9a:	ed 93       	st	X+, r30
    2e9c:	fc 93       	st	X, r31
    2e9e:	51 83       	std	Z+1, r21	; 0x01
    2ea0:	40 83       	st	Z, r20
    2ea2:	15 c0       	rjmp	.+42     	; 0x2ece <__pop_ptr+0xc8>
    2ea4:	c0 81       	ld	r28, Z
    2ea6:	d1 81       	ldd	r29, Z+1	; 0x01
    2ea8:	ce 01       	movw	r24, r28
    2eaa:	02 96       	adiw	r24, 0x02	; 2
    2eac:	91 83       	std	Z+1, r25	; 0x01
    2eae:	80 83       	st	Z, r24
    2eb0:	e8 81       	ld	r30, Y
    2eb2:	f9 81       	ldd	r31, Y+1	; 0x01
    2eb4:	ed 93       	st	X+, r30
    2eb6:	fc 93       	st	X, r31
    2eb8:	51 83       	std	Z+1, r21	; 0x01
    2eba:	40 83       	st	Z, r20
    2ebc:	85 2f       	mov	r24, r21
    2ebe:	88 0f       	add	r24, r24
    2ec0:	88 0b       	sbc	r24, r24
    2ec2:	82 83       	std	Z+2, r24	; 0x02
    2ec4:	83 83       	std	Z+3, r24	; 0x03
    2ec6:	84 83       	std	Z+4, r24	; 0x04
    2ec8:	85 83       	std	Z+5, r24	; 0x05
    2eca:	86 83       	std	Z+6, r24	; 0x06
    2ecc:	87 83       	std	Z+7, r24	; 0x07
    2ece:	81 e0       	ldi	r24, 0x01	; 1
    2ed0:	90 e0       	ldi	r25, 0x00	; 0
    2ed2:	02 c0       	rjmp	.+4      	; 0x2ed8 <__pop_ptr+0xd2>
    2ed4:	80 e0       	ldi	r24, 0x00	; 0
    2ed6:	90 e0       	ldi	r25, 0x00	; 0
    2ed8:	df 91       	pop	r29
    2eda:	cf 91       	pop	r28
    2edc:	08 95       	ret

Disassembly of section .text.sprintf:

000046d0 <sprintf>:
    46d0:	a0 e0       	ldi	r26, 0x00	; 0
    46d2:	b0 e0       	ldi	r27, 0x00	; 0
    46d4:	ee e6       	ldi	r30, 0x6E	; 110
    46d6:	f3 e2       	ldi	r31, 0x23	; 35
    46d8:	0c 94 7c 22 	jmp	0x44f8	; 0x44f8 <__prologue_saves__+0x20>
    46dc:	9e 01       	movw	r18, r28
    46de:	25 5f       	subi	r18, 0xF5	; 245
    46e0:	3f 4f       	sbci	r19, 0xFF	; 255
    46e2:	48 85       	ldd	r20, Y+8	; 0x08
    46e4:	59 85       	ldd	r21, Y+9	; 0x09
    46e6:	6a 85       	ldd	r22, Y+10	; 0x0a
    46e8:	8e 81       	ldd	r24, Y+6	; 0x06
    46ea:	9f 81       	ldd	r25, Y+7	; 0x07
    46ec:	0e 94 ea 23 	call	0x47d4	; 0x47d4 <vsprintf>
    46f0:	e2 e0       	ldi	r30, 0x02	; 2
    46f2:	0c 94 b3 22 	jmp	0x4566	; 0x4566 <__epilogue_restores__+0x20>

Disassembly of section .text.vsprintf:

000047d4 <vsprintf>:
    47d4:	0f 93       	push	r16
    47d6:	1f 93       	push	r17
    47d8:	89 01       	movw	r16, r18
    47da:	9a 01       	movw	r18, r20
    47dc:	46 2f       	mov	r20, r22
    47de:	6f ef       	ldi	r22, 0xFF	; 255
    47e0:	7f e7       	ldi	r23, 0x7F	; 127
    47e2:	0e 94 2e 1c 	call	0x385c	; 0x385c <vsnprintf>
    47e6:	1f 91       	pop	r17
    47e8:	0f 91       	pop	r16
    47ea:	08 95       	ret

Disassembly of section .text.atoi:

00003c82 <atoi>:
    3c82:	cf 93       	push	r28
    3c84:	9b 01       	movw	r18, r22
    3c86:	48 2f       	mov	r20, r24
    3c88:	f9 01       	movw	r30, r18
    3c8a:	54 2f       	mov	r21, r20
    3c8c:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    3c90:	60 32       	cpi	r22, 0x20	; 32
    3c92:	b9 f1       	breq	.+110    	; 0x3d02 <atoi+0x80>
    3c94:	86 2f       	mov	r24, r22
    3c96:	06 2e       	mov	r0, r22
    3c98:	00 0c       	add	r0, r0
    3c9a:	99 0b       	sbc	r25, r25
    3c9c:	09 97       	sbiw	r24, 0x09	; 9
    3c9e:	05 97       	sbiw	r24, 0x05	; 5
    3ca0:	80 f1       	brcs	.+96     	; 0x3d02 <atoi+0x80>
    3ca2:	6b 32       	cpi	r22, 0x2B	; 43
    3ca4:	49 f5       	brne	.+82     	; 0x3cf8 <atoi+0x76>
    3ca6:	a0 e0       	ldi	r26, 0x00	; 0
    3ca8:	b0 e0       	ldi	r27, 0x00	; 0
    3caa:	2f 5f       	subi	r18, 0xFF	; 255
    3cac:	3f 4f       	sbci	r19, 0xFF	; 255
    3cae:	4f 4f       	sbci	r20, 0xFF	; 255
    3cb0:	02 c0       	rjmp	.+4      	; 0x3cb6 <atoi+0x34>
    3cb2:	a0 e0       	ldi	r26, 0x00	; 0
    3cb4:	b0 e0       	ldi	r27, 0x00	; 0
    3cb6:	80 e0       	ldi	r24, 0x00	; 0
    3cb8:	90 e0       	ldi	r25, 0x00	; 0
    3cba:	ca e0       	ldi	r28, 0x0A	; 10
    3cbc:	f9 01       	movw	r30, r18
    3cbe:	54 2f       	mov	r21, r20
    3cc0:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    3cc4:	06 2e       	mov	r0, r22
    3cc6:	00 0c       	add	r0, r0
    3cc8:	77 0b       	sbc	r23, r23
    3cca:	60 53       	subi	r22, 0x30	; 48
    3ccc:	71 09       	sbc	r23, r1
    3cce:	6a 30       	cpi	r22, 0x0A	; 10
    3cd0:	71 05       	cpc	r23, r1
    3cd2:	60 f4       	brcc	.+24     	; 0x3cec <atoi+0x6a>
    3cd4:	c8 9f       	mul	r28, r24
    3cd6:	f0 01       	movw	r30, r0
    3cd8:	c9 9f       	mul	r28, r25
    3cda:	f0 0d       	add	r31, r0
    3cdc:	11 24       	eor	r1, r1
    3cde:	2f 5f       	subi	r18, 0xFF	; 255
    3ce0:	3f 4f       	sbci	r19, 0xFF	; 255
    3ce2:	4f 4f       	sbci	r20, 0xFF	; 255
    3ce4:	cf 01       	movw	r24, r30
    3ce6:	86 1b       	sub	r24, r22
    3ce8:	97 0b       	sbc	r25, r23
    3cea:	e8 cf       	rjmp	.-48     	; 0x3cbc <atoi+0x3a>
    3cec:	ab 2b       	or	r26, r27
    3cee:	69 f4       	brne	.+26     	; 0x3d0a <atoi+0x88>
    3cf0:	91 95       	neg	r25
    3cf2:	81 95       	neg	r24
    3cf4:	91 09       	sbc	r25, r1
    3cf6:	09 c0       	rjmp	.+18     	; 0x3d0a <atoi+0x88>
    3cf8:	6d 32       	cpi	r22, 0x2D	; 45
    3cfa:	d9 f6       	brne	.-74     	; 0x3cb2 <atoi+0x30>
    3cfc:	a1 e0       	ldi	r26, 0x01	; 1
    3cfe:	b0 e0       	ldi	r27, 0x00	; 0
    3d00:	d4 cf       	rjmp	.-88     	; 0x3caa <atoi+0x28>
    3d02:	2f 5f       	subi	r18, 0xFF	; 255
    3d04:	3f 4f       	sbci	r19, 0xFF	; 255
    3d06:	4f 4f       	sbci	r20, 0xFF	; 255
    3d08:	bf cf       	rjmp	.-130    	; 0x3c88 <atoi+0x6>
    3d0a:	cf 91       	pop	r28
    3d0c:	08 95       	ret

Disassembly of section .text.memset:

00004860 <memset>:
    4860:	fc 01       	movw	r30, r24
    4862:	48 0f       	add	r20, r24
    4864:	59 1f       	adc	r21, r25
    4866:	e4 17       	cp	r30, r20
    4868:	f5 07       	cpc	r31, r21
    486a:	11 f0       	breq	.+4      	; 0x4870 <memset+0x10>
    486c:	61 93       	st	Z+, r22
    486e:	fb cf       	rjmp	.-10     	; 0x4866 <memset+0x6>
    4870:	08 95       	ret

Disassembly of section .text.strcmp:

00004320 <strcmp>:
    4320:	cf 92       	push	r12
    4322:	df 92       	push	r13
    4324:	ef 92       	push	r14
    4326:	6b 01       	movw	r12, r22
    4328:	e8 2e       	mov	r14, r24
    432a:	f6 01       	movw	r30, r12
    432c:	5e 2d       	mov	r21, r14
    432e:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    4332:	86 2f       	mov	r24, r22
    4334:	f9 01       	movw	r30, r18
    4336:	54 2f       	mov	r21, r20
    4338:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    433c:	86 13       	cpse	r24, r22
    433e:	0b c0       	rjmp	.+22     	; 0x4356 <strcmp+0x36>
    4340:	88 23       	and	r24, r24
    4342:	41 f0       	breq	.+16     	; 0x4354 <strcmp+0x34>
    4344:	8f ef       	ldi	r24, 0xFF	; 255
    4346:	c8 1a       	sub	r12, r24
    4348:	d8 0a       	sbc	r13, r24
    434a:	e8 0a       	sbc	r14, r24
    434c:	2f 5f       	subi	r18, 0xFF	; 255
    434e:	3f 4f       	sbci	r19, 0xFF	; 255
    4350:	4f 4f       	sbci	r20, 0xFF	; 255
    4352:	eb cf       	rjmp	.-42     	; 0x432a <strcmp+0xa>
    4354:	68 2f       	mov	r22, r24
    4356:	90 e0       	ldi	r25, 0x00	; 0
    4358:	86 1b       	sub	r24, r22
    435a:	91 09       	sbc	r25, r1
    435c:	ef 90       	pop	r14
    435e:	df 90       	pop	r13
    4360:	cf 90       	pop	r12
    4362:	08 95       	ret

Disassembly of section .text.strlen:

0000471a <strlen>:
    471a:	9b 01       	movw	r18, r22
    471c:	48 2f       	mov	r20, r24
    471e:	a8 2f       	mov	r26, r24
    4720:	cb 01       	movw	r24, r22
    4722:	fc 01       	movw	r30, r24
    4724:	5a 2f       	mov	r21, r26
    4726:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    472a:	66 23       	and	r22, r22
    472c:	19 f0       	breq	.+6      	; 0x4734 <strlen+0x1a>
    472e:	01 96       	adiw	r24, 0x01	; 1
    4730:	a1 1d       	adc	r26, r1
    4732:	f7 cf       	rjmp	.-18     	; 0x4722 <strlen+0x8>
    4734:	64 2f       	mov	r22, r20
    4736:	a9 01       	movw	r20, r18
    4738:	84 1b       	sub	r24, r20
    473a:	95 0b       	sbc	r25, r21
    473c:	08 95       	ret

Disassembly of section .text.tolower:

00004884 <tolower>:
    4884:	9c 01       	movw	r18, r24
    4886:	21 54       	subi	r18, 0x41	; 65
    4888:	31 09       	sbc	r19, r1
    488a:	2a 31       	cpi	r18, 0x1A	; 26
    488c:	31 05       	cpc	r19, r1
    488e:	08 f4       	brcc	.+2      	; 0x4892 <tolower+0xe>
    4890:	80 62       	ori	r24, 0x20	; 32
    4892:	08 95       	ret

Disassembly of section .text.toupper:

00004872 <toupper>:
    4872:	9c 01       	movw	r18, r24
    4874:	21 56       	subi	r18, 0x61	; 97
    4876:	31 09       	sbc	r19, r1
    4878:	2a 31       	cpi	r18, 0x1A	; 26
    487a:	31 05       	cpc	r19, r1
    487c:	10 f4       	brcc	.+4      	; 0x4882 <toupper+0x10>
    487e:	8f 75       	andi	r24, 0x5F	; 95
    4880:	99 27       	eor	r25, r25
    4882:	08 95       	ret

Disassembly of section .text._Exit:

0000495a <_Exit>:
    495a:	0e 94 bb 00 	call	0x176	; 0x176 <_exit>

Disassembly of section .text.__vsprintf:

000047ec <__vsprintf>:
    47ec:	0f 93       	push	r16
    47ee:	1f 93       	push	r17
    47f0:	89 01       	movw	r16, r18
    47f2:	9a 01       	movw	r18, r20
    47f4:	46 2f       	mov	r20, r22
    47f6:	6f ef       	ldi	r22, 0xFF	; 255
    47f8:	7f e7       	ldi	r23, 0x7F	; 127
    47fa:	0e 94 dc 1b 	call	0x37b8	; 0x37b8 <__vsnprintf>
    47fe:	1f 91       	pop	r17
    4800:	0f 91       	pop	r16
    4802:	08 95       	ret

Disassembly of section .text.__vsnprintf:

000037b8 <__vsnprintf>:
    37b8:	6f 92       	push	r6
    37ba:	7f 92       	push	r7
    37bc:	8f 92       	push	r8
    37be:	ef 92       	push	r14
    37c0:	ff 92       	push	r15
    37c2:	0f 93       	push	r16
    37c4:	1f 93       	push	r17
    37c6:	cf 93       	push	r28
    37c8:	df 93       	push	r29
    37ca:	cd b7       	in	r28, 0x3d	; 61
    37cc:	de b7       	in	r29, 0x3e	; 62
    37ce:	61 97       	sbiw	r28, 0x11	; 17
    37d0:	0f b6       	in	r0, 0x3f	; 63
    37d2:	f8 94       	cli
    37d4:	de bf       	out	0x3e, r29	; 62
    37d6:	0f be       	out	0x3f, r0	; 63
    37d8:	cd bf       	out	0x3d, r28	; 61
    37da:	fe 01       	movw	r30, r28
    37dc:	31 96       	adiw	r30, 0x01	; 1
    37de:	51 e1       	ldi	r21, 0x11	; 17
    37e0:	df 01       	movw	r26, r30
    37e2:	1d 92       	st	X+, r1
    37e4:	5a 95       	dec	r21
    37e6:	e9 f7       	brne	.-6      	; 0x37e2 <__vsnprintf+0x2a>
    37e8:	a2 e0       	ldi	r26, 0x02	; 2
    37ea:	b1 e0       	ldi	r27, 0x01	; 1
    37ec:	ba 83       	std	Y+2, r27	; 0x02
    37ee:	a9 83       	std	Y+1, r26	; 0x01
    37f0:	9c 83       	std	Y+4, r25	; 0x04
    37f2:	8b 83       	std	Y+3, r24	; 0x03
    37f4:	77 ff       	sbrs	r23, 7
    37f6:	09 c0       	rjmp	.+18     	; 0x380a <__vsnprintf+0x52>
    37f8:	8f e4       	ldi	r24, 0x4F	; 79
    37fa:	90 e0       	ldi	r25, 0x00	; 0
    37fc:	90 93 0c 04 	sts	0x040C, r25	; 0x80040c <__errno_val+0x1>
    3800:	80 93 0b 04 	sts	0x040B, r24	; 0x80040b <__errno_val>
    3804:	8f ef       	ldi	r24, 0xFF	; 255
    3806:	9f ef       	ldi	r25, 0xFF	; 255
    3808:	19 c0       	rjmp	.+50     	; 0x383c <__vsnprintf+0x84>
    380a:	39 01       	movw	r6, r18
    380c:	84 2e       	mov	r8, r20
    380e:	7c 01       	movw	r14, r24
    3810:	61 50       	subi	r22, 0x01	; 1
    3812:	71 09       	sbc	r23, r1
    3814:	7f 83       	std	Y+7, r23	; 0x07
    3816:	6e 83       	std	Y+6, r22	; 0x06
    3818:	98 01       	movw	r18, r16
    381a:	68 2d       	mov	r22, r8
    381c:	a3 01       	movw	r20, r6
    381e:	cf 01       	movw	r24, r30
    3820:	0e 94 d6 22 	call	0x45ac	; 0x45ac <__vfprintf>
    3824:	48 85       	ldd	r20, Y+8	; 0x08
    3826:	59 85       	ldd	r21, Y+9	; 0x09
    3828:	2e 81       	ldd	r18, Y+6	; 0x06
    382a:	3f 81       	ldd	r19, Y+7	; 0x07
    382c:	42 17       	cp	r20, r18
    382e:	53 07       	cpc	r21, r19
    3830:	08 f4       	brcc	.+2      	; 0x3834 <__vsnprintf+0x7c>
    3832:	9a 01       	movw	r18, r20
    3834:	f7 01       	movw	r30, r14
    3836:	e2 0f       	add	r30, r18
    3838:	f3 1f       	adc	r31, r19
    383a:	10 82       	st	Z, r1
    383c:	61 96       	adiw	r28, 0x11	; 17
    383e:	0f b6       	in	r0, 0x3f	; 63
    3840:	f8 94       	cli
    3842:	de bf       	out	0x3e, r29	; 62
    3844:	0f be       	out	0x3f, r0	; 63
    3846:	cd bf       	out	0x3d, r28	; 61
    3848:	df 91       	pop	r29
    384a:	cf 91       	pop	r28
    384c:	1f 91       	pop	r17
    384e:	0f 91       	pop	r16
    3850:	ff 90       	pop	r15
    3852:	ef 90       	pop	r14
    3854:	8f 90       	pop	r8
    3856:	7f 90       	pop	r7
    3858:	6f 90       	pop	r6
    385a:	08 95       	ret

Disassembly of section .text.vsnprintf:

0000385c <vsnprintf>:
    385c:	6f 92       	push	r6
    385e:	7f 92       	push	r7
    3860:	8f 92       	push	r8
    3862:	ef 92       	push	r14
    3864:	ff 92       	push	r15
    3866:	0f 93       	push	r16
    3868:	1f 93       	push	r17
    386a:	cf 93       	push	r28
    386c:	df 93       	push	r29
    386e:	cd b7       	in	r28, 0x3d	; 61
    3870:	de b7       	in	r29, 0x3e	; 62
    3872:	61 97       	sbiw	r28, 0x11	; 17
    3874:	0f b6       	in	r0, 0x3f	; 63
    3876:	f8 94       	cli
    3878:	de bf       	out	0x3e, r29	; 62
    387a:	0f be       	out	0x3f, r0	; 63
    387c:	cd bf       	out	0x3d, r28	; 61
    387e:	fe 01       	movw	r30, r28
    3880:	31 96       	adiw	r30, 0x01	; 1
    3882:	51 e1       	ldi	r21, 0x11	; 17
    3884:	df 01       	movw	r26, r30
    3886:	1d 92       	st	X+, r1
    3888:	5a 95       	dec	r21
    388a:	e9 f7       	brne	.-6      	; 0x3886 <vsnprintf+0x2a>
    388c:	a2 e0       	ldi	r26, 0x02	; 2
    388e:	b1 e0       	ldi	r27, 0x01	; 1
    3890:	ba 83       	std	Y+2, r27	; 0x02
    3892:	a9 83       	std	Y+1, r26	; 0x01
    3894:	9c 83       	std	Y+4, r25	; 0x04
    3896:	8b 83       	std	Y+3, r24	; 0x03
    3898:	77 ff       	sbrs	r23, 7
    389a:	09 c0       	rjmp	.+18     	; 0x38ae <vsnprintf+0x52>
    389c:	8f e4       	ldi	r24, 0x4F	; 79
    389e:	90 e0       	ldi	r25, 0x00	; 0
    38a0:	90 93 0c 04 	sts	0x040C, r25	; 0x80040c <__errno_val+0x1>
    38a4:	80 93 0b 04 	sts	0x040B, r24	; 0x80040b <__errno_val>
    38a8:	8f ef       	ldi	r24, 0xFF	; 255
    38aa:	9f ef       	ldi	r25, 0xFF	; 255
    38ac:	19 c0       	rjmp	.+50     	; 0x38e0 <vsnprintf+0x84>
    38ae:	39 01       	movw	r6, r18
    38b0:	84 2e       	mov	r8, r20
    38b2:	7c 01       	movw	r14, r24
    38b4:	61 50       	subi	r22, 0x01	; 1
    38b6:	71 09       	sbc	r23, r1
    38b8:	7f 83       	std	Y+7, r23	; 0x07
    38ba:	6e 83       	std	Y+6, r22	; 0x06
    38bc:	98 01       	movw	r18, r16
    38be:	68 2d       	mov	r22, r8
    38c0:	a3 01       	movw	r20, r6
    38c2:	cf 01       	movw	r24, r30
    38c4:	0e 94 be 22 	call	0x457c	; 0x457c <vfprintf>
    38c8:	48 85       	ldd	r20, Y+8	; 0x08
    38ca:	59 85       	ldd	r21, Y+9	; 0x09
    38cc:	2e 81       	ldd	r18, Y+6	; 0x06
    38ce:	3f 81       	ldd	r19, Y+7	; 0x07
    38d0:	42 17       	cp	r20, r18
    38d2:	53 07       	cpc	r21, r19
    38d4:	08 f4       	brcc	.+2      	; 0x38d8 <vsnprintf+0x7c>
    38d6:	9a 01       	movw	r18, r20
    38d8:	f7 01       	movw	r30, r14
    38da:	e2 0f       	add	r30, r18
    38dc:	f3 1f       	adc	r31, r19
    38de:	10 82       	st	Z, r1
    38e0:	61 96       	adiw	r28, 0x11	; 17
    38e2:	0f b6       	in	r0, 0x3f	; 63
    38e4:	f8 94       	cli
    38e6:	de bf       	out	0x3e, r29	; 62
    38e8:	0f be       	out	0x3f, r0	; 63
    38ea:	cd bf       	out	0x3d, r28	; 61
    38ec:	df 91       	pop	r29
    38ee:	cf 91       	pop	r28
    38f0:	1f 91       	pop	r17
    38f2:	0f 91       	pop	r16
    38f4:	ff 90       	pop	r15
    38f6:	ef 90       	pop	r14
    38f8:	8f 90       	pop	r8
    38fa:	7f 90       	pop	r7
    38fc:	6f 90       	pop	r6
    38fe:	08 95       	ret

Disassembly of section .text.vfprintf:

0000457c <vfprintf>:
    457c:	a2 e0       	ldi	r26, 0x02	; 2
    457e:	b0 e0       	ldi	r27, 0x00	; 0
    4580:	e4 ec       	ldi	r30, 0xC4	; 196
    4582:	f2 e2       	ldi	r31, 0x22	; 34
    4584:	0c 94 7a 22 	jmp	0x44f4	; 0x44f4 <__prologue_saves__+0x1c>
    4588:	8c 01       	movw	r16, r24
    458a:	3a 83       	std	Y+2, r19	; 0x02
    458c:	29 83       	std	Y+1, r18	; 0x01
    458e:	9e 01       	movw	r18, r28
    4590:	2f 5f       	subi	r18, 0xFF	; 255
    4592:	3f 4f       	sbci	r19, 0xFF	; 255
    4594:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <__printf_core>
    4598:	f8 01       	movw	r30, r16
    459a:	20 81       	ld	r18, Z
    459c:	24 ff       	sbrs	r18, 4
    459e:	02 c0       	rjmp	.+4      	; 0x45a4 <vfprintf+0x28>
    45a0:	8f ef       	ldi	r24, 0xFF	; 255
    45a2:	9f ef       	ldi	r25, 0xFF	; 255
    45a4:	22 96       	adiw	r28, 0x02	; 2
    45a6:	e4 e0       	ldi	r30, 0x04	; 4
    45a8:	0c 94 b1 22 	jmp	0x4562	; 0x4562 <__epilogue_restores__+0x1c>

Disassembly of section .text.__vfprintf:

000045ac <__vfprintf>:
    45ac:	a2 e0       	ldi	r26, 0x02	; 2
    45ae:	b0 e0       	ldi	r27, 0x00	; 0
    45b0:	ec ed       	ldi	r30, 0xDC	; 220
    45b2:	f2 e2       	ldi	r31, 0x22	; 34
    45b4:	0c 94 7a 22 	jmp	0x44f4	; 0x44f4 <__prologue_saves__+0x1c>
    45b8:	8c 01       	movw	r16, r24
    45ba:	3a 83       	std	Y+2, r19	; 0x02
    45bc:	29 83       	std	Y+1, r18	; 0x01
    45be:	9e 01       	movw	r18, r28
    45c0:	2f 5f       	subi	r18, 0xFF	; 255
    45c2:	3f 4f       	sbci	r19, 0xFF	; 255
    45c4:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <__printf_core>
    45c8:	f8 01       	movw	r30, r16
    45ca:	20 81       	ld	r18, Z
    45cc:	24 ff       	sbrs	r18, 4
    45ce:	02 c0       	rjmp	.+4      	; 0x45d4 <__vfprintf+0x28>
    45d0:	8f ef       	ldi	r24, 0xFF	; 255
    45d2:	9f ef       	ldi	r25, 0xFF	; 255
    45d4:	22 96       	adiw	r28, 0x02	; 2
    45d6:	e4 e0       	ldi	r30, 0x04	; 4
    45d8:	0c 94 b1 22 	jmp	0x4562	; 0x4562 <__epilogue_restores__+0x1c>

Disassembly of section .text.__fmt_fp:

00000f08 <__fmt_fp>:
     f08:	a6 e2       	ldi	r26, 0x26	; 38
     f0a:	b0 e0       	ldi	r27, 0x00	; 0
     f0c:	ea e8       	ldi	r30, 0x8A	; 138
     f0e:	f7 e0       	ldi	r31, 0x07	; 7
     f10:	0c 94 6c 22 	jmp	0x44d8	; 0x44d8 <__prologue_saves__>
     f14:	9f 8f       	std	Y+31, r25	; 0x1f
     f16:	8e 8f       	std	Y+30, r24	; 0x1e
     f18:	79 8f       	std	Y+25, r23	; 0x19
     f1a:	68 8f       	std	Y+24, r22	; 0x18
     f1c:	12 2f       	mov	r17, r18
     f1e:	fb 01       	movw	r30, r22
     f20:	01 90       	ld	r0, Z+
     f22:	f0 81       	ld	r31, Z
     f24:	e0 2d       	mov	r30, r0
     f26:	fa 87       	std	Y+10, r31	; 0x0a
     f28:	e9 87       	std	Y+9, r30	; 0x09
     f2a:	fb 01       	movw	r30, r22
     f2c:	c2 80       	ldd	r12, Z+2	; 0x02
     f2e:	d3 80       	ldd	r13, Z+3	; 0x03
     f30:	24 81       	ldd	r18, Z+4	; 0x04
     f32:	35 81       	ldd	r19, Z+5	; 0x05
     f34:	3c 8b       	std	Y+20, r19	; 0x14
     f36:	2b 8b       	std	Y+19, r18	; 0x13
     f38:	80 85       	ldd	r24, Z+8	; 0x08
     f3a:	91 85       	ldd	r25, Z+9	; 0x09
     f3c:	99 a3       	std	Y+33, r25	; 0x21
     f3e:	88 a3       	std	Y+32, r24	; 0x20
     f40:	06 80       	ldd	r0, Z+6	; 0x06
     f42:	f7 81       	ldd	r31, Z+7	; 0x07
     f44:	e0 2d       	mov	r30, r0
     f46:	fa 83       	std	Y+2, r31	; 0x02
     f48:	e9 83       	std	Y+1, r30	; 0x01
     f4a:	fa 01       	movw	r30, r20
     f4c:	80 80       	ld	r8, Z
     f4e:	91 80       	ldd	r9, Z+1	; 0x01
     f50:	a2 80       	ldd	r10, Z+2	; 0x02
     f52:	b3 80       	ldd	r11, Z+3	; 0x03
     f54:	20 e0       	ldi	r18, 0x00	; 0
     f56:	30 e0       	ldi	r19, 0x00	; 0
     f58:	a9 01       	movw	r20, r18
     f5a:	c5 01       	movw	r24, r10
     f5c:	b4 01       	movw	r22, r8
     f5e:	0e 94 96 24 	call	0x492c	; 0x492c <__cmpsf2>
     f62:	87 ff       	sbrs	r24, 7
     f64:	06 c0       	rjmp	.+12     	; 0xf72 <__fmt_fp+0x6a>
     f66:	b7 fa       	bst	r11, 7
     f68:	b0 94       	com	r11
     f6a:	b7 f8       	bld	r11, 7
     f6c:	b0 94       	com	r11
     f6e:	8d e2       	ldi	r24, 0x2D	; 45
     f70:	04 c0       	rjmp	.+8      	; 0xf7a <__fmt_fp+0x72>
     f72:	f9 85       	ldd	r31, Y+9	; 0x09
     f74:	f2 ff       	sbrs	r31, 2
     f76:	0c c3       	rjmp	.+1560   	; 0x1590 <__EEPROM_REGION_LENGTH__+0x590>
     f78:	8b e2       	ldi	r24, 0x2B	; 43
     f7a:	e9 81       	ldd	r30, Y+1	; 0x01
     f7c:	fa 81       	ldd	r31, Y+2	; 0x02
     f7e:	80 83       	st	Z, r24
     f80:	2b 89       	ldd	r18, Y+19	; 0x13
     f82:	3c 89       	ldd	r19, Y+20	; 0x14
     f84:	21 50       	subi	r18, 0x01	; 1
     f86:	31 09       	sbc	r19, r1
     f88:	38 87       	std	Y+8, r19	; 0x08
     f8a:	2f 83       	std	Y+7, r18	; 0x07
     f8c:	41 e0       	ldi	r20, 0x01	; 1
     f8e:	50 e0       	ldi	r21, 0x00	; 0
     f90:	5a 8b       	std	Y+18, r21	; 0x12
     f92:	49 8b       	std	Y+17, r20	; 0x11
     f94:	06 c0       	rjmp	.+12     	; 0xfa2 <__fmt_fp+0x9a>
     f96:	8b 89       	ldd	r24, Y+19	; 0x13
     f98:	9c 89       	ldd	r25, Y+20	; 0x14
     f9a:	98 87       	std	Y+8, r25	; 0x08
     f9c:	8f 83       	std	Y+7, r24	; 0x07
     f9e:	1a 8a       	std	Y+18, r1	; 0x12
     fa0:	19 8a       	std	Y+17, r1	; 0x11
     fa2:	d5 01       	movw	r26, r10
     fa4:	c4 01       	movw	r24, r8
     fa6:	bf 77       	andi	r27, 0x7F	; 127
     fa8:	00 97       	sbiw	r24, 0x00	; 0
     faa:	e0 e8       	ldi	r30, 0x80	; 128
     fac:	ae 07       	cpc	r26, r30
     fae:	ef e7       	ldi	r30, 0x7F	; 127
     fb0:	be 07       	cpc	r27, r30
     fb2:	d9 f4       	brne	.+54     	; 0xfea <__fmt_fp+0xe2>
     fb4:	21 2f       	mov	r18, r17
     fb6:	11 0f       	add	r17, r17
     fb8:	33 0b       	sbc	r19, r19
     fba:	21 54       	subi	r18, 0x41	; 65
     fbc:	31 09       	sbc	r19, r1
     fbe:	89 81       	ldd	r24, Y+1	; 0x01
     fc0:	9a 81       	ldd	r25, Y+2	; 0x02
     fc2:	49 89       	ldd	r20, Y+17	; 0x11
     fc4:	5a 89       	ldd	r21, Y+18	; 0x12
     fc6:	84 0f       	add	r24, r20
     fc8:	95 1f       	adc	r25, r21
     fca:	2a 31       	cpi	r18, 0x1A	; 26
     fcc:	31 05       	cpc	r19, r1
     fce:	20 f4       	brcc	.+8      	; 0xfd8 <__fmt_fp+0xd0>
     fd0:	48 ea       	ldi	r20, 0xA8	; 168
     fd2:	56 e0       	ldi	r21, 0x06	; 6
     fd4:	60 e0       	ldi	r22, 0x00	; 0
     fd6:	03 c0       	rjmp	.+6      	; 0xfde <__fmt_fp+0xd6>
     fd8:	4c ea       	ldi	r20, 0xAC	; 172
     fda:	56 e0       	ldi	r21, 0x06	; 6
     fdc:	60 e0       	ldi	r22, 0x00	; 0
     fde:	0e 94 c0 23 	call	0x4780	; 0x4780 <strcpy>
     fe2:	6c ea       	ldi	r22, 0xAC	; 172
     fe4:	76 e0       	ldi	r23, 0x06	; 6
     fe6:	80 e0       	ldi	r24, 0x00	; 0
     fe8:	1e c0       	rjmp	.+60     	; 0x1026 <__EEPROM_REGION_LENGTH__+0x26>
     fea:	01 97       	sbiw	r24, 0x01	; 1
     fec:	a0 48       	sbci	r26, 0x80	; 128
     fee:	bf 47       	sbci	r27, 0x7F	; 127
     ff0:	30 f1       	brcs	.+76     	; 0x103e <__EEPROM_REGION_LENGTH__+0x3e>
     ff2:	21 2f       	mov	r18, r17
     ff4:	11 0f       	add	r17, r17
     ff6:	33 0b       	sbc	r19, r19
     ff8:	21 54       	subi	r18, 0x41	; 65
     ffa:	31 09       	sbc	r19, r1
     ffc:	89 81       	ldd	r24, Y+1	; 0x01
     ffe:	9a 81       	ldd	r25, Y+2	; 0x02
    1000:	49 89       	ldd	r20, Y+17	; 0x11
    1002:	5a 89       	ldd	r21, Y+18	; 0x12
    1004:	84 0f       	add	r24, r20
    1006:	95 1f       	adc	r25, r21
    1008:	2a 31       	cpi	r18, 0x1A	; 26
    100a:	31 05       	cpc	r19, r1
    100c:	20 f4       	brcc	.+8      	; 0x1016 <__EEPROM_REGION_LENGTH__+0x16>
    100e:	40 eb       	ldi	r20, 0xB0	; 176
    1010:	56 e0       	ldi	r21, 0x06	; 6
    1012:	60 e0       	ldi	r22, 0x00	; 0
    1014:	03 c0       	rjmp	.+6      	; 0x101c <__EEPROM_REGION_LENGTH__+0x1c>
    1016:	44 eb       	ldi	r20, 0xB4	; 180
    1018:	56 e0       	ldi	r21, 0x06	; 6
    101a:	60 e0       	ldi	r22, 0x00	; 0
    101c:	0e 94 c0 23 	call	0x4780	; 0x4780 <strcpy>
    1020:	64 eb       	ldi	r22, 0xB4	; 180
    1022:	76 e0       	ldi	r23, 0x06	; 6
    1024:	80 e0       	ldi	r24, 0x00	; 0
    1026:	0e 94 8d 23 	call	0x471a	; 0x471a <strlen>
    102a:	e9 81       	ldd	r30, Y+1	; 0x01
    102c:	fa 81       	ldd	r31, Y+2	; 0x02
    102e:	af 01       	movw	r20, r30
    1030:	60 e8       	ldi	r22, 0x80	; 128
    1032:	e9 84       	ldd	r14, Y+9	; 0x09
    1034:	fa 84       	ldd	r15, Y+10	; 0x0a
    1036:	0b 89       	ldd	r16, Y+19	; 0x13
    1038:	1c 89       	ldd	r17, Y+20	; 0x14
    103a:	9c 01       	movw	r18, r24
    103c:	a1 c2       	rjmp	.+1346   	; 0x1580 <__EEPROM_REGION_LENGTH__+0x580>
    103e:	20 e0       	ldi	r18, 0x00	; 0
    1040:	30 e0       	ldi	r19, 0x00	; 0
    1042:	a9 01       	movw	r20, r18
    1044:	c5 01       	movw	r24, r10
    1046:	b4 01       	movw	r22, r8
    1048:	0e 94 96 24 	call	0x492c	; 0x492c <__cmpsf2>
    104c:	1b 82       	std	Y+3, r1	; 0x03
    104e:	1c 82       	std	Y+4, r1	; 0x04
    1050:	88 23       	and	r24, r24
    1052:	09 f4       	brne	.+2      	; 0x1056 <__EEPROM_REGION_LENGTH__+0x56>
    1054:	67 c0       	rjmp	.+206    	; 0x1124 <__EEPROM_REGION_LENGTH__+0x124>
    1056:	f0 e8       	ldi	r31, 0x80	; 128
    1058:	fd 83       	std	Y+5, r31	; 0x05
    105a:	2f e3       	ldi	r18, 0x3F	; 63
    105c:	2e 83       	std	Y+6, r18	; 0x06
    105e:	21 2c       	mov	r2, r1
    1060:	31 2c       	mov	r3, r1
    1062:	20 e0       	ldi	r18, 0x00	; 0
    1064:	30 e0       	ldi	r19, 0x00	; 0
    1066:	40 e2       	ldi	r20, 0x20	; 32
    1068:	51 e4       	ldi	r21, 0x41	; 65
    106a:	6b 81       	ldd	r22, Y+3	; 0x03
    106c:	7c 81       	ldd	r23, Y+4	; 0x04
    106e:	8d 81       	ldd	r24, Y+5	; 0x05
    1070:	9e 81       	ldd	r25, Y+6	; 0x06
    1072:	0e 94 a4 24 	call	0x4948	; 0x4948 <__mulsf3>
    1076:	f6 2e       	mov	r15, r22
    1078:	07 2f       	mov	r16, r23
    107a:	8d 87       	std	Y+13, r24	; 0x0d
    107c:	9b 87       	std	Y+11, r25	; 0x0b
    107e:	a5 01       	movw	r20, r10
    1080:	94 01       	movw	r18, r8
    1082:	0e 94 9b 24 	call	0x4936	; 0x4936 <__gesf2>
    1086:	18 16       	cp	r1, r24
    1088:	54 f0       	brlt	.+20     	; 0x109e <__EEPROM_REGION_LENGTH__+0x9e>
    108a:	3f ef       	ldi	r19, 0xFF	; 255
    108c:	23 1a       	sub	r2, r19
    108e:	33 0a       	sbc	r3, r19
    1090:	fb 82       	std	Y+3, r15	; 0x03
    1092:	0c 83       	std	Y+4, r16	; 0x04
    1094:	4d 85       	ldd	r20, Y+13	; 0x0d
    1096:	4d 83       	std	Y+5, r20	; 0x05
    1098:	5b 85       	ldd	r21, Y+11	; 0x0b
    109a:	5e 83       	std	Y+6, r21	; 0x06
    109c:	e2 cf       	rjmp	.-60     	; 0x1062 <__EEPROM_REGION_LENGTH__+0x62>
    109e:	1c 86       	std	Y+12, r1	; 0x0c
    10a0:	1b 86       	std	Y+11, r1	; 0x0b
    10a2:	2b 81       	ldd	r18, Y+3	; 0x03
    10a4:	3c 81       	ldd	r19, Y+4	; 0x04
    10a6:	4d 81       	ldd	r20, Y+5	; 0x05
    10a8:	5e 81       	ldd	r21, Y+6	; 0x06
    10aa:	c5 01       	movw	r24, r10
    10ac:	b4 01       	movw	r22, r8
    10ae:	0e 94 96 24 	call	0x492c	; 0x492c <__cmpsf2>
    10b2:	87 ff       	sbrs	r24, 7
    10b4:	3d c0       	rjmp	.+122    	; 0x1130 <__EEPROM_REGION_LENGTH__+0x130>
    10b6:	84 ed       	ldi	r24, 0xD4	; 212
    10b8:	28 16       	cp	r2, r24
    10ba:	8e ef       	ldi	r24, 0xFE	; 254
    10bc:	38 06       	cpc	r3, r24
    10be:	04 f5       	brge	.+64     	; 0x1100 <__EEPROM_REGION_LENGTH__+0x100>
    10c0:	eb 85       	ldd	r30, Y+11	; 0x0b
    10c2:	fc 85       	ldd	r31, Y+12	; 0x0c
    10c4:	ef 2b       	or	r30, r31
    10c6:	e1 f4       	brne	.+56     	; 0x1100 <__EEPROM_REGION_LENGTH__+0x100>
    10c8:	20 e0       	ldi	r18, 0x00	; 0
    10ca:	30 e0       	ldi	r19, 0x00	; 0
    10cc:	40 e8       	ldi	r20, 0x80	; 128
    10ce:	5a e5       	ldi	r21, 0x5A	; 90
    10d0:	c5 01       	movw	r24, r10
    10d2:	b4 01       	movw	r22, r8
    10d4:	0e 94 a4 24 	call	0x4948	; 0x4948 <__mulsf3>
    10d8:	4b 01       	movw	r8, r22
    10da:	5c 01       	movw	r10, r24
    10dc:	20 e0       	ldi	r18, 0x00	; 0
    10de:	30 e0       	ldi	r19, 0x00	; 0
    10e0:	40 e8       	ldi	r20, 0x80	; 128
    10e2:	5a e5       	ldi	r21, 0x5A	; 90
    10e4:	6b 81       	ldd	r22, Y+3	; 0x03
    10e6:	7c 81       	ldd	r23, Y+4	; 0x04
    10e8:	8d 81       	ldd	r24, Y+5	; 0x05
    10ea:	9e 81       	ldd	r25, Y+6	; 0x06
    10ec:	0e 94 a4 24 	call	0x4948	; 0x4948 <__mulsf3>
    10f0:	6b 83       	std	Y+3, r22	; 0x03
    10f2:	7c 83       	std	Y+4, r23	; 0x04
    10f4:	8d 83       	std	Y+5, r24	; 0x05
    10f6:	9e 83       	std	Y+6, r25	; 0x06
    10f8:	21 e0       	ldi	r18, 0x01	; 1
    10fa:	30 e0       	ldi	r19, 0x00	; 0
    10fc:	3c 87       	std	Y+12, r19	; 0x0c
    10fe:	2b 87       	std	Y+11, r18	; 0x0b
    1100:	20 e0       	ldi	r18, 0x00	; 0
    1102:	30 e0       	ldi	r19, 0x00	; 0
    1104:	40 e2       	ldi	r20, 0x20	; 32
    1106:	51 e4       	ldi	r21, 0x41	; 65
    1108:	6b 81       	ldd	r22, Y+3	; 0x03
    110a:	7c 81       	ldd	r23, Y+4	; 0x04
    110c:	8d 81       	ldd	r24, Y+5	; 0x05
    110e:	9e 81       	ldd	r25, Y+6	; 0x06
    1110:	0e 94 a0 24 	call	0x4940	; 0x4940 <__divsf3>
    1114:	6b 83       	std	Y+3, r22	; 0x03
    1116:	7c 83       	std	Y+4, r23	; 0x04
    1118:	8d 83       	std	Y+5, r24	; 0x05
    111a:	9e 83       	std	Y+6, r25	; 0x06
    111c:	31 e0       	ldi	r19, 0x01	; 1
    111e:	23 1a       	sub	r2, r19
    1120:	31 08       	sbc	r3, r1
    1122:	bf cf       	rjmp	.-130    	; 0x10a2 <__EEPROM_REGION_LENGTH__+0xa2>
    1124:	40 e8       	ldi	r20, 0x80	; 128
    1126:	4d 83       	std	Y+5, r20	; 0x05
    1128:	5f e3       	ldi	r21, 0x3F	; 63
    112a:	5e 83       	std	Y+6, r21	; 0x06
    112c:	21 2c       	mov	r2, r1
    112e:	31 2c       	mov	r3, r1
    1130:	81 2f       	mov	r24, r17
    1132:	11 0f       	add	r17, r17
    1134:	99 0b       	sbc	r25, r25
    1136:	9b a3       	std	Y+35, r25	; 0x23
    1138:	8a a3       	std	Y+34, r24	; 0x22
    113a:	0e 94 42 24 	call	0x4884	; 0x4884 <tolower>
    113e:	8b 8f       	std	Y+27, r24	; 0x1b
    1140:	d7 fc       	sbrc	r13, 7
    1142:	03 c0       	rjmp	.+6      	; 0x114a <__EEPROM_REGION_LENGTH__+0x14a>
    1144:	de a2       	std	Y+38, r13	; 0x26
    1146:	cd a2       	std	Y+37, r12	; 0x25
    1148:	04 c0       	rjmp	.+8      	; 0x1152 <__EEPROM_REGION_LENGTH__+0x152>
    114a:	e6 e0       	ldi	r30, 0x06	; 6
    114c:	f0 e0       	ldi	r31, 0x00	; 0
    114e:	fe a3       	std	Y+38, r31	; 0x26
    1150:	ed a3       	std	Y+37, r30	; 0x25
    1152:	fb 8d       	ldd	r31, Y+27	; 0x1b
    1154:	f7 36       	cpi	r31, 0x67	; 103
    1156:	41 f4       	brne	.+16     	; 0x1168 <__EEPROM_REGION_LENGTH__+0x168>
    1158:	cd 28       	or	r12, r13
    115a:	09 f0       	breq	.+2      	; 0x115e <__EEPROM_REGION_LENGTH__+0x15e>
    115c:	1e c2       	rjmp	.+1084   	; 0x159a <__EEPROM_REGION_LENGTH__+0x59a>
    115e:	21 e0       	ldi	r18, 0x01	; 1
    1160:	30 e0       	ldi	r19, 0x00	; 0
    1162:	3e a3       	std	Y+38, r19	; 0x26
    1164:	2d a3       	std	Y+37, r18	; 0x25
    1166:	19 c2       	rjmp	.+1074   	; 0x159a <__EEPROM_REGION_LENGTH__+0x59a>
    1168:	8b 8d       	ldd	r24, Y+27	; 0x1b
    116a:	8d 8b       	std	Y+21, r24	; 0x15
    116c:	04 c0       	rjmp	.+8      	; 0x1176 <__EEPROM_REGION_LENGTH__+0x176>
    116e:	37 fe       	sbrs	r3, 7
    1170:	25 c2       	rjmp	.+1098   	; 0x15bc <__EEPROM_REGION_LENGTH__+0x5bc>
    1172:	96 e6       	ldi	r25, 0x66	; 102
    1174:	9d 8b       	std	Y+21, r25	; 0x15
    1176:	ed a1       	ldd	r30, Y+37	; 0x25
    1178:	fe a1       	ldd	r31, Y+38	; 0x26
    117a:	31 96       	adiw	r30, 0x01	; 1
    117c:	fe a3       	std	Y+38, r31	; 0x26
    117e:	ed a3       	std	Y+37, r30	; 0x25
    1180:	fd 89       	ldd	r31, Y+21	; 0x15
    1182:	f6 36       	cpi	r31, 0x66	; 102
    1184:	99 f4       	brne	.+38     	; 0x11ac <__EEPROM_REGION_LENGTH__+0x1ac>
    1186:	37 fe       	sbrs	r3, 7
    1188:	08 c0       	rjmp	.+16     	; 0x119a <__EEPROM_REGION_LENGTH__+0x19a>
    118a:	1b 82       	std	Y+3, r1	; 0x03
    118c:	1c 82       	std	Y+4, r1	; 0x04
    118e:	20 e8       	ldi	r18, 0x80	; 128
    1190:	2d 83       	std	Y+5, r18	; 0x05
    1192:	3f e3       	ldi	r19, 0x3F	; 63
    1194:	3e 83       	std	Y+6, r19	; 0x06
    1196:	21 2c       	mov	r2, r1
    1198:	31 2c       	mov	r3, r1
    119a:	4b 8d       	ldd	r20, Y+27	; 0x1b
    119c:	47 36       	cpi	r20, 0x67	; 103
    119e:	31 f0       	breq	.+12     	; 0x11ac <__EEPROM_REGION_LENGTH__+0x1ac>
    11a0:	8d a1       	ldd	r24, Y+37	; 0x25
    11a2:	9e a1       	ldd	r25, Y+38	; 0x26
    11a4:	82 0d       	add	r24, r2
    11a6:	93 1d       	adc	r25, r3
    11a8:	9e a3       	std	Y+38, r25	; 0x26
    11aa:	8d a3       	std	Y+37, r24	; 0x25
    11ac:	9b 81       	ldd	r25, Y+3	; 0x03
    11ae:	9b 87       	std	Y+11, r25	; 0x0b
    11b0:	ec 81       	ldd	r30, Y+4	; 0x04
    11b2:	ed 87       	std	Y+13, r30	; 0x0d
    11b4:	fd 81       	ldd	r31, Y+5	; 0x05
    11b6:	fe 8b       	std	Y+22, r31	; 0x16
    11b8:	2e 81       	ldd	r18, Y+6	; 0x06
    11ba:	2a 8f       	std	Y+26, r18	; 0x1a
    11bc:	75 01       	movw	r14, r10
    11be:	64 01       	movw	r12, r8
    11c0:	1d 8e       	std	Y+29, r1	; 0x1d
    11c2:	1c 8e       	std	Y+28, r1	; 0x1c
    11c4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    11c6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    11c8:	ed a1       	ldd	r30, Y+37	; 0x25
    11ca:	fe a1       	ldd	r31, Y+38	; 0x26
    11cc:	8e 17       	cp	r24, r30
    11ce:	9f 07       	cpc	r25, r31
    11d0:	c1 f1       	breq	.+112    	; 0x1242 <__EEPROM_REGION_LENGTH__+0x242>
    11d2:	2b 85       	ldd	r18, Y+11	; 0x0b
    11d4:	3d 85       	ldd	r19, Y+13	; 0x0d
    11d6:	4e 89       	ldd	r20, Y+22	; 0x16
    11d8:	5a 8d       	ldd	r21, Y+26	; 0x1a
    11da:	c7 01       	movw	r24, r14
    11dc:	b6 01       	movw	r22, r12
    11de:	0e 94 a0 24 	call	0x4940	; 0x4940 <__divsf3>
    11e2:	0e 94 74 15 	call	0x2ae8	; 0x2ae8 <floorf>
    11e6:	2b 01       	movw	r4, r22
    11e8:	3c 01       	movw	r6, r24
    11ea:	0e 94 74 24 	call	0x48e8	; 0x48e8 <__fixsfsi>
    11ee:	6c a3       	std	Y+36, r22	; 0x24
    11f0:	87 01       	movw	r16, r14
    11f2:	76 01       	movw	r14, r12
    11f4:	17 fb       	bst	r17, 7
    11f6:	10 95       	com	r17
    11f8:	17 f9       	bld	r17, 7
    11fa:	10 95       	com	r17
    11fc:	2b 85       	ldd	r18, Y+11	; 0x0b
    11fe:	3d 85       	ldd	r19, Y+13	; 0x0d
    1200:	4e 89       	ldd	r20, Y+22	; 0x16
    1202:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1204:	c3 01       	movw	r24, r6
    1206:	b2 01       	movw	r22, r4
    1208:	0e 94 d6 14 	call	0x29ac	; 0x29ac <fmaf>
    120c:	6b 01       	movw	r12, r22
    120e:	7c 01       	movw	r14, r24
    1210:	f7 fa       	bst	r15, 7
    1212:	f0 94       	com	r15
    1214:	f7 f8       	bld	r15, 7
    1216:	f0 94       	com	r15
    1218:	20 e0       	ldi	r18, 0x00	; 0
    121a:	30 e0       	ldi	r19, 0x00	; 0
    121c:	40 e2       	ldi	r20, 0x20	; 32
    121e:	51 e4       	ldi	r21, 0x41	; 65
    1220:	6b 85       	ldd	r22, Y+11	; 0x0b
    1222:	7d 85       	ldd	r23, Y+13	; 0x0d
    1224:	8e 89       	ldd	r24, Y+22	; 0x16
    1226:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1228:	0e 94 a0 24 	call	0x4940	; 0x4940 <__divsf3>
    122c:	6b 87       	std	Y+11, r22	; 0x0b
    122e:	7d 87       	std	Y+13, r23	; 0x0d
    1230:	8e 8b       	std	Y+22, r24	; 0x16
    1232:	9a 8f       	std	Y+26, r25	; 0x1a
    1234:	4c 8d       	ldd	r20, Y+28	; 0x1c
    1236:	5d 8d       	ldd	r21, Y+29	; 0x1d
    1238:	4f 5f       	subi	r20, 0xFF	; 255
    123a:	5f 4f       	sbci	r21, 0xFF	; 255
    123c:	5d 8f       	std	Y+29, r21	; 0x1d
    123e:	4c 8f       	std	Y+28, r20	; 0x1c
    1240:	c1 cf       	rjmp	.-126    	; 0x11c4 <__EEPROM_REGION_LENGTH__+0x1c4>
    1242:	20 e0       	ldi	r18, 0x00	; 0
    1244:	30 e0       	ldi	r19, 0x00	; 0
    1246:	40 ea       	ldi	r20, 0xA0	; 160
    1248:	50 e4       	ldi	r21, 0x40	; 64
    124a:	6b 85       	ldd	r22, Y+11	; 0x0b
    124c:	7d 85       	ldd	r23, Y+13	; 0x0d
    124e:	8e 89       	ldd	r24, Y+22	; 0x16
    1250:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1252:	0e 94 a4 24 	call	0x4948	; 0x4948 <__mulsf3>
    1256:	2b 01       	movw	r4, r22
    1258:	3c 01       	movw	r6, r24
    125a:	9b 01       	movw	r18, r22
    125c:	ac 01       	movw	r20, r24
    125e:	c7 01       	movw	r24, r14
    1260:	b6 01       	movw	r22, r12
    1262:	0e 94 96 24 	call	0x492c	; 0x492c <__cmpsf2>
    1266:	87 fd       	sbrc	r24, 7
    1268:	0b c0       	rjmp	.+22     	; 0x1280 <__EEPROM_REGION_LENGTH__+0x280>
    126a:	a3 01       	movw	r20, r6
    126c:	92 01       	movw	r18, r4
    126e:	c7 01       	movw	r24, r14
    1270:	b6 01       	movw	r22, r12
    1272:	0e 94 96 24 	call	0x492c	; 0x492c <__cmpsf2>
    1276:	81 11       	cpse	r24, r1
    1278:	06 c0       	rjmp	.+12     	; 0x1286 <__EEPROM_REGION_LENGTH__+0x286>
    127a:	fc a1       	ldd	r31, Y+36	; 0x24
    127c:	f0 fd       	sbrc	r31, 0
    127e:	03 c0       	rjmp	.+6      	; 0x1286 <__EEPROM_REGION_LENGTH__+0x286>
    1280:	41 2c       	mov	r4, r1
    1282:	51 2c       	mov	r5, r1
    1284:	32 01       	movw	r6, r4
    1286:	a3 01       	movw	r20, r6
    1288:	92 01       	movw	r18, r4
    128a:	c5 01       	movw	r24, r10
    128c:	b4 01       	movw	r22, r8
    128e:	0e 94 6e 24 	call	0x48dc	; 0x48dc <__addsf3>
    1292:	4b 01       	movw	r8, r22
    1294:	5c 01       	movw	r10, r24
    1296:	2d 89       	ldd	r18, Y+21	; 0x15
    1298:	25 36       	cpi	r18, 0x65	; 101
    129a:	11 f0       	breq	.+4      	; 0x12a0 <__EEPROM_REGION_LENGTH__+0x2a0>
    129c:	31 01       	movw	r6, r2
    129e:	02 c0       	rjmp	.+4      	; 0x12a4 <__EEPROM_REGION_LENGTH__+0x2a4>
    12a0:	61 2c       	mov	r6, r1
    12a2:	71 2c       	mov	r7, r1
    12a4:	23 01       	movw	r4, r6
    12a6:	4d a1       	ldd	r20, Y+37	; 0x25
    12a8:	5e a1       	ldd	r21, Y+38	; 0x26
    12aa:	44 1a       	sub	r4, r20
    12ac:	55 0a       	sbc	r5, r21
    12ae:	c9 88       	ldd	r12, Y+17	; 0x11
    12b0:	da 88       	ldd	r13, Y+18	; 0x12
    12b2:	00 e0       	ldi	r16, 0x00	; 0
    12b4:	10 e0       	ldi	r17, 0x00	; 0
    12b6:	1c 86       	std	Y+12, r1	; 0x0c
    12b8:	1b 86       	std	Y+11, r1	; 0x0b
    12ba:	89 85       	ldd	r24, Y+9	; 0x09
    12bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    12be:	80 71       	andi	r24, 0x10	; 16
    12c0:	99 27       	eor	r25, r25
    12c2:	9f 8b       	std	Y+23, r25	; 0x17
    12c4:	8e 8b       	std	Y+22, r24	; 0x16
    12c6:	64 14       	cp	r6, r4
    12c8:	75 04       	cpc	r7, r5
    12ca:	31 f4       	brne	.+12     	; 0x12d8 <__EEPROM_REGION_LENGTH__+0x2d8>
    12cc:	8b 85       	ldd	r24, Y+11	; 0x0b
    12ce:	9c 85       	ldd	r25, Y+12	; 0x0c
    12d0:	89 2b       	or	r24, r25
    12d2:	09 f4       	brne	.+2      	; 0x12d6 <__EEPROM_REGION_LENGTH__+0x2d6>
    12d4:	9a c0       	rjmp	.+308    	; 0x140a <__EEPROM_REGION_LENGTH__+0x40a>
    12d6:	a6 c0       	rjmp	.+332    	; 0x1424 <__EEPROM_REGION_LENGTH__+0x424>
    12d8:	dd 8e       	std	Y+29, r13	; 0x1d
    12da:	cc 8e       	std	Y+28, r12	; 0x1c
    12dc:	e8 8d       	ldd	r30, Y+24	; 0x18
    12de:	f9 8d       	ldd	r31, Y+25	; 0x19
    12e0:	80 85       	ldd	r24, Z+8	; 0x08
    12e2:	91 85       	ldd	r25, Z+9	; 0x09
    12e4:	05 97       	sbiw	r24, 0x05	; 5
    12e6:	c8 16       	cp	r12, r24
    12e8:	d9 06       	cpc	r13, r25
    12ea:	80 f7       	brcc	.-32     	; 0x12cc <__EEPROM_REGION_LENGTH__+0x2cc>
    12ec:	2b 81       	ldd	r18, Y+3	; 0x03
    12ee:	3c 81       	ldd	r19, Y+4	; 0x04
    12f0:	4d 81       	ldd	r20, Y+5	; 0x05
    12f2:	5e 81       	ldd	r21, Y+6	; 0x06
    12f4:	c5 01       	movw	r24, r10
    12f6:	b4 01       	movw	r22, r8
    12f8:	0e 94 a0 24 	call	0x4940	; 0x4940 <__divsf3>
    12fc:	0e 94 74 15 	call	0x2ae8	; 0x2ae8 <floorf>
    1300:	6d 87       	std	Y+13, r22	; 0x0d
    1302:	7e 87       	std	Y+14, r23	; 0x0e
    1304:	8f 87       	std	Y+15, r24	; 0x0f
    1306:	98 8b       	std	Y+16, r25	; 0x10
    1308:	0e 94 74 24 	call	0x48e8	; 0x48e8 <__fixsfsi>
    130c:	cb 01       	movw	r24, r22
    130e:	ee 89       	ldd	r30, Y+22	; 0x16
    1310:	ff 89       	ldd	r31, Y+23	; 0x17
    1312:	ef 2b       	or	r30, r31
    1314:	69 f4       	brne	.+26     	; 0x1330 <__EEPROM_REGION_LENGTH__+0x330>
    1316:	89 2b       	or	r24, r25
    1318:	59 f4       	brne	.+22     	; 0x1330 <__EEPROM_REGION_LENGTH__+0x330>
    131a:	fb 8d       	ldd	r31, Y+27	; 0x1b
    131c:	f7 36       	cpi	r31, 0x67	; 103
    131e:	41 f4       	brne	.+16     	; 0x1330 <__EEPROM_REGION_LENGTH__+0x330>
    1320:	77 fe       	sbrs	r7, 7
    1322:	06 c0       	rjmp	.+12     	; 0x1330 <__EEPROM_REGION_LENGTH__+0x330>
    1324:	98 01       	movw	r18, r16
    1326:	2f 5f       	subi	r18, 0xFF	; 255
    1328:	3f 4f       	sbci	r19, 0xFF	; 255
    132a:	3d 8f       	std	Y+29, r19	; 0x1d
    132c:	2c 8f       	std	Y+28, r18	; 0x1c
    132e:	43 c0       	rjmp	.+134    	; 0x13b6 <__EEPROM_REGION_LENGTH__+0x3b6>
    1330:	4b 85       	ldd	r20, Y+11	; 0x0b
    1332:	5c 85       	ldd	r21, Y+12	; 0x0c
    1334:	45 2b       	or	r20, r21
    1336:	b1 f4       	brne	.+44     	; 0x1364 <__EEPROM_REGION_LENGTH__+0x364>
    1338:	77 fe       	sbrs	r7, 7
    133a:	14 c0       	rjmp	.+40     	; 0x1364 <__EEPROM_REGION_LENGTH__+0x364>
    133c:	5f ef       	ldi	r21, 0xFF	; 255
    133e:	c5 1a       	sub	r12, r21
    1340:	d5 0a       	sbc	r13, r21
    1342:	e9 81       	ldd	r30, Y+1	; 0x01
    1344:	fa 81       	ldd	r31, Y+2	; 0x02
    1346:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1348:	9d 8d       	ldd	r25, Y+29	; 0x1d
    134a:	e8 0f       	add	r30, r24
    134c:	f9 1f       	adc	r31, r25
    134e:	9e e2       	ldi	r25, 0x2E	; 46
    1350:	90 83       	st	Z, r25
    1352:	ef 81       	ldd	r30, Y+7	; 0x07
    1354:	f8 85       	ldd	r31, Y+8	; 0x08
    1356:	31 97       	sbiw	r30, 0x01	; 1
    1358:	f8 87       	std	Y+8, r31	; 0x08
    135a:	ef 83       	std	Y+7, r30	; 0x07
    135c:	21 e0       	ldi	r18, 0x01	; 1
    135e:	30 e0       	ldi	r19, 0x00	; 0
    1360:	3c 87       	std	Y+12, r19	; 0x0c
    1362:	2b 87       	std	Y+11, r18	; 0x0b
    1364:	e9 81       	ldd	r30, Y+1	; 0x01
    1366:	fa 81       	ldd	r31, Y+2	; 0x02
    1368:	ec 0d       	add	r30, r12
    136a:	fd 1d       	adc	r31, r13
    136c:	1d 8f       	std	Y+29, r17	; 0x1d
    136e:	0c 8f       	std	Y+28, r16	; 0x1c
    1370:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1372:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1374:	89 2b       	or	r24, r25
    1376:	49 f0       	breq	.+18     	; 0x138a <__EEPROM_REGION_LENGTH__+0x38a>
    1378:	30 e3       	ldi	r19, 0x30	; 48
    137a:	31 93       	st	Z+, r19
    137c:	4c 8d       	ldd	r20, Y+28	; 0x1c
    137e:	5d 8d       	ldd	r21, Y+29	; 0x1d
    1380:	41 50       	subi	r20, 0x01	; 1
    1382:	51 09       	sbc	r21, r1
    1384:	5d 8f       	std	Y+29, r21	; 0x1d
    1386:	4c 8f       	std	Y+28, r20	; 0x1c
    1388:	f3 cf       	rjmp	.-26     	; 0x1370 <__EEPROM_REGION_LENGTH__+0x370>
    138a:	c8 01       	movw	r24, r16
    138c:	8c 0d       	add	r24, r12
    138e:	9d 1d       	adc	r25, r13
    1390:	2f 81       	ldd	r18, Y+7	; 0x07
    1392:	38 85       	ldd	r19, Y+8	; 0x08
    1394:	20 1b       	sub	r18, r16
    1396:	31 0b       	sbc	r19, r17
    1398:	6c 01       	movw	r12, r24
    139a:	ef ef       	ldi	r30, 0xFF	; 255
    139c:	ce 1a       	sub	r12, r30
    139e:	de 0a       	sbc	r13, r30
    13a0:	e9 81       	ldd	r30, Y+1	; 0x01
    13a2:	fa 81       	ldd	r31, Y+2	; 0x02
    13a4:	e8 0f       	add	r30, r24
    13a6:	f9 1f       	adc	r31, r25
    13a8:	60 5d       	subi	r22, 0xD0	; 208
    13aa:	60 83       	st	Z, r22
    13ac:	a9 01       	movw	r20, r18
    13ae:	41 50       	subi	r20, 0x01	; 1
    13b0:	51 09       	sbc	r21, r1
    13b2:	58 87       	std	Y+8, r21	; 0x08
    13b4:	4f 83       	std	Y+7, r20	; 0x07
    13b6:	85 01       	movw	r16, r10
    13b8:	74 01       	movw	r14, r8
    13ba:	17 fb       	bst	r17, 7
    13bc:	10 95       	com	r17
    13be:	17 f9       	bld	r17, 7
    13c0:	10 95       	com	r17
    13c2:	2b 81       	ldd	r18, Y+3	; 0x03
    13c4:	3c 81       	ldd	r19, Y+4	; 0x04
    13c6:	4d 81       	ldd	r20, Y+5	; 0x05
    13c8:	5e 81       	ldd	r21, Y+6	; 0x06
    13ca:	6d 85       	ldd	r22, Y+13	; 0x0d
    13cc:	7e 85       	ldd	r23, Y+14	; 0x0e
    13ce:	8f 85       	ldd	r24, Y+15	; 0x0f
    13d0:	98 89       	ldd	r25, Y+16	; 0x10
    13d2:	0e 94 d6 14 	call	0x29ac	; 0x29ac <fmaf>
    13d6:	4b 01       	movw	r8, r22
    13d8:	5c 01       	movw	r10, r24
    13da:	b7 fa       	bst	r11, 7
    13dc:	b0 94       	com	r11
    13de:	b7 f8       	bld	r11, 7
    13e0:	b0 94       	com	r11
    13e2:	20 e0       	ldi	r18, 0x00	; 0
    13e4:	30 e0       	ldi	r19, 0x00	; 0
    13e6:	40 e2       	ldi	r20, 0x20	; 32
    13e8:	51 e4       	ldi	r21, 0x41	; 65
    13ea:	6b 81       	ldd	r22, Y+3	; 0x03
    13ec:	7c 81       	ldd	r23, Y+4	; 0x04
    13ee:	8d 81       	ldd	r24, Y+5	; 0x05
    13f0:	9e 81       	ldd	r25, Y+6	; 0x06
    13f2:	0e 94 a0 24 	call	0x4940	; 0x4940 <__divsf3>
    13f6:	6b 83       	std	Y+3, r22	; 0x03
    13f8:	7c 83       	std	Y+4, r23	; 0x04
    13fa:	8d 83       	std	Y+5, r24	; 0x05
    13fc:	9e 83       	std	Y+6, r25	; 0x06
    13fe:	51 e0       	ldi	r21, 0x01	; 1
    1400:	65 1a       	sub	r6, r21
    1402:	71 08       	sbc	r7, r1
    1404:	0c 8d       	ldd	r16, Y+28	; 0x1c
    1406:	1d 8d       	ldd	r17, Y+29	; 0x1d
    1408:	5e cf       	rjmp	.-324    	; 0x12c6 <__EEPROM_REGION_LENGTH__+0x2c6>
    140a:	f9 85       	ldd	r31, Y+9	; 0x09
    140c:	f4 ff       	sbrs	r31, 4
    140e:	0a c0       	rjmp	.+20     	; 0x1424 <__EEPROM_REGION_LENGTH__+0x424>
    1410:	e9 81       	ldd	r30, Y+1	; 0x01
    1412:	fa 81       	ldd	r31, Y+2	; 0x02
    1414:	ec 0d       	add	r30, r12
    1416:	fd 1d       	adc	r31, r13
    1418:	8e e2       	ldi	r24, 0x2E	; 46
    141a:	80 83       	st	Z, r24
    141c:	96 01       	movw	r18, r12
    141e:	2f 5f       	subi	r18, 0xFF	; 255
    1420:	3f 4f       	sbci	r19, 0xFF	; 255
    1422:	69 01       	movw	r12, r18
    1424:	49 81       	ldd	r20, Y+1	; 0x01
    1426:	5a 81       	ldd	r21, Y+2	; 0x02
    1428:	4c 0d       	add	r20, r12
    142a:	5d 1d       	adc	r21, r13
    142c:	5c 87       	std	Y+12, r21	; 0x0c
    142e:	4b 87       	std	Y+11, r20	; 0x0b
    1430:	fa 01       	movw	r30, r20
    1432:	10 82       	st	Z, r1
    1434:	fd 89       	ldd	r31, Y+21	; 0x15
    1436:	f5 36       	cpi	r31, 0x65	; 101
    1438:	09 f0       	breq	.+2      	; 0x143c <__EEPROM_REGION_LENGTH__+0x43c>
    143a:	61 c0       	rjmp	.+194    	; 0x14fe <__EEPROM_REGION_LENGTH__+0x4fe>
    143c:	e9 81       	ldd	r30, Y+1	; 0x01
    143e:	fa 81       	ldd	r31, Y+2	; 0x02
    1440:	28 a1       	ldd	r18, Y+32	; 0x20
    1442:	39 a1       	ldd	r19, Y+33	; 0x21
    1444:	e2 0f       	add	r30, r18
    1446:	f3 1f       	adc	r31, r19
    1448:	31 97       	sbiw	r30, 0x01	; 1
    144a:	10 82       	st	Z, r1
    144c:	37 fe       	sbrs	r3, 7
    144e:	06 c0       	rjmp	.+12     	; 0x145c <__EEPROM_REGION_LENGTH__+0x45c>
    1450:	31 94       	neg	r3
    1452:	21 94       	neg	r2
    1454:	31 08       	sbc	r3, r1
    1456:	01 e0       	ldi	r16, 0x01	; 1
    1458:	10 e0       	ldi	r17, 0x00	; 0
    145a:	02 c0       	rjmp	.+4      	; 0x1460 <__EEPROM_REGION_LENGTH__+0x460>
    145c:	00 e0       	ldi	r16, 0x00	; 0
    145e:	10 e0       	ldi	r17, 0x00	; 0
    1460:	e8 a1       	ldd	r30, Y+32	; 0x20
    1462:	f9 a1       	ldd	r31, Y+33	; 0x21
    1464:	31 97       	sbiw	r30, 0x01	; 1
    1466:	49 81       	ldd	r20, Y+1	; 0x01
    1468:	5a 81       	ldd	r21, Y+2	; 0x02
    146a:	e4 0f       	add	r30, r20
    146c:	f5 1f       	adc	r31, r21
    146e:	22 e0       	ldi	r18, 0x02	; 2
    1470:	30 e0       	ldi	r19, 0x00	; 0
    1472:	8a e0       	ldi	r24, 0x0A	; 10
    1474:	e8 2e       	mov	r14, r24
    1476:	f1 2c       	mov	r15, r1
    1478:	cf 01       	movw	r24, r30
    147a:	49 81       	ldd	r20, Y+1	; 0x01
    147c:	5a 81       	ldd	r21, Y+2	; 0x02
    147e:	84 1b       	sub	r24, r20
    1480:	95 0b       	sbc	r25, r21
    1482:	21 14       	cp	r2, r1
    1484:	31 04       	cpc	r3, r1
    1486:	79 f0       	breq	.+30     	; 0x14a6 <__EEPROM_REGION_LENGTH__+0x4a6>
    1488:	c1 01       	movw	r24, r2
    148a:	b7 01       	movw	r22, r14
    148c:	0e 94 1a 23 	call	0x4634	; 0x4634 <__divmodhi4>
    1490:	80 5d       	subi	r24, 0xD0	; 208
    1492:	82 93       	st	-Z, r24
    1494:	1b 01       	movw	r2, r22
    1496:	21 50       	subi	r18, 0x01	; 1
    1498:	31 09       	sbc	r19, r1
    149a:	8f 81       	ldd	r24, Y+7	; 0x07
    149c:	98 85       	ldd	r25, Y+8	; 0x08
    149e:	01 97       	sbiw	r24, 0x01	; 1
    14a0:	98 87       	std	Y+8, r25	; 0x08
    14a2:	8f 83       	std	Y+7, r24	; 0x07
    14a4:	e9 cf       	rjmp	.-46     	; 0x1478 <__EEPROM_REGION_LENGTH__+0x478>
    14a6:	12 16       	cp	r1, r18
    14a8:	13 06       	cpc	r1, r19
    14aa:	74 f3       	brlt	.-36     	; 0x1488 <__EEPROM_REGION_LENGTH__+0x488>
    14ac:	fc 01       	movw	r30, r24
    14ae:	31 97       	sbiw	r30, 0x01	; 1
    14b0:	e4 0f       	add	r30, r20
    14b2:	f5 1f       	adc	r31, r21
    14b4:	01 2b       	or	r16, r17
    14b6:	11 f4       	brne	.+4      	; 0x14bc <__EEPROM_REGION_LENGTH__+0x4bc>
    14b8:	2b e2       	ldi	r18, 0x2B	; 43
    14ba:	01 c0       	rjmp	.+2      	; 0x14be <__EEPROM_REGION_LENGTH__+0x4be>
    14bc:	2d e2       	ldi	r18, 0x2D	; 45
    14be:	20 83       	st	Z, r18
    14c0:	02 97       	sbiw	r24, 0x02	; 2
    14c2:	e9 81       	ldd	r30, Y+1	; 0x01
    14c4:	fa 81       	ldd	r31, Y+2	; 0x02
    14c6:	e8 0f       	add	r30, r24
    14c8:	f9 1f       	adc	r31, r25
    14ca:	2a a1       	ldd	r18, Y+34	; 0x22
    14cc:	3b a1       	ldd	r19, Y+35	; 0x23
    14ce:	21 54       	subi	r18, 0x41	; 65
    14d0:	31 09       	sbc	r19, r1
    14d2:	2a 31       	cpi	r18, 0x1A	; 26
    14d4:	31 05       	cpc	r19, r1
    14d6:	10 f0       	brcs	.+4      	; 0x14dc <__EEPROM_REGION_LENGTH__+0x4dc>
    14d8:	25 e6       	ldi	r18, 0x65	; 101
    14da:	01 c0       	rjmp	.+2      	; 0x14de <__EEPROM_REGION_LENGTH__+0x4de>
    14dc:	25 e4       	ldi	r18, 0x45	; 69
    14de:	20 83       	st	Z, r18
    14e0:	2f 81       	ldd	r18, Y+7	; 0x07
    14e2:	38 85       	ldd	r19, Y+8	; 0x08
    14e4:	22 50       	subi	r18, 0x02	; 2
    14e6:	31 09       	sbc	r19, r1
    14e8:	38 87       	std	Y+8, r19	; 0x08
    14ea:	2f 83       	std	Y+7, r18	; 0x07
    14ec:	c8 16       	cp	r12, r24
    14ee:	d9 06       	cpc	r13, r25
    14f0:	34 f4       	brge	.+12     	; 0x14fe <__EEPROM_REGION_LENGTH__+0x4fe>
    14f2:	af 01       	movw	r20, r30
    14f4:	60 e8       	ldi	r22, 0x80	; 128
    14f6:	8b 85       	ldd	r24, Y+11	; 0x0b
    14f8:	9c 85       	ldd	r25, Y+12	; 0x0c
    14fa:	0e 94 c0 23 	call	0x4780	; 0x4780 <strcpy>
    14fe:	49 81       	ldd	r20, Y+1	; 0x01
    1500:	5a 81       	ldd	r21, Y+2	; 0x02
    1502:	3a 01       	movw	r6, r20
    1504:	80 e8       	ldi	r24, 0x80	; 128
    1506:	88 2e       	mov	r8, r24
    1508:	99 85       	ldd	r25, Y+9	; 0x09
    150a:	91 ff       	sbrs	r25, 1
    150c:	2e c0       	rjmp	.+92     	; 0x156a <__EEPROM_REGION_LENGTH__+0x56a>
    150e:	90 fd       	sbrc	r25, 0
    1510:	2c c0       	rjmp	.+88     	; 0x156a <__EEPROM_REGION_LENGTH__+0x56a>
    1512:	ef 81       	ldd	r30, Y+7	; 0x07
    1514:	f8 85       	ldd	r31, Y+8	; 0x08
    1516:	1e 16       	cp	r1, r30
    1518:	1f 06       	cpc	r1, r31
    151a:	3c f5       	brge	.+78     	; 0x156a <__EEPROM_REGION_LENGTH__+0x56a>
    151c:	88 2d       	mov	r24, r8
    151e:	b3 01       	movw	r22, r6
    1520:	0e 94 8d 23 	call	0x471a	; 0x471a <strlen>
    1524:	29 81       	ldd	r18, Y+1	; 0x01
    1526:	3a 81       	ldd	r19, Y+2	; 0x02
    1528:	82 0f       	add	r24, r18
    152a:	93 1f       	adc	r25, r19
    152c:	9c 01       	movw	r18, r24
    152e:	49 81       	ldd	r20, Y+1	; 0x01
    1530:	5a 81       	ldd	r21, Y+2	; 0x02
    1532:	24 1b       	sub	r18, r20
    1534:	35 0b       	sbc	r19, r21
    1536:	e9 89       	ldd	r30, Y+17	; 0x11
    1538:	fa 89       	ldd	r31, Y+18	; 0x12
    153a:	2e 17       	cp	r18, r30
    153c:	3f 07       	cpc	r19, r31
    153e:	4c f0       	brlt	.+18     	; 0x1552 <__EEPROM_REGION_LENGTH__+0x552>
    1540:	fc 01       	movw	r30, r24
    1542:	20 81       	ld	r18, Z
    1544:	ef 81       	ldd	r30, Y+7	; 0x07
    1546:	f8 85       	ldd	r31, Y+8	; 0x08
    1548:	e8 0f       	add	r30, r24
    154a:	f9 1f       	adc	r31, r25
    154c:	20 83       	st	Z, r18
    154e:	01 97       	sbiw	r24, 0x01	; 1
    1550:	ed cf       	rjmp	.-38     	; 0x152c <__EEPROM_REGION_LENGTH__+0x52c>
    1552:	4f 81       	ldd	r20, Y+7	; 0x07
    1554:	58 85       	ldd	r21, Y+8	; 0x08
    1556:	60 e3       	ldi	r22, 0x30	; 48
    1558:	70 e0       	ldi	r23, 0x00	; 0
    155a:	89 81       	ldd	r24, Y+1	; 0x01
    155c:	9a 81       	ldd	r25, Y+2	; 0x02
    155e:	8e 0f       	add	r24, r30
    1560:	9f 1f       	adc	r25, r31
    1562:	0e 94 30 24 	call	0x4860	; 0x4860 <memset>
    1566:	1c 8a       	std	Y+20, r1	; 0x14
    1568:	1b 8a       	std	Y+19, r1	; 0x13
    156a:	88 2d       	mov	r24, r8
    156c:	b3 01       	movw	r22, r6
    156e:	0e 94 8d 23 	call	0x471a	; 0x471a <strlen>
    1572:	e9 84       	ldd	r14, Y+9	; 0x09
    1574:	fa 84       	ldd	r15, Y+10	; 0x0a
    1576:	0b 89       	ldd	r16, Y+19	; 0x13
    1578:	1c 89       	ldd	r17, Y+20	; 0x14
    157a:	9c 01       	movw	r18, r24
    157c:	68 2d       	mov	r22, r8
    157e:	a3 01       	movw	r20, r6
    1580:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1582:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1584:	0e 94 0d 16 	call	0x2c1a	; 0x2c1a <__pad>
    1588:	a6 96       	adiw	r28, 0x26	; 38
    158a:	e2 e1       	ldi	r30, 0x12	; 18
    158c:	0c 94 a3 22 	jmp	0x4546	; 0x4546 <__epilogue_restores__>
    1590:	59 85       	ldd	r21, Y+9	; 0x09
    1592:	53 ff       	sbrs	r21, 3
    1594:	00 cd       	rjmp	.-1536   	; 0xf96 <__fmt_fp+0x8e>
    1596:	80 e2       	ldi	r24, 0x20	; 32
    1598:	f0 cc       	rjmp	.-1568   	; 0xf7a <__fmt_fp+0x72>
    159a:	2c ef       	ldi	r18, 0xFC	; 252
    159c:	22 16       	cp	r2, r18
    159e:	2f ef       	ldi	r18, 0xFF	; 255
    15a0:	32 06       	cpc	r3, r18
    15a2:	4c f0       	brlt	.+18     	; 0x15b6 <__EEPROM_REGION_LENGTH__+0x5b6>
    15a4:	4d a1       	ldd	r20, Y+37	; 0x25
    15a6:	5e a1       	ldd	r21, Y+38	; 0x26
    15a8:	24 16       	cp	r2, r20
    15aa:	35 06       	cpc	r3, r21
    15ac:	0c f4       	brge	.+2      	; 0x15b0 <__EEPROM_REGION_LENGTH__+0x5b0>
    15ae:	df cd       	rjmp	.-1090   	; 0x116e <__EEPROM_REGION_LENGTH__+0x16e>
    15b0:	55 e6       	ldi	r21, 0x65	; 101
    15b2:	5d 8b       	std	Y+21, r21	; 0x15
    15b4:	fb cd       	rjmp	.-1034   	; 0x11ac <__EEPROM_REGION_LENGTH__+0x1ac>
    15b6:	35 e6       	ldi	r19, 0x65	; 101
    15b8:	3d 8b       	std	Y+21, r19	; 0x15
    15ba:	f8 cd       	rjmp	.-1040   	; 0x11ac <__EEPROM_REGION_LENGTH__+0x1ac>
    15bc:	46 e6       	ldi	r20, 0x66	; 102
    15be:	4d 8b       	std	Y+21, r20	; 0x15
    15c0:	f5 cd       	rjmp	.-1046   	; 0x11ac <__EEPROM_REGION_LENGTH__+0x1ac>

Disassembly of section .text.__fmt_a:

000015c2 <__fmt_a>:
    15c2:	a0 e2       	ldi	r26, 0x20	; 32
    15c4:	b0 e0       	ldi	r27, 0x00	; 0
    15c6:	e7 ee       	ldi	r30, 0xE7	; 231
    15c8:	fa e0       	ldi	r31, 0x0A	; 10
    15ca:	0c 94 6c 22 	jmp	0x44d8	; 0x44d8 <__prologue_saves__>
    15ce:	9d 8f       	std	Y+29, r25	; 0x1d
    15d0:	8c 8f       	std	Y+28, r24	; 0x1c
    15d2:	fb 01       	movw	r30, r22
    15d4:	29 83       	std	Y+1, r18	; 0x01
    15d6:	20 81       	ld	r18, Z
    15d8:	2d 83       	std	Y+5, r18	; 0x05
    15da:	31 81       	ldd	r19, Z+1	; 0x01
    15dc:	3e 8f       	std	Y+30, r19	; 0x1e
    15de:	82 81       	ldd	r24, Z+2	; 0x02
    15e0:	93 81       	ldd	r25, Z+3	; 0x03
    15e2:	9b 8b       	std	Y+19, r25	; 0x13
    15e4:	8a 8b       	std	Y+18, r24	; 0x12
    15e6:	24 81       	ldd	r18, Z+4	; 0x04
    15e8:	35 81       	ldd	r19, Z+5	; 0x05
    15ea:	39 87       	std	Y+9, r19	; 0x09
    15ec:	28 87       	std	Y+8, r18	; 0x08
    15ee:	80 85       	ldd	r24, Z+8	; 0x08
    15f0:	91 85       	ldd	r25, Z+9	; 0x09
    15f2:	99 8f       	std	Y+25, r25	; 0x19
    15f4:	88 8f       	std	Y+24, r24	; 0x18
    15f6:	46 80       	ldd	r4, Z+6	; 0x06
    15f8:	57 80       	ldd	r5, Z+7	; 0x07
    15fa:	fa 01       	movw	r30, r20
    15fc:	c0 80       	ld	r12, Z
    15fe:	d1 80       	ldd	r13, Z+1	; 0x01
    1600:	e2 80       	ldd	r14, Z+2	; 0x02
    1602:	f3 80       	ldd	r15, Z+3	; 0x03
    1604:	20 e0       	ldi	r18, 0x00	; 0
    1606:	30 e0       	ldi	r19, 0x00	; 0
    1608:	a9 01       	movw	r20, r18
    160a:	c7 01       	movw	r24, r14
    160c:	b6 01       	movw	r22, r12
    160e:	0e 94 96 24 	call	0x492c	; 0x492c <__cmpsf2>
    1612:	87 ff       	sbrs	r24, 7
    1614:	06 c0       	rjmp	.+12     	; 0x1622 <__fmt_a+0x60>
    1616:	f7 fa       	bst	r15, 7
    1618:	f0 94       	com	r15
    161a:	f7 f8       	bld	r15, 7
    161c:	f0 94       	com	r15
    161e:	8d e2       	ldi	r24, 0x2D	; 45
    1620:	04 c0       	rjmp	.+8      	; 0x162a <__fmt_a+0x68>
    1622:	5d 81       	ldd	r21, Y+5	; 0x05
    1624:	52 ff       	sbrs	r21, 2
    1626:	f6 c2       	rjmp	.+1516   	; 0x1c14 <__fmt_a+0x652>
    1628:	8b e2       	ldi	r24, 0x2B	; 43
    162a:	f2 01       	movw	r30, r4
    162c:	80 83       	st	Z, r24
    162e:	28 85       	ldd	r18, Y+8	; 0x08
    1630:	39 85       	ldd	r19, Y+9	; 0x09
    1632:	21 50       	subi	r18, 0x01	; 1
    1634:	31 09       	sbc	r19, r1
    1636:	3f 87       	std	Y+15, r19	; 0x0f
    1638:	2e 87       	std	Y+14, r18	; 0x0e
    163a:	41 e0       	ldi	r20, 0x01	; 1
    163c:	50 e0       	ldi	r21, 0x00	; 0
    163e:	5c 83       	std	Y+4, r21	; 0x04
    1640:	4b 83       	std	Y+3, r20	; 0x03
    1642:	06 c0       	rjmp	.+12     	; 0x1650 <__fmt_a+0x8e>
    1644:	88 85       	ldd	r24, Y+8	; 0x08
    1646:	99 85       	ldd	r25, Y+9	; 0x09
    1648:	9f 87       	std	Y+15, r25	; 0x0f
    164a:	8e 87       	std	Y+14, r24	; 0x0e
    164c:	1c 82       	std	Y+4, r1	; 0x04
    164e:	1b 82       	std	Y+3, r1	; 0x03
    1650:	b7 01       	movw	r22, r14
    1652:	a6 01       	movw	r20, r12
    1654:	7f 77       	andi	r23, 0x7F	; 127
    1656:	e9 81       	ldd	r30, Y+1	; 0x01
    1658:	0e 2e       	mov	r0, r30
    165a:	00 0c       	add	r0, r0
    165c:	ff 0b       	sbc	r31, r31
    165e:	f9 8b       	std	Y+17, r31	; 0x11
    1660:	e8 8b       	std	Y+16, r30	; 0x10
    1662:	41 15       	cp	r20, r1
    1664:	51 05       	cpc	r21, r1
    1666:	f0 e8       	ldi	r31, 0x80	; 128
    1668:	6f 07       	cpc	r22, r31
    166a:	ff e7       	ldi	r31, 0x7F	; 127
    166c:	7f 07       	cpc	r23, r31
    166e:	c1 f4       	brne	.+48     	; 0x16a0 <__fmt_a+0xde>
    1670:	28 89       	ldd	r18, Y+16	; 0x10
    1672:	39 89       	ldd	r19, Y+17	; 0x11
    1674:	21 54       	subi	r18, 0x41	; 65
    1676:	31 09       	sbc	r19, r1
    1678:	8b 81       	ldd	r24, Y+3	; 0x03
    167a:	9c 81       	ldd	r25, Y+4	; 0x04
    167c:	84 0d       	add	r24, r4
    167e:	95 1d       	adc	r25, r5
    1680:	2a 31       	cpi	r18, 0x1A	; 26
    1682:	31 05       	cpc	r19, r1
    1684:	20 f4       	brcc	.+8      	; 0x168e <__fmt_a+0xcc>
    1686:	48 eb       	ldi	r20, 0xB8	; 184
    1688:	56 e0       	ldi	r21, 0x06	; 6
    168a:	60 e0       	ldi	r22, 0x00	; 0
    168c:	03 c0       	rjmp	.+6      	; 0x1694 <__fmt_a+0xd2>
    168e:	4c eb       	ldi	r20, 0xBC	; 188
    1690:	56 e0       	ldi	r21, 0x06	; 6
    1692:	60 e0       	ldi	r22, 0x00	; 0
    1694:	0e 94 c0 23 	call	0x4780	; 0x4780 <strcpy>
    1698:	6c eb       	ldi	r22, 0xBC	; 188
    169a:	76 e0       	ldi	r23, 0x06	; 6
    169c:	80 e0       	ldi	r24, 0x00	; 0
    169e:	1c c0       	rjmp	.+56     	; 0x16d8 <__fmt_a+0x116>
    16a0:	8b 81       	ldd	r24, Y+3	; 0x03
    16a2:	9c 81       	ldd	r25, Y+4	; 0x04
    16a4:	84 0d       	add	r24, r4
    16a6:	95 1d       	adc	r25, r5
    16a8:	41 30       	cpi	r20, 0x01	; 1
    16aa:	51 05       	cpc	r21, r1
    16ac:	60 48       	sbci	r22, 0x80	; 128
    16ae:	7f 47       	sbci	r23, 0x7F	; 127
    16b0:	e8 f0       	brcs	.+58     	; 0x16ec <__fmt_a+0x12a>
    16b2:	28 89       	ldd	r18, Y+16	; 0x10
    16b4:	39 89       	ldd	r19, Y+17	; 0x11
    16b6:	21 54       	subi	r18, 0x41	; 65
    16b8:	31 09       	sbc	r19, r1
    16ba:	2a 31       	cpi	r18, 0x1A	; 26
    16bc:	31 05       	cpc	r19, r1
    16be:	20 f4       	brcc	.+8      	; 0x16c8 <__fmt_a+0x106>
    16c0:	40 ec       	ldi	r20, 0xC0	; 192
    16c2:	56 e0       	ldi	r21, 0x06	; 6
    16c4:	60 e0       	ldi	r22, 0x00	; 0
    16c6:	03 c0       	rjmp	.+6      	; 0x16ce <__fmt_a+0x10c>
    16c8:	44 ec       	ldi	r20, 0xC4	; 196
    16ca:	56 e0       	ldi	r21, 0x06	; 6
    16cc:	60 e0       	ldi	r22, 0x00	; 0
    16ce:	0e 94 c0 23 	call	0x4780	; 0x4780 <strcpy>
    16d2:	64 ec       	ldi	r22, 0xC4	; 196
    16d4:	76 e0       	ldi	r23, 0x06	; 6
    16d6:	80 e0       	ldi	r24, 0x00	; 0
    16d8:	0e 94 8d 23 	call	0x471a	; 0x471a <strlen>
    16dc:	a2 01       	movw	r20, r4
    16de:	60 e8       	ldi	r22, 0x80	; 128
    16e0:	ed 80       	ldd	r14, Y+5	; 0x05
    16e2:	fe 8c       	ldd	r15, Y+30	; 0x1e
    16e4:	08 85       	ldd	r16, Y+8	; 0x08
    16e6:	19 85       	ldd	r17, Y+9	; 0x09
    16e8:	9c 01       	movw	r18, r24
    16ea:	8c c2       	rjmp	.+1304   	; 0x1c04 <__fmt_a+0x642>
    16ec:	20 e3       	ldi	r18, 0x30	; 48
    16ee:	fc 01       	movw	r30, r24
    16f0:	20 83       	st	Z, r18
    16f2:	eb 81       	ldd	r30, Y+3	; 0x03
    16f4:	fc 81       	ldd	r31, Y+4	; 0x04
    16f6:	31 96       	adiw	r30, 0x01	; 1
    16f8:	e4 0d       	add	r30, r4
    16fa:	f5 1d       	adc	r31, r5
    16fc:	2b 81       	ldd	r18, Y+3	; 0x03
    16fe:	3c 81       	ldd	r19, Y+4	; 0x04
    1700:	2e 5f       	subi	r18, 0xFE	; 254
    1702:	3f 4f       	sbci	r19, 0xFF	; 255
    1704:	3c 83       	std	Y+4, r19	; 0x04
    1706:	2b 83       	std	Y+3, r18	; 0x03
    1708:	48 89       	ldd	r20, Y+16	; 0x10
    170a:	59 89       	ldd	r21, Y+17	; 0x11
    170c:	41 54       	subi	r20, 0x41	; 65
    170e:	51 09       	sbc	r21, r1
    1710:	5b 8f       	std	Y+27, r21	; 0x1b
    1712:	4a 8f       	std	Y+26, r20	; 0x1a
    1714:	4a 31       	cpi	r20, 0x1A	; 26
    1716:	51 05       	cpc	r21, r1
    1718:	10 f0       	brcs	.+4      	; 0x171e <__fmt_a+0x15c>
    171a:	88 e7       	ldi	r24, 0x78	; 120
    171c:	01 c0       	rjmp	.+2      	; 0x1720 <__fmt_a+0x15e>
    171e:	88 e5       	ldi	r24, 0x58	; 88
    1720:	80 83       	st	Z, r24
    1722:	20 e0       	ldi	r18, 0x00	; 0
    1724:	30 e0       	ldi	r19, 0x00	; 0
    1726:	a9 01       	movw	r20, r18
    1728:	c7 01       	movw	r24, r14
    172a:	b6 01       	movw	r22, r12
    172c:	0e 94 96 24 	call	0x492c	; 0x492c <__cmpsf2>
    1730:	61 2c       	mov	r6, r1
    1732:	71 2c       	mov	r7, r1
    1734:	1f 8e       	std	Y+31, r1	; 0x1f
    1736:	19 82       	std	Y+1, r1	; 0x01
    1738:	88 23       	and	r24, r24
    173a:	09 f4       	brne	.+2      	; 0x173e <__fmt_a+0x17c>
    173c:	64 c0       	rjmp	.+200    	; 0x1806 <__fmt_a+0x244>
    173e:	50 e8       	ldi	r21, 0x80	; 128
    1740:	58 a3       	std	Y+32, r21	; 0x20
    1742:	8f e3       	ldi	r24, 0x3F	; 63
    1744:	8a 83       	std	Y+2, r24	; 0x02
    1746:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1748:	39 81       	ldd	r19, Y+1	; 0x01
    174a:	48 a1       	ldd	r20, Y+32	; 0x20
    174c:	5a 81       	ldd	r21, Y+2	; 0x02
    174e:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1750:	79 81       	ldd	r23, Y+1	; 0x01
    1752:	88 a1       	ldd	r24, Y+32	; 0x20
    1754:	9a 81       	ldd	r25, Y+2	; 0x02
    1756:	0e 94 6e 24 	call	0x48dc	; 0x48dc <__addsf3>
    175a:	5b 01       	movw	r10, r22
    175c:	8c 01       	movw	r16, r24
    175e:	a7 01       	movw	r20, r14
    1760:	96 01       	movw	r18, r12
    1762:	0e 94 9b 24 	call	0x4936	; 0x4936 <__gesf2>
    1766:	18 16       	cp	r1, r24
    1768:	0c f4       	brge	.+2      	; 0x176c <__fmt_a+0x1aa>
    176a:	42 c0       	rjmp	.+132    	; 0x17f0 <__fmt_a+0x22e>
    176c:	9f ef       	ldi	r25, 0xFF	; 255
    176e:	69 1a       	sub	r6, r25
    1770:	79 0a       	sbc	r7, r25
    1772:	af 8e       	std	Y+31, r10	; 0x1f
    1774:	b9 82       	std	Y+1, r11	; 0x01
    1776:	08 a3       	std	Y+32, r16	; 0x20
    1778:	1a 83       	std	Y+2, r17	; 0x02
    177a:	e5 cf       	rjmp	.-54     	; 0x1746 <__fmt_a+0x184>
    177c:	20 e0       	ldi	r18, 0x00	; 0
    177e:	30 e0       	ldi	r19, 0x00	; 0
    1780:	40 e0       	ldi	r20, 0x00	; 0
    1782:	5f e3       	ldi	r21, 0x3F	; 63
    1784:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1786:	79 81       	ldd	r23, Y+1	; 0x01
    1788:	88 a1       	ldd	r24, Y+32	; 0x20
    178a:	9a 81       	ldd	r25, Y+2	; 0x02
    178c:	0e 94 a4 24 	call	0x4948	; 0x4948 <__mulsf3>
    1790:	20 e0       	ldi	r18, 0x00	; 0
    1792:	30 e0       	ldi	r19, 0x00	; 0
    1794:	a9 01       	movw	r20, r18
    1796:	0e 94 96 24 	call	0x492c	; 0x492c <__cmpsf2>
    179a:	81 11       	cpse	r24, r1
    179c:	18 c0       	rjmp	.+48     	; 0x17ce <__fmt_a+0x20c>
    179e:	20 e0       	ldi	r18, 0x00	; 0
    17a0:	30 e0       	ldi	r19, 0x00	; 0
    17a2:	40 e8       	ldi	r20, 0x80	; 128
    17a4:	5a e5       	ldi	r21, 0x5A	; 90
    17a6:	6f 8d       	ldd	r22, Y+31	; 0x1f
    17a8:	79 81       	ldd	r23, Y+1	; 0x01
    17aa:	88 a1       	ldd	r24, Y+32	; 0x20
    17ac:	9a 81       	ldd	r25, Y+2	; 0x02
    17ae:	0e 94 a4 24 	call	0x4948	; 0x4948 <__mulsf3>
    17b2:	6f 8f       	std	Y+31, r22	; 0x1f
    17b4:	79 83       	std	Y+1, r23	; 0x01
    17b6:	88 a3       	std	Y+32, r24	; 0x20
    17b8:	9a 83       	std	Y+2, r25	; 0x02
    17ba:	20 e0       	ldi	r18, 0x00	; 0
    17bc:	30 e0       	ldi	r19, 0x00	; 0
    17be:	40 e8       	ldi	r20, 0x80	; 128
    17c0:	5a e5       	ldi	r21, 0x5A	; 90
    17c2:	c7 01       	movw	r24, r14
    17c4:	b6 01       	movw	r22, r12
    17c6:	0e 94 a4 24 	call	0x4948	; 0x4948 <__mulsf3>
    17ca:	6b 01       	movw	r12, r22
    17cc:	7c 01       	movw	r14, r24
    17ce:	20 e0       	ldi	r18, 0x00	; 0
    17d0:	30 e0       	ldi	r19, 0x00	; 0
    17d2:	40 e0       	ldi	r20, 0x00	; 0
    17d4:	5f e3       	ldi	r21, 0x3F	; 63
    17d6:	6f 8d       	ldd	r22, Y+31	; 0x1f
    17d8:	79 81       	ldd	r23, Y+1	; 0x01
    17da:	88 a1       	ldd	r24, Y+32	; 0x20
    17dc:	9a 81       	ldd	r25, Y+2	; 0x02
    17de:	0e 94 a4 24 	call	0x4948	; 0x4948 <__mulsf3>
    17e2:	6f 8f       	std	Y+31, r22	; 0x1f
    17e4:	79 83       	std	Y+1, r23	; 0x01
    17e6:	88 a3       	std	Y+32, r24	; 0x20
    17e8:	9a 83       	std	Y+2, r25	; 0x02
    17ea:	a1 e0       	ldi	r26, 0x01	; 1
    17ec:	6a 1a       	sub	r6, r26
    17ee:	71 08       	sbc	r7, r1
    17f0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    17f2:	39 81       	ldd	r19, Y+1	; 0x01
    17f4:	48 a1       	ldd	r20, Y+32	; 0x20
    17f6:	5a 81       	ldd	r21, Y+2	; 0x02
    17f8:	c7 01       	movw	r24, r14
    17fa:	b6 01       	movw	r22, r12
    17fc:	0e 94 96 24 	call	0x492c	; 0x492c <__cmpsf2>
    1800:	87 fd       	sbrc	r24, 7
    1802:	bc cf       	rjmp	.-136    	; 0x177c <__fmt_a+0x1ba>
    1804:	04 c0       	rjmp	.+8      	; 0x180e <__fmt_a+0x24c>
    1806:	e0 e8       	ldi	r30, 0x80	; 128
    1808:	e8 a3       	std	Y+32, r30	; 0x20
    180a:	ff e3       	ldi	r31, 0x3F	; 63
    180c:	fa 83       	std	Y+2, r31	; 0x02
    180e:	2a 89       	ldd	r18, Y+18	; 0x12
    1810:	3b 89       	ldd	r19, Y+19	; 0x13
    1812:	37 fd       	sbrc	r19, 7
    1814:	02 c0       	rjmp	.+4      	; 0x181a <__fmt_a+0x258>
    1816:	c9 01       	movw	r24, r18
    1818:	02 c0       	rjmp	.+4      	; 0x181e <__fmt_a+0x25c>
    181a:	88 e1       	ldi	r24, 0x18	; 24
    181c:	90 e0       	ldi	r25, 0x00	; 0
    181e:	ac 01       	movw	r20, r24
    1820:	4f 5f       	subi	r20, 0xFF	; 255
    1822:	5f 4f       	sbci	r21, 0xFF	; 255
    1824:	5b 87       	std	Y+11, r21	; 0x0b
    1826:	4a 87       	std	Y+10, r20	; 0x0a
    1828:	8f 8c       	ldd	r8, Y+31	; 0x1f
    182a:	99 80       	ldd	r9, Y+1	; 0x01
    182c:	a8 a0       	ldd	r10, Y+32	; 0x20
    182e:	ba 80       	ldd	r11, Y+2	; 0x02
    1830:	16 01       	movw	r2, r12
    1832:	87 01       	movw	r16, r14
    1834:	1f 82       	std	Y+7, r1	; 0x07
    1836:	1e 82       	std	Y+6, r1	; 0x06
    1838:	94 01       	movw	r18, r8
    183a:	a5 01       	movw	r20, r10
    183c:	b1 01       	movw	r22, r2
    183e:	c8 01       	movw	r24, r16
    1840:	0e 94 a0 24 	call	0x4940	; 0x4940 <__divsf3>
    1844:	0e 94 74 15 	call	0x2ae8	; 0x2ae8 <floorf>
    1848:	6c 8b       	std	Y+20, r22	; 0x14
    184a:	7d 8b       	std	Y+21, r23	; 0x15
    184c:	8e 8b       	std	Y+22, r24	; 0x16
    184e:	9f 8b       	std	Y+23, r25	; 0x17
    1850:	94 01       	movw	r18, r8
    1852:	a5 01       	movw	r20, r10
    1854:	0e 94 a4 24 	call	0x4948	; 0x4948 <__mulsf3>
    1858:	9b 01       	movw	r18, r22
    185a:	ac 01       	movw	r20, r24
    185c:	b1 01       	movw	r22, r2
    185e:	c8 01       	movw	r24, r16
    1860:	0e 94 6d 24 	call	0x48da	; 0x48da <__subsf3>
    1864:	1b 01       	movw	r2, r22
    1866:	8c 01       	movw	r16, r24
    1868:	20 e0       	ldi	r18, 0x00	; 0
    186a:	30 e0       	ldi	r19, 0x00	; 0
    186c:	40 e8       	ldi	r20, 0x80	; 128
    186e:	5d e3       	ldi	r21, 0x3D	; 61
    1870:	b4 01       	movw	r22, r8
    1872:	c5 01       	movw	r24, r10
    1874:	0e 94 a4 24 	call	0x4948	; 0x4948 <__mulsf3>
    1878:	4b 01       	movw	r8, r22
    187a:	5c 01       	movw	r10, r24
    187c:	8e 81       	ldd	r24, Y+6	; 0x06
    187e:	9f 81       	ldd	r25, Y+7	; 0x07
    1880:	01 96       	adiw	r24, 0x01	; 1
    1882:	9f 83       	std	Y+7, r25	; 0x07
    1884:	8e 83       	std	Y+6, r24	; 0x06
    1886:	ea 89       	ldd	r30, Y+18	; 0x12
    1888:	fb 89       	ldd	r31, Y+19	; 0x13
    188a:	f7 ff       	sbrs	r31, 7
    188c:	09 c0       	rjmp	.+18     	; 0x18a0 <__fmt_a+0x2de>
    188e:	20 e0       	ldi	r18, 0x00	; 0
    1890:	30 e0       	ldi	r19, 0x00	; 0
    1892:	a9 01       	movw	r20, r18
    1894:	b1 01       	movw	r22, r2
    1896:	c8 01       	movw	r24, r16
    1898:	0e 94 96 24 	call	0x492c	; 0x492c <__cmpsf2>
    189c:	88 23       	and	r24, r24
    189e:	41 f0       	breq	.+16     	; 0x18b0 <__fmt_a+0x2ee>
    18a0:	2a 85       	ldd	r18, Y+10	; 0x0a
    18a2:	3b 85       	ldd	r19, Y+11	; 0x0b
    18a4:	4e 81       	ldd	r20, Y+6	; 0x06
    18a6:	5f 81       	ldd	r21, Y+7	; 0x07
    18a8:	42 17       	cp	r20, r18
    18aa:	53 07       	cpc	r21, r19
    18ac:	2c f2       	brlt	.-118    	; 0x1838 <__fmt_a+0x276>
    18ae:	04 c0       	rjmp	.+8      	; 0x18b8 <__fmt_a+0x2f6>
    18b0:	8e 81       	ldd	r24, Y+6	; 0x06
    18b2:	9f 81       	ldd	r25, Y+7	; 0x07
    18b4:	9b 87       	std	Y+11, r25	; 0x0b
    18b6:	8a 87       	std	Y+10, r24	; 0x0a
    18b8:	20 e0       	ldi	r18, 0x00	; 0
    18ba:	30 e0       	ldi	r19, 0x00	; 0
    18bc:	40 e0       	ldi	r20, 0x00	; 0
    18be:	51 e4       	ldi	r21, 0x41	; 65
    18c0:	b4 01       	movw	r22, r8
    18c2:	c5 01       	movw	r24, r10
    18c4:	0e 94 a4 24 	call	0x4948	; 0x4948 <__mulsf3>
    18c8:	4b 01       	movw	r8, r22
    18ca:	5c 01       	movw	r10, r24
    18cc:	9b 01       	movw	r18, r22
    18ce:	ac 01       	movw	r20, r24
    18d0:	b1 01       	movw	r22, r2
    18d2:	c8 01       	movw	r24, r16
    18d4:	0e 94 96 24 	call	0x492c	; 0x492c <__cmpsf2>
    18d8:	87 fd       	sbrc	r24, 7
    18da:	12 c0       	rjmp	.+36     	; 0x1900 <__fmt_a+0x33e>
    18dc:	a5 01       	movw	r20, r10
    18de:	94 01       	movw	r18, r8
    18e0:	b1 01       	movw	r22, r2
    18e2:	c8 01       	movw	r24, r16
    18e4:	0e 94 96 24 	call	0x492c	; 0x492c <__cmpsf2>
    18e8:	81 11       	cpse	r24, r1
    18ea:	0d c0       	rjmp	.+26     	; 0x1906 <__fmt_a+0x344>
    18ec:	6c 89       	ldd	r22, Y+20	; 0x14
    18ee:	7d 89       	ldd	r23, Y+21	; 0x15
    18f0:	8e 89       	ldd	r24, Y+22	; 0x16
    18f2:	9f 89       	ldd	r25, Y+23	; 0x17
    18f4:	0e 94 74 24 	call	0x48e8	; 0x48e8 <__fixsfsi>
    18f8:	61 70       	andi	r22, 0x01	; 1
    18fa:	77 27       	eor	r23, r23
    18fc:	67 2b       	or	r22, r23
    18fe:	19 f4       	brne	.+6      	; 0x1906 <__fmt_a+0x344>
    1900:	81 2c       	mov	r8, r1
    1902:	91 2c       	mov	r9, r1
    1904:	54 01       	movw	r10, r8
    1906:	a5 01       	movw	r20, r10
    1908:	94 01       	movw	r18, r8
    190a:	c7 01       	movw	r24, r14
    190c:	b6 01       	movw	r22, r12
    190e:	0e 94 6e 24 	call	0x48dc	; 0x48dc <__addsf3>
    1912:	6b 01       	movw	r12, r22
    1914:	7c 01       	movw	r14, r24
    1916:	dc 01       	movw	r26, r24
    1918:	cb 01       	movw	r24, r22
    191a:	bf 77       	andi	r27, 0x7F	; 127
    191c:	00 97       	sbiw	r24, 0x00	; 0
    191e:	a0 48       	sbci	r26, 0x80	; 128
    1920:	bf 47       	sbci	r27, 0x7F	; 127
    1922:	09 f4       	brne	.+2      	; 0x1926 <__fmt_a+0x364>
    1924:	a5 ce       	rjmp	.-694    	; 0x1670 <__fmt_a+0xae>
    1926:	2e 84       	ldd	r2, Y+14	; 0x0e
    1928:	3f 84       	ldd	r3, Y+15	; 0x0f
    192a:	f2 e0       	ldi	r31, 0x02	; 2
    192c:	2f 1a       	sub	r2, r31
    192e:	31 08       	sbc	r3, r1
    1930:	2a 85       	ldd	r18, Y+10	; 0x0a
    1932:	3b 85       	ldd	r19, Y+11	; 0x0b
    1934:	31 95       	neg	r19
    1936:	21 95       	neg	r18
    1938:	31 09       	sbc	r19, r1
    193a:	39 8b       	std	Y+17, r19	; 0x11
    193c:	28 8b       	std	Y+16, r18	; 0x10
    193e:	0b 81       	ldd	r16, Y+3	; 0x03
    1940:	1c 81       	ldd	r17, Y+4	; 0x04
    1942:	a1 2c       	mov	r10, r1
    1944:	b1 2c       	mov	r11, r1
    1946:	1f 82       	std	Y+7, r1	; 0x07
    1948:	1e 82       	std	Y+6, r1	; 0x06
    194a:	81 2c       	mov	r8, r1
    194c:	91 2c       	mov	r9, r1
    194e:	48 8d       	ldd	r20, Y+24	; 0x18
    1950:	59 8d       	ldd	r21, Y+25	; 0x19
    1952:	45 50       	subi	r20, 0x05	; 5
    1954:	51 09       	sbc	r21, r1
    1956:	5d 8b       	std	Y+21, r21	; 0x15
    1958:	4c 8b       	std	Y+20, r20	; 0x14
    195a:	ec 89       	ldd	r30, Y+20	; 0x14
    195c:	fd 89       	ldd	r31, Y+21	; 0x15
    195e:	0e 17       	cp	r16, r30
    1960:	1f 07       	cpc	r17, r31
    1962:	0c f0       	brlt	.+2      	; 0x1966 <__fmt_a+0x3a4>
    1964:	91 c0       	rjmp	.+290    	; 0x1a88 <__fmt_a+0x4c6>
    1966:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1968:	39 81       	ldd	r19, Y+1	; 0x01
    196a:	48 a1       	ldd	r20, Y+32	; 0x20
    196c:	5a 81       	ldd	r21, Y+2	; 0x02
    196e:	c7 01       	movw	r24, r14
    1970:	b6 01       	movw	r22, r12
    1972:	0e 94 a0 24 	call	0x4940	; 0x4940 <__divsf3>
    1976:	0e 94 74 15 	call	0x2ae8	; 0x2ae8 <floorf>
    197a:	6a 87       	std	Y+10, r22	; 0x0a
    197c:	7b 87       	std	Y+11, r23	; 0x0b
    197e:	8c 87       	std	Y+12, r24	; 0x0c
    1980:	9d 87       	std	Y+13, r25	; 0x0d
    1982:	0e 94 74 24 	call	0x48e8	; 0x48e8 <__fixsfsi>
    1986:	ab 01       	movw	r20, r22
    1988:	61 15       	cp	r22, r1
    198a:	71 05       	cpc	r23, r1
    198c:	39 f4       	brne	.+14     	; 0x199c <__fmt_a+0x3da>
    198e:	81 14       	cp	r8, r1
    1990:	91 04       	cpc	r9, r1
    1992:	21 f0       	breq	.+8      	; 0x199c <__fmt_a+0x3da>
    1994:	5f ef       	ldi	r21, 0xFF	; 255
    1996:	a5 1a       	sub	r10, r21
    1998:	b5 0a       	sbc	r11, r21
    199a:	4d c0       	rjmp	.+154    	; 0x1a36 <__fmt_a+0x474>
    199c:	ee 81       	ldd	r30, Y+6	; 0x06
    199e:	ff 81       	ldd	r31, Y+7	; 0x07
    19a0:	ef 2b       	or	r30, r31
    19a2:	89 f4       	brne	.+34     	; 0x19c6 <__fmt_a+0x404>
    19a4:	81 14       	cp	r8, r1
    19a6:	91 04       	cpc	r9, r1
    19a8:	71 f0       	breq	.+28     	; 0x19c6 <__fmt_a+0x404>
    19aa:	f2 01       	movw	r30, r4
    19ac:	e0 0f       	add	r30, r16
    19ae:	f1 1f       	adc	r31, r17
    19b0:	2e e2       	ldi	r18, 0x2E	; 46
    19b2:	20 83       	st	Z, r18
    19b4:	31 e0       	ldi	r19, 0x01	; 1
    19b6:	23 1a       	sub	r2, r19
    19b8:	31 08       	sbc	r3, r1
    19ba:	0f 5f       	subi	r16, 0xFF	; 255
    19bc:	1f 4f       	sbci	r17, 0xFF	; 255
    19be:	e1 e0       	ldi	r30, 0x01	; 1
    19c0:	f0 e0       	ldi	r31, 0x00	; 0
    19c2:	ff 83       	std	Y+7, r31	; 0x07
    19c4:	ee 83       	std	Y+6, r30	; 0x06
    19c6:	f2 01       	movw	r30, r4
    19c8:	e0 0f       	add	r30, r16
    19ca:	f1 1f       	adc	r31, r17
    19cc:	95 01       	movw	r18, r10
    19ce:	21 15       	cp	r18, r1
    19d0:	31 05       	cpc	r19, r1
    19d2:	29 f0       	breq	.+10     	; 0x19de <__fmt_a+0x41c>
    19d4:	a0 e3       	ldi	r26, 0x30	; 48
    19d6:	a1 93       	st	Z+, r26
    19d8:	21 50       	subi	r18, 0x01	; 1
    19da:	31 09       	sbc	r19, r1
    19dc:	f8 cf       	rjmp	.-16     	; 0x19ce <__fmt_a+0x40c>
    19de:	f8 01       	movw	r30, r16
    19e0:	ea 0d       	add	r30, r10
    19e2:	fb 1d       	adc	r31, r11
    19e4:	ff 87       	std	Y+15, r31	; 0x0f
    19e6:	ee 87       	std	Y+14, r30	; 0x0e
    19e8:	2a 18       	sub	r2, r10
    19ea:	3b 08       	sbc	r3, r11
    19ec:	4a 30       	cpi	r20, 0x0A	; 10
    19ee:	51 05       	cpc	r21, r1
    19f0:	1c f4       	brge	.+6      	; 0x19f8 <__fmt_a+0x436>
    19f2:	60 5d       	subi	r22, 0xD0	; 208
    19f4:	7f 4f       	sbci	r23, 0xFF	; 255
    19f6:	02 c0       	rjmp	.+4      	; 0x19fc <__fmt_a+0x43a>
    19f8:	69 5a       	subi	r22, 0xA9	; 169
    19fa:	7f 4f       	sbci	r23, 0xFF	; 255
    19fc:	2a 8d       	ldd	r18, Y+26	; 0x1a
    19fe:	3b 8d       	ldd	r19, Y+27	; 0x1b
    1a00:	2a 31       	cpi	r18, 0x1A	; 26
    1a02:	31 05       	cpc	r19, r1
    1a04:	50 f4       	brcc	.+20     	; 0x1a1a <__fmt_a+0x458>
    1a06:	cb 01       	movw	r24, r22
    1a08:	80 62       	ori	r24, 0x20	; 32
    1a0a:	81 56       	subi	r24, 0x61	; 97
    1a0c:	91 09       	sbc	r25, r1
    1a0e:	4a 97       	sbiw	r24, 0x1a	; 26
    1a10:	20 f4       	brcc	.+8      	; 0x1a1a <__fmt_a+0x458>
    1a12:	cb 01       	movw	r24, r22
    1a14:	0e 94 39 24 	call	0x4872	; 0x4872 <toupper>
    1a18:	bc 01       	movw	r22, r24
    1a1a:	0e 85       	ldd	r16, Y+14	; 0x0e
    1a1c:	1f 85       	ldd	r17, Y+15	; 0x0f
    1a1e:	0f 5f       	subi	r16, 0xFF	; 255
    1a20:	1f 4f       	sbci	r17, 0xFF	; 255
    1a22:	ee 85       	ldd	r30, Y+14	; 0x0e
    1a24:	ff 85       	ldd	r31, Y+15	; 0x0f
    1a26:	e4 0d       	add	r30, r4
    1a28:	f5 1d       	adc	r31, r5
    1a2a:	60 83       	st	Z, r22
    1a2c:	31 e0       	ldi	r19, 0x01	; 1
    1a2e:	23 1a       	sub	r2, r19
    1a30:	31 08       	sbc	r3, r1
    1a32:	a1 2c       	mov	r10, r1
    1a34:	b1 2c       	mov	r11, r1
    1a36:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1a38:	39 81       	ldd	r19, Y+1	; 0x01
    1a3a:	48 a1       	ldd	r20, Y+32	; 0x20
    1a3c:	5a 81       	ldd	r21, Y+2	; 0x02
    1a3e:	6a 85       	ldd	r22, Y+10	; 0x0a
    1a40:	7b 85       	ldd	r23, Y+11	; 0x0b
    1a42:	8c 85       	ldd	r24, Y+12	; 0x0c
    1a44:	9d 85       	ldd	r25, Y+13	; 0x0d
    1a46:	0e 94 a4 24 	call	0x4948	; 0x4948 <__mulsf3>
    1a4a:	9b 01       	movw	r18, r22
    1a4c:	ac 01       	movw	r20, r24
    1a4e:	c7 01       	movw	r24, r14
    1a50:	b6 01       	movw	r22, r12
    1a52:	0e 94 6d 24 	call	0x48da	; 0x48da <__subsf3>
    1a56:	6b 01       	movw	r12, r22
    1a58:	7c 01       	movw	r14, r24
    1a5a:	20 e0       	ldi	r18, 0x00	; 0
    1a5c:	30 e0       	ldi	r19, 0x00	; 0
    1a5e:	40 e8       	ldi	r20, 0x80	; 128
    1a60:	5d e3       	ldi	r21, 0x3D	; 61
    1a62:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1a64:	79 81       	ldd	r23, Y+1	; 0x01
    1a66:	88 a1       	ldd	r24, Y+32	; 0x20
    1a68:	9a 81       	ldd	r25, Y+2	; 0x02
    1a6a:	0e 94 a4 24 	call	0x4948	; 0x4948 <__mulsf3>
    1a6e:	6f 8f       	std	Y+31, r22	; 0x1f
    1a70:	79 83       	std	Y+1, r23	; 0x01
    1a72:	88 a3       	std	Y+32, r24	; 0x20
    1a74:	9a 83       	std	Y+2, r25	; 0x02
    1a76:	41 e0       	ldi	r20, 0x01	; 1
    1a78:	84 1a       	sub	r8, r20
    1a7a:	91 08       	sbc	r9, r1
    1a7c:	88 89       	ldd	r24, Y+16	; 0x10
    1a7e:	99 89       	ldd	r25, Y+17	; 0x11
    1a80:	88 15       	cp	r24, r8
    1a82:	99 05       	cpc	r25, r9
    1a84:	09 f0       	breq	.+2      	; 0x1a88 <__fmt_a+0x4c6>
    1a86:	69 cf       	rjmp	.-302    	; 0x195a <__fmt_a+0x398>
    1a88:	2e 81       	ldd	r18, Y+6	; 0x06
    1a8a:	3f 81       	ldd	r19, Y+7	; 0x07
    1a8c:	23 2b       	or	r18, r19
    1a8e:	51 f5       	brne	.+84     	; 0x1ae4 <__fmt_a+0x522>
    1a90:	f2 01       	movw	r30, r4
    1a92:	e0 0f       	add	r30, r16
    1a94:	f1 1f       	adc	r31, r17
    1a96:	a1 14       	cp	r10, r1
    1a98:	b1 04       	cpc	r11, r1
    1a9a:	e9 f0       	breq	.+58     	; 0x1ad6 <__fmt_a+0x514>
    1a9c:	4a 89       	ldd	r20, Y+18	; 0x12
    1a9e:	5b 89       	ldd	r21, Y+19	; 0x13
    1aa0:	14 16       	cp	r1, r20
    1aa2:	15 06       	cpc	r1, r21
    1aa4:	c4 f4       	brge	.+48     	; 0x1ad6 <__fmt_a+0x514>
    1aa6:	5d 81       	ldd	r21, Y+5	; 0x05
    1aa8:	50 fd       	sbrc	r21, 0
    1aaa:	15 c0       	rjmp	.+42     	; 0x1ad6 <__fmt_a+0x514>
    1aac:	8e e2       	ldi	r24, 0x2E	; 46
    1aae:	80 83       	st	Z, r24
    1ab0:	f8 01       	movw	r30, r16
    1ab2:	31 96       	adiw	r30, 0x01	; 1
    1ab4:	e4 0d       	add	r30, r4
    1ab6:	f5 1d       	adc	r31, r5
    1ab8:	c5 01       	movw	r24, r10
    1aba:	20 e3       	ldi	r18, 0x30	; 48
    1abc:	21 93       	st	Z+, r18
    1abe:	01 97       	sbiw	r24, 0x01	; 1
    1ac0:	e9 f7       	brne	.-6      	; 0x1abc <__fmt_a+0x4fa>
    1ac2:	0a 0d       	add	r16, r10
    1ac4:	1b 1d       	adc	r17, r11
    1ac6:	0f 5f       	subi	r16, 0xFF	; 255
    1ac8:	1f 4f       	sbci	r17, 0xFF	; 255
    1aca:	c5 01       	movw	r24, r10
    1acc:	80 95       	com	r24
    1ace:	90 95       	com	r25
    1ad0:	28 0e       	add	r2, r24
    1ad2:	39 1e       	adc	r3, r25
    1ad4:	07 c0       	rjmp	.+14     	; 0x1ae4 <__fmt_a+0x522>
    1ad6:	8d 81       	ldd	r24, Y+5	; 0x05
    1ad8:	84 ff       	sbrs	r24, 4
    1ada:	04 c0       	rjmp	.+8      	; 0x1ae4 <__fmt_a+0x522>
    1adc:	8e e2       	ldi	r24, 0x2E	; 46
    1ade:	80 83       	st	Z, r24
    1ae0:	0f 5f       	subi	r16, 0xFF	; 255
    1ae2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ae4:	f2 01       	movw	r30, r4
    1ae6:	e0 0f       	add	r30, r16
    1ae8:	f1 1f       	adc	r31, r17
    1aea:	ff 83       	std	Y+7, r31	; 0x07
    1aec:	ee 83       	std	Y+6, r30	; 0x06
    1aee:	10 82       	st	Z, r1
    1af0:	e8 8d       	ldd	r30, Y+24	; 0x18
    1af2:	f9 8d       	ldd	r31, Y+25	; 0x19
    1af4:	e4 0d       	add	r30, r4
    1af6:	f5 1d       	adc	r31, r5
    1af8:	31 97       	sbiw	r30, 0x01	; 1
    1afa:	10 82       	st	Z, r1
    1afc:	77 fe       	sbrs	r7, 7
    1afe:	07 c0       	rjmp	.+14     	; 0x1b0e <__fmt_a+0x54c>
    1b00:	71 94       	neg	r7
    1b02:	61 94       	neg	r6
    1b04:	71 08       	sbc	r7, r1
    1b06:	ee 24       	eor	r14, r14
    1b08:	e3 94       	inc	r14
    1b0a:	f1 2c       	mov	r15, r1
    1b0c:	02 c0       	rjmp	.+4      	; 0x1b12 <__fmt_a+0x550>
    1b0e:	e1 2c       	mov	r14, r1
    1b10:	f1 2c       	mov	r15, r1
    1b12:	e8 8d       	ldd	r30, Y+24	; 0x18
    1b14:	f9 8d       	ldd	r31, Y+25	; 0x19
    1b16:	31 97       	sbiw	r30, 0x01	; 1
    1b18:	e4 0d       	add	r30, r4
    1b1a:	f5 1d       	adc	r31, r5
    1b1c:	21 e0       	ldi	r18, 0x01	; 1
    1b1e:	30 e0       	ldi	r19, 0x00	; 0
    1b20:	8a e0       	ldi	r24, 0x0A	; 10
    1b22:	c8 2e       	mov	r12, r24
    1b24:	d1 2c       	mov	r13, r1
    1b26:	cf 01       	movw	r24, r30
    1b28:	84 19       	sub	r24, r4
    1b2a:	95 09       	sbc	r25, r5
    1b2c:	61 14       	cp	r6, r1
    1b2e:	71 04       	cpc	r7, r1
    1b30:	69 f0       	breq	.+26     	; 0x1b4c <__fmt_a+0x58a>
    1b32:	c3 01       	movw	r24, r6
    1b34:	b6 01       	movw	r22, r12
    1b36:	0e 94 1a 23 	call	0x4634	; 0x4634 <__divmodhi4>
    1b3a:	80 5d       	subi	r24, 0xD0	; 208
    1b3c:	82 93       	st	-Z, r24
    1b3e:	3b 01       	movw	r6, r22
    1b40:	21 50       	subi	r18, 0x01	; 1
    1b42:	31 09       	sbc	r19, r1
    1b44:	41 e0       	ldi	r20, 0x01	; 1
    1b46:	24 1a       	sub	r2, r20
    1b48:	31 08       	sbc	r3, r1
    1b4a:	ed cf       	rjmp	.-38     	; 0x1b26 <__fmt_a+0x564>
    1b4c:	21 30       	cpi	r18, 0x01	; 1
    1b4e:	31 05       	cpc	r19, r1
    1b50:	81 f3       	breq	.-32     	; 0x1b32 <__fmt_a+0x570>
    1b52:	fc 01       	movw	r30, r24
    1b54:	31 97       	sbiw	r30, 0x01	; 1
    1b56:	e4 0d       	add	r30, r4
    1b58:	f5 1d       	adc	r31, r5
    1b5a:	ef 28       	or	r14, r15
    1b5c:	11 f4       	brne	.+4      	; 0x1b62 <__fmt_a+0x5a0>
    1b5e:	2b e2       	ldi	r18, 0x2B	; 43
    1b60:	01 c0       	rjmp	.+2      	; 0x1b64 <__fmt_a+0x5a2>
    1b62:	2d e2       	ldi	r18, 0x2D	; 45
    1b64:	20 83       	st	Z, r18
    1b66:	02 97       	sbiw	r24, 0x02	; 2
    1b68:	f2 01       	movw	r30, r4
    1b6a:	e8 0f       	add	r30, r24
    1b6c:	f9 1f       	adc	r31, r25
    1b6e:	2a 8d       	ldd	r18, Y+26	; 0x1a
    1b70:	3b 8d       	ldd	r19, Y+27	; 0x1b
    1b72:	2a 31       	cpi	r18, 0x1A	; 26
    1b74:	31 05       	cpc	r19, r1
    1b76:	10 f0       	brcs	.+4      	; 0x1b7c <__fmt_a+0x5ba>
    1b78:	20 e7       	ldi	r18, 0x70	; 112
    1b7a:	01 c0       	rjmp	.+2      	; 0x1b7e <__fmt_a+0x5bc>
    1b7c:	20 e5       	ldi	r18, 0x50	; 80
    1b7e:	20 83       	st	Z, r18
    1b80:	08 17       	cp	r16, r24
    1b82:	19 07       	cpc	r17, r25
    1b84:	34 f4       	brge	.+12     	; 0x1b92 <__fmt_a+0x5d0>
    1b86:	af 01       	movw	r20, r30
    1b88:	60 e8       	ldi	r22, 0x80	; 128
    1b8a:	8e 81       	ldd	r24, Y+6	; 0x06
    1b8c:	9f 81       	ldd	r25, Y+7	; 0x07
    1b8e:	0e 94 c0 23 	call	0x4780	; 0x4780 <strcpy>
    1b92:	32 01       	movw	r6, r4
    1b94:	30 e8       	ldi	r19, 0x80	; 128
    1b96:	83 2e       	mov	r8, r19
    1b98:	4d 81       	ldd	r20, Y+5	; 0x05
    1b9a:	41 ff       	sbrs	r20, 1
    1b9c:	28 c0       	rjmp	.+80     	; 0x1bee <__fmt_a+0x62c>
    1b9e:	40 fd       	sbrc	r20, 0
    1ba0:	26 c0       	rjmp	.+76     	; 0x1bee <__fmt_a+0x62c>
    1ba2:	52 e0       	ldi	r21, 0x02	; 2
    1ba4:	25 1a       	sub	r2, r21
    1ba6:	31 08       	sbc	r3, r1
    1ba8:	12 14       	cp	r1, r2
    1baa:	13 04       	cpc	r1, r3
    1bac:	04 f5       	brge	.+64     	; 0x1bee <__fmt_a+0x62c>
    1bae:	88 2d       	mov	r24, r8
    1bb0:	b3 01       	movw	r22, r6
    1bb2:	0e 94 8d 23 	call	0x471a	; 0x471a <strlen>
    1bb6:	84 0d       	add	r24, r4
    1bb8:	95 1d       	adc	r25, r5
    1bba:	9c 01       	movw	r18, r24
    1bbc:	24 19       	sub	r18, r4
    1bbe:	35 09       	sbc	r19, r5
    1bc0:	4b 81       	ldd	r20, Y+3	; 0x03
    1bc2:	5c 81       	ldd	r21, Y+4	; 0x04
    1bc4:	24 17       	cp	r18, r20
    1bc6:	35 07       	cpc	r19, r21
    1bc8:	3c f0       	brlt	.+14     	; 0x1bd8 <__fmt_a+0x616>
    1bca:	fc 01       	movw	r30, r24
    1bcc:	20 81       	ld	r18, Z
    1bce:	e2 0d       	add	r30, r2
    1bd0:	f3 1d       	adc	r31, r3
    1bd2:	20 83       	st	Z, r18
    1bd4:	01 97       	sbiw	r24, 0x01	; 1
    1bd6:	f1 cf       	rjmp	.-30     	; 0x1bba <__fmt_a+0x5f8>
    1bd8:	a1 01       	movw	r20, r2
    1bda:	60 e3       	ldi	r22, 0x30	; 48
    1bdc:	70 e0       	ldi	r23, 0x00	; 0
    1bde:	8b 81       	ldd	r24, Y+3	; 0x03
    1be0:	9c 81       	ldd	r25, Y+4	; 0x04
    1be2:	84 0d       	add	r24, r4
    1be4:	95 1d       	adc	r25, r5
    1be6:	0e 94 30 24 	call	0x4860	; 0x4860 <memset>
    1bea:	19 86       	std	Y+9, r1	; 0x09
    1bec:	18 86       	std	Y+8, r1	; 0x08
    1bee:	88 2d       	mov	r24, r8
    1bf0:	b3 01       	movw	r22, r6
    1bf2:	0e 94 8d 23 	call	0x471a	; 0x471a <strlen>
    1bf6:	ed 80       	ldd	r14, Y+5	; 0x05
    1bf8:	fe 8c       	ldd	r15, Y+30	; 0x1e
    1bfa:	08 85       	ldd	r16, Y+8	; 0x08
    1bfc:	19 85       	ldd	r17, Y+9	; 0x09
    1bfe:	9c 01       	movw	r18, r24
    1c00:	68 2d       	mov	r22, r8
    1c02:	a3 01       	movw	r20, r6
    1c04:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1c06:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1c08:	0e 94 0d 16 	call	0x2c1a	; 0x2c1a <__pad>
    1c0c:	a0 96       	adiw	r28, 0x20	; 32
    1c0e:	e2 e1       	ldi	r30, 0x12	; 18
    1c10:	0c 94 a3 22 	jmp	0x4546	; 0x4546 <__epilogue_restores__>
    1c14:	5d 81       	ldd	r21, Y+5	; 0x05
    1c16:	53 ff       	sbrs	r21, 3
    1c18:	15 cd       	rjmp	.-1494   	; 0x1644 <__fmt_a+0x82>
    1c1a:	80 e2       	ldi	r24, 0x20	; 32
    1c1c:	06 cd       	rjmp	.-1524   	; 0x162a <__fmt_a+0x68>

Disassembly of section .text.strcpy:

00004780 <strcpy>:
    4780:	9a 01       	movw	r18, r20
    4782:	46 2f       	mov	r20, r22
    4784:	dc 01       	movw	r26, r24
    4786:	f9 01       	movw	r30, r18
    4788:	54 2f       	mov	r21, r20
    478a:	0e 94 66 24 	call	0x48cc	; 0x48cc <__xload_1>
    478e:	6d 93       	st	X+, r22
    4790:	2f 5f       	subi	r18, 0xFF	; 255
    4792:	3f 4f       	sbci	r19, 0xFF	; 255
    4794:	4f 4f       	sbci	r20, 0xFF	; 255
    4796:	61 11       	cpse	r22, r1
    4798:	f6 cf       	rjmp	.-20     	; 0x4786 <strcpy+0x6>
    479a:	08 95       	ret

Disassembly of section .text.libgcc.div:

00004634 <__divmodhi4>:
    4634:	97 fb       	bst	r25, 7
    4636:	07 2e       	mov	r0, r23
    4638:	16 f4       	brtc	.+4      	; 0x463e <__divmodhi4+0xa>
    463a:	00 94       	com	r0
    463c:	07 d0       	rcall	.+14     	; 0x464c <__divmodhi4_neg1>
    463e:	77 fd       	sbrc	r23, 7
    4640:	09 d0       	rcall	.+18     	; 0x4654 <__divmodhi4_neg2>
    4642:	0e 94 2e 23 	call	0x465c	; 0x465c <__udivmodhi4>
    4646:	07 fc       	sbrc	r0, 7
    4648:	05 d0       	rcall	.+10     	; 0x4654 <__divmodhi4_neg2>
    464a:	3e f4       	brtc	.+14     	; 0x465a <__divmodhi4_exit>

0000464c <__divmodhi4_neg1>:
    464c:	90 95       	com	r25
    464e:	81 95       	neg	r24
    4650:	9f 4f       	sbci	r25, 0xFF	; 255
    4652:	08 95       	ret

00004654 <__divmodhi4_neg2>:
    4654:	70 95       	com	r23
    4656:	61 95       	neg	r22
    4658:	7f 4f       	sbci	r23, 0xFF	; 255

0000465a <__divmodhi4_exit>:
    465a:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000479c <__umoddi3>:
    479c:	68 94       	set
    479e:	01 c0       	rjmp	.+2      	; 0x47a2 <__udivdi3_umoddi3>

000047a0 <__udivdi3>:
    47a0:	e8 94       	clt

000047a2 <__udivdi3_umoddi3>:
    47a2:	8f 92       	push	r8
    47a4:	9f 92       	push	r9
    47a6:	cf 93       	push	r28
    47a8:	df 93       	push	r29
    47aa:	0e 94 80 1c 	call	0x3900	; 0x3900 <__udivmod64>
    47ae:	df 91       	pop	r29
    47b0:	cf 91       	pop	r28
    47b2:	9f 90       	pop	r9
    47b4:	8f 90       	pop	r8
    47b6:	08 95       	ret

Disassembly of section .text.libgcc.div:

00003900 <__udivmod64>:
    3900:	88 24       	eor	r8, r8
    3902:	99 24       	eor	r9, r9
    3904:	f4 01       	movw	r30, r8
    3906:	e4 01       	movw	r28, r8
    3908:	b0 e4       	ldi	r27, 0x40	; 64
    390a:	9f 93       	push	r25
    390c:	aa 27       	eor	r26, r26
    390e:	9a 15       	cp	r25, r10
    3910:	8b 04       	cpc	r8, r11
    3912:	9c 04       	cpc	r9, r12
    3914:	ed 05       	cpc	r30, r13
    3916:	fe 05       	cpc	r31, r14
    3918:	cf 05       	cpc	r28, r15
    391a:	d0 07       	cpc	r29, r16
    391c:	a1 07       	cpc	r26, r17
    391e:	98 f4       	brcc	.+38     	; 0x3946 <__udivmod64+0x46>
    3920:	ad 2f       	mov	r26, r29
    3922:	dc 2f       	mov	r29, r28
    3924:	cf 2f       	mov	r28, r31
    3926:	fe 2f       	mov	r31, r30
    3928:	e9 2d       	mov	r30, r9
    392a:	98 2c       	mov	r9, r8
    392c:	89 2e       	mov	r8, r25
    392e:	98 2f       	mov	r25, r24
    3930:	87 2f       	mov	r24, r23
    3932:	76 2f       	mov	r23, r22
    3934:	65 2f       	mov	r22, r21
    3936:	54 2f       	mov	r21, r20
    3938:	43 2f       	mov	r20, r19
    393a:	32 2f       	mov	r19, r18
    393c:	22 27       	eor	r18, r18
    393e:	b8 50       	subi	r27, 0x08	; 8
    3940:	31 f7       	brne	.-52     	; 0x390e <__udivmod64+0xe>
    3942:	bf 91       	pop	r27
    3944:	27 c0       	rjmp	.+78     	; 0x3994 <__udivmod64+0x94>
    3946:	1b 2e       	mov	r1, r27
    3948:	bf 91       	pop	r27
    394a:	bb 27       	eor	r27, r27
    394c:	22 0f       	add	r18, r18
    394e:	33 1f       	adc	r19, r19
    3950:	44 1f       	adc	r20, r20
    3952:	55 1f       	adc	r21, r21
    3954:	66 1f       	adc	r22, r22
    3956:	77 1f       	adc	r23, r23
    3958:	88 1f       	adc	r24, r24
    395a:	99 1f       	adc	r25, r25
    395c:	88 1c       	adc	r8, r8
    395e:	99 1c       	adc	r9, r9
    3960:	ee 1f       	adc	r30, r30
    3962:	ff 1f       	adc	r31, r31
    3964:	cc 1f       	adc	r28, r28
    3966:	dd 1f       	adc	r29, r29
    3968:	aa 1f       	adc	r26, r26
    396a:	bb 1f       	adc	r27, r27
    396c:	8a 14       	cp	r8, r10
    396e:	9b 04       	cpc	r9, r11
    3970:	ec 05       	cpc	r30, r12
    3972:	fd 05       	cpc	r31, r13
    3974:	ce 05       	cpc	r28, r14
    3976:	df 05       	cpc	r29, r15
    3978:	a0 07       	cpc	r26, r16
    397a:	b1 07       	cpc	r27, r17
    397c:	48 f0       	brcs	.+18     	; 0x3990 <__udivmod64+0x90>
    397e:	8a 18       	sub	r8, r10
    3980:	9b 08       	sbc	r9, r11
    3982:	ec 09       	sbc	r30, r12
    3984:	fd 09       	sbc	r31, r13
    3986:	ce 09       	sbc	r28, r14
    3988:	df 09       	sbc	r29, r15
    398a:	a0 0b       	sbc	r26, r16
    398c:	b1 0b       	sbc	r27, r17
    398e:	21 60       	ori	r18, 0x01	; 1
    3990:	1a 94       	dec	r1
    3992:	e1 f6       	brne	.-72     	; 0x394c <__udivmod64+0x4c>
    3994:	2e f4       	brtc	.+10     	; 0x39a0 <__udivmod64+0xa0>
    3996:	94 01       	movw	r18, r8
    3998:	af 01       	movw	r20, r30
    399a:	be 01       	movw	r22, r28
    399c:	cd 01       	movw	r24, r26
    399e:	00 0c       	add	r0, r0
    39a0:	08 95       	ret

Disassembly of section .text.libgcc:

00004760 <__negdi2>:
    4760:	60 95       	com	r22
    4762:	70 95       	com	r23
    4764:	80 95       	com	r24
    4766:	90 95       	com	r25
    4768:	30 95       	com	r19
    476a:	40 95       	com	r20
    476c:	50 95       	com	r21
    476e:	21 95       	neg	r18
    4770:	3f 4f       	sbci	r19, 0xFF	; 255
    4772:	4f 4f       	sbci	r20, 0xFF	; 255
    4774:	5f 4f       	sbci	r21, 0xFF	; 255
    4776:	6f 4f       	sbci	r22, 0xFF	; 255
    4778:	7f 4f       	sbci	r23, 0xFF	; 255
    477a:	8f 4f       	sbci	r24, 0xFF	; 255
    477c:	9f 4f       	sbci	r25, 0xFF	; 255
    477e:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

000044d8 <__prologue_saves__>:
    44d8:	2f 92       	push	r2
    44da:	3f 92       	push	r3
    44dc:	4f 92       	push	r4
    44de:	5f 92       	push	r5
    44e0:	6f 92       	push	r6
    44e2:	7f 92       	push	r7
    44e4:	8f 92       	push	r8
    44e6:	9f 92       	push	r9
    44e8:	af 92       	push	r10
    44ea:	bf 92       	push	r11
    44ec:	cf 92       	push	r12
    44ee:	df 92       	push	r13
    44f0:	ef 92       	push	r14
    44f2:	ff 92       	push	r15
    44f4:	0f 93       	push	r16
    44f6:	1f 93       	push	r17
    44f8:	cf 93       	push	r28
    44fa:	df 93       	push	r29
    44fc:	cd b7       	in	r28, 0x3d	; 61
    44fe:	de b7       	in	r29, 0x3e	; 62
    4500:	ca 1b       	sub	r28, r26
    4502:	db 0b       	sbc	r29, r27
    4504:	0f b6       	in	r0, 0x3f	; 63
    4506:	f8 94       	cli
    4508:	de bf       	out	0x3e, r29	; 62
    450a:	0f be       	out	0x3f, r0	; 63
    450c:	cd bf       	out	0x3d, r28	; 61
    450e:	19 94       	eijmp

Disassembly of section .text.libgcc.prologue:

00004546 <__epilogue_restores__>:
    4546:	2a 88       	ldd	r2, Y+18	; 0x12
    4548:	39 88       	ldd	r3, Y+17	; 0x11
    454a:	48 88       	ldd	r4, Y+16	; 0x10
    454c:	5f 84       	ldd	r5, Y+15	; 0x0f
    454e:	6e 84       	ldd	r6, Y+14	; 0x0e
    4550:	7d 84       	ldd	r7, Y+13	; 0x0d
    4552:	8c 84       	ldd	r8, Y+12	; 0x0c
    4554:	9b 84       	ldd	r9, Y+11	; 0x0b
    4556:	aa 84       	ldd	r10, Y+10	; 0x0a
    4558:	b9 84       	ldd	r11, Y+9	; 0x09
    455a:	c8 84       	ldd	r12, Y+8	; 0x08
    455c:	df 80       	ldd	r13, Y+7	; 0x07
    455e:	ee 80       	ldd	r14, Y+6	; 0x06
    4560:	fd 80       	ldd	r15, Y+5	; 0x05
    4562:	0c 81       	ldd	r16, Y+4	; 0x04
    4564:	1b 81       	ldd	r17, Y+3	; 0x03
    4566:	aa 81       	ldd	r26, Y+2	; 0x02
    4568:	b9 81       	ldd	r27, Y+1	; 0x01
    456a:	ce 0f       	add	r28, r30
    456c:	d1 1d       	adc	r29, r1
    456e:	0f b6       	in	r0, 0x3f	; 63
    4570:	f8 94       	cli
    4572:	de bf       	out	0x3e, r29	; 62
    4574:	0f be       	out	0x3f, r0	; 63
    4576:	cd bf       	out	0x3d, r28	; 61
    4578:	ed 01       	movw	r28, r26
    457a:	08 95       	ret

Disassembly of section .text.libgcc:

000047b8 <__movmemx_qi>:
    47b8:	99 27       	eor	r25, r25

000047ba <__movmemx_hi>:
    47ba:	77 fd       	sbrc	r23, 7
    47bc:	06 c0       	rjmp	.+12     	; 0x47ca <__movmemx_hi+0x10>
    47be:	7b bf       	out	0x3b, r23	; 59
    47c0:	07 90       	elpm	r0, Z+
    47c2:	0d 92       	st	X+, r0
    47c4:	01 97       	sbiw	r24, 0x01	; 1
    47c6:	e1 f7       	brne	.-8      	; 0x47c0 <__movmemx_hi+0x6>
    47c8:	08 95       	ret
    47ca:	01 90       	ld	r0, Z+
    47cc:	0d 92       	st	X+, r0
    47ce:	01 97       	sbiw	r24, 0x01	; 1
    47d0:	e1 f7       	brne	.-8      	; 0x47ca <__movmemx_hi+0x10>
    47d2:	08 95       	ret

Disassembly of section .text.libgcc.builtins:

00004428 <__ashrdi3>:
    4428:	97 fb       	bst	r25, 7
    442a:	10 f8       	bld	r1, 0

0000442c <__lshrdi3>:
    442c:	16 94       	lsr	r1
    442e:	00 08       	sbc	r0, r0
    4430:	0f 93       	push	r16
    4432:	08 30       	cpi	r16, 0x08	; 8
    4434:	98 f0       	brcs	.+38     	; 0x445c <__lshrdi3+0x30>
    4436:	08 50       	subi	r16, 0x08	; 8
    4438:	23 2f       	mov	r18, r19
    443a:	34 2f       	mov	r19, r20
    443c:	45 2f       	mov	r20, r21
    443e:	56 2f       	mov	r21, r22
    4440:	67 2f       	mov	r22, r23
    4442:	78 2f       	mov	r23, r24
    4444:	89 2f       	mov	r24, r25
    4446:	90 2d       	mov	r25, r0
    4448:	f4 cf       	rjmp	.-24     	; 0x4432 <__lshrdi3+0x6>
    444a:	05 94       	asr	r0
    444c:	97 95       	ror	r25
    444e:	87 95       	ror	r24
    4450:	77 95       	ror	r23
    4452:	67 95       	ror	r22
    4454:	57 95       	ror	r21
    4456:	47 95       	ror	r20
    4458:	37 95       	ror	r19
    445a:	27 95       	ror	r18
    445c:	0a 95       	dec	r16
    445e:	aa f7       	brpl	.-22     	; 0x444a <__lshrdi3+0x1e>
    4460:	0f 91       	pop	r16
    4462:	08 95       	ret

Disassembly of section .text.libgcc:

00004804 <__cmpdi2_s8>:
    4804:	00 24       	eor	r0, r0
    4806:	a7 fd       	sbrc	r26, 7
    4808:	00 94       	com	r0
    480a:	2a 17       	cp	r18, r26
    480c:	30 05       	cpc	r19, r0
    480e:	40 05       	cpc	r20, r0
    4810:	50 05       	cpc	r21, r0
    4812:	60 05       	cpc	r22, r0
    4814:	70 05       	cpc	r23, r0
    4816:	80 05       	cpc	r24, r0
    4818:	90 05       	cpc	r25, r0
    481a:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000465c <__udivmodhi4>:
    465c:	aa 1b       	sub	r26, r26
    465e:	bb 1b       	sub	r27, r27
    4660:	51 e1       	ldi	r21, 0x11	; 17
    4662:	07 c0       	rjmp	.+14     	; 0x4672 <__udivmodhi4_ep>

00004664 <__udivmodhi4_loop>:
    4664:	aa 1f       	adc	r26, r26
    4666:	bb 1f       	adc	r27, r27
    4668:	a6 17       	cp	r26, r22
    466a:	b7 07       	cpc	r27, r23
    466c:	10 f0       	brcs	.+4      	; 0x4672 <__udivmodhi4_ep>
    466e:	a6 1b       	sub	r26, r22
    4670:	b7 0b       	sbc	r27, r23

00004672 <__udivmodhi4_ep>:
    4672:	88 1f       	adc	r24, r24
    4674:	99 1f       	adc	r25, r25
    4676:	5a 95       	dec	r21
    4678:	a9 f7       	brne	.-22     	; 0x4664 <__udivmodhi4_loop>
    467a:	80 95       	com	r24
    467c:	90 95       	com	r25
    467e:	bc 01       	movw	r22, r24
    4680:	cd 01       	movw	r24, r26
    4682:	08 95       	ret

Disassembly of section .text:

000048da <__subsf3>:
    48da:	50 58       	subi	r21, 0x80	; 128

000048dc <__addsf3>:
    48dc:	bb 27       	eor	r27, r27
    48de:	aa 27       	eor	r26, r26
    48e0:	0e 94 43 18 	call	0x3086	; 0x3086 <__addsf3x>
    48e4:	0c 94 9f 23 	jmp	0x473e	; 0x473e <__fp_round>

Disassembly of section .text:

00003086 <__addsf3x>:
    3086:	11 c0       	rjmp	.+34     	; 0x30aa <__addsf3x+0x24>
    3088:	0e 94 7b 24 	call	0x48f6	; 0x48f6 <__fp_pscA>
    308c:	38 f0       	brcs	.+14     	; 0x309c <__addsf3x+0x16>
    308e:	0e 94 82 24 	call	0x4904	; 0x4904 <__fp_pscB>
    3092:	20 f0       	brcs	.+8      	; 0x309c <__addsf3x+0x16>
    3094:	39 f4       	brne	.+14     	; 0x30a4 <__addsf3x+0x1e>
    3096:	9f 3f       	cpi	r25, 0xFF	; 255
    3098:	19 f4       	brne	.+6      	; 0x30a0 <__addsf3x+0x1a>
    309a:	26 f4       	brtc	.+8      	; 0x30a4 <__addsf3x+0x1e>
    309c:	0c 94 a8 24 	jmp	0x4950	; 0x4950 <__fp_nan>
    30a0:	0e f4       	brtc	.+2      	; 0x30a4 <__addsf3x+0x1e>
    30a2:	e0 95       	com	r30
    30a4:	e7 fb       	bst	r30, 7
    30a6:	0c 94 90 24 	jmp	0x4920	; 0x4920 <__fp_inf>
    30aa:	e9 2f       	mov	r30, r25
    30ac:	0e 94 b2 21 	call	0x4364	; 0x4364 <__fp_split3>
    30b0:	58 f3       	brcs	.-42     	; 0x3088 <__addsf3x+0x2>
    30b2:	ba 17       	cp	r27, r26
    30b4:	62 07       	cpc	r22, r18
    30b6:	73 07       	cpc	r23, r19
    30b8:	84 07       	cpc	r24, r20
    30ba:	95 07       	cpc	r25, r21
    30bc:	20 f0       	brcs	.+8      	; 0x30c6 <__addsf3x+0x40>
    30be:	79 f4       	brne	.+30     	; 0x30de <__addsf3x+0x58>
    30c0:	a6 f5       	brtc	.+104    	; 0x312a <__addsf3x+0xa4>
    30c2:	0c 94 89 24 	jmp	0x4912	; 0x4912 <__fp_zero>
    30c6:	0e f4       	brtc	.+2      	; 0x30ca <__addsf3x+0x44>
    30c8:	e0 95       	com	r30
    30ca:	0b 2e       	mov	r0, r27
    30cc:	ba 2f       	mov	r27, r26
    30ce:	a0 2d       	mov	r26, r0
    30d0:	0b 01       	movw	r0, r22
    30d2:	b9 01       	movw	r22, r18
    30d4:	90 01       	movw	r18, r0
    30d6:	0c 01       	movw	r0, r24
    30d8:	ca 01       	movw	r24, r20
    30da:	a0 01       	movw	r20, r0
    30dc:	11 24       	eor	r1, r1
    30de:	ff 27       	eor	r31, r31
    30e0:	59 1b       	sub	r21, r25
    30e2:	99 f0       	breq	.+38     	; 0x310a <__addsf3x+0x84>
    30e4:	59 3f       	cpi	r21, 0xF9	; 249
    30e6:	50 f4       	brcc	.+20     	; 0x30fc <__addsf3x+0x76>
    30e8:	50 3e       	cpi	r21, 0xE0	; 224
    30ea:	68 f1       	brcs	.+90     	; 0x3146 <__addsf3x+0xc0>
    30ec:	1a 16       	cp	r1, r26
    30ee:	f0 40       	sbci	r31, 0x00	; 0
    30f0:	a2 2f       	mov	r26, r18
    30f2:	23 2f       	mov	r18, r19
    30f4:	34 2f       	mov	r19, r20
    30f6:	44 27       	eor	r20, r20
    30f8:	58 5f       	subi	r21, 0xF8	; 248
    30fa:	f3 cf       	rjmp	.-26     	; 0x30e2 <__addsf3x+0x5c>
    30fc:	46 95       	lsr	r20
    30fe:	37 95       	ror	r19
    3100:	27 95       	ror	r18
    3102:	a7 95       	ror	r26
    3104:	f0 40       	sbci	r31, 0x00	; 0
    3106:	53 95       	inc	r21
    3108:	c9 f7       	brne	.-14     	; 0x30fc <__addsf3x+0x76>
    310a:	7e f4       	brtc	.+30     	; 0x312a <__addsf3x+0xa4>
    310c:	1f 16       	cp	r1, r31
    310e:	ba 0b       	sbc	r27, r26
    3110:	62 0b       	sbc	r22, r18
    3112:	73 0b       	sbc	r23, r19
    3114:	84 0b       	sbc	r24, r20
    3116:	ba f0       	brmi	.+46     	; 0x3146 <__addsf3x+0xc0>
    3118:	91 50       	subi	r25, 0x01	; 1
    311a:	a1 f0       	breq	.+40     	; 0x3144 <__addsf3x+0xbe>
    311c:	ff 0f       	add	r31, r31
    311e:	bb 1f       	adc	r27, r27
    3120:	66 1f       	adc	r22, r22
    3122:	77 1f       	adc	r23, r23
    3124:	88 1f       	adc	r24, r24
    3126:	c2 f7       	brpl	.-16     	; 0x3118 <__addsf3x+0x92>
    3128:	0e c0       	rjmp	.+28     	; 0x3146 <__addsf3x+0xc0>
    312a:	ba 0f       	add	r27, r26
    312c:	62 1f       	adc	r22, r18
    312e:	73 1f       	adc	r23, r19
    3130:	84 1f       	adc	r24, r20
    3132:	48 f4       	brcc	.+18     	; 0x3146 <__addsf3x+0xc0>
    3134:	87 95       	ror	r24
    3136:	77 95       	ror	r23
    3138:	67 95       	ror	r22
    313a:	b7 95       	ror	r27
    313c:	f7 95       	ror	r31
    313e:	9e 3f       	cpi	r25, 0xFE	; 254
    3140:	08 f0       	brcs	.+2      	; 0x3144 <__addsf3x+0xbe>
    3142:	b0 cf       	rjmp	.-160    	; 0x30a4 <__addsf3x+0x1e>
    3144:	93 95       	inc	r25
    3146:	88 0f       	add	r24, r24
    3148:	08 f0       	brcs	.+2      	; 0x314c <__addsf3x+0xc6>
    314a:	99 27       	eor	r25, r25
    314c:	ee 0f       	add	r30, r30
    314e:	97 95       	ror	r25
    3150:	87 95       	ror	r24
    3152:	08 95       	ret

Disassembly of section .text:

0000492c <__cmpsf2>:
    492c:	0e 94 28 21 	call	0x4250	; 0x4250 <__fp_cmp>
    4930:	08 f4       	brcc	.+2      	; 0x4934 <__cmpsf2+0x8>
    4932:	81 e0       	ldi	r24, 0x01	; 1
    4934:	08 95       	ret

Disassembly of section .text:

00004940 <__divsf3>:
    4940:	0e 94 94 16 	call	0x2d28	; 0x2d28 <__divsf3x>
    4944:	0c 94 9f 23 	jmp	0x473e	; 0x473e <__fp_round>

Disassembly of section .text:

00002d28 <__divsf3x>:
    2d28:	10 c0       	rjmp	.+32     	; 0x2d4a <__divsf3x+0x22>
    2d2a:	0e 94 82 24 	call	0x4904	; 0x4904 <__fp_pscB>
    2d2e:	58 f0       	brcs	.+22     	; 0x2d46 <__divsf3x+0x1e>
    2d30:	0e 94 7b 24 	call	0x48f6	; 0x48f6 <__fp_pscA>
    2d34:	40 f0       	brcs	.+16     	; 0x2d46 <__divsf3x+0x1e>
    2d36:	29 f4       	brne	.+10     	; 0x2d42 <__divsf3x+0x1a>
    2d38:	5f 3f       	cpi	r21, 0xFF	; 255
    2d3a:	29 f0       	breq	.+10     	; 0x2d46 <__divsf3x+0x1e>
    2d3c:	0c 94 90 24 	jmp	0x4920	; 0x4920 <__fp_inf>
    2d40:	51 11       	cpse	r21, r1
    2d42:	0c 94 8a 24 	jmp	0x4914	; 0x4914 <__fp_szero>
    2d46:	0c 94 a8 24 	jmp	0x4950	; 0x4950 <__fp_nan>
    2d4a:	0e 94 b2 21 	call	0x4364	; 0x4364 <__fp_split3>
    2d4e:	68 f3       	brcs	.-38     	; 0x2d2a <__divsf3x+0x2>

00002d50 <__divsf3_pse>:
    2d50:	99 23       	and	r25, r25
    2d52:	b1 f3       	breq	.-20     	; 0x2d40 <__divsf3x+0x18>
    2d54:	55 23       	and	r21, r21
    2d56:	91 f3       	breq	.-28     	; 0x2d3c <__divsf3x+0x14>
    2d58:	95 1b       	sub	r25, r21
    2d5a:	55 0b       	sbc	r21, r21
    2d5c:	bb 27       	eor	r27, r27
    2d5e:	aa 27       	eor	r26, r26
    2d60:	62 17       	cp	r22, r18
    2d62:	73 07       	cpc	r23, r19
    2d64:	84 07       	cpc	r24, r20
    2d66:	38 f0       	brcs	.+14     	; 0x2d76 <__divsf3_pse+0x26>
    2d68:	9f 5f       	subi	r25, 0xFF	; 255
    2d6a:	5f 4f       	sbci	r21, 0xFF	; 255
    2d6c:	22 0f       	add	r18, r18
    2d6e:	33 1f       	adc	r19, r19
    2d70:	44 1f       	adc	r20, r20
    2d72:	aa 1f       	adc	r26, r26
    2d74:	a9 f3       	breq	.-22     	; 0x2d60 <__divsf3_pse+0x10>
    2d76:	35 d0       	rcall	.+106    	; 0x2de2 <__divsf3_pse+0x92>
    2d78:	0e 2e       	mov	r0, r30
    2d7a:	3a f0       	brmi	.+14     	; 0x2d8a <__divsf3_pse+0x3a>
    2d7c:	e0 e8       	ldi	r30, 0x80	; 128
    2d7e:	32 d0       	rcall	.+100    	; 0x2de4 <__divsf3_pse+0x94>
    2d80:	91 50       	subi	r25, 0x01	; 1
    2d82:	50 40       	sbci	r21, 0x00	; 0
    2d84:	e6 95       	lsr	r30
    2d86:	00 1c       	adc	r0, r0
    2d88:	ca f7       	brpl	.-14     	; 0x2d7c <__divsf3_pse+0x2c>
    2d8a:	2b d0       	rcall	.+86     	; 0x2de2 <__divsf3_pse+0x92>
    2d8c:	fe 2f       	mov	r31, r30
    2d8e:	29 d0       	rcall	.+82     	; 0x2de2 <__divsf3_pse+0x92>
    2d90:	66 0f       	add	r22, r22
    2d92:	77 1f       	adc	r23, r23
    2d94:	88 1f       	adc	r24, r24
    2d96:	bb 1f       	adc	r27, r27
    2d98:	26 17       	cp	r18, r22
    2d9a:	37 07       	cpc	r19, r23
    2d9c:	48 07       	cpc	r20, r24
    2d9e:	ab 07       	cpc	r26, r27
    2da0:	b0 e8       	ldi	r27, 0x80	; 128
    2da2:	09 f0       	breq	.+2      	; 0x2da6 <__divsf3_pse+0x56>
    2da4:	bb 0b       	sbc	r27, r27
    2da6:	80 2d       	mov	r24, r0
    2da8:	bf 01       	movw	r22, r30
    2daa:	ff 27       	eor	r31, r31
    2dac:	93 58       	subi	r25, 0x83	; 131
    2dae:	5f 4f       	sbci	r21, 0xFF	; 255
    2db0:	3a f0       	brmi	.+14     	; 0x2dc0 <__divsf3_pse+0x70>
    2db2:	9e 3f       	cpi	r25, 0xFE	; 254
    2db4:	51 05       	cpc	r21, r1
    2db6:	78 f0       	brcs	.+30     	; 0x2dd6 <__divsf3_pse+0x86>
    2db8:	0c 94 90 24 	jmp	0x4920	; 0x4920 <__fp_inf>
    2dbc:	0c 94 8a 24 	jmp	0x4914	; 0x4914 <__fp_szero>
    2dc0:	5f 3f       	cpi	r21, 0xFF	; 255
    2dc2:	e4 f3       	brlt	.-8      	; 0x2dbc <__divsf3_pse+0x6c>
    2dc4:	98 3e       	cpi	r25, 0xE8	; 232
    2dc6:	d4 f3       	brlt	.-12     	; 0x2dbc <__divsf3_pse+0x6c>
    2dc8:	86 95       	lsr	r24
    2dca:	77 95       	ror	r23
    2dcc:	67 95       	ror	r22
    2dce:	b7 95       	ror	r27
    2dd0:	f7 95       	ror	r31
    2dd2:	9f 5f       	subi	r25, 0xFF	; 255
    2dd4:	c9 f7       	brne	.-14     	; 0x2dc8 <__divsf3_pse+0x78>
    2dd6:	88 0f       	add	r24, r24
    2dd8:	91 1d       	adc	r25, r1
    2dda:	96 95       	lsr	r25
    2ddc:	87 95       	ror	r24
    2dde:	97 f9       	bld	r25, 7
    2de0:	08 95       	ret
    2de2:	e1 e0       	ldi	r30, 0x01	; 1
    2de4:	66 0f       	add	r22, r22
    2de6:	77 1f       	adc	r23, r23
    2de8:	88 1f       	adc	r24, r24
    2dea:	bb 1f       	adc	r27, r27
    2dec:	62 17       	cp	r22, r18
    2dee:	73 07       	cpc	r23, r19
    2df0:	84 07       	cpc	r24, r20
    2df2:	ba 07       	cpc	r27, r26
    2df4:	20 f0       	brcs	.+8      	; 0x2dfe <__divsf3_pse+0xae>
    2df6:	62 1b       	sub	r22, r18
    2df8:	73 0b       	sbc	r23, r19
    2dfa:	84 0b       	sbc	r24, r20
    2dfc:	ba 0b       	sbc	r27, r26
    2dfe:	ee 1f       	adc	r30, r30
    2e00:	88 f7       	brcc	.-30     	; 0x2de4 <__divsf3_pse+0x94>
    2e02:	e0 95       	com	r30
    2e04:	08 95       	ret

Disassembly of section .text:

000048e8 <__fixsfsi>:
    48e8:	0e 94 81 20 	call	0x4102	; 0x4102 <__fixunssfsi>
    48ec:	68 94       	set
    48ee:	b1 11       	cpse	r27, r1
    48f0:	0c 94 8a 24 	jmp	0x4914	; 0x4914 <__fp_szero>
    48f4:	08 95       	ret

Disassembly of section .text:

00004102 <__fixunssfsi>:
    4102:	0e 94 ba 21 	call	0x4374	; 0x4374 <__fp_splitA>
    4106:	88 f0       	brcs	.+34     	; 0x412a <__fixunssfsi+0x28>
    4108:	9f 57       	subi	r25, 0x7F	; 127
    410a:	98 f0       	brcs	.+38     	; 0x4132 <__fixunssfsi+0x30>
    410c:	b9 2f       	mov	r27, r25
    410e:	99 27       	eor	r25, r25
    4110:	b7 51       	subi	r27, 0x17	; 23
    4112:	b0 f0       	brcs	.+44     	; 0x4140 <__fixunssfsi+0x3e>
    4114:	e1 f0       	breq	.+56     	; 0x414e <__fixunssfsi+0x4c>
    4116:	66 0f       	add	r22, r22
    4118:	77 1f       	adc	r23, r23
    411a:	88 1f       	adc	r24, r24
    411c:	99 1f       	adc	r25, r25
    411e:	1a f0       	brmi	.+6      	; 0x4126 <__fixunssfsi+0x24>
    4120:	ba 95       	dec	r27
    4122:	c9 f7       	brne	.-14     	; 0x4116 <__fixunssfsi+0x14>
    4124:	14 c0       	rjmp	.+40     	; 0x414e <__fixunssfsi+0x4c>
    4126:	b1 30       	cpi	r27, 0x01	; 1
    4128:	91 f0       	breq	.+36     	; 0x414e <__fixunssfsi+0x4c>
    412a:	0e 94 89 24 	call	0x4912	; 0x4912 <__fp_zero>
    412e:	b1 e0       	ldi	r27, 0x01	; 1
    4130:	08 95       	ret
    4132:	0c 94 89 24 	jmp	0x4912	; 0x4912 <__fp_zero>
    4136:	67 2f       	mov	r22, r23
    4138:	78 2f       	mov	r23, r24
    413a:	88 27       	eor	r24, r24
    413c:	b8 5f       	subi	r27, 0xF8	; 248
    413e:	39 f0       	breq	.+14     	; 0x414e <__fixunssfsi+0x4c>
    4140:	b9 3f       	cpi	r27, 0xF9	; 249
    4142:	cc f3       	brlt	.-14     	; 0x4136 <__fixunssfsi+0x34>
    4144:	86 95       	lsr	r24
    4146:	77 95       	ror	r23
    4148:	67 95       	ror	r22
    414a:	b3 95       	inc	r27
    414c:	d9 f7       	brne	.-10     	; 0x4144 <__fixunssfsi+0x42>
    414e:	3e f4       	brtc	.+14     	; 0x415e <__fixunssfsi+0x5c>
    4150:	90 95       	com	r25
    4152:	80 95       	com	r24
    4154:	70 95       	com	r23
    4156:	61 95       	neg	r22
    4158:	7f 4f       	sbci	r23, 0xFF	; 255
    415a:	8f 4f       	sbci	r24, 0xFF	; 255
    415c:	9f 4f       	sbci	r25, 0xFF	; 255
    415e:	08 95       	ret

Disassembly of section .text:

00004250 <__fp_cmp>:
    4250:	99 0f       	add	r25, r25
    4252:	00 08       	sbc	r0, r0
    4254:	55 0f       	add	r21, r21
    4256:	aa 0b       	sbc	r26, r26
    4258:	e0 e8       	ldi	r30, 0x80	; 128
    425a:	fe ef       	ldi	r31, 0xFE	; 254
    425c:	16 16       	cp	r1, r22
    425e:	17 06       	cpc	r1, r23
    4260:	e8 07       	cpc	r30, r24
    4262:	f9 07       	cpc	r31, r25
    4264:	c0 f0       	brcs	.+48     	; 0x4296 <__fp_cmp+0x46>
    4266:	12 16       	cp	r1, r18
    4268:	13 06       	cpc	r1, r19
    426a:	e4 07       	cpc	r30, r20
    426c:	f5 07       	cpc	r31, r21
    426e:	98 f0       	brcs	.+38     	; 0x4296 <__fp_cmp+0x46>
    4270:	62 1b       	sub	r22, r18
    4272:	73 0b       	sbc	r23, r19
    4274:	84 0b       	sbc	r24, r20
    4276:	95 0b       	sbc	r25, r21
    4278:	39 f4       	brne	.+14     	; 0x4288 <__fp_cmp+0x38>
    427a:	0a 26       	eor	r0, r26
    427c:	61 f0       	breq	.+24     	; 0x4296 <__fp_cmp+0x46>
    427e:	23 2b       	or	r18, r19
    4280:	24 2b       	or	r18, r20
    4282:	25 2b       	or	r18, r21
    4284:	21 f4       	brne	.+8      	; 0x428e <__fp_cmp+0x3e>
    4286:	08 95       	ret
    4288:	0a 26       	eor	r0, r26
    428a:	09 f4       	brne	.+2      	; 0x428e <__fp_cmp+0x3e>
    428c:	a1 40       	sbci	r26, 0x01	; 1
    428e:	a6 95       	lsr	r26
    4290:	8f ef       	ldi	r24, 0xFF	; 255
    4292:	81 1d       	adc	r24, r1
    4294:	81 1d       	adc	r24, r1
    4296:	08 95       	ret

Disassembly of section .text:

00004920 <__fp_inf>:
    4920:	97 f9       	bld	r25, 7
    4922:	9f 67       	ori	r25, 0x7F	; 127
    4924:	80 e8       	ldi	r24, 0x80	; 128
    4926:	70 e0       	ldi	r23, 0x00	; 0
    4928:	60 e0       	ldi	r22, 0x00	; 0
    492a:	08 95       	ret

Disassembly of section .text:

00004950 <__fp_nan>:
    4950:	9f ef       	ldi	r25, 0xFF	; 255
    4952:	80 ec       	ldi	r24, 0xC0	; 192
    4954:	08 95       	ret

Disassembly of section .text:

000048f6 <__fp_pscA>:
    48f6:	00 24       	eor	r0, r0
    48f8:	0a 94       	dec	r0
    48fa:	16 16       	cp	r1, r22
    48fc:	17 06       	cpc	r1, r23
    48fe:	18 06       	cpc	r1, r24
    4900:	09 06       	cpc	r0, r25
    4902:	08 95       	ret

Disassembly of section .text:

00004904 <__fp_pscB>:
    4904:	00 24       	eor	r0, r0
    4906:	0a 94       	dec	r0
    4908:	12 16       	cp	r1, r18
    490a:	13 06       	cpc	r1, r19
    490c:	14 06       	cpc	r1, r20
    490e:	05 06       	cpc	r0, r21
    4910:	08 95       	ret

Disassembly of section .text:

0000473e <__fp_round>:
    473e:	09 2e       	mov	r0, r25
    4740:	03 94       	inc	r0
    4742:	00 0c       	add	r0, r0
    4744:	11 f4       	brne	.+4      	; 0x474a <__fp_round+0xc>
    4746:	88 23       	and	r24, r24
    4748:	52 f0       	brmi	.+20     	; 0x475e <__fp_round+0x20>
    474a:	bb 0f       	add	r27, r27
    474c:	40 f4       	brcc	.+16     	; 0x475e <__fp_round+0x20>
    474e:	bf 2b       	or	r27, r31
    4750:	11 f4       	brne	.+4      	; 0x4756 <__fp_round+0x18>
    4752:	60 ff       	sbrs	r22, 0
    4754:	04 c0       	rjmp	.+8      	; 0x475e <__fp_round+0x20>
    4756:	6f 5f       	subi	r22, 0xFF	; 255
    4758:	7f 4f       	sbci	r23, 0xFF	; 255
    475a:	8f 4f       	sbci	r24, 0xFF	; 255
    475c:	9f 4f       	sbci	r25, 0xFF	; 255
    475e:	08 95       	ret

Disassembly of section .text:

00004364 <__fp_split3>:
    4364:	57 fd       	sbrc	r21, 7
    4366:	90 58       	subi	r25, 0x80	; 128
    4368:	44 0f       	add	r20, r20
    436a:	55 1f       	adc	r21, r21
    436c:	59 f0       	breq	.+22     	; 0x4384 <__fp_splitA+0x10>
    436e:	5f 3f       	cpi	r21, 0xFF	; 255
    4370:	71 f0       	breq	.+28     	; 0x438e <__fp_splitA+0x1a>
    4372:	47 95       	ror	r20

00004374 <__fp_splitA>:
    4374:	88 0f       	add	r24, r24
    4376:	97 fb       	bst	r25, 7
    4378:	99 1f       	adc	r25, r25
    437a:	61 f0       	breq	.+24     	; 0x4394 <__fp_splitA+0x20>
    437c:	9f 3f       	cpi	r25, 0xFF	; 255
    437e:	79 f0       	breq	.+30     	; 0x439e <__fp_splitA+0x2a>
    4380:	87 95       	ror	r24
    4382:	08 95       	ret
    4384:	12 16       	cp	r1, r18
    4386:	13 06       	cpc	r1, r19
    4388:	14 06       	cpc	r1, r20
    438a:	55 1f       	adc	r21, r21
    438c:	f2 cf       	rjmp	.-28     	; 0x4372 <__fp_split3+0xe>
    438e:	46 95       	lsr	r20
    4390:	f1 df       	rcall	.-30     	; 0x4374 <__fp_splitA>
    4392:	08 c0       	rjmp	.+16     	; 0x43a4 <__fp_splitA+0x30>
    4394:	16 16       	cp	r1, r22
    4396:	17 06       	cpc	r1, r23
    4398:	18 06       	cpc	r1, r24
    439a:	99 1f       	adc	r25, r25
    439c:	f1 cf       	rjmp	.-30     	; 0x4380 <__fp_splitA+0xc>
    439e:	86 95       	lsr	r24
    43a0:	71 05       	cpc	r23, r1
    43a2:	61 05       	cpc	r22, r1
    43a4:	08 94       	sec
    43a6:	08 95       	ret

Disassembly of section .text:

00004912 <__fp_zero>:
    4912:	e8 94       	clt

00004914 <__fp_szero>:
    4914:	bb 27       	eor	r27, r27
    4916:	66 27       	eor	r22, r22
    4918:	77 27       	eor	r23, r23
    491a:	cb 01       	movw	r24, r22
    491c:	97 f9       	bld	r25, 7
    491e:	08 95       	ret

Disassembly of section .text:

00004936 <__gesf2>:
    4936:	0e 94 28 21 	call	0x4250	; 0x4250 <__fp_cmp>
    493a:	08 f4       	brcc	.+2      	; 0x493e <__gesf2+0x8>
    493c:	8f ef       	ldi	r24, 0xFF	; 255
    493e:	08 95       	ret

Disassembly of section .text:

00004948 <__mulsf3>:
    4948:	0e 94 d9 17 	call	0x2fb2	; 0x2fb2 <__mulsf3x>
    494c:	0c 94 9f 23 	jmp	0x473e	; 0x473e <__fp_round>

Disassembly of section .text:

00002fb2 <__mulsf3x>:
    2fb2:	0f c0       	rjmp	.+30     	; 0x2fd2 <__mulsf3x+0x20>
    2fb4:	0e 94 7b 24 	call	0x48f6	; 0x48f6 <__fp_pscA>
    2fb8:	38 f0       	brcs	.+14     	; 0x2fc8 <__mulsf3x+0x16>
    2fba:	0e 94 82 24 	call	0x4904	; 0x4904 <__fp_pscB>
    2fbe:	20 f0       	brcs	.+8      	; 0x2fc8 <__mulsf3x+0x16>
    2fc0:	95 23       	and	r25, r21
    2fc2:	11 f0       	breq	.+4      	; 0x2fc8 <__mulsf3x+0x16>
    2fc4:	0c 94 90 24 	jmp	0x4920	; 0x4920 <__fp_inf>
    2fc8:	0c 94 a8 24 	jmp	0x4950	; 0x4950 <__fp_nan>
    2fcc:	11 24       	eor	r1, r1
    2fce:	0c 94 8a 24 	jmp	0x4914	; 0x4914 <__fp_szero>
    2fd2:	0e 94 b2 21 	call	0x4364	; 0x4364 <__fp_split3>
    2fd6:	70 f3       	brcs	.-36     	; 0x2fb4 <__mulsf3x+0x2>

00002fd8 <__mulsf3_pse>:
    2fd8:	95 9f       	mul	r25, r21
    2fda:	c1 f3       	breq	.-16     	; 0x2fcc <__mulsf3x+0x1a>
    2fdc:	95 0f       	add	r25, r21
    2fde:	50 e0       	ldi	r21, 0x00	; 0
    2fe0:	55 1f       	adc	r21, r21
    2fe2:	62 9f       	mul	r22, r18
    2fe4:	f0 01       	movw	r30, r0
    2fe6:	72 9f       	mul	r23, r18
    2fe8:	bb 27       	eor	r27, r27
    2fea:	f0 0d       	add	r31, r0
    2fec:	b1 1d       	adc	r27, r1
    2fee:	63 9f       	mul	r22, r19
    2ff0:	aa 27       	eor	r26, r26
    2ff2:	f0 0d       	add	r31, r0
    2ff4:	b1 1d       	adc	r27, r1
    2ff6:	aa 1f       	adc	r26, r26
    2ff8:	64 9f       	mul	r22, r20
    2ffa:	66 27       	eor	r22, r22
    2ffc:	b0 0d       	add	r27, r0
    2ffe:	a1 1d       	adc	r26, r1
    3000:	66 1f       	adc	r22, r22
    3002:	82 9f       	mul	r24, r18
    3004:	22 27       	eor	r18, r18
    3006:	b0 0d       	add	r27, r0
    3008:	a1 1d       	adc	r26, r1
    300a:	62 1f       	adc	r22, r18
    300c:	73 9f       	mul	r23, r19
    300e:	b0 0d       	add	r27, r0
    3010:	a1 1d       	adc	r26, r1
    3012:	62 1f       	adc	r22, r18
    3014:	83 9f       	mul	r24, r19
    3016:	a0 0d       	add	r26, r0
    3018:	61 1d       	adc	r22, r1
    301a:	22 1f       	adc	r18, r18
    301c:	74 9f       	mul	r23, r20
    301e:	33 27       	eor	r19, r19
    3020:	a0 0d       	add	r26, r0
    3022:	61 1d       	adc	r22, r1
    3024:	23 1f       	adc	r18, r19
    3026:	84 9f       	mul	r24, r20
    3028:	60 0d       	add	r22, r0
    302a:	21 1d       	adc	r18, r1
    302c:	82 2f       	mov	r24, r18
    302e:	76 2f       	mov	r23, r22
    3030:	6a 2f       	mov	r22, r26
    3032:	11 24       	eor	r1, r1
    3034:	9f 57       	subi	r25, 0x7F	; 127
    3036:	50 40       	sbci	r21, 0x00	; 0
    3038:	9a f0       	brmi	.+38     	; 0x3060 <__mulsf3_pse+0x88>
    303a:	f1 f0       	breq	.+60     	; 0x3078 <__mulsf3_pse+0xa0>
    303c:	88 23       	and	r24, r24
    303e:	4a f0       	brmi	.+18     	; 0x3052 <__mulsf3_pse+0x7a>
    3040:	ee 0f       	add	r30, r30
    3042:	ff 1f       	adc	r31, r31
    3044:	bb 1f       	adc	r27, r27
    3046:	66 1f       	adc	r22, r22
    3048:	77 1f       	adc	r23, r23
    304a:	88 1f       	adc	r24, r24
    304c:	91 50       	subi	r25, 0x01	; 1
    304e:	50 40       	sbci	r21, 0x00	; 0
    3050:	a9 f7       	brne	.-22     	; 0x303c <__mulsf3_pse+0x64>
    3052:	9e 3f       	cpi	r25, 0xFE	; 254
    3054:	51 05       	cpc	r21, r1
    3056:	80 f0       	brcs	.+32     	; 0x3078 <__mulsf3_pse+0xa0>
    3058:	0c 94 90 24 	jmp	0x4920	; 0x4920 <__fp_inf>
    305c:	0c 94 8a 24 	jmp	0x4914	; 0x4914 <__fp_szero>
    3060:	5f 3f       	cpi	r21, 0xFF	; 255
    3062:	e4 f3       	brlt	.-8      	; 0x305c <__mulsf3_pse+0x84>
    3064:	98 3e       	cpi	r25, 0xE8	; 232
    3066:	d4 f3       	brlt	.-12     	; 0x305c <__mulsf3_pse+0x84>
    3068:	86 95       	lsr	r24
    306a:	77 95       	ror	r23
    306c:	67 95       	ror	r22
    306e:	b7 95       	ror	r27
    3070:	f7 95       	ror	r31
    3072:	e7 95       	ror	r30
    3074:	9f 5f       	subi	r25, 0xFF	; 255
    3076:	c1 f7       	brne	.-16     	; 0x3068 <__mulsf3_pse+0x90>
    3078:	fe 2b       	or	r31, r30
    307a:	88 0f       	add	r24, r24
    307c:	91 1d       	adc	r25, r1
    307e:	96 95       	lsr	r25
    3080:	87 95       	ror	r24
    3082:	97 f9       	bld	r25, 7
    3084:	08 95       	ret

Disassembly of section .text.floorf:

00002ae8 <floorf>:
    2ae8:	4f 92       	push	r4
    2aea:	5f 92       	push	r5
    2aec:	6f 92       	push	r6
    2aee:	7f 92       	push	r7
    2af0:	8f 92       	push	r8
    2af2:	9f 92       	push	r9
    2af4:	af 92       	push	r10
    2af6:	bf 92       	push	r11
    2af8:	cf 92       	push	r12
    2afa:	df 92       	push	r13
    2afc:	ef 92       	push	r14
    2afe:	ff 92       	push	r15
    2b00:	cf 93       	push	r28
    2b02:	df 93       	push	r29
    2b04:	cd b7       	in	r28, 0x3d	; 61
    2b06:	de b7       	in	r29, 0x3e	; 62
    2b08:	28 97       	sbiw	r28, 0x08	; 8
    2b0a:	0f b6       	in	r0, 0x3f	; 63
    2b0c:	f8 94       	cli
    2b0e:	de bf       	out	0x3e, r29	; 62
    2b10:	0f be       	out	0x3f, r0	; 63
    2b12:	cd bf       	out	0x3d, r28	; 61
    2b14:	6b 01       	movw	r12, r22
    2b16:	7c 01       	movw	r14, r24
    2b18:	dc 01       	movw	r26, r24
    2b1a:	cb 01       	movw	r24, r22
    2b1c:	47 e1       	ldi	r20, 0x17	; 23
    2b1e:	b6 95       	lsr	r27
    2b20:	a7 95       	ror	r26
    2b22:	97 95       	ror	r25
    2b24:	87 95       	ror	r24
    2b26:	4a 95       	dec	r20
    2b28:	d1 f7       	brne	.-12     	; 0x2b1e <floorf+0x36>
    2b2a:	99 27       	eor	r25, r25
    2b2c:	8f 57       	subi	r24, 0x7F	; 127
    2b2e:	91 09       	sbc	r25, r1
    2b30:	87 31       	cpi	r24, 0x17	; 23
    2b32:	91 05       	cpc	r25, r1
    2b34:	9c f5       	brge	.+102    	; 0x2b9c <floorf+0xb4>
    2b36:	97 fd       	sbrc	r25, 7
    2b38:	36 c0       	rjmp	.+108    	; 0x2ba6 <floorf+0xbe>
    2b3a:	88 24       	eor	r8, r8
    2b3c:	8a 94       	dec	r8
    2b3e:	98 2c       	mov	r9, r8
    2b40:	3f e7       	ldi	r19, 0x7F	; 127
    2b42:	a3 2e       	mov	r10, r19
    2b44:	b1 2c       	mov	r11, r1
    2b46:	04 c0       	rjmp	.+8      	; 0x2b50 <floorf+0x68>
    2b48:	b5 94       	asr	r11
    2b4a:	a7 94       	ror	r10
    2b4c:	97 94       	ror	r9
    2b4e:	87 94       	ror	r8
    2b50:	8a 95       	dec	r24
    2b52:	d2 f7       	brpl	.-12     	; 0x2b48 <floorf+0x60>
    2b54:	d5 01       	movw	r26, r10
    2b56:	c4 01       	movw	r24, r8
    2b58:	8c 21       	and	r24, r12
    2b5a:	9d 21       	and	r25, r13
    2b5c:	ae 21       	and	r26, r14
    2b5e:	bf 21       	and	r27, r15
    2b60:	89 2b       	or	r24, r25
    2b62:	8a 2b       	or	r24, r26
    2b64:	8b 2b       	or	r24, r27
    2b66:	d1 f0       	breq	.+52     	; 0x2b9c <floorf+0xb4>
    2b68:	20 e0       	ldi	r18, 0x00	; 0
    2b6a:	30 e0       	ldi	r19, 0x00	; 0
    2b6c:	40 e8       	ldi	r20, 0x80	; 128
    2b6e:	5b e7       	ldi	r21, 0x7B	; 123
    2b70:	c7 01       	movw	r24, r14
    2b72:	b6 01       	movw	r22, r12
    2b74:	0e 94 6e 24 	call	0x48dc	; 0x48dc <__addsf3>
    2b78:	6d 83       	std	Y+5, r22	; 0x05
    2b7a:	7e 83       	std	Y+6, r23	; 0x06
    2b7c:	8f 83       	std	Y+7, r24	; 0x07
    2b7e:	98 87       	std	Y+8, r25	; 0x08
    2b80:	f7 fe       	sbrs	r15, 7
    2b82:	04 c0       	rjmp	.+8      	; 0x2b8c <floorf+0xa4>
    2b84:	c8 0c       	add	r12, r8
    2b86:	d9 1c       	adc	r13, r9
    2b88:	ea 1c       	adc	r14, r10
    2b8a:	fb 1c       	adc	r15, r11
    2b8c:	80 94       	com	r8
    2b8e:	90 94       	com	r9
    2b90:	a0 94       	com	r10
    2b92:	b0 94       	com	r11
    2b94:	c8 20       	and	r12, r8
    2b96:	d9 20       	and	r13, r9
    2b98:	ea 20       	and	r14, r10
    2b9a:	fb 20       	and	r15, r11
    2b9c:	5c 2d       	mov	r21, r12
    2b9e:	4d 2d       	mov	r20, r13
    2ba0:	3e 2d       	mov	r19, r14
    2ba2:	2f 2d       	mov	r18, r15
    2ba4:	21 c0       	rjmp	.+66     	; 0x2be8 <floorf+0x100>
    2ba6:	20 e0       	ldi	r18, 0x00	; 0
    2ba8:	30 e0       	ldi	r19, 0x00	; 0
    2baa:	40 e8       	ldi	r20, 0x80	; 128
    2bac:	5b e7       	ldi	r21, 0x7B	; 123
    2bae:	c7 01       	movw	r24, r14
    2bb0:	b6 01       	movw	r22, r12
    2bb2:	0e 94 6e 24 	call	0x48dc	; 0x48dc <__addsf3>
    2bb6:	69 83       	std	Y+1, r22	; 0x01
    2bb8:	7a 83       	std	Y+2, r23	; 0x02
    2bba:	8b 83       	std	Y+3, r24	; 0x03
    2bbc:	9c 83       	std	Y+4, r25	; 0x04
    2bbe:	f7 fe       	sbrs	r15, 7
    2bc0:	0f c0       	rjmp	.+30     	; 0x2be0 <floorf+0xf8>
    2bc2:	d7 01       	movw	r26, r14
    2bc4:	c6 01       	movw	r24, r12
    2bc6:	88 0f       	add	r24, r24
    2bc8:	99 1f       	adc	r25, r25
    2bca:	aa 1f       	adc	r26, r26
    2bcc:	bb 1f       	adc	r27, r27
    2bce:	89 2b       	or	r24, r25
    2bd0:	8a 2b       	or	r24, r26
    2bd2:	8b 2b       	or	r24, r27
    2bd4:	19 f3       	breq	.-58     	; 0x2b9c <floorf+0xb4>
    2bd6:	50 e0       	ldi	r21, 0x00	; 0
    2bd8:	40 e0       	ldi	r20, 0x00	; 0
    2bda:	30 e8       	ldi	r19, 0x80	; 128
    2bdc:	2f eb       	ldi	r18, 0xBF	; 191
    2bde:	04 c0       	rjmp	.+8      	; 0x2be8 <floorf+0x100>
    2be0:	50 e0       	ldi	r21, 0x00	; 0
    2be2:	40 e0       	ldi	r20, 0x00	; 0
    2be4:	30 e0       	ldi	r19, 0x00	; 0
    2be6:	20 e0       	ldi	r18, 0x00	; 0
    2be8:	65 2f       	mov	r22, r21
    2bea:	74 2f       	mov	r23, r20
    2bec:	83 2f       	mov	r24, r19
    2bee:	92 2f       	mov	r25, r18
    2bf0:	28 96       	adiw	r28, 0x08	; 8
    2bf2:	0f b6       	in	r0, 0x3f	; 63
    2bf4:	f8 94       	cli
    2bf6:	de bf       	out	0x3e, r29	; 62
    2bf8:	0f be       	out	0x3f, r0	; 63
    2bfa:	cd bf       	out	0x3d, r28	; 61
    2bfc:	df 91       	pop	r29
    2bfe:	cf 91       	pop	r28
    2c00:	ff 90       	pop	r15
    2c02:	ef 90       	pop	r14
    2c04:	df 90       	pop	r13
    2c06:	cf 90       	pop	r12
    2c08:	bf 90       	pop	r11
    2c0a:	af 90       	pop	r10
    2c0c:	9f 90       	pop	r9
    2c0e:	8f 90       	pop	r8
    2c10:	7f 90       	pop	r7
    2c12:	6f 90       	pop	r6
    2c14:	5f 90       	pop	r5
    2c16:	4f 90       	pop	r4
    2c18:	08 95       	ret

Disassembly of section .text.fmaf:

000029ac <fmaf>:
    29ac:	a5 e1       	ldi	r26, 0x15	; 21
    29ae:	b0 e0       	ldi	r27, 0x00	; 0
    29b0:	ec ed       	ldi	r30, 0xDC	; 220
    29b2:	f4 e1       	ldi	r31, 0x14	; 20
    29b4:	0c 94 6c 22 	jmp	0x44d8	; 0x44d8 <__prologue_saves__>
    29b8:	47 01       	movw	r8, r14
    29ba:	58 01       	movw	r10, r16
    29bc:	0e 94 a4 24 	call	0x4948	; 0x4948 <__mulsf3>
    29c0:	2b 01       	movw	r4, r22
    29c2:	3c 01       	movw	r6, r24
    29c4:	a8 01       	movw	r20, r16
    29c6:	97 01       	movw	r18, r14
    29c8:	0e 94 6e 24 	call	0x48dc	; 0x48dc <__addsf3>
    29cc:	16 2f       	mov	r17, r22
    29ce:	c7 2e       	mov	r12, r23
    29d0:	d8 2e       	mov	r13, r24
    29d2:	f9 2e       	mov	r15, r25
    29d4:	86 2f       	mov	r24, r22
    29d6:	9c 2d       	mov	r25, r12
    29d8:	ad 2d       	mov	r26, r13
    29da:	bf 2d       	mov	r27, r15
    29dc:	89 83       	std	Y+1, r24	; 0x01
    29de:	9a 83       	std	Y+2, r25	; 0x02
    29e0:	ab 83       	std	Y+3, r26	; 0x03
    29e2:	bc 83       	std	Y+4, r27	; 0x04
    29e4:	aa 81       	ldd	r26, Y+2	; 0x02
    29e6:	fb 81       	ldd	r31, Y+3	; 0x03
    29e8:	ec 81       	ldd	r30, Y+4	; 0x04
    29ea:	ed 80       	ldd	r14, Y+5	; 0x05
    29ec:	3e 80       	ldd	r3, Y+6	; 0x06
    29ee:	2f 80       	ldd	r2, Y+7	; 0x07
    29f0:	08 85       	ldd	r16, Y+8	; 0x08
    29f2:	0d 8b       	std	Y+21, r16	; 0x15
    29f4:	5e 2f       	mov	r21, r30
    29f6:	5f 71       	andi	r21, 0x1F	; 31
    29f8:	21 2f       	mov	r18, r17
    29fa:	3a 2f       	mov	r19, r26
    29fc:	4f 2f       	mov	r20, r31
    29fe:	60 e0       	ldi	r22, 0x00	; 0
    2a00:	70 e0       	ldi	r23, 0x00	; 0
    2a02:	80 e0       	ldi	r24, 0x00	; 0
    2a04:	90 e0       	ldi	r25, 0x00	; 0
    2a06:	21 15       	cp	r18, r1
    2a08:	31 05       	cpc	r19, r1
    2a0a:	41 05       	cpc	r20, r1
    2a0c:	00 e1       	ldi	r16, 0x10	; 16
    2a0e:	50 07       	cpc	r21, r16
    2a10:	61 05       	cpc	r22, r1
    2a12:	71 05       	cpc	r23, r1
    2a14:	81 05       	cpc	r24, r1
    2a16:	91 05       	cpc	r25, r1
    2a18:	09 f0       	breq	.+2      	; 0x2a1c <fmaf+0x70>
    2a1a:	5e c0       	rjmp	.+188    	; 0x2ad8 <fmaf+0x12c>
    2a1c:	5e 2f       	mov	r21, r30
    2a1e:	6e 2d       	mov	r22, r14
    2a20:	73 2d       	mov	r23, r3
    2a22:	82 2d       	mov	r24, r2
    2a24:	9d 89       	ldd	r25, Y+21	; 0x15
    2a26:	04 e3       	ldi	r16, 0x34	; 52
    2a28:	0e 94 16 22 	call	0x442c	; 0x442c <__lshrdi3>
    2a2c:	2d 87       	std	Y+13, r18	; 0x0d
    2a2e:	3e 87       	std	Y+14, r19	; 0x0e
    2a30:	4f 87       	std	Y+15, r20	; 0x0f
    2a32:	58 8b       	std	Y+16, r21	; 0x10
    2a34:	69 8b       	std	Y+17, r22	; 0x11
    2a36:	7a 8b       	std	Y+18, r23	; 0x12
    2a38:	8b 8b       	std	Y+19, r24	; 0x13
    2a3a:	9c 8b       	std	Y+20, r25	; 0x14
    2a3c:	8d 85       	ldd	r24, Y+13	; 0x0d
    2a3e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2a40:	97 70       	andi	r25, 0x07	; 7
    2a42:	8f 3f       	cpi	r24, 0xFF	; 255
    2a44:	97 40       	sbci	r25, 0x07	; 7
    2a46:	09 f4       	brne	.+2      	; 0x2a4a <fmaf+0x9e>
    2a48:	47 c0       	rjmp	.+142    	; 0x2ad8 <fmaf+0x12c>
    2a4a:	a3 01       	movw	r20, r6
    2a4c:	92 01       	movw	r18, r4
    2a4e:	61 2f       	mov	r22, r17
    2a50:	7c 2d       	mov	r23, r12
    2a52:	8d 2d       	mov	r24, r13
    2a54:	9f 2d       	mov	r25, r15
    2a56:	0e 94 6d 24 	call	0x48da	; 0x48da <__subsf3>
    2a5a:	9b 01       	movw	r18, r22
    2a5c:	ac 01       	movw	r20, r24
    2a5e:	c5 01       	movw	r24, r10
    2a60:	b4 01       	movw	r22, r8
    2a62:	0e 94 96 24 	call	0x492c	; 0x492c <__cmpsf2>
    2a66:	88 23       	and	r24, r24
    2a68:	b9 f1       	breq	.+110    	; 0x2ad8 <fmaf+0x12c>
    2a6a:	49 86       	std	Y+9, r4	; 0x09
    2a6c:	5a 86       	std	Y+10, r5	; 0x0a
    2a6e:	6b 86       	std	Y+11, r6	; 0x0b
    2a70:	7c 86       	std	Y+12, r7	; 0x0c
    2a72:	29 85       	ldd	r18, Y+9	; 0x09
    2a74:	3a 85       	ldd	r19, Y+10	; 0x0a
    2a76:	4b 85       	ldd	r20, Y+11	; 0x0b
    2a78:	5c 85       	ldd	r21, Y+12	; 0x0c
    2a7a:	c5 01       	movw	r24, r10
    2a7c:	b4 01       	movw	r22, r8
    2a7e:	0e 94 6e 24 	call	0x48dc	; 0x48dc <__addsf3>
    2a82:	b6 2e       	mov	r11, r22
    2a84:	87 2e       	mov	r8, r23
    2a86:	98 2e       	mov	r9, r24
    2a88:	a9 2e       	mov	r10, r25
    2a8a:	26 2f       	mov	r18, r22
    2a8c:	37 2f       	mov	r19, r23
    2a8e:	48 2f       	mov	r20, r24
    2a90:	59 2f       	mov	r21, r25
    2a92:	61 2f       	mov	r22, r17
    2a94:	7c 2d       	mov	r23, r12
    2a96:	8d 2d       	mov	r24, r13
    2a98:	9f 2d       	mov	r25, r15
    2a9a:	0e 94 96 24 	call	0x492c	; 0x492c <__cmpsf2>
    2a9e:	81 11       	cpse	r24, r1
    2aa0:	18 c0       	rjmp	.+48     	; 0x2ad2 <fmaf+0x126>
    2aa2:	2b 2d       	mov	r18, r11
    2aa4:	8b 2d       	mov	r24, r11
    2aa6:	98 2d       	mov	r25, r8
    2aa8:	a9 2d       	mov	r26, r9
    2aaa:	ba 2d       	mov	r27, r10
    2aac:	89 83       	std	Y+1, r24	; 0x01
    2aae:	9a 83       	std	Y+2, r25	; 0x02
    2ab0:	ab 83       	std	Y+3, r26	; 0x03
    2ab2:	bc 83       	std	Y+4, r27	; 0x04
    2ab4:	3a 81       	ldd	r19, Y+2	; 0x02
    2ab6:	4b 81       	ldd	r20, Y+3	; 0x03
    2ab8:	5c 81       	ldd	r21, Y+4	; 0x04
    2aba:	6e 2d       	mov	r22, r14
    2abc:	73 2d       	mov	r23, r3
    2abe:	82 2d       	mov	r24, r2
    2ac0:	9d 89       	ldd	r25, Y+21	; 0x15
    2ac2:	a1 e0       	ldi	r26, 0x01	; 1
    2ac4:	0e 94 0e 24 	call	0x481c	; 0x481c <__adddi3_s8>
    2ac8:	12 2f       	mov	r17, r18
    2aca:	c3 2e       	mov	r12, r19
    2acc:	d4 2e       	mov	r13, r20
    2ace:	f5 2e       	mov	r15, r21
    2ad0:	03 c0       	rjmp	.+6      	; 0x2ad8 <fmaf+0x12c>
    2ad2:	1b 2d       	mov	r17, r11
    2ad4:	64 01       	movw	r12, r8
    2ad6:	fa 2c       	mov	r15, r10
    2ad8:	61 2f       	mov	r22, r17
    2ada:	7c 2d       	mov	r23, r12
    2adc:	8d 2d       	mov	r24, r13
    2ade:	9f 2d       	mov	r25, r15
    2ae0:	65 96       	adiw	r28, 0x15	; 21
    2ae2:	e2 e1       	ldi	r30, 0x12	; 18
    2ae4:	0c 94 a3 22 	jmp	0x4546	; 0x4546 <__epilogue_restores__>

Disassembly of section .text.libgcc:

0000481c <__adddi3_s8>:
    481c:	00 24       	eor	r0, r0
    481e:	a7 fd       	sbrc	r26, 7
    4820:	00 94       	com	r0
    4822:	2a 0f       	add	r18, r26
    4824:	30 1d       	adc	r19, r0
    4826:	40 1d       	adc	r20, r0
    4828:	50 1d       	adc	r21, r0
    482a:	60 1d       	adc	r22, r0
    482c:	70 1d       	adc	r23, r0
    482e:	80 1d       	adc	r24, r0
    4830:	90 1d       	adc	r25, r0
    4832:	08 95       	ret
