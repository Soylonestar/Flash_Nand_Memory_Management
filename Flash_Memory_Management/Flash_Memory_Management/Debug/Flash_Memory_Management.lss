
Flash_Memory_Management.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00004818  2**0
                  ALLOC, LOAD, DATA
  1 .text         0000017a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000030d  00800200  00800200  00004818  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00004818  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 00000196  00000000  00000000  00004847  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000001c8  00000000  00000000  000049dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000032d0  00000000  00000000  00004ba5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000120d  00000000  00000000  00007e75  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001868  00000000  00000000  00009082  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000574  00000000  00000000  0000a8ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000537  00000000  00000000  0000ae60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ced  00000000  00000000  0000b397  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  0000c084  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  00004776  00004776  0000480a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000c274  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .progmemx.data 00000013  00000682  00000682  00000716  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 16 .text.main    0000003e  000041f4  000041f4  00004288  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.USART_Init 00000036  000042a6  000042a6  0000433a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.USART_TX_Data 0000000e  000046a4  000046a4  00004738  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.USART_Data 0000004c  0000404c  0000404c  000040e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.USART_RX_Data 0000000e  000046b2  000046b2  00004746  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.LED_Init 00000016  00004644  00004644  000046d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.LED_Red_Toggle 0000000e  000046c0  000046c0  00004754  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.LED_Green_Toggle 0000000e  000046ce  000046ce  00004762  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.VOLTAGE_Translator_Init 00000026  0000445c  0000445c  000044f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.SLAVE_CS_Deselect 00000062  00003e80  00003e80  00003f14  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.FLASH_NAND_CS_ENABLE 00000008  00004750  00004750  000047e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.FLASH_NAND_CS_DISABLE 00000008  00004758  00004758  000047ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.Print_To_User 000000ac  0000344c  0000344c  000034e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .progmemx.data 0000039f  0000017a  0000017a  0000020e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 30 .text.HEX_Verification 000000bc  000032e0  000032e0  00003374  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.ExecuteCommand 000004dc  00001c0a  00001c0a  00001c9e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.UserInput 000000be  00003222  00003222  000032b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.COLUMN_BLOCK_PAGE_ADDRESSER 00000150  00002656  00002656  000026ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.NAND_Address_Checker 0000009a  00003978  00003978  00003a0c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .bss.input_counter 00000002  0080050d  0080050d  00004818  2**0
                  ALLOC
 36 .bss.arr_address 00000002  0080050f  0080050f  00004818  2**0
                  ALLOC
 37 .text.CLEAR_ARR 00000060  00003ee2  00003ee2  00003f76  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.SPI_MASTER_Init 00000024  000044ce  000044ce  00004562  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.FLASH_Write_Enable 0000001a  000045ca  000045ca  0000465e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .progmemx.data 000000d4  00000519  00000519  000005ad  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 41 .text.FLASH_ID 0000008a  00003b30  00003b30  00003bc4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.FLASH_Die_Selection 00000074  00003cba  00003cba  00003d4e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.FLASH_Configuration 00000074  00003d2e  00003d2e  00003dc2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.FLASH_Block_Lock_Setter 00000074  00003da2  00003da2  00003e36  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.FLASH_Block_Lock 000000aa  000034f8  000034f8  0000358c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.FLASH_Reset 0000001e  00004558  00004558  000045ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.FLASH_MainArray_Address 000000a6  000035a2  000035a2  00003636  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.FLASH_Column_Address 0000005c  00003fa0  00003fa0  00004034  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.FLASH_Data_Storage 000000a2  00003834  00003834  000038c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.FLASH_Read_From_Cache_x1 0000004c  00004098  00004098  0000412c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.FLASH_Status 0000007c  00003c3e  00003c3e  00003cd2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.FLASH_Program_Execute 00000030  0000437c  0000437c  00004410  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.FLASH_Page_Read 00000036  000042dc  000042dc  00004370  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.FLASH_Para_Pg 00000050  00003ffc  00003ffc  00004090  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.FLASH_Block_Erase 00000034  00004348  00004348  000043dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.FLASH_Page_Program 00000084  00003bba  00003bba  00003c4e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .progmemx.data 0000007f  000005ed  000005ed  00000681  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 58 .text.Page_Tester 000000c0  00003162  00003162  000031f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.libgcc  0000000e  000046dc  000046dc  00004770  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.__dummy_fini 00000002  0000477e  0000477e  00004812  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.__dummy_funcs_on_exit 00000002  00004780  00004780  00004814  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.__dummy_simulator_exit 00000002  00004782  00004782  00004816  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.exit    00000016  0000465a  0000465a  000046ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.__wrap_sprintf 00000026  00004482  00004482  00004516  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .progmemx.data 00000007  000006b5  000006b5  00000749  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 66 .text.__fmt_s 000000ca  00003098  00003098  0000312c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.__out   0000006a  00003e16  00003e16  00003eaa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.__pad   0000010e  00002b5e  00002b5e  00002bf2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.__fmt_state 000000a4  00003648  00003648  000036dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .progmemx.data 00000006  000006bc  000006bc  00000750  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 71 .text.__printf_core 00000832  000006c2  000006c2  00000756  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .progmemx.data.state_table 00000016  0000066c  0000066c  00000700  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 73 .text.fputc   00000092  00003a12  00003a12  00003aa6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text.__fmt_d 0000017e  00002366  00002366  000023fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.__fmt_o 000000d4  00002e22  00002e22  00002eb6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.__cvt_u 0000014a  000027a6  000027a6  0000283a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.__fmt_u 000000b0  0000339c  0000339c  00003430  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.__fmt_x 00000280  000020e6  000020e6  0000217a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.__pop_float 00000040  000041b4  000041b4  00004248  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.__pop_int 00000172  000024e4  000024e4  00002578  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text.__pop_ptr 000000d8  00002d4a  00002d4a  00002dde  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.sprintf 00000026  000044a8  000044a8  0000453c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .text.vsprintf 00000018  000045e4  000045e4  00004678  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 .text.atoi    0000008c  00003aa4  00003aa4  00003b38  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 .text.memset  00000012  00004670  00004670  00004704  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 .text.strcmp  00000044  0000412c  0000412c  000041c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 .text.strlen  00000024  000044f2  000044f2  00004586  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 .text.tolower 00000010  00004694  00004694  00004728  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 .text.toupper 00000012  00004682  00004682  00004716  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 .text._Exit   00000004  0000477a  0000477a  0000480e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 .text.__vsprintf 00000018  000045fc  000045fc  00004690  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 .text.__vsnprintf 000000a4  000036ec  000036ec  00003780  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 .text.vsnprintf 000000a4  00003790  00003790  00003824  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 .text.vfprintf 00000030  000043ac  000043ac  00004440  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 .text.__vfprintf 00000030  000043dc  000043dc  00004470  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 .progmemx.data 00000010  00000695  00000695  00000729  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 97 .text.__fmt_fp 000006ba  00000ef4  00000ef4  00000f88  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 98 .progmemx.data 00000010  000006a5  000006a5  00000739  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 99 .text.__fmt_a 0000065c  000015ae  000015ae  00001642  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 .text.strcpy  0000001c  00004576  00004576  0000460a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 .text.libgcc.div 00000028  0000440c  0000440c  000044a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 .text.libgcc.div 0000001c  00004592  00004592  00004626  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 .text.libgcc.div 000000a2  000038d6  000038d6  0000396a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 .text.libgcc  00000020  00004538  00004538  000045cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 .text.libgcc.prologue 00000038  0000426e  0000426e  00004302  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 .text.libgcc.prologue 00000036  00004312  00004312  000043a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 .text.libgcc  0000001c  000045ae  000045ae  00004642  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 .text.libgcc.builtins 0000003c  00004232  00004232  000042c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 .text.libgcc  00000018  00004614  00004614  000046a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 .text.libgcc.div 00000028  00004434  00004434  000044c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 .text         0000000e  000046ea  000046ea  0000477e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 .text         000000ce  00002fca  00002fca  0000305e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 .text         0000000a  0000473c  0000473c  000047d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 .text         00000008  00004760  00004760  000047f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 .text         000000de  00002c6c  00002c6c  00002d00  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 .text         0000000e  000046f8  000046f8  0000478c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 .text         0000005e  00003f42  00003f42  00003fd6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 .text         00000048  000040e4  000040e4  00004178  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 .text         0000000c  00004730  00004730  000047c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 .text         00000006  00004770  00004770  00004804  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 .text         0000000e  00004706  00004706  0000479a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 .text         0000000e  00004714  00004714  000047a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 .text         00000022  00004516  00004516  000045aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 .text         00000044  00004170  00004170  00004204  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 .text         0000000e  00004722  00004722  000047b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 .text         0000000a  00004746  00004746  000047da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 .text         00000008  00004768  00004768  000047fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 .text         000000d4  00002ef6  00002ef6  00002f8a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 .text.floorf  00000132  00002a2c  00002a2c  00002ac0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 .text.fmaf    0000013c  000028f0  000028f0  00002984  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 .text.libgcc  00000018  0000462c  0000462c  000046c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__ctors_end>
   4:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
   8:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
   c:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  10:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  14:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  18:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  1c:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  20:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  24:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  28:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  2c:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  30:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  34:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  38:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  3c:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  40:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  44:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  48:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  4c:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  50:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  54:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  58:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  5c:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  60:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  64:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  68:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  6c:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  70:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  74:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  78:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  7c:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  80:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  84:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  88:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  8c:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  90:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  94:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  98:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  9c:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  a0:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  a4:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  a8:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  ac:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  b0:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  b4:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  b8:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  bc:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  c0:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  c4:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  c8:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  cc:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  d0:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  d4:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  d8:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  dc:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>
  e0:	0c 94 bb 23 	jmp	0x4776	; 0x4776 <__bad_interrupt>

000000e4 <.dinit>:
  e4:	02 00       	.word	0x0002	; ????
  e6:	05 11       	cpse	r16, r5
  e8:	80 00       	.word	0x0080	; ????

000000ea <__trampolines_start>:
  ea:	0c 94 17 17 	jmp	0x2e2e	; 0x2e2e <__fmt_o+0xc>
  ee:	0c 94 67 03 	jmp	0x6ce	; 0x6ce <__printf_core+0xc>
  f2:	0c 94 80 07 	jmp	0xf00	; 0xf00 <__fmt_fp+0xc>
  f6:	0c 94 79 10 	jmp	0x20f2	; 0x20f2 <__fmt_x+0xc>
  fa:	0c 94 dd 0a 	jmp	0x15ba	; 0x15ba <__fmt_a+0xc>
  fe:	0c 94 f4 21 	jmp	0x43e8	; 0x43e8 <__vfprintf+0xc>
 102:	0c 94 7e 14 	jmp	0x28fc	; 0x28fc <fmaf+0xc>
 106:	0c 94 dc 21 	jmp	0x43b8	; 0x43b8 <vfprintf+0xc>
 10a:	0c 94 b9 11 	jmp	0x2372	; 0x2372 <__fmt_d+0xc>
 10e:	0c 94 47 22 	jmp	0x448e	; 0x448e <_sprintf_cdnopuxX+0xc>
 112:	0c 94 5a 22 	jmp	0x44b4	; 0x44b4 <sprintf+0xc>
 116:	0c 94 d9 13 	jmp	0x27b2	; 0x27b2 <__cvt_u+0xc>
 11a:	0c 94 d4 19 	jmp	0x33a8	; 0x33a8 <__fmt_u+0xc>

0000011e <__ctors_end>:
 11e:	11 24       	eor	r1, r1
 120:	1f be       	out	0x3f, r1	; 63
 122:	cf ef       	ldi	r28, 0xFF	; 255
 124:	d1 e2       	ldi	r29, 0x21	; 33
 126:	de bf       	out	0x3e, r29	; 62
 128:	cd bf       	out	0x3d, r28	; 61
 12a:	00 e0       	ldi	r16, 0x00	; 0
 12c:	0c bf       	out	0x3c, r16	; 60

0000012e <__do_copy_data>:
 12e:	e4 ee       	ldi	r30, 0xE4	; 228
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	40 e0       	ldi	r20, 0x00	; 0
 134:	19 c0       	rjmp	.+50     	; 0x168 <__do_clear_bss+0x8>
 136:	b7 91       	elpm	r27, Z+
 138:	a7 91       	elpm	r26, Z+
 13a:	37 91       	elpm	r19, Z+
 13c:	27 91       	elpm	r18, Z+
 13e:	07 91       	elpm	r16, Z+
 140:	07 fd       	sbrc	r16, 7
 142:	0e c0       	rjmp	.+28     	; 0x160 <__do_clear_bss>
 144:	97 91       	elpm	r25, Z+
 146:	87 91       	elpm	r24, Z+
 148:	ef 01       	movw	r28, r30
 14a:	f9 2f       	mov	r31, r25
 14c:	e8 2f       	mov	r30, r24
 14e:	0b bf       	out	0x3b, r16	; 59
 150:	07 90       	elpm	r0, Z+
 152:	0d 92       	st	X+, r0
 154:	a2 17       	cp	r26, r18
 156:	b3 07       	cpc	r27, r19
 158:	d9 f7       	brne	.-10     	; 0x150 <__do_copy_data+0x22>
 15a:	fe 01       	movw	r30, r28
 15c:	1b be       	out	0x3b, r1	; 59
 15e:	04 c0       	rjmp	.+8      	; 0x168 <__do_clear_bss+0x8>

00000160 <__do_clear_bss>:
 160:	1d 92       	st	X+, r1
 162:	a2 17       	cp	r26, r18
 164:	b3 07       	cpc	r27, r19
 166:	e1 f7       	brne	.-8      	; 0x160 <__do_clear_bss>
 168:	e9 3e       	cpi	r30, 0xE9	; 233
 16a:	f4 07       	cpc	r31, r20
 16c:	21 f7       	brne	.-56     	; 0x136 <__do_copy_data+0x8>
 16e:	0e 94 fa 20 	call	0x41f4	; 0x41f4 <main>
 172:	0c 94 2d 23 	jmp	0x465a	; 0x465a <exit>

00000176 <_exit>:
 176:	f8 94       	cli

00000178 <__stop_program>:
 178:	ff cf       	rjmp	.-2      	; 0x178 <__stop_program>

Disassembly of section .text:

00004776 <__bad_interrupt>:
    4776:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

000041f4 <main>:

#include "main.h" //has everything...

int main(void)
{
	LED_Init();
    41f4:	0e 94 22 23 	call	0x4644	; 0x4644 <LED_Init>
	VOLTAGE_Translator_Init();
    41f8:	0e 94 2e 22 	call	0x445c	; 0x445c <VOLTAGE_Translator_Init>
	USART_Init();
    41fc:	0e 94 53 21 	call	0x42a6	; 0x42a6 <USART_Init>
	SLAVE_CS_Deselect();
    4200:	0e 94 40 1f 	call	0x3e80	; 0x3e80 <SLAVE_CS_Deselect>
	SPI_MASTER_Init();
    4204:	0e 94 67 22 	call	0x44ce	; 0x44ce <SPI_MASTER_Init>
	LED_Green_Toggle();
    4208:	0e 94 67 23 	call	0x46ce	; 0x46ce <LED_Green_Toggle>
	//PORTA &= ~(1 << PA3); //~CS pin set low for selecting slave device
	
    while(1)
    {		
		CLEAR_ARR();
    420c:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
		USART_Data("->Arrays Cleared \n");
    4210:	62 e8       	ldi	r22, 0x82	; 130
    4212:	76 e0       	ldi	r23, 0x06	; 6
    4214:	80 e0       	ldi	r24, 0x00	; 0
    4216:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		
		UserInput(true); //true therefore command
    421a:	81 e0       	ldi	r24, 0x01	; 1
    421c:	0e 94 11 19 	call	0x3222	; 0x3222 <UserInput>
		
		LED_Red_Toggle();
    4220:	0e 94 60 23 	call	0x46c0	; 0x46c0 <LED_Red_Toggle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    4224:	87 ea       	ldi	r24, 0xA7	; 167
    4226:	91 e6       	ldi	r25, 0x61	; 97
    4228:	01 97       	sbiw	r24, 0x01	; 1
    422a:	f1 f7       	brne	.-4      	; 0x4228 <main+0x34>
    422c:	00 c0       	rjmp	.+0      	; 0x422e <main+0x3a>
    422e:	00 00       	nop
    4230:	ed cf       	rjmp	.-38     	; 0x420c <main+0x18>

Disassembly of section .text.USART_Init:

000042a6 <USART_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    42a6:	87 e6       	ldi	r24, 0x67	; 103
    42a8:	90 e0       	ldi	r25, 0x00	; 0
    42aa:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
    42ae:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
    42b2:	8d b1       	in	r24, 0x0d	; 13
    42b4:	82 60       	ori	r24, 0x02	; 2
    42b6:	8d b9       	out	0x0d, r24	; 13
    42b8:	e1 ec       	ldi	r30, 0xC1	; 193
    42ba:	f0 e0       	ldi	r31, 0x00	; 0
    42bc:	80 81       	ld	r24, Z
    42be:	88 60       	ori	r24, 0x08	; 8
    42c0:	80 83       	st	Z, r24
    42c2:	8d b1       	in	r24, 0x0d	; 13
    42c4:	8e 7f       	andi	r24, 0xFE	; 254
    42c6:	8d b9       	out	0x0d, r24	; 13
    42c8:	80 81       	ld	r24, Z
    42ca:	80 61       	ori	r24, 0x10	; 16
    42cc:	80 83       	st	Z, r24
    42ce:	81 b1       	in	r24, 0x01	; 1
    42d0:	84 60       	ori	r24, 0x04	; 4
    42d2:	81 b9       	out	0x01, r24	; 1
    42d4:	82 b1       	in	r24, 0x02	; 2
    42d6:	84 60       	ori	r24, 0x04	; 4
    42d8:	82 b9       	out	0x02, r24	; 2
    42da:	08 95       	ret

Disassembly of section .text.USART_TX_Data:

000046a4 <USART_TX_Data>:
    46a4:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    46a8:	95 ff       	sbrs	r25, 5
    46aa:	fc cf       	rjmp	.-8      	; 0x46a4 <USART_TX_Data>
    46ac:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    46b0:	08 95       	ret

Disassembly of section .text.USART_Data:

0000404c <USART_Data>:
    404c:	cf 92       	push	r12
    404e:	df 92       	push	r13
    4050:	ef 92       	push	r14
    4052:	cf 93       	push	r28
    4054:	df 93       	push	r29
    4056:	6b 01       	movw	r12, r22
    4058:	e8 2e       	mov	r14, r24
    405a:	c0 e0       	ldi	r28, 0x00	; 0
    405c:	d0 e0       	ldi	r29, 0x00	; 0
    405e:	0f c0       	rjmp	.+30     	; 0x407e <USART_Data+0x32>
    4060:	ae 2d       	mov	r26, r14
    4062:	c6 01       	movw	r24, r12
    4064:	8c 0f       	add	r24, r28
    4066:	9d 1f       	adc	r25, r29
    4068:	a1 1d       	adc	r26, r1
    406a:	d7 fd       	sbrc	r29, 7
    406c:	aa 95       	dec	r26
    406e:	fc 01       	movw	r30, r24
    4070:	5a 2f       	mov	r21, r26
    4072:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    4076:	86 2f       	mov	r24, r22
    4078:	0e 94 52 23 	call	0x46a4	; 0x46a4 <USART_TX_Data>
    407c:	21 96       	adiw	r28, 0x01	; 1
    407e:	8e 2d       	mov	r24, r14
    4080:	b6 01       	movw	r22, r12
    4082:	0e 94 79 22 	call	0x44f2	; 0x44f2 <strlen>
    4086:	c8 17       	cp	r28, r24
    4088:	d9 07       	cpc	r29, r25
    408a:	50 f3       	brcs	.-44     	; 0x4060 <USART_Data+0x14>
    408c:	df 91       	pop	r29
    408e:	cf 91       	pop	r28
    4090:	ef 90       	pop	r14
    4092:	df 90       	pop	r13
    4094:	cf 90       	pop	r12
    4096:	08 95       	ret

Disassembly of section .text.USART_RX_Data:

000046b2 <USART_RX_Data>:
    46b2:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    46b6:	88 23       	and	r24, r24
    46b8:	e4 f7       	brge	.-8      	; 0x46b2 <USART_RX_Data>
    46ba:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    46be:	08 95       	ret

Disassembly of section .text.LED_Init:

00004644 <LED_Init>:
    4644:	e1 e0       	ldi	r30, 0x01	; 1
    4646:	f1 e0       	ldi	r31, 0x01	; 1
    4648:	80 81       	ld	r24, Z
    464a:	80 66       	ori	r24, 0x60	; 96
    464c:	80 83       	st	Z, r24
    464e:	e2 e0       	ldi	r30, 0x02	; 2
    4650:	f1 e0       	ldi	r31, 0x01	; 1
    4652:	80 81       	ld	r24, Z
    4654:	80 66       	ori	r24, 0x60	; 96
    4656:	80 83       	st	Z, r24
    4658:	08 95       	ret

Disassembly of section .text.LED_Red_Toggle:

000046c0 <LED_Red_Toggle>:
}

void LED_Red_Toggle()
{
	PORTH ^= (1 << PH6); //toggle RED_LED (PH6)
    46c0:	e2 e0       	ldi	r30, 0x02	; 2
    46c2:	f1 e0       	ldi	r31, 0x01	; 1
    46c4:	90 81       	ld	r25, Z
    46c6:	80 e4       	ldi	r24, 0x40	; 64
    46c8:	89 27       	eor	r24, r25
    46ca:	80 83       	st	Z, r24
    46cc:	08 95       	ret

Disassembly of section .text.LED_Green_Toggle:

000046ce <LED_Green_Toggle>:
}

void LED_Green_Toggle()
{
	PORTH ^= (1 << PH5); //toggle GREEN_LED (PH5)
    46ce:	e2 e0       	ldi	r30, 0x02	; 2
    46d0:	f1 e0       	ldi	r31, 0x01	; 1
    46d2:	90 81       	ld	r25, Z
    46d4:	80 e2       	ldi	r24, 0x20	; 32
    46d6:	89 27       	eor	r24, r25
    46d8:	80 83       	st	Z, r24
    46da:	08 95       	ret

Disassembly of section .text.VOLTAGE_Translator_Init:

0000445c <VOLTAGE_Translator_Init>:
	PORTH |= (1 << PH5) | (1 << PH6); //initializing GREEN_LED off (PH5); initializing RED_LED off (PH6)
}

void LED_Toggle()
{
	PORTH ^= (1 << PH5) | (1 << PH6); //toggle GREEN_LED (PH5); toggle RED_LED (PH6)
    445c:	87 b1       	in	r24, 0x07	; 7
    445e:	80 64       	ori	r24, 0x40	; 64
    4460:	87 b9       	out	0x07, r24	; 7
    4462:	88 b1       	in	r24, 0x08	; 8
    4464:	80 64       	ori	r24, 0x40	; 64
    4466:	88 b9       	out	0x08, r24	; 8
    4468:	83 b3       	in	r24, 0x13	; 19
    446a:	81 60       	ori	r24, 0x01	; 1
    446c:	83 bb       	out	0x13, r24	; 19
    446e:	84 b3       	in	r24, 0x14	; 20
    4470:	81 60       	ori	r24, 0x01	; 1
    4472:	84 bb       	out	0x14, r24	; 20
    4474:	83 b3       	in	r24, 0x13	; 19
    4476:	82 60       	ori	r24, 0x02	; 2
    4478:	83 bb       	out	0x13, r24	; 19
    447a:	84 b3       	in	r24, 0x14	; 20
    447c:	82 60       	ori	r24, 0x02	; 2
    447e:	84 bb       	out	0x14, r24	; 20
    4480:	08 95       	ret

Disassembly of section .text.SLAVE_CS_Deselect:

00003e80 <SLAVE_CS_Deselect>:
    3e80:	81 b1       	in	r24, 0x01	; 1
    3e82:	88 60       	ori	r24, 0x08	; 8
    3e84:	81 b9       	out	0x01, r24	; 1
    3e86:	82 b1       	in	r24, 0x02	; 2
    3e88:	88 60       	ori	r24, 0x08	; 8
    3e8a:	82 b9       	out	0x02, r24	; 2
    3e8c:	81 b1       	in	r24, 0x01	; 1
    3e8e:	80 61       	ori	r24, 0x10	; 16
    3e90:	81 b9       	out	0x01, r24	; 1
    3e92:	82 b1       	in	r24, 0x02	; 2
    3e94:	80 61       	ori	r24, 0x10	; 16
    3e96:	82 b9       	out	0x02, r24	; 2
    3e98:	81 b1       	in	r24, 0x01	; 1
    3e9a:	80 62       	ori	r24, 0x20	; 32
    3e9c:	81 b9       	out	0x01, r24	; 1
    3e9e:	82 b1       	in	r24, 0x02	; 2
    3ea0:	80 62       	ori	r24, 0x20	; 32
    3ea2:	82 b9       	out	0x02, r24	; 2
    3ea4:	81 b1       	in	r24, 0x01	; 1
    3ea6:	80 64       	ori	r24, 0x40	; 64
    3ea8:	81 b9       	out	0x01, r24	; 1
    3eaa:	82 b1       	in	r24, 0x02	; 2
    3eac:	80 64       	ori	r24, 0x40	; 64
    3eae:	82 b9       	out	0x02, r24	; 2
    3eb0:	81 b1       	in	r24, 0x01	; 1
    3eb2:	80 68       	ori	r24, 0x80	; 128
    3eb4:	81 b9       	out	0x01, r24	; 1
    3eb6:	82 b1       	in	r24, 0x02	; 2
    3eb8:	80 68       	ori	r24, 0x80	; 128
    3eba:	82 b9       	out	0x02, r24	; 2
    3ebc:	81 b1       	in	r24, 0x01	; 1
    3ebe:	82 60       	ori	r24, 0x02	; 2
    3ec0:	81 b9       	out	0x01, r24	; 1
    3ec2:	82 b1       	in	r24, 0x02	; 2
    3ec4:	82 60       	ori	r24, 0x02	; 2
    3ec6:	82 b9       	out	0x02, r24	; 2
    3ec8:	81 b1       	in	r24, 0x01	; 1
    3eca:	84 60       	ori	r24, 0x04	; 4
    3ecc:	81 b9       	out	0x01, r24	; 1
    3ece:	82 b1       	in	r24, 0x02	; 2
    3ed0:	84 60       	ori	r24, 0x04	; 4
    3ed2:	82 b9       	out	0x02, r24	; 2
    3ed4:	81 b1       	in	r24, 0x01	; 1
    3ed6:	88 60       	ori	r24, 0x08	; 8
    3ed8:	81 b9       	out	0x01, r24	; 1
    3eda:	82 b1       	in	r24, 0x02	; 2
    3edc:	88 60       	ori	r24, 0x08	; 8
    3ede:	82 b9       	out	0x02, r24	; 2
    3ee0:	08 95       	ret

Disassembly of section .text.FLASH_NAND_CS_ENABLE:

00004750 <FLASH_NAND_CS_ENABLE>:
	PORTA |= (1 << PF3); //setting ~CS pin (PF3) high to de-select the slave device (we are not working on it yet)
}

void FLASH_NAND_CS_ENABLE() //enable the Chip Select of the FLASH NAND
{
	PORTA &= ~(1 << PA3); //~CS pin set low for selecting slave device
    4750:	82 b1       	in	r24, 0x02	; 2
    4752:	87 7f       	andi	r24, 0xF7	; 247
    4754:	82 b9       	out	0x02, r24	; 2
    4756:	08 95       	ret

Disassembly of section .text.FLASH_NAND_CS_DISABLE:

00004758 <FLASH_NAND_CS_DISABLE>:
}

void FLASH_NAND_CS_DISABLE() //disable the Chip Select of the FLASH NAND
{
	PORTA |= (1 << PA3); //~CS pin set high for de-selecting slave device; to end the command sequence
    4758:	82 b1       	in	r24, 0x02	; 2
    475a:	88 60       	ori	r24, 0x08	; 8
    475c:	82 b9       	out	0x02, r24	; 2
    475e:	08 95       	ret

Disassembly of section .text.Print_To_User:

0000344c <Print_To_User>:
	if (command)
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
}

void Print_To_User(int num_elements, int offset, const char *msg, const uint8_t *arr_start, uint8_t *arr_dest) //# of elements to print along with message, and to which array
{
    344c:	3f 92       	push	r3
    344e:	4f 92       	push	r4
    3450:	5f 92       	push	r5
    3452:	6f 92       	push	r6
    3454:	7f 92       	push	r7
    3456:	8f 92       	push	r8
    3458:	9f 92       	push	r9
    345a:	af 92       	push	r10
    345c:	bf 92       	push	r11
    345e:	cf 92       	push	r12
    3460:	df 92       	push	r13
    3462:	ef 92       	push	r14
    3464:	ff 92       	push	r15
    3466:	0f 93       	push	r16
    3468:	1f 93       	push	r17
    346a:	cf 93       	push	r28
    346c:	df 93       	push	r29
    346e:	5c 01       	movw	r10, r24
    3470:	4b 01       	movw	r8, r22
    3472:	72 2e       	mov	r7, r18
    3474:	13 2f       	mov	r17, r19
    3476:	34 2e       	mov	r3, r20
    3478:	27 01       	movw	r4, r14
    347a:	60 2e       	mov	r6, r16
	for (int i = 0; i < num_elements; i++)
    347c:	c0 e0       	ldi	r28, 0x00	; 0
    347e:	d0 e0       	ldi	r29, 0x00	; 0
    3480:	26 c0       	rjmp	.+76     	; 0x34ce <Print_To_User+0x82>
	{
		sprintf(arr_dest, msg, arr_start[i + offset]);
    3482:	ce 01       	movw	r24, r28
    3484:	88 0d       	add	r24, r8
    3486:	99 1d       	adc	r25, r9
    3488:	46 2d       	mov	r20, r6
    348a:	92 01       	movw	r18, r4
    348c:	28 0f       	add	r18, r24
    348e:	39 1f       	adc	r19, r25
    3490:	41 1d       	adc	r20, r1
    3492:	97 fd       	sbrc	r25, 7
    3494:	4a 95       	dec	r20
    3496:	a4 2f       	mov	r26, r20
    3498:	c9 01       	movw	r24, r18
    349a:	f9 01       	movw	r30, r18
    349c:	5a 2f       	mov	r21, r26
    349e:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    34a2:	1f 92       	push	r1
    34a4:	6f 93       	push	r22
    34a6:	3f 92       	push	r3
    34a8:	1f 93       	push	r17
    34aa:	7f 92       	push	r7
    34ac:	df 92       	push	r13
    34ae:	cf 92       	push	r12
    34b0:	0e 94 54 22 	call	0x44a8	; 0x44a8 <sprintf>
		USART_Data(arr_dest);
    34b4:	b6 01       	movw	r22, r12
    34b6:	80 e8       	ldi	r24, 0x80	; 128
    34b8:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
}

void Print_To_User(int num_elements, int offset, const char *msg, const uint8_t *arr_start, uint8_t *arr_dest) //# of elements to print along with message, and to which array
{
	for (int i = 0; i < num_elements; i++)
    34bc:	21 96       	adiw	r28, 0x01	; 1
    34be:	8d b7       	in	r24, 0x3d	; 61
    34c0:	9e b7       	in	r25, 0x3e	; 62
    34c2:	07 96       	adiw	r24, 0x07	; 7
    34c4:	0f b6       	in	r0, 0x3f	; 63
    34c6:	f8 94       	cli
    34c8:	9e bf       	out	0x3e, r25	; 62
    34ca:	0f be       	out	0x3f, r0	; 63
    34cc:	8d bf       	out	0x3d, r24	; 61
    34ce:	ca 15       	cp	r28, r10
    34d0:	db 05       	cpc	r29, r11
    34d2:	bc f2       	brlt	.-82     	; 0x3482 <Print_To_User+0x36>
	{
		sprintf(arr_dest, msg, arr_start[i + offset]);
		USART_Data(arr_dest);
	}
}
    34d4:	df 91       	pop	r29
    34d6:	cf 91       	pop	r28
    34d8:	1f 91       	pop	r17
    34da:	0f 91       	pop	r16
    34dc:	ff 90       	pop	r15
    34de:	ef 90       	pop	r14
    34e0:	df 90       	pop	r13
    34e2:	cf 90       	pop	r12
    34e4:	bf 90       	pop	r11
    34e6:	af 90       	pop	r10
    34e8:	9f 90       	pop	r9
    34ea:	8f 90       	pop	r8
    34ec:	7f 90       	pop	r7
    34ee:	6f 90       	pop	r6
    34f0:	5f 90       	pop	r5
    34f2:	4f 90       	pop	r4
    34f4:	3f 90       	pop	r3
    34f6:	08 95       	ret

Disassembly of section .text.HEX_Verification:

000032e0 <HEX_Verification>:
		}
	}
}

bool HEX_Verification() //verifies uint8_t (ASCII) to Hex validity and allocates in appropriated location
{
    32e0:	cf 92       	push	r12
    32e2:	df 92       	push	r13
    32e4:	ef 92       	push	r14
    32e6:	ff 92       	push	r15
    32e8:	0f 93       	push	r16
	//parse the data into usable hex values
	for (int i = 0; i <= FLASH_NAND_ADDRESS_MAX; i++)
    32ea:	80 e0       	ldi	r24, 0x00	; 0
    32ec:	90 e0       	ldi	r25, 0x00	; 0
    32ee:	45 c0       	rjmp	.+138    	; 0x337a <HEX_Verification+0x9a>
	{
		if (CommandBuffer[i] >= '0' && CommandBuffer[i] <= '9')
    32f0:	fc 01       	movw	r30, r24
    32f2:	e0 50       	subi	r30, 0x00	; 0
    32f4:	fe 4f       	sbci	r31, 0xFE	; 254
    32f6:	20 81       	ld	r18, Z
    32f8:	30 ed       	ldi	r19, 0xD0	; 208
    32fa:	32 0f       	add	r19, r18
    32fc:	3a 30       	cpi	r19, 0x0A	; 10
    32fe:	28 f4       	brcc	.+10     	; 0x330a <HEX_Verification+0x2a>
		{
			CommandBuffer[i] = CommandBuffer[i] - '0';
    3300:	fc 01       	movw	r30, r24
    3302:	e0 50       	subi	r30, 0x00	; 0
    3304:	fe 4f       	sbci	r31, 0xFE	; 254
    3306:	30 83       	st	Z, r19
    3308:	37 c0       	rjmp	.+110    	; 0x3378 <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] >= 'A' && CommandBuffer[i] <= 'F')
    330a:	3f eb       	ldi	r19, 0xBF	; 191
    330c:	32 0f       	add	r19, r18
    330e:	36 30       	cpi	r19, 0x06	; 6
    3310:	30 f4       	brcc	.+12     	; 0x331e <HEX_Verification+0x3e>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'A' + 10;
    3312:	fc 01       	movw	r30, r24
    3314:	e0 50       	subi	r30, 0x00	; 0
    3316:	fe 4f       	sbci	r31, 0xFE	; 254
    3318:	27 53       	subi	r18, 0x37	; 55
    331a:	20 83       	st	Z, r18
    331c:	2d c0       	rjmp	.+90     	; 0x3378 <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] >= 'a' && CommandBuffer[i] <= 'f')
    331e:	3f e9       	ldi	r19, 0x9F	; 159
    3320:	32 0f       	add	r19, r18
    3322:	36 30       	cpi	r19, 0x06	; 6
    3324:	30 f4       	brcc	.+12     	; 0x3332 <HEX_Verification+0x52>
		{
			CommandBuffer[i] = CommandBuffer[i] - 'a' + 10;
    3326:	fc 01       	movw	r30, r24
    3328:	e0 50       	subi	r30, 0x00	; 0
    332a:	fe 4f       	sbci	r31, 0xFE	; 254
    332c:	27 55       	subi	r18, 0x57	; 87
    332e:	20 83       	st	Z, r18
    3330:	23 c0       	rjmp	.+70     	; 0x3378 <HEX_Verification+0x98>
		}
		else if (CommandBuffer[i] == '\r' || CommandBuffer[i] == '\n' || CommandBuffer[i] == '\0')
    3332:	2d 30       	cpi	r18, 0x0D	; 13
    3334:	41 f1       	breq	.+80     	; 0x3386 <HEX_Verification+0xa6>
    3336:	2a 30       	cpi	r18, 0x0A	; 10
    3338:	41 f1       	breq	.+80     	; 0x338a <HEX_Verification+0xaa>
    333a:	22 23       	and	r18, r18
    333c:	41 f1       	breq	.+80     	; 0x338e <HEX_Verification+0xae>
		{
			break;
		}
		else
		{
			USART_Data("Wrong Input \nMake sure input is HEX valid [0 - F] \n");
    333e:	6a e7       	ldi	r22, 0x7A	; 122
    3340:	71 e0       	ldi	r23, 0x01	; 1
    3342:	80 e0       	ldi	r24, 0x00	; 0
    3344:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
			Print_To_User(1, 0, "Here is what was inputted: 0x%02X \n", CommandBuffer, status_feature);
    3348:	80 e0       	ldi	r24, 0x00	; 0
    334a:	92 e0       	ldi	r25, 0x02	; 2
    334c:	7c 01       	movw	r14, r24
    334e:	20 e8       	ldi	r18, 0x80	; 128
    3350:	02 2f       	mov	r16, r18
    3352:	0f 2e       	mov	r0, r31
    3354:	f0 e0       	ldi	r31, 0x00	; 0
    3356:	cf 2e       	mov	r12, r31
    3358:	f3 e0       	ldi	r31, 0x03	; 3
    335a:	df 2e       	mov	r13, r31
    335c:	f0 2d       	mov	r31, r0
    335e:	2e ea       	ldi	r18, 0xAE	; 174
    3360:	31 e0       	ldi	r19, 0x01	; 1
    3362:	40 e0       	ldi	r20, 0x00	; 0
    3364:	60 e0       	ldi	r22, 0x00	; 0
    3366:	70 e0       	ldi	r23, 0x00	; 0
    3368:	81 e0       	ldi	r24, 0x01	; 1
    336a:	90 e0       	ldi	r25, 0x00	; 0
    336c:	0e 94 26 1a 	call	0x344c	; 0x344c <Print_To_User>
			CLEAR_ARR();
    3370:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
			return false; //return false, indicating failed test
    3374:	80 e0       	ldi	r24, 0x00	; 0
    3376:	0c c0       	rjmp	.+24     	; 0x3390 <HEX_Verification+0xb0>
}

bool HEX_Verification() //verifies uint8_t (ASCII) to Hex validity and allocates in appropriated location
{
	//parse the data into usable hex values
	for (int i = 0; i <= FLASH_NAND_ADDRESS_MAX; i++)
    3378:	01 96       	adiw	r24, 0x01	; 1
    337a:	86 30       	cpi	r24, 0x06	; 6
    337c:	91 05       	cpc	r25, r1
    337e:	0c f4       	brge	.+2      	; 0x3382 <HEX_Verification+0xa2>
    3380:	b7 cf       	rjmp	.-146    	; 0x32f0 <HEX_Verification+0x10>
			Print_To_User(1, 0, "Here is what was inputted: 0x%02X \n", CommandBuffer, status_feature);
			CLEAR_ARR();
			return false; //return false, indicating failed test
		}
	}
	return true; //return true, indicating passed test
    3382:	81 e0       	ldi	r24, 0x01	; 1
    3384:	05 c0       	rjmp	.+10     	; 0x3390 <HEX_Verification+0xb0>
    3386:	81 e0       	ldi	r24, 0x01	; 1
    3388:	03 c0       	rjmp	.+6      	; 0x3390 <HEX_Verification+0xb0>
    338a:	81 e0       	ldi	r24, 0x01	; 1
    338c:	01 c0       	rjmp	.+2      	; 0x3390 <HEX_Verification+0xb0>
    338e:	81 e0       	ldi	r24, 0x01	; 1
	//Print_To_User(6, 0, "Parsed nibble: 0x%02X\n", CommandBuffer, status_feature); //troubleshooting, verifies if ASCII is converted to hex values
}
    3390:	0f 91       	pop	r16
    3392:	ff 90       	pop	r15
    3394:	ef 90       	pop	r14
    3396:	df 90       	pop	r13
    3398:	cf 90       	pop	r12
    339a:	08 95       	ret

Disassembly of section .text.ExecuteCommand:

00001c0a <ExecuteCommand>:
		Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "0x%02X \n", Byte_Address, status_feature);	
	}
}

void ExecuteCommand(const uint8_t *str) //Execute Command Line function
{
    1c0a:	6f 92       	push	r6
    1c0c:	7f 92       	push	r7
    1c0e:	8f 92       	push	r8
    1c10:	cf 92       	push	r12
    1c12:	df 92       	push	r13
    1c14:	ef 92       	push	r14
    1c16:	ff 92       	push	r15
    1c18:	0f 93       	push	r16
    1c1a:	1f 93       	push	r17
    1c1c:	cf 93       	push	r28
    1c1e:	df 93       	push	r29
    1c20:	6b 01       	movw	r12, r22
    1c22:	e8 2e       	mov	r14, r24
	if (strcmp(str, "Flash ID") == 0) //Flash ID Command
    1c24:	22 ed       	ldi	r18, 0xD2	; 210
    1c26:	31 e0       	ldi	r19, 0x01	; 1
    1c28:	40 e0       	ldi	r20, 0x00	; 0
    1c2a:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1c2e:	89 2b       	or	r24, r25
    1c30:	29 f4       	brne	.+10     	; 0x1c3c <ExecuteCommand+0x32>
	{
		CLEAR_ARR();
    1c32:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
		FLASH_ID(); //reads Device ID
    1c36:	0e 94 98 1d 	call	0x3b30	; 0x3b30 <FLASH_ID>
    1c3a:	49 c2       	rjmp	.+1170   	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
	}
	
	else if (strcmp(str, "NAND Addresses") == 0) //Tells user what is Column and Block/Page Addresses
    1c3c:	2b ed       	ldi	r18, 0xDB	; 219
    1c3e:	31 e0       	ldi	r19, 0x01	; 1
    1c40:	40 e0       	ldi	r20, 0x00	; 0
    1c42:	8e 2d       	mov	r24, r14
    1c44:	b6 01       	movw	r22, r12
    1c46:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1c4a:	89 2b       	or	r24, r25
    1c4c:	c9 f5       	brne	.+114    	; 0x1cc0 <ExecuteCommand+0xb6>
	{
		CLEAR_ARR();
    1c4e:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
		
		USART_Data("1) Read \n");
    1c52:	6a ee       	ldi	r22, 0xEA	; 234
    1c54:	71 e0       	ldi	r23, 0x01	; 1
    1c56:	80 e0       	ldi	r24, 0x00	; 0
    1c58:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		USART_Data("2) Write \n");
    1c5c:	64 ef       	ldi	r22, 0xF4	; 244
    1c5e:	71 e0       	ldi	r23, 0x01	; 1
    1c60:	80 e0       	ldi	r24, 0x00	; 0
    1c62:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		
		UserInput(false);
    1c66:	80 e0       	ldi	r24, 0x00	; 0
    1c68:	0e 94 11 19 	call	0x3222	; 0x3222 <UserInput>
		
		if (strcmp(CommandBuffer, "Read") == 0)
    1c6c:	80 e0       	ldi	r24, 0x00	; 0
    1c6e:	92 e0       	ldi	r25, 0x02	; 2
    1c70:	6c 01       	movw	r12, r24
    1c72:	20 e8       	ldi	r18, 0x80	; 128
    1c74:	e2 2e       	mov	r14, r18
    1c76:	2f ef       	ldi	r18, 0xFF	; 255
    1c78:	31 e0       	ldi	r19, 0x01	; 1
    1c7a:	40 e0       	ldi	r20, 0x00	; 0
    1c7c:	8e 2d       	mov	r24, r14
    1c7e:	b6 01       	movw	r22, r12
    1c80:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1c84:	89 2b       	or	r24, r25
    1c86:	49 f4       	brne	.+18     	; 0x1c9a <ExecuteCommand+0x90>
		{
			NAND_Address_Checker(false); //read current NAND addresses
    1c88:	80 e0       	ldi	r24, 0x00	; 0
    1c8a:	0e 94 bc 1c 	call	0x3978	; 0x3978 <NAND_Address_Checker>
			ExecuteCommand("NAND Addresses");
    1c8e:	6b ed       	ldi	r22, 0xDB	; 219
    1c90:	71 e0       	ldi	r23, 0x01	; 1
    1c92:	80 e0       	ldi	r24, 0x00	; 0
    1c94:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
    1c98:	1a c2       	rjmp	.+1076   	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
		}
		else if (strcmp(CommandBuffer, "Write") == 0)
    1c9a:	24 e0       	ldi	r18, 0x04	; 4
    1c9c:	32 e0       	ldi	r19, 0x02	; 2
    1c9e:	40 e0       	ldi	r20, 0x00	; 0
    1ca0:	8e 2d       	mov	r24, r14
    1ca2:	b6 01       	movw	r22, r12
    1ca4:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1ca8:	89 2b       	or	r24, r25
    1caa:	09 f0       	breq	.+2      	; 0x1cae <ExecuteCommand+0xa4>
    1cac:	10 c2       	rjmp	.+1056   	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
		{
			NAND_Address_Checker(true); //write new NAND addresses
    1cae:	81 e0       	ldi	r24, 0x01	; 1
    1cb0:	0e 94 bc 1c 	call	0x3978	; 0x3978 <NAND_Address_Checker>
			ExecuteCommand("NAND Addresses");
    1cb4:	6b ed       	ldi	r22, 0xDB	; 219
    1cb6:	71 e0       	ldi	r23, 0x01	; 1
    1cb8:	80 e0       	ldi	r24, 0x00	; 0
    1cba:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
    1cbe:	07 c2       	rjmp	.+1038   	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
		}
	}
	
	else if (strcmp(str, "Parameter Page") == 0) //Basic Read Test Command
    1cc0:	2a e0       	ldi	r18, 0x0A	; 10
    1cc2:	32 e0       	ldi	r19, 0x02	; 2
    1cc4:	40 e0       	ldi	r20, 0x00	; 0
    1cc6:	8e 2d       	mov	r24, r14
    1cc8:	b6 01       	movw	r22, r12
    1cca:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1cce:	89 2b       	or	r24, r25
    1cd0:	99 f5       	brne	.+102    	; 0x1d38 <ExecuteCommand+0x12e>
	{
		s = 1; //sets main array address to the correct place
    1cd2:	81 e0       	ldi	r24, 0x01	; 1
    1cd4:	90 e0       	ldi	r25, 0x00	; 0
    1cd6:	90 93 02 05 	sts	0x0502, r25	; 0x800502 <s+0x1>
    1cda:	80 93 01 05 	sts	0x0501, r24	; 0x800501 <s>
		CLEAR_ARR();
    1cde:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
		FLASH_Para_Pg();
    1ce2:	0e 94 fe 1f 	call	0x3ffc	; 0x3ffc <FLASH_Para_Pg>
		
		//reading data from Data array
		//Print_To_User(PARAMETER_PAGE_SIZE, 0, "%i->Data Received: 0x%02X \n", data, status_feature);
		
		for (int i = 0; i < sizeof(data); i++)	//PARAMETER_PAGE_SIZE; i++) //address is incremented automatically after each byte is shifted out
    1ce6:	c0 e0       	ldi	r28, 0x00	; 0
    1ce8:	d0 e0       	ldi	r29, 0x00	; 0
    1cea:	21 c0       	rjmp	.+66     	; 0x1d2e <ExecuteCommand+0x124>
		{
			sprintf(status_feature, "%i->Data Received: 0x%02X \n", i, data[i]); //hex data to string
    1cec:	fe 01       	movw	r30, r28
    1cee:	ef 5f       	subi	r30, 0xFF	; 255
    1cf0:	fb 4f       	sbci	r31, 0xFB	; 251
    1cf2:	80 81       	ld	r24, Z
    1cf4:	1f 92       	push	r1
    1cf6:	8f 93       	push	r24
    1cf8:	df 93       	push	r29
    1cfa:	cf 93       	push	r28
    1cfc:	89 e1       	ldi	r24, 0x19	; 25
    1cfe:	92 e0       	ldi	r25, 0x02	; 2
    1d00:	a0 e0       	ldi	r26, 0x00	; 0
    1d02:	af 93       	push	r26
    1d04:	9f 93       	push	r25
    1d06:	8f 93       	push	r24
    1d08:	00 e0       	ldi	r16, 0x00	; 0
    1d0a:	13 e0       	ldi	r17, 0x03	; 3
    1d0c:	1f 93       	push	r17
    1d0e:	0f 93       	push	r16
    1d10:	0e 94 41 22 	call	0x4482	; 0x4482 <_sprintf_cdnopuxX>
			USART_Data(status_feature);
    1d14:	b8 01       	movw	r22, r16
    1d16:	80 e8       	ldi	r24, 0x80	; 128
    1d18:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		FLASH_Para_Pg();
		
		//reading data from Data array
		//Print_To_User(PARAMETER_PAGE_SIZE, 0, "%i->Data Received: 0x%02X \n", data, status_feature);
		
		for (int i = 0; i < sizeof(data); i++)	//PARAMETER_PAGE_SIZE; i++) //address is incremented automatically after each byte is shifted out
    1d1c:	21 96       	adiw	r28, 0x01	; 1
    1d1e:	8d b7       	in	r24, 0x3d	; 61
    1d20:	9e b7       	in	r25, 0x3e	; 62
    1d22:	09 96       	adiw	r24, 0x09	; 9
    1d24:	0f b6       	in	r0, 0x3f	; 63
    1d26:	f8 94       	cli
    1d28:	9e bf       	out	0x3e, r25	; 62
    1d2a:	0f be       	out	0x3f, r0	; 63
    1d2c:	8d bf       	out	0x3d, r24	; 61
    1d2e:	cf 3f       	cpi	r28, 0xFF	; 255
    1d30:	d1 05       	cpc	r29, r1
    1d32:	e1 f2       	breq	.-72     	; 0x1cec <ExecuteCommand+0xe2>
    1d34:	d8 f2       	brcs	.-74     	; 0x1cec <ExecuteCommand+0xe2>
    1d36:	cb c1       	rjmp	.+918    	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
			sprintf(status_feature, "%i->Data Received: 0x%02X \n", i, data[i]); //hex data to string
			USART_Data(status_feature);
		}	
	}
	
	else if (strcmp(str, "Feature Registers") == 0) //leads user to the Feature registers of the device
    1d38:	25 e3       	ldi	r18, 0x35	; 53
    1d3a:	32 e0       	ldi	r19, 0x02	; 2
    1d3c:	40 e0       	ldi	r20, 0x00	; 0
    1d3e:	8e 2d       	mov	r24, r14
    1d40:	b6 01       	movw	r22, r12
    1d42:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1d46:	89 2b       	or	r24, r25
    1d48:	09 f0       	breq	.+2      	; 0x1d4c <ExecuteCommand+0x142>
    1d4a:	c9 c0       	rjmp	.+402    	; 0x1ede <ExecuteCommand+0x2d4>
	{
		CLEAR_ARR();
    1d4c:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
		
		USART_Data("1) Block Lock \n");
    1d50:	67 e4       	ldi	r22, 0x47	; 71
    1d52:	72 e0       	ldi	r23, 0x02	; 2
    1d54:	80 e0       	ldi	r24, 0x00	; 0
    1d56:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		USART_Data("2) Configuration \n");
    1d5a:	67 e5       	ldi	r22, 0x57	; 87
    1d5c:	72 e0       	ldi	r23, 0x02	; 2
    1d5e:	80 e0       	ldi	r24, 0x00	; 0
    1d60:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		USART_Data("3) Status \n");
    1d64:	6a e6       	ldi	r22, 0x6A	; 106
    1d66:	72 e0       	ldi	r23, 0x02	; 2
    1d68:	80 e0       	ldi	r24, 0x00	; 0
    1d6a:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		USART_Data("4) Die Select \n");
    1d6e:	66 e7       	ldi	r22, 0x76	; 118
    1d70:	72 e0       	ldi	r23, 0x02	; 2
    1d72:	80 e0       	ldi	r24, 0x00	; 0
    1d74:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		
		UserInput(false);
    1d78:	80 e0       	ldi	r24, 0x00	; 0
    1d7a:	0e 94 11 19 	call	0x3222	; 0x3222 <UserInput>
		
		if (strcmp(CommandBuffer, "Block Lock") == 0) //goes to Block Lock Register
    1d7e:	80 e0       	ldi	r24, 0x00	; 0
    1d80:	92 e0       	ldi	r25, 0x02	; 2
    1d82:	6c 01       	movw	r12, r24
    1d84:	20 e8       	ldi	r18, 0x80	; 128
    1d86:	e2 2e       	mov	r14, r18
    1d88:	26 e8       	ldi	r18, 0x86	; 134
    1d8a:	32 e0       	ldi	r19, 0x02	; 2
    1d8c:	40 e0       	ldi	r20, 0x00	; 0
    1d8e:	8e 2d       	mov	r24, r14
    1d90:	b6 01       	movw	r22, r12
    1d92:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1d96:	89 2b       	or	r24, r25
    1d98:	09 f0       	breq	.+2      	; 0x1d9c <ExecuteCommand+0x192>
    1d9a:	67 c0       	rjmp	.+206    	; 0x1e6a <ExecuteCommand+0x260>
		{
			CLEAR_ARR();
    1d9c:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
			
			USART_Data("1) Lock \n");
    1da0:	61 e9       	ldi	r22, 0x91	; 145
    1da2:	72 e0       	ldi	r23, 0x02	; 2
    1da4:	80 e0       	ldi	r24, 0x00	; 0
    1da6:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
			USART_Data("2) Unlock \n");
    1daa:	6b e9       	ldi	r22, 0x9B	; 155
    1dac:	72 e0       	ldi	r23, 0x02	; 2
    1dae:	80 e0       	ldi	r24, 0x00	; 0
    1db0:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
			USART_Data("3) Read \n");
    1db4:	67 ea       	ldi	r22, 0xA7	; 167
    1db6:	72 e0       	ldi	r23, 0x02	; 2
    1db8:	80 e0       	ldi	r24, 0x00	; 0
    1dba:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
			USART_Data("4) Configure \n");
    1dbe:	61 eb       	ldi	r22, 0xB1	; 177
    1dc0:	72 e0       	ldi	r23, 0x02	; 2
    1dc2:	80 e0       	ldi	r24, 0x00	; 0
    1dc4:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
			
			UserInput(false); //User Input is added into an array, which will be written to memory
    1dc8:	80 e0       	ldi	r24, 0x00	; 0
    1dca:	0e 94 11 19 	call	0x3222	; 0x3222 <UserInput>
			
			if (strcmp(CommandBuffer, "Lock") == 0) //Locks Flash Device
    1dce:	20 ec       	ldi	r18, 0xC0	; 192
    1dd0:	32 e0       	ldi	r19, 0x02	; 2
    1dd2:	40 e0       	ldi	r20, 0x00	; 0
    1dd4:	8e 2d       	mov	r24, r14
    1dd6:	b6 01       	movw	r22, r12
    1dd8:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1ddc:	89 2b       	or	r24, r25
    1dde:	49 f4       	brne	.+18     	; 0x1df2 <ExecuteCommand+0x1e8>
			{
				FLASH_Block_Lock_Setter(true);
    1de0:	81 e0       	ldi	r24, 0x01	; 1
    1de2:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <FLASH_Block_Lock_Setter>
				ExecuteCommand("Feature Registers");
    1de6:	65 e3       	ldi	r22, 0x35	; 53
    1de8:	72 e0       	ldi	r23, 0x02	; 2
    1dea:	80 e0       	ldi	r24, 0x00	; 0
    1dec:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
    1df0:	6e c1       	rjmp	.+732    	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
			}
			else if (strcmp(CommandBuffer, "Unlock") == 0) //Unlocks Flash Device
    1df2:	25 ec       	ldi	r18, 0xC5	; 197
    1df4:	32 e0       	ldi	r19, 0x02	; 2
    1df6:	40 e0       	ldi	r20, 0x00	; 0
    1df8:	8e 2d       	mov	r24, r14
    1dfa:	b6 01       	movw	r22, r12
    1dfc:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1e00:	89 2b       	or	r24, r25
    1e02:	49 f4       	brne	.+18     	; 0x1e16 <ExecuteCommand+0x20c>
			{
				FLASH_Block_Lock_Setter(false);
    1e04:	80 e0       	ldi	r24, 0x00	; 0
    1e06:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <FLASH_Block_Lock_Setter>
				ExecuteCommand("Feature Registers");
    1e0a:	65 e3       	ldi	r22, 0x35	; 53
    1e0c:	72 e0       	ldi	r23, 0x02	; 2
    1e0e:	80 e0       	ldi	r24, 0x00	; 0
    1e10:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
    1e14:	5c c1       	rjmp	.+696    	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
			}
			else if (strcmp(CommandBuffer, "Read") == 0) //Read Block Lock Register
    1e16:	2f ef       	ldi	r18, 0xFF	; 255
    1e18:	31 e0       	ldi	r19, 0x01	; 1
    1e1a:	40 e0       	ldi	r20, 0x00	; 0
    1e1c:	8e 2d       	mov	r24, r14
    1e1e:	b6 01       	movw	r22, r12
    1e20:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1e24:	89 2b       	or	r24, r25
    1e26:	49 f4       	brne	.+18     	; 0x1e3a <ExecuteCommand+0x230>
			{
				FLASH_Block_Lock(false);
    1e28:	80 e0       	ldi	r24, 0x00	; 0
    1e2a:	0e 94 7c 1a 	call	0x34f8	; 0x34f8 <FLASH_Block_Lock>
				ExecuteCommand("Feature Registers");
    1e2e:	65 e3       	ldi	r22, 0x35	; 53
    1e30:	72 e0       	ldi	r23, 0x02	; 2
    1e32:	80 e0       	ldi	r24, 0x00	; 0
    1e34:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
    1e38:	4a c1       	rjmp	.+660    	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
			}
			else if (strcmp(CommandBuffer, "Configure") == 0) //Configure Block Lock Register
    1e3a:	2c ec       	ldi	r18, 0xCC	; 204
    1e3c:	32 e0       	ldi	r19, 0x02	; 2
    1e3e:	40 e0       	ldi	r20, 0x00	; 0
    1e40:	8e 2d       	mov	r24, r14
    1e42:	b6 01       	movw	r22, r12
    1e44:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1e48:	89 2b       	or	r24, r25
    1e4a:	49 f4       	brne	.+18     	; 0x1e5e <ExecuteCommand+0x254>
			{
				FLASH_Block_Lock(true);
    1e4c:	81 e0       	ldi	r24, 0x01	; 1
    1e4e:	0e 94 7c 1a 	call	0x34f8	; 0x34f8 <FLASH_Block_Lock>
				ExecuteCommand("Feature Registers");
    1e52:	65 e3       	ldi	r22, 0x35	; 53
    1e54:	72 e0       	ldi	r23, 0x02	; 2
    1e56:	80 e0       	ldi	r24, 0x00	; 0
    1e58:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
    1e5c:	38 c1       	rjmp	.+624    	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
			}
			else 
			{
				ExecuteCommand("Feature Registers");
    1e5e:	65 e3       	ldi	r22, 0x35	; 53
    1e60:	72 e0       	ldi	r23, 0x02	; 2
    1e62:	80 e0       	ldi	r24, 0x00	; 0
    1e64:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
    1e68:	32 c1       	rjmp	.+612    	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
			}
		}
		
		else if (strcmp(CommandBuffer, "Configuration") == 0) //goes to the Configuration Register
    1e6a:	26 ed       	ldi	r18, 0xD6	; 214
    1e6c:	32 e0       	ldi	r19, 0x02	; 2
    1e6e:	40 e0       	ldi	r20, 0x00	; 0
    1e70:	8e 2d       	mov	r24, r14
    1e72:	b6 01       	movw	r22, r12
    1e74:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1e78:	89 2b       	or	r24, r25
    1e7a:	51 f4       	brne	.+20     	; 0x1e90 <ExecuteCommand+0x286>
		{
			CLEAR_ARR();
    1e7c:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
			FLASH_Configuration(); //get Configuration Register Data
    1e80:	0e 94 97 1e 	call	0x3d2e	; 0x3d2e <FLASH_Configuration>
			ExecuteCommand("Feature Registers");
    1e84:	65 e3       	ldi	r22, 0x35	; 53
    1e86:	72 e0       	ldi	r23, 0x02	; 2
    1e88:	80 e0       	ldi	r24, 0x00	; 0
    1e8a:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
    1e8e:	1f c1       	rjmp	.+574    	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
		}
		
		else if (strcmp(CommandBuffer, "Status") == 0) //goes to the Status Register
    1e90:	24 ee       	ldi	r18, 0xE4	; 228
    1e92:	32 e0       	ldi	r19, 0x02	; 2
    1e94:	40 e0       	ldi	r20, 0x00	; 0
    1e96:	8e 2d       	mov	r24, r14
    1e98:	b6 01       	movw	r22, r12
    1e9a:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1e9e:	89 2b       	or	r24, r25
    1ea0:	51 f4       	brne	.+20     	; 0x1eb6 <ExecuteCommand+0x2ac>
		{
			CLEAR_ARR();
    1ea2:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
			FLASH_Status(); //reads status register
    1ea6:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <FLASH_Status>
			
			ExecuteCommand("Feature Registers");
    1eaa:	65 e3       	ldi	r22, 0x35	; 53
    1eac:	72 e0       	ldi	r23, 0x02	; 2
    1eae:	80 e0       	ldi	r24, 0x00	; 0
    1eb0:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
    1eb4:	0c c1       	rjmp	.+536    	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
		}
		
		else if (strcmp(CommandBuffer, "Die Select") == 0) //goes to the Die Register
    1eb6:	2b ee       	ldi	r18, 0xEB	; 235
    1eb8:	32 e0       	ldi	r19, 0x02	; 2
    1eba:	40 e0       	ldi	r20, 0x00	; 0
    1ebc:	8e 2d       	mov	r24, r14
    1ebe:	b6 01       	movw	r22, r12
    1ec0:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1ec4:	89 2b       	or	r24, r25
    1ec6:	09 f0       	breq	.+2      	; 0x1eca <ExecuteCommand+0x2c0>
    1ec8:	02 c1       	rjmp	.+516    	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
		{
			CLEAR_ARR();
    1eca:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
			FLASH_Die_Selection(); //at the moment only reads to this
    1ece:	0e 94 5d 1e 	call	0x3cba	; 0x3cba <FLASH_Die_Selection>
			ExecuteCommand("Feature Registers");
    1ed2:	65 e3       	ldi	r22, 0x35	; 53
    1ed4:	72 e0       	ldi	r23, 0x02	; 2
    1ed6:	80 e0       	ldi	r24, 0x00	; 0
    1ed8:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
    1edc:	f8 c0       	rjmp	.+496    	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
		}
	}
	
	else if (strcmp(str, "Test Methods") == 0) //this holds test methods of the device
    1ede:	26 ef       	ldi	r18, 0xF6	; 246
    1ee0:	32 e0       	ldi	r19, 0x02	; 2
    1ee2:	40 e0       	ldi	r20, 0x00	; 0
    1ee4:	8e 2d       	mov	r24, r14
    1ee6:	b6 01       	movw	r22, r12
    1ee8:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1eec:	89 2b       	or	r24, r25
    1eee:	09 f0       	breq	.+2      	; 0x1ef2 <ExecuteCommand+0x2e8>
    1ef0:	c2 c0       	rjmp	.+388    	; 0x2076 <__DATA_REGION_LENGTH__+0x76>
	{
		CLEAR_ARR();
    1ef2:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
		
		USART_Data("1) Write Test \n");
    1ef6:	63 e0       	ldi	r22, 0x03	; 3
    1ef8:	73 e0       	ldi	r23, 0x03	; 3
    1efa:	80 e0       	ldi	r24, 0x00	; 0
    1efc:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		USART_Data("2) Read Test \n");
    1f00:	63 e1       	ldi	r22, 0x13	; 19
    1f02:	73 e0       	ldi	r23, 0x03	; 3
    1f04:	80 e0       	ldi	r24, 0x00	; 0
    1f06:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		USART_Data("3) Erase Test \n");
    1f0a:	62 e2       	ldi	r22, 0x22	; 34
    1f0c:	73 e0       	ldi	r23, 0x03	; 3
    1f0e:	80 e0       	ldi	r24, 0x00	; 0
    1f10:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		USART_Data("4) Block Checker \n");
    1f14:	62 e3       	ldi	r22, 0x32	; 50
    1f16:	73 e0       	ldi	r23, 0x03	; 3
    1f18:	80 e0       	ldi	r24, 0x00	; 0
    1f1a:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		USART_Data("5) Page Checker \n");
    1f1e:	65 e4       	ldi	r22, 0x45	; 69
    1f20:	73 e0       	ldi	r23, 0x03	; 3
    1f22:	80 e0       	ldi	r24, 0x00	; 0
    1f24:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		
		UserInput(false);
    1f28:	80 e0       	ldi	r24, 0x00	; 0
    1f2a:	0e 94 11 19 	call	0x3222	; 0x3222 <UserInput>
		
		if (strcmp(CommandBuffer, "Write Test") == 0) //write to memory test
    1f2e:	80 e0       	ldi	r24, 0x00	; 0
    1f30:	92 e0       	ldi	r25, 0x02	; 2
    1f32:	3c 01       	movw	r6, r24
    1f34:	20 e8       	ldi	r18, 0x80	; 128
    1f36:	82 2e       	mov	r8, r18
    1f38:	27 e5       	ldi	r18, 0x57	; 87
    1f3a:	33 e0       	ldi	r19, 0x03	; 3
    1f3c:	40 e0       	ldi	r20, 0x00	; 0
    1f3e:	88 2d       	mov	r24, r8
    1f40:	b3 01       	movw	r22, r6
    1f42:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1f46:	89 2b       	or	r24, r25
    1f48:	29 f5       	brne	.+74     	; 0x1f94 <ExecuteCommand+0x38a>
		{
			s = 0;
    1f4a:	10 92 02 05 	sts	0x0502, r1	; 0x800502 <s+0x1>
    1f4e:	10 92 01 05 	sts	0x0501, r1	; 0x800501 <s>
			CLEAR_ARR();
    1f52:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
				
			Print_To_User(FLASH_NAND_ADDRESS_MAX, 0, "Here is our NAND Address: 0x%02X \n", Byte_Address, status_feature);
    1f56:	83 e0       	ldi	r24, 0x03	; 3
    1f58:	95 e0       	ldi	r25, 0x05	; 5
    1f5a:	7c 01       	movw	r14, r24
    1f5c:	20 e8       	ldi	r18, 0x80	; 128
    1f5e:	02 2f       	mov	r16, r18
    1f60:	0f 2e       	mov	r0, r31
    1f62:	f0 e0       	ldi	r31, 0x00	; 0
    1f64:	cf 2e       	mov	r12, r31
    1f66:	f3 e0       	ldi	r31, 0x03	; 3
    1f68:	df 2e       	mov	r13, r31
    1f6a:	f0 2d       	mov	r31, r0
    1f6c:	22 e6       	ldi	r18, 0x62	; 98
    1f6e:	33 e0       	ldi	r19, 0x03	; 3
    1f70:	40 e0       	ldi	r20, 0x00	; 0
    1f72:	60 e0       	ldi	r22, 0x00	; 0
    1f74:	70 e0       	ldi	r23, 0x00	; 0
    1f76:	85 e0       	ldi	r24, 0x05	; 5
    1f78:	90 e0       	ldi	r25, 0x00	; 0
    1f7a:	0e 94 26 1a 	call	0x344c	; 0x344c <Print_To_User>
			
			UserInput(false);
    1f7e:	80 e0       	ldi	r24, 0x00	; 0
    1f80:	0e 94 11 19 	call	0x3222	; 0x3222 <UserInput>
			
			FLASH_Page_Program(); //adds user input into Flash Write Function, to memory...
    1f84:	0e 94 dd 1d 	call	0x3bba	; 0x3bba <FLASH_Page_Program>
			
			ExecuteCommand("Test Methods");
    1f88:	66 ef       	ldi	r22, 0xF6	; 246
    1f8a:	72 e0       	ldi	r23, 0x02	; 2
    1f8c:	80 e0       	ldi	r24, 0x00	; 0
    1f8e:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
    1f92:	9d c0       	rjmp	.+314    	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
		}
		
		else if (strcmp(CommandBuffer, "Read Test") == 0) //read from memory test
    1f94:	25 e8       	ldi	r18, 0x85	; 133
    1f96:	33 e0       	ldi	r19, 0x03	; 3
    1f98:	40 e0       	ldi	r20, 0x00	; 0
    1f9a:	88 2d       	mov	r24, r8
    1f9c:	b3 01       	movw	r22, r6
    1f9e:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1fa2:	89 2b       	or	r24, r25
    1fa4:	b1 f4       	brne	.+44     	; 0x1fd2 <ExecuteCommand+0x3c8>
		{
			s = 0; //sets main array to normal operations
    1fa6:	10 92 02 05 	sts	0x0502, r1	; 0x800502 <s+0x1>
    1faa:	10 92 01 05 	sts	0x0501, r1	; 0x800501 <s>
			CLEAR_ARR();
    1fae:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
			FLASH_Page_Read();
    1fb2:	0e 94 6e 21 	call	0x42dc	; 0x42dc <FLASH_Page_Read>

			USART_Data(data);
    1fb6:	61 e0       	ldi	r22, 0x01	; 1
    1fb8:	74 e0       	ldi	r23, 0x04	; 4
    1fba:	80 e8       	ldi	r24, 0x80	; 128
    1fbc:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
			USART_TX_Data('\n');
    1fc0:	8a e0       	ldi	r24, 0x0A	; 10
    1fc2:	0e 94 52 23 	call	0x46a4	; 0x46a4 <USART_TX_Data>
			
			ExecuteCommand("Test Methods");
    1fc6:	66 ef       	ldi	r22, 0xF6	; 246
    1fc8:	72 e0       	ldi	r23, 0x02	; 2
    1fca:	80 e0       	ldi	r24, 0x00	; 0
    1fcc:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
    1fd0:	7e c0       	rjmp	.+252    	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
		}
		
		else if (strcmp(CommandBuffer, "Erase Test") == 0) //erases by blocks
    1fd2:	2f e8       	ldi	r18, 0x8F	; 143
    1fd4:	33 e0       	ldi	r19, 0x03	; 3
    1fd6:	40 e0       	ldi	r20, 0x00	; 0
    1fd8:	88 2d       	mov	r24, r8
    1fda:	b3 01       	movw	r22, r6
    1fdc:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    1fe0:	89 2b       	or	r24, r25
    1fe2:	71 f4       	brne	.+28     	; 0x2000 <__DATA_REGION_LENGTH__>
		{
			s = 0; //sets main array address to normal operation
    1fe4:	10 92 02 05 	sts	0x0502, r1	; 0x800502 <s+0x1>
    1fe8:	10 92 01 05 	sts	0x0501, r1	; 0x800501 <s>
			CLEAR_ARR();
    1fec:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
			FLASH_Block_Erase(); //Erases Flash Block
    1ff0:	0e 94 a4 21 	call	0x4348	; 0x4348 <FLASH_Block_Erase>
			
			ExecuteCommand("Test Methods");
    1ff4:	66 ef       	ldi	r22, 0xF6	; 246
    1ff6:	72 e0       	ldi	r23, 0x02	; 2
    1ff8:	80 e0       	ldi	r24, 0x00	; 0
    1ffa:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
    1ffe:	67 c0       	rjmp	.+206    	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
		}
		
		//this might stick as part of the main options, but its mostly meant for debugging bad blocks...
		else if (strcmp(CommandBuffer, "Block Checker") == 0) //verifies availability of the block
    2000:	2a e9       	ldi	r18, 0x9A	; 154
    2002:	33 e0       	ldi	r19, 0x03	; 3
    2004:	40 e0       	ldi	r20, 0x00	; 0
    2006:	88 2d       	mov	r24, r8
    2008:	b3 01       	movw	r22, r6
    200a:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    200e:	89 2b       	or	r24, r25
    2010:	e9 f4       	brne	.+58     	; 0x204c <__DATA_REGION_LENGTH__+0x4c>
		{
			s = 0;
    2012:	10 92 02 05 	sts	0x0502, r1	; 0x800502 <s+0x1>
    2016:	10 92 01 05 	sts	0x0501, r1	; 0x800501 <s>
			CLEAR_ARR();
    201a:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
			FLASH_Page_Read();
    201e:	0e 94 6e 21 	call	0x42dc	; 0x42dc <FLASH_Page_Read>

			if (Device_ID[0] != 0xFF)
    2022:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <Device_ID>
    2026:	8f 3f       	cpi	r24, 0xFF	; 255
    2028:	31 f0       	breq	.+12     	; 0x2036 <__DATA_REGION_LENGTH__+0x36>
			{
				USART_Data("Block is marked bad\n");
    202a:	68 ea       	ldi	r22, 0xA8	; 168
    202c:	73 e0       	ldi	r23, 0x03	; 3
    202e:	80 e0       	ldi	r24, 0x00	; 0
    2030:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
    2034:	05 c0       	rjmp	.+10     	; 0x2040 <__DATA_REGION_LENGTH__+0x40>
			}
			else
			{
				USART_Data("Block appears clean\n");
    2036:	6d eb       	ldi	r22, 0xBD	; 189
    2038:	73 e0       	ldi	r23, 0x03	; 3
    203a:	80 e0       	ldi	r24, 0x00	; 0
    203c:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
			}
			
			ExecuteCommand("Test Methods");
    2040:	66 ef       	ldi	r22, 0xF6	; 246
    2042:	72 e0       	ldi	r23, 0x02	; 2
    2044:	80 e0       	ldi	r24, 0x00	; 0
    2046:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
    204a:	41 c0       	rjmp	.+130    	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
		}
		
		//meant for debugging bad pages in block...
		else if (strcmp(str, "Page Checker") == 0) //determines if page is good or bad...
    204c:	22 ed       	ldi	r18, 0xD2	; 210
    204e:	33 e0       	ldi	r19, 0x03	; 3
    2050:	40 e0       	ldi	r20, 0x00	; 0
    2052:	8e 2d       	mov	r24, r14
    2054:	b6 01       	movw	r22, r12
    2056:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    205a:	89 2b       	or	r24, r25
    205c:	c1 f5       	brne	.+112    	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
		{
			s = 0;
    205e:	10 92 02 05 	sts	0x0502, r1	; 0x800502 <s+0x1>
    2062:	10 92 01 05 	sts	0x0501, r1	; 0x800501 <s>
			Page_Tester();
    2066:	0e 94 b1 18 	call	0x3162	; 0x3162 <Page_Tester>
			
			ExecuteCommand("Test Methods");
    206a:	66 ef       	ldi	r22, 0xF6	; 246
    206c:	72 e0       	ldi	r23, 0x02	; 2
    206e:	80 e0       	ldi	r24, 0x00	; 0
    2070:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
    2074:	2c c0       	rjmp	.+88     	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
		}
	}
	
	else if (strcmp(str, "Reset") == 0) //Basic Read Test Command
    2076:	2f ed       	ldi	r18, 0xDF	; 223
    2078:	33 e0       	ldi	r19, 0x03	; 3
    207a:	40 e0       	ldi	r20, 0x00	; 0
    207c:	8e 2d       	mov	r24, r14
    207e:	b6 01       	movw	r22, r12
    2080:	0e 94 96 20 	call	0x412c	; 0x412c <strcmp>
    2084:	89 2b       	or	r24, r25
    2086:	29 f4       	brne	.+10     	; 0x2092 <__DATA_REGION_LENGTH__+0x92>
	{
		CLEAR_ARR();
    2088:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
		FLASH_Reset();
    208c:	0e 94 ac 22 	call	0x4558	; 0x4558 <FLASH_Reset>
    2090:	1e c0       	rjmp	.+60     	; 0x20ce <__DATA_REGION_LENGTH__+0xce>
	}
	
	else
	{
		USART_Data("1) Flash ID \n");
    2092:	65 ee       	ldi	r22, 0xE5	; 229
    2094:	73 e0       	ldi	r23, 0x03	; 3
    2096:	80 e0       	ldi	r24, 0x00	; 0
    2098:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		USART_Data("2) NAND Addresses \n");
    209c:	63 ef       	ldi	r22, 0xF3	; 243
    209e:	73 e0       	ldi	r23, 0x03	; 3
    20a0:	80 e0       	ldi	r24, 0x00	; 0
    20a2:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		USART_Data("3) Parameter Page \n");
    20a6:	67 e0       	ldi	r22, 0x07	; 7
    20a8:	74 e0       	ldi	r23, 0x04	; 4
    20aa:	80 e0       	ldi	r24, 0x00	; 0
    20ac:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		USART_Data("4) Feature Registers \n");
    20b0:	6b e1       	ldi	r22, 0x1B	; 27
    20b2:	74 e0       	ldi	r23, 0x04	; 4
    20b4:	80 e0       	ldi	r24, 0x00	; 0
    20b6:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		USART_Data("5) Test Methods \n");
    20ba:	62 e3       	ldi	r22, 0x32	; 50
    20bc:	74 e0       	ldi	r23, 0x04	; 4
    20be:	80 e0       	ldi	r24, 0x00	; 0
    20c0:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		USART_Data("6) Reset \n");
    20c4:	64 e4       	ldi	r22, 0x44	; 68
    20c6:	74 e0       	ldi	r23, 0x04	; 4
    20c8:	80 e0       	ldi	r24, 0x00	; 0
    20ca:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
	}
}
    20ce:	df 91       	pop	r29
    20d0:	cf 91       	pop	r28
    20d2:	1f 91       	pop	r17
    20d4:	0f 91       	pop	r16
    20d6:	ff 90       	pop	r15
    20d8:	ef 90       	pop	r14
    20da:	df 90       	pop	r13
    20dc:	cf 90       	pop	r12
    20de:	8f 90       	pop	r8
    20e0:	7f 90       	pop	r7
    20e2:	6f 90       	pop	r6
    20e4:	08 95       	ret

Disassembly of section .text.UserInput:

00003222 <UserInput>:

int arr_address = 0; //for CommandBuffer array
int input_counter = 0; //to count the number of input characters 

void UserInput(bool command) //asking for user input
{
    3222:	cf 92       	push	r12
    3224:	df 92       	push	r13
    3226:	ef 92       	push	r14
    3228:	cf 93       	push	r28
    322a:	c8 2f       	mov	r28, r24
	USART_Data("->User Input:\n"); //asking for User Input
    322c:	6f e4       	ldi	r22, 0x4F	; 79
    322e:	74 e0       	ldi	r23, 0x04	; 4
    3230:	80 e0       	ldi	r24, 0x00	; 0
    3232:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
	
	input_counter = 0; //reset input counter
    3236:	10 92 0e 05 	sts	0x050E, r1	; 0x80050e <_end+0x1>
    323a:	10 92 0d 05 	sts	0x050D, r1	; 0x80050d <_end>
	
	c = USART_RX_Data(); //receive user uint8_t data type input
    323e:	0e 94 59 23 	call	0x46b2	; 0x46b2 <USART_RX_Data>
    3242:	80 93 00 04 	sts	0x0400, r24	; 0x800400 <c>
	
	while ((c != '\r')) //(c != '\n') &&
    3246:	26 c0       	rjmp	.+76     	; 0x3294 <UserInput+0x72>
	{
		input_counter++; //increment input counter
    3248:	80 91 0d 05 	lds	r24, 0x050D	; 0x80050d <_end>
    324c:	90 91 0e 05 	lds	r25, 0x050E	; 0x80050e <_end+0x1>
    3250:	01 96       	adiw	r24, 0x01	; 1
    3252:	90 93 0e 05 	sts	0x050E, r25	; 0x80050e <_end+0x1>
    3256:	80 93 0d 05 	sts	0x050D, r24	; 0x80050d <_end>
		CommandBuffer[arr_address] = c; //adding uint8_t into array at index, creating a string
    325a:	80 91 0f 05 	lds	r24, 0x050F	; 0x80050f <arr_address>
    325e:	90 91 10 05 	lds	r25, 0x0510	; 0x800510 <arr_address+0x1>
    3262:	fc 01       	movw	r30, r24
    3264:	e0 50       	subi	r30, 0x00	; 0
    3266:	fe 4f       	sbci	r31, 0xFE	; 254
    3268:	20 83       	st	Z, r18
		if (arr_address >= sizeof(CommandBuffer)) //making this an endless array for command lines
    326a:	8f 3f       	cpi	r24, 0xFF	; 255
    326c:	91 05       	cpc	r25, r1
    326e:	29 f0       	breq	.+10     	; 0x327a <UserInput+0x58>
    3270:	20 f0       	brcs	.+8      	; 0x327a <UserInput+0x58>
		{
			arr_address = 0; //resets array at address 0
    3272:	10 92 10 05 	sts	0x0510, r1	; 0x800510 <arr_address+0x1>
    3276:	10 92 0f 05 	sts	0x050F, r1	; 0x80050f <arr_address>
		}
		arr_address++;
    327a:	80 91 0f 05 	lds	r24, 0x050F	; 0x80050f <arr_address>
    327e:	90 91 10 05 	lds	r25, 0x0510	; 0x800510 <arr_address+0x1>
    3282:	01 96       	adiw	r24, 0x01	; 1
    3284:	90 93 10 05 	sts	0x0510, r25	; 0x800510 <arr_address+0x1>
    3288:	80 93 0f 05 	sts	0x050F, r24	; 0x80050f <arr_address>
		c = USART_RX_Data(); //receive user uint8_t data type input
    328c:	0e 94 59 23 	call	0x46b2	; 0x46b2 <USART_RX_Data>
    3290:	80 93 00 04 	sts	0x0400, r24	; 0x800400 <c>
	
	input_counter = 0; //reset input counter
	
	c = USART_RX_Data(); //receive user uint8_t data type input
	
	while ((c != '\r')) //(c != '\n') &&
    3294:	20 91 00 04 	lds	r18, 0x0400	; 0x800400 <c>
    3298:	2d 30       	cpi	r18, 0x0D	; 13
    329a:	b1 f6       	brne	.-84     	; 0x3248 <UserInput+0x26>
		arr_address++;
		c = USART_RX_Data(); //receive user uint8_t data type input
	}
	
	//CommandBuffer[arr_address + 1] = '\r';
	CommandBuffer[arr_address] = '\0'; //adding NULL '\0' to mark end of Command String...; adding carriage return '\r' until I can get NULL to work...
    329c:	e0 91 0f 05 	lds	r30, 0x050F	; 0x80050f <arr_address>
    32a0:	f0 91 10 05 	lds	r31, 0x0510	; 0x800510 <arr_address+0x1>
    32a4:	e0 50       	subi	r30, 0x00	; 0
    32a6:	fe 4f       	sbci	r31, 0xFE	; 254
    32a8:	10 82       	st	Z, r1
	arr_address = 0; //resets array at address 0
    32aa:	10 92 10 05 	sts	0x0510, r1	; 0x800510 <arr_address+0x1>
    32ae:	10 92 0f 05 	sts	0x050F, r1	; 0x80050f <arr_address>
	
	USART_Data(CommandBuffer); //shows what the user wrote on terminal
    32b2:	80 e0       	ldi	r24, 0x00	; 0
    32b4:	92 e0       	ldi	r25, 0x02	; 2
    32b6:	6c 01       	movw	r12, r24
    32b8:	20 e8       	ldi	r18, 0x80	; 128
    32ba:	e2 2e       	mov	r14, r18
    32bc:	8e 2d       	mov	r24, r14
    32be:	b6 01       	movw	r22, r12
    32c0:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
	USART_TX_Data('\n');
    32c4:	8a e0       	ldi	r24, 0x0A	; 10
    32c6:	0e 94 52 23 	call	0x46a4	; 0x46a4 <USART_TX_Data>
	
	if (command)
    32ca:	cc 23       	and	r28, r28
    32cc:	21 f0       	breq	.+8      	; 0x32d6 <UserInput+0xb4>
		ExecuteCommand(CommandBuffer); //if command true, pass command to execute function
    32ce:	8e 2d       	mov	r24, r14
    32d0:	b6 01       	movw	r22, r12
    32d2:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <ExecuteCommand>
}
    32d6:	cf 91       	pop	r28
    32d8:	ef 90       	pop	r14
    32da:	df 90       	pop	r13
    32dc:	cf 90       	pop	r12
    32de:	08 95       	ret

Disassembly of section .text.COLUMN_BLOCK_PAGE_ADDRESSER:

00002656 <COLUMN_BLOCK_PAGE_ADDRESSER>:
		USART_Data(arr_dest);
	}
}

void COLUMN_BLOCK_PAGE_ADDRESSER(bool addr_type) //gets hex number for Column and Block/Page address
{
    2656:	cf 92       	push	r12
    2658:	df 92       	push	r13
    265a:	ef 92       	push	r14
    265c:	ff 92       	push	r15
    265e:	0f 93       	push	r16
    2660:	cf 93       	push	r28
    2662:	c8 2f       	mov	r28, r24
	UserInput(false); //get the hex numbers, false because not command
    2664:	80 e0       	ldi	r24, 0x00	; 0
    2666:	0e 94 11 19 	call	0x3222	; 0x3222 <UserInput>
	
	if (addr_type == false) //false, so address type is Column Address
    266a:	c1 11       	cpse	r28, r1
    266c:	4b c0       	rjmp	.+150    	; 0x2704 <COLUMN_BLOCK_PAGE_ADDRESSER+0xae>
	{
		if (input_counter != 4) //has to be 4 inputs
    266e:	80 91 0d 05 	lds	r24, 0x050D	; 0x80050d <_end>
    2672:	90 91 0e 05 	lds	r25, 0x050E	; 0x80050e <_end+0x1>
    2676:	04 97       	sbiw	r24, 0x04	; 4
    2678:	41 f0       	breq	.+16     	; 0x268a <COLUMN_BLOCK_PAGE_ADDRESSER+0x34>
		{
			USART_Data("Make sure only 4 inputs. \n");
    267a:	6e e5       	ldi	r22, 0x5E	; 94
    267c:	74 e0       	ldi	r23, 0x04	; 4
    267e:	80 e0       	ldi	r24, 0x00	; 0
    2680:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
			UserInput(false);
    2684:	80 e0       	ldi	r24, 0x00	; 0
    2686:	0e 94 11 19 	call	0x3222	; 0x3222 <UserInput>
		}
		
		if (HEX_Verification()) //if true (valid)
    268a:	0e 94 70 19 	call	0x32e0	; 0x32e0 <HEX_Verification>
    268e:	81 11       	cpse	r24, r1
    2690:	1b c0       	rjmp	.+54     	; 0x26c8 <COLUMN_BLOCK_PAGE_ADDRESSER+0x72>
    2692:	34 c0       	rjmp	.+104    	; 0x26fc <COLUMN_BLOCK_PAGE_ADDRESSER+0xa6>
		{
			for (int i = 0; i < COLUMN_ADDRESS + 1; i+=2)
			{
				Byte_Address[i / 2] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
    2694:	9c 01       	movw	r18, r24
    2696:	99 23       	and	r25, r25
    2698:	14 f4       	brge	.+4      	; 0x269e <COLUMN_BLOCK_PAGE_ADDRESSER+0x48>
    269a:	2f 5f       	subi	r18, 0xFF	; 255
    269c:	3f 4f       	sbci	r19, 0xFF	; 255
    269e:	35 95       	asr	r19
    26a0:	27 95       	ror	r18
    26a2:	fc 01       	movw	r30, r24
    26a4:	e0 50       	subi	r30, 0x00	; 0
    26a6:	fe 4f       	sbci	r31, 0xFE	; 254
    26a8:	40 81       	ld	r20, Z
    26aa:	60 e1       	ldi	r22, 0x10	; 16
    26ac:	46 9f       	mul	r20, r22
    26ae:	a0 01       	movw	r20, r0
    26b0:	11 24       	eor	r1, r1
    26b2:	fc 01       	movw	r30, r24
    26b4:	ef 5f       	subi	r30, 0xFF	; 255
    26b6:	fd 4f       	sbci	r31, 0xFD	; 253
    26b8:	50 81       	ld	r21, Z
    26ba:	f9 01       	movw	r30, r18
    26bc:	ed 5f       	subi	r30, 0xFD	; 253
    26be:	fa 4f       	sbci	r31, 0xFA	; 250
    26c0:	45 2b       	or	r20, r21
    26c2:	40 83       	st	Z, r20
			UserInput(false);
		}
		
		if (HEX_Verification()) //if true (valid)
		{
			for (int i = 0; i < COLUMN_ADDRESS + 1; i+=2)
    26c4:	02 96       	adiw	r24, 0x02	; 2
    26c6:	02 c0       	rjmp	.+4      	; 0x26cc <COLUMN_BLOCK_PAGE_ADDRESSER+0x76>
    26c8:	80 e0       	ldi	r24, 0x00	; 0
    26ca:	90 e0       	ldi	r25, 0x00	; 0
    26cc:	83 30       	cpi	r24, 0x03	; 3
    26ce:	91 05       	cpc	r25, r1
    26d0:	0c f3       	brlt	.-62     	; 0x2694 <COLUMN_BLOCK_PAGE_ADDRESSER+0x3e>
			{
				Byte_Address[i / 2] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
			}
			
			Print_To_User(COLUMN_ADDRESS, 0, "Column Address -> 0x%02X \n", Byte_Address, status_feature);	
    26d2:	83 e0       	ldi	r24, 0x03	; 3
    26d4:	95 e0       	ldi	r25, 0x05	; 5
    26d6:	7c 01       	movw	r14, r24
    26d8:	20 e8       	ldi	r18, 0x80	; 128
    26da:	02 2f       	mov	r16, r18
    26dc:	0f 2e       	mov	r0, r31
    26de:	f0 e0       	ldi	r31, 0x00	; 0
    26e0:	cf 2e       	mov	r12, r31
    26e2:	f3 e0       	ldi	r31, 0x03	; 3
    26e4:	df 2e       	mov	r13, r31
    26e6:	f0 2d       	mov	r31, r0
    26e8:	29 e7       	ldi	r18, 0x79	; 121
    26ea:	34 e0       	ldi	r19, 0x04	; 4
    26ec:	40 e0       	ldi	r20, 0x00	; 0
    26ee:	60 e0       	ldi	r22, 0x00	; 0
    26f0:	70 e0       	ldi	r23, 0x00	; 0
    26f2:	82 e0       	ldi	r24, 0x02	; 2
    26f4:	90 e0       	ldi	r25, 0x00	; 0
    26f6:	0e 94 26 1a 	call	0x344c	; 0x344c <Print_To_User>
    26fa:	4e c0       	rjmp	.+156    	; 0x2798 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
		else
		{
			COLUMN_BLOCK_PAGE_ADDRESSER(addr_type); //call again
    26fc:	8c 2f       	mov	r24, r28
    26fe:	0e 94 2b 13 	call	0x2656	; 0x2656 <COLUMN_BLOCK_PAGE_ADDRESSER>
    2702:	4a c0       	rjmp	.+148    	; 0x2798 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
	}
	else //true, so address type is Block/Page Address
	{
		if (input_counter != 6) //has to be 6 inputs
    2704:	80 91 0d 05 	lds	r24, 0x050D	; 0x80050d <_end>
    2708:	90 91 0e 05 	lds	r25, 0x050E	; 0x80050e <_end+0x1>
    270c:	06 97       	sbiw	r24, 0x06	; 6
    270e:	41 f0       	breq	.+16     	; 0x2720 <COLUMN_BLOCK_PAGE_ADDRESSER+0xca>
		{
			USART_Data("Make sure only 6 inputs. \n");
    2710:	64 e9       	ldi	r22, 0x94	; 148
    2712:	74 e0       	ldi	r23, 0x04	; 4
    2714:	80 e0       	ldi	r24, 0x00	; 0
    2716:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
			UserInput(false);
    271a:	80 e0       	ldi	r24, 0x00	; 0
    271c:	0e 94 11 19 	call	0x3222	; 0x3222 <UserInput>
		}
		
		if(HEX_Verification()) //if true (valid)
    2720:	0e 94 70 19 	call	0x32e0	; 0x32e0 <HEX_Verification>
    2724:	81 11       	cpse	r24, r1
    2726:	1b c0       	rjmp	.+54     	; 0x275e <COLUMN_BLOCK_PAGE_ADDRESSER+0x108>
    2728:	34 c0       	rjmp	.+104    	; 0x2792 <COLUMN_BLOCK_PAGE_ADDRESSER+0x13c>
		{
			for (int i = 0; i < BLOCK_PAGE_ADDRESS + 2; i+=2)
			{
				Byte_Address[COLUMN_ADDRESS + (i / 2)] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
    272a:	9c 01       	movw	r18, r24
    272c:	99 23       	and	r25, r25
    272e:	14 f4       	brge	.+4      	; 0x2734 <COLUMN_BLOCK_PAGE_ADDRESSER+0xde>
    2730:	2f 5f       	subi	r18, 0xFF	; 255
    2732:	3f 4f       	sbci	r19, 0xFF	; 255
    2734:	35 95       	asr	r19
    2736:	27 95       	ror	r18
    2738:	fc 01       	movw	r30, r24
    273a:	e0 50       	subi	r30, 0x00	; 0
    273c:	fe 4f       	sbci	r31, 0xFE	; 254
    273e:	40 81       	ld	r20, Z
    2740:	60 e1       	ldi	r22, 0x10	; 16
    2742:	46 9f       	mul	r20, r22
    2744:	a0 01       	movw	r20, r0
    2746:	11 24       	eor	r1, r1
    2748:	fc 01       	movw	r30, r24
    274a:	ef 5f       	subi	r30, 0xFF	; 255
    274c:	fd 4f       	sbci	r31, 0xFD	; 253
    274e:	50 81       	ld	r21, Z
    2750:	f9 01       	movw	r30, r18
    2752:	eb 5f       	subi	r30, 0xFB	; 251
    2754:	fa 4f       	sbci	r31, 0xFA	; 250
    2756:	45 2b       	or	r20, r21
    2758:	40 83       	st	Z, r20
			UserInput(false);
		}
		
		if(HEX_Verification()) //if true (valid)
		{
			for (int i = 0; i < BLOCK_PAGE_ADDRESS + 2; i+=2)
    275a:	02 96       	adiw	r24, 0x02	; 2
    275c:	02 c0       	rjmp	.+4      	; 0x2762 <COLUMN_BLOCK_PAGE_ADDRESSER+0x10c>
    275e:	80 e0       	ldi	r24, 0x00	; 0
    2760:	90 e0       	ldi	r25, 0x00	; 0
    2762:	85 30       	cpi	r24, 0x05	; 5
    2764:	91 05       	cpc	r25, r1
    2766:	0c f3       	brlt	.-62     	; 0x272a <COLUMN_BLOCK_PAGE_ADDRESSER+0xd4>
			{
				Byte_Address[COLUMN_ADDRESS + (i / 2)] = (CommandBuffer[i] << 4) | CommandBuffer[i + 1];
			}
			
			Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "Block/Page Address -> 0x%02X \n", Byte_Address, status_feature);
    2768:	83 e0       	ldi	r24, 0x03	; 3
    276a:	95 e0       	ldi	r25, 0x05	; 5
    276c:	7c 01       	movw	r14, r24
    276e:	20 e8       	ldi	r18, 0x80	; 128
    2770:	02 2f       	mov	r16, r18
    2772:	0f 2e       	mov	r0, r31
    2774:	f0 e0       	ldi	r31, 0x00	; 0
    2776:	cf 2e       	mov	r12, r31
    2778:	f3 e0       	ldi	r31, 0x03	; 3
    277a:	df 2e       	mov	r13, r31
    277c:	f0 2d       	mov	r31, r0
    277e:	2f ea       	ldi	r18, 0xAF	; 175
    2780:	34 e0       	ldi	r19, 0x04	; 4
    2782:	40 e0       	ldi	r20, 0x00	; 0
    2784:	62 e0       	ldi	r22, 0x02	; 2
    2786:	70 e0       	ldi	r23, 0x00	; 0
    2788:	83 e0       	ldi	r24, 0x03	; 3
    278a:	90 e0       	ldi	r25, 0x00	; 0
    278c:	0e 94 26 1a 	call	0x344c	; 0x344c <Print_To_User>
    2790:	03 c0       	rjmp	.+6      	; 0x2798 <COLUMN_BLOCK_PAGE_ADDRESSER+0x142>
		}
		else
		{
			COLUMN_BLOCK_PAGE_ADDRESSER(addr_type); //call again
    2792:	8c 2f       	mov	r24, r28
    2794:	0e 94 2b 13 	call	0x2656	; 0x2656 <COLUMN_BLOCK_PAGE_ADDRESSER>
		}
	}
}
    2798:	cf 91       	pop	r28
    279a:	0f 91       	pop	r16
    279c:	ff 90       	pop	r15
    279e:	ef 90       	pop	r14
    27a0:	df 90       	pop	r13
    27a2:	cf 90       	pop	r12
    27a4:	08 95       	ret

Disassembly of section .text.NAND_Address_Checker:

00003978 <NAND_Address_Checker>:
	return true; //return true, indicating passed test
	//Print_To_User(6, 0, "Parsed nibble: 0x%02X\n", CommandBuffer, status_feature); //troubleshooting, verifies if ASCII is converted to hex values
}

void NAND_Address_Checker(bool choice) //returns user the Column and Block/Page Addresses
{
    3978:	6f 92       	push	r6
    397a:	7f 92       	push	r7
    397c:	8f 92       	push	r8
    397e:	cf 92       	push	r12
    3980:	df 92       	push	r13
    3982:	ef 92       	push	r14
    3984:	ff 92       	push	r15
    3986:	0f 93       	push	r16
	if(choice) //true so write new address
    3988:	88 23       	and	r24, r24
    398a:	89 f0       	breq	.+34     	; 0x39ae <NAND_Address_Checker+0x36>
	{	
		USART_Data("---Column Address--- 2 bytes \n");
    398c:	6e ec       	ldi	r22, 0xCE	; 206
    398e:	74 e0       	ldi	r23, 0x04	; 4
    3990:	80 e0       	ldi	r24, 0x00	; 0
    3992:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		COLUMN_BLOCK_PAGE_ADDRESSER(false);
    3996:	80 e0       	ldi	r24, 0x00	; 0
    3998:	0e 94 2b 13 	call	0x2656	; 0x2656 <COLUMN_BLOCK_PAGE_ADDRESSER>

		USART_Data("---Block/Page Address--- 3 bytes \n");
    399c:	6d ee       	ldi	r22, 0xED	; 237
    399e:	74 e0       	ldi	r23, 0x04	; 4
    39a0:	80 e0       	ldi	r24, 0x00	; 0
    39a2:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		COLUMN_BLOCK_PAGE_ADDRESSER(true);
    39a6:	81 e0       	ldi	r24, 0x01	; 1
    39a8:	0e 94 2b 13 	call	0x2656	; 0x2656 <COLUMN_BLOCK_PAGE_ADDRESSER>
    39ac:	29 c0       	rjmp	.+82     	; 0x3a00 <NAND_Address_Checker+0x88>
	}
	else //false so read current address
	{
		USART_Data("---Column Address--- 2 bytes \n");
    39ae:	6e ec       	ldi	r22, 0xCE	; 206
    39b0:	74 e0       	ldi	r23, 0x04	; 4
    39b2:	80 e0       	ldi	r24, 0x00	; 0
    39b4:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		Print_To_User(COLUMN_ADDRESS, 0, "0x%02X \n", Byte_Address, status_feature);
    39b8:	83 e0       	ldi	r24, 0x03	; 3
    39ba:	95 e0       	ldi	r25, 0x05	; 5
    39bc:	3c 01       	movw	r6, r24
    39be:	20 e8       	ldi	r18, 0x80	; 128
    39c0:	82 2e       	mov	r8, r18
    39c2:	0f 2e       	mov	r0, r31
    39c4:	f0 e0       	ldi	r31, 0x00	; 0
    39c6:	cf 2e       	mov	r12, r31
    39c8:	f3 e0       	ldi	r31, 0x03	; 3
    39ca:	df 2e       	mov	r13, r31
    39cc:	f0 2d       	mov	r31, r0
    39ce:	08 2d       	mov	r16, r8
    39d0:	73 01       	movw	r14, r6
    39d2:	20 e1       	ldi	r18, 0x10	; 16
    39d4:	35 e0       	ldi	r19, 0x05	; 5
    39d6:	40 e0       	ldi	r20, 0x00	; 0
    39d8:	60 e0       	ldi	r22, 0x00	; 0
    39da:	70 e0       	ldi	r23, 0x00	; 0
    39dc:	82 e0       	ldi	r24, 0x02	; 2
    39de:	90 e0       	ldi	r25, 0x00	; 0
    39e0:	0e 94 26 1a 	call	0x344c	; 0x344c <Print_To_User>

		USART_Data("---Block/Page Address--- 3 bytes \n");
    39e4:	6d ee       	ldi	r22, 0xED	; 237
    39e6:	74 e0       	ldi	r23, 0x04	; 4
    39e8:	80 e0       	ldi	r24, 0x00	; 0
    39ea:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
		Print_To_User(BLOCK_PAGE_ADDRESS, COLUMN_ADDRESS, "0x%02X \n", Byte_Address, status_feature);	
    39ee:	20 e1       	ldi	r18, 0x10	; 16
    39f0:	35 e0       	ldi	r19, 0x05	; 5
    39f2:	40 e0       	ldi	r20, 0x00	; 0
    39f4:	62 e0       	ldi	r22, 0x02	; 2
    39f6:	70 e0       	ldi	r23, 0x00	; 0
    39f8:	83 e0       	ldi	r24, 0x03	; 3
    39fa:	90 e0       	ldi	r25, 0x00	; 0
    39fc:	0e 94 26 1a 	call	0x344c	; 0x344c <Print_To_User>
	}
}
    3a00:	0f 91       	pop	r16
    3a02:	ff 90       	pop	r15
    3a04:	ef 90       	pop	r14
    3a06:	df 90       	pop	r13
    3a08:	cf 90       	pop	r12
    3a0a:	8f 90       	pop	r8
    3a0c:	7f 90       	pop	r7
    3a0e:	6f 90       	pop	r6
    3a10:	08 95       	ret

Disassembly of section .text.CLEAR_ARR:

00003ee2 <CLEAR_ARR>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3ee2:	80 e0       	ldi	r24, 0x00	; 0
    3ee4:	90 e0       	ldi	r25, 0x00	; 0
    3ee6:	05 c0       	rjmp	.+10     	; 0x3ef2 <CLEAR_ARR+0x10>
    3ee8:	fc 01       	movw	r30, r24
    3eea:	e8 5f       	subi	r30, 0xF8	; 248
    3eec:	fa 4f       	sbci	r31, 0xFA	; 250
    3eee:	10 82       	st	Z, r1
    3ef0:	01 96       	adiw	r24, 0x01	; 1
    3ef2:	82 30       	cpi	r24, 0x02	; 2
    3ef4:	91 05       	cpc	r25, r1
    3ef6:	c0 f3       	brcs	.-16     	; 0x3ee8 <CLEAR_ARR+0x6>
    3ef8:	80 e0       	ldi	r24, 0x00	; 0
    3efa:	90 e0       	ldi	r25, 0x00	; 0
    3efc:	05 c0       	rjmp	.+10     	; 0x3f08 <CLEAR_ARR+0x26>
    3efe:	fc 01       	movw	r30, r24
    3f00:	ef 5f       	subi	r30, 0xFF	; 255
    3f02:	fb 4f       	sbci	r31, 0xFB	; 251
    3f04:	10 82       	st	Z, r1
    3f06:	01 96       	adiw	r24, 0x01	; 1
    3f08:	8f 3f       	cpi	r24, 0xFF	; 255
    3f0a:	91 05       	cpc	r25, r1
    3f0c:	c1 f3       	breq	.-16     	; 0x3efe <CLEAR_ARR+0x1c>
    3f0e:	b8 f3       	brcs	.-18     	; 0x3efe <CLEAR_ARR+0x1c>
    3f10:	80 e0       	ldi	r24, 0x00	; 0
    3f12:	90 e0       	ldi	r25, 0x00	; 0
    3f14:	05 c0       	rjmp	.+10     	; 0x3f20 <CLEAR_ARR+0x3e>
    3f16:	fc 01       	movw	r30, r24
    3f18:	e0 50       	subi	r30, 0x00	; 0
    3f1a:	fe 4f       	sbci	r31, 0xFE	; 254
    3f1c:	10 82       	st	Z, r1
    3f1e:	01 96       	adiw	r24, 0x01	; 1
    3f20:	8f 3f       	cpi	r24, 0xFF	; 255
    3f22:	91 05       	cpc	r25, r1
    3f24:	c1 f3       	breq	.-16     	; 0x3f16 <CLEAR_ARR+0x34>
    3f26:	b8 f3       	brcs	.-18     	; 0x3f16 <CLEAR_ARR+0x34>
    3f28:	80 e0       	ldi	r24, 0x00	; 0
    3f2a:	90 e0       	ldi	r25, 0x00	; 0
    3f2c:	05 c0       	rjmp	.+10     	; 0x3f38 <CLEAR_ARR+0x56>
    3f2e:	fc 01       	movw	r30, r24
    3f30:	e0 50       	subi	r30, 0x00	; 0
    3f32:	fd 4f       	sbci	r31, 0xFD	; 253
    3f34:	10 82       	st	Z, r1
    3f36:	01 96       	adiw	r24, 0x01	; 1
    3f38:	8f 3f       	cpi	r24, 0xFF	; 255
    3f3a:	91 05       	cpc	r25, r1
    3f3c:	c1 f3       	breq	.-16     	; 0x3f2e <CLEAR_ARR+0x4c>
    3f3e:	b8 f3       	brcs	.-18     	; 0x3f2e <CLEAR_ARR+0x4c>
    3f40:	08 95       	ret

Disassembly of section .text.SPI_MASTER_Init:

000044ce <SPI_MASTER_Init>:

//Master Mode (for ATmega 2560) allows full duplex communication between the ATmega 2560 to Flash NAND Memory chip
void SPI_MASTER_Init() //initializes Serial Peripheral Interference (SPI) operations in Master Mode
{
	//DDR pin assignment, ~CS, MOSI, SCK are outputs (1), and MISO is input (0) (in Master Mode)
	DDRB |= (1 << PB2) | (1 << PB1); //setting MASTER_MOSI (PB2) as output; setting MASTER_SCK (PB1) as output;
    44ce:	84 b1       	in	r24, 0x04	; 4
    44d0:	86 60       	ori	r24, 0x06	; 6
    44d2:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << PB3); //setting MASTER_MISO (PB3) as input;
    44d4:	84 b1       	in	r24, 0x04	; 4
    44d6:	87 7f       	andi	r24, 0xF7	; 247
    44d8:	84 b9       	out	0x04, r24	; 4
	
	//MUST set ~SS on the ATmega 2560 in order to get SPI operations working...
	DDRB |= (1 << PB0); //setting ~SS pin (PB0) as output;
    44da:	84 b1       	in	r24, 0x04	; 4
    44dc:	81 60       	ori	r24, 0x01	; 1
    44de:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1 << PB0); //setting ~SS pin (PB0) high to "de-select" slave device (not connected to the Flash NAND anyway)
    44e0:	85 b1       	in	r24, 0x05	; 5
    44e2:	81 60       	ori	r24, 0x01	; 1
    44e4:	85 b9       	out	0x05, r24	; 5
	//PORTB &= ~(1 << PB0); //setting ~SS pin (PB0) low to "select" slave device (not connected to the Flash NAND anyway)
	
	SPCR |= (1 << SPE) | (1 << MSTR) | (1 << SPR0); // SPE: enables the SPI; MSTR: sets SPI to Master SPI mode; SPR1 and SPR0: sets the SCK Frequency (divisor of 16);
    44e6:	8c b5       	in	r24, 0x2c	; 44
    44e8:	81 65       	ori	r24, 0x51	; 81
    44ea:	8c bd       	out	0x2c, r24	; 44
	SPCR &= ~(1 << DORD) | ~(1 << CPOL) | ~(1 << CPHA) | ~(1 << SPR1);//DORD, Data order set to MSB transmitted first; SPI Timing Mode is 0, where CPOL and CPHA are both 0
    44ec:	8c b5       	in	r24, 0x2c	; 44
    44ee:	8c bd       	out	0x2c, r24	; 44
    44f0:	08 95       	ret

Disassembly of section .text.FLASH_Write_Enable:

000045ca <FLASH_Write_Enable>:
}

void FLASH_Write_Enable (void) //select Slave device and initializes Write operations onto Flash NAND
{
	FLASH_NAND_CS_ENABLE();
    45ca:	0e 94 a8 23 	call	0x4750	; 0x4750 <FLASH_NAND_CS_ENABLE>
	
	SPDR = WRITE_ENABLED; //Flash NAND's Write Enable command into SPI Data Register (SPDR)
    45ce:	86 e0       	ldi	r24, 0x06	; 6
    45d0:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete; waits for SPIF to be logic high
    45d2:	0d b4       	in	r0, 0x2d	; 45
    45d4:	07 fe       	sbrs	r0, 7
    45d6:	fd cf       	rjmp	.-6      	; 0x45d2 <FLASH_Write_Enable+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    45d8:	8e b5       	in	r24, 0x2e	; 46
    45da:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
	
	FLASH_NAND_CS_DISABLE();
    45de:	0e 94 ac 23 	call	0x4758	; 0x4758 <FLASH_NAND_CS_DISABLE>
    45e2:	08 95       	ret

Disassembly of section .text.FLASH_ID:

00003b30 <FLASH_ID>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3b30:	cf 93       	push	r28
    3b32:	df 93       	push	r29
    3b34:	0e 94 a8 23 	call	0x4750	; 0x4750 <FLASH_NAND_CS_ENABLE>
    3b38:	8f e9       	ldi	r24, 0x9F	; 159
    3b3a:	8e bd       	out	0x2e, r24	; 46
    3b3c:	0d b4       	in	r0, 0x2d	; 45
    3b3e:	07 fe       	sbrs	r0, 7
    3b40:	fd cf       	rjmp	.-6      	; 0x3b3c <FLASH_ID+0xc>
    3b42:	8e b5       	in	r24, 0x2e	; 46
    3b44:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3b48:	1e bc       	out	0x2e, r1	; 46
    3b4a:	0d b4       	in	r0, 0x2d	; 45
    3b4c:	07 fe       	sbrs	r0, 7
    3b4e:	fd cf       	rjmp	.-6      	; 0x3b4a <FLASH_ID+0x1a>
    3b50:	8e b5       	in	r24, 0x2e	; 46
    3b52:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3b56:	1e bc       	out	0x2e, r1	; 46
    3b58:	0d b4       	in	r0, 0x2d	; 45
    3b5a:	07 fe       	sbrs	r0, 7
    3b5c:	fd cf       	rjmp	.-6      	; 0x3b58 <FLASH_ID+0x28>
    3b5e:	8e b5       	in	r24, 0x2e	; 46
    3b60:	80 93 08 05 	sts	0x0508, r24	; 0x800508 <Device_ID>
    3b64:	1e bc       	out	0x2e, r1	; 46
    3b66:	0d b4       	in	r0, 0x2d	; 45
    3b68:	07 fe       	sbrs	r0, 7
    3b6a:	fd cf       	rjmp	.-6      	; 0x3b66 <FLASH_ID+0x36>
    3b6c:	8e b5       	in	r24, 0x2e	; 46
    3b6e:	c8 e0       	ldi	r28, 0x08	; 8
    3b70:	d5 e0       	ldi	r29, 0x05	; 5
    3b72:	89 83       	std	Y+1, r24	; 0x01
    3b74:	0e 94 ac 23 	call	0x4758	; 0x4758 <FLASH_NAND_CS_DISABLE>
    3b78:	99 81       	ldd	r25, Y+1	; 0x01
    3b7a:	88 81       	ld	r24, Y
    3b7c:	1f 92       	push	r1
    3b7e:	9f 93       	push	r25
    3b80:	1f 92       	push	r1
    3b82:	8f 93       	push	r24
    3b84:	89 e1       	ldi	r24, 0x19	; 25
    3b86:	95 e0       	ldi	r25, 0x05	; 5
    3b88:	a0 e0       	ldi	r26, 0x00	; 0
    3b8a:	af 93       	push	r26
    3b8c:	9f 93       	push	r25
    3b8e:	8f 93       	push	r24
    3b90:	c0 e0       	ldi	r28, 0x00	; 0
    3b92:	d3 e0       	ldi	r29, 0x03	; 3
    3b94:	df 93       	push	r29
    3b96:	cf 93       	push	r28
    3b98:	0e 94 41 22 	call	0x4482	; 0x4482 <_sprintf_cdnopuxX>
    3b9c:	be 01       	movw	r22, r28
    3b9e:	80 e8       	ldi	r24, 0x80	; 128
    3ba0:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
    3ba4:	8d b7       	in	r24, 0x3d	; 61
    3ba6:	9e b7       	in	r25, 0x3e	; 62
    3ba8:	09 96       	adiw	r24, 0x09	; 9
    3baa:	0f b6       	in	r0, 0x3f	; 63
    3bac:	f8 94       	cli
    3bae:	9e bf       	out	0x3e, r25	; 62
    3bb0:	0f be       	out	0x3f, r0	; 63
    3bb2:	8d bf       	out	0x3d, r24	; 61
    3bb4:	df 91       	pop	r29
    3bb6:	cf 91       	pop	r28
    3bb8:	08 95       	ret

Disassembly of section .text.FLASH_Die_Selection:

00003cba <FLASH_Die_Selection>:
    3cba:	cf 92       	push	r12
    3cbc:	df 92       	push	r13
    3cbe:	ef 92       	push	r14
    3cc0:	ff 92       	push	r15
    3cc2:	0f 93       	push	r16
    3cc4:	0e 94 a8 23 	call	0x4750	; 0x4750 <FLASH_NAND_CS_ENABLE>
    3cc8:	8f e0       	ldi	r24, 0x0F	; 15
    3cca:	8e bd       	out	0x2e, r24	; 46
    3ccc:	0d b4       	in	r0, 0x2d	; 45
    3cce:	07 fe       	sbrs	r0, 7
    3cd0:	fd cf       	rjmp	.-6      	; 0x3ccc <FLASH_Die_Selection+0x12>
    3cd2:	8e b5       	in	r24, 0x2e	; 46
    3cd4:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3cd8:	80 ed       	ldi	r24, 0xD0	; 208
    3cda:	8e bd       	out	0x2e, r24	; 46
    3cdc:	0d b4       	in	r0, 0x2d	; 45
    3cde:	07 fe       	sbrs	r0, 7
    3ce0:	fd cf       	rjmp	.-6      	; 0x3cdc <FLASH_Die_Selection+0x22>
    3ce2:	8e b5       	in	r24, 0x2e	; 46
    3ce4:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3ce8:	1e bc       	out	0x2e, r1	; 46
    3cea:	0d b4       	in	r0, 0x2d	; 45
    3cec:	07 fe       	sbrs	r0, 7
    3cee:	fd cf       	rjmp	.-6      	; 0x3cea <FLASH_Die_Selection+0x30>
    3cf0:	8e b5       	in	r24, 0x2e	; 46
    3cf2:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3cf6:	0e 94 ac 23 	call	0x4758	; 0x4758 <FLASH_NAND_CS_DISABLE>
    3cfa:	8a e0       	ldi	r24, 0x0A	; 10
    3cfc:	95 e0       	ldi	r25, 0x05	; 5
    3cfe:	7c 01       	movw	r14, r24
    3d00:	20 e8       	ldi	r18, 0x80	; 128
    3d02:	02 2f       	mov	r16, r18
    3d04:	0f 2e       	mov	r0, r31
    3d06:	f0 e0       	ldi	r31, 0x00	; 0
    3d08:	cf 2e       	mov	r12, r31
    3d0a:	f3 e0       	ldi	r31, 0x03	; 3
    3d0c:	df 2e       	mov	r13, r31
    3d0e:	f0 2d       	mov	r31, r0
    3d10:	21 e5       	ldi	r18, 0x51	; 81
    3d12:	35 e0       	ldi	r19, 0x05	; 5
    3d14:	40 e0       	ldi	r20, 0x00	; 0
    3d16:	60 e0       	ldi	r22, 0x00	; 0
    3d18:	70 e0       	ldi	r23, 0x00	; 0
    3d1a:	81 e0       	ldi	r24, 0x01	; 1
    3d1c:	90 e0       	ldi	r25, 0x00	; 0
    3d1e:	0e 94 26 1a 	call	0x344c	; 0x344c <Print_To_User>
    3d22:	0f 91       	pop	r16
    3d24:	ff 90       	pop	r15
    3d26:	ef 90       	pop	r14
    3d28:	df 90       	pop	r13
    3d2a:	cf 90       	pop	r12
    3d2c:	08 95       	ret

Disassembly of section .text.FLASH_Configuration:

00003d2e <FLASH_Configuration>:
    3d2e:	cf 92       	push	r12
    3d30:	df 92       	push	r13
    3d32:	ef 92       	push	r14
    3d34:	ff 92       	push	r15
    3d36:	0f 93       	push	r16
    3d38:	0e 94 a8 23 	call	0x4750	; 0x4750 <FLASH_NAND_CS_ENABLE>
    3d3c:	8f e0       	ldi	r24, 0x0F	; 15
    3d3e:	8e bd       	out	0x2e, r24	; 46
    3d40:	0d b4       	in	r0, 0x2d	; 45
    3d42:	07 fe       	sbrs	r0, 7
    3d44:	fd cf       	rjmp	.-6      	; 0x3d40 <FLASH_Configuration+0x12>
    3d46:	8e b5       	in	r24, 0x2e	; 46
    3d48:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3d4c:	80 eb       	ldi	r24, 0xB0	; 176
    3d4e:	8e bd       	out	0x2e, r24	; 46
    3d50:	0d b4       	in	r0, 0x2d	; 45
    3d52:	07 fe       	sbrs	r0, 7
    3d54:	fd cf       	rjmp	.-6      	; 0x3d50 <FLASH_Configuration+0x22>
    3d56:	8e b5       	in	r24, 0x2e	; 46
    3d58:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3d5c:	1e bc       	out	0x2e, r1	; 46
    3d5e:	0d b4       	in	r0, 0x2d	; 45
    3d60:	07 fe       	sbrs	r0, 7
    3d62:	fd cf       	rjmp	.-6      	; 0x3d5e <FLASH_Configuration+0x30>
    3d64:	8e b5       	in	r24, 0x2e	; 46
    3d66:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3d6a:	0e 94 ac 23 	call	0x4758	; 0x4758 <FLASH_NAND_CS_DISABLE>
    3d6e:	8a e0       	ldi	r24, 0x0A	; 10
    3d70:	95 e0       	ldi	r25, 0x05	; 5
    3d72:	7c 01       	movw	r14, r24
    3d74:	20 e8       	ldi	r18, 0x80	; 128
    3d76:	02 2f       	mov	r16, r18
    3d78:	0f 2e       	mov	r0, r31
    3d7a:	f0 e0       	ldi	r31, 0x00	; 0
    3d7c:	cf 2e       	mov	r12, r31
    3d7e:	f3 e0       	ldi	r31, 0x03	; 3
    3d80:	df 2e       	mov	r13, r31
    3d82:	f0 2d       	mov	r31, r0
    3d84:	22 e7       	ldi	r18, 0x72	; 114
    3d86:	35 e0       	ldi	r19, 0x05	; 5
    3d88:	40 e0       	ldi	r20, 0x00	; 0
    3d8a:	60 e0       	ldi	r22, 0x00	; 0
    3d8c:	70 e0       	ldi	r23, 0x00	; 0
    3d8e:	81 e0       	ldi	r24, 0x01	; 1
    3d90:	90 e0       	ldi	r25, 0x00	; 0
    3d92:	0e 94 26 1a 	call	0x344c	; 0x344c <Print_To_User>
    3d96:	0f 91       	pop	r16
    3d98:	ff 90       	pop	r15
    3d9a:	ef 90       	pop	r14
    3d9c:	df 90       	pop	r13
    3d9e:	cf 90       	pop	r12
    3da0:	08 95       	ret

Disassembly of section .text.FLASH_Block_Lock_Setter:

00003da2 <FLASH_Block_Lock_Setter>:
    3da2:	cf 93       	push	r28
    3da4:	c8 2f       	mov	r28, r24
    3da6:	0e 94 a8 23 	call	0x4750	; 0x4750 <FLASH_NAND_CS_ENABLE>
    3daa:	cc 23       	and	r28, r28
    3dac:	c9 f0       	breq	.+50     	; 0x3de0 <FLASH_Block_Lock_Setter+0x3e>
    3dae:	8f e1       	ldi	r24, 0x1F	; 31
    3db0:	8e bd       	out	0x2e, r24	; 46
    3db2:	0d b4       	in	r0, 0x2d	; 45
    3db4:	07 fe       	sbrs	r0, 7
    3db6:	fd cf       	rjmp	.-6      	; 0x3db2 <FLASH_Block_Lock_Setter+0x10>
    3db8:	8e b5       	in	r24, 0x2e	; 46
    3dba:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3dbe:	80 ea       	ldi	r24, 0xA0	; 160
    3dc0:	8e bd       	out	0x2e, r24	; 46
    3dc2:	0d b4       	in	r0, 0x2d	; 45
    3dc4:	07 fe       	sbrs	r0, 7
    3dc6:	fd cf       	rjmp	.-6      	; 0x3dc2 <FLASH_Block_Lock_Setter+0x20>
    3dc8:	8e b5       	in	r24, 0x2e	; 46
    3dca:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3dce:	8c e7       	ldi	r24, 0x7C	; 124
    3dd0:	8e bd       	out	0x2e, r24	; 46
    3dd2:	0d b4       	in	r0, 0x2d	; 45
    3dd4:	07 fe       	sbrs	r0, 7
    3dd6:	fd cf       	rjmp	.-6      	; 0x3dd2 <FLASH_Block_Lock_Setter+0x30>
    3dd8:	8e b5       	in	r24, 0x2e	; 46
    3dda:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3dde:	17 c0       	rjmp	.+46     	; 0x3e0e <FLASH_Block_Lock_Setter+0x6c>
    3de0:	8f e1       	ldi	r24, 0x1F	; 31
    3de2:	8e bd       	out	0x2e, r24	; 46
    3de4:	0d b4       	in	r0, 0x2d	; 45
    3de6:	07 fe       	sbrs	r0, 7
    3de8:	fd cf       	rjmp	.-6      	; 0x3de4 <FLASH_Block_Lock_Setter+0x42>
    3dea:	8e b5       	in	r24, 0x2e	; 46
    3dec:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3df0:	80 ea       	ldi	r24, 0xA0	; 160
    3df2:	8e bd       	out	0x2e, r24	; 46
    3df4:	0d b4       	in	r0, 0x2d	; 45
    3df6:	07 fe       	sbrs	r0, 7
    3df8:	fd cf       	rjmp	.-6      	; 0x3df4 <FLASH_Block_Lock_Setter+0x52>
    3dfa:	8e b5       	in	r24, 0x2e	; 46
    3dfc:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3e00:	1e bc       	out	0x2e, r1	; 46
    3e02:	0d b4       	in	r0, 0x2d	; 45
    3e04:	07 fe       	sbrs	r0, 7
    3e06:	fd cf       	rjmp	.-6      	; 0x3e02 <FLASH_Block_Lock_Setter+0x60>
    3e08:	8e b5       	in	r24, 0x2e	; 46
    3e0a:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3e0e:	0e 94 ac 23 	call	0x4758	; 0x4758 <FLASH_NAND_CS_DISABLE>
    3e12:	cf 91       	pop	r28
    3e14:	08 95       	ret

Disassembly of section .text.FLASH_Block_Lock:

000034f8 <FLASH_Block_Lock>:
    34f8:	cf 92       	push	r12
    34fa:	df 92       	push	r13
    34fc:	ef 92       	push	r14
    34fe:	ff 92       	push	r15
    3500:	0f 93       	push	r16
    3502:	08 2f       	mov	r16, r24
    3504:	0e 94 a8 23 	call	0x4750	; 0x4750 <FLASH_NAND_CS_ENABLE>
    3508:	00 23       	and	r16, r16
    350a:	c1 f0       	breq	.+48     	; 0x353c <FLASH_Block_Lock+0x44>
    350c:	8f e1       	ldi	r24, 0x1F	; 31
    350e:	8e bd       	out	0x2e, r24	; 46
    3510:	0d b4       	in	r0, 0x2d	; 45
    3512:	07 fe       	sbrs	r0, 7
    3514:	fd cf       	rjmp	.-6      	; 0x3510 <FLASH_Block_Lock+0x18>
    3516:	8e b5       	in	r24, 0x2e	; 46
    3518:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    351c:	80 ea       	ldi	r24, 0xA0	; 160
    351e:	8e bd       	out	0x2e, r24	; 46
    3520:	0d b4       	in	r0, 0x2d	; 45
    3522:	07 fe       	sbrs	r0, 7
    3524:	fd cf       	rjmp	.-6      	; 0x3520 <FLASH_Block_Lock+0x28>
    3526:	8e b5       	in	r24, 0x2e	; 46
    3528:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    352c:	1e bc       	out	0x2e, r1	; 46
    352e:	0d b4       	in	r0, 0x2d	; 45
    3530:	07 fe       	sbrs	r0, 7
    3532:	fd cf       	rjmp	.-6      	; 0x352e <FLASH_Block_Lock+0x36>
    3534:	8e b5       	in	r24, 0x2e	; 46
    3536:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    353a:	17 c0       	rjmp	.+46     	; 0x356a <FLASH_Block_Lock+0x72>
    353c:	8f e0       	ldi	r24, 0x0F	; 15
    353e:	8e bd       	out	0x2e, r24	; 46
    3540:	0d b4       	in	r0, 0x2d	; 45
    3542:	07 fe       	sbrs	r0, 7
    3544:	fd cf       	rjmp	.-6      	; 0x3540 <FLASH_Block_Lock+0x48>
    3546:	8e b5       	in	r24, 0x2e	; 46
    3548:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    354c:	80 ea       	ldi	r24, 0xA0	; 160
    354e:	8e bd       	out	0x2e, r24	; 46
    3550:	0d b4       	in	r0, 0x2d	; 45
    3552:	07 fe       	sbrs	r0, 7
    3554:	fd cf       	rjmp	.-6      	; 0x3550 <FLASH_Block_Lock+0x58>
    3556:	8e b5       	in	r24, 0x2e	; 46
    3558:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    355c:	1e bc       	out	0x2e, r1	; 46
    355e:	0d b4       	in	r0, 0x2d	; 45
    3560:	07 fe       	sbrs	r0, 7
    3562:	fd cf       	rjmp	.-6      	; 0x355e <FLASH_Block_Lock+0x66>
    3564:	8e b5       	in	r24, 0x2e	; 46
    3566:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    356a:	0e 94 ac 23 	call	0x4758	; 0x4758 <FLASH_NAND_CS_DISABLE>
    356e:	8a e0       	ldi	r24, 0x0A	; 10
    3570:	95 e0       	ldi	r25, 0x05	; 5
    3572:	7c 01       	movw	r14, r24
    3574:	20 e8       	ldi	r18, 0x80	; 128
    3576:	02 2f       	mov	r16, r18
    3578:	0f 2e       	mov	r0, r31
    357a:	f0 e0       	ldi	r31, 0x00	; 0
    357c:	cf 2e       	mov	r12, r31
    357e:	f3 e0       	ldi	r31, 0x03	; 3
    3580:	df 2e       	mov	r13, r31
    3582:	f0 2d       	mov	r31, r0
    3584:	23 e9       	ldi	r18, 0x93	; 147
    3586:	35 e0       	ldi	r19, 0x05	; 5
    3588:	40 e0       	ldi	r20, 0x00	; 0
    358a:	60 e0       	ldi	r22, 0x00	; 0
    358c:	70 e0       	ldi	r23, 0x00	; 0
    358e:	81 e0       	ldi	r24, 0x01	; 1
    3590:	90 e0       	ldi	r25, 0x00	; 0
    3592:	0e 94 26 1a 	call	0x344c	; 0x344c <Print_To_User>
    3596:	0f 91       	pop	r16
    3598:	ff 90       	pop	r15
    359a:	ef 90       	pop	r14
    359c:	df 90       	pop	r13
    359e:	cf 90       	pop	r12
    35a0:	08 95       	ret

Disassembly of section .text.FLASH_Reset:

00004558 <FLASH_Reset>:
	Print_To_User(1, 0, "Block Lock Register: 0x%02X \n", &status, status_feature);
}

void FLASH_Reset() //reset memory device
{
	FLASH_NAND_CS_ENABLE();
    4558:	0e 94 a8 23 	call	0x4750	; 0x4750 <FLASH_NAND_CS_ENABLE>
	
	SPDR = RESET; //Sending READ_ID Command into SPI Data Register (SPDR)
    455c:	8f ef       	ldi	r24, 0xFF	; 255
    455e:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    4560:	0d b4       	in	r0, 0x2d	; 45
    4562:	07 fe       	sbrs	r0, 7
    4564:	fd cf       	rjmp	.-6      	; 0x4560 <FLASH_Reset+0x8>
	
	FLASH_NAND_CS_DISABLE();
    4566:	0e 94 ac 23 	call	0x4758	; 0x4758 <FLASH_NAND_CS_DISABLE>

	USART_Data("Device Reseted \n");
    456a:	61 eb       	ldi	r22, 0xB1	; 177
    456c:	75 e0       	ldi	r23, 0x05	; 5
    456e:	80 e0       	ldi	r24, 0x00	; 0
    4570:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
    4574:	08 95       	ret

Disassembly of section .text.FLASH_MainArray_Address:

000035a2 <FLASH_MainArray_Address>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    35a2:	cf 92       	push	r12
    35a4:	df 92       	push	r13
    35a6:	ef 92       	push	r14
    35a8:	9a 01       	movw	r18, r20
    35aa:	46 2f       	mov	r20, r22
    35ac:	00 97       	sbiw	r24, 0x00	; 0
    35ae:	81 f5       	brne	.+96     	; 0x3610 <FLASH_MainArray_Address+0x6e>
    35b0:	69 01       	movw	r12, r18
    35b2:	e4 2e       	mov	r14, r20
    35b4:	52 e0       	ldi	r21, 0x02	; 2
    35b6:	c5 0e       	add	r12, r21
    35b8:	d1 1c       	adc	r13, r1
    35ba:	e1 1c       	adc	r14, r1
    35bc:	f6 01       	movw	r30, r12
    35be:	5e 2d       	mov	r21, r14
    35c0:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    35c4:	6e bd       	out	0x2e, r22	; 46
    35c6:	0d b4       	in	r0, 0x2d	; 45
    35c8:	07 fe       	sbrs	r0, 7
    35ca:	fd cf       	rjmp	.-6      	; 0x35c6 <FLASH_MainArray_Address+0x24>
    35cc:	5e b5       	in	r21, 0x2e	; 46
    35ce:	50 93 0a 05 	sts	0x050A, r21	; 0x80050a <status>
    35d2:	69 01       	movw	r12, r18
    35d4:	e4 2e       	mov	r14, r20
    35d6:	53 e0       	ldi	r21, 0x03	; 3
    35d8:	c5 0e       	add	r12, r21
    35da:	d1 1c       	adc	r13, r1
    35dc:	e1 1c       	adc	r14, r1
    35de:	f6 01       	movw	r30, r12
    35e0:	5e 2d       	mov	r21, r14
    35e2:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    35e6:	6e bd       	out	0x2e, r22	; 46
    35e8:	0d b4       	in	r0, 0x2d	; 45
    35ea:	07 fe       	sbrs	r0, 7
    35ec:	fd cf       	rjmp	.-6      	; 0x35e8 <FLASH_MainArray_Address+0x46>
    35ee:	5e b5       	in	r21, 0x2e	; 46
    35f0:	50 93 0a 05 	sts	0x050A, r21	; 0x80050a <status>
    35f4:	2c 5f       	subi	r18, 0xFC	; 252
    35f6:	3f 4f       	sbci	r19, 0xFF	; 255
    35f8:	4f 4f       	sbci	r20, 0xFF	; 255
    35fa:	f9 01       	movw	r30, r18
    35fc:	54 2f       	mov	r21, r20
    35fe:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    3602:	6e bd       	out	0x2e, r22	; 46
    3604:	0d b4       	in	r0, 0x2d	; 45
    3606:	07 fe       	sbrs	r0, 7
    3608:	fd cf       	rjmp	.-6      	; 0x3604 <FLASH_MainArray_Address+0x62>
    360a:	2e b5       	in	r18, 0x2e	; 46
    360c:	20 93 0a 05 	sts	0x050A, r18	; 0x80050a <status>
    3610:	01 97       	sbiw	r24, 0x01	; 1
    3612:	b1 f4       	brne	.+44     	; 0x3640 <FLASH_MainArray_Address+0x9e>
    3614:	1e bc       	out	0x2e, r1	; 46
    3616:	0d b4       	in	r0, 0x2d	; 45
    3618:	07 fe       	sbrs	r0, 7
    361a:	fd cf       	rjmp	.-6      	; 0x3616 <FLASH_MainArray_Address+0x74>
    361c:	8e b5       	in	r24, 0x2e	; 46
    361e:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3622:	1e bc       	out	0x2e, r1	; 46
    3624:	0d b4       	in	r0, 0x2d	; 45
    3626:	07 fe       	sbrs	r0, 7
    3628:	fd cf       	rjmp	.-6      	; 0x3624 <FLASH_MainArray_Address+0x82>
    362a:	8e b5       	in	r24, 0x2e	; 46
    362c:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3630:	81 e0       	ldi	r24, 0x01	; 1
    3632:	8e bd       	out	0x2e, r24	; 46
    3634:	0d b4       	in	r0, 0x2d	; 45
    3636:	07 fe       	sbrs	r0, 7
    3638:	fd cf       	rjmp	.-6      	; 0x3634 <FLASH_MainArray_Address+0x92>
    363a:	8e b5       	in	r24, 0x2e	; 46
    363c:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3640:	ef 90       	pop	r14
    3642:	df 90       	pop	r13
    3644:	cf 90       	pop	r12
    3646:	08 95       	ret

Disassembly of section .text.FLASH_Column_Address:

00003fa0 <FLASH_Column_Address>:
    3fa0:	9a 01       	movw	r18, r20
    3fa2:	46 2f       	mov	r20, r22
    3fa4:	00 97       	sbiw	r24, 0x00	; 0
    3fa6:	c9 f4       	brne	.+50     	; 0x3fda <FLASH_Column_Address+0x3a>
    3fa8:	f9 01       	movw	r30, r18
    3faa:	54 2f       	mov	r21, r20
    3fac:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    3fb0:	6e bd       	out	0x2e, r22	; 46
    3fb2:	0d b4       	in	r0, 0x2d	; 45
    3fb4:	07 fe       	sbrs	r0, 7
    3fb6:	fd cf       	rjmp	.-6      	; 0x3fb2 <FLASH_Column_Address+0x12>
    3fb8:	5e b5       	in	r21, 0x2e	; 46
    3fba:	50 93 0a 05 	sts	0x050A, r21	; 0x80050a <status>
    3fbe:	2f 5f       	subi	r18, 0xFF	; 255
    3fc0:	3f 4f       	sbci	r19, 0xFF	; 255
    3fc2:	4f 4f       	sbci	r20, 0xFF	; 255
    3fc4:	f9 01       	movw	r30, r18
    3fc6:	54 2f       	mov	r21, r20
    3fc8:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    3fcc:	6e bd       	out	0x2e, r22	; 46
    3fce:	0d b4       	in	r0, 0x2d	; 45
    3fd0:	07 fe       	sbrs	r0, 7
    3fd2:	fd cf       	rjmp	.-6      	; 0x3fce <FLASH_Column_Address+0x2e>
    3fd4:	2e b5       	in	r18, 0x2e	; 46
    3fd6:	20 93 0a 05 	sts	0x050A, r18	; 0x80050a <status>
    3fda:	01 97       	sbiw	r24, 0x01	; 1
    3fdc:	71 f4       	brne	.+28     	; 0x3ffa <FLASH_Column_Address+0x5a>
    3fde:	1e bc       	out	0x2e, r1	; 46
    3fe0:	0d b4       	in	r0, 0x2d	; 45
    3fe2:	07 fe       	sbrs	r0, 7
    3fe4:	fd cf       	rjmp	.-6      	; 0x3fe0 <FLASH_Column_Address+0x40>
    3fe6:	8e b5       	in	r24, 0x2e	; 46
    3fe8:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3fec:	1e bc       	out	0x2e, r1	; 46
    3fee:	0d b4       	in	r0, 0x2d	; 45
    3ff0:	07 fe       	sbrs	r0, 7
    3ff2:	fd cf       	rjmp	.-6      	; 0x3fee <FLASH_Column_Address+0x4e>
    3ff4:	8e b5       	in	r24, 0x2e	; 46
    3ff6:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3ffa:	08 95       	ret

Disassembly of section .text.FLASH_Data_Storage:

00003834 <FLASH_Data_Storage>:
    3834:	cf 92       	push	r12
    3836:	df 92       	push	r13
    3838:	ef 92       	push	r14
    383a:	ff 92       	push	r15
    383c:	0f 93       	push	r16
    383e:	1f 93       	push	r17
    3840:	cf 93       	push	r28
    3842:	df 93       	push	r29
    3844:	ec 01       	movw	r28, r24
    3846:	89 2b       	or	r24, r25
    3848:	19 f1       	breq	.+70     	; 0x3890 <FLASH_Data_Storage+0x5c>
    384a:	28 c0       	rjmp	.+80     	; 0x389c <FLASH_Data_Storage+0x68>
    384c:	1e bc       	out	0x2e, r1	; 46
    384e:	0d b4       	in	r0, 0x2d	; 45
    3850:	07 fe       	sbrs	r0, 7
    3852:	fd cf       	rjmp	.-6      	; 0x384e <FLASH_Data_Storage+0x1a>
    3854:	2e b5       	in	r18, 0x2e	; 46
    3856:	fc 01       	movw	r30, r24
    3858:	ef 5f       	subi	r30, 0xFF	; 255
    385a:	fb 4f       	sbci	r31, 0xFB	; 251
    385c:	20 83       	st	Z, r18
    385e:	2e b5       	in	r18, 0x2e	; 46
    3860:	2d 30       	cpi	r18, 0x0D	; 13
    3862:	a1 f4       	brne	.+40     	; 0x388c <FLASH_Data_Storage+0x58>
    3864:	7c 01       	movw	r14, r24
    3866:	99 0f       	add	r25, r25
    3868:	00 0b       	sbc	r16, r16
    386a:	11 0b       	sbc	r17, r17
    386c:	0f 2e       	mov	r0, r31
    386e:	f0 e0       	ldi	r31, 0x00	; 0
    3870:	cf 2e       	mov	r12, r31
    3872:	f3 e0       	ldi	r31, 0x03	; 3
    3874:	df 2e       	mov	r13, r31
    3876:	f0 2d       	mov	r31, r0
    3878:	22 ec       	ldi	r18, 0xC2	; 194
    387a:	35 e0       	ldi	r19, 0x05	; 5
    387c:	40 e0       	ldi	r20, 0x00	; 0
    387e:	60 e0       	ldi	r22, 0x00	; 0
    3880:	70 e0       	ldi	r23, 0x00	; 0
    3882:	81 e0       	ldi	r24, 0x01	; 1
    3884:	90 e0       	ldi	r25, 0x00	; 0
    3886:	0e 94 26 1a 	call	0x344c	; 0x344c <Print_To_User>
    388a:	08 c0       	rjmp	.+16     	; 0x389c <FLASH_Data_Storage+0x68>
    388c:	01 96       	adiw	r24, 0x01	; 1
    388e:	02 c0       	rjmp	.+4      	; 0x3894 <FLASH_Data_Storage+0x60>
    3890:	80 e0       	ldi	r24, 0x00	; 0
    3892:	90 e0       	ldi	r25, 0x00	; 0
    3894:	8f 3f       	cpi	r24, 0xFF	; 255
    3896:	91 05       	cpc	r25, r1
    3898:	c9 f2       	breq	.-78     	; 0x384c <FLASH_Data_Storage+0x18>
    389a:	c0 f2       	brcs	.-80     	; 0x384c <FLASH_Data_Storage+0x18>
    389c:	21 97       	sbiw	r28, 0x01	; 1
    389e:	91 f4       	brne	.+36     	; 0x38c4 <FLASH_Data_Storage+0x90>
    38a0:	0b c0       	rjmp	.+22     	; 0x38b8 <FLASH_Data_Storage+0x84>
    38a2:	1e bc       	out	0x2e, r1	; 46
    38a4:	0d b4       	in	r0, 0x2d	; 45
    38a6:	07 fe       	sbrs	r0, 7
    38a8:	fd cf       	rjmp	.-6      	; 0x38a4 <FLASH_Data_Storage+0x70>
    38aa:	2e b5       	in	r18, 0x2e	; 46
    38ac:	fc 01       	movw	r30, r24
    38ae:	ef 5f       	subi	r30, 0xFF	; 255
    38b0:	fb 4f       	sbci	r31, 0xFB	; 251
    38b2:	20 83       	st	Z, r18
    38b4:	01 96       	adiw	r24, 0x01	; 1
    38b6:	02 c0       	rjmp	.+4      	; 0x38bc <FLASH_Data_Storage+0x88>
    38b8:	80 e0       	ldi	r24, 0x00	; 0
    38ba:	90 e0       	ldi	r25, 0x00	; 0
    38bc:	8f 3f       	cpi	r24, 0xFF	; 255
    38be:	91 05       	cpc	r25, r1
    38c0:	81 f3       	breq	.-32     	; 0x38a2 <FLASH_Data_Storage+0x6e>
    38c2:	78 f3       	brcs	.-34     	; 0x38a2 <FLASH_Data_Storage+0x6e>
    38c4:	df 91       	pop	r29
    38c6:	cf 91       	pop	r28
    38c8:	1f 91       	pop	r17
    38ca:	0f 91       	pop	r16
    38cc:	ff 90       	pop	r15
    38ce:	ef 90       	pop	r14
    38d0:	df 90       	pop	r13
    38d2:	cf 90       	pop	r12
    38d4:	08 95       	ret

Disassembly of section .text.FLASH_Read_From_Cache_x1:

00004098 <FLASH_Read_From_Cache_x1>:
    4098:	0e 94 a8 23 	call	0x4750	; 0x4750 <FLASH_NAND_CS_ENABLE>
    409c:	83 e0       	ldi	r24, 0x03	; 3
    409e:	8e bd       	out	0x2e, r24	; 46
    40a0:	0d b4       	in	r0, 0x2d	; 45
    40a2:	07 fe       	sbrs	r0, 7
    40a4:	fd cf       	rjmp	.-6      	; 0x40a0 <FLASH_Read_From_Cache_x1+0x8>
    40a6:	8e b5       	in	r24, 0x2e	; 46
    40a8:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    40ac:	00 c0       	rjmp	.+0      	; 0x40ae <FLASH_Read_From_Cache_x1+0x16>
    40ae:	00 c0       	rjmp	.+0      	; 0x40b0 <FLASH_Read_From_Cache_x1+0x18>
    40b0:	00 00       	nop
    40b2:	43 e0       	ldi	r20, 0x03	; 3
    40b4:	55 e0       	ldi	r21, 0x05	; 5
    40b6:	60 e8       	ldi	r22, 0x80	; 128
    40b8:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <s>
    40bc:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <s+0x1>
    40c0:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <FLASH_Column_Address>
    40c4:	1e bc       	out	0x2e, r1	; 46
    40c6:	0d b4       	in	r0, 0x2d	; 45
    40c8:	07 fe       	sbrs	r0, 7
    40ca:	fd cf       	rjmp	.-6      	; 0x40c6 <FLASH_Read_From_Cache_x1+0x2e>
    40cc:	8e b5       	in	r24, 0x2e	; 46
    40ce:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    40d2:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <s>
    40d6:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <s+0x1>
    40da:	0e 94 1a 1c 	call	0x3834	; 0x3834 <FLASH_Data_Storage>
    40de:	0e 94 ac 23 	call	0x4758	; 0x4758 <FLASH_NAND_CS_DISABLE>
    40e2:	08 95       	ret

Disassembly of section .text.FLASH_Status:

00003c3e <FLASH_Status>:
    3c3e:	cf 92       	push	r12
    3c40:	df 92       	push	r13
    3c42:	ef 92       	push	r14
    3c44:	ff 92       	push	r15
    3c46:	0f 93       	push	r16
    3c48:	0e 94 a8 23 	call	0x4750	; 0x4750 <FLASH_NAND_CS_ENABLE>
    3c4c:	8f e0       	ldi	r24, 0x0F	; 15
    3c4e:	8e bd       	out	0x2e, r24	; 46
    3c50:	0d b4       	in	r0, 0x2d	; 45
    3c52:	07 fe       	sbrs	r0, 7
    3c54:	fd cf       	rjmp	.-6      	; 0x3c50 <FLASH_Status+0x12>
    3c56:	8e b5       	in	r24, 0x2e	; 46
    3c58:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3c5c:	80 ec       	ldi	r24, 0xC0	; 192
    3c5e:	8e bd       	out	0x2e, r24	; 46
    3c60:	0d b4       	in	r0, 0x2d	; 45
    3c62:	07 fe       	sbrs	r0, 7
    3c64:	fd cf       	rjmp	.-6      	; 0x3c60 <FLASH_Status+0x22>
    3c66:	8e b5       	in	r24, 0x2e	; 46
    3c68:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3c6c:	1e bc       	out	0x2e, r1	; 46
    3c6e:	0d b4       	in	r0, 0x2d	; 45
    3c70:	07 fe       	sbrs	r0, 7
    3c72:	fd cf       	rjmp	.-6      	; 0x3c6e <FLASH_Status+0x30>
    3c74:	8e b5       	in	r24, 0x2e	; 46
    3c76:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3c7a:	8a e0       	ldi	r24, 0x0A	; 10
    3c7c:	95 e0       	ldi	r25, 0x05	; 5
    3c7e:	7c 01       	movw	r14, r24
    3c80:	20 e8       	ldi	r18, 0x80	; 128
    3c82:	02 2f       	mov	r16, r18
    3c84:	0f 2e       	mov	r0, r31
    3c86:	f0 e0       	ldi	r31, 0x00	; 0
    3c88:	cf 2e       	mov	r12, r31
    3c8a:	f3 e0       	ldi	r31, 0x03	; 3
    3c8c:	df 2e       	mov	r13, r31
    3c8e:	f0 2d       	mov	r31, r0
    3c90:	2c ed       	ldi	r18, 0xDC	; 220
    3c92:	35 e0       	ldi	r19, 0x05	; 5
    3c94:	40 e0       	ldi	r20, 0x00	; 0
    3c96:	60 e0       	ldi	r22, 0x00	; 0
    3c98:	70 e0       	ldi	r23, 0x00	; 0
    3c9a:	81 e0       	ldi	r24, 0x01	; 1
    3c9c:	90 e0       	ldi	r25, 0x00	; 0
    3c9e:	0e 94 26 1a 	call	0x344c	; 0x344c <Print_To_User>
    3ca2:	80 91 0a 05 	lds	r24, 0x050A	; 0x80050a <status>
    3ca6:	80 fd       	sbrc	r24, 0
    3ca8:	e1 cf       	rjmp	.-62     	; 0x3c6c <FLASH_Status+0x2e>
    3caa:	0e 94 ac 23 	call	0x4758	; 0x4758 <FLASH_NAND_CS_DISABLE>
    3cae:	0f 91       	pop	r16
    3cb0:	ff 90       	pop	r15
    3cb2:	ef 90       	pop	r14
    3cb4:	df 90       	pop	r13
    3cb6:	cf 90       	pop	r12
    3cb8:	08 95       	ret

Disassembly of section .text.FLASH_Program_Execute:

0000437c <FLASH_Program_Execute>:

void FLASH_Program_Execute() //new command to transfer data from cache to main array
{	
	FLASH_NAND_CS_ENABLE();
    437c:	0e 94 a8 23 	call	0x4750	; 0x4750 <FLASH_NAND_CS_ENABLE>
	
	//code below sends Program_Execute command with the starting address of the main array
	SPDR = PROGRAM_EXECUTE; //Sending Program Execute Command into SPI Data Register (SPDR)
    4380:	80 e1       	ldi	r24, 0x10	; 16
    4382:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1 << SPIF))); 
    4384:	0d b4       	in	r0, 0x2d	; 45
    4386:	07 fe       	sbrs	r0, 7
    4388:	fd cf       	rjmp	.-6      	; 0x4384 <FLASH_Program_Execute+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    438a:	8e b5       	in	r24, 0x2e	; 46
    438c:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
	
	//_delay_us(5);
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to write data to in MainArray
    4390:	43 e0       	ldi	r20, 0x03	; 3
    4392:	55 e0       	ldi	r21, 0x05	; 5
    4394:	60 e8       	ldi	r22, 0x80	; 128
    4396:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <s>
    439a:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <s+0x1>
    439e:	0e 94 d1 1a 	call	0x35a2	; 0x35a2 <FLASH_MainArray_Address>
	
	FLASH_NAND_CS_DISABLE();
    43a2:	0e 94 ac 23 	call	0x4758	; 0x4758 <FLASH_NAND_CS_DISABLE>
	
	//USART_Data("Program Execute \n");
	
	FLASH_Status(); //checks for the status of data transfer from cache to main array from program_execute command
    43a6:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <FLASH_Status>
    43aa:	08 95       	ret

Disassembly of section .text.FLASH_Page_Read:

000042dc <FLASH_Page_Read>:
}

void FLASH_Page_Read() //reads a single page data from Block/Page array to transfer to Cache register
{
	FLASH_NAND_CS_ENABLE();
    42dc:	0e 94 a8 23 	call	0x4750	; 0x4750 <FLASH_NAND_CS_ENABLE>
	
	SPDR = PAGE_READ; //Sending Page_Read Command into SPI Data Register (SPDR)
    42e0:	83 e1       	ldi	r24, 0x13	; 19
    42e2:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    42e4:	0d b4       	in	r0, 0x2d	; 45
    42e6:	07 fe       	sbrs	r0, 7
    42e8:	fd cf       	rjmp	.-6      	; 0x42e4 <FLASH_Page_Read+0x8>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    42ea:	8e b5       	in	r24, 0x2e	; 46
    42ec:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
	
	//_delay_us(5);
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to read data from in MainArray
    42f0:	43 e0       	ldi	r20, 0x03	; 3
    42f2:	55 e0       	ldi	r21, 0x05	; 5
    42f4:	60 e8       	ldi	r22, 0x80	; 128
    42f6:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <s>
    42fa:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <s+0x1>
    42fe:	0e 94 d1 1a 	call	0x35a2	; 0x35a2 <FLASH_MainArray_Address>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    4302:	00 00       	nop
	
	_delay_us(0.200);
	
	FLASH_NAND_CS_DISABLE();
    4304:	0e 94 ac 23 	call	0x4758	; 0x4758 <FLASH_NAND_CS_DISABLE>

	FLASH_Status(); //checks for the status of data transfer from main array to cache from page_read command
    4308:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <FLASH_Status>
	
	//USART_Data("Page Read \n");
	
	FLASH_Read_From_Cache_x1();
    430c:	0e 94 4c 20 	call	0x4098	; 0x4098 <FLASH_Read_From_Cache_x1>
    4310:	08 95       	ret

Disassembly of section .text.FLASH_Para_Pg:

00003ffc <FLASH_Para_Pg>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3ffc:	0e 94 a8 23 	call	0x4750	; 0x4750 <FLASH_NAND_CS_ENABLE>
    4000:	8f e1       	ldi	r24, 0x1F	; 31
    4002:	8e bd       	out	0x2e, r24	; 46
    4004:	0d b4       	in	r0, 0x2d	; 45
    4006:	07 fe       	sbrs	r0, 7
    4008:	fd cf       	rjmp	.-6      	; 0x4004 <FLASH_Para_Pg+0x8>
    400a:	80 eb       	ldi	r24, 0xB0	; 176
    400c:	8e bd       	out	0x2e, r24	; 46
    400e:	0d b4       	in	r0, 0x2d	; 45
    4010:	07 fe       	sbrs	r0, 7
    4012:	fd cf       	rjmp	.-6      	; 0x400e <FLASH_Para_Pg+0x12>
    4014:	80 e4       	ldi	r24, 0x40	; 64
    4016:	8e bd       	out	0x2e, r24	; 46
    4018:	0d b4       	in	r0, 0x2d	; 45
    401a:	07 fe       	sbrs	r0, 7
    401c:	fd cf       	rjmp	.-6      	; 0x4018 <FLASH_Para_Pg+0x1c>
    401e:	0e 94 ac 23 	call	0x4758	; 0x4758 <FLASH_NAND_CS_DISABLE>
    4022:	0e 94 6e 21 	call	0x42dc	; 0x42dc <FLASH_Page_Read>
    4026:	0e 94 a8 23 	call	0x4750	; 0x4750 <FLASH_NAND_CS_ENABLE>
    402a:	8f e1       	ldi	r24, 0x1F	; 31
    402c:	8e bd       	out	0x2e, r24	; 46
    402e:	0d b4       	in	r0, 0x2d	; 45
    4030:	07 fe       	sbrs	r0, 7
    4032:	fd cf       	rjmp	.-6      	; 0x402e <FLASH_Para_Pg+0x32>
    4034:	80 eb       	ldi	r24, 0xB0	; 176
    4036:	8e bd       	out	0x2e, r24	; 46
    4038:	0d b4       	in	r0, 0x2d	; 45
    403a:	07 fe       	sbrs	r0, 7
    403c:	fd cf       	rjmp	.-6      	; 0x4038 <FLASH_Para_Pg+0x3c>
    403e:	1e bc       	out	0x2e, r1	; 46
    4040:	0d b4       	in	r0, 0x2d	; 45
    4042:	07 fe       	sbrs	r0, 7
    4044:	fd cf       	rjmp	.-6      	; 0x4040 <FLASH_Para_Pg+0x44>
    4046:	0e 94 ac 23 	call	0x4758	; 0x4758 <FLASH_NAND_CS_DISABLE>
    404a:	08 95       	ret

Disassembly of section .text.FLASH_Block_Erase:

00004348 <FLASH_Block_Erase>:
	//USART_Data("Read from Cache: \n");
}

void FLASH_Block_Erase() //erases data from Flash Nand Memory at the block level
{
	FLASH_Write_Enable();
    4348:	0e 94 e5 22 	call	0x45ca	; 0x45ca <FLASH_Write_Enable>
	
	FLASH_NAND_CS_ENABLE();
    434c:	0e 94 a8 23 	call	0x4750	; 0x4750 <FLASH_NAND_CS_ENABLE>
	
	SPDR = BLOCK_ERASE; //Sending Block_Erase Command into SPI Data Register (SPDR)
    4350:	88 ed       	ldi	r24, 0xD8	; 216
    4352:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 << SPIF))); //waiting until serial transfer is complete
    4354:	0d b4       	in	r0, 0x2d	; 45
    4356:	07 fe       	sbrs	r0, 7
    4358:	fd cf       	rjmp	.-6      	; 0x4354 <FLASH_Block_Erase+0xc>
	status = SPDR; //makes sure to clear the SPIF flag in the 2560, useless byte
    435a:	8e b5       	in	r24, 0x2e	; 46
    435c:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
	
	FLASH_MainArray_Address(s, Byte_Address); //determines where to write/read data to in MainArray
    4360:	43 e0       	ldi	r20, 0x03	; 3
    4362:	55 e0       	ldi	r21, 0x05	; 5
    4364:	60 e8       	ldi	r22, 0x80	; 128
    4366:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <s>
    436a:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <s+0x1>
    436e:	0e 94 d1 1a 	call	0x35a2	; 0x35a2 <FLASH_MainArray_Address>

	FLASH_NAND_CS_DISABLE();
    4372:	0e 94 ac 23 	call	0x4758	; 0x4758 <FLASH_NAND_CS_DISABLE>
	
	FLASH_Status(); //checks for the status of data deletion on the block level from Block_Erase command
    4376:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <FLASH_Status>
    437a:	08 95       	ret

Disassembly of section .text.FLASH_Page_Program:

00003bba <FLASH_Page_Program>:
	FLASH_NAND_CS_DISABLE();

	//USART_Data("Random Program Load \n");

	FLASH_Program_Execute();
}
    3bba:	cf 93       	push	r28
    3bbc:	df 93       	push	r29
    3bbe:	0e 94 a4 21 	call	0x4348	; 0x4348 <FLASH_Block_Erase>
    3bc2:	0e 94 e5 22 	call	0x45ca	; 0x45ca <FLASH_Write_Enable>
    3bc6:	0e 94 a8 23 	call	0x4750	; 0x4750 <FLASH_NAND_CS_ENABLE>
    3bca:	82 e0       	ldi	r24, 0x02	; 2
    3bcc:	8e bd       	out	0x2e, r24	; 46
    3bce:	0d b4       	in	r0, 0x2d	; 45
    3bd0:	07 fe       	sbrs	r0, 7
    3bd2:	fd cf       	rjmp	.-6      	; 0x3bce <FLASH_Page_Program+0x14>
    3bd4:	8e b5       	in	r24, 0x2e	; 46
    3bd6:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3bda:	00 c0       	rjmp	.+0      	; 0x3bdc <FLASH_Page_Program+0x22>
    3bdc:	00 c0       	rjmp	.+0      	; 0x3bde <FLASH_Page_Program+0x24>
    3bde:	00 00       	nop
    3be0:	43 e0       	ldi	r20, 0x03	; 3
    3be2:	55 e0       	ldi	r21, 0x05	; 5
    3be4:	60 e8       	ldi	r22, 0x80	; 128
    3be6:	80 91 01 05 	lds	r24, 0x0501	; 0x800501 <s>
    3bea:	90 91 02 05 	lds	r25, 0x0502	; 0x800502 <s+0x1>
    3bee:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <FLASH_Column_Address>
    3bf2:	c0 e0       	ldi	r28, 0x00	; 0
    3bf4:	d0 e0       	ldi	r29, 0x00	; 0
    3bf6:	0c c0       	rjmp	.+24     	; 0x3c10 <FLASH_Page_Program+0x56>
    3bf8:	fe 01       	movw	r30, r28
    3bfa:	e0 50       	subi	r30, 0x00	; 0
    3bfc:	fe 4f       	sbci	r31, 0xFE	; 254
    3bfe:	80 81       	ld	r24, Z
    3c00:	8e bd       	out	0x2e, r24	; 46
    3c02:	0d b4       	in	r0, 0x2d	; 45
    3c04:	07 fe       	sbrs	r0, 7
    3c06:	fd cf       	rjmp	.-6      	; 0x3c02 <FLASH_Page_Program+0x48>
    3c08:	8e b5       	in	r24, 0x2e	; 46
    3c0a:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3c0e:	21 96       	adiw	r28, 0x01	; 1
    3c10:	60 e0       	ldi	r22, 0x00	; 0
    3c12:	72 e0       	ldi	r23, 0x02	; 2
    3c14:	80 e8       	ldi	r24, 0x80	; 128
    3c16:	0e 94 79 22 	call	0x44f2	; 0x44f2 <strlen>
    3c1a:	c8 17       	cp	r28, r24
    3c1c:	d9 07       	cpc	r29, r25
    3c1e:	60 f3       	brcs	.-40     	; 0x3bf8 <FLASH_Page_Program+0x3e>
    3c20:	8d e0       	ldi	r24, 0x0D	; 13
    3c22:	8e bd       	out	0x2e, r24	; 46
    3c24:	0d b4       	in	r0, 0x2d	; 45
    3c26:	07 fe       	sbrs	r0, 7
    3c28:	fd cf       	rjmp	.-6      	; 0x3c24 <FLASH_Page_Program+0x6a>
    3c2a:	8e b5       	in	r24, 0x2e	; 46
    3c2c:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <status>
    3c30:	0e 94 ac 23 	call	0x4758	; 0x4758 <FLASH_NAND_CS_DISABLE>
    3c34:	0e 94 be 21 	call	0x437c	; 0x437c <FLASH_Program_Execute>
    3c38:	df 91       	pop	r29
    3c3a:	cf 91       	pop	r28
    3c3c:	08 95       	ret

Disassembly of section .text.Page_Tester:

00003162 <Page_Tester>:
#include "../main.h"

#ifdef NAND_Flash_Formatter
 
void Page_Tester() //tests each page per block
{
    3162:	cf 92       	push	r12
    3164:	df 92       	push	r13
    3166:	ef 92       	push	r14
    3168:	ff 92       	push	r15
    316a:	0f 93       	push	r16
    316c:	cf 93       	push	r28
    316e:	df 93       	push	r29
	 //first obtain Columns and Block/Page addresses
	USART_Data("---Column Address--- 2 bytes \n");
    3170:	6d ee       	ldi	r22, 0xED	; 237
    3172:	75 e0       	ldi	r23, 0x05	; 5
    3174:	80 e0       	ldi	r24, 0x00	; 0
    3176:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
	COLUMN_BLOCK_PAGE_ADDRESSER(false); //obtain the column address
    317a:	80 e0       	ldi	r24, 0x00	; 0
    317c:	0e 94 2b 13 	call	0x2656	; 0x2656 <COLUMN_BLOCK_PAGE_ADDRESSER>

	USART_Data("---Block/Page Address--- 3 bytes \n");
    3180:	6c e0       	ldi	r22, 0x0C	; 12
    3182:	76 e0       	ldi	r23, 0x06	; 6
    3184:	80 e0       	ldi	r24, 0x00	; 0
    3186:	0e 94 26 20 	call	0x404c	; 0x404c <USART_Data>
	COLUMN_BLOCK_PAGE_ADDRESSER(true); //obtain the Block/Page address
    318a:	81 e0       	ldi	r24, 0x01	; 1
    318c:	0e 94 2b 13 	call	0x2656	; 0x2656 <COLUMN_BLOCK_PAGE_ADDRESSER>
		
	for (int i = 0; i < PAGES_PER_BLOCK; i++)
    3190:	c0 e0       	ldi	r28, 0x00	; 0
    3192:	d0 e0       	ldi	r29, 0x00	; 0
    3194:	3b c0       	rjmp	.+118    	; 0x320c <Page_Tester+0xaa>
	{
		CLEAR_ARR();
    3196:	0e 94 71 1f 	call	0x3ee2	; 0x3ee2 <CLEAR_ARR>
		FLASH_Page_Read();
    319a:	0e 94 6e 21 	call	0x42dc	; 0x42dc <FLASH_Page_Read>
		
		if (Byte_Address[4] == 0x40) //break loop if passed this point (x3F) is where all page bits are set to 1
    319e:	80 91 07 05 	lds	r24, 0x0507	; 0x800507 <Byte_Address+0x4>
    31a2:	80 34       	cpi	r24, 0x40	; 64
    31a4:	b1 f1       	breq	.+108    	; 0x3212 <Page_Tester+0xb0>
		{
			break;
		}
		
		if (data[0] != 0xFF)
    31a6:	80 91 01 04 	lds	r24, 0x0401	; 0x800401 <data>
    31aa:	8f 3f       	cpi	r24, 0xFF	; 255
    31ac:	a9 f0       	breq	.+42     	; 0x31d8 <Page_Tester+0x76>
		{
			Print_To_User(1, 4, "0x%02X This Page is marked bad \n", Byte_Address, status_feature);
    31ae:	83 e0       	ldi	r24, 0x03	; 3
    31b0:	95 e0       	ldi	r25, 0x05	; 5
    31b2:	7c 01       	movw	r14, r24
    31b4:	20 e8       	ldi	r18, 0x80	; 128
    31b6:	02 2f       	mov	r16, r18
    31b8:	0f 2e       	mov	r0, r31
    31ba:	f0 e0       	ldi	r31, 0x00	; 0
    31bc:	cf 2e       	mov	r12, r31
    31be:	f3 e0       	ldi	r31, 0x03	; 3
    31c0:	df 2e       	mov	r13, r31
    31c2:	f0 2d       	mov	r31, r0
    31c4:	2f e2       	ldi	r18, 0x2F	; 47
    31c6:	36 e0       	ldi	r19, 0x06	; 6
    31c8:	40 e0       	ldi	r20, 0x00	; 0
    31ca:	64 e0       	ldi	r22, 0x04	; 4
    31cc:	70 e0       	ldi	r23, 0x00	; 0
    31ce:	81 e0       	ldi	r24, 0x01	; 1
    31d0:	90 e0       	ldi	r25, 0x00	; 0
    31d2:	0e 94 26 1a 	call	0x344c	; 0x344c <Print_To_User>
    31d6:	14 c0       	rjmp	.+40     	; 0x3200 <Page_Tester+0x9e>
		}
		else
		{
			Print_To_User(1, 4, "0x%02X This Page is clean \n", Byte_Address, status_feature);
    31d8:	83 e0       	ldi	r24, 0x03	; 3
    31da:	95 e0       	ldi	r25, 0x05	; 5
    31dc:	7c 01       	movw	r14, r24
    31de:	20 e8       	ldi	r18, 0x80	; 128
    31e0:	02 2f       	mov	r16, r18
    31e2:	0f 2e       	mov	r0, r31
    31e4:	f0 e0       	ldi	r31, 0x00	; 0
    31e6:	cf 2e       	mov	r12, r31
    31e8:	f3 e0       	ldi	r31, 0x03	; 3
    31ea:	df 2e       	mov	r13, r31
    31ec:	f0 2d       	mov	r31, r0
    31ee:	20 e5       	ldi	r18, 0x50	; 80
    31f0:	36 e0       	ldi	r19, 0x06	; 6
    31f2:	40 e0       	ldi	r20, 0x00	; 0
    31f4:	64 e0       	ldi	r22, 0x04	; 4
    31f6:	70 e0       	ldi	r23, 0x00	; 0
    31f8:	81 e0       	ldi	r24, 0x01	; 1
    31fa:	90 e0       	ldi	r25, 0x00	; 0
    31fc:	0e 94 26 1a 	call	0x344c	; 0x344c <Print_To_User>
		}
		
		Byte_Address[4]++; //increment page hopefully...
    3200:	e3 e0       	ldi	r30, 0x03	; 3
    3202:	f5 e0       	ldi	r31, 0x05	; 5
    3204:	84 81       	ldd	r24, Z+4	; 0x04
    3206:	8f 5f       	subi	r24, 0xFF	; 255
    3208:	84 83       	std	Z+4, r24	; 0x04
	COLUMN_BLOCK_PAGE_ADDRESSER(false); //obtain the column address

	USART_Data("---Block/Page Address--- 3 bytes \n");
	COLUMN_BLOCK_PAGE_ADDRESSER(true); //obtain the Block/Page address
		
	for (int i = 0; i < PAGES_PER_BLOCK; i++)
    320a:	21 96       	adiw	r28, 0x01	; 1
    320c:	c0 34       	cpi	r28, 0x40	; 64
    320e:	d1 05       	cpc	r29, r1
    3210:	14 f2       	brlt	.-124    	; 0x3196 <Page_Tester+0x34>
			Print_To_User(1, 4, "0x%02X This Page is clean \n", Byte_Address, status_feature);
		}
		
		Byte_Address[4]++; //increment page hopefully...
	}
}
    3212:	df 91       	pop	r29
    3214:	cf 91       	pop	r28
    3216:	0f 91       	pop	r16
    3218:	ff 90       	pop	r15
    321a:	ef 90       	pop	r14
    321c:	df 90       	pop	r13
    321e:	cf 90       	pop	r12
    3220:	08 95       	ret

Disassembly of section .text.libgcc:

000046dc <__xload_1>:
    46dc:	57 fd       	sbrc	r21, 7
    46de:	03 c0       	rjmp	.+6      	; 0x46e6 <__xload_1+0xa>
    46e0:	5b bf       	out	0x3b, r21	; 59
    46e2:	67 91       	elpm	r22, Z+
    46e4:	08 95       	ret
    46e6:	60 81       	ld	r22, Z
    46e8:	08 95       	ret

Disassembly of section .text.__dummy_fini:

0000477e <_fini>:
    477e:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00004780 <__funcs_on_exit>:
    4780:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00004782 <__simulator_exit>:
    4782:	08 95       	ret

Disassembly of section .text.exit:

0000465a <exit>:
    465a:	ec 01       	movw	r28, r24
    465c:	0e 94 c0 23 	call	0x4780	; 0x4780 <__funcs_on_exit>
    4660:	0e 94 bf 23 	call	0x477e	; 0x477e <_fini>
    4664:	ce 01       	movw	r24, r28
    4666:	0e 94 c1 23 	call	0x4782	; 0x4782 <__simulator_exit>
    466a:	ce 01       	movw	r24, r28
    466c:	0e 94 bd 23 	call	0x477a	; 0x477a <_Exit>

Disassembly of section .text.__wrap_sprintf:

00004482 <_sprintf_cdnopuxX>:
    4482:	a0 e0       	ldi	r26, 0x00	; 0
    4484:	b0 e0       	ldi	r27, 0x00	; 0
    4486:	e7 e4       	ldi	r30, 0x47	; 71
    4488:	f2 e2       	ldi	r31, 0x22	; 34
    448a:	0c 94 47 21 	jmp	0x428e	; 0x428e <__prologue_saves__+0x20>
    448e:	9e 01       	movw	r18, r28
    4490:	25 5f       	subi	r18, 0xF5	; 245
    4492:	3f 4f       	sbci	r19, 0xFF	; 255
    4494:	48 85       	ldd	r20, Y+8	; 0x08
    4496:	59 85       	ldd	r21, Y+9	; 0x09
    4498:	6a 85       	ldd	r22, Y+10	; 0x0a
    449a:	8e 81       	ldd	r24, Y+6	; 0x06
    449c:	9f 81       	ldd	r25, Y+7	; 0x07
    449e:	0e 94 fe 22 	call	0x45fc	; 0x45fc <__vsprintf>
    44a2:	e2 e0       	ldi	r30, 0x02	; 2
    44a4:	0c 94 99 21 	jmp	0x4332	; 0x4332 <__epilogue_restores__+0x20>

Disassembly of section .text.__fmt_s:

00003098 <__fmt_s>:
    3098:	2f 92       	push	r2
    309a:	3f 92       	push	r3
    309c:	4f 92       	push	r4
    309e:	6f 92       	push	r6
    30a0:	7f 92       	push	r7
    30a2:	8f 92       	push	r8
    30a4:	af 92       	push	r10
    30a6:	bf 92       	push	r11
    30a8:	cf 92       	push	r12
    30aa:	df 92       	push	r13
    30ac:	ef 92       	push	r14
    30ae:	ff 92       	push	r15
    30b0:	0f 93       	push	r16
    30b2:	1f 93       	push	r17
    30b4:	cf 93       	push	r28
    30b6:	df 93       	push	r29
    30b8:	cd b7       	in	r28, 0x3d	; 61
    30ba:	de b7       	in	r29, 0x3e	; 62
    30bc:	27 97       	sbiw	r28, 0x07	; 7
    30be:	0f b6       	in	r0, 0x3f	; 63
    30c0:	f8 94       	cli
    30c2:	de bf       	out	0x3e, r29	; 62
    30c4:	0f be       	out	0x3f, r0	; 63
    30c6:	cd bf       	out	0x3d, r28	; 61
    30c8:	6c 01       	movw	r12, r24
    30ca:	7b 01       	movw	r14, r22
    30cc:	39 01       	movw	r6, r18
    30ce:	84 2e       	mov	r8, r20
    30d0:	98 01       	movw	r18, r16
    30d2:	85 eb       	ldi	r24, 0xB5	; 181
    30d4:	28 2e       	mov	r2, r24
    30d6:	86 e0       	ldi	r24, 0x06	; 6
    30d8:	38 2e       	mov	r3, r24
    30da:	80 e0       	ldi	r24, 0x00	; 0
    30dc:	48 2e       	mov	r4, r24
    30de:	87 e0       	ldi	r24, 0x07	; 7
    30e0:	f1 01       	movw	r30, r2
    30e2:	ae 01       	movw	r20, r28
    30e4:	4f 5f       	subi	r20, 0xFF	; 255
    30e6:	5f 4f       	sbci	r21, 0xFF	; 255
    30e8:	da 01       	movw	r26, r20
    30ea:	74 2d       	mov	r23, r4
    30ec:	0e 94 d7 22 	call	0x45ae	; 0x45ae <__movmemx_qi>
    30f0:	f7 01       	movw	r30, r14
    30f2:	02 81       	ldd	r16, Z+2	; 0x02
    30f4:	13 81       	ldd	r17, Z+3	; 0x03
    30f6:	a4 80       	ldd	r10, Z+4	; 0x04
    30f8:	b5 80       	ldd	r11, Z+5	; 0x05
    30fa:	e0 80       	ld	r14, Z
    30fc:	f1 80       	ldd	r15, Z+1	; 0x01
    30fe:	61 14       	cp	r6, r1
    3100:	71 04       	cpc	r7, r1
    3102:	81 04       	cpc	r8, r1
    3104:	19 f4       	brne	.+6      	; 0x310c <__fmt_s+0x74>
    3106:	3a 01       	movw	r6, r20
    3108:	f0 e8       	ldi	r31, 0x80	; 128
    310a:	8f 2e       	mov	r8, r31
    310c:	21 15       	cp	r18, r1
    310e:	31 05       	cpc	r19, r1
    3110:	29 f4       	brne	.+10     	; 0x311c <__fmt_s+0x84>
    3112:	88 2d       	mov	r24, r8
    3114:	b3 01       	movw	r22, r6
    3116:	0e 94 79 22 	call	0x44f2	; 0x44f2 <strlen>
    311a:	9c 01       	movw	r18, r24
    311c:	17 fd       	sbrc	r17, 7
    311e:	04 c0       	rjmp	.+8      	; 0x3128 <__fmt_s+0x90>
    3120:	02 17       	cp	r16, r18
    3122:	13 07       	cpc	r17, r19
    3124:	08 f4       	brcc	.+2      	; 0x3128 <__fmt_s+0x90>
    3126:	98 01       	movw	r18, r16
    3128:	85 01       	movw	r16, r10
    312a:	68 2d       	mov	r22, r8
    312c:	a3 01       	movw	r20, r6
    312e:	c6 01       	movw	r24, r12
    3130:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <__pad>
    3134:	27 96       	adiw	r28, 0x07	; 7
    3136:	0f b6       	in	r0, 0x3f	; 63
    3138:	f8 94       	cli
    313a:	de bf       	out	0x3e, r29	; 62
    313c:	0f be       	out	0x3f, r0	; 63
    313e:	cd bf       	out	0x3d, r28	; 61
    3140:	df 91       	pop	r29
    3142:	cf 91       	pop	r28
    3144:	1f 91       	pop	r17
    3146:	0f 91       	pop	r16
    3148:	ff 90       	pop	r15
    314a:	ef 90       	pop	r14
    314c:	df 90       	pop	r13
    314e:	cf 90       	pop	r12
    3150:	bf 90       	pop	r11
    3152:	af 90       	pop	r10
    3154:	8f 90       	pop	r8
    3156:	7f 90       	pop	r7
    3158:	6f 90       	pop	r6
    315a:	4f 90       	pop	r4
    315c:	3f 90       	pop	r3
    315e:	2f 90       	pop	r2
    3160:	08 95       	ret

Disassembly of section .text.__out:

00003e16 <__out>:
    3e16:	6f 92       	push	r6
    3e18:	7f 92       	push	r7
    3e1a:	8f 92       	push	r8
    3e1c:	cf 92       	push	r12
    3e1e:	df 92       	push	r13
    3e20:	ef 92       	push	r14
    3e22:	0f 93       	push	r16
    3e24:	1f 93       	push	r17
    3e26:	cf 93       	push	r28
    3e28:	df 93       	push	r29
    3e2a:	8c 01       	movw	r16, r24
    3e2c:	6a 01       	movw	r12, r20
    3e2e:	e6 2e       	mov	r14, r22
    3e30:	e9 01       	movw	r28, r18
    3e32:	3a 01       	movw	r6, r20
    3e34:	86 2e       	mov	r8, r22
    3e36:	62 0e       	add	r6, r18
    3e38:	73 1e       	adc	r7, r19
    3e3a:	81 1c       	adc	r8, r1
    3e3c:	37 fd       	sbrc	r19, 7
    3e3e:	8a 94       	dec	r8
    3e40:	c6 14       	cp	r12, r6
    3e42:	d7 04       	cpc	r13, r7
    3e44:	e8 04       	cpc	r14, r8
    3e46:	81 f0       	breq	.+32     	; 0x3e68 <__out+0x52>
    3e48:	f6 01       	movw	r30, r12
    3e4a:	5e 2d       	mov	r21, r14
    3e4c:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    3e50:	86 2f       	mov	r24, r22
    3e52:	b8 01       	movw	r22, r16
    3e54:	08 2e       	mov	r0, r24
    3e56:	00 0c       	add	r0, r0
    3e58:	99 0b       	sbc	r25, r25
    3e5a:	0e 94 09 1d 	call	0x3a12	; 0x3a12 <fputc>
    3e5e:	8f ef       	ldi	r24, 0xFF	; 255
    3e60:	c8 1a       	sub	r12, r24
    3e62:	d8 0a       	sbc	r13, r24
    3e64:	e8 0a       	sbc	r14, r24
    3e66:	ec cf       	rjmp	.-40     	; 0x3e40 <__out+0x2a>
    3e68:	ce 01       	movw	r24, r28
    3e6a:	df 91       	pop	r29
    3e6c:	cf 91       	pop	r28
    3e6e:	1f 91       	pop	r17
    3e70:	0f 91       	pop	r16
    3e72:	ef 90       	pop	r14
    3e74:	df 90       	pop	r13
    3e76:	cf 90       	pop	r12
    3e78:	8f 90       	pop	r8
    3e7a:	7f 90       	pop	r7
    3e7c:	6f 90       	pop	r6
    3e7e:	08 95       	ret

Disassembly of section .text.__pad:

00002b5e <__pad>:
    2b5e:	2f 92       	push	r2
    2b60:	3f 92       	push	r3
    2b62:	4f 92       	push	r4
    2b64:	6f 92       	push	r6
    2b66:	7f 92       	push	r7
    2b68:	8f 92       	push	r8
    2b6a:	af 92       	push	r10
    2b6c:	bf 92       	push	r11
    2b6e:	cf 92       	push	r12
    2b70:	df 92       	push	r13
    2b72:	ef 92       	push	r14
    2b74:	ff 92       	push	r15
    2b76:	0f 93       	push	r16
    2b78:	1f 93       	push	r17
    2b7a:	cf 93       	push	r28
    2b7c:	df 93       	push	r29
    2b7e:	cd b7       	in	r28, 0x3d	; 61
    2b80:	de b7       	in	r29, 0x3e	; 62
    2b82:	66 97       	sbiw	r28, 0x16	; 22
    2b84:	0f b6       	in	r0, 0x3f	; 63
    2b86:	f8 94       	cli
    2b88:	de bf       	out	0x3e, r29	; 62
    2b8a:	0f be       	out	0x3f, r0	; 63
    2b8c:	cd bf       	out	0x3d, r28	; 61
    2b8e:	5c 01       	movw	r10, r24
    2b90:	3a 01       	movw	r6, r20
    2b92:	86 2e       	mov	r8, r22
    2b94:	69 01       	movw	r12, r18
    2b96:	c7 01       	movw	r24, r14
    2b98:	81 70       	andi	r24, 0x01	; 1
    2b9a:	99 27       	eor	r25, r25
    2b9c:	9c 8b       	std	Y+20, r25	; 0x14
    2b9e:	8b 8b       	std	Y+19, r24	; 0x13
    2ba0:	e0 fc       	sbrc	r14, 0
    2ba2:	1d c0       	rjmp	.+58     	; 0x2bde <__pad+0x80>
    2ba4:	20 17       	cp	r18, r16
    2ba6:	31 07       	cpc	r19, r17
    2ba8:	d4 f4       	brge	.+52     	; 0x2bde <__pad+0x80>
    2baa:	78 01       	movw	r14, r16
    2bac:	ec 18       	sub	r14, r12
    2bae:	fd 08       	sbc	r15, r13
    2bb0:	fe 8a       	std	Y+22, r15	; 0x16
    2bb2:	ed 8a       	std	Y+21, r14	; 0x15
    2bb4:	a7 01       	movw	r20, r14
    2bb6:	91 e1       	ldi	r25, 0x11	; 17
    2bb8:	e9 16       	cp	r14, r25
    2bba:	f1 04       	cpc	r15, r1
    2bbc:	10 f0       	brcs	.+4      	; 0x2bc2 <__pad+0x64>
    2bbe:	40 e1       	ldi	r20, 0x10	; 16
    2bc0:	50 e0       	ldi	r21, 0x00	; 0
    2bc2:	60 e2       	ldi	r22, 0x20	; 32
    2bc4:	70 e0       	ldi	r23, 0x00	; 0
    2bc6:	ce 01       	movw	r24, r28
    2bc8:	01 96       	adiw	r24, 0x01	; 1
    2bca:	9a 8b       	std	Y+18, r25	; 0x12
    2bcc:	89 8b       	std	Y+17, r24	; 0x11
    2bce:	0e 94 38 23 	call	0x4670	; 0x4670 <memset>
    2bd2:	89 89       	ldd	r24, Y+17	; 0x11
    2bd4:	9a 89       	ldd	r25, Y+18	; 0x12
    2bd6:	1c 01       	movw	r2, r24
    2bd8:	20 e8       	ldi	r18, 0x80	; 128
    2bda:	42 2e       	mov	r4, r18
    2bdc:	0b c0       	rjmp	.+22     	; 0x2bf4 <__pad+0x96>
    2bde:	96 01       	movw	r18, r12
    2be0:	68 2d       	mov	r22, r8
    2be2:	a3 01       	movw	r20, r6
    2be4:	c5 01       	movw	r24, r10
    2be6:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <__out>
    2bea:	c0 16       	cp	r12, r16
    2bec:	d1 06       	cpc	r13, r17
    2bee:	ec f2       	brlt	.-70     	; 0x2baa <__pad+0x4c>
    2bf0:	c6 01       	movw	r24, r12
    2bf2:	25 c0       	rjmp	.+74     	; 0x2c3e <__pad+0xe0>
    2bf4:	90 e1       	ldi	r25, 0x10	; 16
    2bf6:	e9 16       	cp	r14, r25
    2bf8:	f1 04       	cpc	r15, r1
    2bfa:	58 f0       	brcs	.+22     	; 0x2c12 <__pad+0xb4>
    2bfc:	20 e1       	ldi	r18, 0x10	; 16
    2bfe:	30 e0       	ldi	r19, 0x00	; 0
    2c00:	64 2d       	mov	r22, r4
    2c02:	a1 01       	movw	r20, r2
    2c04:	c5 01       	movw	r24, r10
    2c06:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <__out>
    2c0a:	80 e1       	ldi	r24, 0x10	; 16
    2c0c:	e8 1a       	sub	r14, r24
    2c0e:	f1 08       	sbc	r15, r1
    2c10:	f1 cf       	rjmp	.-30     	; 0x2bf4 <__pad+0x96>
    2c12:	2d 89       	ldd	r18, Y+21	; 0x15
    2c14:	3e 89       	ldd	r19, Y+22	; 0x16
    2c16:	2f 70       	andi	r18, 0x0F	; 15
    2c18:	33 27       	eor	r19, r19
    2c1a:	89 89       	ldd	r24, Y+17	; 0x11
    2c1c:	9a 89       	ldd	r25, Y+18	; 0x12
    2c1e:	ac 01       	movw	r20, r24
    2c20:	60 e8       	ldi	r22, 0x80	; 128
    2c22:	c5 01       	movw	r24, r10
    2c24:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <__out>
    2c28:	8b 89       	ldd	r24, Y+19	; 0x13
    2c2a:	9c 89       	ldd	r25, Y+20	; 0x14
    2c2c:	89 2b       	or	r24, r25
    2c2e:	31 f4       	brne	.+12     	; 0x2c3c <__pad+0xde>
    2c30:	96 01       	movw	r18, r12
    2c32:	68 2d       	mov	r22, r8
    2c34:	a3 01       	movw	r20, r6
    2c36:	c5 01       	movw	r24, r10
    2c38:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <__out>
    2c3c:	c8 01       	movw	r24, r16
    2c3e:	66 96       	adiw	r28, 0x16	; 22
    2c40:	0f b6       	in	r0, 0x3f	; 63
    2c42:	f8 94       	cli
    2c44:	de bf       	out	0x3e, r29	; 62
    2c46:	0f be       	out	0x3f, r0	; 63
    2c48:	cd bf       	out	0x3d, r28	; 61
    2c4a:	df 91       	pop	r29
    2c4c:	cf 91       	pop	r28
    2c4e:	1f 91       	pop	r17
    2c50:	0f 91       	pop	r16
    2c52:	ff 90       	pop	r15
    2c54:	ef 90       	pop	r14
    2c56:	df 90       	pop	r13
    2c58:	cf 90       	pop	r12
    2c5a:	bf 90       	pop	r11
    2c5c:	af 90       	pop	r10
    2c5e:	8f 90       	pop	r8
    2c60:	7f 90       	pop	r7
    2c62:	6f 90       	pop	r6
    2c64:	4f 90       	pop	r4
    2c66:	3f 90       	pop	r3
    2c68:	2f 90       	pop	r2
    2c6a:	08 95       	ret

Disassembly of section .text.__fmt_state:

00003648 <__fmt_state>:
    3648:	cf 92       	push	r12
    364a:	df 92       	push	r13
    364c:	ef 92       	push	r14
    364e:	dc 01       	movw	r26, r24
    3650:	90 e0       	ldi	r25, 0x00	; 0
    3652:	29 2f       	mov	r18, r25
    3654:	30 e0       	ldi	r19, 0x00	; 0
    3656:	22 0f       	add	r18, r18
    3658:	33 1f       	adc	r19, r19
    365a:	69 01       	movw	r12, r18
    365c:	03 2e       	mov	r0, r19
    365e:	00 0c       	add	r0, r0
    3660:	ee 08       	sbc	r14, r14
    3662:	6e 2d       	mov	r22, r14
    3664:	a6 01       	movw	r20, r12
    3666:	44 59       	subi	r20, 0x94	; 148
    3668:	59 4f       	sbci	r21, 0xF9	; 249
    366a:	6f 4f       	sbci	r22, 0xFF	; 255
    366c:	6a 01       	movw	r12, r20
    366e:	e6 2e       	mov	r14, r22
    3670:	fa 01       	movw	r30, r20
    3672:	5e 2d       	mov	r21, r14
    3674:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    3678:	86 2f       	mov	r24, r22
    367a:	61 11       	cpse	r22, r1
    367c:	0e c0       	rjmp	.+28     	; 0x369a <__fmt_state+0x52>
    367e:	2f 5f       	subi	r18, 0xFF	; 255
    3680:	3f 4f       	sbci	r19, 0xFF	; 255
    3682:	03 2e       	mov	r0, r19
    3684:	00 0c       	add	r0, r0
    3686:	44 0b       	sbc	r20, r20
    3688:	24 59       	subi	r18, 0x94	; 148
    368a:	39 4f       	sbci	r19, 0xF9	; 249
    368c:	4f 4f       	sbci	r20, 0xFF	; 255
    368e:	f9 01       	movw	r30, r18
    3690:	54 2f       	mov	r21, r20
    3692:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    3696:	86 2f       	mov	r24, r22
    3698:	25 c0       	rjmp	.+74     	; 0x36e4 <__fmt_state+0x9c>
    369a:	cd 90       	ld	r12, X+
    369c:	dd 90       	ld	r13, X+
    369e:	ec 90       	ld	r14, X
    36a0:	12 97       	sbiw	r26, 0x02	; 2
    36a2:	f6 01       	movw	r30, r12
    36a4:	5e 2d       	mov	r21, r14
    36a6:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    36aa:	86 13       	cpse	r24, r22
    36ac:	16 c0       	rjmp	.+44     	; 0x36da <__fmt_state+0x92>
    36ae:	2f 5f       	subi	r18, 0xFF	; 255
    36b0:	3f 4f       	sbci	r19, 0xFF	; 255
    36b2:	03 2e       	mov	r0, r19
    36b4:	00 0c       	add	r0, r0
    36b6:	44 0b       	sbc	r20, r20
    36b8:	24 59       	subi	r18, 0x94	; 148
    36ba:	39 4f       	sbci	r19, 0xF9	; 249
    36bc:	4f 4f       	sbci	r20, 0xFF	; 255
    36be:	f9 01       	movw	r30, r18
    36c0:	54 2f       	mov	r21, r20
    36c2:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    36c6:	96 2f       	mov	r25, r22
    36c8:	5f ef       	ldi	r21, 0xFF	; 255
    36ca:	c5 1a       	sub	r12, r21
    36cc:	d5 0a       	sbc	r13, r21
    36ce:	e5 0a       	sbc	r14, r21
    36d0:	cd 92       	st	X+, r12
    36d2:	dd 92       	st	X+, r13
    36d4:	ec 92       	st	X, r14
    36d6:	12 97       	sbiw	r26, 0x02	; 2
    36d8:	01 c0       	rjmp	.+2      	; 0x36dc <__fmt_state+0x94>
    36da:	9f 5f       	subi	r25, 0xFF	; 255
    36dc:	9b 30       	cpi	r25, 0x0B	; 11
    36de:	08 f4       	brcc	.+2      	; 0x36e2 <__fmt_state+0x9a>
    36e0:	b8 cf       	rjmp	.-144    	; 0x3652 <__fmt_state+0xa>
    36e2:	89 2f       	mov	r24, r25
    36e4:	ef 90       	pop	r14
    36e6:	df 90       	pop	r13
    36e8:	cf 90       	pop	r12
    36ea:	08 95       	ret

Disassembly of section .text.__printf_core:

000006c2 <__printf_core>:
 6c2:	a3 ea       	ldi	r26, 0xA3	; 163
 6c4:	b0 e0       	ldi	r27, 0x00	; 0
 6c6:	e7 e6       	ldi	r30, 0x67	; 103
 6c8:	f3 e0       	ldi	r31, 0x03	; 3
 6ca:	0c 94 37 21 	jmp	0x426e	; 0x426e <__prologue_saves__>
 6ce:	4c 01       	movw	r8, r24
 6d0:	59 01       	movw	r10, r18
 6d2:	c7 56       	subi	r28, 0x67	; 103
 6d4:	df 4f       	sbci	r29, 0xFF	; 255
 6d6:	48 83       	st	Y, r20
 6d8:	59 83       	std	Y+1, r21	; 0x01
 6da:	6a 83       	std	Y+2, r22	; 0x02
 6dc:	c9 59       	subi	r28, 0x99	; 153
 6de:	d0 40       	sbci	r29, 0x00	; 0
 6e0:	21 2c       	mov	r2, r1
 6e2:	31 2c       	mov	r3, r1
 6e4:	6e 01       	movw	r12, r28
 6e6:	2b e8       	ldi	r18, 0x8B	; 139
 6e8:	c2 0e       	add	r12, r18
 6ea:	d1 1c       	adc	r13, r1
 6ec:	85 e2       	ldi	r24, 0x25	; 37
 6ee:	78 2e       	mov	r7, r24
 6f0:	26 01       	movw	r4, r12
 6f2:	30 e8       	ldi	r19, 0x80	; 128
 6f4:	63 2e       	mov	r6, r19
 6f6:	ce 01       	movw	r24, r28
 6f8:	8d 56       	subi	r24, 0x6D	; 109
 6fa:	9f 4f       	sbci	r25, 0xFF	; 255
 6fc:	c4 56       	subi	r28, 0x64	; 100
 6fe:	df 4f       	sbci	r29, 0xFF	; 255
 700:	99 83       	std	Y+1, r25	; 0x01
 702:	88 83       	st	Y, r24
 704:	cc 59       	subi	r28, 0x9C	; 156
 706:	d0 40       	sbci	r29, 0x00	; 0
 708:	9c 01       	movw	r18, r24
 70a:	40 e8       	ldi	r20, 0x80	; 128
 70c:	cf 55       	subi	r28, 0x5F	; 95
 70e:	df 4f       	sbci	r29, 0xFF	; 255
 710:	28 83       	st	Y, r18
 712:	39 83       	std	Y+1, r19	; 0x01
 714:	4a 83       	std	Y+2, r20	; 0x02
 716:	c1 5a       	subi	r28, 0xA1	; 161
 718:	d0 40       	sbci	r29, 0x00	; 0
 71a:	c7 56       	subi	r28, 0x67	; 103
 71c:	df 4f       	sbci	r29, 0xFF	; 255
 71e:	48 81       	ld	r20, Y
 720:	c9 59       	subi	r28, 0x99	; 153
 722:	d0 40       	sbci	r29, 0x00	; 0
 724:	c6 56       	subi	r28, 0x66	; 102
 726:	df 4f       	sbci	r29, 0xFF	; 255
 728:	b8 81       	ld	r27, Y
 72a:	ca 59       	subi	r28, 0x9A	; 154
 72c:	d0 40       	sbci	r29, 0x00	; 0
 72e:	c5 56       	subi	r28, 0x65	; 101
 730:	df 4f       	sbci	r29, 0xFF	; 255
 732:	78 81       	ld	r23, Y
 734:	cb 59       	subi	r28, 0x9B	; 155
 736:	d0 40       	sbci	r29, 0x00	; 0
 738:	e4 2f       	mov	r30, r20
 73a:	fb 2f       	mov	r31, r27
 73c:	57 2f       	mov	r21, r23
 73e:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
 742:	66 23       	and	r22, r22
 744:	09 f4       	brne	.+2      	; 0x748 <__printf_core+0x86>
 746:	d0 c3       	rjmp	.+1952   	; 0xee8 <__printf_core+0x826>
 748:	cf 57       	subi	r28, 0x7F	; 127
 74a:	df 4f       	sbci	r29, 0xFF	; 255
 74c:	19 82       	std	Y+1, r1	; 0x01
 74e:	18 82       	st	Y, r1
 750:	c1 58       	subi	r28, 0x81	; 129
 752:	d0 40       	sbci	r29, 0x00	; 0
 754:	8f ef       	ldi	r24, 0xFF	; 255
 756:	9f ef       	ldi	r25, 0xFF	; 255
 758:	cd 57       	subi	r28, 0x7D	; 125
 75a:	df 4f       	sbci	r29, 0xFF	; 255
 75c:	99 83       	std	Y+1, r25	; 0x01
 75e:	88 83       	st	Y, r24
 760:	c3 58       	subi	r28, 0x83	; 131
 762:	d0 40       	sbci	r29, 0x00	; 0
 764:	cb 57       	subi	r28, 0x7B	; 123
 766:	df 4f       	sbci	r29, 0xFF	; 255
 768:	19 82       	std	Y+1, r1	; 0x01
 76a:	18 82       	st	Y, r1
 76c:	c5 58       	subi	r28, 0x85	; 133
 76e:	d0 40       	sbci	r29, 0x00	; 0
 770:	e1 e0       	ldi	r30, 0x01	; 1
 772:	f0 e0       	ldi	r31, 0x00	; 0
 774:	ec 0f       	add	r30, r28
 776:	fd 1f       	adc	r31, r29
 778:	c9 57       	subi	r28, 0x79	; 121
 77a:	df 4f       	sbci	r29, 0xFF	; 255
 77c:	f9 83       	std	Y+1, r31	; 0x01
 77e:	e8 83       	st	Y, r30
 780:	c7 58       	subi	r28, 0x87	; 135
 782:	d0 40       	sbci	r29, 0x00	; 0
 784:	20 e8       	ldi	r18, 0x80	; 128
 786:	30 e0       	ldi	r19, 0x00	; 0
 788:	c7 57       	subi	r28, 0x77	; 119
 78a:	df 4f       	sbci	r29, 0xFF	; 255
 78c:	39 83       	std	Y+1, r19	; 0x01
 78e:	28 83       	st	Y, r18
 790:	c9 58       	subi	r28, 0x89	; 137
 792:	d0 40       	sbci	r29, 0x00	; 0
 794:	84 2f       	mov	r24, r20
 796:	9b 2f       	mov	r25, r27
 798:	a7 2f       	mov	r26, r23
 79a:	e1 2c       	mov	r14, r1
 79c:	f1 2c       	mov	r15, r1
 79e:	fc 01       	movw	r30, r24
 7a0:	5a 2f       	mov	r21, r26
 7a2:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
 7a6:	61 11       	cpse	r22, r1
 7a8:	1d c0       	rjmp	.+58     	; 0x7e4 <__printf_core+0x122>
 7aa:	e1 14       	cp	r14, r1
 7ac:	f1 04       	cpc	r15, r1
 7ae:	11 f1       	breq	.+68     	; 0x7f4 <__printf_core+0x132>
 7b0:	97 01       	movw	r18, r14
 7b2:	5b 2f       	mov	r21, r27
 7b4:	67 2f       	mov	r22, r23
 7b6:	c4 01       	movw	r24, r8
 7b8:	0e 94 0b 1f 	call	0x3e16	; 0x3e16 <__out>
 7bc:	c7 56       	subi	r28, 0x67	; 103
 7be:	df 4f       	sbci	r29, 0xFF	; 255
 7c0:	88 81       	ld	r24, Y
 7c2:	99 81       	ldd	r25, Y+1	; 0x01
 7c4:	aa 81       	ldd	r26, Y+2	; 0x02
 7c6:	c9 59       	subi	r28, 0x99	; 153
 7c8:	d0 40       	sbci	r29, 0x00	; 0
 7ca:	8e 0d       	add	r24, r14
 7cc:	9f 1d       	adc	r25, r15
 7ce:	a1 1d       	adc	r26, r1
 7d0:	f7 fc       	sbrc	r15, 7
 7d2:	aa 95       	dec	r26
 7d4:	c7 56       	subi	r28, 0x67	; 103
 7d6:	df 4f       	sbci	r29, 0xFF	; 255
 7d8:	88 83       	st	Y, r24
 7da:	99 83       	std	Y+1, r25	; 0x01
 7dc:	aa 83       	std	Y+2, r26	; 0x02
 7de:	c9 59       	subi	r28, 0x99	; 153
 7e0:	d0 40       	sbci	r29, 0x00	; 0
 7e2:	08 c0       	rjmp	.+16     	; 0x7f4 <__printf_core+0x132>
 7e4:	01 96       	adiw	r24, 0x01	; 1
 7e6:	a1 1d       	adc	r26, r1
 7e8:	65 32       	cpi	r22, 0x25	; 37
 7ea:	f9 f2       	breq	.-66     	; 0x7aa <__printf_core+0xe8>
 7ec:	3f ef       	ldi	r19, 0xFF	; 255
 7ee:	e3 1a       	sub	r14, r19
 7f0:	f3 0a       	sbc	r15, r19
 7f2:	d5 cf       	rjmp	.-86     	; 0x79e <__printf_core+0xdc>
 7f4:	c7 56       	subi	r28, 0x67	; 103
 7f6:	df 4f       	sbci	r29, 0xFF	; 255
 7f8:	88 81       	ld	r24, Y
 7fa:	99 81       	ldd	r25, Y+1	; 0x01
 7fc:	aa 81       	ldd	r26, Y+2	; 0x02
 7fe:	c9 59       	subi	r28, 0x99	; 153
 800:	d0 40       	sbci	r29, 0x00	; 0
 802:	fc 01       	movw	r30, r24
 804:	5a 2f       	mov	r21, r26
 806:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
 80a:	65 32       	cpi	r22, 0x25	; 37
 80c:	09 f0       	breq	.+2      	; 0x810 <__printf_core+0x14e>
 80e:	5a c3       	rjmp	.+1716   	; 0xec4 <__printf_core+0x802>
 810:	9c 01       	movw	r18, r24
 812:	4a 2f       	mov	r20, r26
 814:	2f 5f       	subi	r18, 0xFF	; 255
 816:	3f 4f       	sbci	r19, 0xFF	; 255
 818:	4f 4f       	sbci	r20, 0xFF	; 255
 81a:	c2 56       	subi	r28, 0x62	; 98
 81c:	df 4f       	sbci	r29, 0xFF	; 255
 81e:	28 83       	st	Y, r18
 820:	39 83       	std	Y+1, r19	; 0x01
 822:	4a 83       	std	Y+2, r20	; 0x02
 824:	ce 59       	subi	r28, 0x9E	; 158
 826:	d0 40       	sbci	r29, 0x00	; 0
 828:	c7 56       	subi	r28, 0x67	; 103
 82a:	df 4f       	sbci	r29, 0xFF	; 255
 82c:	28 83       	st	Y, r18
 82e:	39 83       	std	Y+1, r19	; 0x01
 830:	4a 83       	std	Y+2, r20	; 0x02
 832:	c9 59       	subi	r28, 0x99	; 153
 834:	d0 40       	sbci	r29, 0x00	; 0
 836:	c7 56       	subi	r28, 0x67	; 103
 838:	df 4f       	sbci	r29, 0xFF	; 255
 83a:	88 81       	ld	r24, Y
 83c:	99 81       	ldd	r25, Y+1	; 0x01
 83e:	aa 81       	ldd	r26, Y+2	; 0x02
 840:	c9 59       	subi	r28, 0x99	; 153
 842:	d0 40       	sbci	r29, 0x00	; 0
 844:	fc 01       	movw	r30, r24
 846:	5a 2f       	mov	r21, r26
 848:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
 84c:	6b 32       	cpi	r22, 0x2B	; 43
 84e:	41 f4       	brne	.+16     	; 0x860 <__printf_core+0x19e>
 850:	cf 57       	subi	r28, 0x7F	; 127
 852:	df 4f       	sbci	r29, 0xFF	; 255
 854:	28 81       	ld	r18, Y
 856:	39 81       	ldd	r19, Y+1	; 0x01
 858:	c1 58       	subi	r28, 0x81	; 129
 85a:	d0 40       	sbci	r29, 0x00	; 0
 85c:	24 60       	ori	r18, 0x04	; 4
 85e:	0b c0       	rjmp	.+22     	; 0x876 <__printf_core+0x1b4>
 860:	6c 32       	cpi	r22, 0x2C	; 44
 862:	cc f0       	brlt	.+50     	; 0x896 <__printf_core+0x1d4>
 864:	6d 32       	cpi	r22, 0x2D	; 45
 866:	59 f5       	brne	.+86     	; 0x8be <__printf_core+0x1fc>
 868:	cf 57       	subi	r28, 0x7F	; 127
 86a:	df 4f       	sbci	r29, 0xFF	; 255
 86c:	28 81       	ld	r18, Y
 86e:	39 81       	ldd	r19, Y+1	; 0x01
 870:	c1 58       	subi	r28, 0x81	; 129
 872:	d0 40       	sbci	r29, 0x00	; 0
 874:	21 60       	ori	r18, 0x01	; 1
 876:	cf 57       	subi	r28, 0x7F	; 127
 878:	df 4f       	sbci	r29, 0xFF	; 255
 87a:	39 83       	std	Y+1, r19	; 0x01
 87c:	28 83       	st	Y, r18
 87e:	c1 58       	subi	r28, 0x81	; 129
 880:	d0 40       	sbci	r29, 0x00	; 0
 882:	01 96       	adiw	r24, 0x01	; 1
 884:	a1 1d       	adc	r26, r1
 886:	c7 56       	subi	r28, 0x67	; 103
 888:	df 4f       	sbci	r29, 0xFF	; 255
 88a:	88 83       	st	Y, r24
 88c:	99 83       	std	Y+1, r25	; 0x01
 88e:	aa 83       	std	Y+2, r26	; 0x02
 890:	c9 59       	subi	r28, 0x99	; 153
 892:	d0 40       	sbci	r29, 0x00	; 0
 894:	d0 cf       	rjmp	.-96     	; 0x836 <__printf_core+0x174>
 896:	60 32       	cpi	r22, 0x20	; 32
 898:	41 f4       	brne	.+16     	; 0x8aa <__printf_core+0x1e8>
 89a:	cf 57       	subi	r28, 0x7F	; 127
 89c:	df 4f       	sbci	r29, 0xFF	; 255
 89e:	28 81       	ld	r18, Y
 8a0:	39 81       	ldd	r19, Y+1	; 0x01
 8a2:	c1 58       	subi	r28, 0x81	; 129
 8a4:	d0 40       	sbci	r29, 0x00	; 0
 8a6:	28 60       	ori	r18, 0x08	; 8
 8a8:	e6 cf       	rjmp	.-52     	; 0x876 <__printf_core+0x1b4>
 8aa:	63 32       	cpi	r22, 0x23	; 35
 8ac:	91 f4       	brne	.+36     	; 0x8d2 <__printf_core+0x210>
 8ae:	cf 57       	subi	r28, 0x7F	; 127
 8b0:	df 4f       	sbci	r29, 0xFF	; 255
 8b2:	28 81       	ld	r18, Y
 8b4:	39 81       	ldd	r19, Y+1	; 0x01
 8b6:	c1 58       	subi	r28, 0x81	; 129
 8b8:	d0 40       	sbci	r29, 0x00	; 0
 8ba:	20 61       	ori	r18, 0x10	; 16
 8bc:	dc cf       	rjmp	.-72     	; 0x876 <__printf_core+0x1b4>
 8be:	60 33       	cpi	r22, 0x30	; 48
 8c0:	41 f4       	brne	.+16     	; 0x8d2 <__printf_core+0x210>
 8c2:	cf 57       	subi	r28, 0x7F	; 127
 8c4:	df 4f       	sbci	r29, 0xFF	; 255
 8c6:	28 81       	ld	r18, Y
 8c8:	39 81       	ldd	r19, Y+1	; 0x01
 8ca:	c1 58       	subi	r28, 0x81	; 129
 8cc:	d0 40       	sbci	r29, 0x00	; 0
 8ce:	22 60       	ori	r18, 0x02	; 2
 8d0:	d2 cf       	rjmp	.-92     	; 0x876 <__printf_core+0x1b4>
 8d2:	6a 32       	cpi	r22, 0x2A	; 42
 8d4:	99 f5       	brne	.+102    	; 0x93c <__printf_core+0x27a>
 8d6:	01 96       	adiw	r24, 0x01	; 1
 8d8:	a1 1d       	adc	r26, r1
 8da:	c7 56       	subi	r28, 0x67	; 103
 8dc:	df 4f       	sbci	r29, 0xFF	; 255
 8de:	88 83       	st	Y, r24
 8e0:	99 83       	std	Y+1, r25	; 0x01
 8e2:	aa 83       	std	Y+2, r26	; 0x02
 8e4:	c9 59       	subi	r28, 0x99	; 153
 8e6:	d0 40       	sbci	r29, 0x00	; 0
 8e8:	d5 01       	movw	r26, r10
 8ea:	ed 91       	ld	r30, X+
 8ec:	fc 91       	ld	r31, X
 8ee:	11 97       	sbiw	r26, 0x01	; 1
 8f0:	cf 01       	movw	r24, r30
 8f2:	02 96       	adiw	r24, 0x02	; 2
 8f4:	8d 93       	st	X+, r24
 8f6:	9c 93       	st	X, r25
 8f8:	80 81       	ld	r24, Z
 8fa:	91 81       	ldd	r25, Z+1	; 0x01
 8fc:	cb 57       	subi	r28, 0x7B	; 123
 8fe:	df 4f       	sbci	r29, 0xFF	; 255
 900:	99 83       	std	Y+1, r25	; 0x01
 902:	88 83       	st	Y, r24
 904:	c5 58       	subi	r28, 0x85	; 133
 906:	d0 40       	sbci	r29, 0x00	; 0
 908:	97 ff       	sbrs	r25, 7
 90a:	3f c0       	rjmp	.+126    	; 0x98a <__printf_core+0x2c8>
 90c:	cf 57       	subi	r28, 0x7F	; 127
 90e:	df 4f       	sbci	r29, 0xFF	; 255
 910:	28 81       	ld	r18, Y
 912:	39 81       	ldd	r19, Y+1	; 0x01
 914:	c1 58       	subi	r28, 0x81	; 129
 916:	d0 40       	sbci	r29, 0x00	; 0
 918:	b1 e0       	ldi	r27, 0x01	; 1
 91a:	2b 27       	eor	r18, r27
 91c:	cf 57       	subi	r28, 0x7F	; 127
 91e:	df 4f       	sbci	r29, 0xFF	; 255
 920:	39 83       	std	Y+1, r19	; 0x01
 922:	28 83       	st	Y, r18
 924:	c1 58       	subi	r28, 0x81	; 129
 926:	d0 40       	sbci	r29, 0x00	; 0
 928:	91 95       	neg	r25
 92a:	81 95       	neg	r24
 92c:	91 09       	sbc	r25, r1
 92e:	cb 57       	subi	r28, 0x7B	; 123
 930:	df 4f       	sbci	r29, 0xFF	; 255
 932:	99 83       	std	Y+1, r25	; 0x01
 934:	88 83       	st	Y, r24
 936:	c5 58       	subi	r28, 0x85	; 133
 938:	d0 40       	sbci	r29, 0x00	; 0
 93a:	27 c0       	rjmp	.+78     	; 0x98a <__printf_core+0x2c8>
 93c:	bc 01       	movw	r22, r24
 93e:	8a 2f       	mov	r24, r26
 940:	0e 94 52 1d 	call	0x3aa4	; 0x3aa4 <atoi>
 944:	cb 57       	subi	r28, 0x7B	; 123
 946:	df 4f       	sbci	r29, 0xFF	; 255
 948:	99 83       	std	Y+1, r25	; 0x01
 94a:	88 83       	st	Y, r24
 94c:	c5 58       	subi	r28, 0x85	; 133
 94e:	d0 40       	sbci	r29, 0x00	; 0
 950:	c7 56       	subi	r28, 0x67	; 103
 952:	df 4f       	sbci	r29, 0xFF	; 255
 954:	88 81       	ld	r24, Y
 956:	99 81       	ldd	r25, Y+1	; 0x01
 958:	aa 81       	ldd	r26, Y+2	; 0x02
 95a:	c9 59       	subi	r28, 0x99	; 153
 95c:	d0 40       	sbci	r29, 0x00	; 0
 95e:	fc 01       	movw	r30, r24
 960:	5a 2f       	mov	r21, r26
 962:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
 966:	06 2e       	mov	r0, r22
 968:	00 0c       	add	r0, r0
 96a:	77 0b       	sbc	r23, r23
 96c:	60 53       	subi	r22, 0x30	; 48
 96e:	71 09       	sbc	r23, r1
 970:	6a 30       	cpi	r22, 0x0A	; 10
 972:	71 05       	cpc	r23, r1
 974:	50 f4       	brcc	.+20     	; 0x98a <__printf_core+0x2c8>
 976:	01 96       	adiw	r24, 0x01	; 1
 978:	a1 1d       	adc	r26, r1
 97a:	c7 56       	subi	r28, 0x67	; 103
 97c:	df 4f       	sbci	r29, 0xFF	; 255
 97e:	88 83       	st	Y, r24
 980:	99 83       	std	Y+1, r25	; 0x01
 982:	aa 83       	std	Y+2, r26	; 0x02
 984:	c9 59       	subi	r28, 0x99	; 153
 986:	d0 40       	sbci	r29, 0x00	; 0
 988:	e3 cf       	rjmp	.-58     	; 0x950 <__printf_core+0x28e>
 98a:	cf 57       	subi	r28, 0x7F	; 127
 98c:	df 4f       	sbci	r29, 0xFF	; 255
 98e:	88 81       	ld	r24, Y
 990:	99 81       	ldd	r25, Y+1	; 0x01
 992:	c1 58       	subi	r28, 0x81	; 129
 994:	d0 40       	sbci	r29, 0x00	; 0
 996:	80 ff       	sbrs	r24, 0
 998:	07 c0       	rjmp	.+14     	; 0x9a8 <__printf_core+0x2e6>
 99a:	8d 7f       	andi	r24, 0xFD	; 253
 99c:	cf 57       	subi	r28, 0x7F	; 127
 99e:	df 4f       	sbci	r29, 0xFF	; 255
 9a0:	99 83       	std	Y+1, r25	; 0x01
 9a2:	88 83       	st	Y, r24
 9a4:	c1 58       	subi	r28, 0x81	; 129
 9a6:	d0 40       	sbci	r29, 0x00	; 0
 9a8:	c7 56       	subi	r28, 0x67	; 103
 9aa:	df 4f       	sbci	r29, 0xFF	; 255
 9ac:	88 81       	ld	r24, Y
 9ae:	99 81       	ldd	r25, Y+1	; 0x01
 9b0:	aa 81       	ldd	r26, Y+2	; 0x02
 9b2:	c9 59       	subi	r28, 0x99	; 153
 9b4:	d0 40       	sbci	r29, 0x00	; 0
 9b6:	fc 01       	movw	r30, r24
 9b8:	5a 2f       	mov	r21, r26
 9ba:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
 9be:	6e 32       	cpi	r22, 0x2E	; 46
 9c0:	09 f0       	breq	.+2      	; 0x9c4 <__printf_core+0x302>
 9c2:	59 c0       	rjmp	.+178    	; 0xa76 <__printf_core+0x3b4>
 9c4:	cd 57       	subi	r28, 0x7D	; 125
 9c6:	df 4f       	sbci	r29, 0xFF	; 255
 9c8:	19 82       	std	Y+1, r1	; 0x01
 9ca:	18 82       	st	Y, r1
 9cc:	c3 58       	subi	r28, 0x83	; 131
 9ce:	d0 40       	sbci	r29, 0x00	; 0
 9d0:	9c 01       	movw	r18, r24
 9d2:	4a 2f       	mov	r20, r26
 9d4:	2f 5f       	subi	r18, 0xFF	; 255
 9d6:	3f 4f       	sbci	r19, 0xFF	; 255
 9d8:	4f 4f       	sbci	r20, 0xFF	; 255
 9da:	c7 56       	subi	r28, 0x67	; 103
 9dc:	df 4f       	sbci	r29, 0xFF	; 255
 9de:	28 83       	st	Y, r18
 9e0:	39 83       	std	Y+1, r19	; 0x01
 9e2:	4a 83       	std	Y+2, r20	; 0x02
 9e4:	c9 59       	subi	r28, 0x99	; 153
 9e6:	d0 40       	sbci	r29, 0x00	; 0
 9e8:	f9 01       	movw	r30, r18
 9ea:	54 2f       	mov	r21, r20
 9ec:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
 9f0:	6a 32       	cpi	r22, 0x2A	; 42
 9f2:	d1 f4       	brne	.+52     	; 0xa28 <__printf_core+0x366>
 9f4:	02 96       	adiw	r24, 0x02	; 2
 9f6:	a1 1d       	adc	r26, r1
 9f8:	c7 56       	subi	r28, 0x67	; 103
 9fa:	df 4f       	sbci	r29, 0xFF	; 255
 9fc:	88 83       	st	Y, r24
 9fe:	99 83       	std	Y+1, r25	; 0x01
 a00:	aa 83       	std	Y+2, r26	; 0x02
 a02:	c9 59       	subi	r28, 0x99	; 153
 a04:	d0 40       	sbci	r29, 0x00	; 0
 a06:	d5 01       	movw	r26, r10
 a08:	ed 91       	ld	r30, X+
 a0a:	fc 91       	ld	r31, X
 a0c:	11 97       	sbiw	r26, 0x01	; 1
 a0e:	cf 01       	movw	r24, r30
 a10:	02 96       	adiw	r24, 0x02	; 2
 a12:	8d 93       	st	X+, r24
 a14:	9c 93       	st	X, r25
 a16:	80 81       	ld	r24, Z
 a18:	91 81       	ldd	r25, Z+1	; 0x01
 a1a:	cd 57       	subi	r28, 0x7D	; 125
 a1c:	df 4f       	sbci	r29, 0xFF	; 255
 a1e:	99 83       	std	Y+1, r25	; 0x01
 a20:	88 83       	st	Y, r24
 a22:	c3 58       	subi	r28, 0x83	; 131
 a24:	d0 40       	sbci	r29, 0x00	; 0
 a26:	27 c0       	rjmp	.+78     	; 0xa76 <__printf_core+0x3b4>
 a28:	84 2f       	mov	r24, r20
 a2a:	b9 01       	movw	r22, r18
 a2c:	0e 94 52 1d 	call	0x3aa4	; 0x3aa4 <atoi>
 a30:	cd 57       	subi	r28, 0x7D	; 125
 a32:	df 4f       	sbci	r29, 0xFF	; 255
 a34:	99 83       	std	Y+1, r25	; 0x01
 a36:	88 83       	st	Y, r24
 a38:	c3 58       	subi	r28, 0x83	; 131
 a3a:	d0 40       	sbci	r29, 0x00	; 0
 a3c:	c7 56       	subi	r28, 0x67	; 103
 a3e:	df 4f       	sbci	r29, 0xFF	; 255
 a40:	88 81       	ld	r24, Y
 a42:	99 81       	ldd	r25, Y+1	; 0x01
 a44:	aa 81       	ldd	r26, Y+2	; 0x02
 a46:	c9 59       	subi	r28, 0x99	; 153
 a48:	d0 40       	sbci	r29, 0x00	; 0
 a4a:	fc 01       	movw	r30, r24
 a4c:	5a 2f       	mov	r21, r26
 a4e:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
 a52:	06 2e       	mov	r0, r22
 a54:	00 0c       	add	r0, r0
 a56:	77 0b       	sbc	r23, r23
 a58:	60 53       	subi	r22, 0x30	; 48
 a5a:	71 09       	sbc	r23, r1
 a5c:	6a 30       	cpi	r22, 0x0A	; 10
 a5e:	71 05       	cpc	r23, r1
 a60:	50 f4       	brcc	.+20     	; 0xa76 <__printf_core+0x3b4>
 a62:	01 96       	adiw	r24, 0x01	; 1
 a64:	a1 1d       	adc	r26, r1
 a66:	c7 56       	subi	r28, 0x67	; 103
 a68:	df 4f       	sbci	r29, 0xFF	; 255
 a6a:	88 83       	st	Y, r24
 a6c:	99 83       	std	Y+1, r25	; 0x01
 a6e:	aa 83       	std	Y+2, r26	; 0x02
 a70:	c9 59       	subi	r28, 0x99	; 153
 a72:	d0 40       	sbci	r29, 0x00	; 0
 a74:	e3 cf       	rjmp	.-58     	; 0xa3c <__printf_core+0x37a>
 a76:	ce 01       	movw	r24, r28
 a78:	87 56       	subi	r24, 0x67	; 103
 a7a:	9f 4f       	sbci	r25, 0xFF	; 255
 a7c:	0e 94 24 1b 	call	0x3648	; 0x3648 <__fmt_state>
 a80:	18 2f       	mov	r17, r24
 a82:	c7 56       	subi	r28, 0x67	; 103
 a84:	df 4f       	sbci	r29, 0xFF	; 255
 a86:	98 81       	ld	r25, Y
 a88:	c9 59       	subi	r28, 0x99	; 153
 a8a:	d0 40       	sbci	r29, 0x00	; 0
 a8c:	c6 56       	subi	r28, 0x66	; 102
 a8e:	df 4f       	sbci	r29, 0xFF	; 255
 a90:	88 81       	ld	r24, Y
 a92:	ca 59       	subi	r28, 0x9A	; 154
 a94:	d0 40       	sbci	r29, 0x00	; 0
 a96:	c5 56       	subi	r28, 0x65	; 101
 a98:	df 4f       	sbci	r29, 0xFF	; 255
 a9a:	58 81       	ld	r21, Y
 a9c:	cb 59       	subi	r28, 0x9B	; 155
 a9e:	d0 40       	sbci	r29, 0x00	; 0
 aa0:	e9 2f       	mov	r30, r25
 aa2:	f8 2f       	mov	r31, r24
 aa4:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
 aa8:	86 2f       	mov	r24, r22
 aaa:	66 0f       	add	r22, r22
 aac:	99 0b       	sbc	r25, r25
 aae:	0e 94 4a 23 	call	0x4694	; 0x4694 <tolower>
 ab2:	89 36       	cpi	r24, 0x69	; 105
 ab4:	91 05       	cpc	r25, r1
 ab6:	09 f4       	brne	.+2      	; 0xaba <__printf_core+0x3f8>
 ab8:	5b c0       	rjmp	.+182    	; 0xb70 <__printf_core+0x4ae>
 aba:	b4 f4       	brge	.+44     	; 0xae8 <__printf_core+0x426>
 abc:	83 36       	cpi	r24, 0x63	; 99
 abe:	91 05       	cpc	r25, r1
 ac0:	09 f4       	brne	.+2      	; 0xac4 <__printf_core+0x402>
 ac2:	69 c1       	rjmp	.+722    	; 0xd96 <__printf_core+0x6d4>
 ac4:	44 f4       	brge	.+16     	; 0xad6 <__printf_core+0x414>
 ac6:	85 32       	cpi	r24, 0x25	; 37
 ac8:	91 05       	cpc	r25, r1
 aca:	09 f4       	brne	.+2      	; 0xace <__printf_core+0x40c>
 acc:	a4 c1       	rjmp	.+840    	; 0xe16 <__printf_core+0x754>
 ace:	81 36       	cpi	r24, 0x61	; 97
 ad0:	91 05       	cpc	r25, r1
 ad2:	29 f1       	breq	.+74     	; 0xb1e <__printf_core+0x45c>
 ad4:	b6 c1       	rjmp	.+876    	; 0xe42 <__printf_core+0x780>
 ad6:	84 36       	cpi	r24, 0x64	; 100
 ad8:	91 05       	cpc	r25, r1
 ada:	09 f4       	brne	.+2      	; 0xade <__printf_core+0x41c>
 adc:	49 c0       	rjmp	.+146    	; 0xb70 <__printf_core+0x4ae>
 ade:	88 36       	cpi	r24, 0x68	; 104
 ae0:	91 05       	cpc	r25, r1
 ae2:	0c f4       	brge	.+2      	; 0xae6 <__printf_core+0x424>
 ae4:	2f c1       	rjmp	.+606    	; 0xd44 <__printf_core+0x682>
 ae6:	ad c1       	rjmp	.+858    	; 0xe42 <__printf_core+0x780>
 ae8:	80 37       	cpi	r24, 0x70	; 112
 aea:	91 05       	cpc	r25, r1
 aec:	09 f4       	brne	.+2      	; 0xaf0 <__printf_core+0x42e>
 aee:	cd c0       	rjmp	.+410    	; 0xc8a <__printf_core+0x5c8>
 af0:	4c f4       	brge	.+18     	; 0xb04 <__printf_core+0x442>
 af2:	8e 36       	cpi	r24, 0x6E	; 110
 af4:	91 05       	cpc	r25, r1
 af6:	09 f4       	brne	.+2      	; 0xafa <__printf_core+0x438>
 af8:	1b c1       	rjmp	.+566    	; 0xd30 <__printf_core+0x66e>
 afa:	8f 36       	cpi	r24, 0x6F	; 111
 afc:	91 05       	cpc	r25, r1
 afe:	09 f4       	brne	.+2      	; 0xb02 <__printf_core+0x440>
 b00:	7d c0       	rjmp	.+250    	; 0xbfc <__printf_core+0x53a>
 b02:	9f c1       	rjmp	.+830    	; 0xe42 <__printf_core+0x780>
 b04:	85 37       	cpi	r24, 0x75	; 117
 b06:	91 05       	cpc	r25, r1
 b08:	09 f4       	brne	.+2      	; 0xb0c <__printf_core+0x44a>
 b0a:	55 c0       	rjmp	.+170    	; 0xbb6 <__printf_core+0x4f4>
 b0c:	88 37       	cpi	r24, 0x78	; 120
 b0e:	91 05       	cpc	r25, r1
 b10:	09 f4       	brne	.+2      	; 0xb14 <__printf_core+0x452>
 b12:	97 c0       	rjmp	.+302    	; 0xc42 <__printf_core+0x580>
 b14:	83 37       	cpi	r24, 0x73	; 115
 b16:	91 05       	cpc	r25, r1
 b18:	09 f0       	breq	.+2      	; 0xb1c <__printf_core+0x45a>
 b1a:	93 c1       	rjmp	.+806    	; 0xe42 <__printf_core+0x780>
 b1c:	5b c1       	rjmp	.+694    	; 0xdd4 <__printf_core+0x712>
 b1e:	61 2f       	mov	r22, r17
 b20:	70 e0       	ldi	r23, 0x00	; 0
 b22:	a5 01       	movw	r20, r10
 b24:	c6 01       	movw	r24, r12
 b26:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__pop_float>
 b2a:	89 2b       	or	r24, r25
 b2c:	09 f4       	brne	.+2      	; 0xb30 <__printf_core+0x46e>
 b2e:	ba c1       	rjmp	.+884    	; 0xea4 <__printf_core+0x7e2>
 b30:	c7 56       	subi	r28, 0x67	; 103
 b32:	df 4f       	sbci	r29, 0xFF	; 255
 b34:	88 81       	ld	r24, Y
 b36:	99 81       	ldd	r25, Y+1	; 0x01
 b38:	aa 81       	ldd	r26, Y+2	; 0x02
 b3a:	c9 59       	subi	r28, 0x99	; 153
 b3c:	d0 40       	sbci	r29, 0x00	; 0
 b3e:	9c 01       	movw	r18, r24
 b40:	4a 2f       	mov	r20, r26
 b42:	2f 5f       	subi	r18, 0xFF	; 255
 b44:	3f 4f       	sbci	r19, 0xFF	; 255
 b46:	4f 4f       	sbci	r20, 0xFF	; 255
 b48:	c7 56       	subi	r28, 0x67	; 103
 b4a:	df 4f       	sbci	r29, 0xFF	; 255
 b4c:	28 83       	st	Y, r18
 b4e:	39 83       	std	Y+1, r19	; 0x01
 b50:	4a 83       	std	Y+2, r20	; 0x02
 b52:	c9 59       	subi	r28, 0x99	; 153
 b54:	d0 40       	sbci	r29, 0x00	; 0
 b56:	fc 01       	movw	r30, r24
 b58:	5a 2f       	mov	r21, r26
 b5a:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
 b5e:	26 2f       	mov	r18, r22
 b60:	a6 01       	movw	r20, r12
 b62:	be 01       	movw	r22, r28
 b64:	6f 57       	subi	r22, 0x7F	; 127
 b66:	7f 4f       	sbci	r23, 0xFF	; 255
 b68:	c4 01       	movw	r24, r8
 b6a:	0e 94 d7 0a 	call	0x15ae	; 0x15ae <__fmt_a>
 b6e:	97 c1       	rjmp	.+814    	; 0xe9e <__printf_core+0x7dc>
 b70:	61 2f       	mov	r22, r17
 b72:	70 e0       	ldi	r23, 0x00	; 0
 b74:	95 01       	movw	r18, r10
 b76:	41 e0       	ldi	r20, 0x01	; 1
 b78:	50 e0       	ldi	r21, 0x00	; 0
 b7a:	c6 01       	movw	r24, r12
 b7c:	0e 94 72 12 	call	0x24e4	; 0x24e4 <__pop_int>
 b80:	89 2b       	or	r24, r25
 b82:	09 f4       	brne	.+2      	; 0xb86 <__printf_core+0x4c4>
 b84:	8f c1       	rjmp	.+798    	; 0xea4 <__printf_core+0x7e2>
 b86:	c7 56       	subi	r28, 0x67	; 103
 b88:	df 4f       	sbci	r29, 0xFF	; 255
 b8a:	88 81       	ld	r24, Y
 b8c:	99 81       	ldd	r25, Y+1	; 0x01
 b8e:	aa 81       	ldd	r26, Y+2	; 0x02
 b90:	c9 59       	subi	r28, 0x99	; 153
 b92:	d0 40       	sbci	r29, 0x00	; 0
 b94:	01 96       	adiw	r24, 0x01	; 1
 b96:	a1 1d       	adc	r26, r1
 b98:	c7 56       	subi	r28, 0x67	; 103
 b9a:	df 4f       	sbci	r29, 0xFF	; 255
 b9c:	88 83       	st	Y, r24
 b9e:	99 83       	std	Y+1, r25	; 0x01
 ba0:	aa 83       	std	Y+2, r26	; 0x02
 ba2:	c9 59       	subi	r28, 0x99	; 153
 ba4:	d0 40       	sbci	r29, 0x00	; 0
 ba6:	a6 01       	movw	r20, r12
 ba8:	be 01       	movw	r22, r28
 baa:	6f 57       	subi	r22, 0x7F	; 127
 bac:	7f 4f       	sbci	r23, 0xFF	; 255
 bae:	c4 01       	movw	r24, r8
 bb0:	0e 94 b3 11 	call	0x2366	; 0x2366 <__fmt_d>
 bb4:	74 c1       	rjmp	.+744    	; 0xe9e <__printf_core+0x7dc>
 bb6:	61 2f       	mov	r22, r17
 bb8:	70 e0       	ldi	r23, 0x00	; 0
 bba:	95 01       	movw	r18, r10
 bbc:	40 e0       	ldi	r20, 0x00	; 0
 bbe:	50 e0       	ldi	r21, 0x00	; 0
 bc0:	c6 01       	movw	r24, r12
 bc2:	0e 94 72 12 	call	0x24e4	; 0x24e4 <__pop_int>
 bc6:	89 2b       	or	r24, r25
 bc8:	09 f4       	brne	.+2      	; 0xbcc <__printf_core+0x50a>
 bca:	6c c1       	rjmp	.+728    	; 0xea4 <__printf_core+0x7e2>
 bcc:	c7 56       	subi	r28, 0x67	; 103
 bce:	df 4f       	sbci	r29, 0xFF	; 255
 bd0:	88 81       	ld	r24, Y
 bd2:	99 81       	ldd	r25, Y+1	; 0x01
 bd4:	aa 81       	ldd	r26, Y+2	; 0x02
 bd6:	c9 59       	subi	r28, 0x99	; 153
 bd8:	d0 40       	sbci	r29, 0x00	; 0
 bda:	01 96       	adiw	r24, 0x01	; 1
 bdc:	a1 1d       	adc	r26, r1
 bde:	c7 56       	subi	r28, 0x67	; 103
 be0:	df 4f       	sbci	r29, 0xFF	; 255
 be2:	88 83       	st	Y, r24
 be4:	99 83       	std	Y+1, r25	; 0x01
 be6:	aa 83       	std	Y+2, r26	; 0x02
 be8:	c9 59       	subi	r28, 0x99	; 153
 bea:	d0 40       	sbci	r29, 0x00	; 0
 bec:	a6 01       	movw	r20, r12
 bee:	be 01       	movw	r22, r28
 bf0:	6f 57       	subi	r22, 0x7F	; 127
 bf2:	7f 4f       	sbci	r23, 0xFF	; 255
 bf4:	c4 01       	movw	r24, r8
 bf6:	0e 94 ce 19 	call	0x339c	; 0x339c <__fmt_u>
 bfa:	51 c1       	rjmp	.+674    	; 0xe9e <__printf_core+0x7dc>
 bfc:	61 2f       	mov	r22, r17
 bfe:	70 e0       	ldi	r23, 0x00	; 0
 c00:	95 01       	movw	r18, r10
 c02:	40 e0       	ldi	r20, 0x00	; 0
 c04:	50 e0       	ldi	r21, 0x00	; 0
 c06:	c6 01       	movw	r24, r12
 c08:	0e 94 72 12 	call	0x24e4	; 0x24e4 <__pop_int>
 c0c:	89 2b       	or	r24, r25
 c0e:	09 f4       	brne	.+2      	; 0xc12 <__printf_core+0x550>
 c10:	49 c1       	rjmp	.+658    	; 0xea4 <__printf_core+0x7e2>
 c12:	c7 56       	subi	r28, 0x67	; 103
 c14:	df 4f       	sbci	r29, 0xFF	; 255
 c16:	88 81       	ld	r24, Y
 c18:	99 81       	ldd	r25, Y+1	; 0x01
 c1a:	aa 81       	ldd	r26, Y+2	; 0x02
 c1c:	c9 59       	subi	r28, 0x99	; 153
 c1e:	d0 40       	sbci	r29, 0x00	; 0
 c20:	01 96       	adiw	r24, 0x01	; 1
 c22:	a1 1d       	adc	r26, r1
 c24:	c7 56       	subi	r28, 0x67	; 103
 c26:	df 4f       	sbci	r29, 0xFF	; 255
 c28:	88 83       	st	Y, r24
 c2a:	99 83       	std	Y+1, r25	; 0x01
 c2c:	aa 83       	std	Y+2, r26	; 0x02
 c2e:	c9 59       	subi	r28, 0x99	; 153
 c30:	d0 40       	sbci	r29, 0x00	; 0
 c32:	a6 01       	movw	r20, r12
 c34:	be 01       	movw	r22, r28
 c36:	6f 57       	subi	r22, 0x7F	; 127
 c38:	7f 4f       	sbci	r23, 0xFF	; 255
 c3a:	c4 01       	movw	r24, r8
 c3c:	0e 94 11 17 	call	0x2e22	; 0x2e22 <__fmt_o>
 c40:	2e c1       	rjmp	.+604    	; 0xe9e <__printf_core+0x7dc>
 c42:	61 2f       	mov	r22, r17
 c44:	70 e0       	ldi	r23, 0x00	; 0
 c46:	95 01       	movw	r18, r10
 c48:	40 e0       	ldi	r20, 0x00	; 0
 c4a:	50 e0       	ldi	r21, 0x00	; 0
 c4c:	c6 01       	movw	r24, r12
 c4e:	0e 94 72 12 	call	0x24e4	; 0x24e4 <__pop_int>
 c52:	89 2b       	or	r24, r25
 c54:	09 f4       	brne	.+2      	; 0xc58 <__printf_core+0x596>
 c56:	26 c1       	rjmp	.+588    	; 0xea4 <__printf_core+0x7e2>
 c58:	c7 56       	subi	r28, 0x67	; 103
 c5a:	df 4f       	sbci	r29, 0xFF	; 255
 c5c:	88 81       	ld	r24, Y
 c5e:	99 81       	ldd	r25, Y+1	; 0x01
 c60:	aa 81       	ldd	r26, Y+2	; 0x02
 c62:	c9 59       	subi	r28, 0x99	; 153
 c64:	d0 40       	sbci	r29, 0x00	; 0
 c66:	9c 01       	movw	r18, r24
 c68:	4a 2f       	mov	r20, r26
 c6a:	2f 5f       	subi	r18, 0xFF	; 255
 c6c:	3f 4f       	sbci	r19, 0xFF	; 255
 c6e:	4f 4f       	sbci	r20, 0xFF	; 255
 c70:	c7 56       	subi	r28, 0x67	; 103
 c72:	df 4f       	sbci	r29, 0xFF	; 255
 c74:	28 83       	st	Y, r18
 c76:	39 83       	std	Y+1, r19	; 0x01
 c78:	4a 83       	std	Y+2, r20	; 0x02
 c7a:	c9 59       	subi	r28, 0x99	; 153
 c7c:	d0 40       	sbci	r29, 0x00	; 0
 c7e:	fc 01       	movw	r30, r24
 c80:	5a 2f       	mov	r21, r26
 c82:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
 c86:	26 2f       	mov	r18, r22
 c88:	4b c0       	rjmp	.+150    	; 0xd20 <__printf_core+0x65e>
 c8a:	95 01       	movw	r18, r10
 c8c:	40 e0       	ldi	r20, 0x00	; 0
 c8e:	50 e0       	ldi	r21, 0x00	; 0
 c90:	60 ef       	ldi	r22, 0xF0	; 240
 c92:	70 e0       	ldi	r23, 0x00	; 0
 c94:	c6 01       	movw	r24, r12
 c96:	0e 94 72 12 	call	0x24e4	; 0x24e4 <__pop_int>
 c9a:	89 2b       	or	r24, r25
 c9c:	09 f4       	brne	.+2      	; 0xca0 <__printf_core+0x5de>
 c9e:	02 c1       	rjmp	.+516    	; 0xea4 <__printf_core+0x7e2>
 ca0:	c7 56       	subi	r28, 0x67	; 103
 ca2:	df 4f       	sbci	r29, 0xFF	; 255
 ca4:	88 81       	ld	r24, Y
 ca6:	99 81       	ldd	r25, Y+1	; 0x01
 ca8:	aa 81       	ldd	r26, Y+2	; 0x02
 caa:	c9 59       	subi	r28, 0x99	; 153
 cac:	d0 40       	sbci	r29, 0x00	; 0
 cae:	01 96       	adiw	r24, 0x01	; 1
 cb0:	a1 1d       	adc	r26, r1
 cb2:	c7 56       	subi	r28, 0x67	; 103
 cb4:	df 4f       	sbci	r29, 0xFF	; 255
 cb6:	88 83       	st	Y, r24
 cb8:	99 83       	std	Y+1, r25	; 0x01
 cba:	aa 83       	std	Y+2, r26	; 0x02
 cbc:	c9 59       	subi	r28, 0x99	; 153
 cbe:	d0 40       	sbci	r29, 0x00	; 0
 cc0:	86 e0       	ldi	r24, 0x06	; 6
 cc2:	2c eb       	ldi	r18, 0xBC	; 188
 cc4:	36 e0       	ldi	r19, 0x06	; 6
 cc6:	40 e0       	ldi	r20, 0x00	; 0
 cc8:	f9 01       	movw	r30, r18
 cca:	de 01       	movw	r26, r28
 ccc:	ad 56       	subi	r26, 0x6D	; 109
 cce:	bf 4f       	sbci	r27, 0xFF	; 255
 cd0:	74 2f       	mov	r23, r20
 cd2:	0e 94 d7 22 	call	0x45ae	; 0x45ae <__movmemx_qi>
 cd6:	d6 01       	movw	r26, r12
 cd8:	2c 91       	ld	r18, X
 cda:	11 96       	adiw	r26, 0x01	; 1
 cdc:	3c 91       	ld	r19, X
 cde:	11 97       	sbiw	r26, 0x01	; 1
 ce0:	12 96       	adiw	r26, 0x02	; 2
 ce2:	4c 91       	ld	r20, X
 ce4:	12 97       	sbiw	r26, 0x02	; 2
 ce6:	13 96       	adiw	r26, 0x03	; 3
 ce8:	5c 91       	ld	r21, X
 cea:	13 97       	sbiw	r26, 0x03	; 3
 cec:	14 96       	adiw	r26, 0x04	; 4
 cee:	6c 91       	ld	r22, X
 cf0:	14 97       	sbiw	r26, 0x04	; 4
 cf2:	15 96       	adiw	r26, 0x05	; 5
 cf4:	7c 91       	ld	r23, X
 cf6:	15 97       	sbiw	r26, 0x05	; 5
 cf8:	16 96       	adiw	r26, 0x06	; 6
 cfa:	8c 91       	ld	r24, X
 cfc:	16 97       	sbiw	r26, 0x06	; 6
 cfe:	17 96       	adiw	r26, 0x07	; 7
 d00:	9c 91       	ld	r25, X
 d02:	a0 e0       	ldi	r26, 0x00	; 0
 d04:	0e 94 0a 23 	call	0x4614	; 0x4614 <__cmpdi2_s8>
 d08:	51 f4       	brne	.+20     	; 0xd1e <__printf_core+0x65c>
 d0a:	00 e0       	ldi	r16, 0x00	; 0
 d0c:	10 e0       	ldi	r17, 0x00	; 0
 d0e:	cf 55       	subi	r28, 0x5F	; 95
 d10:	df 4f       	sbci	r29, 0xFF	; 255
 d12:	28 81       	ld	r18, Y
 d14:	39 81       	ldd	r19, Y+1	; 0x01
 d16:	4a 81       	ldd	r20, Y+2	; 0x02
 d18:	c1 5a       	subi	r28, 0xA1	; 161
 d1a:	d0 40       	sbci	r29, 0x00	; 0
 d1c:	ba c0       	rjmp	.+372    	; 0xe92 <__printf_core+0x7d0>
 d1e:	28 e7       	ldi	r18, 0x78	; 120
 d20:	a6 01       	movw	r20, r12
 d22:	be 01       	movw	r22, r28
 d24:	6f 57       	subi	r22, 0x7F	; 127
 d26:	7f 4f       	sbci	r23, 0xFF	; 255
 d28:	c4 01       	movw	r24, r8
 d2a:	0e 94 73 10 	call	0x20e6	; 0x20e6 <__fmt_x>
 d2e:	b7 c0       	rjmp	.+366    	; 0xe9e <__printf_core+0x7dc>
 d30:	61 2f       	mov	r22, r17
 d32:	70 e0       	ldi	r23, 0x00	; 0
 d34:	95 01       	movw	r18, r10
 d36:	a1 01       	movw	r20, r2
 d38:	4e 0d       	add	r20, r14
 d3a:	5f 1d       	adc	r21, r15
 d3c:	c6 01       	movw	r24, r12
 d3e:	0e 94 a5 16 	call	0x2d4a	; 0x2d4a <__pop_ptr>
 d42:	b0 c0       	rjmp	.+352    	; 0xea4 <__printf_core+0x7e2>
 d44:	61 2f       	mov	r22, r17
 d46:	70 e0       	ldi	r23, 0x00	; 0
 d48:	a5 01       	movw	r20, r10
 d4a:	c6 01       	movw	r24, r12
 d4c:	0e 94 da 20 	call	0x41b4	; 0x41b4 <__pop_float>
 d50:	89 2b       	or	r24, r25
 d52:	09 f4       	brne	.+2      	; 0xd56 <__printf_core+0x694>
 d54:	a7 c0       	rjmp	.+334    	; 0xea4 <__printf_core+0x7e2>
 d56:	c7 56       	subi	r28, 0x67	; 103
 d58:	df 4f       	sbci	r29, 0xFF	; 255
 d5a:	88 81       	ld	r24, Y
 d5c:	99 81       	ldd	r25, Y+1	; 0x01
 d5e:	aa 81       	ldd	r26, Y+2	; 0x02
 d60:	c9 59       	subi	r28, 0x99	; 153
 d62:	d0 40       	sbci	r29, 0x00	; 0
 d64:	9c 01       	movw	r18, r24
 d66:	4a 2f       	mov	r20, r26
 d68:	2f 5f       	subi	r18, 0xFF	; 255
 d6a:	3f 4f       	sbci	r19, 0xFF	; 255
 d6c:	4f 4f       	sbci	r20, 0xFF	; 255
 d6e:	c7 56       	subi	r28, 0x67	; 103
 d70:	df 4f       	sbci	r29, 0xFF	; 255
 d72:	28 83       	st	Y, r18
 d74:	39 83       	std	Y+1, r19	; 0x01
 d76:	4a 83       	std	Y+2, r20	; 0x02
 d78:	c9 59       	subi	r28, 0x99	; 153
 d7a:	d0 40       	sbci	r29, 0x00	; 0
 d7c:	fc 01       	movw	r30, r24
 d7e:	5a 2f       	mov	r21, r26
 d80:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
 d84:	26 2f       	mov	r18, r22
 d86:	a6 01       	movw	r20, r12
 d88:	be 01       	movw	r22, r28
 d8a:	6f 57       	subi	r22, 0x7F	; 127
 d8c:	7f 4f       	sbci	r23, 0xFF	; 255
 d8e:	c4 01       	movw	r24, r8
 d90:	0e 94 7a 07 	call	0xef4	; 0xef4 <__fmt_fp>
 d94:	84 c0       	rjmp	.+264    	; 0xe9e <__printf_core+0x7dc>
 d96:	10 38       	cpi	r17, 0x80	; 128
 d98:	09 f0       	breq	.+2      	; 0xd9c <__printf_core+0x6da>
 d9a:	84 c0       	rjmp	.+264    	; 0xea4 <__printf_core+0x7e2>
 d9c:	c7 56       	subi	r28, 0x67	; 103
 d9e:	df 4f       	sbci	r29, 0xFF	; 255
 da0:	88 81       	ld	r24, Y
 da2:	99 81       	ldd	r25, Y+1	; 0x01
 da4:	aa 81       	ldd	r26, Y+2	; 0x02
 da6:	c9 59       	subi	r28, 0x99	; 153
 da8:	d0 40       	sbci	r29, 0x00	; 0
 daa:	01 96       	adiw	r24, 0x01	; 1
 dac:	a1 1d       	adc	r26, r1
 dae:	c7 56       	subi	r28, 0x67	; 103
 db0:	df 4f       	sbci	r29, 0xFF	; 255
 db2:	88 83       	st	Y, r24
 db4:	99 83       	std	Y+1, r25	; 0x01
 db6:	aa 83       	std	Y+2, r26	; 0x02
 db8:	c9 59       	subi	r28, 0x99	; 153
 dba:	d0 40       	sbci	r29, 0x00	; 0
 dbc:	d5 01       	movw	r26, r10
 dbe:	ed 91       	ld	r30, X+
 dc0:	fc 91       	ld	r31, X
 dc2:	11 97       	sbiw	r26, 0x01	; 1
 dc4:	cf 01       	movw	r24, r30
 dc6:	02 96       	adiw	r24, 0x02	; 2
 dc8:	8d 93       	st	X+, r24
 dca:	9c 93       	st	X, r25
 dcc:	80 81       	ld	r24, Z
 dce:	f6 01       	movw	r30, r12
 dd0:	80 83       	st	Z, r24
 dd2:	5b c0       	rjmp	.+182    	; 0xe8a <__printf_core+0x7c8>
 dd4:	10 38       	cpi	r17, 0x80	; 128
 dd6:	09 f0       	breq	.+2      	; 0xdda <__printf_core+0x718>
 dd8:	65 c0       	rjmp	.+202    	; 0xea4 <__printf_core+0x7e2>
 dda:	c7 56       	subi	r28, 0x67	; 103
 ddc:	df 4f       	sbci	r29, 0xFF	; 255
 dde:	88 81       	ld	r24, Y
 de0:	99 81       	ldd	r25, Y+1	; 0x01
 de2:	aa 81       	ldd	r26, Y+2	; 0x02
 de4:	c9 59       	subi	r28, 0x99	; 153
 de6:	d0 40       	sbci	r29, 0x00	; 0
 de8:	01 96       	adiw	r24, 0x01	; 1
 dea:	a1 1d       	adc	r26, r1
 dec:	c7 56       	subi	r28, 0x67	; 103
 dee:	df 4f       	sbci	r29, 0xFF	; 255
 df0:	88 83       	st	Y, r24
 df2:	99 83       	std	Y+1, r25	; 0x01
 df4:	aa 83       	std	Y+2, r26	; 0x02
 df6:	c9 59       	subi	r28, 0x99	; 153
 df8:	d0 40       	sbci	r29, 0x00	; 0
 dfa:	d5 01       	movw	r26, r10
 dfc:	ed 91       	ld	r30, X+
 dfe:	fc 91       	ld	r31, X
 e00:	11 97       	sbiw	r26, 0x01	; 1
 e02:	cf 01       	movw	r24, r30
 e04:	03 96       	adiw	r24, 0x03	; 3
 e06:	8d 93       	st	X+, r24
 e08:	9c 93       	st	X, r25
 e0a:	20 81       	ld	r18, Z
 e0c:	31 81       	ldd	r19, Z+1	; 0x01
 e0e:	42 81       	ldd	r20, Z+2	; 0x02
 e10:	00 e0       	ldi	r16, 0x00	; 0
 e12:	10 e0       	ldi	r17, 0x00	; 0
 e14:	3e c0       	rjmp	.+124    	; 0xe92 <__printf_core+0x7d0>
 e16:	10 38       	cpi	r17, 0x80	; 128
 e18:	09 f0       	breq	.+2      	; 0xe1c <__printf_core+0x75a>
 e1a:	44 c0       	rjmp	.+136    	; 0xea4 <__printf_core+0x7e2>
 e1c:	c7 56       	subi	r28, 0x67	; 103
 e1e:	df 4f       	sbci	r29, 0xFF	; 255
 e20:	88 81       	ld	r24, Y
 e22:	99 81       	ldd	r25, Y+1	; 0x01
 e24:	aa 81       	ldd	r26, Y+2	; 0x02
 e26:	c9 59       	subi	r28, 0x99	; 153
 e28:	d0 40       	sbci	r29, 0x00	; 0
 e2a:	01 96       	adiw	r24, 0x01	; 1
 e2c:	a1 1d       	adc	r26, r1
 e2e:	c7 56       	subi	r28, 0x67	; 103
 e30:	df 4f       	sbci	r29, 0xFF	; 255
 e32:	88 83       	st	Y, r24
 e34:	99 83       	std	Y+1, r25	; 0x01
 e36:	aa 83       	std	Y+2, r26	; 0x02
 e38:	c9 59       	subi	r28, 0x99	; 153
 e3a:	d0 40       	sbci	r29, 0x00	; 0
 e3c:	f6 01       	movw	r30, r12
 e3e:	70 82       	st	Z, r7
 e40:	24 c0       	rjmp	.+72     	; 0xe8a <__printf_core+0x7c8>
 e42:	d6 01       	movw	r26, r12
 e44:	7c 92       	st	X, r7
 e46:	c2 56       	subi	r28, 0x62	; 98
 e48:	df 4f       	sbci	r29, 0xFF	; 255
 e4a:	28 81       	ld	r18, Y
 e4c:	39 81       	ldd	r19, Y+1	; 0x01
 e4e:	4a 81       	ldd	r20, Y+2	; 0x02
 e50:	ce 59       	subi	r28, 0x9E	; 158
 e52:	d0 40       	sbci	r29, 0x00	; 0
 e54:	c7 56       	subi	r28, 0x67	; 103
 e56:	df 4f       	sbci	r29, 0xFF	; 255
 e58:	28 83       	st	Y, r18
 e5a:	39 83       	std	Y+1, r19	; 0x01
 e5c:	4a 83       	std	Y+2, r20	; 0x02
 e5e:	c9 59       	subi	r28, 0x99	; 153
 e60:	d0 40       	sbci	r29, 0x00	; 0
 e62:	cf 57       	subi	r28, 0x7F	; 127
 e64:	df 4f       	sbci	r29, 0xFF	; 255
 e66:	19 82       	std	Y+1, r1	; 0x01
 e68:	18 82       	st	Y, r1
 e6a:	c1 58       	subi	r28, 0x81	; 129
 e6c:	d0 40       	sbci	r29, 0x00	; 0
 e6e:	cb 57       	subi	r28, 0x7B	; 123
 e70:	df 4f       	sbci	r29, 0xFF	; 255
 e72:	19 82       	std	Y+1, r1	; 0x01
 e74:	18 82       	st	Y, r1
 e76:	c5 58       	subi	r28, 0x85	; 133
 e78:	d0 40       	sbci	r29, 0x00	; 0
 e7a:	8f ef       	ldi	r24, 0xFF	; 255
 e7c:	9f ef       	ldi	r25, 0xFF	; 255
 e7e:	cd 57       	subi	r28, 0x7D	; 125
 e80:	df 4f       	sbci	r29, 0xFF	; 255
 e82:	99 83       	std	Y+1, r25	; 0x01
 e84:	88 83       	st	Y, r24
 e86:	c3 58       	subi	r28, 0x83	; 131
 e88:	d0 40       	sbci	r29, 0x00	; 0
 e8a:	01 e0       	ldi	r16, 0x01	; 1
 e8c:	10 e0       	ldi	r17, 0x00	; 0
 e8e:	46 2d       	mov	r20, r6
 e90:	92 01       	movw	r18, r4
 e92:	be 01       	movw	r22, r28
 e94:	6f 57       	subi	r22, 0x7F	; 127
 e96:	7f 4f       	sbci	r23, 0xFF	; 255
 e98:	c4 01       	movw	r24, r8
 e9a:	0e 94 4c 18 	call	0x3098	; 0x3098 <__fmt_s>
 e9e:	8e 0d       	add	r24, r14
 ea0:	9f 1d       	adc	r25, r15
 ea2:	11 c0       	rjmp	.+34     	; 0xec6 <__printf_core+0x804>
 ea4:	c7 56       	subi	r28, 0x67	; 103
 ea6:	df 4f       	sbci	r29, 0xFF	; 255
 ea8:	88 81       	ld	r24, Y
 eaa:	99 81       	ldd	r25, Y+1	; 0x01
 eac:	aa 81       	ldd	r26, Y+2	; 0x02
 eae:	c9 59       	subi	r28, 0x99	; 153
 eb0:	d0 40       	sbci	r29, 0x00	; 0
 eb2:	01 96       	adiw	r24, 0x01	; 1
 eb4:	a1 1d       	adc	r26, r1
 eb6:	c7 56       	subi	r28, 0x67	; 103
 eb8:	df 4f       	sbci	r29, 0xFF	; 255
 eba:	88 83       	st	Y, r24
 ebc:	99 83       	std	Y+1, r25	; 0x01
 ebe:	aa 83       	std	Y+2, r26	; 0x02
 ec0:	c9 59       	subi	r28, 0x99	; 153
 ec2:	d0 40       	sbci	r29, 0x00	; 0
 ec4:	c7 01       	movw	r24, r14
 ec6:	71 01       	movw	r14, r2
 ec8:	e8 0e       	add	r14, r24
 eca:	f9 1e       	adc	r15, r25
 ecc:	e2 14       	cp	r14, r2
 ece:	f3 04       	cpc	r15, r3
 ed0:	4c f4       	brge	.+18     	; 0xee4 <__printf_core+0x822>
 ed2:	8f e4       	ldi	r24, 0x4F	; 79
 ed4:	90 e0       	ldi	r25, 0x00	; 0
 ed6:	90 93 0c 05 	sts	0x050C, r25	; 0x80050c <__errno_val+0x1>
 eda:	80 93 0b 05 	sts	0x050B, r24	; 0x80050b <__errno_val>
 ede:	8f ef       	ldi	r24, 0xFF	; 255
 ee0:	9f ef       	ldi	r25, 0xFF	; 255
 ee2:	03 c0       	rjmp	.+6      	; 0xeea <__printf_core+0x828>
 ee4:	17 01       	movw	r2, r14
 ee6:	19 cc       	rjmp	.-1998   	; 0x71a <__printf_core+0x58>
 ee8:	c1 01       	movw	r24, r2
 eea:	cd 55       	subi	r28, 0x5D	; 93
 eec:	df 4f       	sbci	r29, 0xFF	; 255
 eee:	e2 e1       	ldi	r30, 0x12	; 18
 ef0:	0c 94 89 21 	jmp	0x4312	; 0x4312 <__epilogue_restores__>

Disassembly of section .text.fputc:

00003a12 <fputc>:
    3a12:	0f 93       	push	r16
    3a14:	1f 93       	push	r17
    3a16:	cf 93       	push	r28
    3a18:	df 93       	push	r29
    3a1a:	db 01       	movw	r26, r22
    3a1c:	2d 91       	ld	r18, X+
    3a1e:	3c 91       	ld	r19, X
    3a20:	11 97       	sbiw	r26, 0x01	; 1
    3a22:	30 ff       	sbrs	r19, 0
    3a24:	25 c0       	rjmp	.+74     	; 0x3a70 <fputc+0x5e>
    3a26:	17 96       	adiw	r26, 0x07	; 7
    3a28:	4d 91       	ld	r20, X+
    3a2a:	5c 91       	ld	r21, X
    3a2c:	18 97       	sbiw	r26, 0x08	; 8
    3a2e:	15 96       	adiw	r26, 0x05	; 5
    3a30:	2d 91       	ld	r18, X+
    3a32:	3c 91       	ld	r19, X
    3a34:	16 97       	sbiw	r26, 0x06	; 6
    3a36:	42 17       	cp	r20, r18
    3a38:	53 07       	cpc	r21, r19
    3a3a:	78 f4       	brcc	.+30     	; 0x3a5a <fputc+0x48>
    3a3c:	12 96       	adiw	r26, 0x02	; 2
    3a3e:	ed 91       	ld	r30, X+
    3a40:	fc 91       	ld	r31, X
    3a42:	13 97       	sbiw	r26, 0x03	; 3
    3a44:	80 83       	st	Z, r24
    3a46:	12 96       	adiw	r26, 0x02	; 2
    3a48:	2d 91       	ld	r18, X+
    3a4a:	3c 91       	ld	r19, X
    3a4c:	13 97       	sbiw	r26, 0x03	; 3
    3a4e:	2f 5f       	subi	r18, 0xFF	; 255
    3a50:	3f 4f       	sbci	r19, 0xFF	; 255
    3a52:	13 96       	adiw	r26, 0x03	; 3
    3a54:	3c 93       	st	X, r19
    3a56:	2e 93       	st	-X, r18
    3a58:	12 97       	sbiw	r26, 0x02	; 2
    3a5a:	17 96       	adiw	r26, 0x07	; 7
    3a5c:	2d 91       	ld	r18, X+
    3a5e:	3c 91       	ld	r19, X
    3a60:	18 97       	sbiw	r26, 0x08	; 8
    3a62:	2f 5f       	subi	r18, 0xFF	; 255
    3a64:	3f 4f       	sbci	r19, 0xFF	; 255
    3a66:	18 96       	adiw	r26, 0x08	; 8
    3a68:	3c 93       	st	X, r19
    3a6a:	2e 93       	st	-X, r18
    3a6c:	17 97       	sbiw	r26, 0x07	; 7
    3a6e:	15 c0       	rjmp	.+42     	; 0x3a9a <fputc+0x88>
    3a70:	1d 96       	adiw	r26, 0x0d	; 13
    3a72:	ed 91       	ld	r30, X+
    3a74:	fc 91       	ld	r31, X
    3a76:	1e 97       	sbiw	r26, 0x0e	; 14
    3a78:	30 97       	sbiw	r30, 0x00	; 0
    3a7a:	19 f4       	brne	.+6      	; 0x3a82 <fputc+0x70>
    3a7c:	8f ef       	ldi	r24, 0xFF	; 255
    3a7e:	9f ef       	ldi	r25, 0xFF	; 255
    3a80:	0c c0       	rjmp	.+24     	; 0x3a9a <fputc+0x88>
    3a82:	8b 01       	movw	r16, r22
    3a84:	ec 01       	movw	r28, r24
    3a86:	19 95       	eicall
    3a88:	89 2b       	or	r24, r25
    3a8a:	c1 f7       	brne	.-16     	; 0x3a7c <fputc+0x6a>
    3a8c:	f8 01       	movw	r30, r16
    3a8e:	87 81       	ldd	r24, Z+7	; 0x07
    3a90:	90 85       	ldd	r25, Z+8	; 0x08
    3a92:	01 96       	adiw	r24, 0x01	; 1
    3a94:	90 87       	std	Z+8, r25	; 0x08
    3a96:	87 83       	std	Z+7, r24	; 0x07
    3a98:	ce 01       	movw	r24, r28
    3a9a:	df 91       	pop	r29
    3a9c:	cf 91       	pop	r28
    3a9e:	1f 91       	pop	r17
    3aa0:	0f 91       	pop	r16
    3aa2:	08 95       	ret

Disassembly of section .text.__fmt_d:

00002366 <__fmt_d>:
    2366:	ad e0       	ldi	r26, 0x0D	; 13
    2368:	b0 e0       	ldi	r27, 0x00	; 0
    236a:	e9 eb       	ldi	r30, 0xB9	; 185
    236c:	f1 e1       	ldi	r31, 0x11	; 17
    236e:	0c 94 37 21 	jmp	0x426e	; 0x426e <__prologue_saves__>
    2372:	9a 87       	std	Y+10, r25	; 0x0a
    2374:	89 87       	std	Y+9, r24	; 0x09
    2376:	7c 83       	std	Y+4, r23	; 0x04
    2378:	6b 83       	std	Y+3, r22	; 0x03
    237a:	fa 01       	movw	r30, r20
    237c:	db 01       	movw	r26, r22
    237e:	12 96       	adiw	r26, 0x02	; 2
    2380:	cd 90       	ld	r12, X+
    2382:	dc 90       	ld	r13, X
    2384:	13 97       	sbiw	r26, 0x03	; 3
    2386:	14 96       	adiw	r26, 0x04	; 4
    2388:	8d 91       	ld	r24, X+
    238a:	9c 91       	ld	r25, X
    238c:	15 97       	sbiw	r26, 0x05	; 5
    238e:	9e 83       	std	Y+6, r25	; 0x06
    2390:	8d 83       	std	Y+5, r24	; 0x05
    2392:	ed 90       	ld	r14, X+
    2394:	fc 90       	ld	r15, X
    2396:	11 97       	sbiw	r26, 0x01	; 1
    2398:	fa 82       	std	Y+2, r15	; 0x02
    239a:	e9 82       	std	Y+1, r14	; 0x01
    239c:	16 96       	adiw	r26, 0x06	; 6
    239e:	0d 90       	ld	r0, X+
    23a0:	bc 91       	ld	r27, X
    23a2:	a0 2d       	mov	r26, r0
    23a4:	b8 87       	std	Y+8, r27	; 0x08
    23a6:	af 83       	std	Y+7, r26	; 0x07
    23a8:	20 80       	ld	r2, Z
    23aa:	31 80       	ldd	r3, Z+1	; 0x01
    23ac:	42 80       	ldd	r4, Z+2	; 0x02
    23ae:	53 80       	ldd	r5, Z+3	; 0x03
    23b0:	64 80       	ldd	r6, Z+4	; 0x04
    23b2:	75 80       	ldd	r7, Z+5	; 0x05
    23b4:	86 80       	ldd	r8, Z+6	; 0x06
    23b6:	97 80       	ldd	r9, Z+7	; 0x07
    23b8:	81 01       	movw	r16, r2
    23ba:	b4 2d       	mov	r27, r4
    23bc:	f5 2d       	mov	r31, r5
    23be:	e6 2d       	mov	r30, r6
    23c0:	7b 86       	std	Y+11, r7	; 0x0b
    23c2:	8c 86       	std	Y+12, r8	; 0x0c
    23c4:	9d 86       	std	Y+13, r9	; 0x0d
    23c6:	91 01       	movw	r18, r2
    23c8:	a2 01       	movw	r20, r4
    23ca:	b3 01       	movw	r22, r6
    23cc:	c4 01       	movw	r24, r8
    23ce:	a0 e0       	ldi	r26, 0x00	; 0
    23d0:	0e 94 0a 23 	call	0x4614	; 0x4614 <__cmpdi2_s8>
    23d4:	4c f4       	brge	.+18     	; 0x23e8 <__fmt_d+0x82>
    23d6:	0e 94 9c 22 	call	0x4538	; 0x4538 <__negdi2>
    23da:	89 01       	movw	r16, r18
    23dc:	b4 2f       	mov	r27, r20
    23de:	f5 2f       	mov	r31, r21
    23e0:	e6 2f       	mov	r30, r22
    23e2:	7b 87       	std	Y+11, r23	; 0x0b
    23e4:	8c 87       	std	Y+12, r24	; 0x0c
    23e6:	9d 87       	std	Y+13, r25	; 0x0d
    23e8:	d7 fc       	sbrc	r13, 7
    23ea:	04 c0       	rjmp	.+8      	; 0x23f4 <__fmt_d+0x8e>
    23ec:	e8 94       	clt
    23ee:	e1 f8       	bld	r14, 1
    23f0:	fa 82       	std	Y+2, r15	; 0x02
    23f2:	e9 82       	std	Y+1, r14	; 0x01
    23f4:	91 01       	movw	r18, r2
    23f6:	a2 01       	movw	r20, r4
    23f8:	b3 01       	movw	r22, r6
    23fa:	c4 01       	movw	r24, r8
    23fc:	a0 e0       	ldi	r26, 0x00	; 0
    23fe:	ed 80       	ldd	r14, Y+5	; 0x05
    2400:	fe 80       	ldd	r15, Y+6	; 0x06
    2402:	0e 94 0a 23 	call	0x4614	; 0x4614 <__cmpdi2_s8>
    2406:	1c f0       	brlt	.+6      	; 0x240e <__fmt_d+0xa8>
    2408:	89 81       	ldd	r24, Y+1	; 0x01
    240a:	82 ff       	sbrs	r24, 2
    240c:	04 c0       	rjmp	.+8      	; 0x2416 <__fmt_d+0xb0>
    240e:	81 e0       	ldi	r24, 0x01	; 1
    2410:	e8 1a       	sub	r14, r24
    2412:	f1 08       	sbc	r15, r1
    2414:	05 c0       	rjmp	.+10     	; 0x2420 <__fmt_d+0xba>
    2416:	83 ff       	sbrs	r24, 3
    2418:	03 c0       	rjmp	.+6      	; 0x2420 <__fmt_d+0xba>
    241a:	91 e0       	ldi	r25, 0x01	; 1
    241c:	e9 1a       	sub	r14, r25
    241e:	f1 08       	sbc	r15, r1
    2420:	ce 01       	movw	r24, r28
    2422:	01 96       	adiw	r24, 0x01	; 1
    2424:	5c 01       	movw	r10, r24
    2426:	8a e0       	ldi	r24, 0x0A	; 10
    2428:	c8 2e       	mov	r12, r24
    242a:	d1 2c       	mov	r13, r1
    242c:	2b 2f       	mov	r18, r27
    242e:	3f 2f       	mov	r19, r31
    2430:	4e 2f       	mov	r20, r30
    2432:	5b 85       	ldd	r21, Y+11	; 0x0b
    2434:	6c 85       	ldd	r22, Y+12	; 0x0c
    2436:	7d 85       	ldd	r23, Y+13	; 0x0d
    2438:	8b 81       	ldd	r24, Y+3	; 0x03
    243a:	9c 81       	ldd	r25, Y+4	; 0x04
    243c:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <__cvt_u>
    2440:	fc 01       	movw	r30, r24
    2442:	91 01       	movw	r18, r2
    2444:	a2 01       	movw	r20, r4
    2446:	b3 01       	movw	r22, r6
    2448:	c4 01       	movw	r24, r8
    244a:	a0 e0       	ldi	r26, 0x00	; 0
    244c:	0e 94 0a 23 	call	0x4614	; 0x4614 <__cmpdi2_s8>
    2450:	1c f0       	brlt	.+6      	; 0x2458 <__fmt_d+0xf2>
    2452:	89 81       	ldd	r24, Y+1	; 0x01
    2454:	82 ff       	sbrs	r24, 2
    2456:	12 c0       	rjmp	.+36     	; 0x247c <__fmt_d+0x116>
    2458:	31 97       	sbiw	r30, 0x01	; 1
    245a:	0f 81       	ldd	r16, Y+7	; 0x07
    245c:	18 85       	ldd	r17, Y+8	; 0x08
    245e:	0e 0f       	add	r16, r30
    2460:	1f 1f       	adc	r17, r31
    2462:	91 01       	movw	r18, r2
    2464:	a2 01       	movw	r20, r4
    2466:	b3 01       	movw	r22, r6
    2468:	c4 01       	movw	r24, r8
    246a:	a0 e0       	ldi	r26, 0x00	; 0
    246c:	0e 94 0a 23 	call	0x4614	; 0x4614 <__cmpdi2_s8>
    2470:	14 f0       	brlt	.+4      	; 0x2476 <__fmt_d+0x110>
    2472:	8b e2       	ldi	r24, 0x2B	; 43
    2474:	01 c0       	rjmp	.+2      	; 0x2478 <__fmt_d+0x112>
    2476:	8d e2       	ldi	r24, 0x2D	; 45
    2478:	d8 01       	movw	r26, r16
    247a:	08 c0       	rjmp	.+16     	; 0x248c <__fmt_d+0x126>
    247c:	83 ff       	sbrs	r24, 3
    247e:	07 c0       	rjmp	.+14     	; 0x248e <__fmt_d+0x128>
    2480:	31 97       	sbiw	r30, 0x01	; 1
    2482:	af 81       	ldd	r26, Y+7	; 0x07
    2484:	b8 85       	ldd	r27, Y+8	; 0x08
    2486:	ae 0f       	add	r26, r30
    2488:	bf 1f       	adc	r27, r31
    248a:	80 e2       	ldi	r24, 0x20	; 32
    248c:	8c 93       	st	X, r24
    248e:	e9 80       	ldd	r14, Y+1	; 0x01
    2490:	fa 80       	ldd	r15, Y+2	; 0x02
    2492:	ab 81       	ldd	r26, Y+3	; 0x03
    2494:	bc 81       	ldd	r27, Y+4	; 0x04
    2496:	18 96       	adiw	r26, 0x08	; 8
    2498:	2d 91       	ld	r18, X+
    249a:	3c 91       	ld	r19, X
    249c:	19 97       	sbiw	r26, 0x09	; 9
    249e:	21 50       	subi	r18, 0x01	; 1
    24a0:	31 09       	sbc	r19, r1
    24a2:	2e 1b       	sub	r18, r30
    24a4:	3f 0b       	sbc	r19, r31
    24a6:	8f 81       	ldd	r24, Y+7	; 0x07
    24a8:	98 85       	ldd	r25, Y+8	; 0x08
    24aa:	e8 0f       	add	r30, r24
    24ac:	f9 1f       	adc	r31, r25
    24ae:	af 01       	movw	r20, r30
    24b0:	60 e8       	ldi	r22, 0x80	; 128
    24b2:	0d 81       	ldd	r16, Y+5	; 0x05
    24b4:	1e 81       	ldd	r17, Y+6	; 0x06
    24b6:	89 85       	ldd	r24, Y+9	; 0x09
    24b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    24ba:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <__pad>
    24be:	9c 01       	movw	r18, r24
    24c0:	a9 85       	ldd	r26, Y+9	; 0x09
    24c2:	ba 85       	ldd	r27, Y+10	; 0x0a
    24c4:	8d 91       	ld	r24, X+
    24c6:	9c 91       	ld	r25, X
    24c8:	90 ff       	sbrs	r25, 0
    24ca:	07 c0       	rjmp	.+14     	; 0x24da <__fmt_d+0x174>
    24cc:	eb 81       	ldd	r30, Y+3	; 0x03
    24ce:	fc 81       	ldd	r31, Y+4	; 0x04
    24d0:	82 81       	ldd	r24, Z+2	; 0x02
    24d2:	93 81       	ldd	r25, Z+3	; 0x03
    24d4:	82 17       	cp	r24, r18
    24d6:	93 07       	cpc	r25, r19
    24d8:	0c f4       	brge	.+2      	; 0x24dc <__fmt_d+0x176>
    24da:	c9 01       	movw	r24, r18
    24dc:	2d 96       	adiw	r28, 0x0d	; 13
    24de:	e2 e1       	ldi	r30, 0x12	; 18
    24e0:	0c 94 89 21 	jmp	0x4312	; 0x4312 <__epilogue_restores__>

Disassembly of section .text.__fmt_o:

00002e22 <__fmt_o>:
    2e22:	a2 e0       	ldi	r26, 0x02	; 2
    2e24:	b0 e0       	ldi	r27, 0x00	; 0
    2e26:	e7 e1       	ldi	r30, 0x17	; 23
    2e28:	f7 e1       	ldi	r31, 0x17	; 23
    2e2a:	0c 94 37 21 	jmp	0x426e	; 0x426e <__prologue_saves__>
    2e2e:	1c 01       	movw	r2, r24
    2e30:	4b 01       	movw	r8, r22
    2e32:	fa 01       	movw	r30, r20
    2e34:	db 01       	movw	r26, r22
    2e36:	12 96       	adiw	r26, 0x02	; 2
    2e38:	2d 91       	ld	r18, X+
    2e3a:	3c 91       	ld	r19, X
    2e3c:	13 97       	sbiw	r26, 0x03	; 3
    2e3e:	14 96       	adiw	r26, 0x04	; 4
    2e40:	4d 90       	ld	r4, X+
    2e42:	5c 90       	ld	r5, X
    2e44:	15 97       	sbiw	r26, 0x05	; 5
    2e46:	8d 91       	ld	r24, X+
    2e48:	9c 91       	ld	r25, X
    2e4a:	11 97       	sbiw	r26, 0x01	; 1
    2e4c:	9a 83       	std	Y+2, r25	; 0x02
    2e4e:	89 83       	std	Y+1, r24	; 0x01
    2e50:	16 96       	adiw	r26, 0x06	; 6
    2e52:	6d 90       	ld	r6, X+
    2e54:	7c 90       	ld	r7, X
    2e56:	17 97       	sbiw	r26, 0x07	; 7
    2e58:	37 fd       	sbrc	r19, 7
    2e5a:	03 c0       	rjmp	.+6      	; 0x2e62 <__fmt_o+0x40>
    2e5c:	8d 7f       	andi	r24, 0xFD	; 253
    2e5e:	9a 83       	std	Y+2, r25	; 0x02
    2e60:	89 83       	std	Y+1, r24	; 0x01
    2e62:	00 81       	ld	r16, Z
    2e64:	11 81       	ldd	r17, Z+1	; 0x01
    2e66:	22 81       	ldd	r18, Z+2	; 0x02
    2e68:	33 81       	ldd	r19, Z+3	; 0x03
    2e6a:	44 81       	ldd	r20, Z+4	; 0x04
    2e6c:	55 81       	ldd	r21, Z+5	; 0x05
    2e6e:	66 81       	ldd	r22, Z+6	; 0x06
    2e70:	77 81       	ldd	r23, Z+7	; 0x07
    2e72:	fe 01       	movw	r30, r28
    2e74:	31 96       	adiw	r30, 0x01	; 1
    2e76:	5f 01       	movw	r10, r30
    2e78:	88 e0       	ldi	r24, 0x08	; 8
    2e7a:	c8 2e       	mov	r12, r24
    2e7c:	d1 2c       	mov	r13, r1
    2e7e:	72 01       	movw	r14, r4
    2e80:	c4 01       	movw	r24, r8
    2e82:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <__cvt_u>
    2e86:	29 81       	ldd	r18, Y+1	; 0x01
    2e88:	24 ff       	sbrs	r18, 4
    2e8a:	06 c0       	rjmp	.+12     	; 0x2e98 <__fmt_o+0x76>
    2e8c:	01 97       	sbiw	r24, 0x01	; 1
    2e8e:	f3 01       	movw	r30, r6
    2e90:	e8 0f       	add	r30, r24
    2e92:	f9 1f       	adc	r31, r25
    2e94:	20 e3       	ldi	r18, 0x30	; 48
    2e96:	20 83       	st	Z, r18
    2e98:	29 81       	ldd	r18, Y+1	; 0x01
    2e9a:	23 ff       	sbrs	r18, 3
    2e9c:	06 c0       	rjmp	.+12     	; 0x2eaa <__fmt_o+0x88>
    2e9e:	01 97       	sbiw	r24, 0x01	; 1
    2ea0:	f3 01       	movw	r30, r6
    2ea2:	e8 0f       	add	r30, r24
    2ea4:	f9 1f       	adc	r31, r25
    2ea6:	20 e2       	ldi	r18, 0x20	; 32
    2ea8:	20 83       	st	Z, r18
    2eaa:	e9 80       	ldd	r14, Y+1	; 0x01
    2eac:	fa 80       	ldd	r15, Y+2	; 0x02
    2eae:	d4 01       	movw	r26, r8
    2eb0:	18 96       	adiw	r26, 0x08	; 8
    2eb2:	2d 91       	ld	r18, X+
    2eb4:	3c 91       	ld	r19, X
    2eb6:	19 97       	sbiw	r26, 0x09	; 9
    2eb8:	21 50       	subi	r18, 0x01	; 1
    2eba:	31 09       	sbc	r19, r1
    2ebc:	28 1b       	sub	r18, r24
    2ebe:	39 0b       	sbc	r19, r25
    2ec0:	86 0d       	add	r24, r6
    2ec2:	97 1d       	adc	r25, r7
    2ec4:	ac 01       	movw	r20, r24
    2ec6:	60 e8       	ldi	r22, 0x80	; 128
    2ec8:	82 01       	movw	r16, r4
    2eca:	c1 01       	movw	r24, r2
    2ecc:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <__pad>
    2ed0:	9c 01       	movw	r18, r24
    2ed2:	f1 01       	movw	r30, r2
    2ed4:	80 81       	ld	r24, Z
    2ed6:	91 81       	ldd	r25, Z+1	; 0x01
    2ed8:	90 ff       	sbrs	r25, 0
    2eda:	08 c0       	rjmp	.+16     	; 0x2eec <__fmt_o+0xca>
    2edc:	d4 01       	movw	r26, r8
    2ede:	12 96       	adiw	r26, 0x02	; 2
    2ee0:	8d 91       	ld	r24, X+
    2ee2:	9c 91       	ld	r25, X
    2ee4:	13 97       	sbiw	r26, 0x03	; 3
    2ee6:	82 17       	cp	r24, r18
    2ee8:	93 07       	cpc	r25, r19
    2eea:	0c f4       	brge	.+2      	; 0x2eee <__fmt_o+0xcc>
    2eec:	c9 01       	movw	r24, r18
    2eee:	22 96       	adiw	r28, 0x02	; 2
    2ef0:	e2 e1       	ldi	r30, 0x12	; 18
    2ef2:	0c 94 89 21 	jmp	0x4312	; 0x4312 <__epilogue_restores__>

Disassembly of section .text.__cvt_u:

000027a6 <__cvt_u>:
    27a6:	a2 e1       	ldi	r26, 0x12	; 18
    27a8:	b0 e0       	ldi	r27, 0x00	; 0
    27aa:	e9 ed       	ldi	r30, 0xD9	; 217
    27ac:	f3 e1       	ldi	r31, 0x13	; 19
    27ae:	0c 94 37 21 	jmp	0x426e	; 0x426e <__prologue_saves__>
    27b2:	fc 01       	movw	r30, r24
    27b4:	0a 8b       	std	Y+18, r16	; 0x12
    27b6:	1b 83       	std	Y+3, r17	; 0x03
    27b8:	2c 83       	std	Y+4, r18	; 0x04
    27ba:	73 2e       	mov	r7, r19
    27bc:	64 2e       	mov	r6, r20
    27be:	55 2e       	mov	r5, r21
    27c0:	46 2e       	mov	r4, r22
    27c2:	7d 83       	std	Y+5, r23	; 0x05
    27c4:	cc 86       	std	Y+12, r12	; 0x0c
    27c6:	d8 86       	std	Y+8, r13	; 0x08
    27c8:	bf 82       	std	Y+7, r11	; 0x07
    27ca:	ae 82       	std	Y+6, r10	; 0x06
    27cc:	86 81       	ldd	r24, Z+6	; 0x06
    27ce:	97 81       	ldd	r25, Z+7	; 0x07
    27d0:	9b 87       	std	Y+11, r25	; 0x0b
    27d2:	8a 87       	std	Y+10, r24	; 0x0a
    27d4:	d5 01       	movw	r26, r10
    27d6:	4d 91       	ld	r20, X+
    27d8:	5c 91       	ld	r21, X
    27da:	22 81       	ldd	r18, Z+2	; 0x02
    27dc:	33 81       	ldd	r19, Z+3	; 0x03
    27de:	80 85       	ldd	r24, Z+8	; 0x08
    27e0:	91 85       	ldd	r25, Z+9	; 0x09
    27e2:	01 97       	sbiw	r24, 0x01	; 1
    27e4:	1c 01       	movw	r2, r24
    27e6:	37 ff       	sbrs	r19, 7
    27e8:	02 c0       	rjmp	.+4      	; 0x27ee <__cvt_u+0x48>
    27ea:	21 e0       	ldi	r18, 0x01	; 1
    27ec:	30 e0       	ldi	r19, 0x00	; 0
    27ee:	ea 85       	ldd	r30, Y+10	; 0x0a
    27f0:	fb 85       	ldd	r31, Y+11	; 0x0b
    27f2:	e8 0f       	add	r30, r24
    27f4:	f9 1f       	adc	r31, r25
    27f6:	10 82       	st	Z, r1
    27f8:	47 01       	movw	r8, r14
    27fa:	e1 e0       	ldi	r30, 0x01	; 1
    27fc:	f0 e0       	ldi	r31, 0x00	; 0
    27fe:	fa 83       	std	Y+2, r31	; 0x02
    2800:	e9 83       	std	Y+1, r30	; 0x01
    2802:	c9 01       	movw	r24, r18
    2804:	8e 19       	sub	r24, r14
    2806:	9f 09       	sbc	r25, r15
    2808:	9e 87       	std	Y+14, r25	; 0x0e
    280a:	8d 87       	std	Y+13, r24	; 0x0d
    280c:	da 01       	movw	r26, r20
    280e:	a2 70       	andi	r26, 0x02	; 2
    2810:	bb 27       	eor	r27, r27
    2812:	b8 8b       	std	Y+16, r27	; 0x10
    2814:	af 87       	std	Y+15, r26	; 0x0f
    2816:	b8 85       	ldd	r27, Y+8	; 0x08
    2818:	bb 0f       	add	r27, r27
    281a:	bb 0b       	sbc	r27, r27
    281c:	b9 8b       	std	Y+17, r27	; 0x11
    281e:	12 14       	cp	r1, r2
    2820:	13 04       	cpc	r1, r3
    2822:	74 f0       	brlt	.+28     	; 0x2840 <__cvt_u+0x9a>
    2824:	a9 81       	ldd	r26, Y+1	; 0x01
    2826:	ba 81       	ldd	r27, Y+2	; 0x02
    2828:	ab 2b       	or	r26, r27
    282a:	09 f0       	breq	.+2      	; 0x282e <__cvt_u+0x88>
    282c:	5c c0       	rjmp	.+184    	; 0x28e6 <__cvt_u+0x140>
    282e:	ae 81       	ldd	r26, Y+6	; 0x06
    2830:	bf 81       	ldd	r27, Y+7	; 0x07
    2832:	8d 91       	ld	r24, X+
    2834:	9c 91       	ld	r25, X
    2836:	11 97       	sbiw	r26, 0x01	; 1
    2838:	8f 7e       	andi	r24, 0xEF	; 239
    283a:	8d 93       	st	X+, r24
    283c:	9c 93       	st	X, r25
    283e:	53 c0       	rjmp	.+166    	; 0x28e6 <__cvt_u+0x140>
    2840:	2a 89       	ldd	r18, Y+18	; 0x12
    2842:	3b 81       	ldd	r19, Y+3	; 0x03
    2844:	4c 81       	ldd	r20, Y+4	; 0x04
    2846:	57 2d       	mov	r21, r7
    2848:	66 2d       	mov	r22, r6
    284a:	75 2d       	mov	r23, r5
    284c:	84 2d       	mov	r24, r4
    284e:	9d 81       	ldd	r25, Y+5	; 0x05
    2850:	a0 e0       	ldi	r26, 0x00	; 0
    2852:	0e 94 0a 23 	call	0x4614	; 0x4614 <__cmpdi2_s8>
    2856:	b1 f1       	breq	.+108    	; 0x28c4 <__cvt_u+0x11e>
    2858:	e1 e0       	ldi	r30, 0x01	; 1
    285a:	2e 1a       	sub	r2, r30
    285c:	31 08       	sbc	r3, r1
    285e:	fc 85       	ldd	r31, Y+12	; 0x0c
    2860:	f9 87       	std	Y+9, r31	; 0x09
    2862:	af 2e       	mov	r10, r31
    2864:	b8 84       	ldd	r11, Y+8	; 0x08
    2866:	c9 88       	ldd	r12, Y+17	; 0x11
    2868:	dc 2c       	mov	r13, r12
    286a:	ec 2c       	mov	r14, r12
    286c:	fc 2c       	mov	r15, r12
    286e:	0c 2d       	mov	r16, r12
    2870:	1c 2d       	mov	r17, r12
    2872:	2a 89       	ldd	r18, Y+18	; 0x12
    2874:	3b 81       	ldd	r19, Y+3	; 0x03
    2876:	4c 81       	ldd	r20, Y+4	; 0x04
    2878:	57 2d       	mov	r21, r7
    287a:	66 2d       	mov	r22, r6
    287c:	75 2d       	mov	r23, r5
    287e:	84 2d       	mov	r24, r4
    2880:	9d 81       	ldd	r25, Y+5	; 0x05
    2882:	0e 94 c9 22 	call	0x4592	; 0x4592 <__umoddi3>
    2886:	c9 01       	movw	r24, r18
    2888:	29 83       	std	Y+1, r18	; 0x01
    288a:	9a 83       	std	Y+2, r25	; 0x02
    288c:	ea 85       	ldd	r30, Y+10	; 0x0a
    288e:	fb 85       	ldd	r31, Y+11	; 0x0b
    2890:	e2 0d       	add	r30, r2
    2892:	f3 1d       	adc	r31, r3
    2894:	80 5d       	subi	r24, 0xD0	; 208
    2896:	80 83       	st	Z, r24
    2898:	81 e0       	ldi	r24, 0x01	; 1
    289a:	88 1a       	sub	r8, r24
    289c:	91 08       	sbc	r9, r1
    289e:	2a 89       	ldd	r18, Y+18	; 0x12
    28a0:	3b 81       	ldd	r19, Y+3	; 0x03
    28a2:	4c 81       	ldd	r20, Y+4	; 0x04
    28a4:	57 2d       	mov	r21, r7
    28a6:	66 2d       	mov	r22, r6
    28a8:	75 2d       	mov	r23, r5
    28aa:	84 2d       	mov	r24, r4
    28ac:	9d 81       	ldd	r25, Y+5	; 0x05
    28ae:	0e 94 cb 22 	call	0x4596	; 0x4596 <__udivdi3>
    28b2:	2a 8b       	std	Y+18, r18	; 0x12
    28b4:	3b 83       	std	Y+3, r19	; 0x03
    28b6:	4c 83       	std	Y+4, r20	; 0x04
    28b8:	75 2e       	mov	r7, r21
    28ba:	66 2e       	mov	r6, r22
    28bc:	57 2e       	mov	r5, r23
    28be:	48 2e       	mov	r4, r24
    28c0:	9d 83       	std	Y+5, r25	; 0x05
    28c2:	ad cf       	rjmp	.-166    	; 0x281e <__cvt_u+0x78>
    28c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    28c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    28c8:	88 0d       	add	r24, r8
    28ca:	99 1d       	adc	r25, r9
    28cc:	18 16       	cp	r1, r24
    28ce:	19 06       	cpc	r1, r25
    28d0:	1c f2       	brlt	.-122    	; 0x2858 <__cvt_u+0xb2>
    28d2:	18 14       	cp	r1, r8
    28d4:	19 04       	cpc	r1, r9
    28d6:	0c f0       	brlt	.+2      	; 0x28da <__cvt_u+0x134>
    28d8:	a5 cf       	rjmp	.-182    	; 0x2824 <__cvt_u+0x7e>
    28da:	ef 85       	ldd	r30, Y+15	; 0x0f
    28dc:	f8 89       	ldd	r31, Y+16	; 0x10
    28de:	ef 2b       	or	r30, r31
    28e0:	09 f0       	breq	.+2      	; 0x28e4 <__cvt_u+0x13e>
    28e2:	ba cf       	rjmp	.-140    	; 0x2858 <__cvt_u+0xb2>
    28e4:	9f cf       	rjmp	.-194    	; 0x2824 <__cvt_u+0x7e>
    28e6:	c1 01       	movw	r24, r2
    28e8:	62 96       	adiw	r28, 0x12	; 18
    28ea:	e2 e1       	ldi	r30, 0x12	; 18
    28ec:	0c 94 89 21 	jmp	0x4312	; 0x4312 <__epilogue_restores__>

Disassembly of section .text.__fmt_u:

0000339c <__fmt_u>:
    339c:	a2 e0       	ldi	r26, 0x02	; 2
    339e:	b0 e0       	ldi	r27, 0x00	; 0
    33a0:	e4 ed       	ldi	r30, 0xD4	; 212
    33a2:	f9 e1       	ldi	r31, 0x19	; 25
    33a4:	0c 94 37 21 	jmp	0x426e	; 0x426e <__prologue_saves__>
    33a8:	3c 01       	movw	r6, r24
    33aa:	4b 01       	movw	r8, r22
    33ac:	fa 01       	movw	r30, r20
    33ae:	db 01       	movw	r26, r22
    33b0:	12 96       	adiw	r26, 0x02	; 2
    33b2:	2d 91       	ld	r18, X+
    33b4:	3c 91       	ld	r19, X
    33b6:	13 97       	sbiw	r26, 0x03	; 3
    33b8:	14 96       	adiw	r26, 0x04	; 4
    33ba:	4d 90       	ld	r4, X+
    33bc:	5c 90       	ld	r5, X
    33be:	15 97       	sbiw	r26, 0x05	; 5
    33c0:	8d 91       	ld	r24, X+
    33c2:	9c 91       	ld	r25, X
    33c4:	11 97       	sbiw	r26, 0x01	; 1
    33c6:	9a 83       	std	Y+2, r25	; 0x02
    33c8:	89 83       	std	Y+1, r24	; 0x01
    33ca:	16 96       	adiw	r26, 0x06	; 6
    33cc:	2d 90       	ld	r2, X+
    33ce:	3c 90       	ld	r3, X
    33d0:	17 97       	sbiw	r26, 0x07	; 7
    33d2:	37 fd       	sbrc	r19, 7
    33d4:	03 c0       	rjmp	.+6      	; 0x33dc <__fmt_u+0x40>
    33d6:	8d 7f       	andi	r24, 0xFD	; 253
    33d8:	9a 83       	std	Y+2, r25	; 0x02
    33da:	89 83       	std	Y+1, r24	; 0x01
    33dc:	00 81       	ld	r16, Z
    33de:	11 81       	ldd	r17, Z+1	; 0x01
    33e0:	22 81       	ldd	r18, Z+2	; 0x02
    33e2:	33 81       	ldd	r19, Z+3	; 0x03
    33e4:	44 81       	ldd	r20, Z+4	; 0x04
    33e6:	55 81       	ldd	r21, Z+5	; 0x05
    33e8:	66 81       	ldd	r22, Z+6	; 0x06
    33ea:	77 81       	ldd	r23, Z+7	; 0x07
    33ec:	fe 01       	movw	r30, r28
    33ee:	31 96       	adiw	r30, 0x01	; 1
    33f0:	5f 01       	movw	r10, r30
    33f2:	8a e0       	ldi	r24, 0x0A	; 10
    33f4:	c8 2e       	mov	r12, r24
    33f6:	d1 2c       	mov	r13, r1
    33f8:	72 01       	movw	r14, r4
    33fa:	c4 01       	movw	r24, r8
    33fc:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <__cvt_u>
    3400:	e9 80       	ldd	r14, Y+1	; 0x01
    3402:	fa 80       	ldd	r15, Y+2	; 0x02
    3404:	d4 01       	movw	r26, r8
    3406:	18 96       	adiw	r26, 0x08	; 8
    3408:	2d 91       	ld	r18, X+
    340a:	3c 91       	ld	r19, X
    340c:	19 97       	sbiw	r26, 0x09	; 9
    340e:	21 50       	subi	r18, 0x01	; 1
    3410:	31 09       	sbc	r19, r1
    3412:	28 1b       	sub	r18, r24
    3414:	39 0b       	sbc	r19, r25
    3416:	82 0d       	add	r24, r2
    3418:	93 1d       	adc	r25, r3
    341a:	ac 01       	movw	r20, r24
    341c:	60 e8       	ldi	r22, 0x80	; 128
    341e:	82 01       	movw	r16, r4
    3420:	c3 01       	movw	r24, r6
    3422:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <__pad>
    3426:	9c 01       	movw	r18, r24
    3428:	f3 01       	movw	r30, r6
    342a:	80 81       	ld	r24, Z
    342c:	91 81       	ldd	r25, Z+1	; 0x01
    342e:	90 ff       	sbrs	r25, 0
    3430:	08 c0       	rjmp	.+16     	; 0x3442 <__fmt_u+0xa6>
    3432:	d4 01       	movw	r26, r8
    3434:	12 96       	adiw	r26, 0x02	; 2
    3436:	8d 91       	ld	r24, X+
    3438:	9c 91       	ld	r25, X
    343a:	13 97       	sbiw	r26, 0x03	; 3
    343c:	82 17       	cp	r24, r18
    343e:	93 07       	cpc	r25, r19
    3440:	0c f4       	brge	.+2      	; 0x3444 <__fmt_u+0xa8>
    3442:	c9 01       	movw	r24, r18
    3444:	22 96       	adiw	r28, 0x02	; 2
    3446:	e2 e1       	ldi	r30, 0x12	; 18
    3448:	0c 94 89 21 	jmp	0x4312	; 0x4312 <__epilogue_restores__>

Disassembly of section .text.__fmt_x:

000020e6 <__fmt_x>:
    20e6:	a4 e1       	ldi	r26, 0x14	; 20
    20e8:	b0 e0       	ldi	r27, 0x00	; 0
    20ea:	e9 e7       	ldi	r30, 0x79	; 121
    20ec:	f0 e1       	ldi	r31, 0x10	; 16
    20ee:	0c 94 37 21 	jmp	0x426e	; 0x426e <__prologue_saves__>
    20f2:	98 87       	std	Y+8, r25	; 0x08
    20f4:	8f 83       	std	Y+7, r24	; 0x07
    20f6:	7a 83       	std	Y+2, r23	; 0x02
    20f8:	69 83       	std	Y+1, r22	; 0x01
    20fa:	5c 8b       	std	Y+20, r21	; 0x14
    20fc:	4b 8b       	std	Y+19, r20	; 0x13
    20fe:	12 2f       	mov	r17, r18
    2100:	db 01       	movw	r26, r22
    2102:	12 96       	adiw	r26, 0x02	; 2
    2104:	ed 91       	ld	r30, X+
    2106:	fc 91       	ld	r31, X
    2108:	13 97       	sbiw	r26, 0x03	; 3
    210a:	14 96       	adiw	r26, 0x04	; 4
    210c:	2d 91       	ld	r18, X+
    210e:	3c 91       	ld	r19, X
    2110:	15 97       	sbiw	r26, 0x05	; 5
    2112:	3e 83       	std	Y+6, r19	; 0x06
    2114:	2d 83       	std	Y+5, r18	; 0x05
    2116:	ed 90       	ld	r14, X+
    2118:	fc 90       	ld	r15, X
    211a:	11 97       	sbiw	r26, 0x01	; 1
    211c:	16 96       	adiw	r26, 0x06	; 6
    211e:	2d 90       	ld	r2, X+
    2120:	3c 90       	ld	r3, X
    2122:	17 97       	sbiw	r26, 0x07	; 7
    2124:	f7 fd       	sbrc	r31, 7
    2126:	03 c0       	rjmp	.+6      	; 0x212e <__fmt_x+0x48>
    2128:	e8 94       	clt
    212a:	e1 f8       	bld	r14, 1
    212c:	02 c0       	rjmp	.+4      	; 0x2132 <__fmt_x+0x4c>
    212e:	e1 e0       	ldi	r30, 0x01	; 1
    2130:	f0 e0       	ldi	r31, 0x00	; 0
    2132:	c7 01       	movw	r24, r14
    2134:	80 71       	andi	r24, 0x10	; 16
    2136:	99 27       	eor	r25, r25
    2138:	9a 87       	std	Y+10, r25	; 0x0a
    213a:	89 87       	std	Y+9, r24	; 0x09
    213c:	e4 fe       	sbrs	r14, 4
    213e:	1f c0       	rjmp	.+62     	; 0x217e <__fmt_x+0x98>
    2140:	ab 89       	ldd	r26, Y+19	; 0x13
    2142:	bc 89       	ldd	r27, Y+20	; 0x14
    2144:	2c 91       	ld	r18, X
    2146:	11 96       	adiw	r26, 0x01	; 1
    2148:	3c 91       	ld	r19, X
    214a:	11 97       	sbiw	r26, 0x01	; 1
    214c:	12 96       	adiw	r26, 0x02	; 2
    214e:	4c 91       	ld	r20, X
    2150:	12 97       	sbiw	r26, 0x02	; 2
    2152:	13 96       	adiw	r26, 0x03	; 3
    2154:	5c 91       	ld	r21, X
    2156:	13 97       	sbiw	r26, 0x03	; 3
    2158:	14 96       	adiw	r26, 0x04	; 4
    215a:	6c 91       	ld	r22, X
    215c:	14 97       	sbiw	r26, 0x04	; 4
    215e:	15 96       	adiw	r26, 0x05	; 5
    2160:	7c 91       	ld	r23, X
    2162:	15 97       	sbiw	r26, 0x05	; 5
    2164:	16 96       	adiw	r26, 0x06	; 6
    2166:	8c 91       	ld	r24, X
    2168:	16 97       	sbiw	r26, 0x06	; 6
    216a:	17 96       	adiw	r26, 0x07	; 7
    216c:	9c 91       	ld	r25, X
    216e:	a0 e0       	ldi	r26, 0x00	; 0
    2170:	0e 94 0a 23 	call	0x4614	; 0x4614 <__cmpdi2_s8>
    2174:	21 f0       	breq	.+8      	; 0x217e <__fmt_x+0x98>
    2176:	8d 81       	ldd	r24, Y+5	; 0x05
    2178:	9e 81       	ldd	r25, Y+6	; 0x06
    217a:	02 97       	sbiw	r24, 0x02	; 2
    217c:	02 c0       	rjmp	.+4      	; 0x2182 <__fmt_x+0x9c>
    217e:	8d 81       	ldd	r24, Y+5	; 0x05
    2180:	9e 81       	ldd	r25, Y+6	; 0x06
    2182:	97 01       	movw	r18, r14
    2184:	28 70       	andi	r18, 0x08	; 8
    2186:	33 27       	eor	r19, r19
    2188:	3c 87       	std	Y+12, r19	; 0x0c
    218a:	2b 87       	std	Y+11, r18	; 0x0b
    218c:	e3 fc       	sbrc	r14, 3
    218e:	01 97       	sbiw	r24, 0x01	; 1
    2190:	ab 89       	ldd	r26, Y+19	; 0x13
    2192:	bc 89       	ldd	r27, Y+20	; 0x14
    2194:	4c 90       	ld	r4, X
    2196:	11 96       	adiw	r26, 0x01	; 1
    2198:	5c 90       	ld	r5, X
    219a:	11 97       	sbiw	r26, 0x01	; 1
    219c:	12 96       	adiw	r26, 0x02	; 2
    219e:	6c 90       	ld	r6, X
    21a0:	12 97       	sbiw	r26, 0x02	; 2
    21a2:	13 96       	adiw	r26, 0x03	; 3
    21a4:	7c 90       	ld	r7, X
    21a6:	13 97       	sbiw	r26, 0x03	; 3
    21a8:	14 96       	adiw	r26, 0x04	; 4
    21aa:	8c 90       	ld	r8, X
    21ac:	14 97       	sbiw	r26, 0x04	; 4
    21ae:	15 96       	adiw	r26, 0x05	; 5
    21b0:	9c 90       	ld	r9, X
    21b2:	15 97       	sbiw	r26, 0x05	; 5
    21b4:	16 96       	adiw	r26, 0x06	; 6
    21b6:	ac 90       	ld	r10, X
    21b8:	16 97       	sbiw	r26, 0x06	; 6
    21ba:	17 96       	adiw	r26, 0x07	; 7
    21bc:	bc 90       	ld	r11, X
    21be:	a9 81       	ldd	r26, Y+1	; 0x01
    21c0:	ba 81       	ldd	r27, Y+2	; 0x02
    21c2:	18 96       	adiw	r26, 0x08	; 8
    21c4:	cd 90       	ld	r12, X+
    21c6:	dc 90       	ld	r13, X
    21c8:	19 97       	sbiw	r26, 0x09	; 9
    21ca:	b1 e0       	ldi	r27, 0x01	; 1
    21cc:	cb 1a       	sub	r12, r27
    21ce:	d1 08       	sbc	r13, r1
    21d0:	d1 01       	movw	r26, r2
    21d2:	ac 0d       	add	r26, r12
    21d4:	bd 1d       	adc	r27, r13
    21d6:	1c 92       	st	X, r1
    21d8:	9c 83       	std	Y+4, r25	; 0x04
    21da:	8b 83       	std	Y+3, r24	; 0x03
    21dc:	9f 01       	movw	r18, r30
    21de:	28 1b       	sub	r18, r24
    21e0:	39 0b       	sbc	r19, r25
    21e2:	3e 87       	std	Y+14, r19	; 0x0e
    21e4:	2d 87       	std	Y+13, r18	; 0x0d
    21e6:	c7 01       	movw	r24, r14
    21e8:	82 70       	andi	r24, 0x02	; 2
    21ea:	99 27       	eor	r25, r25
    21ec:	98 8b       	std	Y+16, r25	; 0x10
    21ee:	8f 87       	std	Y+15, r24	; 0x0f
    21f0:	81 2f       	mov	r24, r17
    21f2:	01 2e       	mov	r0, r17
    21f4:	00 0c       	add	r0, r0
    21f6:	99 0b       	sbc	r25, r25
    21f8:	dc 01       	movw	r26, r24
    21fa:	a1 54       	subi	r26, 0x41	; 65
    21fc:	b1 09       	sbc	r27, r1
    21fe:	ba 8b       	std	Y+18, r27	; 0x12
    2200:	a9 8b       	std	Y+17, r26	; 0x11
    2202:	32 e0       	ldi	r19, 0x02	; 2
    2204:	c3 16       	cp	r12, r19
    2206:	d1 04       	cpc	r13, r1
    2208:	34 f4       	brge	.+12     	; 0x2216 <__stack+0x17>
    220a:	89 85       	ldd	r24, Y+9	; 0x09
    220c:	9a 85       	ldd	r25, Y+10	; 0x0a
    220e:	89 2b       	or	r24, r25
    2210:	09 f0       	breq	.+2      	; 0x2214 <__stack+0x15>
    2212:	4c c0       	rjmp	.+152    	; 0x22ac <__stack+0xad>
    2214:	73 c0       	rjmp	.+230    	; 0x22fc <__stack+0xfd>
    2216:	92 01       	movw	r18, r4
    2218:	a3 01       	movw	r20, r6
    221a:	b4 01       	movw	r22, r8
    221c:	c5 01       	movw	r24, r10
    221e:	a0 e0       	ldi	r26, 0x00	; 0
    2220:	0e 94 0a 23 	call	0x4614	; 0x4614 <__cmpdi2_s8>
    2224:	81 f1       	breq	.+96     	; 0x2286 <__stack+0x87>
    2226:	b1 e0       	ldi	r27, 0x01	; 1
    2228:	cb 1a       	sub	r12, r27
    222a:	d1 08       	sbc	r13, r1
    222c:	c2 01       	movw	r24, r4
    222e:	8f 70       	andi	r24, 0x0F	; 15
    2230:	99 27       	eor	r25, r25
    2232:	8a 30       	cpi	r24, 0x0A	; 10
    2234:	91 05       	cpc	r25, r1
    2236:	14 f4       	brge	.+4      	; 0x223c <__stack+0x3d>
    2238:	c0 96       	adiw	r24, 0x30	; 48
    223a:	02 c0       	rjmp	.+4      	; 0x2240 <__stack+0x41>
    223c:	89 5a       	subi	r24, 0xA9	; 169
    223e:	9f 4f       	sbci	r25, 0xFF	; 255
    2240:	e9 89       	ldd	r30, Y+17	; 0x11
    2242:	fa 89       	ldd	r31, Y+18	; 0x12
    2244:	7a 97       	sbiw	r30, 0x1a	; 26
    2246:	48 f4       	brcc	.+18     	; 0x225a <__stack+0x5b>
    2248:	9c 01       	movw	r18, r24
    224a:	20 62       	ori	r18, 0x20	; 32
    224c:	21 56       	subi	r18, 0x61	; 97
    224e:	31 09       	sbc	r19, r1
    2250:	2a 31       	cpi	r18, 0x1A	; 26
    2252:	31 05       	cpc	r19, r1
    2254:	10 f4       	brcc	.+4      	; 0x225a <__stack+0x5b>
    2256:	0e 94 41 23 	call	0x4682	; 0x4682 <toupper>
    225a:	f1 01       	movw	r30, r2
    225c:	ec 0d       	add	r30, r12
    225e:	fd 1d       	adc	r31, r13
    2260:	80 83       	st	Z, r24
    2262:	2b 81       	ldd	r18, Y+3	; 0x03
    2264:	3c 81       	ldd	r19, Y+4	; 0x04
    2266:	21 50       	subi	r18, 0x01	; 1
    2268:	31 09       	sbc	r19, r1
    226a:	3c 83       	std	Y+4, r19	; 0x04
    226c:	2b 83       	std	Y+3, r18	; 0x03
    226e:	92 01       	movw	r18, r4
    2270:	a3 01       	movw	r20, r6
    2272:	b4 01       	movw	r22, r8
    2274:	c5 01       	movw	r24, r10
    2276:	04 e0       	ldi	r16, 0x04	; 4
    2278:	0e 94 1b 21 	call	0x4236	; 0x4236 <__lshrdi3>
    227c:	29 01       	movw	r4, r18
    227e:	3a 01       	movw	r6, r20
    2280:	4b 01       	movw	r8, r22
    2282:	5c 01       	movw	r10, r24
    2284:	be cf       	rjmp	.-132    	; 0x2202 <__stack+0x3>
    2286:	8d 85       	ldd	r24, Y+13	; 0x0d
    2288:	9e 85       	ldd	r25, Y+14	; 0x0e
    228a:	ab 81       	ldd	r26, Y+3	; 0x03
    228c:	bc 81       	ldd	r27, Y+4	; 0x04
    228e:	8a 0f       	add	r24, r26
    2290:	9b 1f       	adc	r25, r27
    2292:	18 16       	cp	r1, r24
    2294:	19 06       	cpc	r1, r25
    2296:	3c f2       	brlt	.-114    	; 0x2226 <__stack+0x27>
    2298:	1a 16       	cp	r1, r26
    229a:	1b 06       	cpc	r1, r27
    229c:	0c f0       	brlt	.+2      	; 0x22a0 <__stack+0xa1>
    229e:	b5 cf       	rjmp	.-150    	; 0x220a <__stack+0xb>
    22a0:	ef 85       	ldd	r30, Y+15	; 0x0f
    22a2:	f8 89       	ldd	r31, Y+16	; 0x10
    22a4:	ef 2b       	or	r30, r31
    22a6:	09 f0       	breq	.+2      	; 0x22aa <__stack+0xab>
    22a8:	be cf       	rjmp	.-132    	; 0x2226 <__stack+0x27>
    22aa:	af cf       	rjmp	.-162    	; 0x220a <__stack+0xb>
    22ac:	ab 89       	ldd	r26, Y+19	; 0x13
    22ae:	bc 89       	ldd	r27, Y+20	; 0x14
    22b0:	2c 91       	ld	r18, X
    22b2:	11 96       	adiw	r26, 0x01	; 1
    22b4:	3c 91       	ld	r19, X
    22b6:	11 97       	sbiw	r26, 0x01	; 1
    22b8:	12 96       	adiw	r26, 0x02	; 2
    22ba:	4c 91       	ld	r20, X
    22bc:	12 97       	sbiw	r26, 0x02	; 2
    22be:	13 96       	adiw	r26, 0x03	; 3
    22c0:	5c 91       	ld	r21, X
    22c2:	13 97       	sbiw	r26, 0x03	; 3
    22c4:	14 96       	adiw	r26, 0x04	; 4
    22c6:	6c 91       	ld	r22, X
    22c8:	14 97       	sbiw	r26, 0x04	; 4
    22ca:	15 96       	adiw	r26, 0x05	; 5
    22cc:	7c 91       	ld	r23, X
    22ce:	15 97       	sbiw	r26, 0x05	; 5
    22d0:	16 96       	adiw	r26, 0x06	; 6
    22d2:	8c 91       	ld	r24, X
    22d4:	16 97       	sbiw	r26, 0x06	; 6
    22d6:	17 96       	adiw	r26, 0x07	; 7
    22d8:	9c 91       	ld	r25, X
    22da:	a0 e0       	ldi	r26, 0x00	; 0
    22dc:	0e 94 0a 23 	call	0x4614	; 0x4614 <__cmpdi2_s8>
    22e0:	69 f0       	breq	.+26     	; 0x22fc <__stack+0xfd>
    22e2:	f1 01       	movw	r30, r2
    22e4:	ec 0d       	add	r30, r12
    22e6:	fd 1d       	adc	r31, r13
    22e8:	31 97       	sbiw	r30, 0x01	; 1
    22ea:	10 83       	st	Z, r17
    22ec:	b2 e0       	ldi	r27, 0x02	; 2
    22ee:	cb 1a       	sub	r12, r27
    22f0:	d1 08       	sbc	r13, r1
    22f2:	f1 01       	movw	r30, r2
    22f4:	ec 0d       	add	r30, r12
    22f6:	fd 1d       	adc	r31, r13
    22f8:	80 e3       	ldi	r24, 0x30	; 48
    22fa:	80 83       	st	Z, r24
    22fc:	eb 85       	ldd	r30, Y+11	; 0x0b
    22fe:	fc 85       	ldd	r31, Y+12	; 0x0c
    2300:	ef 2b       	or	r30, r31
    2302:	41 f0       	breq	.+16     	; 0x2314 <__stack+0x115>
    2304:	f1 e0       	ldi	r31, 0x01	; 1
    2306:	cf 1a       	sub	r12, r31
    2308:	d1 08       	sbc	r13, r1
    230a:	f1 01       	movw	r30, r2
    230c:	ec 0d       	add	r30, r12
    230e:	fd 1d       	adc	r31, r13
    2310:	80 e2       	ldi	r24, 0x20	; 32
    2312:	80 83       	st	Z, r24
    2314:	a9 81       	ldd	r26, Y+1	; 0x01
    2316:	ba 81       	ldd	r27, Y+2	; 0x02
    2318:	18 96       	adiw	r26, 0x08	; 8
    231a:	2d 91       	ld	r18, X+
    231c:	3c 91       	ld	r19, X
    231e:	19 97       	sbiw	r26, 0x09	; 9
    2320:	21 50       	subi	r18, 0x01	; 1
    2322:	31 09       	sbc	r19, r1
    2324:	2c 19       	sub	r18, r12
    2326:	3d 09       	sbc	r19, r13
    2328:	c2 0c       	add	r12, r2
    232a:	d3 1c       	adc	r13, r3
    232c:	a6 01       	movw	r20, r12
    232e:	60 e8       	ldi	r22, 0x80	; 128
    2330:	0d 81       	ldd	r16, Y+5	; 0x05
    2332:	1e 81       	ldd	r17, Y+6	; 0x06
    2334:	8f 81       	ldd	r24, Y+7	; 0x07
    2336:	98 85       	ldd	r25, Y+8	; 0x08
    2338:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <__pad>
    233c:	9c 01       	movw	r18, r24
    233e:	ef 81       	ldd	r30, Y+7	; 0x07
    2340:	f8 85       	ldd	r31, Y+8	; 0x08
    2342:	80 81       	ld	r24, Z
    2344:	91 81       	ldd	r25, Z+1	; 0x01
    2346:	90 ff       	sbrs	r25, 0
    2348:	09 c0       	rjmp	.+18     	; 0x235c <__stack+0x15d>
    234a:	a9 81       	ldd	r26, Y+1	; 0x01
    234c:	ba 81       	ldd	r27, Y+2	; 0x02
    234e:	12 96       	adiw	r26, 0x02	; 2
    2350:	8d 91       	ld	r24, X+
    2352:	9c 91       	ld	r25, X
    2354:	13 97       	sbiw	r26, 0x03	; 3
    2356:	82 17       	cp	r24, r18
    2358:	93 07       	cpc	r25, r19
    235a:	0c f4       	brge	.+2      	; 0x235e <__stack+0x15f>
    235c:	c9 01       	movw	r24, r18
    235e:	64 96       	adiw	r28, 0x14	; 20
    2360:	e2 e1       	ldi	r30, 0x12	; 18
    2362:	0c 94 89 21 	jmp	0x4312	; 0x4312 <__epilogue_restores__>

Disassembly of section .text.__pop_float:

000041b4 <__pop_float>:
    41b4:	fa 01       	movw	r30, r20
    41b6:	60 38       	cpi	r22, 0x80	; 128
    41b8:	71 05       	cpc	r23, r1
    41ba:	cc f0       	brlt	.+50     	; 0x41ee <__pop_float+0x3a>
    41bc:	62 38       	cpi	r22, 0x82	; 130
    41be:	71 05       	cpc	r23, r1
    41c0:	1c f0       	brlt	.+6      	; 0x41c8 <__pop_float+0x14>
    41c2:	63 38       	cpi	r22, 0x83	; 131
    41c4:	71 05       	cpc	r23, r1
    41c6:	99 f4       	brne	.+38     	; 0x41ee <__pop_float+0x3a>
    41c8:	a0 81       	ld	r26, Z
    41ca:	b1 81       	ldd	r27, Z+1	; 0x01
    41cc:	9d 01       	movw	r18, r26
    41ce:	2c 5f       	subi	r18, 0xFC	; 252
    41d0:	3f 4f       	sbci	r19, 0xFF	; 255
    41d2:	31 83       	std	Z+1, r19	; 0x01
    41d4:	20 83       	st	Z, r18
    41d6:	4d 91       	ld	r20, X+
    41d8:	5d 91       	ld	r21, X+
    41da:	6d 91       	ld	r22, X+
    41dc:	7c 91       	ld	r23, X
    41de:	fc 01       	movw	r30, r24
    41e0:	40 83       	st	Z, r20
    41e2:	51 83       	std	Z+1, r21	; 0x01
    41e4:	62 83       	std	Z+2, r22	; 0x02
    41e6:	73 83       	std	Z+3, r23	; 0x03
    41e8:	81 e0       	ldi	r24, 0x01	; 1
    41ea:	90 e0       	ldi	r25, 0x00	; 0
    41ec:	08 95       	ret
    41ee:	80 e0       	ldi	r24, 0x00	; 0
    41f0:	90 e0       	ldi	r25, 0x00	; 0
    41f2:	08 95       	ret

Disassembly of section .text.__pop_int:

000024e4 <__pop_int>:
    24e4:	0f 93       	push	r16
    24e6:	1f 93       	push	r17
    24e8:	cf 93       	push	r28
    24ea:	df 93       	push	r29
    24ec:	fc 01       	movw	r30, r24
    24ee:	d9 01       	movw	r26, r18
    24f0:	68 38       	cpi	r22, 0x88	; 136
    24f2:	71 05       	cpc	r23, r1
    24f4:	31 f1       	breq	.+76     	; 0x2542 <__pop_int+0x5e>
    24f6:	94 f4       	brge	.+36     	; 0x251c <__pop_int+0x38>
    24f8:	61 38       	cpi	r22, 0x81	; 129
    24fa:	71 05       	cpc	r23, r1
    24fc:	b1 f1       	breq	.+108    	; 0x256a <__pop_int+0x86>
    24fe:	2c f4       	brge	.+10     	; 0x250a <__pop_int+0x26>
    2500:	60 38       	cpi	r22, 0x80	; 128
    2502:	71 05       	cpc	r23, r1
    2504:	09 f4       	brne	.+2      	; 0x2508 <__pop_int+0x24>
    2506:	78 c0       	rjmp	.+240    	; 0x25f8 <__pop_int+0x114>
    2508:	9f c0       	rjmp	.+318    	; 0x2648 <__pop_int+0x164>
    250a:	62 38       	cpi	r22, 0x82	; 130
    250c:	71 05       	cpc	r23, r1
    250e:	09 f4       	brne	.+2      	; 0x2512 <__pop_int+0x2e>
    2510:	59 c0       	rjmp	.+178    	; 0x25c4 <__pop_int+0xe0>
    2512:	64 38       	cpi	r22, 0x84	; 132
    2514:	71 05       	cpc	r23, r1
    2516:	09 f4       	brne	.+2      	; 0x251a <__pop_int+0x36>
    2518:	6f c0       	rjmp	.+222    	; 0x25f8 <__pop_int+0x114>
    251a:	96 c0       	rjmp	.+300    	; 0x2648 <__pop_int+0x164>
    251c:	60 3a       	cpi	r22, 0xA0	; 160
    251e:	71 05       	cpc	r23, r1
    2520:	09 f4       	brne	.+2      	; 0x2524 <__pop_int+0x40>
    2522:	48 c0       	rjmp	.+144    	; 0x25b4 <__pop_int+0xd0>
    2524:	2c f4       	brge	.+10     	; 0x2530 <__pop_int+0x4c>
    2526:	60 39       	cpi	r22, 0x90	; 144
    2528:	71 05       	cpc	r23, r1
    252a:	09 f4       	brne	.+2      	; 0x252e <__pop_int+0x4a>
    252c:	4b c0       	rjmp	.+150    	; 0x25c4 <__pop_int+0xe0>
    252e:	8c c0       	rjmp	.+280    	; 0x2648 <__pop_int+0x164>
    2530:	60 3c       	cpi	r22, 0xC0	; 192
    2532:	71 05       	cpc	r23, r1
    2534:	09 f4       	brne	.+2      	; 0x2538 <__pop_int+0x54>
    2536:	76 c0       	rjmp	.+236    	; 0x2624 <__pop_int+0x140>
    2538:	60 3f       	cpi	r22, 0xF0	; 240
    253a:	71 05       	cpc	r23, r1
    253c:	09 f4       	brne	.+2      	; 0x2540 <__pop_int+0x5c>
    253e:	72 c0       	rjmp	.+228    	; 0x2624 <__pop_int+0x140>
    2540:	83 c0       	rjmp	.+262    	; 0x2648 <__pop_int+0x164>
    2542:	cd 91       	ld	r28, X+
    2544:	dc 91       	ld	r29, X
    2546:	11 97       	sbiw	r26, 0x01	; 1
    2548:	ce 01       	movw	r24, r28
    254a:	02 96       	adiw	r24, 0x02	; 2
    254c:	8d 93       	st	X+, r24
    254e:	9c 93       	st	X, r25
    2550:	45 2b       	or	r20, r21
    2552:	39 f0       	breq	.+14     	; 0x2562 <__pop_int+0x7e>
    2554:	98 81       	ld	r25, Y
    2556:	89 2f       	mov	r24, r25
    2558:	88 0f       	add	r24, r24
    255a:	88 0b       	sbc	r24, r24
    255c:	90 83       	st	Z, r25
    255e:	81 83       	std	Z+1, r24	; 0x01
    2560:	5b c0       	rjmp	.+182    	; 0x2618 <__pop_int+0x134>
    2562:	88 81       	ld	r24, Y
    2564:	80 83       	st	Z, r24
    2566:	11 82       	std	Z+1, r1	; 0x01
    2568:	68 c0       	rjmp	.+208    	; 0x263a <__pop_int+0x156>
    256a:	cd 91       	ld	r28, X+
    256c:	dc 91       	ld	r29, X
    256e:	11 97       	sbiw	r26, 0x01	; 1
    2570:	ce 01       	movw	r24, r28
    2572:	04 96       	adiw	r24, 0x04	; 4
    2574:	8d 93       	st	X+, r24
    2576:	9c 93       	st	X, r25
    2578:	45 2b       	or	r20, r21
    257a:	99 f0       	breq	.+38     	; 0x25a2 <__pop_int+0xbe>
    257c:	88 81       	ld	r24, Y
    257e:	99 81       	ldd	r25, Y+1	; 0x01
    2580:	aa 81       	ldd	r26, Y+2	; 0x02
    2582:	bb 81       	ldd	r27, Y+3	; 0x03
    2584:	ac 01       	movw	r20, r24
    2586:	bd 01       	movw	r22, r26
    2588:	77 0f       	add	r23, r23
    258a:	44 0b       	sbc	r20, r20
    258c:	54 2f       	mov	r21, r20
    258e:	ba 01       	movw	r22, r20
    2590:	80 83       	st	Z, r24
    2592:	91 83       	std	Z+1, r25	; 0x01
    2594:	a2 83       	std	Z+2, r26	; 0x02
    2596:	b3 83       	std	Z+3, r27	; 0x03
    2598:	44 83       	std	Z+4, r20	; 0x04
    259a:	45 83       	std	Z+5, r20	; 0x05
    259c:	46 83       	std	Z+6, r20	; 0x06
    259e:	47 83       	std	Z+7, r20	; 0x07
    25a0:	28 c0       	rjmp	.+80     	; 0x25f2 <__pop_int+0x10e>
    25a2:	08 81       	ld	r16, Y
    25a4:	19 81       	ldd	r17, Y+1	; 0x01
    25a6:	2a 81       	ldd	r18, Y+2	; 0x02
    25a8:	3b 81       	ldd	r19, Y+3	; 0x03
    25aa:	00 83       	st	Z, r16
    25ac:	11 83       	std	Z+1, r17	; 0x01
    25ae:	22 83       	std	Z+2, r18	; 0x02
    25b0:	33 83       	std	Z+3, r19	; 0x03
    25b2:	45 c0       	rjmp	.+138    	; 0x263e <__pop_int+0x15a>
    25b4:	cd 91       	ld	r28, X+
    25b6:	dc 91       	ld	r29, X
    25b8:	11 97       	sbiw	r26, 0x01	; 1
    25ba:	ce 01       	movw	r24, r28
    25bc:	02 96       	adiw	r24, 0x02	; 2
    25be:	8d 93       	st	X+, r24
    25c0:	9c 93       	st	X, r25
    25c2:	23 c0       	rjmp	.+70     	; 0x260a <__pop_int+0x126>
    25c4:	cd 91       	ld	r28, X+
    25c6:	dc 91       	ld	r29, X
    25c8:	11 97       	sbiw	r26, 0x01	; 1
    25ca:	ce 01       	movw	r24, r28
    25cc:	08 96       	adiw	r24, 0x08	; 8
    25ce:	8d 93       	st	X+, r24
    25d0:	9c 93       	st	X, r25
    25d2:	78 81       	ld	r23, Y
    25d4:	69 81       	ldd	r22, Y+1	; 0x01
    25d6:	5a 81       	ldd	r21, Y+2	; 0x02
    25d8:	4b 81       	ldd	r20, Y+3	; 0x03
    25da:	3c 81       	ldd	r19, Y+4	; 0x04
    25dc:	2d 81       	ldd	r18, Y+5	; 0x05
    25de:	9e 81       	ldd	r25, Y+6	; 0x06
    25e0:	8f 81       	ldd	r24, Y+7	; 0x07
    25e2:	70 83       	st	Z, r23
    25e4:	61 83       	std	Z+1, r22	; 0x01
    25e6:	52 83       	std	Z+2, r21	; 0x02
    25e8:	43 83       	std	Z+3, r20	; 0x03
    25ea:	34 83       	std	Z+4, r19	; 0x04
    25ec:	25 83       	std	Z+5, r18	; 0x05
    25ee:	96 83       	std	Z+6, r25	; 0x06
    25f0:	87 83       	std	Z+7, r24	; 0x07
    25f2:	81 e0       	ldi	r24, 0x01	; 1
    25f4:	90 e0       	ldi	r25, 0x00	; 0
    25f6:	2a c0       	rjmp	.+84     	; 0x264c <__pop_int+0x168>
    25f8:	cd 91       	ld	r28, X+
    25fa:	dc 91       	ld	r29, X
    25fc:	11 97       	sbiw	r26, 0x01	; 1
    25fe:	ce 01       	movw	r24, r28
    2600:	02 96       	adiw	r24, 0x02	; 2
    2602:	8d 93       	st	X+, r24
    2604:	9c 93       	st	X, r25
    2606:	45 2b       	or	r20, r21
    2608:	a1 f0       	breq	.+40     	; 0x2632 <__pop_int+0x14e>
    260a:	99 81       	ldd	r25, Y+1	; 0x01
    260c:	28 81       	ld	r18, Y
    260e:	89 2f       	mov	r24, r25
    2610:	88 0f       	add	r24, r24
    2612:	88 0b       	sbc	r24, r24
    2614:	20 83       	st	Z, r18
    2616:	91 83       	std	Z+1, r25	; 0x01
    2618:	82 83       	std	Z+2, r24	; 0x02
    261a:	83 83       	std	Z+3, r24	; 0x03
    261c:	84 83       	std	Z+4, r24	; 0x04
    261e:	85 83       	std	Z+5, r24	; 0x05
    2620:	86 83       	std	Z+6, r24	; 0x06
    2622:	e6 cf       	rjmp	.-52     	; 0x25f0 <__pop_int+0x10c>
    2624:	cd 91       	ld	r28, X+
    2626:	dc 91       	ld	r29, X
    2628:	11 97       	sbiw	r26, 0x01	; 1
    262a:	ce 01       	movw	r24, r28
    262c:	02 96       	adiw	r24, 0x02	; 2
    262e:	8d 93       	st	X+, r24
    2630:	9c 93       	st	X, r25
    2632:	08 81       	ld	r16, Y
    2634:	19 81       	ldd	r17, Y+1	; 0x01
    2636:	00 83       	st	Z, r16
    2638:	11 83       	std	Z+1, r17	; 0x01
    263a:	12 82       	std	Z+2, r1	; 0x02
    263c:	13 82       	std	Z+3, r1	; 0x03
    263e:	14 82       	std	Z+4, r1	; 0x04
    2640:	15 82       	std	Z+5, r1	; 0x05
    2642:	16 82       	std	Z+6, r1	; 0x06
    2644:	17 82       	std	Z+7, r1	; 0x07
    2646:	d5 cf       	rjmp	.-86     	; 0x25f2 <__pop_int+0x10e>
    2648:	80 e0       	ldi	r24, 0x00	; 0
    264a:	90 e0       	ldi	r25, 0x00	; 0
    264c:	df 91       	pop	r29
    264e:	cf 91       	pop	r28
    2650:	1f 91       	pop	r17
    2652:	0f 91       	pop	r16
    2654:	08 95       	ret

Disassembly of section .text.__pop_ptr:

00002d4a <__pop_ptr>:
    2d4a:	cf 93       	push	r28
    2d4c:	df 93       	push	r29
    2d4e:	dc 01       	movw	r26, r24
    2d50:	f9 01       	movw	r30, r18
    2d52:	64 38       	cpi	r22, 0x84	; 132
    2d54:	71 05       	cpc	r23, r1
    2d56:	d9 f1       	breq	.+118    	; 0x2dce <__pop_ptr+0x84>
    2d58:	64 f4       	brge	.+24     	; 0x2d72 <__pop_ptr+0x28>
    2d5a:	61 38       	cpi	r22, 0x81	; 129
    2d5c:	71 05       	cpc	r23, r1
    2d5e:	21 f1       	breq	.+72     	; 0x2da8 <__pop_ptr+0x5e>
    2d60:	62 38       	cpi	r22, 0x82	; 130
    2d62:	71 05       	cpc	r23, r1
    2d64:	09 f4       	brne	.+2      	; 0x2d68 <__pop_ptr+0x1e>
    2d66:	40 c0       	rjmp	.+128    	; 0x2de8 <__pop_ptr+0x9e>
    2d68:	60 38       	cpi	r22, 0x80	; 128
    2d6a:	71 05       	cpc	r23, r1
    2d6c:	09 f0       	breq	.+2      	; 0x2d70 <__pop_ptr+0x26>
    2d6e:	54 c0       	rjmp	.+168    	; 0x2e18 <__pop_ptr+0xce>
    2d70:	2e c0       	rjmp	.+92     	; 0x2dce <__pop_ptr+0x84>
    2d72:	60 39       	cpi	r22, 0x90	; 144
    2d74:	71 05       	cpc	r23, r1
    2d76:	c1 f1       	breq	.+112    	; 0x2de8 <__pop_ptr+0x9e>
    2d78:	84 f4       	brge	.+32     	; 0x2d9a <__pop_ptr+0x50>
    2d7a:	68 38       	cpi	r22, 0x88	; 136
    2d7c:	71 05       	cpc	r23, r1
    2d7e:	09 f0       	breq	.+2      	; 0x2d82 <__pop_ptr+0x38>
    2d80:	4b c0       	rjmp	.+150    	; 0x2e18 <__pop_ptr+0xce>
    2d82:	c0 81       	ld	r28, Z
    2d84:	d1 81       	ldd	r29, Z+1	; 0x01
    2d86:	ce 01       	movw	r24, r28
    2d88:	02 96       	adiw	r24, 0x02	; 2
    2d8a:	91 83       	std	Z+1, r25	; 0x01
    2d8c:	80 83       	st	Z, r24
    2d8e:	e8 81       	ld	r30, Y
    2d90:	f9 81       	ldd	r31, Y+1	; 0x01
    2d92:	ed 93       	st	X+, r30
    2d94:	fc 93       	st	X, r31
    2d96:	40 83       	st	Z, r20
    2d98:	3c c0       	rjmp	.+120    	; 0x2e12 <__pop_ptr+0xc8>
    2d9a:	60 3a       	cpi	r22, 0xA0	; 160
    2d9c:	71 05       	cpc	r23, r1
    2d9e:	b9 f0       	breq	.+46     	; 0x2dce <__pop_ptr+0x84>
    2da0:	60 3c       	cpi	r22, 0xC0	; 192
    2da2:	71 05       	cpc	r23, r1
    2da4:	a1 f0       	breq	.+40     	; 0x2dce <__pop_ptr+0x84>
    2da6:	38 c0       	rjmp	.+112    	; 0x2e18 <__pop_ptr+0xce>
    2da8:	c0 81       	ld	r28, Z
    2daa:	d1 81       	ldd	r29, Z+1	; 0x01
    2dac:	ce 01       	movw	r24, r28
    2dae:	02 96       	adiw	r24, 0x02	; 2
    2db0:	91 83       	std	Z+1, r25	; 0x01
    2db2:	80 83       	st	Z, r24
    2db4:	e8 81       	ld	r30, Y
    2db6:	f9 81       	ldd	r31, Y+1	; 0x01
    2db8:	ed 93       	st	X+, r30
    2dba:	fc 93       	st	X, r31
    2dbc:	05 2e       	mov	r0, r21
    2dbe:	00 0c       	add	r0, r0
    2dc0:	66 0b       	sbc	r22, r22
    2dc2:	77 0b       	sbc	r23, r23
    2dc4:	40 83       	st	Z, r20
    2dc6:	51 83       	std	Z+1, r21	; 0x01
    2dc8:	62 83       	std	Z+2, r22	; 0x02
    2dca:	73 83       	std	Z+3, r23	; 0x03
    2dcc:	22 c0       	rjmp	.+68     	; 0x2e12 <__pop_ptr+0xc8>
    2dce:	c0 81       	ld	r28, Z
    2dd0:	d1 81       	ldd	r29, Z+1	; 0x01
    2dd2:	ce 01       	movw	r24, r28
    2dd4:	02 96       	adiw	r24, 0x02	; 2
    2dd6:	91 83       	std	Z+1, r25	; 0x01
    2dd8:	80 83       	st	Z, r24
    2dda:	e8 81       	ld	r30, Y
    2ddc:	f9 81       	ldd	r31, Y+1	; 0x01
    2dde:	ed 93       	st	X+, r30
    2de0:	fc 93       	st	X, r31
    2de2:	51 83       	std	Z+1, r21	; 0x01
    2de4:	40 83       	st	Z, r20
    2de6:	15 c0       	rjmp	.+42     	; 0x2e12 <__pop_ptr+0xc8>
    2de8:	c0 81       	ld	r28, Z
    2dea:	d1 81       	ldd	r29, Z+1	; 0x01
    2dec:	ce 01       	movw	r24, r28
    2dee:	02 96       	adiw	r24, 0x02	; 2
    2df0:	91 83       	std	Z+1, r25	; 0x01
    2df2:	80 83       	st	Z, r24
    2df4:	e8 81       	ld	r30, Y
    2df6:	f9 81       	ldd	r31, Y+1	; 0x01
    2df8:	ed 93       	st	X+, r30
    2dfa:	fc 93       	st	X, r31
    2dfc:	51 83       	std	Z+1, r21	; 0x01
    2dfe:	40 83       	st	Z, r20
    2e00:	85 2f       	mov	r24, r21
    2e02:	88 0f       	add	r24, r24
    2e04:	88 0b       	sbc	r24, r24
    2e06:	82 83       	std	Z+2, r24	; 0x02
    2e08:	83 83       	std	Z+3, r24	; 0x03
    2e0a:	84 83       	std	Z+4, r24	; 0x04
    2e0c:	85 83       	std	Z+5, r24	; 0x05
    2e0e:	86 83       	std	Z+6, r24	; 0x06
    2e10:	87 83       	std	Z+7, r24	; 0x07
    2e12:	81 e0       	ldi	r24, 0x01	; 1
    2e14:	90 e0       	ldi	r25, 0x00	; 0
    2e16:	02 c0       	rjmp	.+4      	; 0x2e1c <__pop_ptr+0xd2>
    2e18:	80 e0       	ldi	r24, 0x00	; 0
    2e1a:	90 e0       	ldi	r25, 0x00	; 0
    2e1c:	df 91       	pop	r29
    2e1e:	cf 91       	pop	r28
    2e20:	08 95       	ret

Disassembly of section .text.sprintf:

000044a8 <sprintf>:
    44a8:	a0 e0       	ldi	r26, 0x00	; 0
    44aa:	b0 e0       	ldi	r27, 0x00	; 0
    44ac:	ea e5       	ldi	r30, 0x5A	; 90
    44ae:	f2 e2       	ldi	r31, 0x22	; 34
    44b0:	0c 94 47 21 	jmp	0x428e	; 0x428e <__prologue_saves__+0x20>
    44b4:	9e 01       	movw	r18, r28
    44b6:	25 5f       	subi	r18, 0xF5	; 245
    44b8:	3f 4f       	sbci	r19, 0xFF	; 255
    44ba:	48 85       	ldd	r20, Y+8	; 0x08
    44bc:	59 85       	ldd	r21, Y+9	; 0x09
    44be:	6a 85       	ldd	r22, Y+10	; 0x0a
    44c0:	8e 81       	ldd	r24, Y+6	; 0x06
    44c2:	9f 81       	ldd	r25, Y+7	; 0x07
    44c4:	0e 94 f2 22 	call	0x45e4	; 0x45e4 <vsprintf>
    44c8:	e2 e0       	ldi	r30, 0x02	; 2
    44ca:	0c 94 99 21 	jmp	0x4332	; 0x4332 <__epilogue_restores__+0x20>

Disassembly of section .text.vsprintf:

000045e4 <vsprintf>:
    45e4:	0f 93       	push	r16
    45e6:	1f 93       	push	r17
    45e8:	89 01       	movw	r16, r18
    45ea:	9a 01       	movw	r18, r20
    45ec:	46 2f       	mov	r20, r22
    45ee:	6f ef       	ldi	r22, 0xFF	; 255
    45f0:	7f e7       	ldi	r23, 0x7F	; 127
    45f2:	0e 94 c8 1b 	call	0x3790	; 0x3790 <vsnprintf>
    45f6:	1f 91       	pop	r17
    45f8:	0f 91       	pop	r16
    45fa:	08 95       	ret

Disassembly of section .text.atoi:

00003aa4 <atoi>:
    3aa4:	cf 93       	push	r28
    3aa6:	9b 01       	movw	r18, r22
    3aa8:	48 2f       	mov	r20, r24
    3aaa:	f9 01       	movw	r30, r18
    3aac:	54 2f       	mov	r21, r20
    3aae:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    3ab2:	60 32       	cpi	r22, 0x20	; 32
    3ab4:	b9 f1       	breq	.+110    	; 0x3b24 <atoi+0x80>
    3ab6:	86 2f       	mov	r24, r22
    3ab8:	06 2e       	mov	r0, r22
    3aba:	00 0c       	add	r0, r0
    3abc:	99 0b       	sbc	r25, r25
    3abe:	09 97       	sbiw	r24, 0x09	; 9
    3ac0:	05 97       	sbiw	r24, 0x05	; 5
    3ac2:	80 f1       	brcs	.+96     	; 0x3b24 <atoi+0x80>
    3ac4:	6b 32       	cpi	r22, 0x2B	; 43
    3ac6:	49 f5       	brne	.+82     	; 0x3b1a <atoi+0x76>
    3ac8:	a0 e0       	ldi	r26, 0x00	; 0
    3aca:	b0 e0       	ldi	r27, 0x00	; 0
    3acc:	2f 5f       	subi	r18, 0xFF	; 255
    3ace:	3f 4f       	sbci	r19, 0xFF	; 255
    3ad0:	4f 4f       	sbci	r20, 0xFF	; 255
    3ad2:	02 c0       	rjmp	.+4      	; 0x3ad8 <atoi+0x34>
    3ad4:	a0 e0       	ldi	r26, 0x00	; 0
    3ad6:	b0 e0       	ldi	r27, 0x00	; 0
    3ad8:	80 e0       	ldi	r24, 0x00	; 0
    3ada:	90 e0       	ldi	r25, 0x00	; 0
    3adc:	ca e0       	ldi	r28, 0x0A	; 10
    3ade:	f9 01       	movw	r30, r18
    3ae0:	54 2f       	mov	r21, r20
    3ae2:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    3ae6:	06 2e       	mov	r0, r22
    3ae8:	00 0c       	add	r0, r0
    3aea:	77 0b       	sbc	r23, r23
    3aec:	60 53       	subi	r22, 0x30	; 48
    3aee:	71 09       	sbc	r23, r1
    3af0:	6a 30       	cpi	r22, 0x0A	; 10
    3af2:	71 05       	cpc	r23, r1
    3af4:	60 f4       	brcc	.+24     	; 0x3b0e <atoi+0x6a>
    3af6:	c8 9f       	mul	r28, r24
    3af8:	f0 01       	movw	r30, r0
    3afa:	c9 9f       	mul	r28, r25
    3afc:	f0 0d       	add	r31, r0
    3afe:	11 24       	eor	r1, r1
    3b00:	2f 5f       	subi	r18, 0xFF	; 255
    3b02:	3f 4f       	sbci	r19, 0xFF	; 255
    3b04:	4f 4f       	sbci	r20, 0xFF	; 255
    3b06:	cf 01       	movw	r24, r30
    3b08:	86 1b       	sub	r24, r22
    3b0a:	97 0b       	sbc	r25, r23
    3b0c:	e8 cf       	rjmp	.-48     	; 0x3ade <atoi+0x3a>
    3b0e:	ab 2b       	or	r26, r27
    3b10:	69 f4       	brne	.+26     	; 0x3b2c <atoi+0x88>
    3b12:	91 95       	neg	r25
    3b14:	81 95       	neg	r24
    3b16:	91 09       	sbc	r25, r1
    3b18:	09 c0       	rjmp	.+18     	; 0x3b2c <atoi+0x88>
    3b1a:	6d 32       	cpi	r22, 0x2D	; 45
    3b1c:	d9 f6       	brne	.-74     	; 0x3ad4 <atoi+0x30>
    3b1e:	a1 e0       	ldi	r26, 0x01	; 1
    3b20:	b0 e0       	ldi	r27, 0x00	; 0
    3b22:	d4 cf       	rjmp	.-88     	; 0x3acc <atoi+0x28>
    3b24:	2f 5f       	subi	r18, 0xFF	; 255
    3b26:	3f 4f       	sbci	r19, 0xFF	; 255
    3b28:	4f 4f       	sbci	r20, 0xFF	; 255
    3b2a:	bf cf       	rjmp	.-130    	; 0x3aaa <atoi+0x6>
    3b2c:	cf 91       	pop	r28
    3b2e:	08 95       	ret

Disassembly of section .text.memset:

00004670 <memset>:
    4670:	fc 01       	movw	r30, r24
    4672:	48 0f       	add	r20, r24
    4674:	59 1f       	adc	r21, r25
    4676:	e4 17       	cp	r30, r20
    4678:	f5 07       	cpc	r31, r21
    467a:	11 f0       	breq	.+4      	; 0x4680 <memset+0x10>
    467c:	61 93       	st	Z+, r22
    467e:	fb cf       	rjmp	.-10     	; 0x4676 <memset+0x6>
    4680:	08 95       	ret

Disassembly of section .text.strcmp:

0000412c <strcmp>:
    412c:	cf 92       	push	r12
    412e:	df 92       	push	r13
    4130:	ef 92       	push	r14
    4132:	6b 01       	movw	r12, r22
    4134:	e8 2e       	mov	r14, r24
    4136:	f6 01       	movw	r30, r12
    4138:	5e 2d       	mov	r21, r14
    413a:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    413e:	86 2f       	mov	r24, r22
    4140:	f9 01       	movw	r30, r18
    4142:	54 2f       	mov	r21, r20
    4144:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    4148:	86 13       	cpse	r24, r22
    414a:	0b c0       	rjmp	.+22     	; 0x4162 <strcmp+0x36>
    414c:	88 23       	and	r24, r24
    414e:	41 f0       	breq	.+16     	; 0x4160 <strcmp+0x34>
    4150:	8f ef       	ldi	r24, 0xFF	; 255
    4152:	c8 1a       	sub	r12, r24
    4154:	d8 0a       	sbc	r13, r24
    4156:	e8 0a       	sbc	r14, r24
    4158:	2f 5f       	subi	r18, 0xFF	; 255
    415a:	3f 4f       	sbci	r19, 0xFF	; 255
    415c:	4f 4f       	sbci	r20, 0xFF	; 255
    415e:	eb cf       	rjmp	.-42     	; 0x4136 <strcmp+0xa>
    4160:	68 2f       	mov	r22, r24
    4162:	90 e0       	ldi	r25, 0x00	; 0
    4164:	86 1b       	sub	r24, r22
    4166:	91 09       	sbc	r25, r1
    4168:	ef 90       	pop	r14
    416a:	df 90       	pop	r13
    416c:	cf 90       	pop	r12
    416e:	08 95       	ret

Disassembly of section .text.strlen:

000044f2 <strlen>:
    44f2:	9b 01       	movw	r18, r22
    44f4:	48 2f       	mov	r20, r24
    44f6:	a8 2f       	mov	r26, r24
    44f8:	cb 01       	movw	r24, r22
    44fa:	fc 01       	movw	r30, r24
    44fc:	5a 2f       	mov	r21, r26
    44fe:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    4502:	66 23       	and	r22, r22
    4504:	19 f0       	breq	.+6      	; 0x450c <strlen+0x1a>
    4506:	01 96       	adiw	r24, 0x01	; 1
    4508:	a1 1d       	adc	r26, r1
    450a:	f7 cf       	rjmp	.-18     	; 0x44fa <strlen+0x8>
    450c:	64 2f       	mov	r22, r20
    450e:	a9 01       	movw	r20, r18
    4510:	84 1b       	sub	r24, r20
    4512:	95 0b       	sbc	r25, r21
    4514:	08 95       	ret

Disassembly of section .text.tolower:

00004694 <tolower>:
    4694:	9c 01       	movw	r18, r24
    4696:	21 54       	subi	r18, 0x41	; 65
    4698:	31 09       	sbc	r19, r1
    469a:	2a 31       	cpi	r18, 0x1A	; 26
    469c:	31 05       	cpc	r19, r1
    469e:	08 f4       	brcc	.+2      	; 0x46a2 <tolower+0xe>
    46a0:	80 62       	ori	r24, 0x20	; 32
    46a2:	08 95       	ret

Disassembly of section .text.toupper:

00004682 <toupper>:
    4682:	9c 01       	movw	r18, r24
    4684:	21 56       	subi	r18, 0x61	; 97
    4686:	31 09       	sbc	r19, r1
    4688:	2a 31       	cpi	r18, 0x1A	; 26
    468a:	31 05       	cpc	r19, r1
    468c:	10 f4       	brcc	.+4      	; 0x4692 <toupper+0x10>
    468e:	8f 75       	andi	r24, 0x5F	; 95
    4690:	99 27       	eor	r25, r25
    4692:	08 95       	ret

Disassembly of section .text._Exit:

0000477a <_Exit>:
    477a:	0e 94 bb 00 	call	0x176	; 0x176 <_exit>

Disassembly of section .text.__vsprintf:

000045fc <__vsprintf>:
    45fc:	0f 93       	push	r16
    45fe:	1f 93       	push	r17
    4600:	89 01       	movw	r16, r18
    4602:	9a 01       	movw	r18, r20
    4604:	46 2f       	mov	r20, r22
    4606:	6f ef       	ldi	r22, 0xFF	; 255
    4608:	7f e7       	ldi	r23, 0x7F	; 127
    460a:	0e 94 76 1b 	call	0x36ec	; 0x36ec <__vsnprintf>
    460e:	1f 91       	pop	r17
    4610:	0f 91       	pop	r16
    4612:	08 95       	ret

Disassembly of section .text.__vsnprintf:

000036ec <__vsnprintf>:
    36ec:	6f 92       	push	r6
    36ee:	7f 92       	push	r7
    36f0:	8f 92       	push	r8
    36f2:	ef 92       	push	r14
    36f4:	ff 92       	push	r15
    36f6:	0f 93       	push	r16
    36f8:	1f 93       	push	r17
    36fa:	cf 93       	push	r28
    36fc:	df 93       	push	r29
    36fe:	cd b7       	in	r28, 0x3d	; 61
    3700:	de b7       	in	r29, 0x3e	; 62
    3702:	61 97       	sbiw	r28, 0x11	; 17
    3704:	0f b6       	in	r0, 0x3f	; 63
    3706:	f8 94       	cli
    3708:	de bf       	out	0x3e, r29	; 62
    370a:	0f be       	out	0x3f, r0	; 63
    370c:	cd bf       	out	0x3d, r28	; 61
    370e:	fe 01       	movw	r30, r28
    3710:	31 96       	adiw	r30, 0x01	; 1
    3712:	51 e1       	ldi	r21, 0x11	; 17
    3714:	df 01       	movw	r26, r30
    3716:	1d 92       	st	X+, r1
    3718:	5a 95       	dec	r21
    371a:	e9 f7       	brne	.-6      	; 0x3716 <__vsnprintf+0x2a>
    371c:	a2 e0       	ldi	r26, 0x02	; 2
    371e:	b1 e0       	ldi	r27, 0x01	; 1
    3720:	ba 83       	std	Y+2, r27	; 0x02
    3722:	a9 83       	std	Y+1, r26	; 0x01
    3724:	9c 83       	std	Y+4, r25	; 0x04
    3726:	8b 83       	std	Y+3, r24	; 0x03
    3728:	77 ff       	sbrs	r23, 7
    372a:	09 c0       	rjmp	.+18     	; 0x373e <__vsnprintf+0x52>
    372c:	8f e4       	ldi	r24, 0x4F	; 79
    372e:	90 e0       	ldi	r25, 0x00	; 0
    3730:	90 93 0c 05 	sts	0x050C, r25	; 0x80050c <__errno_val+0x1>
    3734:	80 93 0b 05 	sts	0x050B, r24	; 0x80050b <__errno_val>
    3738:	8f ef       	ldi	r24, 0xFF	; 255
    373a:	9f ef       	ldi	r25, 0xFF	; 255
    373c:	19 c0       	rjmp	.+50     	; 0x3770 <__vsnprintf+0x84>
    373e:	39 01       	movw	r6, r18
    3740:	84 2e       	mov	r8, r20
    3742:	7c 01       	movw	r14, r24
    3744:	61 50       	subi	r22, 0x01	; 1
    3746:	71 09       	sbc	r23, r1
    3748:	7f 83       	std	Y+7, r23	; 0x07
    374a:	6e 83       	std	Y+6, r22	; 0x06
    374c:	98 01       	movw	r18, r16
    374e:	68 2d       	mov	r22, r8
    3750:	a3 01       	movw	r20, r6
    3752:	cf 01       	movw	r24, r30
    3754:	0e 94 ee 21 	call	0x43dc	; 0x43dc <__vfprintf>
    3758:	48 85       	ldd	r20, Y+8	; 0x08
    375a:	59 85       	ldd	r21, Y+9	; 0x09
    375c:	2e 81       	ldd	r18, Y+6	; 0x06
    375e:	3f 81       	ldd	r19, Y+7	; 0x07
    3760:	42 17       	cp	r20, r18
    3762:	53 07       	cpc	r21, r19
    3764:	08 f4       	brcc	.+2      	; 0x3768 <__vsnprintf+0x7c>
    3766:	9a 01       	movw	r18, r20
    3768:	f7 01       	movw	r30, r14
    376a:	e2 0f       	add	r30, r18
    376c:	f3 1f       	adc	r31, r19
    376e:	10 82       	st	Z, r1
    3770:	61 96       	adiw	r28, 0x11	; 17
    3772:	0f b6       	in	r0, 0x3f	; 63
    3774:	f8 94       	cli
    3776:	de bf       	out	0x3e, r29	; 62
    3778:	0f be       	out	0x3f, r0	; 63
    377a:	cd bf       	out	0x3d, r28	; 61
    377c:	df 91       	pop	r29
    377e:	cf 91       	pop	r28
    3780:	1f 91       	pop	r17
    3782:	0f 91       	pop	r16
    3784:	ff 90       	pop	r15
    3786:	ef 90       	pop	r14
    3788:	8f 90       	pop	r8
    378a:	7f 90       	pop	r7
    378c:	6f 90       	pop	r6
    378e:	08 95       	ret

Disassembly of section .text.vsnprintf:

00003790 <vsnprintf>:
    3790:	6f 92       	push	r6
    3792:	7f 92       	push	r7
    3794:	8f 92       	push	r8
    3796:	ef 92       	push	r14
    3798:	ff 92       	push	r15
    379a:	0f 93       	push	r16
    379c:	1f 93       	push	r17
    379e:	cf 93       	push	r28
    37a0:	df 93       	push	r29
    37a2:	cd b7       	in	r28, 0x3d	; 61
    37a4:	de b7       	in	r29, 0x3e	; 62
    37a6:	61 97       	sbiw	r28, 0x11	; 17
    37a8:	0f b6       	in	r0, 0x3f	; 63
    37aa:	f8 94       	cli
    37ac:	de bf       	out	0x3e, r29	; 62
    37ae:	0f be       	out	0x3f, r0	; 63
    37b0:	cd bf       	out	0x3d, r28	; 61
    37b2:	fe 01       	movw	r30, r28
    37b4:	31 96       	adiw	r30, 0x01	; 1
    37b6:	51 e1       	ldi	r21, 0x11	; 17
    37b8:	df 01       	movw	r26, r30
    37ba:	1d 92       	st	X+, r1
    37bc:	5a 95       	dec	r21
    37be:	e9 f7       	brne	.-6      	; 0x37ba <vsnprintf+0x2a>
    37c0:	a2 e0       	ldi	r26, 0x02	; 2
    37c2:	b1 e0       	ldi	r27, 0x01	; 1
    37c4:	ba 83       	std	Y+2, r27	; 0x02
    37c6:	a9 83       	std	Y+1, r26	; 0x01
    37c8:	9c 83       	std	Y+4, r25	; 0x04
    37ca:	8b 83       	std	Y+3, r24	; 0x03
    37cc:	77 ff       	sbrs	r23, 7
    37ce:	09 c0       	rjmp	.+18     	; 0x37e2 <vsnprintf+0x52>
    37d0:	8f e4       	ldi	r24, 0x4F	; 79
    37d2:	90 e0       	ldi	r25, 0x00	; 0
    37d4:	90 93 0c 05 	sts	0x050C, r25	; 0x80050c <__errno_val+0x1>
    37d8:	80 93 0b 05 	sts	0x050B, r24	; 0x80050b <__errno_val>
    37dc:	8f ef       	ldi	r24, 0xFF	; 255
    37de:	9f ef       	ldi	r25, 0xFF	; 255
    37e0:	19 c0       	rjmp	.+50     	; 0x3814 <vsnprintf+0x84>
    37e2:	39 01       	movw	r6, r18
    37e4:	84 2e       	mov	r8, r20
    37e6:	7c 01       	movw	r14, r24
    37e8:	61 50       	subi	r22, 0x01	; 1
    37ea:	71 09       	sbc	r23, r1
    37ec:	7f 83       	std	Y+7, r23	; 0x07
    37ee:	6e 83       	std	Y+6, r22	; 0x06
    37f0:	98 01       	movw	r18, r16
    37f2:	68 2d       	mov	r22, r8
    37f4:	a3 01       	movw	r20, r6
    37f6:	cf 01       	movw	r24, r30
    37f8:	0e 94 d6 21 	call	0x43ac	; 0x43ac <vfprintf>
    37fc:	48 85       	ldd	r20, Y+8	; 0x08
    37fe:	59 85       	ldd	r21, Y+9	; 0x09
    3800:	2e 81       	ldd	r18, Y+6	; 0x06
    3802:	3f 81       	ldd	r19, Y+7	; 0x07
    3804:	42 17       	cp	r20, r18
    3806:	53 07       	cpc	r21, r19
    3808:	08 f4       	brcc	.+2      	; 0x380c <vsnprintf+0x7c>
    380a:	9a 01       	movw	r18, r20
    380c:	f7 01       	movw	r30, r14
    380e:	e2 0f       	add	r30, r18
    3810:	f3 1f       	adc	r31, r19
    3812:	10 82       	st	Z, r1
    3814:	61 96       	adiw	r28, 0x11	; 17
    3816:	0f b6       	in	r0, 0x3f	; 63
    3818:	f8 94       	cli
    381a:	de bf       	out	0x3e, r29	; 62
    381c:	0f be       	out	0x3f, r0	; 63
    381e:	cd bf       	out	0x3d, r28	; 61
    3820:	df 91       	pop	r29
    3822:	cf 91       	pop	r28
    3824:	1f 91       	pop	r17
    3826:	0f 91       	pop	r16
    3828:	ff 90       	pop	r15
    382a:	ef 90       	pop	r14
    382c:	8f 90       	pop	r8
    382e:	7f 90       	pop	r7
    3830:	6f 90       	pop	r6
    3832:	08 95       	ret

Disassembly of section .text.vfprintf:

000043ac <vfprintf>:
    43ac:	a2 e0       	ldi	r26, 0x02	; 2
    43ae:	b0 e0       	ldi	r27, 0x00	; 0
    43b0:	ec ed       	ldi	r30, 0xDC	; 220
    43b2:	f1 e2       	ldi	r31, 0x21	; 33
    43b4:	0c 94 45 21 	jmp	0x428a	; 0x428a <__prologue_saves__+0x1c>
    43b8:	8c 01       	movw	r16, r24
    43ba:	3a 83       	std	Y+2, r19	; 0x02
    43bc:	29 83       	std	Y+1, r18	; 0x01
    43be:	9e 01       	movw	r18, r28
    43c0:	2f 5f       	subi	r18, 0xFF	; 255
    43c2:	3f 4f       	sbci	r19, 0xFF	; 255
    43c4:	0e 94 61 03 	call	0x6c2	; 0x6c2 <__printf_core>
    43c8:	f8 01       	movw	r30, r16
    43ca:	20 81       	ld	r18, Z
    43cc:	24 ff       	sbrs	r18, 4
    43ce:	02 c0       	rjmp	.+4      	; 0x43d4 <vfprintf+0x28>
    43d0:	8f ef       	ldi	r24, 0xFF	; 255
    43d2:	9f ef       	ldi	r25, 0xFF	; 255
    43d4:	22 96       	adiw	r28, 0x02	; 2
    43d6:	e4 e0       	ldi	r30, 0x04	; 4
    43d8:	0c 94 97 21 	jmp	0x432e	; 0x432e <__epilogue_restores__+0x1c>

Disassembly of section .text.__vfprintf:

000043dc <__vfprintf>:
    43dc:	a2 e0       	ldi	r26, 0x02	; 2
    43de:	b0 e0       	ldi	r27, 0x00	; 0
    43e0:	e4 ef       	ldi	r30, 0xF4	; 244
    43e2:	f1 e2       	ldi	r31, 0x21	; 33
    43e4:	0c 94 45 21 	jmp	0x428a	; 0x428a <__prologue_saves__+0x1c>
    43e8:	8c 01       	movw	r16, r24
    43ea:	3a 83       	std	Y+2, r19	; 0x02
    43ec:	29 83       	std	Y+1, r18	; 0x01
    43ee:	9e 01       	movw	r18, r28
    43f0:	2f 5f       	subi	r18, 0xFF	; 255
    43f2:	3f 4f       	sbci	r19, 0xFF	; 255
    43f4:	0e 94 61 03 	call	0x6c2	; 0x6c2 <__printf_core>
    43f8:	f8 01       	movw	r30, r16
    43fa:	20 81       	ld	r18, Z
    43fc:	24 ff       	sbrs	r18, 4
    43fe:	02 c0       	rjmp	.+4      	; 0x4404 <__vfprintf+0x28>
    4400:	8f ef       	ldi	r24, 0xFF	; 255
    4402:	9f ef       	ldi	r25, 0xFF	; 255
    4404:	22 96       	adiw	r28, 0x02	; 2
    4406:	e4 e0       	ldi	r30, 0x04	; 4
    4408:	0c 94 97 21 	jmp	0x432e	; 0x432e <__epilogue_restores__+0x1c>

Disassembly of section .text.__fmt_fp:

00000ef4 <__fmt_fp>:
     ef4:	a6 e2       	ldi	r26, 0x26	; 38
     ef6:	b0 e0       	ldi	r27, 0x00	; 0
     ef8:	e0 e8       	ldi	r30, 0x80	; 128
     efa:	f7 e0       	ldi	r31, 0x07	; 7
     efc:	0c 94 37 21 	jmp	0x426e	; 0x426e <__prologue_saves__>
     f00:	9f 8f       	std	Y+31, r25	; 0x1f
     f02:	8e 8f       	std	Y+30, r24	; 0x1e
     f04:	79 8f       	std	Y+25, r23	; 0x19
     f06:	68 8f       	std	Y+24, r22	; 0x18
     f08:	12 2f       	mov	r17, r18
     f0a:	fb 01       	movw	r30, r22
     f0c:	01 90       	ld	r0, Z+
     f0e:	f0 81       	ld	r31, Z
     f10:	e0 2d       	mov	r30, r0
     f12:	fa 87       	std	Y+10, r31	; 0x0a
     f14:	e9 87       	std	Y+9, r30	; 0x09
     f16:	fb 01       	movw	r30, r22
     f18:	c2 80       	ldd	r12, Z+2	; 0x02
     f1a:	d3 80       	ldd	r13, Z+3	; 0x03
     f1c:	24 81       	ldd	r18, Z+4	; 0x04
     f1e:	35 81       	ldd	r19, Z+5	; 0x05
     f20:	3c 8b       	std	Y+20, r19	; 0x14
     f22:	2b 8b       	std	Y+19, r18	; 0x13
     f24:	80 85       	ldd	r24, Z+8	; 0x08
     f26:	91 85       	ldd	r25, Z+9	; 0x09
     f28:	99 a3       	std	Y+33, r25	; 0x21
     f2a:	88 a3       	std	Y+32, r24	; 0x20
     f2c:	06 80       	ldd	r0, Z+6	; 0x06
     f2e:	f7 81       	ldd	r31, Z+7	; 0x07
     f30:	e0 2d       	mov	r30, r0
     f32:	fa 83       	std	Y+2, r31	; 0x02
     f34:	e9 83       	std	Y+1, r30	; 0x01
     f36:	fa 01       	movw	r30, r20
     f38:	80 80       	ld	r8, Z
     f3a:	91 80       	ldd	r9, Z+1	; 0x01
     f3c:	a2 80       	ldd	r10, Z+2	; 0x02
     f3e:	b3 80       	ldd	r11, Z+3	; 0x03
     f40:	20 e0       	ldi	r18, 0x00	; 0
     f42:	30 e0       	ldi	r19, 0x00	; 0
     f44:	a9 01       	movw	r20, r18
     f46:	c5 01       	movw	r24, r10
     f48:	b4 01       	movw	r22, r8
     f4a:	0e 94 9e 23 	call	0x473c	; 0x473c <__cmpsf2>
     f4e:	87 ff       	sbrs	r24, 7
     f50:	06 c0       	rjmp	.+12     	; 0xf5e <__fmt_fp+0x6a>
     f52:	b7 fa       	bst	r11, 7
     f54:	b0 94       	com	r11
     f56:	b7 f8       	bld	r11, 7
     f58:	b0 94       	com	r11
     f5a:	8d e2       	ldi	r24, 0x2D	; 45
     f5c:	04 c0       	rjmp	.+8      	; 0xf66 <__fmt_fp+0x72>
     f5e:	f9 85       	ldd	r31, Y+9	; 0x09
     f60:	f2 ff       	sbrs	r31, 2
     f62:	0c c3       	rjmp	.+1560   	; 0x157c <__EEPROM_REGION_LENGTH__+0x57c>
     f64:	8b e2       	ldi	r24, 0x2B	; 43
     f66:	e9 81       	ldd	r30, Y+1	; 0x01
     f68:	fa 81       	ldd	r31, Y+2	; 0x02
     f6a:	80 83       	st	Z, r24
     f6c:	2b 89       	ldd	r18, Y+19	; 0x13
     f6e:	3c 89       	ldd	r19, Y+20	; 0x14
     f70:	21 50       	subi	r18, 0x01	; 1
     f72:	31 09       	sbc	r19, r1
     f74:	38 87       	std	Y+8, r19	; 0x08
     f76:	2f 83       	std	Y+7, r18	; 0x07
     f78:	41 e0       	ldi	r20, 0x01	; 1
     f7a:	50 e0       	ldi	r21, 0x00	; 0
     f7c:	5a 8b       	std	Y+18, r21	; 0x12
     f7e:	49 8b       	std	Y+17, r20	; 0x11
     f80:	06 c0       	rjmp	.+12     	; 0xf8e <__fmt_fp+0x9a>
     f82:	8b 89       	ldd	r24, Y+19	; 0x13
     f84:	9c 89       	ldd	r25, Y+20	; 0x14
     f86:	98 87       	std	Y+8, r25	; 0x08
     f88:	8f 83       	std	Y+7, r24	; 0x07
     f8a:	1a 8a       	std	Y+18, r1	; 0x12
     f8c:	19 8a       	std	Y+17, r1	; 0x11
     f8e:	d5 01       	movw	r26, r10
     f90:	c4 01       	movw	r24, r8
     f92:	bf 77       	andi	r27, 0x7F	; 127
     f94:	00 97       	sbiw	r24, 0x00	; 0
     f96:	e0 e8       	ldi	r30, 0x80	; 128
     f98:	ae 07       	cpc	r26, r30
     f9a:	ef e7       	ldi	r30, 0x7F	; 127
     f9c:	be 07       	cpc	r27, r30
     f9e:	d9 f4       	brne	.+54     	; 0xfd6 <__fmt_fp+0xe2>
     fa0:	21 2f       	mov	r18, r17
     fa2:	11 0f       	add	r17, r17
     fa4:	33 0b       	sbc	r19, r19
     fa6:	21 54       	subi	r18, 0x41	; 65
     fa8:	31 09       	sbc	r19, r1
     faa:	89 81       	ldd	r24, Y+1	; 0x01
     fac:	9a 81       	ldd	r25, Y+2	; 0x02
     fae:	49 89       	ldd	r20, Y+17	; 0x11
     fb0:	5a 89       	ldd	r21, Y+18	; 0x12
     fb2:	84 0f       	add	r24, r20
     fb4:	95 1f       	adc	r25, r21
     fb6:	2a 31       	cpi	r18, 0x1A	; 26
     fb8:	31 05       	cpc	r19, r1
     fba:	20 f4       	brcc	.+8      	; 0xfc4 <__fmt_fp+0xd0>
     fbc:	45 e9       	ldi	r20, 0x95	; 149
     fbe:	56 e0       	ldi	r21, 0x06	; 6
     fc0:	60 e0       	ldi	r22, 0x00	; 0
     fc2:	03 c0       	rjmp	.+6      	; 0xfca <__fmt_fp+0xd6>
     fc4:	49 e9       	ldi	r20, 0x99	; 153
     fc6:	56 e0       	ldi	r21, 0x06	; 6
     fc8:	60 e0       	ldi	r22, 0x00	; 0
     fca:	0e 94 bb 22 	call	0x4576	; 0x4576 <strcpy>
     fce:	69 e9       	ldi	r22, 0x99	; 153
     fd0:	76 e0       	ldi	r23, 0x06	; 6
     fd2:	80 e0       	ldi	r24, 0x00	; 0
     fd4:	1e c0       	rjmp	.+60     	; 0x1012 <__EEPROM_REGION_LENGTH__+0x12>
     fd6:	01 97       	sbiw	r24, 0x01	; 1
     fd8:	a0 48       	sbci	r26, 0x80	; 128
     fda:	bf 47       	sbci	r27, 0x7F	; 127
     fdc:	30 f1       	brcs	.+76     	; 0x102a <__EEPROM_REGION_LENGTH__+0x2a>
     fde:	21 2f       	mov	r18, r17
     fe0:	11 0f       	add	r17, r17
     fe2:	33 0b       	sbc	r19, r19
     fe4:	21 54       	subi	r18, 0x41	; 65
     fe6:	31 09       	sbc	r19, r1
     fe8:	89 81       	ldd	r24, Y+1	; 0x01
     fea:	9a 81       	ldd	r25, Y+2	; 0x02
     fec:	49 89       	ldd	r20, Y+17	; 0x11
     fee:	5a 89       	ldd	r21, Y+18	; 0x12
     ff0:	84 0f       	add	r24, r20
     ff2:	95 1f       	adc	r25, r21
     ff4:	2a 31       	cpi	r18, 0x1A	; 26
     ff6:	31 05       	cpc	r19, r1
     ff8:	20 f4       	brcc	.+8      	; 0x1002 <__EEPROM_REGION_LENGTH__+0x2>
     ffa:	4d e9       	ldi	r20, 0x9D	; 157
     ffc:	56 e0       	ldi	r21, 0x06	; 6
     ffe:	60 e0       	ldi	r22, 0x00	; 0
    1000:	03 c0       	rjmp	.+6      	; 0x1008 <__EEPROM_REGION_LENGTH__+0x8>
    1002:	41 ea       	ldi	r20, 0xA1	; 161
    1004:	56 e0       	ldi	r21, 0x06	; 6
    1006:	60 e0       	ldi	r22, 0x00	; 0
    1008:	0e 94 bb 22 	call	0x4576	; 0x4576 <strcpy>
    100c:	61 ea       	ldi	r22, 0xA1	; 161
    100e:	76 e0       	ldi	r23, 0x06	; 6
    1010:	80 e0       	ldi	r24, 0x00	; 0
    1012:	0e 94 79 22 	call	0x44f2	; 0x44f2 <strlen>
    1016:	e9 81       	ldd	r30, Y+1	; 0x01
    1018:	fa 81       	ldd	r31, Y+2	; 0x02
    101a:	af 01       	movw	r20, r30
    101c:	60 e8       	ldi	r22, 0x80	; 128
    101e:	e9 84       	ldd	r14, Y+9	; 0x09
    1020:	fa 84       	ldd	r15, Y+10	; 0x0a
    1022:	0b 89       	ldd	r16, Y+19	; 0x13
    1024:	1c 89       	ldd	r17, Y+20	; 0x14
    1026:	9c 01       	movw	r18, r24
    1028:	a1 c2       	rjmp	.+1346   	; 0x156c <__EEPROM_REGION_LENGTH__+0x56c>
    102a:	20 e0       	ldi	r18, 0x00	; 0
    102c:	30 e0       	ldi	r19, 0x00	; 0
    102e:	a9 01       	movw	r20, r18
    1030:	c5 01       	movw	r24, r10
    1032:	b4 01       	movw	r22, r8
    1034:	0e 94 9e 23 	call	0x473c	; 0x473c <__cmpsf2>
    1038:	1b 82       	std	Y+3, r1	; 0x03
    103a:	1c 82       	std	Y+4, r1	; 0x04
    103c:	88 23       	and	r24, r24
    103e:	09 f4       	brne	.+2      	; 0x1042 <__EEPROM_REGION_LENGTH__+0x42>
    1040:	67 c0       	rjmp	.+206    	; 0x1110 <__EEPROM_REGION_LENGTH__+0x110>
    1042:	f0 e8       	ldi	r31, 0x80	; 128
    1044:	fd 83       	std	Y+5, r31	; 0x05
    1046:	2f e3       	ldi	r18, 0x3F	; 63
    1048:	2e 83       	std	Y+6, r18	; 0x06
    104a:	21 2c       	mov	r2, r1
    104c:	31 2c       	mov	r3, r1
    104e:	20 e0       	ldi	r18, 0x00	; 0
    1050:	30 e0       	ldi	r19, 0x00	; 0
    1052:	40 e2       	ldi	r20, 0x20	; 32
    1054:	51 e4       	ldi	r21, 0x41	; 65
    1056:	6b 81       	ldd	r22, Y+3	; 0x03
    1058:	7c 81       	ldd	r23, Y+4	; 0x04
    105a:	8d 81       	ldd	r24, Y+5	; 0x05
    105c:	9e 81       	ldd	r25, Y+6	; 0x06
    105e:	0e 94 b4 23 	call	0x4768	; 0x4768 <__mulsf3>
    1062:	f6 2e       	mov	r15, r22
    1064:	07 2f       	mov	r16, r23
    1066:	8d 87       	std	Y+13, r24	; 0x0d
    1068:	9b 87       	std	Y+11, r25	; 0x0b
    106a:	a5 01       	movw	r20, r10
    106c:	94 01       	movw	r18, r8
    106e:	0e 94 a3 23 	call	0x4746	; 0x4746 <__gesf2>
    1072:	18 16       	cp	r1, r24
    1074:	54 f0       	brlt	.+20     	; 0x108a <__EEPROM_REGION_LENGTH__+0x8a>
    1076:	3f ef       	ldi	r19, 0xFF	; 255
    1078:	23 1a       	sub	r2, r19
    107a:	33 0a       	sbc	r3, r19
    107c:	fb 82       	std	Y+3, r15	; 0x03
    107e:	0c 83       	std	Y+4, r16	; 0x04
    1080:	4d 85       	ldd	r20, Y+13	; 0x0d
    1082:	4d 83       	std	Y+5, r20	; 0x05
    1084:	5b 85       	ldd	r21, Y+11	; 0x0b
    1086:	5e 83       	std	Y+6, r21	; 0x06
    1088:	e2 cf       	rjmp	.-60     	; 0x104e <__EEPROM_REGION_LENGTH__+0x4e>
    108a:	1c 86       	std	Y+12, r1	; 0x0c
    108c:	1b 86       	std	Y+11, r1	; 0x0b
    108e:	2b 81       	ldd	r18, Y+3	; 0x03
    1090:	3c 81       	ldd	r19, Y+4	; 0x04
    1092:	4d 81       	ldd	r20, Y+5	; 0x05
    1094:	5e 81       	ldd	r21, Y+6	; 0x06
    1096:	c5 01       	movw	r24, r10
    1098:	b4 01       	movw	r22, r8
    109a:	0e 94 9e 23 	call	0x473c	; 0x473c <__cmpsf2>
    109e:	87 ff       	sbrs	r24, 7
    10a0:	3d c0       	rjmp	.+122    	; 0x111c <__EEPROM_REGION_LENGTH__+0x11c>
    10a2:	84 ed       	ldi	r24, 0xD4	; 212
    10a4:	28 16       	cp	r2, r24
    10a6:	8e ef       	ldi	r24, 0xFE	; 254
    10a8:	38 06       	cpc	r3, r24
    10aa:	04 f5       	brge	.+64     	; 0x10ec <__EEPROM_REGION_LENGTH__+0xec>
    10ac:	eb 85       	ldd	r30, Y+11	; 0x0b
    10ae:	fc 85       	ldd	r31, Y+12	; 0x0c
    10b0:	ef 2b       	or	r30, r31
    10b2:	e1 f4       	brne	.+56     	; 0x10ec <__EEPROM_REGION_LENGTH__+0xec>
    10b4:	20 e0       	ldi	r18, 0x00	; 0
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	40 e8       	ldi	r20, 0x80	; 128
    10ba:	5a e5       	ldi	r21, 0x5A	; 90
    10bc:	c5 01       	movw	r24, r10
    10be:	b4 01       	movw	r22, r8
    10c0:	0e 94 b4 23 	call	0x4768	; 0x4768 <__mulsf3>
    10c4:	4b 01       	movw	r8, r22
    10c6:	5c 01       	movw	r10, r24
    10c8:	20 e0       	ldi	r18, 0x00	; 0
    10ca:	30 e0       	ldi	r19, 0x00	; 0
    10cc:	40 e8       	ldi	r20, 0x80	; 128
    10ce:	5a e5       	ldi	r21, 0x5A	; 90
    10d0:	6b 81       	ldd	r22, Y+3	; 0x03
    10d2:	7c 81       	ldd	r23, Y+4	; 0x04
    10d4:	8d 81       	ldd	r24, Y+5	; 0x05
    10d6:	9e 81       	ldd	r25, Y+6	; 0x06
    10d8:	0e 94 b4 23 	call	0x4768	; 0x4768 <__mulsf3>
    10dc:	6b 83       	std	Y+3, r22	; 0x03
    10de:	7c 83       	std	Y+4, r23	; 0x04
    10e0:	8d 83       	std	Y+5, r24	; 0x05
    10e2:	9e 83       	std	Y+6, r25	; 0x06
    10e4:	21 e0       	ldi	r18, 0x01	; 1
    10e6:	30 e0       	ldi	r19, 0x00	; 0
    10e8:	3c 87       	std	Y+12, r19	; 0x0c
    10ea:	2b 87       	std	Y+11, r18	; 0x0b
    10ec:	20 e0       	ldi	r18, 0x00	; 0
    10ee:	30 e0       	ldi	r19, 0x00	; 0
    10f0:	40 e2       	ldi	r20, 0x20	; 32
    10f2:	51 e4       	ldi	r21, 0x41	; 65
    10f4:	6b 81       	ldd	r22, Y+3	; 0x03
    10f6:	7c 81       	ldd	r23, Y+4	; 0x04
    10f8:	8d 81       	ldd	r24, Y+5	; 0x05
    10fa:	9e 81       	ldd	r25, Y+6	; 0x06
    10fc:	0e 94 b0 23 	call	0x4760	; 0x4760 <__divsf3>
    1100:	6b 83       	std	Y+3, r22	; 0x03
    1102:	7c 83       	std	Y+4, r23	; 0x04
    1104:	8d 83       	std	Y+5, r24	; 0x05
    1106:	9e 83       	std	Y+6, r25	; 0x06
    1108:	31 e0       	ldi	r19, 0x01	; 1
    110a:	23 1a       	sub	r2, r19
    110c:	31 08       	sbc	r3, r1
    110e:	bf cf       	rjmp	.-130    	; 0x108e <__EEPROM_REGION_LENGTH__+0x8e>
    1110:	40 e8       	ldi	r20, 0x80	; 128
    1112:	4d 83       	std	Y+5, r20	; 0x05
    1114:	5f e3       	ldi	r21, 0x3F	; 63
    1116:	5e 83       	std	Y+6, r21	; 0x06
    1118:	21 2c       	mov	r2, r1
    111a:	31 2c       	mov	r3, r1
    111c:	81 2f       	mov	r24, r17
    111e:	11 0f       	add	r17, r17
    1120:	99 0b       	sbc	r25, r25
    1122:	9b a3       	std	Y+35, r25	; 0x23
    1124:	8a a3       	std	Y+34, r24	; 0x22
    1126:	0e 94 4a 23 	call	0x4694	; 0x4694 <tolower>
    112a:	8b 8f       	std	Y+27, r24	; 0x1b
    112c:	d7 fc       	sbrc	r13, 7
    112e:	03 c0       	rjmp	.+6      	; 0x1136 <__EEPROM_REGION_LENGTH__+0x136>
    1130:	de a2       	std	Y+38, r13	; 0x26
    1132:	cd a2       	std	Y+37, r12	; 0x25
    1134:	04 c0       	rjmp	.+8      	; 0x113e <__EEPROM_REGION_LENGTH__+0x13e>
    1136:	e6 e0       	ldi	r30, 0x06	; 6
    1138:	f0 e0       	ldi	r31, 0x00	; 0
    113a:	fe a3       	std	Y+38, r31	; 0x26
    113c:	ed a3       	std	Y+37, r30	; 0x25
    113e:	fb 8d       	ldd	r31, Y+27	; 0x1b
    1140:	f7 36       	cpi	r31, 0x67	; 103
    1142:	41 f4       	brne	.+16     	; 0x1154 <__EEPROM_REGION_LENGTH__+0x154>
    1144:	cd 28       	or	r12, r13
    1146:	09 f0       	breq	.+2      	; 0x114a <__EEPROM_REGION_LENGTH__+0x14a>
    1148:	1e c2       	rjmp	.+1084   	; 0x1586 <__EEPROM_REGION_LENGTH__+0x586>
    114a:	21 e0       	ldi	r18, 0x01	; 1
    114c:	30 e0       	ldi	r19, 0x00	; 0
    114e:	3e a3       	std	Y+38, r19	; 0x26
    1150:	2d a3       	std	Y+37, r18	; 0x25
    1152:	19 c2       	rjmp	.+1074   	; 0x1586 <__EEPROM_REGION_LENGTH__+0x586>
    1154:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1156:	8d 8b       	std	Y+21, r24	; 0x15
    1158:	04 c0       	rjmp	.+8      	; 0x1162 <__EEPROM_REGION_LENGTH__+0x162>
    115a:	37 fe       	sbrs	r3, 7
    115c:	25 c2       	rjmp	.+1098   	; 0x15a8 <__EEPROM_REGION_LENGTH__+0x5a8>
    115e:	96 e6       	ldi	r25, 0x66	; 102
    1160:	9d 8b       	std	Y+21, r25	; 0x15
    1162:	ed a1       	ldd	r30, Y+37	; 0x25
    1164:	fe a1       	ldd	r31, Y+38	; 0x26
    1166:	31 96       	adiw	r30, 0x01	; 1
    1168:	fe a3       	std	Y+38, r31	; 0x26
    116a:	ed a3       	std	Y+37, r30	; 0x25
    116c:	fd 89       	ldd	r31, Y+21	; 0x15
    116e:	f6 36       	cpi	r31, 0x66	; 102
    1170:	99 f4       	brne	.+38     	; 0x1198 <__EEPROM_REGION_LENGTH__+0x198>
    1172:	37 fe       	sbrs	r3, 7
    1174:	08 c0       	rjmp	.+16     	; 0x1186 <__EEPROM_REGION_LENGTH__+0x186>
    1176:	1b 82       	std	Y+3, r1	; 0x03
    1178:	1c 82       	std	Y+4, r1	; 0x04
    117a:	20 e8       	ldi	r18, 0x80	; 128
    117c:	2d 83       	std	Y+5, r18	; 0x05
    117e:	3f e3       	ldi	r19, 0x3F	; 63
    1180:	3e 83       	std	Y+6, r19	; 0x06
    1182:	21 2c       	mov	r2, r1
    1184:	31 2c       	mov	r3, r1
    1186:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1188:	47 36       	cpi	r20, 0x67	; 103
    118a:	31 f0       	breq	.+12     	; 0x1198 <__EEPROM_REGION_LENGTH__+0x198>
    118c:	8d a1       	ldd	r24, Y+37	; 0x25
    118e:	9e a1       	ldd	r25, Y+38	; 0x26
    1190:	82 0d       	add	r24, r2
    1192:	93 1d       	adc	r25, r3
    1194:	9e a3       	std	Y+38, r25	; 0x26
    1196:	8d a3       	std	Y+37, r24	; 0x25
    1198:	9b 81       	ldd	r25, Y+3	; 0x03
    119a:	9b 87       	std	Y+11, r25	; 0x0b
    119c:	ec 81       	ldd	r30, Y+4	; 0x04
    119e:	ed 87       	std	Y+13, r30	; 0x0d
    11a0:	fd 81       	ldd	r31, Y+5	; 0x05
    11a2:	fe 8b       	std	Y+22, r31	; 0x16
    11a4:	2e 81       	ldd	r18, Y+6	; 0x06
    11a6:	2a 8f       	std	Y+26, r18	; 0x1a
    11a8:	75 01       	movw	r14, r10
    11aa:	64 01       	movw	r12, r8
    11ac:	1d 8e       	std	Y+29, r1	; 0x1d
    11ae:	1c 8e       	std	Y+28, r1	; 0x1c
    11b0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    11b2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    11b4:	ed a1       	ldd	r30, Y+37	; 0x25
    11b6:	fe a1       	ldd	r31, Y+38	; 0x26
    11b8:	8e 17       	cp	r24, r30
    11ba:	9f 07       	cpc	r25, r31
    11bc:	c1 f1       	breq	.+112    	; 0x122e <__EEPROM_REGION_LENGTH__+0x22e>
    11be:	2b 85       	ldd	r18, Y+11	; 0x0b
    11c0:	3d 85       	ldd	r19, Y+13	; 0x0d
    11c2:	4e 89       	ldd	r20, Y+22	; 0x16
    11c4:	5a 8d       	ldd	r21, Y+26	; 0x1a
    11c6:	c7 01       	movw	r24, r14
    11c8:	b6 01       	movw	r22, r12
    11ca:	0e 94 b0 23 	call	0x4760	; 0x4760 <__divsf3>
    11ce:	0e 94 16 15 	call	0x2a2c	; 0x2a2c <floorf>
    11d2:	2b 01       	movw	r4, r22
    11d4:	3c 01       	movw	r6, r24
    11d6:	0e 94 7c 23 	call	0x46f8	; 0x46f8 <__fixsfsi>
    11da:	6c a3       	std	Y+36, r22	; 0x24
    11dc:	87 01       	movw	r16, r14
    11de:	76 01       	movw	r14, r12
    11e0:	17 fb       	bst	r17, 7
    11e2:	10 95       	com	r17
    11e4:	17 f9       	bld	r17, 7
    11e6:	10 95       	com	r17
    11e8:	2b 85       	ldd	r18, Y+11	; 0x0b
    11ea:	3d 85       	ldd	r19, Y+13	; 0x0d
    11ec:	4e 89       	ldd	r20, Y+22	; 0x16
    11ee:	5a 8d       	ldd	r21, Y+26	; 0x1a
    11f0:	c3 01       	movw	r24, r6
    11f2:	b2 01       	movw	r22, r4
    11f4:	0e 94 78 14 	call	0x28f0	; 0x28f0 <fmaf>
    11f8:	6b 01       	movw	r12, r22
    11fa:	7c 01       	movw	r14, r24
    11fc:	f7 fa       	bst	r15, 7
    11fe:	f0 94       	com	r15
    1200:	f7 f8       	bld	r15, 7
    1202:	f0 94       	com	r15
    1204:	20 e0       	ldi	r18, 0x00	; 0
    1206:	30 e0       	ldi	r19, 0x00	; 0
    1208:	40 e2       	ldi	r20, 0x20	; 32
    120a:	51 e4       	ldi	r21, 0x41	; 65
    120c:	6b 85       	ldd	r22, Y+11	; 0x0b
    120e:	7d 85       	ldd	r23, Y+13	; 0x0d
    1210:	8e 89       	ldd	r24, Y+22	; 0x16
    1212:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1214:	0e 94 b0 23 	call	0x4760	; 0x4760 <__divsf3>
    1218:	6b 87       	std	Y+11, r22	; 0x0b
    121a:	7d 87       	std	Y+13, r23	; 0x0d
    121c:	8e 8b       	std	Y+22, r24	; 0x16
    121e:	9a 8f       	std	Y+26, r25	; 0x1a
    1220:	4c 8d       	ldd	r20, Y+28	; 0x1c
    1222:	5d 8d       	ldd	r21, Y+29	; 0x1d
    1224:	4f 5f       	subi	r20, 0xFF	; 255
    1226:	5f 4f       	sbci	r21, 0xFF	; 255
    1228:	5d 8f       	std	Y+29, r21	; 0x1d
    122a:	4c 8f       	std	Y+28, r20	; 0x1c
    122c:	c1 cf       	rjmp	.-126    	; 0x11b0 <__EEPROM_REGION_LENGTH__+0x1b0>
    122e:	20 e0       	ldi	r18, 0x00	; 0
    1230:	30 e0       	ldi	r19, 0x00	; 0
    1232:	40 ea       	ldi	r20, 0xA0	; 160
    1234:	50 e4       	ldi	r21, 0x40	; 64
    1236:	6b 85       	ldd	r22, Y+11	; 0x0b
    1238:	7d 85       	ldd	r23, Y+13	; 0x0d
    123a:	8e 89       	ldd	r24, Y+22	; 0x16
    123c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    123e:	0e 94 b4 23 	call	0x4768	; 0x4768 <__mulsf3>
    1242:	2b 01       	movw	r4, r22
    1244:	3c 01       	movw	r6, r24
    1246:	9b 01       	movw	r18, r22
    1248:	ac 01       	movw	r20, r24
    124a:	c7 01       	movw	r24, r14
    124c:	b6 01       	movw	r22, r12
    124e:	0e 94 9e 23 	call	0x473c	; 0x473c <__cmpsf2>
    1252:	87 fd       	sbrc	r24, 7
    1254:	0b c0       	rjmp	.+22     	; 0x126c <__EEPROM_REGION_LENGTH__+0x26c>
    1256:	a3 01       	movw	r20, r6
    1258:	92 01       	movw	r18, r4
    125a:	c7 01       	movw	r24, r14
    125c:	b6 01       	movw	r22, r12
    125e:	0e 94 9e 23 	call	0x473c	; 0x473c <__cmpsf2>
    1262:	81 11       	cpse	r24, r1
    1264:	06 c0       	rjmp	.+12     	; 0x1272 <__EEPROM_REGION_LENGTH__+0x272>
    1266:	fc a1       	ldd	r31, Y+36	; 0x24
    1268:	f0 fd       	sbrc	r31, 0
    126a:	03 c0       	rjmp	.+6      	; 0x1272 <__EEPROM_REGION_LENGTH__+0x272>
    126c:	41 2c       	mov	r4, r1
    126e:	51 2c       	mov	r5, r1
    1270:	32 01       	movw	r6, r4
    1272:	a3 01       	movw	r20, r6
    1274:	92 01       	movw	r18, r4
    1276:	c5 01       	movw	r24, r10
    1278:	b4 01       	movw	r22, r8
    127a:	0e 94 76 23 	call	0x46ec	; 0x46ec <__addsf3>
    127e:	4b 01       	movw	r8, r22
    1280:	5c 01       	movw	r10, r24
    1282:	2d 89       	ldd	r18, Y+21	; 0x15
    1284:	25 36       	cpi	r18, 0x65	; 101
    1286:	11 f0       	breq	.+4      	; 0x128c <__EEPROM_REGION_LENGTH__+0x28c>
    1288:	31 01       	movw	r6, r2
    128a:	02 c0       	rjmp	.+4      	; 0x1290 <__EEPROM_REGION_LENGTH__+0x290>
    128c:	61 2c       	mov	r6, r1
    128e:	71 2c       	mov	r7, r1
    1290:	23 01       	movw	r4, r6
    1292:	4d a1       	ldd	r20, Y+37	; 0x25
    1294:	5e a1       	ldd	r21, Y+38	; 0x26
    1296:	44 1a       	sub	r4, r20
    1298:	55 0a       	sbc	r5, r21
    129a:	c9 88       	ldd	r12, Y+17	; 0x11
    129c:	da 88       	ldd	r13, Y+18	; 0x12
    129e:	00 e0       	ldi	r16, 0x00	; 0
    12a0:	10 e0       	ldi	r17, 0x00	; 0
    12a2:	1c 86       	std	Y+12, r1	; 0x0c
    12a4:	1b 86       	std	Y+11, r1	; 0x0b
    12a6:	89 85       	ldd	r24, Y+9	; 0x09
    12a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    12aa:	80 71       	andi	r24, 0x10	; 16
    12ac:	99 27       	eor	r25, r25
    12ae:	9f 8b       	std	Y+23, r25	; 0x17
    12b0:	8e 8b       	std	Y+22, r24	; 0x16
    12b2:	64 14       	cp	r6, r4
    12b4:	75 04       	cpc	r7, r5
    12b6:	31 f4       	brne	.+12     	; 0x12c4 <__EEPROM_REGION_LENGTH__+0x2c4>
    12b8:	8b 85       	ldd	r24, Y+11	; 0x0b
    12ba:	9c 85       	ldd	r25, Y+12	; 0x0c
    12bc:	89 2b       	or	r24, r25
    12be:	09 f4       	brne	.+2      	; 0x12c2 <__EEPROM_REGION_LENGTH__+0x2c2>
    12c0:	9a c0       	rjmp	.+308    	; 0x13f6 <__EEPROM_REGION_LENGTH__+0x3f6>
    12c2:	a6 c0       	rjmp	.+332    	; 0x1410 <__EEPROM_REGION_LENGTH__+0x410>
    12c4:	dd 8e       	std	Y+29, r13	; 0x1d
    12c6:	cc 8e       	std	Y+28, r12	; 0x1c
    12c8:	e8 8d       	ldd	r30, Y+24	; 0x18
    12ca:	f9 8d       	ldd	r31, Y+25	; 0x19
    12cc:	80 85       	ldd	r24, Z+8	; 0x08
    12ce:	91 85       	ldd	r25, Z+9	; 0x09
    12d0:	05 97       	sbiw	r24, 0x05	; 5
    12d2:	c8 16       	cp	r12, r24
    12d4:	d9 06       	cpc	r13, r25
    12d6:	80 f7       	brcc	.-32     	; 0x12b8 <__EEPROM_REGION_LENGTH__+0x2b8>
    12d8:	2b 81       	ldd	r18, Y+3	; 0x03
    12da:	3c 81       	ldd	r19, Y+4	; 0x04
    12dc:	4d 81       	ldd	r20, Y+5	; 0x05
    12de:	5e 81       	ldd	r21, Y+6	; 0x06
    12e0:	c5 01       	movw	r24, r10
    12e2:	b4 01       	movw	r22, r8
    12e4:	0e 94 b0 23 	call	0x4760	; 0x4760 <__divsf3>
    12e8:	0e 94 16 15 	call	0x2a2c	; 0x2a2c <floorf>
    12ec:	6d 87       	std	Y+13, r22	; 0x0d
    12ee:	7e 87       	std	Y+14, r23	; 0x0e
    12f0:	8f 87       	std	Y+15, r24	; 0x0f
    12f2:	98 8b       	std	Y+16, r25	; 0x10
    12f4:	0e 94 7c 23 	call	0x46f8	; 0x46f8 <__fixsfsi>
    12f8:	cb 01       	movw	r24, r22
    12fa:	ee 89       	ldd	r30, Y+22	; 0x16
    12fc:	ff 89       	ldd	r31, Y+23	; 0x17
    12fe:	ef 2b       	or	r30, r31
    1300:	69 f4       	brne	.+26     	; 0x131c <__EEPROM_REGION_LENGTH__+0x31c>
    1302:	89 2b       	or	r24, r25
    1304:	59 f4       	brne	.+22     	; 0x131c <__EEPROM_REGION_LENGTH__+0x31c>
    1306:	fb 8d       	ldd	r31, Y+27	; 0x1b
    1308:	f7 36       	cpi	r31, 0x67	; 103
    130a:	41 f4       	brne	.+16     	; 0x131c <__EEPROM_REGION_LENGTH__+0x31c>
    130c:	77 fe       	sbrs	r7, 7
    130e:	06 c0       	rjmp	.+12     	; 0x131c <__EEPROM_REGION_LENGTH__+0x31c>
    1310:	98 01       	movw	r18, r16
    1312:	2f 5f       	subi	r18, 0xFF	; 255
    1314:	3f 4f       	sbci	r19, 0xFF	; 255
    1316:	3d 8f       	std	Y+29, r19	; 0x1d
    1318:	2c 8f       	std	Y+28, r18	; 0x1c
    131a:	43 c0       	rjmp	.+134    	; 0x13a2 <__EEPROM_REGION_LENGTH__+0x3a2>
    131c:	4b 85       	ldd	r20, Y+11	; 0x0b
    131e:	5c 85       	ldd	r21, Y+12	; 0x0c
    1320:	45 2b       	or	r20, r21
    1322:	b1 f4       	brne	.+44     	; 0x1350 <__EEPROM_REGION_LENGTH__+0x350>
    1324:	77 fe       	sbrs	r7, 7
    1326:	14 c0       	rjmp	.+40     	; 0x1350 <__EEPROM_REGION_LENGTH__+0x350>
    1328:	5f ef       	ldi	r21, 0xFF	; 255
    132a:	c5 1a       	sub	r12, r21
    132c:	d5 0a       	sbc	r13, r21
    132e:	e9 81       	ldd	r30, Y+1	; 0x01
    1330:	fa 81       	ldd	r31, Y+2	; 0x02
    1332:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1334:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1336:	e8 0f       	add	r30, r24
    1338:	f9 1f       	adc	r31, r25
    133a:	9e e2       	ldi	r25, 0x2E	; 46
    133c:	90 83       	st	Z, r25
    133e:	ef 81       	ldd	r30, Y+7	; 0x07
    1340:	f8 85       	ldd	r31, Y+8	; 0x08
    1342:	31 97       	sbiw	r30, 0x01	; 1
    1344:	f8 87       	std	Y+8, r31	; 0x08
    1346:	ef 83       	std	Y+7, r30	; 0x07
    1348:	21 e0       	ldi	r18, 0x01	; 1
    134a:	30 e0       	ldi	r19, 0x00	; 0
    134c:	3c 87       	std	Y+12, r19	; 0x0c
    134e:	2b 87       	std	Y+11, r18	; 0x0b
    1350:	e9 81       	ldd	r30, Y+1	; 0x01
    1352:	fa 81       	ldd	r31, Y+2	; 0x02
    1354:	ec 0d       	add	r30, r12
    1356:	fd 1d       	adc	r31, r13
    1358:	1d 8f       	std	Y+29, r17	; 0x1d
    135a:	0c 8f       	std	Y+28, r16	; 0x1c
    135c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    135e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1360:	89 2b       	or	r24, r25
    1362:	49 f0       	breq	.+18     	; 0x1376 <__EEPROM_REGION_LENGTH__+0x376>
    1364:	30 e3       	ldi	r19, 0x30	; 48
    1366:	31 93       	st	Z+, r19
    1368:	4c 8d       	ldd	r20, Y+28	; 0x1c
    136a:	5d 8d       	ldd	r21, Y+29	; 0x1d
    136c:	41 50       	subi	r20, 0x01	; 1
    136e:	51 09       	sbc	r21, r1
    1370:	5d 8f       	std	Y+29, r21	; 0x1d
    1372:	4c 8f       	std	Y+28, r20	; 0x1c
    1374:	f3 cf       	rjmp	.-26     	; 0x135c <__EEPROM_REGION_LENGTH__+0x35c>
    1376:	c8 01       	movw	r24, r16
    1378:	8c 0d       	add	r24, r12
    137a:	9d 1d       	adc	r25, r13
    137c:	2f 81       	ldd	r18, Y+7	; 0x07
    137e:	38 85       	ldd	r19, Y+8	; 0x08
    1380:	20 1b       	sub	r18, r16
    1382:	31 0b       	sbc	r19, r17
    1384:	6c 01       	movw	r12, r24
    1386:	ef ef       	ldi	r30, 0xFF	; 255
    1388:	ce 1a       	sub	r12, r30
    138a:	de 0a       	sbc	r13, r30
    138c:	e9 81       	ldd	r30, Y+1	; 0x01
    138e:	fa 81       	ldd	r31, Y+2	; 0x02
    1390:	e8 0f       	add	r30, r24
    1392:	f9 1f       	adc	r31, r25
    1394:	60 5d       	subi	r22, 0xD0	; 208
    1396:	60 83       	st	Z, r22
    1398:	a9 01       	movw	r20, r18
    139a:	41 50       	subi	r20, 0x01	; 1
    139c:	51 09       	sbc	r21, r1
    139e:	58 87       	std	Y+8, r21	; 0x08
    13a0:	4f 83       	std	Y+7, r20	; 0x07
    13a2:	85 01       	movw	r16, r10
    13a4:	74 01       	movw	r14, r8
    13a6:	17 fb       	bst	r17, 7
    13a8:	10 95       	com	r17
    13aa:	17 f9       	bld	r17, 7
    13ac:	10 95       	com	r17
    13ae:	2b 81       	ldd	r18, Y+3	; 0x03
    13b0:	3c 81       	ldd	r19, Y+4	; 0x04
    13b2:	4d 81       	ldd	r20, Y+5	; 0x05
    13b4:	5e 81       	ldd	r21, Y+6	; 0x06
    13b6:	6d 85       	ldd	r22, Y+13	; 0x0d
    13b8:	7e 85       	ldd	r23, Y+14	; 0x0e
    13ba:	8f 85       	ldd	r24, Y+15	; 0x0f
    13bc:	98 89       	ldd	r25, Y+16	; 0x10
    13be:	0e 94 78 14 	call	0x28f0	; 0x28f0 <fmaf>
    13c2:	4b 01       	movw	r8, r22
    13c4:	5c 01       	movw	r10, r24
    13c6:	b7 fa       	bst	r11, 7
    13c8:	b0 94       	com	r11
    13ca:	b7 f8       	bld	r11, 7
    13cc:	b0 94       	com	r11
    13ce:	20 e0       	ldi	r18, 0x00	; 0
    13d0:	30 e0       	ldi	r19, 0x00	; 0
    13d2:	40 e2       	ldi	r20, 0x20	; 32
    13d4:	51 e4       	ldi	r21, 0x41	; 65
    13d6:	6b 81       	ldd	r22, Y+3	; 0x03
    13d8:	7c 81       	ldd	r23, Y+4	; 0x04
    13da:	8d 81       	ldd	r24, Y+5	; 0x05
    13dc:	9e 81       	ldd	r25, Y+6	; 0x06
    13de:	0e 94 b0 23 	call	0x4760	; 0x4760 <__divsf3>
    13e2:	6b 83       	std	Y+3, r22	; 0x03
    13e4:	7c 83       	std	Y+4, r23	; 0x04
    13e6:	8d 83       	std	Y+5, r24	; 0x05
    13e8:	9e 83       	std	Y+6, r25	; 0x06
    13ea:	51 e0       	ldi	r21, 0x01	; 1
    13ec:	65 1a       	sub	r6, r21
    13ee:	71 08       	sbc	r7, r1
    13f0:	0c 8d       	ldd	r16, Y+28	; 0x1c
    13f2:	1d 8d       	ldd	r17, Y+29	; 0x1d
    13f4:	5e cf       	rjmp	.-324    	; 0x12b2 <__EEPROM_REGION_LENGTH__+0x2b2>
    13f6:	f9 85       	ldd	r31, Y+9	; 0x09
    13f8:	f4 ff       	sbrs	r31, 4
    13fa:	0a c0       	rjmp	.+20     	; 0x1410 <__EEPROM_REGION_LENGTH__+0x410>
    13fc:	e9 81       	ldd	r30, Y+1	; 0x01
    13fe:	fa 81       	ldd	r31, Y+2	; 0x02
    1400:	ec 0d       	add	r30, r12
    1402:	fd 1d       	adc	r31, r13
    1404:	8e e2       	ldi	r24, 0x2E	; 46
    1406:	80 83       	st	Z, r24
    1408:	96 01       	movw	r18, r12
    140a:	2f 5f       	subi	r18, 0xFF	; 255
    140c:	3f 4f       	sbci	r19, 0xFF	; 255
    140e:	69 01       	movw	r12, r18
    1410:	49 81       	ldd	r20, Y+1	; 0x01
    1412:	5a 81       	ldd	r21, Y+2	; 0x02
    1414:	4c 0d       	add	r20, r12
    1416:	5d 1d       	adc	r21, r13
    1418:	5c 87       	std	Y+12, r21	; 0x0c
    141a:	4b 87       	std	Y+11, r20	; 0x0b
    141c:	fa 01       	movw	r30, r20
    141e:	10 82       	st	Z, r1
    1420:	fd 89       	ldd	r31, Y+21	; 0x15
    1422:	f5 36       	cpi	r31, 0x65	; 101
    1424:	09 f0       	breq	.+2      	; 0x1428 <__EEPROM_REGION_LENGTH__+0x428>
    1426:	61 c0       	rjmp	.+194    	; 0x14ea <__EEPROM_REGION_LENGTH__+0x4ea>
    1428:	e9 81       	ldd	r30, Y+1	; 0x01
    142a:	fa 81       	ldd	r31, Y+2	; 0x02
    142c:	28 a1       	ldd	r18, Y+32	; 0x20
    142e:	39 a1       	ldd	r19, Y+33	; 0x21
    1430:	e2 0f       	add	r30, r18
    1432:	f3 1f       	adc	r31, r19
    1434:	31 97       	sbiw	r30, 0x01	; 1
    1436:	10 82       	st	Z, r1
    1438:	37 fe       	sbrs	r3, 7
    143a:	06 c0       	rjmp	.+12     	; 0x1448 <__EEPROM_REGION_LENGTH__+0x448>
    143c:	31 94       	neg	r3
    143e:	21 94       	neg	r2
    1440:	31 08       	sbc	r3, r1
    1442:	01 e0       	ldi	r16, 0x01	; 1
    1444:	10 e0       	ldi	r17, 0x00	; 0
    1446:	02 c0       	rjmp	.+4      	; 0x144c <__EEPROM_REGION_LENGTH__+0x44c>
    1448:	00 e0       	ldi	r16, 0x00	; 0
    144a:	10 e0       	ldi	r17, 0x00	; 0
    144c:	e8 a1       	ldd	r30, Y+32	; 0x20
    144e:	f9 a1       	ldd	r31, Y+33	; 0x21
    1450:	31 97       	sbiw	r30, 0x01	; 1
    1452:	49 81       	ldd	r20, Y+1	; 0x01
    1454:	5a 81       	ldd	r21, Y+2	; 0x02
    1456:	e4 0f       	add	r30, r20
    1458:	f5 1f       	adc	r31, r21
    145a:	22 e0       	ldi	r18, 0x02	; 2
    145c:	30 e0       	ldi	r19, 0x00	; 0
    145e:	8a e0       	ldi	r24, 0x0A	; 10
    1460:	e8 2e       	mov	r14, r24
    1462:	f1 2c       	mov	r15, r1
    1464:	cf 01       	movw	r24, r30
    1466:	49 81       	ldd	r20, Y+1	; 0x01
    1468:	5a 81       	ldd	r21, Y+2	; 0x02
    146a:	84 1b       	sub	r24, r20
    146c:	95 0b       	sbc	r25, r21
    146e:	21 14       	cp	r2, r1
    1470:	31 04       	cpc	r3, r1
    1472:	79 f0       	breq	.+30     	; 0x1492 <__EEPROM_REGION_LENGTH__+0x492>
    1474:	c1 01       	movw	r24, r2
    1476:	b7 01       	movw	r22, r14
    1478:	0e 94 06 22 	call	0x440c	; 0x440c <__divmodhi4>
    147c:	80 5d       	subi	r24, 0xD0	; 208
    147e:	82 93       	st	-Z, r24
    1480:	1b 01       	movw	r2, r22
    1482:	21 50       	subi	r18, 0x01	; 1
    1484:	31 09       	sbc	r19, r1
    1486:	8f 81       	ldd	r24, Y+7	; 0x07
    1488:	98 85       	ldd	r25, Y+8	; 0x08
    148a:	01 97       	sbiw	r24, 0x01	; 1
    148c:	98 87       	std	Y+8, r25	; 0x08
    148e:	8f 83       	std	Y+7, r24	; 0x07
    1490:	e9 cf       	rjmp	.-46     	; 0x1464 <__EEPROM_REGION_LENGTH__+0x464>
    1492:	12 16       	cp	r1, r18
    1494:	13 06       	cpc	r1, r19
    1496:	74 f3       	brlt	.-36     	; 0x1474 <__EEPROM_REGION_LENGTH__+0x474>
    1498:	fc 01       	movw	r30, r24
    149a:	31 97       	sbiw	r30, 0x01	; 1
    149c:	e4 0f       	add	r30, r20
    149e:	f5 1f       	adc	r31, r21
    14a0:	01 2b       	or	r16, r17
    14a2:	11 f4       	brne	.+4      	; 0x14a8 <__EEPROM_REGION_LENGTH__+0x4a8>
    14a4:	2b e2       	ldi	r18, 0x2B	; 43
    14a6:	01 c0       	rjmp	.+2      	; 0x14aa <__EEPROM_REGION_LENGTH__+0x4aa>
    14a8:	2d e2       	ldi	r18, 0x2D	; 45
    14aa:	20 83       	st	Z, r18
    14ac:	02 97       	sbiw	r24, 0x02	; 2
    14ae:	e9 81       	ldd	r30, Y+1	; 0x01
    14b0:	fa 81       	ldd	r31, Y+2	; 0x02
    14b2:	e8 0f       	add	r30, r24
    14b4:	f9 1f       	adc	r31, r25
    14b6:	2a a1       	ldd	r18, Y+34	; 0x22
    14b8:	3b a1       	ldd	r19, Y+35	; 0x23
    14ba:	21 54       	subi	r18, 0x41	; 65
    14bc:	31 09       	sbc	r19, r1
    14be:	2a 31       	cpi	r18, 0x1A	; 26
    14c0:	31 05       	cpc	r19, r1
    14c2:	10 f0       	brcs	.+4      	; 0x14c8 <__EEPROM_REGION_LENGTH__+0x4c8>
    14c4:	25 e6       	ldi	r18, 0x65	; 101
    14c6:	01 c0       	rjmp	.+2      	; 0x14ca <__EEPROM_REGION_LENGTH__+0x4ca>
    14c8:	25 e4       	ldi	r18, 0x45	; 69
    14ca:	20 83       	st	Z, r18
    14cc:	2f 81       	ldd	r18, Y+7	; 0x07
    14ce:	38 85       	ldd	r19, Y+8	; 0x08
    14d0:	22 50       	subi	r18, 0x02	; 2
    14d2:	31 09       	sbc	r19, r1
    14d4:	38 87       	std	Y+8, r19	; 0x08
    14d6:	2f 83       	std	Y+7, r18	; 0x07
    14d8:	c8 16       	cp	r12, r24
    14da:	d9 06       	cpc	r13, r25
    14dc:	34 f4       	brge	.+12     	; 0x14ea <__EEPROM_REGION_LENGTH__+0x4ea>
    14de:	af 01       	movw	r20, r30
    14e0:	60 e8       	ldi	r22, 0x80	; 128
    14e2:	8b 85       	ldd	r24, Y+11	; 0x0b
    14e4:	9c 85       	ldd	r25, Y+12	; 0x0c
    14e6:	0e 94 bb 22 	call	0x4576	; 0x4576 <strcpy>
    14ea:	49 81       	ldd	r20, Y+1	; 0x01
    14ec:	5a 81       	ldd	r21, Y+2	; 0x02
    14ee:	3a 01       	movw	r6, r20
    14f0:	80 e8       	ldi	r24, 0x80	; 128
    14f2:	88 2e       	mov	r8, r24
    14f4:	99 85       	ldd	r25, Y+9	; 0x09
    14f6:	91 ff       	sbrs	r25, 1
    14f8:	2e c0       	rjmp	.+92     	; 0x1556 <__EEPROM_REGION_LENGTH__+0x556>
    14fa:	90 fd       	sbrc	r25, 0
    14fc:	2c c0       	rjmp	.+88     	; 0x1556 <__EEPROM_REGION_LENGTH__+0x556>
    14fe:	ef 81       	ldd	r30, Y+7	; 0x07
    1500:	f8 85       	ldd	r31, Y+8	; 0x08
    1502:	1e 16       	cp	r1, r30
    1504:	1f 06       	cpc	r1, r31
    1506:	3c f5       	brge	.+78     	; 0x1556 <__EEPROM_REGION_LENGTH__+0x556>
    1508:	88 2d       	mov	r24, r8
    150a:	b3 01       	movw	r22, r6
    150c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <strlen>
    1510:	29 81       	ldd	r18, Y+1	; 0x01
    1512:	3a 81       	ldd	r19, Y+2	; 0x02
    1514:	82 0f       	add	r24, r18
    1516:	93 1f       	adc	r25, r19
    1518:	9c 01       	movw	r18, r24
    151a:	49 81       	ldd	r20, Y+1	; 0x01
    151c:	5a 81       	ldd	r21, Y+2	; 0x02
    151e:	24 1b       	sub	r18, r20
    1520:	35 0b       	sbc	r19, r21
    1522:	e9 89       	ldd	r30, Y+17	; 0x11
    1524:	fa 89       	ldd	r31, Y+18	; 0x12
    1526:	2e 17       	cp	r18, r30
    1528:	3f 07       	cpc	r19, r31
    152a:	4c f0       	brlt	.+18     	; 0x153e <__EEPROM_REGION_LENGTH__+0x53e>
    152c:	fc 01       	movw	r30, r24
    152e:	20 81       	ld	r18, Z
    1530:	ef 81       	ldd	r30, Y+7	; 0x07
    1532:	f8 85       	ldd	r31, Y+8	; 0x08
    1534:	e8 0f       	add	r30, r24
    1536:	f9 1f       	adc	r31, r25
    1538:	20 83       	st	Z, r18
    153a:	01 97       	sbiw	r24, 0x01	; 1
    153c:	ed cf       	rjmp	.-38     	; 0x1518 <__EEPROM_REGION_LENGTH__+0x518>
    153e:	4f 81       	ldd	r20, Y+7	; 0x07
    1540:	58 85       	ldd	r21, Y+8	; 0x08
    1542:	60 e3       	ldi	r22, 0x30	; 48
    1544:	70 e0       	ldi	r23, 0x00	; 0
    1546:	89 81       	ldd	r24, Y+1	; 0x01
    1548:	9a 81       	ldd	r25, Y+2	; 0x02
    154a:	8e 0f       	add	r24, r30
    154c:	9f 1f       	adc	r25, r31
    154e:	0e 94 38 23 	call	0x4670	; 0x4670 <memset>
    1552:	1c 8a       	std	Y+20, r1	; 0x14
    1554:	1b 8a       	std	Y+19, r1	; 0x13
    1556:	88 2d       	mov	r24, r8
    1558:	b3 01       	movw	r22, r6
    155a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <strlen>
    155e:	e9 84       	ldd	r14, Y+9	; 0x09
    1560:	fa 84       	ldd	r15, Y+10	; 0x0a
    1562:	0b 89       	ldd	r16, Y+19	; 0x13
    1564:	1c 89       	ldd	r17, Y+20	; 0x14
    1566:	9c 01       	movw	r18, r24
    1568:	68 2d       	mov	r22, r8
    156a:	a3 01       	movw	r20, r6
    156c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    156e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1570:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <__pad>
    1574:	a6 96       	adiw	r28, 0x26	; 38
    1576:	e2 e1       	ldi	r30, 0x12	; 18
    1578:	0c 94 89 21 	jmp	0x4312	; 0x4312 <__epilogue_restores__>
    157c:	59 85       	ldd	r21, Y+9	; 0x09
    157e:	53 ff       	sbrs	r21, 3
    1580:	00 cd       	rjmp	.-1536   	; 0xf82 <__fmt_fp+0x8e>
    1582:	80 e2       	ldi	r24, 0x20	; 32
    1584:	f0 cc       	rjmp	.-1568   	; 0xf66 <__fmt_fp+0x72>
    1586:	2c ef       	ldi	r18, 0xFC	; 252
    1588:	22 16       	cp	r2, r18
    158a:	2f ef       	ldi	r18, 0xFF	; 255
    158c:	32 06       	cpc	r3, r18
    158e:	4c f0       	brlt	.+18     	; 0x15a2 <__EEPROM_REGION_LENGTH__+0x5a2>
    1590:	4d a1       	ldd	r20, Y+37	; 0x25
    1592:	5e a1       	ldd	r21, Y+38	; 0x26
    1594:	24 16       	cp	r2, r20
    1596:	35 06       	cpc	r3, r21
    1598:	0c f4       	brge	.+2      	; 0x159c <__EEPROM_REGION_LENGTH__+0x59c>
    159a:	df cd       	rjmp	.-1090   	; 0x115a <__EEPROM_REGION_LENGTH__+0x15a>
    159c:	55 e6       	ldi	r21, 0x65	; 101
    159e:	5d 8b       	std	Y+21, r21	; 0x15
    15a0:	fb cd       	rjmp	.-1034   	; 0x1198 <__EEPROM_REGION_LENGTH__+0x198>
    15a2:	35 e6       	ldi	r19, 0x65	; 101
    15a4:	3d 8b       	std	Y+21, r19	; 0x15
    15a6:	f8 cd       	rjmp	.-1040   	; 0x1198 <__EEPROM_REGION_LENGTH__+0x198>
    15a8:	46 e6       	ldi	r20, 0x66	; 102
    15aa:	4d 8b       	std	Y+21, r20	; 0x15
    15ac:	f5 cd       	rjmp	.-1046   	; 0x1198 <__EEPROM_REGION_LENGTH__+0x198>

Disassembly of section .text.__fmt_a:

000015ae <__fmt_a>:
    15ae:	a0 e2       	ldi	r26, 0x20	; 32
    15b0:	b0 e0       	ldi	r27, 0x00	; 0
    15b2:	ed ed       	ldi	r30, 0xDD	; 221
    15b4:	fa e0       	ldi	r31, 0x0A	; 10
    15b6:	0c 94 37 21 	jmp	0x426e	; 0x426e <__prologue_saves__>
    15ba:	9d 8f       	std	Y+29, r25	; 0x1d
    15bc:	8c 8f       	std	Y+28, r24	; 0x1c
    15be:	fb 01       	movw	r30, r22
    15c0:	29 83       	std	Y+1, r18	; 0x01
    15c2:	20 81       	ld	r18, Z
    15c4:	2d 83       	std	Y+5, r18	; 0x05
    15c6:	31 81       	ldd	r19, Z+1	; 0x01
    15c8:	3e 8f       	std	Y+30, r19	; 0x1e
    15ca:	82 81       	ldd	r24, Z+2	; 0x02
    15cc:	93 81       	ldd	r25, Z+3	; 0x03
    15ce:	9b 8b       	std	Y+19, r25	; 0x13
    15d0:	8a 8b       	std	Y+18, r24	; 0x12
    15d2:	24 81       	ldd	r18, Z+4	; 0x04
    15d4:	35 81       	ldd	r19, Z+5	; 0x05
    15d6:	39 87       	std	Y+9, r19	; 0x09
    15d8:	28 87       	std	Y+8, r18	; 0x08
    15da:	80 85       	ldd	r24, Z+8	; 0x08
    15dc:	91 85       	ldd	r25, Z+9	; 0x09
    15de:	99 8f       	std	Y+25, r25	; 0x19
    15e0:	88 8f       	std	Y+24, r24	; 0x18
    15e2:	46 80       	ldd	r4, Z+6	; 0x06
    15e4:	57 80       	ldd	r5, Z+7	; 0x07
    15e6:	fa 01       	movw	r30, r20
    15e8:	c0 80       	ld	r12, Z
    15ea:	d1 80       	ldd	r13, Z+1	; 0x01
    15ec:	e2 80       	ldd	r14, Z+2	; 0x02
    15ee:	f3 80       	ldd	r15, Z+3	; 0x03
    15f0:	20 e0       	ldi	r18, 0x00	; 0
    15f2:	30 e0       	ldi	r19, 0x00	; 0
    15f4:	a9 01       	movw	r20, r18
    15f6:	c7 01       	movw	r24, r14
    15f8:	b6 01       	movw	r22, r12
    15fa:	0e 94 9e 23 	call	0x473c	; 0x473c <__cmpsf2>
    15fe:	87 ff       	sbrs	r24, 7
    1600:	06 c0       	rjmp	.+12     	; 0x160e <__fmt_a+0x60>
    1602:	f7 fa       	bst	r15, 7
    1604:	f0 94       	com	r15
    1606:	f7 f8       	bld	r15, 7
    1608:	f0 94       	com	r15
    160a:	8d e2       	ldi	r24, 0x2D	; 45
    160c:	04 c0       	rjmp	.+8      	; 0x1616 <__fmt_a+0x68>
    160e:	5d 81       	ldd	r21, Y+5	; 0x05
    1610:	52 ff       	sbrs	r21, 2
    1612:	f6 c2       	rjmp	.+1516   	; 0x1c00 <__fmt_a+0x652>
    1614:	8b e2       	ldi	r24, 0x2B	; 43
    1616:	f2 01       	movw	r30, r4
    1618:	80 83       	st	Z, r24
    161a:	28 85       	ldd	r18, Y+8	; 0x08
    161c:	39 85       	ldd	r19, Y+9	; 0x09
    161e:	21 50       	subi	r18, 0x01	; 1
    1620:	31 09       	sbc	r19, r1
    1622:	3f 87       	std	Y+15, r19	; 0x0f
    1624:	2e 87       	std	Y+14, r18	; 0x0e
    1626:	41 e0       	ldi	r20, 0x01	; 1
    1628:	50 e0       	ldi	r21, 0x00	; 0
    162a:	5c 83       	std	Y+4, r21	; 0x04
    162c:	4b 83       	std	Y+3, r20	; 0x03
    162e:	06 c0       	rjmp	.+12     	; 0x163c <__fmt_a+0x8e>
    1630:	88 85       	ldd	r24, Y+8	; 0x08
    1632:	99 85       	ldd	r25, Y+9	; 0x09
    1634:	9f 87       	std	Y+15, r25	; 0x0f
    1636:	8e 87       	std	Y+14, r24	; 0x0e
    1638:	1c 82       	std	Y+4, r1	; 0x04
    163a:	1b 82       	std	Y+3, r1	; 0x03
    163c:	b7 01       	movw	r22, r14
    163e:	a6 01       	movw	r20, r12
    1640:	7f 77       	andi	r23, 0x7F	; 127
    1642:	e9 81       	ldd	r30, Y+1	; 0x01
    1644:	0e 2e       	mov	r0, r30
    1646:	00 0c       	add	r0, r0
    1648:	ff 0b       	sbc	r31, r31
    164a:	f9 8b       	std	Y+17, r31	; 0x11
    164c:	e8 8b       	std	Y+16, r30	; 0x10
    164e:	41 15       	cp	r20, r1
    1650:	51 05       	cpc	r21, r1
    1652:	f0 e8       	ldi	r31, 0x80	; 128
    1654:	6f 07       	cpc	r22, r31
    1656:	ff e7       	ldi	r31, 0x7F	; 127
    1658:	7f 07       	cpc	r23, r31
    165a:	c1 f4       	brne	.+48     	; 0x168c <__fmt_a+0xde>
    165c:	28 89       	ldd	r18, Y+16	; 0x10
    165e:	39 89       	ldd	r19, Y+17	; 0x11
    1660:	21 54       	subi	r18, 0x41	; 65
    1662:	31 09       	sbc	r19, r1
    1664:	8b 81       	ldd	r24, Y+3	; 0x03
    1666:	9c 81       	ldd	r25, Y+4	; 0x04
    1668:	84 0d       	add	r24, r4
    166a:	95 1d       	adc	r25, r5
    166c:	2a 31       	cpi	r18, 0x1A	; 26
    166e:	31 05       	cpc	r19, r1
    1670:	20 f4       	brcc	.+8      	; 0x167a <__fmt_a+0xcc>
    1672:	45 ea       	ldi	r20, 0xA5	; 165
    1674:	56 e0       	ldi	r21, 0x06	; 6
    1676:	60 e0       	ldi	r22, 0x00	; 0
    1678:	03 c0       	rjmp	.+6      	; 0x1680 <__fmt_a+0xd2>
    167a:	49 ea       	ldi	r20, 0xA9	; 169
    167c:	56 e0       	ldi	r21, 0x06	; 6
    167e:	60 e0       	ldi	r22, 0x00	; 0
    1680:	0e 94 bb 22 	call	0x4576	; 0x4576 <strcpy>
    1684:	69 ea       	ldi	r22, 0xA9	; 169
    1686:	76 e0       	ldi	r23, 0x06	; 6
    1688:	80 e0       	ldi	r24, 0x00	; 0
    168a:	1c c0       	rjmp	.+56     	; 0x16c4 <__fmt_a+0x116>
    168c:	8b 81       	ldd	r24, Y+3	; 0x03
    168e:	9c 81       	ldd	r25, Y+4	; 0x04
    1690:	84 0d       	add	r24, r4
    1692:	95 1d       	adc	r25, r5
    1694:	41 30       	cpi	r20, 0x01	; 1
    1696:	51 05       	cpc	r21, r1
    1698:	60 48       	sbci	r22, 0x80	; 128
    169a:	7f 47       	sbci	r23, 0x7F	; 127
    169c:	e8 f0       	brcs	.+58     	; 0x16d8 <__fmt_a+0x12a>
    169e:	28 89       	ldd	r18, Y+16	; 0x10
    16a0:	39 89       	ldd	r19, Y+17	; 0x11
    16a2:	21 54       	subi	r18, 0x41	; 65
    16a4:	31 09       	sbc	r19, r1
    16a6:	2a 31       	cpi	r18, 0x1A	; 26
    16a8:	31 05       	cpc	r19, r1
    16aa:	20 f4       	brcc	.+8      	; 0x16b4 <__fmt_a+0x106>
    16ac:	4d ea       	ldi	r20, 0xAD	; 173
    16ae:	56 e0       	ldi	r21, 0x06	; 6
    16b0:	60 e0       	ldi	r22, 0x00	; 0
    16b2:	03 c0       	rjmp	.+6      	; 0x16ba <__fmt_a+0x10c>
    16b4:	41 eb       	ldi	r20, 0xB1	; 177
    16b6:	56 e0       	ldi	r21, 0x06	; 6
    16b8:	60 e0       	ldi	r22, 0x00	; 0
    16ba:	0e 94 bb 22 	call	0x4576	; 0x4576 <strcpy>
    16be:	61 eb       	ldi	r22, 0xB1	; 177
    16c0:	76 e0       	ldi	r23, 0x06	; 6
    16c2:	80 e0       	ldi	r24, 0x00	; 0
    16c4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <strlen>
    16c8:	a2 01       	movw	r20, r4
    16ca:	60 e8       	ldi	r22, 0x80	; 128
    16cc:	ed 80       	ldd	r14, Y+5	; 0x05
    16ce:	fe 8c       	ldd	r15, Y+30	; 0x1e
    16d0:	08 85       	ldd	r16, Y+8	; 0x08
    16d2:	19 85       	ldd	r17, Y+9	; 0x09
    16d4:	9c 01       	movw	r18, r24
    16d6:	8c c2       	rjmp	.+1304   	; 0x1bf0 <__fmt_a+0x642>
    16d8:	20 e3       	ldi	r18, 0x30	; 48
    16da:	fc 01       	movw	r30, r24
    16dc:	20 83       	st	Z, r18
    16de:	eb 81       	ldd	r30, Y+3	; 0x03
    16e0:	fc 81       	ldd	r31, Y+4	; 0x04
    16e2:	31 96       	adiw	r30, 0x01	; 1
    16e4:	e4 0d       	add	r30, r4
    16e6:	f5 1d       	adc	r31, r5
    16e8:	2b 81       	ldd	r18, Y+3	; 0x03
    16ea:	3c 81       	ldd	r19, Y+4	; 0x04
    16ec:	2e 5f       	subi	r18, 0xFE	; 254
    16ee:	3f 4f       	sbci	r19, 0xFF	; 255
    16f0:	3c 83       	std	Y+4, r19	; 0x04
    16f2:	2b 83       	std	Y+3, r18	; 0x03
    16f4:	48 89       	ldd	r20, Y+16	; 0x10
    16f6:	59 89       	ldd	r21, Y+17	; 0x11
    16f8:	41 54       	subi	r20, 0x41	; 65
    16fa:	51 09       	sbc	r21, r1
    16fc:	5b 8f       	std	Y+27, r21	; 0x1b
    16fe:	4a 8f       	std	Y+26, r20	; 0x1a
    1700:	4a 31       	cpi	r20, 0x1A	; 26
    1702:	51 05       	cpc	r21, r1
    1704:	10 f0       	brcs	.+4      	; 0x170a <__fmt_a+0x15c>
    1706:	88 e7       	ldi	r24, 0x78	; 120
    1708:	01 c0       	rjmp	.+2      	; 0x170c <__fmt_a+0x15e>
    170a:	88 e5       	ldi	r24, 0x58	; 88
    170c:	80 83       	st	Z, r24
    170e:	20 e0       	ldi	r18, 0x00	; 0
    1710:	30 e0       	ldi	r19, 0x00	; 0
    1712:	a9 01       	movw	r20, r18
    1714:	c7 01       	movw	r24, r14
    1716:	b6 01       	movw	r22, r12
    1718:	0e 94 9e 23 	call	0x473c	; 0x473c <__cmpsf2>
    171c:	61 2c       	mov	r6, r1
    171e:	71 2c       	mov	r7, r1
    1720:	1f 8e       	std	Y+31, r1	; 0x1f
    1722:	19 82       	std	Y+1, r1	; 0x01
    1724:	88 23       	and	r24, r24
    1726:	09 f4       	brne	.+2      	; 0x172a <__fmt_a+0x17c>
    1728:	64 c0       	rjmp	.+200    	; 0x17f2 <__fmt_a+0x244>
    172a:	50 e8       	ldi	r21, 0x80	; 128
    172c:	58 a3       	std	Y+32, r21	; 0x20
    172e:	8f e3       	ldi	r24, 0x3F	; 63
    1730:	8a 83       	std	Y+2, r24	; 0x02
    1732:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1734:	39 81       	ldd	r19, Y+1	; 0x01
    1736:	48 a1       	ldd	r20, Y+32	; 0x20
    1738:	5a 81       	ldd	r21, Y+2	; 0x02
    173a:	6f 8d       	ldd	r22, Y+31	; 0x1f
    173c:	79 81       	ldd	r23, Y+1	; 0x01
    173e:	88 a1       	ldd	r24, Y+32	; 0x20
    1740:	9a 81       	ldd	r25, Y+2	; 0x02
    1742:	0e 94 76 23 	call	0x46ec	; 0x46ec <__addsf3>
    1746:	5b 01       	movw	r10, r22
    1748:	8c 01       	movw	r16, r24
    174a:	a7 01       	movw	r20, r14
    174c:	96 01       	movw	r18, r12
    174e:	0e 94 a3 23 	call	0x4746	; 0x4746 <__gesf2>
    1752:	18 16       	cp	r1, r24
    1754:	0c f4       	brge	.+2      	; 0x1758 <__fmt_a+0x1aa>
    1756:	42 c0       	rjmp	.+132    	; 0x17dc <__fmt_a+0x22e>
    1758:	9f ef       	ldi	r25, 0xFF	; 255
    175a:	69 1a       	sub	r6, r25
    175c:	79 0a       	sbc	r7, r25
    175e:	af 8e       	std	Y+31, r10	; 0x1f
    1760:	b9 82       	std	Y+1, r11	; 0x01
    1762:	08 a3       	std	Y+32, r16	; 0x20
    1764:	1a 83       	std	Y+2, r17	; 0x02
    1766:	e5 cf       	rjmp	.-54     	; 0x1732 <__fmt_a+0x184>
    1768:	20 e0       	ldi	r18, 0x00	; 0
    176a:	30 e0       	ldi	r19, 0x00	; 0
    176c:	40 e0       	ldi	r20, 0x00	; 0
    176e:	5f e3       	ldi	r21, 0x3F	; 63
    1770:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1772:	79 81       	ldd	r23, Y+1	; 0x01
    1774:	88 a1       	ldd	r24, Y+32	; 0x20
    1776:	9a 81       	ldd	r25, Y+2	; 0x02
    1778:	0e 94 b4 23 	call	0x4768	; 0x4768 <__mulsf3>
    177c:	20 e0       	ldi	r18, 0x00	; 0
    177e:	30 e0       	ldi	r19, 0x00	; 0
    1780:	a9 01       	movw	r20, r18
    1782:	0e 94 9e 23 	call	0x473c	; 0x473c <__cmpsf2>
    1786:	81 11       	cpse	r24, r1
    1788:	18 c0       	rjmp	.+48     	; 0x17ba <__fmt_a+0x20c>
    178a:	20 e0       	ldi	r18, 0x00	; 0
    178c:	30 e0       	ldi	r19, 0x00	; 0
    178e:	40 e8       	ldi	r20, 0x80	; 128
    1790:	5a e5       	ldi	r21, 0x5A	; 90
    1792:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1794:	79 81       	ldd	r23, Y+1	; 0x01
    1796:	88 a1       	ldd	r24, Y+32	; 0x20
    1798:	9a 81       	ldd	r25, Y+2	; 0x02
    179a:	0e 94 b4 23 	call	0x4768	; 0x4768 <__mulsf3>
    179e:	6f 8f       	std	Y+31, r22	; 0x1f
    17a0:	79 83       	std	Y+1, r23	; 0x01
    17a2:	88 a3       	std	Y+32, r24	; 0x20
    17a4:	9a 83       	std	Y+2, r25	; 0x02
    17a6:	20 e0       	ldi	r18, 0x00	; 0
    17a8:	30 e0       	ldi	r19, 0x00	; 0
    17aa:	40 e8       	ldi	r20, 0x80	; 128
    17ac:	5a e5       	ldi	r21, 0x5A	; 90
    17ae:	c7 01       	movw	r24, r14
    17b0:	b6 01       	movw	r22, r12
    17b2:	0e 94 b4 23 	call	0x4768	; 0x4768 <__mulsf3>
    17b6:	6b 01       	movw	r12, r22
    17b8:	7c 01       	movw	r14, r24
    17ba:	20 e0       	ldi	r18, 0x00	; 0
    17bc:	30 e0       	ldi	r19, 0x00	; 0
    17be:	40 e0       	ldi	r20, 0x00	; 0
    17c0:	5f e3       	ldi	r21, 0x3F	; 63
    17c2:	6f 8d       	ldd	r22, Y+31	; 0x1f
    17c4:	79 81       	ldd	r23, Y+1	; 0x01
    17c6:	88 a1       	ldd	r24, Y+32	; 0x20
    17c8:	9a 81       	ldd	r25, Y+2	; 0x02
    17ca:	0e 94 b4 23 	call	0x4768	; 0x4768 <__mulsf3>
    17ce:	6f 8f       	std	Y+31, r22	; 0x1f
    17d0:	79 83       	std	Y+1, r23	; 0x01
    17d2:	88 a3       	std	Y+32, r24	; 0x20
    17d4:	9a 83       	std	Y+2, r25	; 0x02
    17d6:	a1 e0       	ldi	r26, 0x01	; 1
    17d8:	6a 1a       	sub	r6, r26
    17da:	71 08       	sbc	r7, r1
    17dc:	2f 8d       	ldd	r18, Y+31	; 0x1f
    17de:	39 81       	ldd	r19, Y+1	; 0x01
    17e0:	48 a1       	ldd	r20, Y+32	; 0x20
    17e2:	5a 81       	ldd	r21, Y+2	; 0x02
    17e4:	c7 01       	movw	r24, r14
    17e6:	b6 01       	movw	r22, r12
    17e8:	0e 94 9e 23 	call	0x473c	; 0x473c <__cmpsf2>
    17ec:	87 fd       	sbrc	r24, 7
    17ee:	bc cf       	rjmp	.-136    	; 0x1768 <__fmt_a+0x1ba>
    17f0:	04 c0       	rjmp	.+8      	; 0x17fa <__fmt_a+0x24c>
    17f2:	e0 e8       	ldi	r30, 0x80	; 128
    17f4:	e8 a3       	std	Y+32, r30	; 0x20
    17f6:	ff e3       	ldi	r31, 0x3F	; 63
    17f8:	fa 83       	std	Y+2, r31	; 0x02
    17fa:	2a 89       	ldd	r18, Y+18	; 0x12
    17fc:	3b 89       	ldd	r19, Y+19	; 0x13
    17fe:	37 fd       	sbrc	r19, 7
    1800:	02 c0       	rjmp	.+4      	; 0x1806 <__fmt_a+0x258>
    1802:	c9 01       	movw	r24, r18
    1804:	02 c0       	rjmp	.+4      	; 0x180a <__fmt_a+0x25c>
    1806:	88 e1       	ldi	r24, 0x18	; 24
    1808:	90 e0       	ldi	r25, 0x00	; 0
    180a:	ac 01       	movw	r20, r24
    180c:	4f 5f       	subi	r20, 0xFF	; 255
    180e:	5f 4f       	sbci	r21, 0xFF	; 255
    1810:	5b 87       	std	Y+11, r21	; 0x0b
    1812:	4a 87       	std	Y+10, r20	; 0x0a
    1814:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1816:	99 80       	ldd	r9, Y+1	; 0x01
    1818:	a8 a0       	ldd	r10, Y+32	; 0x20
    181a:	ba 80       	ldd	r11, Y+2	; 0x02
    181c:	16 01       	movw	r2, r12
    181e:	87 01       	movw	r16, r14
    1820:	1f 82       	std	Y+7, r1	; 0x07
    1822:	1e 82       	std	Y+6, r1	; 0x06
    1824:	94 01       	movw	r18, r8
    1826:	a5 01       	movw	r20, r10
    1828:	b1 01       	movw	r22, r2
    182a:	c8 01       	movw	r24, r16
    182c:	0e 94 b0 23 	call	0x4760	; 0x4760 <__divsf3>
    1830:	0e 94 16 15 	call	0x2a2c	; 0x2a2c <floorf>
    1834:	6c 8b       	std	Y+20, r22	; 0x14
    1836:	7d 8b       	std	Y+21, r23	; 0x15
    1838:	8e 8b       	std	Y+22, r24	; 0x16
    183a:	9f 8b       	std	Y+23, r25	; 0x17
    183c:	94 01       	movw	r18, r8
    183e:	a5 01       	movw	r20, r10
    1840:	0e 94 b4 23 	call	0x4768	; 0x4768 <__mulsf3>
    1844:	9b 01       	movw	r18, r22
    1846:	ac 01       	movw	r20, r24
    1848:	b1 01       	movw	r22, r2
    184a:	c8 01       	movw	r24, r16
    184c:	0e 94 75 23 	call	0x46ea	; 0x46ea <__subsf3>
    1850:	1b 01       	movw	r2, r22
    1852:	8c 01       	movw	r16, r24
    1854:	20 e0       	ldi	r18, 0x00	; 0
    1856:	30 e0       	ldi	r19, 0x00	; 0
    1858:	40 e8       	ldi	r20, 0x80	; 128
    185a:	5d e3       	ldi	r21, 0x3D	; 61
    185c:	b4 01       	movw	r22, r8
    185e:	c5 01       	movw	r24, r10
    1860:	0e 94 b4 23 	call	0x4768	; 0x4768 <__mulsf3>
    1864:	4b 01       	movw	r8, r22
    1866:	5c 01       	movw	r10, r24
    1868:	8e 81       	ldd	r24, Y+6	; 0x06
    186a:	9f 81       	ldd	r25, Y+7	; 0x07
    186c:	01 96       	adiw	r24, 0x01	; 1
    186e:	9f 83       	std	Y+7, r25	; 0x07
    1870:	8e 83       	std	Y+6, r24	; 0x06
    1872:	ea 89       	ldd	r30, Y+18	; 0x12
    1874:	fb 89       	ldd	r31, Y+19	; 0x13
    1876:	f7 ff       	sbrs	r31, 7
    1878:	09 c0       	rjmp	.+18     	; 0x188c <__fmt_a+0x2de>
    187a:	20 e0       	ldi	r18, 0x00	; 0
    187c:	30 e0       	ldi	r19, 0x00	; 0
    187e:	a9 01       	movw	r20, r18
    1880:	b1 01       	movw	r22, r2
    1882:	c8 01       	movw	r24, r16
    1884:	0e 94 9e 23 	call	0x473c	; 0x473c <__cmpsf2>
    1888:	88 23       	and	r24, r24
    188a:	41 f0       	breq	.+16     	; 0x189c <__fmt_a+0x2ee>
    188c:	2a 85       	ldd	r18, Y+10	; 0x0a
    188e:	3b 85       	ldd	r19, Y+11	; 0x0b
    1890:	4e 81       	ldd	r20, Y+6	; 0x06
    1892:	5f 81       	ldd	r21, Y+7	; 0x07
    1894:	42 17       	cp	r20, r18
    1896:	53 07       	cpc	r21, r19
    1898:	2c f2       	brlt	.-118    	; 0x1824 <__fmt_a+0x276>
    189a:	04 c0       	rjmp	.+8      	; 0x18a4 <__fmt_a+0x2f6>
    189c:	8e 81       	ldd	r24, Y+6	; 0x06
    189e:	9f 81       	ldd	r25, Y+7	; 0x07
    18a0:	9b 87       	std	Y+11, r25	; 0x0b
    18a2:	8a 87       	std	Y+10, r24	; 0x0a
    18a4:	20 e0       	ldi	r18, 0x00	; 0
    18a6:	30 e0       	ldi	r19, 0x00	; 0
    18a8:	40 e0       	ldi	r20, 0x00	; 0
    18aa:	51 e4       	ldi	r21, 0x41	; 65
    18ac:	b4 01       	movw	r22, r8
    18ae:	c5 01       	movw	r24, r10
    18b0:	0e 94 b4 23 	call	0x4768	; 0x4768 <__mulsf3>
    18b4:	4b 01       	movw	r8, r22
    18b6:	5c 01       	movw	r10, r24
    18b8:	9b 01       	movw	r18, r22
    18ba:	ac 01       	movw	r20, r24
    18bc:	b1 01       	movw	r22, r2
    18be:	c8 01       	movw	r24, r16
    18c0:	0e 94 9e 23 	call	0x473c	; 0x473c <__cmpsf2>
    18c4:	87 fd       	sbrc	r24, 7
    18c6:	12 c0       	rjmp	.+36     	; 0x18ec <__fmt_a+0x33e>
    18c8:	a5 01       	movw	r20, r10
    18ca:	94 01       	movw	r18, r8
    18cc:	b1 01       	movw	r22, r2
    18ce:	c8 01       	movw	r24, r16
    18d0:	0e 94 9e 23 	call	0x473c	; 0x473c <__cmpsf2>
    18d4:	81 11       	cpse	r24, r1
    18d6:	0d c0       	rjmp	.+26     	; 0x18f2 <__fmt_a+0x344>
    18d8:	6c 89       	ldd	r22, Y+20	; 0x14
    18da:	7d 89       	ldd	r23, Y+21	; 0x15
    18dc:	8e 89       	ldd	r24, Y+22	; 0x16
    18de:	9f 89       	ldd	r25, Y+23	; 0x17
    18e0:	0e 94 7c 23 	call	0x46f8	; 0x46f8 <__fixsfsi>
    18e4:	61 70       	andi	r22, 0x01	; 1
    18e6:	77 27       	eor	r23, r23
    18e8:	67 2b       	or	r22, r23
    18ea:	19 f4       	brne	.+6      	; 0x18f2 <__fmt_a+0x344>
    18ec:	81 2c       	mov	r8, r1
    18ee:	91 2c       	mov	r9, r1
    18f0:	54 01       	movw	r10, r8
    18f2:	a5 01       	movw	r20, r10
    18f4:	94 01       	movw	r18, r8
    18f6:	c7 01       	movw	r24, r14
    18f8:	b6 01       	movw	r22, r12
    18fa:	0e 94 76 23 	call	0x46ec	; 0x46ec <__addsf3>
    18fe:	6b 01       	movw	r12, r22
    1900:	7c 01       	movw	r14, r24
    1902:	dc 01       	movw	r26, r24
    1904:	cb 01       	movw	r24, r22
    1906:	bf 77       	andi	r27, 0x7F	; 127
    1908:	00 97       	sbiw	r24, 0x00	; 0
    190a:	a0 48       	sbci	r26, 0x80	; 128
    190c:	bf 47       	sbci	r27, 0x7F	; 127
    190e:	09 f4       	brne	.+2      	; 0x1912 <__fmt_a+0x364>
    1910:	a5 ce       	rjmp	.-694    	; 0x165c <__fmt_a+0xae>
    1912:	2e 84       	ldd	r2, Y+14	; 0x0e
    1914:	3f 84       	ldd	r3, Y+15	; 0x0f
    1916:	f2 e0       	ldi	r31, 0x02	; 2
    1918:	2f 1a       	sub	r2, r31
    191a:	31 08       	sbc	r3, r1
    191c:	2a 85       	ldd	r18, Y+10	; 0x0a
    191e:	3b 85       	ldd	r19, Y+11	; 0x0b
    1920:	31 95       	neg	r19
    1922:	21 95       	neg	r18
    1924:	31 09       	sbc	r19, r1
    1926:	39 8b       	std	Y+17, r19	; 0x11
    1928:	28 8b       	std	Y+16, r18	; 0x10
    192a:	0b 81       	ldd	r16, Y+3	; 0x03
    192c:	1c 81       	ldd	r17, Y+4	; 0x04
    192e:	a1 2c       	mov	r10, r1
    1930:	b1 2c       	mov	r11, r1
    1932:	1f 82       	std	Y+7, r1	; 0x07
    1934:	1e 82       	std	Y+6, r1	; 0x06
    1936:	81 2c       	mov	r8, r1
    1938:	91 2c       	mov	r9, r1
    193a:	48 8d       	ldd	r20, Y+24	; 0x18
    193c:	59 8d       	ldd	r21, Y+25	; 0x19
    193e:	45 50       	subi	r20, 0x05	; 5
    1940:	51 09       	sbc	r21, r1
    1942:	5d 8b       	std	Y+21, r21	; 0x15
    1944:	4c 8b       	std	Y+20, r20	; 0x14
    1946:	ec 89       	ldd	r30, Y+20	; 0x14
    1948:	fd 89       	ldd	r31, Y+21	; 0x15
    194a:	0e 17       	cp	r16, r30
    194c:	1f 07       	cpc	r17, r31
    194e:	0c f0       	brlt	.+2      	; 0x1952 <__fmt_a+0x3a4>
    1950:	91 c0       	rjmp	.+290    	; 0x1a74 <__fmt_a+0x4c6>
    1952:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1954:	39 81       	ldd	r19, Y+1	; 0x01
    1956:	48 a1       	ldd	r20, Y+32	; 0x20
    1958:	5a 81       	ldd	r21, Y+2	; 0x02
    195a:	c7 01       	movw	r24, r14
    195c:	b6 01       	movw	r22, r12
    195e:	0e 94 b0 23 	call	0x4760	; 0x4760 <__divsf3>
    1962:	0e 94 16 15 	call	0x2a2c	; 0x2a2c <floorf>
    1966:	6a 87       	std	Y+10, r22	; 0x0a
    1968:	7b 87       	std	Y+11, r23	; 0x0b
    196a:	8c 87       	std	Y+12, r24	; 0x0c
    196c:	9d 87       	std	Y+13, r25	; 0x0d
    196e:	0e 94 7c 23 	call	0x46f8	; 0x46f8 <__fixsfsi>
    1972:	ab 01       	movw	r20, r22
    1974:	61 15       	cp	r22, r1
    1976:	71 05       	cpc	r23, r1
    1978:	39 f4       	brne	.+14     	; 0x1988 <__fmt_a+0x3da>
    197a:	81 14       	cp	r8, r1
    197c:	91 04       	cpc	r9, r1
    197e:	21 f0       	breq	.+8      	; 0x1988 <__fmt_a+0x3da>
    1980:	5f ef       	ldi	r21, 0xFF	; 255
    1982:	a5 1a       	sub	r10, r21
    1984:	b5 0a       	sbc	r11, r21
    1986:	4d c0       	rjmp	.+154    	; 0x1a22 <__fmt_a+0x474>
    1988:	ee 81       	ldd	r30, Y+6	; 0x06
    198a:	ff 81       	ldd	r31, Y+7	; 0x07
    198c:	ef 2b       	or	r30, r31
    198e:	89 f4       	brne	.+34     	; 0x19b2 <__fmt_a+0x404>
    1990:	81 14       	cp	r8, r1
    1992:	91 04       	cpc	r9, r1
    1994:	71 f0       	breq	.+28     	; 0x19b2 <__fmt_a+0x404>
    1996:	f2 01       	movw	r30, r4
    1998:	e0 0f       	add	r30, r16
    199a:	f1 1f       	adc	r31, r17
    199c:	2e e2       	ldi	r18, 0x2E	; 46
    199e:	20 83       	st	Z, r18
    19a0:	31 e0       	ldi	r19, 0x01	; 1
    19a2:	23 1a       	sub	r2, r19
    19a4:	31 08       	sbc	r3, r1
    19a6:	0f 5f       	subi	r16, 0xFF	; 255
    19a8:	1f 4f       	sbci	r17, 0xFF	; 255
    19aa:	e1 e0       	ldi	r30, 0x01	; 1
    19ac:	f0 e0       	ldi	r31, 0x00	; 0
    19ae:	ff 83       	std	Y+7, r31	; 0x07
    19b0:	ee 83       	std	Y+6, r30	; 0x06
    19b2:	f2 01       	movw	r30, r4
    19b4:	e0 0f       	add	r30, r16
    19b6:	f1 1f       	adc	r31, r17
    19b8:	95 01       	movw	r18, r10
    19ba:	21 15       	cp	r18, r1
    19bc:	31 05       	cpc	r19, r1
    19be:	29 f0       	breq	.+10     	; 0x19ca <__fmt_a+0x41c>
    19c0:	a0 e3       	ldi	r26, 0x30	; 48
    19c2:	a1 93       	st	Z+, r26
    19c4:	21 50       	subi	r18, 0x01	; 1
    19c6:	31 09       	sbc	r19, r1
    19c8:	f8 cf       	rjmp	.-16     	; 0x19ba <__fmt_a+0x40c>
    19ca:	f8 01       	movw	r30, r16
    19cc:	ea 0d       	add	r30, r10
    19ce:	fb 1d       	adc	r31, r11
    19d0:	ff 87       	std	Y+15, r31	; 0x0f
    19d2:	ee 87       	std	Y+14, r30	; 0x0e
    19d4:	2a 18       	sub	r2, r10
    19d6:	3b 08       	sbc	r3, r11
    19d8:	4a 30       	cpi	r20, 0x0A	; 10
    19da:	51 05       	cpc	r21, r1
    19dc:	1c f4       	brge	.+6      	; 0x19e4 <__fmt_a+0x436>
    19de:	60 5d       	subi	r22, 0xD0	; 208
    19e0:	7f 4f       	sbci	r23, 0xFF	; 255
    19e2:	02 c0       	rjmp	.+4      	; 0x19e8 <__fmt_a+0x43a>
    19e4:	69 5a       	subi	r22, 0xA9	; 169
    19e6:	7f 4f       	sbci	r23, 0xFF	; 255
    19e8:	2a 8d       	ldd	r18, Y+26	; 0x1a
    19ea:	3b 8d       	ldd	r19, Y+27	; 0x1b
    19ec:	2a 31       	cpi	r18, 0x1A	; 26
    19ee:	31 05       	cpc	r19, r1
    19f0:	50 f4       	brcc	.+20     	; 0x1a06 <__fmt_a+0x458>
    19f2:	cb 01       	movw	r24, r22
    19f4:	80 62       	ori	r24, 0x20	; 32
    19f6:	81 56       	subi	r24, 0x61	; 97
    19f8:	91 09       	sbc	r25, r1
    19fa:	4a 97       	sbiw	r24, 0x1a	; 26
    19fc:	20 f4       	brcc	.+8      	; 0x1a06 <__fmt_a+0x458>
    19fe:	cb 01       	movw	r24, r22
    1a00:	0e 94 41 23 	call	0x4682	; 0x4682 <toupper>
    1a04:	bc 01       	movw	r22, r24
    1a06:	0e 85       	ldd	r16, Y+14	; 0x0e
    1a08:	1f 85       	ldd	r17, Y+15	; 0x0f
    1a0a:	0f 5f       	subi	r16, 0xFF	; 255
    1a0c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a0e:	ee 85       	ldd	r30, Y+14	; 0x0e
    1a10:	ff 85       	ldd	r31, Y+15	; 0x0f
    1a12:	e4 0d       	add	r30, r4
    1a14:	f5 1d       	adc	r31, r5
    1a16:	60 83       	st	Z, r22
    1a18:	31 e0       	ldi	r19, 0x01	; 1
    1a1a:	23 1a       	sub	r2, r19
    1a1c:	31 08       	sbc	r3, r1
    1a1e:	a1 2c       	mov	r10, r1
    1a20:	b1 2c       	mov	r11, r1
    1a22:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1a24:	39 81       	ldd	r19, Y+1	; 0x01
    1a26:	48 a1       	ldd	r20, Y+32	; 0x20
    1a28:	5a 81       	ldd	r21, Y+2	; 0x02
    1a2a:	6a 85       	ldd	r22, Y+10	; 0x0a
    1a2c:	7b 85       	ldd	r23, Y+11	; 0x0b
    1a2e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1a30:	9d 85       	ldd	r25, Y+13	; 0x0d
    1a32:	0e 94 b4 23 	call	0x4768	; 0x4768 <__mulsf3>
    1a36:	9b 01       	movw	r18, r22
    1a38:	ac 01       	movw	r20, r24
    1a3a:	c7 01       	movw	r24, r14
    1a3c:	b6 01       	movw	r22, r12
    1a3e:	0e 94 75 23 	call	0x46ea	; 0x46ea <__subsf3>
    1a42:	6b 01       	movw	r12, r22
    1a44:	7c 01       	movw	r14, r24
    1a46:	20 e0       	ldi	r18, 0x00	; 0
    1a48:	30 e0       	ldi	r19, 0x00	; 0
    1a4a:	40 e8       	ldi	r20, 0x80	; 128
    1a4c:	5d e3       	ldi	r21, 0x3D	; 61
    1a4e:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1a50:	79 81       	ldd	r23, Y+1	; 0x01
    1a52:	88 a1       	ldd	r24, Y+32	; 0x20
    1a54:	9a 81       	ldd	r25, Y+2	; 0x02
    1a56:	0e 94 b4 23 	call	0x4768	; 0x4768 <__mulsf3>
    1a5a:	6f 8f       	std	Y+31, r22	; 0x1f
    1a5c:	79 83       	std	Y+1, r23	; 0x01
    1a5e:	88 a3       	std	Y+32, r24	; 0x20
    1a60:	9a 83       	std	Y+2, r25	; 0x02
    1a62:	41 e0       	ldi	r20, 0x01	; 1
    1a64:	84 1a       	sub	r8, r20
    1a66:	91 08       	sbc	r9, r1
    1a68:	88 89       	ldd	r24, Y+16	; 0x10
    1a6a:	99 89       	ldd	r25, Y+17	; 0x11
    1a6c:	88 15       	cp	r24, r8
    1a6e:	99 05       	cpc	r25, r9
    1a70:	09 f0       	breq	.+2      	; 0x1a74 <__fmt_a+0x4c6>
    1a72:	69 cf       	rjmp	.-302    	; 0x1946 <__fmt_a+0x398>
    1a74:	2e 81       	ldd	r18, Y+6	; 0x06
    1a76:	3f 81       	ldd	r19, Y+7	; 0x07
    1a78:	23 2b       	or	r18, r19
    1a7a:	51 f5       	brne	.+84     	; 0x1ad0 <__fmt_a+0x522>
    1a7c:	f2 01       	movw	r30, r4
    1a7e:	e0 0f       	add	r30, r16
    1a80:	f1 1f       	adc	r31, r17
    1a82:	a1 14       	cp	r10, r1
    1a84:	b1 04       	cpc	r11, r1
    1a86:	e9 f0       	breq	.+58     	; 0x1ac2 <__fmt_a+0x514>
    1a88:	4a 89       	ldd	r20, Y+18	; 0x12
    1a8a:	5b 89       	ldd	r21, Y+19	; 0x13
    1a8c:	14 16       	cp	r1, r20
    1a8e:	15 06       	cpc	r1, r21
    1a90:	c4 f4       	brge	.+48     	; 0x1ac2 <__fmt_a+0x514>
    1a92:	5d 81       	ldd	r21, Y+5	; 0x05
    1a94:	50 fd       	sbrc	r21, 0
    1a96:	15 c0       	rjmp	.+42     	; 0x1ac2 <__fmt_a+0x514>
    1a98:	8e e2       	ldi	r24, 0x2E	; 46
    1a9a:	80 83       	st	Z, r24
    1a9c:	f8 01       	movw	r30, r16
    1a9e:	31 96       	adiw	r30, 0x01	; 1
    1aa0:	e4 0d       	add	r30, r4
    1aa2:	f5 1d       	adc	r31, r5
    1aa4:	c5 01       	movw	r24, r10
    1aa6:	20 e3       	ldi	r18, 0x30	; 48
    1aa8:	21 93       	st	Z+, r18
    1aaa:	01 97       	sbiw	r24, 0x01	; 1
    1aac:	e9 f7       	brne	.-6      	; 0x1aa8 <__fmt_a+0x4fa>
    1aae:	0a 0d       	add	r16, r10
    1ab0:	1b 1d       	adc	r17, r11
    1ab2:	0f 5f       	subi	r16, 0xFF	; 255
    1ab4:	1f 4f       	sbci	r17, 0xFF	; 255
    1ab6:	c5 01       	movw	r24, r10
    1ab8:	80 95       	com	r24
    1aba:	90 95       	com	r25
    1abc:	28 0e       	add	r2, r24
    1abe:	39 1e       	adc	r3, r25
    1ac0:	07 c0       	rjmp	.+14     	; 0x1ad0 <__fmt_a+0x522>
    1ac2:	8d 81       	ldd	r24, Y+5	; 0x05
    1ac4:	84 ff       	sbrs	r24, 4
    1ac6:	04 c0       	rjmp	.+8      	; 0x1ad0 <__fmt_a+0x522>
    1ac8:	8e e2       	ldi	r24, 0x2E	; 46
    1aca:	80 83       	st	Z, r24
    1acc:	0f 5f       	subi	r16, 0xFF	; 255
    1ace:	1f 4f       	sbci	r17, 0xFF	; 255
    1ad0:	f2 01       	movw	r30, r4
    1ad2:	e0 0f       	add	r30, r16
    1ad4:	f1 1f       	adc	r31, r17
    1ad6:	ff 83       	std	Y+7, r31	; 0x07
    1ad8:	ee 83       	std	Y+6, r30	; 0x06
    1ada:	10 82       	st	Z, r1
    1adc:	e8 8d       	ldd	r30, Y+24	; 0x18
    1ade:	f9 8d       	ldd	r31, Y+25	; 0x19
    1ae0:	e4 0d       	add	r30, r4
    1ae2:	f5 1d       	adc	r31, r5
    1ae4:	31 97       	sbiw	r30, 0x01	; 1
    1ae6:	10 82       	st	Z, r1
    1ae8:	77 fe       	sbrs	r7, 7
    1aea:	07 c0       	rjmp	.+14     	; 0x1afa <__fmt_a+0x54c>
    1aec:	71 94       	neg	r7
    1aee:	61 94       	neg	r6
    1af0:	71 08       	sbc	r7, r1
    1af2:	ee 24       	eor	r14, r14
    1af4:	e3 94       	inc	r14
    1af6:	f1 2c       	mov	r15, r1
    1af8:	02 c0       	rjmp	.+4      	; 0x1afe <__fmt_a+0x550>
    1afa:	e1 2c       	mov	r14, r1
    1afc:	f1 2c       	mov	r15, r1
    1afe:	e8 8d       	ldd	r30, Y+24	; 0x18
    1b00:	f9 8d       	ldd	r31, Y+25	; 0x19
    1b02:	31 97       	sbiw	r30, 0x01	; 1
    1b04:	e4 0d       	add	r30, r4
    1b06:	f5 1d       	adc	r31, r5
    1b08:	21 e0       	ldi	r18, 0x01	; 1
    1b0a:	30 e0       	ldi	r19, 0x00	; 0
    1b0c:	8a e0       	ldi	r24, 0x0A	; 10
    1b0e:	c8 2e       	mov	r12, r24
    1b10:	d1 2c       	mov	r13, r1
    1b12:	cf 01       	movw	r24, r30
    1b14:	84 19       	sub	r24, r4
    1b16:	95 09       	sbc	r25, r5
    1b18:	61 14       	cp	r6, r1
    1b1a:	71 04       	cpc	r7, r1
    1b1c:	69 f0       	breq	.+26     	; 0x1b38 <__fmt_a+0x58a>
    1b1e:	c3 01       	movw	r24, r6
    1b20:	b6 01       	movw	r22, r12
    1b22:	0e 94 06 22 	call	0x440c	; 0x440c <__divmodhi4>
    1b26:	80 5d       	subi	r24, 0xD0	; 208
    1b28:	82 93       	st	-Z, r24
    1b2a:	3b 01       	movw	r6, r22
    1b2c:	21 50       	subi	r18, 0x01	; 1
    1b2e:	31 09       	sbc	r19, r1
    1b30:	41 e0       	ldi	r20, 0x01	; 1
    1b32:	24 1a       	sub	r2, r20
    1b34:	31 08       	sbc	r3, r1
    1b36:	ed cf       	rjmp	.-38     	; 0x1b12 <__fmt_a+0x564>
    1b38:	21 30       	cpi	r18, 0x01	; 1
    1b3a:	31 05       	cpc	r19, r1
    1b3c:	81 f3       	breq	.-32     	; 0x1b1e <__fmt_a+0x570>
    1b3e:	fc 01       	movw	r30, r24
    1b40:	31 97       	sbiw	r30, 0x01	; 1
    1b42:	e4 0d       	add	r30, r4
    1b44:	f5 1d       	adc	r31, r5
    1b46:	ef 28       	or	r14, r15
    1b48:	11 f4       	brne	.+4      	; 0x1b4e <__fmt_a+0x5a0>
    1b4a:	2b e2       	ldi	r18, 0x2B	; 43
    1b4c:	01 c0       	rjmp	.+2      	; 0x1b50 <__fmt_a+0x5a2>
    1b4e:	2d e2       	ldi	r18, 0x2D	; 45
    1b50:	20 83       	st	Z, r18
    1b52:	02 97       	sbiw	r24, 0x02	; 2
    1b54:	f2 01       	movw	r30, r4
    1b56:	e8 0f       	add	r30, r24
    1b58:	f9 1f       	adc	r31, r25
    1b5a:	2a 8d       	ldd	r18, Y+26	; 0x1a
    1b5c:	3b 8d       	ldd	r19, Y+27	; 0x1b
    1b5e:	2a 31       	cpi	r18, 0x1A	; 26
    1b60:	31 05       	cpc	r19, r1
    1b62:	10 f0       	brcs	.+4      	; 0x1b68 <__fmt_a+0x5ba>
    1b64:	20 e7       	ldi	r18, 0x70	; 112
    1b66:	01 c0       	rjmp	.+2      	; 0x1b6a <__fmt_a+0x5bc>
    1b68:	20 e5       	ldi	r18, 0x50	; 80
    1b6a:	20 83       	st	Z, r18
    1b6c:	08 17       	cp	r16, r24
    1b6e:	19 07       	cpc	r17, r25
    1b70:	34 f4       	brge	.+12     	; 0x1b7e <__fmt_a+0x5d0>
    1b72:	af 01       	movw	r20, r30
    1b74:	60 e8       	ldi	r22, 0x80	; 128
    1b76:	8e 81       	ldd	r24, Y+6	; 0x06
    1b78:	9f 81       	ldd	r25, Y+7	; 0x07
    1b7a:	0e 94 bb 22 	call	0x4576	; 0x4576 <strcpy>
    1b7e:	32 01       	movw	r6, r4
    1b80:	30 e8       	ldi	r19, 0x80	; 128
    1b82:	83 2e       	mov	r8, r19
    1b84:	4d 81       	ldd	r20, Y+5	; 0x05
    1b86:	41 ff       	sbrs	r20, 1
    1b88:	28 c0       	rjmp	.+80     	; 0x1bda <__fmt_a+0x62c>
    1b8a:	40 fd       	sbrc	r20, 0
    1b8c:	26 c0       	rjmp	.+76     	; 0x1bda <__fmt_a+0x62c>
    1b8e:	52 e0       	ldi	r21, 0x02	; 2
    1b90:	25 1a       	sub	r2, r21
    1b92:	31 08       	sbc	r3, r1
    1b94:	12 14       	cp	r1, r2
    1b96:	13 04       	cpc	r1, r3
    1b98:	04 f5       	brge	.+64     	; 0x1bda <__fmt_a+0x62c>
    1b9a:	88 2d       	mov	r24, r8
    1b9c:	b3 01       	movw	r22, r6
    1b9e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <strlen>
    1ba2:	84 0d       	add	r24, r4
    1ba4:	95 1d       	adc	r25, r5
    1ba6:	9c 01       	movw	r18, r24
    1ba8:	24 19       	sub	r18, r4
    1baa:	35 09       	sbc	r19, r5
    1bac:	4b 81       	ldd	r20, Y+3	; 0x03
    1bae:	5c 81       	ldd	r21, Y+4	; 0x04
    1bb0:	24 17       	cp	r18, r20
    1bb2:	35 07       	cpc	r19, r21
    1bb4:	3c f0       	brlt	.+14     	; 0x1bc4 <__fmt_a+0x616>
    1bb6:	fc 01       	movw	r30, r24
    1bb8:	20 81       	ld	r18, Z
    1bba:	e2 0d       	add	r30, r2
    1bbc:	f3 1d       	adc	r31, r3
    1bbe:	20 83       	st	Z, r18
    1bc0:	01 97       	sbiw	r24, 0x01	; 1
    1bc2:	f1 cf       	rjmp	.-30     	; 0x1ba6 <__fmt_a+0x5f8>
    1bc4:	a1 01       	movw	r20, r2
    1bc6:	60 e3       	ldi	r22, 0x30	; 48
    1bc8:	70 e0       	ldi	r23, 0x00	; 0
    1bca:	8b 81       	ldd	r24, Y+3	; 0x03
    1bcc:	9c 81       	ldd	r25, Y+4	; 0x04
    1bce:	84 0d       	add	r24, r4
    1bd0:	95 1d       	adc	r25, r5
    1bd2:	0e 94 38 23 	call	0x4670	; 0x4670 <memset>
    1bd6:	19 86       	std	Y+9, r1	; 0x09
    1bd8:	18 86       	std	Y+8, r1	; 0x08
    1bda:	88 2d       	mov	r24, r8
    1bdc:	b3 01       	movw	r22, r6
    1bde:	0e 94 79 22 	call	0x44f2	; 0x44f2 <strlen>
    1be2:	ed 80       	ldd	r14, Y+5	; 0x05
    1be4:	fe 8c       	ldd	r15, Y+30	; 0x1e
    1be6:	08 85       	ldd	r16, Y+8	; 0x08
    1be8:	19 85       	ldd	r17, Y+9	; 0x09
    1bea:	9c 01       	movw	r18, r24
    1bec:	68 2d       	mov	r22, r8
    1bee:	a3 01       	movw	r20, r6
    1bf0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1bf2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1bf4:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <__pad>
    1bf8:	a0 96       	adiw	r28, 0x20	; 32
    1bfa:	e2 e1       	ldi	r30, 0x12	; 18
    1bfc:	0c 94 89 21 	jmp	0x4312	; 0x4312 <__epilogue_restores__>
    1c00:	5d 81       	ldd	r21, Y+5	; 0x05
    1c02:	53 ff       	sbrs	r21, 3
    1c04:	15 cd       	rjmp	.-1494   	; 0x1630 <__fmt_a+0x82>
    1c06:	80 e2       	ldi	r24, 0x20	; 32
    1c08:	06 cd       	rjmp	.-1524   	; 0x1616 <__fmt_a+0x68>

Disassembly of section .text.strcpy:

00004576 <strcpy>:
    4576:	9a 01       	movw	r18, r20
    4578:	46 2f       	mov	r20, r22
    457a:	dc 01       	movw	r26, r24
    457c:	f9 01       	movw	r30, r18
    457e:	54 2f       	mov	r21, r20
    4580:	0e 94 6e 23 	call	0x46dc	; 0x46dc <__xload_1>
    4584:	6d 93       	st	X+, r22
    4586:	2f 5f       	subi	r18, 0xFF	; 255
    4588:	3f 4f       	sbci	r19, 0xFF	; 255
    458a:	4f 4f       	sbci	r20, 0xFF	; 255
    458c:	61 11       	cpse	r22, r1
    458e:	f6 cf       	rjmp	.-20     	; 0x457c <strcpy+0x6>
    4590:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000440c <__divmodhi4>:
    440c:	97 fb       	bst	r25, 7
    440e:	07 2e       	mov	r0, r23
    4410:	16 f4       	brtc	.+4      	; 0x4416 <__divmodhi4+0xa>
    4412:	00 94       	com	r0
    4414:	07 d0       	rcall	.+14     	; 0x4424 <__divmodhi4_neg1>
    4416:	77 fd       	sbrc	r23, 7
    4418:	09 d0       	rcall	.+18     	; 0x442c <__divmodhi4_neg2>
    441a:	0e 94 1a 22 	call	0x4434	; 0x4434 <__udivmodhi4>
    441e:	07 fc       	sbrc	r0, 7
    4420:	05 d0       	rcall	.+10     	; 0x442c <__divmodhi4_neg2>
    4422:	3e f4       	brtc	.+14     	; 0x4432 <__divmodhi4_exit>

00004424 <__divmodhi4_neg1>:
    4424:	90 95       	com	r25
    4426:	81 95       	neg	r24
    4428:	9f 4f       	sbci	r25, 0xFF	; 255
    442a:	08 95       	ret

0000442c <__divmodhi4_neg2>:
    442c:	70 95       	com	r23
    442e:	61 95       	neg	r22
    4430:	7f 4f       	sbci	r23, 0xFF	; 255

00004432 <__divmodhi4_exit>:
    4432:	08 95       	ret

Disassembly of section .text.libgcc.div:

00004592 <__umoddi3>:
    4592:	68 94       	set
    4594:	01 c0       	rjmp	.+2      	; 0x4598 <__udivdi3_umoddi3>

00004596 <__udivdi3>:
    4596:	e8 94       	clt

00004598 <__udivdi3_umoddi3>:
    4598:	8f 92       	push	r8
    459a:	9f 92       	push	r9
    459c:	cf 93       	push	r28
    459e:	df 93       	push	r29
    45a0:	0e 94 6b 1c 	call	0x38d6	; 0x38d6 <__udivmod64>
    45a4:	df 91       	pop	r29
    45a6:	cf 91       	pop	r28
    45a8:	9f 90       	pop	r9
    45aa:	8f 90       	pop	r8
    45ac:	08 95       	ret

Disassembly of section .text.libgcc.div:

000038d6 <__udivmod64>:
    38d6:	88 24       	eor	r8, r8
    38d8:	99 24       	eor	r9, r9
    38da:	f4 01       	movw	r30, r8
    38dc:	e4 01       	movw	r28, r8
    38de:	b0 e4       	ldi	r27, 0x40	; 64
    38e0:	9f 93       	push	r25
    38e2:	aa 27       	eor	r26, r26
    38e4:	9a 15       	cp	r25, r10
    38e6:	8b 04       	cpc	r8, r11
    38e8:	9c 04       	cpc	r9, r12
    38ea:	ed 05       	cpc	r30, r13
    38ec:	fe 05       	cpc	r31, r14
    38ee:	cf 05       	cpc	r28, r15
    38f0:	d0 07       	cpc	r29, r16
    38f2:	a1 07       	cpc	r26, r17
    38f4:	98 f4       	brcc	.+38     	; 0x391c <__udivmod64+0x46>
    38f6:	ad 2f       	mov	r26, r29
    38f8:	dc 2f       	mov	r29, r28
    38fa:	cf 2f       	mov	r28, r31
    38fc:	fe 2f       	mov	r31, r30
    38fe:	e9 2d       	mov	r30, r9
    3900:	98 2c       	mov	r9, r8
    3902:	89 2e       	mov	r8, r25
    3904:	98 2f       	mov	r25, r24
    3906:	87 2f       	mov	r24, r23
    3908:	76 2f       	mov	r23, r22
    390a:	65 2f       	mov	r22, r21
    390c:	54 2f       	mov	r21, r20
    390e:	43 2f       	mov	r20, r19
    3910:	32 2f       	mov	r19, r18
    3912:	22 27       	eor	r18, r18
    3914:	b8 50       	subi	r27, 0x08	; 8
    3916:	31 f7       	brne	.-52     	; 0x38e4 <__udivmod64+0xe>
    3918:	bf 91       	pop	r27
    391a:	27 c0       	rjmp	.+78     	; 0x396a <__udivmod64+0x94>
    391c:	1b 2e       	mov	r1, r27
    391e:	bf 91       	pop	r27
    3920:	bb 27       	eor	r27, r27
    3922:	22 0f       	add	r18, r18
    3924:	33 1f       	adc	r19, r19
    3926:	44 1f       	adc	r20, r20
    3928:	55 1f       	adc	r21, r21
    392a:	66 1f       	adc	r22, r22
    392c:	77 1f       	adc	r23, r23
    392e:	88 1f       	adc	r24, r24
    3930:	99 1f       	adc	r25, r25
    3932:	88 1c       	adc	r8, r8
    3934:	99 1c       	adc	r9, r9
    3936:	ee 1f       	adc	r30, r30
    3938:	ff 1f       	adc	r31, r31
    393a:	cc 1f       	adc	r28, r28
    393c:	dd 1f       	adc	r29, r29
    393e:	aa 1f       	adc	r26, r26
    3940:	bb 1f       	adc	r27, r27
    3942:	8a 14       	cp	r8, r10
    3944:	9b 04       	cpc	r9, r11
    3946:	ec 05       	cpc	r30, r12
    3948:	fd 05       	cpc	r31, r13
    394a:	ce 05       	cpc	r28, r14
    394c:	df 05       	cpc	r29, r15
    394e:	a0 07       	cpc	r26, r16
    3950:	b1 07       	cpc	r27, r17
    3952:	48 f0       	brcs	.+18     	; 0x3966 <__udivmod64+0x90>
    3954:	8a 18       	sub	r8, r10
    3956:	9b 08       	sbc	r9, r11
    3958:	ec 09       	sbc	r30, r12
    395a:	fd 09       	sbc	r31, r13
    395c:	ce 09       	sbc	r28, r14
    395e:	df 09       	sbc	r29, r15
    3960:	a0 0b       	sbc	r26, r16
    3962:	b1 0b       	sbc	r27, r17
    3964:	21 60       	ori	r18, 0x01	; 1
    3966:	1a 94       	dec	r1
    3968:	e1 f6       	brne	.-72     	; 0x3922 <__udivmod64+0x4c>
    396a:	2e f4       	brtc	.+10     	; 0x3976 <__udivmod64+0xa0>
    396c:	94 01       	movw	r18, r8
    396e:	af 01       	movw	r20, r30
    3970:	be 01       	movw	r22, r28
    3972:	cd 01       	movw	r24, r26
    3974:	00 0c       	add	r0, r0
    3976:	08 95       	ret

Disassembly of section .text.libgcc:

00004538 <__negdi2>:
    4538:	60 95       	com	r22
    453a:	70 95       	com	r23
    453c:	80 95       	com	r24
    453e:	90 95       	com	r25
    4540:	30 95       	com	r19
    4542:	40 95       	com	r20
    4544:	50 95       	com	r21
    4546:	21 95       	neg	r18
    4548:	3f 4f       	sbci	r19, 0xFF	; 255
    454a:	4f 4f       	sbci	r20, 0xFF	; 255
    454c:	5f 4f       	sbci	r21, 0xFF	; 255
    454e:	6f 4f       	sbci	r22, 0xFF	; 255
    4550:	7f 4f       	sbci	r23, 0xFF	; 255
    4552:	8f 4f       	sbci	r24, 0xFF	; 255
    4554:	9f 4f       	sbci	r25, 0xFF	; 255
    4556:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

0000426e <__prologue_saves__>:
    426e:	2f 92       	push	r2
    4270:	3f 92       	push	r3
    4272:	4f 92       	push	r4
    4274:	5f 92       	push	r5
    4276:	6f 92       	push	r6
    4278:	7f 92       	push	r7
    427a:	8f 92       	push	r8
    427c:	9f 92       	push	r9
    427e:	af 92       	push	r10
    4280:	bf 92       	push	r11
    4282:	cf 92       	push	r12
    4284:	df 92       	push	r13
    4286:	ef 92       	push	r14
    4288:	ff 92       	push	r15
    428a:	0f 93       	push	r16
    428c:	1f 93       	push	r17
    428e:	cf 93       	push	r28
    4290:	df 93       	push	r29
    4292:	cd b7       	in	r28, 0x3d	; 61
    4294:	de b7       	in	r29, 0x3e	; 62
    4296:	ca 1b       	sub	r28, r26
    4298:	db 0b       	sbc	r29, r27
    429a:	0f b6       	in	r0, 0x3f	; 63
    429c:	f8 94       	cli
    429e:	de bf       	out	0x3e, r29	; 62
    42a0:	0f be       	out	0x3f, r0	; 63
    42a2:	cd bf       	out	0x3d, r28	; 61
    42a4:	19 94       	eijmp

Disassembly of section .text.libgcc.prologue:

00004312 <__epilogue_restores__>:
    4312:	2a 88       	ldd	r2, Y+18	; 0x12
    4314:	39 88       	ldd	r3, Y+17	; 0x11
    4316:	48 88       	ldd	r4, Y+16	; 0x10
    4318:	5f 84       	ldd	r5, Y+15	; 0x0f
    431a:	6e 84       	ldd	r6, Y+14	; 0x0e
    431c:	7d 84       	ldd	r7, Y+13	; 0x0d
    431e:	8c 84       	ldd	r8, Y+12	; 0x0c
    4320:	9b 84       	ldd	r9, Y+11	; 0x0b
    4322:	aa 84       	ldd	r10, Y+10	; 0x0a
    4324:	b9 84       	ldd	r11, Y+9	; 0x09
    4326:	c8 84       	ldd	r12, Y+8	; 0x08
    4328:	df 80       	ldd	r13, Y+7	; 0x07
    432a:	ee 80       	ldd	r14, Y+6	; 0x06
    432c:	fd 80       	ldd	r15, Y+5	; 0x05
    432e:	0c 81       	ldd	r16, Y+4	; 0x04
    4330:	1b 81       	ldd	r17, Y+3	; 0x03
    4332:	aa 81       	ldd	r26, Y+2	; 0x02
    4334:	b9 81       	ldd	r27, Y+1	; 0x01
    4336:	ce 0f       	add	r28, r30
    4338:	d1 1d       	adc	r29, r1
    433a:	0f b6       	in	r0, 0x3f	; 63
    433c:	f8 94       	cli
    433e:	de bf       	out	0x3e, r29	; 62
    4340:	0f be       	out	0x3f, r0	; 63
    4342:	cd bf       	out	0x3d, r28	; 61
    4344:	ed 01       	movw	r28, r26
    4346:	08 95       	ret

Disassembly of section .text.libgcc:

000045ae <__movmemx_qi>:
    45ae:	99 27       	eor	r25, r25

000045b0 <__movmemx_hi>:
    45b0:	77 fd       	sbrc	r23, 7
    45b2:	06 c0       	rjmp	.+12     	; 0x45c0 <__movmemx_hi+0x10>
    45b4:	7b bf       	out	0x3b, r23	; 59
    45b6:	07 90       	elpm	r0, Z+
    45b8:	0d 92       	st	X+, r0
    45ba:	01 97       	sbiw	r24, 0x01	; 1
    45bc:	e1 f7       	brne	.-8      	; 0x45b6 <__movmemx_hi+0x6>
    45be:	08 95       	ret
    45c0:	01 90       	ld	r0, Z+
    45c2:	0d 92       	st	X+, r0
    45c4:	01 97       	sbiw	r24, 0x01	; 1
    45c6:	e1 f7       	brne	.-8      	; 0x45c0 <__movmemx_hi+0x10>
    45c8:	08 95       	ret

Disassembly of section .text.libgcc.builtins:

00004232 <__ashrdi3>:
    4232:	97 fb       	bst	r25, 7
    4234:	10 f8       	bld	r1, 0

00004236 <__lshrdi3>:
    4236:	16 94       	lsr	r1
    4238:	00 08       	sbc	r0, r0
    423a:	0f 93       	push	r16
    423c:	08 30       	cpi	r16, 0x08	; 8
    423e:	98 f0       	brcs	.+38     	; 0x4266 <__lshrdi3+0x30>
    4240:	08 50       	subi	r16, 0x08	; 8
    4242:	23 2f       	mov	r18, r19
    4244:	34 2f       	mov	r19, r20
    4246:	45 2f       	mov	r20, r21
    4248:	56 2f       	mov	r21, r22
    424a:	67 2f       	mov	r22, r23
    424c:	78 2f       	mov	r23, r24
    424e:	89 2f       	mov	r24, r25
    4250:	90 2d       	mov	r25, r0
    4252:	f4 cf       	rjmp	.-24     	; 0x423c <__lshrdi3+0x6>
    4254:	05 94       	asr	r0
    4256:	97 95       	ror	r25
    4258:	87 95       	ror	r24
    425a:	77 95       	ror	r23
    425c:	67 95       	ror	r22
    425e:	57 95       	ror	r21
    4260:	47 95       	ror	r20
    4262:	37 95       	ror	r19
    4264:	27 95       	ror	r18
    4266:	0a 95       	dec	r16
    4268:	aa f7       	brpl	.-22     	; 0x4254 <__lshrdi3+0x1e>
    426a:	0f 91       	pop	r16
    426c:	08 95       	ret

Disassembly of section .text.libgcc:

00004614 <__cmpdi2_s8>:
    4614:	00 24       	eor	r0, r0
    4616:	a7 fd       	sbrc	r26, 7
    4618:	00 94       	com	r0
    461a:	2a 17       	cp	r18, r26
    461c:	30 05       	cpc	r19, r0
    461e:	40 05       	cpc	r20, r0
    4620:	50 05       	cpc	r21, r0
    4622:	60 05       	cpc	r22, r0
    4624:	70 05       	cpc	r23, r0
    4626:	80 05       	cpc	r24, r0
    4628:	90 05       	cpc	r25, r0
    462a:	08 95       	ret

Disassembly of section .text.libgcc.div:

00004434 <__udivmodhi4>:
    4434:	aa 1b       	sub	r26, r26
    4436:	bb 1b       	sub	r27, r27
    4438:	51 e1       	ldi	r21, 0x11	; 17
    443a:	07 c0       	rjmp	.+14     	; 0x444a <__udivmodhi4_ep>

0000443c <__udivmodhi4_loop>:
    443c:	aa 1f       	adc	r26, r26
    443e:	bb 1f       	adc	r27, r27
    4440:	a6 17       	cp	r26, r22
    4442:	b7 07       	cpc	r27, r23
    4444:	10 f0       	brcs	.+4      	; 0x444a <__udivmodhi4_ep>
    4446:	a6 1b       	sub	r26, r22
    4448:	b7 0b       	sbc	r27, r23

0000444a <__udivmodhi4_ep>:
    444a:	88 1f       	adc	r24, r24
    444c:	99 1f       	adc	r25, r25
    444e:	5a 95       	dec	r21
    4450:	a9 f7       	brne	.-22     	; 0x443c <__udivmodhi4_loop>
    4452:	80 95       	com	r24
    4454:	90 95       	com	r25
    4456:	bc 01       	movw	r22, r24
    4458:	cd 01       	movw	r24, r26
    445a:	08 95       	ret

Disassembly of section .text:

000046ea <__subsf3>:
    46ea:	50 58       	subi	r21, 0x80	; 128

000046ec <__addsf3>:
    46ec:	bb 27       	eor	r27, r27
    46ee:	aa 27       	eor	r26, r26
    46f0:	0e 94 e5 17 	call	0x2fca	; 0x2fca <__addsf3x>
    46f4:	0c 94 8b 22 	jmp	0x4516	; 0x4516 <__fp_round>

Disassembly of section .text:

00002fca <__addsf3x>:
    2fca:	11 c0       	rjmp	.+34     	; 0x2fee <__addsf3x+0x24>
    2fcc:	0e 94 83 23 	call	0x4706	; 0x4706 <__fp_pscA>
    2fd0:	38 f0       	brcs	.+14     	; 0x2fe0 <__addsf3x+0x16>
    2fd2:	0e 94 8a 23 	call	0x4714	; 0x4714 <__fp_pscB>
    2fd6:	20 f0       	brcs	.+8      	; 0x2fe0 <__addsf3x+0x16>
    2fd8:	39 f4       	brne	.+14     	; 0x2fe8 <__addsf3x+0x1e>
    2fda:	9f 3f       	cpi	r25, 0xFF	; 255
    2fdc:	19 f4       	brne	.+6      	; 0x2fe4 <__addsf3x+0x1a>
    2fde:	26 f4       	brtc	.+8      	; 0x2fe8 <__addsf3x+0x1e>
    2fe0:	0c 94 b8 23 	jmp	0x4770	; 0x4770 <__fp_nan>
    2fe4:	0e f4       	brtc	.+2      	; 0x2fe8 <__addsf3x+0x1e>
    2fe6:	e0 95       	com	r30
    2fe8:	e7 fb       	bst	r30, 7
    2fea:	0c 94 98 23 	jmp	0x4730	; 0x4730 <__fp_inf>
    2fee:	e9 2f       	mov	r30, r25
    2ff0:	0e 94 b8 20 	call	0x4170	; 0x4170 <__fp_split3>
    2ff4:	58 f3       	brcs	.-42     	; 0x2fcc <__addsf3x+0x2>
    2ff6:	ba 17       	cp	r27, r26
    2ff8:	62 07       	cpc	r22, r18
    2ffa:	73 07       	cpc	r23, r19
    2ffc:	84 07       	cpc	r24, r20
    2ffe:	95 07       	cpc	r25, r21
    3000:	20 f0       	brcs	.+8      	; 0x300a <__addsf3x+0x40>
    3002:	79 f4       	brne	.+30     	; 0x3022 <__addsf3x+0x58>
    3004:	a6 f5       	brtc	.+104    	; 0x306e <__addsf3x+0xa4>
    3006:	0c 94 91 23 	jmp	0x4722	; 0x4722 <__fp_zero>
    300a:	0e f4       	brtc	.+2      	; 0x300e <__addsf3x+0x44>
    300c:	e0 95       	com	r30
    300e:	0b 2e       	mov	r0, r27
    3010:	ba 2f       	mov	r27, r26
    3012:	a0 2d       	mov	r26, r0
    3014:	0b 01       	movw	r0, r22
    3016:	b9 01       	movw	r22, r18
    3018:	90 01       	movw	r18, r0
    301a:	0c 01       	movw	r0, r24
    301c:	ca 01       	movw	r24, r20
    301e:	a0 01       	movw	r20, r0
    3020:	11 24       	eor	r1, r1
    3022:	ff 27       	eor	r31, r31
    3024:	59 1b       	sub	r21, r25
    3026:	99 f0       	breq	.+38     	; 0x304e <__addsf3x+0x84>
    3028:	59 3f       	cpi	r21, 0xF9	; 249
    302a:	50 f4       	brcc	.+20     	; 0x3040 <__addsf3x+0x76>
    302c:	50 3e       	cpi	r21, 0xE0	; 224
    302e:	68 f1       	brcs	.+90     	; 0x308a <__addsf3x+0xc0>
    3030:	1a 16       	cp	r1, r26
    3032:	f0 40       	sbci	r31, 0x00	; 0
    3034:	a2 2f       	mov	r26, r18
    3036:	23 2f       	mov	r18, r19
    3038:	34 2f       	mov	r19, r20
    303a:	44 27       	eor	r20, r20
    303c:	58 5f       	subi	r21, 0xF8	; 248
    303e:	f3 cf       	rjmp	.-26     	; 0x3026 <__addsf3x+0x5c>
    3040:	46 95       	lsr	r20
    3042:	37 95       	ror	r19
    3044:	27 95       	ror	r18
    3046:	a7 95       	ror	r26
    3048:	f0 40       	sbci	r31, 0x00	; 0
    304a:	53 95       	inc	r21
    304c:	c9 f7       	brne	.-14     	; 0x3040 <__addsf3x+0x76>
    304e:	7e f4       	brtc	.+30     	; 0x306e <__addsf3x+0xa4>
    3050:	1f 16       	cp	r1, r31
    3052:	ba 0b       	sbc	r27, r26
    3054:	62 0b       	sbc	r22, r18
    3056:	73 0b       	sbc	r23, r19
    3058:	84 0b       	sbc	r24, r20
    305a:	ba f0       	brmi	.+46     	; 0x308a <__addsf3x+0xc0>
    305c:	91 50       	subi	r25, 0x01	; 1
    305e:	a1 f0       	breq	.+40     	; 0x3088 <__addsf3x+0xbe>
    3060:	ff 0f       	add	r31, r31
    3062:	bb 1f       	adc	r27, r27
    3064:	66 1f       	adc	r22, r22
    3066:	77 1f       	adc	r23, r23
    3068:	88 1f       	adc	r24, r24
    306a:	c2 f7       	brpl	.-16     	; 0x305c <__addsf3x+0x92>
    306c:	0e c0       	rjmp	.+28     	; 0x308a <__addsf3x+0xc0>
    306e:	ba 0f       	add	r27, r26
    3070:	62 1f       	adc	r22, r18
    3072:	73 1f       	adc	r23, r19
    3074:	84 1f       	adc	r24, r20
    3076:	48 f4       	brcc	.+18     	; 0x308a <__addsf3x+0xc0>
    3078:	87 95       	ror	r24
    307a:	77 95       	ror	r23
    307c:	67 95       	ror	r22
    307e:	b7 95       	ror	r27
    3080:	f7 95       	ror	r31
    3082:	9e 3f       	cpi	r25, 0xFE	; 254
    3084:	08 f0       	brcs	.+2      	; 0x3088 <__addsf3x+0xbe>
    3086:	b0 cf       	rjmp	.-160    	; 0x2fe8 <__addsf3x+0x1e>
    3088:	93 95       	inc	r25
    308a:	88 0f       	add	r24, r24
    308c:	08 f0       	brcs	.+2      	; 0x3090 <__addsf3x+0xc6>
    308e:	99 27       	eor	r25, r25
    3090:	ee 0f       	add	r30, r30
    3092:	97 95       	ror	r25
    3094:	87 95       	ror	r24
    3096:	08 95       	ret

Disassembly of section .text:

0000473c <__cmpsf2>:
    473c:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__fp_cmp>
    4740:	08 f4       	brcc	.+2      	; 0x4744 <__cmpsf2+0x8>
    4742:	81 e0       	ldi	r24, 0x01	; 1
    4744:	08 95       	ret

Disassembly of section .text:

00004760 <__divsf3>:
    4760:	0e 94 36 16 	call	0x2c6c	; 0x2c6c <__divsf3x>
    4764:	0c 94 8b 22 	jmp	0x4516	; 0x4516 <__fp_round>

Disassembly of section .text:

00002c6c <__divsf3x>:
    2c6c:	10 c0       	rjmp	.+32     	; 0x2c8e <__divsf3x+0x22>
    2c6e:	0e 94 8a 23 	call	0x4714	; 0x4714 <__fp_pscB>
    2c72:	58 f0       	brcs	.+22     	; 0x2c8a <__divsf3x+0x1e>
    2c74:	0e 94 83 23 	call	0x4706	; 0x4706 <__fp_pscA>
    2c78:	40 f0       	brcs	.+16     	; 0x2c8a <__divsf3x+0x1e>
    2c7a:	29 f4       	brne	.+10     	; 0x2c86 <__divsf3x+0x1a>
    2c7c:	5f 3f       	cpi	r21, 0xFF	; 255
    2c7e:	29 f0       	breq	.+10     	; 0x2c8a <__divsf3x+0x1e>
    2c80:	0c 94 98 23 	jmp	0x4730	; 0x4730 <__fp_inf>
    2c84:	51 11       	cpse	r21, r1
    2c86:	0c 94 92 23 	jmp	0x4724	; 0x4724 <__fp_szero>
    2c8a:	0c 94 b8 23 	jmp	0x4770	; 0x4770 <__fp_nan>
    2c8e:	0e 94 b8 20 	call	0x4170	; 0x4170 <__fp_split3>
    2c92:	68 f3       	brcs	.-38     	; 0x2c6e <__divsf3x+0x2>

00002c94 <__divsf3_pse>:
    2c94:	99 23       	and	r25, r25
    2c96:	b1 f3       	breq	.-20     	; 0x2c84 <__divsf3x+0x18>
    2c98:	55 23       	and	r21, r21
    2c9a:	91 f3       	breq	.-28     	; 0x2c80 <__divsf3x+0x14>
    2c9c:	95 1b       	sub	r25, r21
    2c9e:	55 0b       	sbc	r21, r21
    2ca0:	bb 27       	eor	r27, r27
    2ca2:	aa 27       	eor	r26, r26
    2ca4:	62 17       	cp	r22, r18
    2ca6:	73 07       	cpc	r23, r19
    2ca8:	84 07       	cpc	r24, r20
    2caa:	38 f0       	brcs	.+14     	; 0x2cba <__divsf3_pse+0x26>
    2cac:	9f 5f       	subi	r25, 0xFF	; 255
    2cae:	5f 4f       	sbci	r21, 0xFF	; 255
    2cb0:	22 0f       	add	r18, r18
    2cb2:	33 1f       	adc	r19, r19
    2cb4:	44 1f       	adc	r20, r20
    2cb6:	aa 1f       	adc	r26, r26
    2cb8:	a9 f3       	breq	.-22     	; 0x2ca4 <__divsf3_pse+0x10>
    2cba:	35 d0       	rcall	.+106    	; 0x2d26 <__divsf3_pse+0x92>
    2cbc:	0e 2e       	mov	r0, r30
    2cbe:	3a f0       	brmi	.+14     	; 0x2cce <__divsf3_pse+0x3a>
    2cc0:	e0 e8       	ldi	r30, 0x80	; 128
    2cc2:	32 d0       	rcall	.+100    	; 0x2d28 <__divsf3_pse+0x94>
    2cc4:	91 50       	subi	r25, 0x01	; 1
    2cc6:	50 40       	sbci	r21, 0x00	; 0
    2cc8:	e6 95       	lsr	r30
    2cca:	00 1c       	adc	r0, r0
    2ccc:	ca f7       	brpl	.-14     	; 0x2cc0 <__divsf3_pse+0x2c>
    2cce:	2b d0       	rcall	.+86     	; 0x2d26 <__divsf3_pse+0x92>
    2cd0:	fe 2f       	mov	r31, r30
    2cd2:	29 d0       	rcall	.+82     	; 0x2d26 <__divsf3_pse+0x92>
    2cd4:	66 0f       	add	r22, r22
    2cd6:	77 1f       	adc	r23, r23
    2cd8:	88 1f       	adc	r24, r24
    2cda:	bb 1f       	adc	r27, r27
    2cdc:	26 17       	cp	r18, r22
    2cde:	37 07       	cpc	r19, r23
    2ce0:	48 07       	cpc	r20, r24
    2ce2:	ab 07       	cpc	r26, r27
    2ce4:	b0 e8       	ldi	r27, 0x80	; 128
    2ce6:	09 f0       	breq	.+2      	; 0x2cea <__divsf3_pse+0x56>
    2ce8:	bb 0b       	sbc	r27, r27
    2cea:	80 2d       	mov	r24, r0
    2cec:	bf 01       	movw	r22, r30
    2cee:	ff 27       	eor	r31, r31
    2cf0:	93 58       	subi	r25, 0x83	; 131
    2cf2:	5f 4f       	sbci	r21, 0xFF	; 255
    2cf4:	3a f0       	brmi	.+14     	; 0x2d04 <__divsf3_pse+0x70>
    2cf6:	9e 3f       	cpi	r25, 0xFE	; 254
    2cf8:	51 05       	cpc	r21, r1
    2cfa:	78 f0       	brcs	.+30     	; 0x2d1a <__divsf3_pse+0x86>
    2cfc:	0c 94 98 23 	jmp	0x4730	; 0x4730 <__fp_inf>
    2d00:	0c 94 92 23 	jmp	0x4724	; 0x4724 <__fp_szero>
    2d04:	5f 3f       	cpi	r21, 0xFF	; 255
    2d06:	e4 f3       	brlt	.-8      	; 0x2d00 <__divsf3_pse+0x6c>
    2d08:	98 3e       	cpi	r25, 0xE8	; 232
    2d0a:	d4 f3       	brlt	.-12     	; 0x2d00 <__divsf3_pse+0x6c>
    2d0c:	86 95       	lsr	r24
    2d0e:	77 95       	ror	r23
    2d10:	67 95       	ror	r22
    2d12:	b7 95       	ror	r27
    2d14:	f7 95       	ror	r31
    2d16:	9f 5f       	subi	r25, 0xFF	; 255
    2d18:	c9 f7       	brne	.-14     	; 0x2d0c <__divsf3_pse+0x78>
    2d1a:	88 0f       	add	r24, r24
    2d1c:	91 1d       	adc	r25, r1
    2d1e:	96 95       	lsr	r25
    2d20:	87 95       	ror	r24
    2d22:	97 f9       	bld	r25, 7
    2d24:	08 95       	ret
    2d26:	e1 e0       	ldi	r30, 0x01	; 1
    2d28:	66 0f       	add	r22, r22
    2d2a:	77 1f       	adc	r23, r23
    2d2c:	88 1f       	adc	r24, r24
    2d2e:	bb 1f       	adc	r27, r27
    2d30:	62 17       	cp	r22, r18
    2d32:	73 07       	cpc	r23, r19
    2d34:	84 07       	cpc	r24, r20
    2d36:	ba 07       	cpc	r27, r26
    2d38:	20 f0       	brcs	.+8      	; 0x2d42 <__divsf3_pse+0xae>
    2d3a:	62 1b       	sub	r22, r18
    2d3c:	73 0b       	sbc	r23, r19
    2d3e:	84 0b       	sbc	r24, r20
    2d40:	ba 0b       	sbc	r27, r26
    2d42:	ee 1f       	adc	r30, r30
    2d44:	88 f7       	brcc	.-30     	; 0x2d28 <__divsf3_pse+0x94>
    2d46:	e0 95       	com	r30
    2d48:	08 95       	ret

Disassembly of section .text:

000046f8 <__fixsfsi>:
    46f8:	0e 94 a1 1f 	call	0x3f42	; 0x3f42 <__fixunssfsi>
    46fc:	68 94       	set
    46fe:	b1 11       	cpse	r27, r1
    4700:	0c 94 92 23 	jmp	0x4724	; 0x4724 <__fp_szero>
    4704:	08 95       	ret

Disassembly of section .text:

00003f42 <__fixunssfsi>:
    3f42:	0e 94 c0 20 	call	0x4180	; 0x4180 <__fp_splitA>
    3f46:	88 f0       	brcs	.+34     	; 0x3f6a <__fixunssfsi+0x28>
    3f48:	9f 57       	subi	r25, 0x7F	; 127
    3f4a:	98 f0       	brcs	.+38     	; 0x3f72 <__fixunssfsi+0x30>
    3f4c:	b9 2f       	mov	r27, r25
    3f4e:	99 27       	eor	r25, r25
    3f50:	b7 51       	subi	r27, 0x17	; 23
    3f52:	b0 f0       	brcs	.+44     	; 0x3f80 <__fixunssfsi+0x3e>
    3f54:	e1 f0       	breq	.+56     	; 0x3f8e <__fixunssfsi+0x4c>
    3f56:	66 0f       	add	r22, r22
    3f58:	77 1f       	adc	r23, r23
    3f5a:	88 1f       	adc	r24, r24
    3f5c:	99 1f       	adc	r25, r25
    3f5e:	1a f0       	brmi	.+6      	; 0x3f66 <__fixunssfsi+0x24>
    3f60:	ba 95       	dec	r27
    3f62:	c9 f7       	brne	.-14     	; 0x3f56 <__fixunssfsi+0x14>
    3f64:	14 c0       	rjmp	.+40     	; 0x3f8e <__fixunssfsi+0x4c>
    3f66:	b1 30       	cpi	r27, 0x01	; 1
    3f68:	91 f0       	breq	.+36     	; 0x3f8e <__fixunssfsi+0x4c>
    3f6a:	0e 94 91 23 	call	0x4722	; 0x4722 <__fp_zero>
    3f6e:	b1 e0       	ldi	r27, 0x01	; 1
    3f70:	08 95       	ret
    3f72:	0c 94 91 23 	jmp	0x4722	; 0x4722 <__fp_zero>
    3f76:	67 2f       	mov	r22, r23
    3f78:	78 2f       	mov	r23, r24
    3f7a:	88 27       	eor	r24, r24
    3f7c:	b8 5f       	subi	r27, 0xF8	; 248
    3f7e:	39 f0       	breq	.+14     	; 0x3f8e <__fixunssfsi+0x4c>
    3f80:	b9 3f       	cpi	r27, 0xF9	; 249
    3f82:	cc f3       	brlt	.-14     	; 0x3f76 <__fixunssfsi+0x34>
    3f84:	86 95       	lsr	r24
    3f86:	77 95       	ror	r23
    3f88:	67 95       	ror	r22
    3f8a:	b3 95       	inc	r27
    3f8c:	d9 f7       	brne	.-10     	; 0x3f84 <__fixunssfsi+0x42>
    3f8e:	3e f4       	brtc	.+14     	; 0x3f9e <__fixunssfsi+0x5c>
    3f90:	90 95       	com	r25
    3f92:	80 95       	com	r24
    3f94:	70 95       	com	r23
    3f96:	61 95       	neg	r22
    3f98:	7f 4f       	sbci	r23, 0xFF	; 255
    3f9a:	8f 4f       	sbci	r24, 0xFF	; 255
    3f9c:	9f 4f       	sbci	r25, 0xFF	; 255
    3f9e:	08 95       	ret

Disassembly of section .text:

000040e4 <__fp_cmp>:
    40e4:	99 0f       	add	r25, r25
    40e6:	00 08       	sbc	r0, r0
    40e8:	55 0f       	add	r21, r21
    40ea:	aa 0b       	sbc	r26, r26
    40ec:	e0 e8       	ldi	r30, 0x80	; 128
    40ee:	fe ef       	ldi	r31, 0xFE	; 254
    40f0:	16 16       	cp	r1, r22
    40f2:	17 06       	cpc	r1, r23
    40f4:	e8 07       	cpc	r30, r24
    40f6:	f9 07       	cpc	r31, r25
    40f8:	c0 f0       	brcs	.+48     	; 0x412a <__fp_cmp+0x46>
    40fa:	12 16       	cp	r1, r18
    40fc:	13 06       	cpc	r1, r19
    40fe:	e4 07       	cpc	r30, r20
    4100:	f5 07       	cpc	r31, r21
    4102:	98 f0       	brcs	.+38     	; 0x412a <__fp_cmp+0x46>
    4104:	62 1b       	sub	r22, r18
    4106:	73 0b       	sbc	r23, r19
    4108:	84 0b       	sbc	r24, r20
    410a:	95 0b       	sbc	r25, r21
    410c:	39 f4       	brne	.+14     	; 0x411c <__fp_cmp+0x38>
    410e:	0a 26       	eor	r0, r26
    4110:	61 f0       	breq	.+24     	; 0x412a <__fp_cmp+0x46>
    4112:	23 2b       	or	r18, r19
    4114:	24 2b       	or	r18, r20
    4116:	25 2b       	or	r18, r21
    4118:	21 f4       	brne	.+8      	; 0x4122 <__fp_cmp+0x3e>
    411a:	08 95       	ret
    411c:	0a 26       	eor	r0, r26
    411e:	09 f4       	brne	.+2      	; 0x4122 <__fp_cmp+0x3e>
    4120:	a1 40       	sbci	r26, 0x01	; 1
    4122:	a6 95       	lsr	r26
    4124:	8f ef       	ldi	r24, 0xFF	; 255
    4126:	81 1d       	adc	r24, r1
    4128:	81 1d       	adc	r24, r1
    412a:	08 95       	ret

Disassembly of section .text:

00004730 <__fp_inf>:
    4730:	97 f9       	bld	r25, 7
    4732:	9f 67       	ori	r25, 0x7F	; 127
    4734:	80 e8       	ldi	r24, 0x80	; 128
    4736:	70 e0       	ldi	r23, 0x00	; 0
    4738:	60 e0       	ldi	r22, 0x00	; 0
    473a:	08 95       	ret

Disassembly of section .text:

00004770 <__fp_nan>:
    4770:	9f ef       	ldi	r25, 0xFF	; 255
    4772:	80 ec       	ldi	r24, 0xC0	; 192
    4774:	08 95       	ret

Disassembly of section .text:

00004706 <__fp_pscA>:
    4706:	00 24       	eor	r0, r0
    4708:	0a 94       	dec	r0
    470a:	16 16       	cp	r1, r22
    470c:	17 06       	cpc	r1, r23
    470e:	18 06       	cpc	r1, r24
    4710:	09 06       	cpc	r0, r25
    4712:	08 95       	ret

Disassembly of section .text:

00004714 <__fp_pscB>:
    4714:	00 24       	eor	r0, r0
    4716:	0a 94       	dec	r0
    4718:	12 16       	cp	r1, r18
    471a:	13 06       	cpc	r1, r19
    471c:	14 06       	cpc	r1, r20
    471e:	05 06       	cpc	r0, r21
    4720:	08 95       	ret

Disassembly of section .text:

00004516 <__fp_round>:
    4516:	09 2e       	mov	r0, r25
    4518:	03 94       	inc	r0
    451a:	00 0c       	add	r0, r0
    451c:	11 f4       	brne	.+4      	; 0x4522 <__fp_round+0xc>
    451e:	88 23       	and	r24, r24
    4520:	52 f0       	brmi	.+20     	; 0x4536 <__fp_round+0x20>
    4522:	bb 0f       	add	r27, r27
    4524:	40 f4       	brcc	.+16     	; 0x4536 <__fp_round+0x20>
    4526:	bf 2b       	or	r27, r31
    4528:	11 f4       	brne	.+4      	; 0x452e <__fp_round+0x18>
    452a:	60 ff       	sbrs	r22, 0
    452c:	04 c0       	rjmp	.+8      	; 0x4536 <__fp_round+0x20>
    452e:	6f 5f       	subi	r22, 0xFF	; 255
    4530:	7f 4f       	sbci	r23, 0xFF	; 255
    4532:	8f 4f       	sbci	r24, 0xFF	; 255
    4534:	9f 4f       	sbci	r25, 0xFF	; 255
    4536:	08 95       	ret

Disassembly of section .text:

00004170 <__fp_split3>:
    4170:	57 fd       	sbrc	r21, 7
    4172:	90 58       	subi	r25, 0x80	; 128
    4174:	44 0f       	add	r20, r20
    4176:	55 1f       	adc	r21, r21
    4178:	59 f0       	breq	.+22     	; 0x4190 <__fp_splitA+0x10>
    417a:	5f 3f       	cpi	r21, 0xFF	; 255
    417c:	71 f0       	breq	.+28     	; 0x419a <__fp_splitA+0x1a>
    417e:	47 95       	ror	r20

00004180 <__fp_splitA>:
    4180:	88 0f       	add	r24, r24
    4182:	97 fb       	bst	r25, 7
    4184:	99 1f       	adc	r25, r25
    4186:	61 f0       	breq	.+24     	; 0x41a0 <__fp_splitA+0x20>
    4188:	9f 3f       	cpi	r25, 0xFF	; 255
    418a:	79 f0       	breq	.+30     	; 0x41aa <__fp_splitA+0x2a>
    418c:	87 95       	ror	r24
    418e:	08 95       	ret
    4190:	12 16       	cp	r1, r18
    4192:	13 06       	cpc	r1, r19
    4194:	14 06       	cpc	r1, r20
    4196:	55 1f       	adc	r21, r21
    4198:	f2 cf       	rjmp	.-28     	; 0x417e <__fp_split3+0xe>
    419a:	46 95       	lsr	r20
    419c:	f1 df       	rcall	.-30     	; 0x4180 <__fp_splitA>
    419e:	08 c0       	rjmp	.+16     	; 0x41b0 <__fp_splitA+0x30>
    41a0:	16 16       	cp	r1, r22
    41a2:	17 06       	cpc	r1, r23
    41a4:	18 06       	cpc	r1, r24
    41a6:	99 1f       	adc	r25, r25
    41a8:	f1 cf       	rjmp	.-30     	; 0x418c <__fp_splitA+0xc>
    41aa:	86 95       	lsr	r24
    41ac:	71 05       	cpc	r23, r1
    41ae:	61 05       	cpc	r22, r1
    41b0:	08 94       	sec
    41b2:	08 95       	ret

Disassembly of section .text:

00004722 <__fp_zero>:
    4722:	e8 94       	clt

00004724 <__fp_szero>:
    4724:	bb 27       	eor	r27, r27
    4726:	66 27       	eor	r22, r22
    4728:	77 27       	eor	r23, r23
    472a:	cb 01       	movw	r24, r22
    472c:	97 f9       	bld	r25, 7
    472e:	08 95       	ret

Disassembly of section .text:

00004746 <__gesf2>:
    4746:	0e 94 72 20 	call	0x40e4	; 0x40e4 <__fp_cmp>
    474a:	08 f4       	brcc	.+2      	; 0x474e <__gesf2+0x8>
    474c:	8f ef       	ldi	r24, 0xFF	; 255
    474e:	08 95       	ret

Disassembly of section .text:

00004768 <__mulsf3>:
    4768:	0e 94 7b 17 	call	0x2ef6	; 0x2ef6 <__mulsf3x>
    476c:	0c 94 8b 22 	jmp	0x4516	; 0x4516 <__fp_round>

Disassembly of section .text:

00002ef6 <__mulsf3x>:
    2ef6:	0f c0       	rjmp	.+30     	; 0x2f16 <__mulsf3x+0x20>
    2ef8:	0e 94 83 23 	call	0x4706	; 0x4706 <__fp_pscA>
    2efc:	38 f0       	brcs	.+14     	; 0x2f0c <__mulsf3x+0x16>
    2efe:	0e 94 8a 23 	call	0x4714	; 0x4714 <__fp_pscB>
    2f02:	20 f0       	brcs	.+8      	; 0x2f0c <__mulsf3x+0x16>
    2f04:	95 23       	and	r25, r21
    2f06:	11 f0       	breq	.+4      	; 0x2f0c <__mulsf3x+0x16>
    2f08:	0c 94 98 23 	jmp	0x4730	; 0x4730 <__fp_inf>
    2f0c:	0c 94 b8 23 	jmp	0x4770	; 0x4770 <__fp_nan>
    2f10:	11 24       	eor	r1, r1
    2f12:	0c 94 92 23 	jmp	0x4724	; 0x4724 <__fp_szero>
    2f16:	0e 94 b8 20 	call	0x4170	; 0x4170 <__fp_split3>
    2f1a:	70 f3       	brcs	.-36     	; 0x2ef8 <__mulsf3x+0x2>

00002f1c <__mulsf3_pse>:
    2f1c:	95 9f       	mul	r25, r21
    2f1e:	c1 f3       	breq	.-16     	; 0x2f10 <__mulsf3x+0x1a>
    2f20:	95 0f       	add	r25, r21
    2f22:	50 e0       	ldi	r21, 0x00	; 0
    2f24:	55 1f       	adc	r21, r21
    2f26:	62 9f       	mul	r22, r18
    2f28:	f0 01       	movw	r30, r0
    2f2a:	72 9f       	mul	r23, r18
    2f2c:	bb 27       	eor	r27, r27
    2f2e:	f0 0d       	add	r31, r0
    2f30:	b1 1d       	adc	r27, r1
    2f32:	63 9f       	mul	r22, r19
    2f34:	aa 27       	eor	r26, r26
    2f36:	f0 0d       	add	r31, r0
    2f38:	b1 1d       	adc	r27, r1
    2f3a:	aa 1f       	adc	r26, r26
    2f3c:	64 9f       	mul	r22, r20
    2f3e:	66 27       	eor	r22, r22
    2f40:	b0 0d       	add	r27, r0
    2f42:	a1 1d       	adc	r26, r1
    2f44:	66 1f       	adc	r22, r22
    2f46:	82 9f       	mul	r24, r18
    2f48:	22 27       	eor	r18, r18
    2f4a:	b0 0d       	add	r27, r0
    2f4c:	a1 1d       	adc	r26, r1
    2f4e:	62 1f       	adc	r22, r18
    2f50:	73 9f       	mul	r23, r19
    2f52:	b0 0d       	add	r27, r0
    2f54:	a1 1d       	adc	r26, r1
    2f56:	62 1f       	adc	r22, r18
    2f58:	83 9f       	mul	r24, r19
    2f5a:	a0 0d       	add	r26, r0
    2f5c:	61 1d       	adc	r22, r1
    2f5e:	22 1f       	adc	r18, r18
    2f60:	74 9f       	mul	r23, r20
    2f62:	33 27       	eor	r19, r19
    2f64:	a0 0d       	add	r26, r0
    2f66:	61 1d       	adc	r22, r1
    2f68:	23 1f       	adc	r18, r19
    2f6a:	84 9f       	mul	r24, r20
    2f6c:	60 0d       	add	r22, r0
    2f6e:	21 1d       	adc	r18, r1
    2f70:	82 2f       	mov	r24, r18
    2f72:	76 2f       	mov	r23, r22
    2f74:	6a 2f       	mov	r22, r26
    2f76:	11 24       	eor	r1, r1
    2f78:	9f 57       	subi	r25, 0x7F	; 127
    2f7a:	50 40       	sbci	r21, 0x00	; 0
    2f7c:	9a f0       	brmi	.+38     	; 0x2fa4 <__mulsf3_pse+0x88>
    2f7e:	f1 f0       	breq	.+60     	; 0x2fbc <__mulsf3_pse+0xa0>
    2f80:	88 23       	and	r24, r24
    2f82:	4a f0       	brmi	.+18     	; 0x2f96 <__mulsf3_pse+0x7a>
    2f84:	ee 0f       	add	r30, r30
    2f86:	ff 1f       	adc	r31, r31
    2f88:	bb 1f       	adc	r27, r27
    2f8a:	66 1f       	adc	r22, r22
    2f8c:	77 1f       	adc	r23, r23
    2f8e:	88 1f       	adc	r24, r24
    2f90:	91 50       	subi	r25, 0x01	; 1
    2f92:	50 40       	sbci	r21, 0x00	; 0
    2f94:	a9 f7       	brne	.-22     	; 0x2f80 <__mulsf3_pse+0x64>
    2f96:	9e 3f       	cpi	r25, 0xFE	; 254
    2f98:	51 05       	cpc	r21, r1
    2f9a:	80 f0       	brcs	.+32     	; 0x2fbc <__mulsf3_pse+0xa0>
    2f9c:	0c 94 98 23 	jmp	0x4730	; 0x4730 <__fp_inf>
    2fa0:	0c 94 92 23 	jmp	0x4724	; 0x4724 <__fp_szero>
    2fa4:	5f 3f       	cpi	r21, 0xFF	; 255
    2fa6:	e4 f3       	brlt	.-8      	; 0x2fa0 <__mulsf3_pse+0x84>
    2fa8:	98 3e       	cpi	r25, 0xE8	; 232
    2faa:	d4 f3       	brlt	.-12     	; 0x2fa0 <__mulsf3_pse+0x84>
    2fac:	86 95       	lsr	r24
    2fae:	77 95       	ror	r23
    2fb0:	67 95       	ror	r22
    2fb2:	b7 95       	ror	r27
    2fb4:	f7 95       	ror	r31
    2fb6:	e7 95       	ror	r30
    2fb8:	9f 5f       	subi	r25, 0xFF	; 255
    2fba:	c1 f7       	brne	.-16     	; 0x2fac <__mulsf3_pse+0x90>
    2fbc:	fe 2b       	or	r31, r30
    2fbe:	88 0f       	add	r24, r24
    2fc0:	91 1d       	adc	r25, r1
    2fc2:	96 95       	lsr	r25
    2fc4:	87 95       	ror	r24
    2fc6:	97 f9       	bld	r25, 7
    2fc8:	08 95       	ret

Disassembly of section .text.floorf:

00002a2c <floorf>:
    2a2c:	4f 92       	push	r4
    2a2e:	5f 92       	push	r5
    2a30:	6f 92       	push	r6
    2a32:	7f 92       	push	r7
    2a34:	8f 92       	push	r8
    2a36:	9f 92       	push	r9
    2a38:	af 92       	push	r10
    2a3a:	bf 92       	push	r11
    2a3c:	cf 92       	push	r12
    2a3e:	df 92       	push	r13
    2a40:	ef 92       	push	r14
    2a42:	ff 92       	push	r15
    2a44:	cf 93       	push	r28
    2a46:	df 93       	push	r29
    2a48:	cd b7       	in	r28, 0x3d	; 61
    2a4a:	de b7       	in	r29, 0x3e	; 62
    2a4c:	28 97       	sbiw	r28, 0x08	; 8
    2a4e:	0f b6       	in	r0, 0x3f	; 63
    2a50:	f8 94       	cli
    2a52:	de bf       	out	0x3e, r29	; 62
    2a54:	0f be       	out	0x3f, r0	; 63
    2a56:	cd bf       	out	0x3d, r28	; 61
    2a58:	6b 01       	movw	r12, r22
    2a5a:	7c 01       	movw	r14, r24
    2a5c:	dc 01       	movw	r26, r24
    2a5e:	cb 01       	movw	r24, r22
    2a60:	47 e1       	ldi	r20, 0x17	; 23
    2a62:	b6 95       	lsr	r27
    2a64:	a7 95       	ror	r26
    2a66:	97 95       	ror	r25
    2a68:	87 95       	ror	r24
    2a6a:	4a 95       	dec	r20
    2a6c:	d1 f7       	brne	.-12     	; 0x2a62 <floorf+0x36>
    2a6e:	99 27       	eor	r25, r25
    2a70:	8f 57       	subi	r24, 0x7F	; 127
    2a72:	91 09       	sbc	r25, r1
    2a74:	87 31       	cpi	r24, 0x17	; 23
    2a76:	91 05       	cpc	r25, r1
    2a78:	9c f5       	brge	.+102    	; 0x2ae0 <floorf+0xb4>
    2a7a:	97 fd       	sbrc	r25, 7
    2a7c:	36 c0       	rjmp	.+108    	; 0x2aea <floorf+0xbe>
    2a7e:	88 24       	eor	r8, r8
    2a80:	8a 94       	dec	r8
    2a82:	98 2c       	mov	r9, r8
    2a84:	3f e7       	ldi	r19, 0x7F	; 127
    2a86:	a3 2e       	mov	r10, r19
    2a88:	b1 2c       	mov	r11, r1
    2a8a:	04 c0       	rjmp	.+8      	; 0x2a94 <floorf+0x68>
    2a8c:	b5 94       	asr	r11
    2a8e:	a7 94       	ror	r10
    2a90:	97 94       	ror	r9
    2a92:	87 94       	ror	r8
    2a94:	8a 95       	dec	r24
    2a96:	d2 f7       	brpl	.-12     	; 0x2a8c <floorf+0x60>
    2a98:	d5 01       	movw	r26, r10
    2a9a:	c4 01       	movw	r24, r8
    2a9c:	8c 21       	and	r24, r12
    2a9e:	9d 21       	and	r25, r13
    2aa0:	ae 21       	and	r26, r14
    2aa2:	bf 21       	and	r27, r15
    2aa4:	89 2b       	or	r24, r25
    2aa6:	8a 2b       	or	r24, r26
    2aa8:	8b 2b       	or	r24, r27
    2aaa:	d1 f0       	breq	.+52     	; 0x2ae0 <floorf+0xb4>
    2aac:	20 e0       	ldi	r18, 0x00	; 0
    2aae:	30 e0       	ldi	r19, 0x00	; 0
    2ab0:	40 e8       	ldi	r20, 0x80	; 128
    2ab2:	5b e7       	ldi	r21, 0x7B	; 123
    2ab4:	c7 01       	movw	r24, r14
    2ab6:	b6 01       	movw	r22, r12
    2ab8:	0e 94 76 23 	call	0x46ec	; 0x46ec <__addsf3>
    2abc:	6d 83       	std	Y+5, r22	; 0x05
    2abe:	7e 83       	std	Y+6, r23	; 0x06
    2ac0:	8f 83       	std	Y+7, r24	; 0x07
    2ac2:	98 87       	std	Y+8, r25	; 0x08
    2ac4:	f7 fe       	sbrs	r15, 7
    2ac6:	04 c0       	rjmp	.+8      	; 0x2ad0 <floorf+0xa4>
    2ac8:	c8 0c       	add	r12, r8
    2aca:	d9 1c       	adc	r13, r9
    2acc:	ea 1c       	adc	r14, r10
    2ace:	fb 1c       	adc	r15, r11
    2ad0:	80 94       	com	r8
    2ad2:	90 94       	com	r9
    2ad4:	a0 94       	com	r10
    2ad6:	b0 94       	com	r11
    2ad8:	c8 20       	and	r12, r8
    2ada:	d9 20       	and	r13, r9
    2adc:	ea 20       	and	r14, r10
    2ade:	fb 20       	and	r15, r11
    2ae0:	5c 2d       	mov	r21, r12
    2ae2:	4d 2d       	mov	r20, r13
    2ae4:	3e 2d       	mov	r19, r14
    2ae6:	2f 2d       	mov	r18, r15
    2ae8:	21 c0       	rjmp	.+66     	; 0x2b2c <floorf+0x100>
    2aea:	20 e0       	ldi	r18, 0x00	; 0
    2aec:	30 e0       	ldi	r19, 0x00	; 0
    2aee:	40 e8       	ldi	r20, 0x80	; 128
    2af0:	5b e7       	ldi	r21, 0x7B	; 123
    2af2:	c7 01       	movw	r24, r14
    2af4:	b6 01       	movw	r22, r12
    2af6:	0e 94 76 23 	call	0x46ec	; 0x46ec <__addsf3>
    2afa:	69 83       	std	Y+1, r22	; 0x01
    2afc:	7a 83       	std	Y+2, r23	; 0x02
    2afe:	8b 83       	std	Y+3, r24	; 0x03
    2b00:	9c 83       	std	Y+4, r25	; 0x04
    2b02:	f7 fe       	sbrs	r15, 7
    2b04:	0f c0       	rjmp	.+30     	; 0x2b24 <floorf+0xf8>
    2b06:	d7 01       	movw	r26, r14
    2b08:	c6 01       	movw	r24, r12
    2b0a:	88 0f       	add	r24, r24
    2b0c:	99 1f       	adc	r25, r25
    2b0e:	aa 1f       	adc	r26, r26
    2b10:	bb 1f       	adc	r27, r27
    2b12:	89 2b       	or	r24, r25
    2b14:	8a 2b       	or	r24, r26
    2b16:	8b 2b       	or	r24, r27
    2b18:	19 f3       	breq	.-58     	; 0x2ae0 <floorf+0xb4>
    2b1a:	50 e0       	ldi	r21, 0x00	; 0
    2b1c:	40 e0       	ldi	r20, 0x00	; 0
    2b1e:	30 e8       	ldi	r19, 0x80	; 128
    2b20:	2f eb       	ldi	r18, 0xBF	; 191
    2b22:	04 c0       	rjmp	.+8      	; 0x2b2c <floorf+0x100>
    2b24:	50 e0       	ldi	r21, 0x00	; 0
    2b26:	40 e0       	ldi	r20, 0x00	; 0
    2b28:	30 e0       	ldi	r19, 0x00	; 0
    2b2a:	20 e0       	ldi	r18, 0x00	; 0
    2b2c:	65 2f       	mov	r22, r21
    2b2e:	74 2f       	mov	r23, r20
    2b30:	83 2f       	mov	r24, r19
    2b32:	92 2f       	mov	r25, r18
    2b34:	28 96       	adiw	r28, 0x08	; 8
    2b36:	0f b6       	in	r0, 0x3f	; 63
    2b38:	f8 94       	cli
    2b3a:	de bf       	out	0x3e, r29	; 62
    2b3c:	0f be       	out	0x3f, r0	; 63
    2b3e:	cd bf       	out	0x3d, r28	; 61
    2b40:	df 91       	pop	r29
    2b42:	cf 91       	pop	r28
    2b44:	ff 90       	pop	r15
    2b46:	ef 90       	pop	r14
    2b48:	df 90       	pop	r13
    2b4a:	cf 90       	pop	r12
    2b4c:	bf 90       	pop	r11
    2b4e:	af 90       	pop	r10
    2b50:	9f 90       	pop	r9
    2b52:	8f 90       	pop	r8
    2b54:	7f 90       	pop	r7
    2b56:	6f 90       	pop	r6
    2b58:	5f 90       	pop	r5
    2b5a:	4f 90       	pop	r4
    2b5c:	08 95       	ret

Disassembly of section .text.fmaf:

000028f0 <fmaf>:
    28f0:	a5 e1       	ldi	r26, 0x15	; 21
    28f2:	b0 e0       	ldi	r27, 0x00	; 0
    28f4:	ee e7       	ldi	r30, 0x7E	; 126
    28f6:	f4 e1       	ldi	r31, 0x14	; 20
    28f8:	0c 94 37 21 	jmp	0x426e	; 0x426e <__prologue_saves__>
    28fc:	47 01       	movw	r8, r14
    28fe:	58 01       	movw	r10, r16
    2900:	0e 94 b4 23 	call	0x4768	; 0x4768 <__mulsf3>
    2904:	2b 01       	movw	r4, r22
    2906:	3c 01       	movw	r6, r24
    2908:	a8 01       	movw	r20, r16
    290a:	97 01       	movw	r18, r14
    290c:	0e 94 76 23 	call	0x46ec	; 0x46ec <__addsf3>
    2910:	16 2f       	mov	r17, r22
    2912:	c7 2e       	mov	r12, r23
    2914:	d8 2e       	mov	r13, r24
    2916:	f9 2e       	mov	r15, r25
    2918:	86 2f       	mov	r24, r22
    291a:	9c 2d       	mov	r25, r12
    291c:	ad 2d       	mov	r26, r13
    291e:	bf 2d       	mov	r27, r15
    2920:	89 83       	std	Y+1, r24	; 0x01
    2922:	9a 83       	std	Y+2, r25	; 0x02
    2924:	ab 83       	std	Y+3, r26	; 0x03
    2926:	bc 83       	std	Y+4, r27	; 0x04
    2928:	aa 81       	ldd	r26, Y+2	; 0x02
    292a:	fb 81       	ldd	r31, Y+3	; 0x03
    292c:	ec 81       	ldd	r30, Y+4	; 0x04
    292e:	ed 80       	ldd	r14, Y+5	; 0x05
    2930:	3e 80       	ldd	r3, Y+6	; 0x06
    2932:	2f 80       	ldd	r2, Y+7	; 0x07
    2934:	08 85       	ldd	r16, Y+8	; 0x08
    2936:	0d 8b       	std	Y+21, r16	; 0x15
    2938:	5e 2f       	mov	r21, r30
    293a:	5f 71       	andi	r21, 0x1F	; 31
    293c:	21 2f       	mov	r18, r17
    293e:	3a 2f       	mov	r19, r26
    2940:	4f 2f       	mov	r20, r31
    2942:	60 e0       	ldi	r22, 0x00	; 0
    2944:	70 e0       	ldi	r23, 0x00	; 0
    2946:	80 e0       	ldi	r24, 0x00	; 0
    2948:	90 e0       	ldi	r25, 0x00	; 0
    294a:	21 15       	cp	r18, r1
    294c:	31 05       	cpc	r19, r1
    294e:	41 05       	cpc	r20, r1
    2950:	00 e1       	ldi	r16, 0x10	; 16
    2952:	50 07       	cpc	r21, r16
    2954:	61 05       	cpc	r22, r1
    2956:	71 05       	cpc	r23, r1
    2958:	81 05       	cpc	r24, r1
    295a:	91 05       	cpc	r25, r1
    295c:	09 f0       	breq	.+2      	; 0x2960 <fmaf+0x70>
    295e:	5e c0       	rjmp	.+188    	; 0x2a1c <fmaf+0x12c>
    2960:	5e 2f       	mov	r21, r30
    2962:	6e 2d       	mov	r22, r14
    2964:	73 2d       	mov	r23, r3
    2966:	82 2d       	mov	r24, r2
    2968:	9d 89       	ldd	r25, Y+21	; 0x15
    296a:	04 e3       	ldi	r16, 0x34	; 52
    296c:	0e 94 1b 21 	call	0x4236	; 0x4236 <__lshrdi3>
    2970:	2d 87       	std	Y+13, r18	; 0x0d
    2972:	3e 87       	std	Y+14, r19	; 0x0e
    2974:	4f 87       	std	Y+15, r20	; 0x0f
    2976:	58 8b       	std	Y+16, r21	; 0x10
    2978:	69 8b       	std	Y+17, r22	; 0x11
    297a:	7a 8b       	std	Y+18, r23	; 0x12
    297c:	8b 8b       	std	Y+19, r24	; 0x13
    297e:	9c 8b       	std	Y+20, r25	; 0x14
    2980:	8d 85       	ldd	r24, Y+13	; 0x0d
    2982:	9e 85       	ldd	r25, Y+14	; 0x0e
    2984:	97 70       	andi	r25, 0x07	; 7
    2986:	8f 3f       	cpi	r24, 0xFF	; 255
    2988:	97 40       	sbci	r25, 0x07	; 7
    298a:	09 f4       	brne	.+2      	; 0x298e <fmaf+0x9e>
    298c:	47 c0       	rjmp	.+142    	; 0x2a1c <fmaf+0x12c>
    298e:	a3 01       	movw	r20, r6
    2990:	92 01       	movw	r18, r4
    2992:	61 2f       	mov	r22, r17
    2994:	7c 2d       	mov	r23, r12
    2996:	8d 2d       	mov	r24, r13
    2998:	9f 2d       	mov	r25, r15
    299a:	0e 94 75 23 	call	0x46ea	; 0x46ea <__subsf3>
    299e:	9b 01       	movw	r18, r22
    29a0:	ac 01       	movw	r20, r24
    29a2:	c5 01       	movw	r24, r10
    29a4:	b4 01       	movw	r22, r8
    29a6:	0e 94 9e 23 	call	0x473c	; 0x473c <__cmpsf2>
    29aa:	88 23       	and	r24, r24
    29ac:	b9 f1       	breq	.+110    	; 0x2a1c <fmaf+0x12c>
    29ae:	49 86       	std	Y+9, r4	; 0x09
    29b0:	5a 86       	std	Y+10, r5	; 0x0a
    29b2:	6b 86       	std	Y+11, r6	; 0x0b
    29b4:	7c 86       	std	Y+12, r7	; 0x0c
    29b6:	29 85       	ldd	r18, Y+9	; 0x09
    29b8:	3a 85       	ldd	r19, Y+10	; 0x0a
    29ba:	4b 85       	ldd	r20, Y+11	; 0x0b
    29bc:	5c 85       	ldd	r21, Y+12	; 0x0c
    29be:	c5 01       	movw	r24, r10
    29c0:	b4 01       	movw	r22, r8
    29c2:	0e 94 76 23 	call	0x46ec	; 0x46ec <__addsf3>
    29c6:	b6 2e       	mov	r11, r22
    29c8:	87 2e       	mov	r8, r23
    29ca:	98 2e       	mov	r9, r24
    29cc:	a9 2e       	mov	r10, r25
    29ce:	26 2f       	mov	r18, r22
    29d0:	37 2f       	mov	r19, r23
    29d2:	48 2f       	mov	r20, r24
    29d4:	59 2f       	mov	r21, r25
    29d6:	61 2f       	mov	r22, r17
    29d8:	7c 2d       	mov	r23, r12
    29da:	8d 2d       	mov	r24, r13
    29dc:	9f 2d       	mov	r25, r15
    29de:	0e 94 9e 23 	call	0x473c	; 0x473c <__cmpsf2>
    29e2:	81 11       	cpse	r24, r1
    29e4:	18 c0       	rjmp	.+48     	; 0x2a16 <fmaf+0x126>
    29e6:	2b 2d       	mov	r18, r11
    29e8:	8b 2d       	mov	r24, r11
    29ea:	98 2d       	mov	r25, r8
    29ec:	a9 2d       	mov	r26, r9
    29ee:	ba 2d       	mov	r27, r10
    29f0:	89 83       	std	Y+1, r24	; 0x01
    29f2:	9a 83       	std	Y+2, r25	; 0x02
    29f4:	ab 83       	std	Y+3, r26	; 0x03
    29f6:	bc 83       	std	Y+4, r27	; 0x04
    29f8:	3a 81       	ldd	r19, Y+2	; 0x02
    29fa:	4b 81       	ldd	r20, Y+3	; 0x03
    29fc:	5c 81       	ldd	r21, Y+4	; 0x04
    29fe:	6e 2d       	mov	r22, r14
    2a00:	73 2d       	mov	r23, r3
    2a02:	82 2d       	mov	r24, r2
    2a04:	9d 89       	ldd	r25, Y+21	; 0x15
    2a06:	a1 e0       	ldi	r26, 0x01	; 1
    2a08:	0e 94 16 23 	call	0x462c	; 0x462c <__adddi3_s8>
    2a0c:	12 2f       	mov	r17, r18
    2a0e:	c3 2e       	mov	r12, r19
    2a10:	d4 2e       	mov	r13, r20
    2a12:	f5 2e       	mov	r15, r21
    2a14:	03 c0       	rjmp	.+6      	; 0x2a1c <fmaf+0x12c>
    2a16:	1b 2d       	mov	r17, r11
    2a18:	64 01       	movw	r12, r8
    2a1a:	fa 2c       	mov	r15, r10
    2a1c:	61 2f       	mov	r22, r17
    2a1e:	7c 2d       	mov	r23, r12
    2a20:	8d 2d       	mov	r24, r13
    2a22:	9f 2d       	mov	r25, r15
    2a24:	65 96       	adiw	r28, 0x15	; 21
    2a26:	e2 e1       	ldi	r30, 0x12	; 18
    2a28:	0c 94 89 21 	jmp	0x4312	; 0x4312 <__epilogue_restores__>

Disassembly of section .text.libgcc:

0000462c <__adddi3_s8>:
    462c:	00 24       	eor	r0, r0
    462e:	a7 fd       	sbrc	r26, 7
    4630:	00 94       	com	r0
    4632:	2a 0f       	add	r18, r26
    4634:	30 1d       	adc	r19, r0
    4636:	40 1d       	adc	r20, r0
    4638:	50 1d       	adc	r21, r0
    463a:	60 1d       	adc	r22, r0
    463c:	70 1d       	adc	r23, r0
    463e:	80 1d       	adc	r24, r0
    4640:	90 1d       	adc	r25, r0
    4642:	08 95       	ret
